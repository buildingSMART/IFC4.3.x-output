{
  "Domain": {
    "Name": "IFC",
    "Version": "DIAGRAMS",
    "Classifications": {
      "IfcActuator": {
        "Parent": "IfcDistributionControlElement",
        "Description": "An actuator is a mechanical device for moving or controlling a mechanism or system. An actuator takes energy, usually created by air, electricity, or liquid, and converts that into some kind of motion.HISTORY  New entity in IFC4",
        "Psets": {
          "Pset_ActuatorTypeCommon": {
            "Properties": {
              "ActuatorApplication": {
                "type": "PEnum_ActuatorApplication",
                "Description": "Indicates application of actuator.",
                "values": [
                  "DAMPERACTUATOR",
                  "ENTRYEXITDEVICE",
                  "FIRESMOKEDAMPERACTUATOR",
                  "LAMPACTUATOR",
                  "NOTKNOWN",
                  "OTHER",
                  "SUNBLINDACTUATOR",
                  "UNSET",
                  "VALVEPOSITIONER"
                ]
              },
              "ActuatorStatus": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "FailPosition": {
                "type": "PEnum_FailPosition",
                "Description": "Specifies the required fail-safe position of the actuator.",
                "values": [
                  "FAILCLOSED",
                  "FAILOPEN",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ManualOverride": {
                "type": "boolean",
                "Description": "Identifies whether hand-operated operation is provided as an override (= TRUE) or not (= FALSE). Note that this value should be set to FALSE by default in the case of a Hand Operated Actuator.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              }
            }
          },
          "Pset_ActuatorTypeLinearActuation": {
            "Properties": {
              "Force": {
                "type": "real",
                "Description": "Indicates the maximum close-off force for the actuator."
              },
              "Stroke": {
                "type": "real",
                "Description": "Indicates the maximum distance the actuator must traverse."
              }
            }
          },
          "Pset_ActuatorTypeRotationalActuation": {
            "Properties": {
              "RangeAngle": {
                "type": "real",
                "Description": "Indicates the maximum rotation the actuator must traverse."
              },
              "Torque": {
                "type": "real",
                "Description": "Indicates the maximum close-off torque for the actuator."
              }
            }
          },
          "Qto_ActuatorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcActuatorType": {
        "Parent": "IfcDistributionControlElementType",
        "Description": "The distribution control element type IfcActuatorType defines commonly shared information for occurrences of actuators. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a actuator type specification indicating the specific product information that is common to all occurrences of that product type. The IfcActuatorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcActuatorType are represented by instances of IfcActuator. Refer to the documentation at IfcActuator for supported property sets, materials, composition, and ports.HISTORY  New entity in IFC2x2",
        "Psets": {
          "Pset_ActuatorTypeCommon": {
            "Properties": {
              "ActuatorApplication": {
                "type": "PEnum_ActuatorApplication",
                "Description": "Indicates application of actuator.",
                "values": [
                  "DAMPERACTUATOR",
                  "ENTRYEXITDEVICE",
                  "FIRESMOKEDAMPERACTUATOR",
                  "LAMPACTUATOR",
                  "NOTKNOWN",
                  "OTHER",
                  "SUNBLINDACTUATOR",
                  "UNSET",
                  "VALVEPOSITIONER"
                ]
              },
              "ActuatorStatus": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "FailPosition": {
                "type": "PEnum_FailPosition",
                "Description": "Specifies the required fail-safe position of the actuator.",
                "values": [
                  "FAILCLOSED",
                  "FAILOPEN",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ManualOverride": {
                "type": "boolean",
                "Description": "Identifies whether hand-operated operation is provided as an override (= TRUE) or not (= FALSE). Note that this value should be set to FALSE by default in the case of a Hand Operated Actuator.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              }
            }
          },
          "Pset_ActuatorTypeElectricActuator": {
            "Properties": {
              "ActuatorInputPower": {
                "type": "real",
                "Description": "Maximum input power requirement."
              },
              "ControlPulseCurrent": {
                "type": "real",
                "Description": "The current of the electric actuator control pulse."
              },
              "ElectricActuatorType": {
                "type": "PEnum_ElectricActuatorType",
                "Description": "Enumeration that identifies electric actuator as defined by its operational principle.",
                "values": [
                  "MAGNETIC",
                  "MOTORDRIVE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ActuatorTypeHydraulicActuator": {
            "Properties": {
              "InputFlowrate": {
                "type": "real",
                "Description": "Maximum input flowrate requirement."
              },
              "InputPressure": {
                "type": "real",
                "Description": "Maximum input or design pressure for the object."
              }
            }
          },
          "Pset_ActuatorTypeLinearActuation": {
            "Properties": {
              "Force": {
                "type": "real",
                "Description": "Indicates the maximum close-off force for the actuator."
              },
              "Stroke": {
                "type": "real",
                "Description": "Indicates the maximum distance the actuator must traverse."
              }
            }
          },
          "Pset_ActuatorTypePneumaticActuator": {
            "Properties": {
              "InputFlowrate": {
                "type": "real",
                "Description": "Maximum input flowrate requirement."
              },
              "InputPressure": {
                "type": "real",
                "Description": "Maximum input or design pressure for the object."
              }
            }
          },
          "Pset_ActuatorTypeRotationalActuation": {
            "Properties": {
              "RangeAngle": {
                "type": "real",
                "Description": "Indicates the maximum rotation the actuator must traverse."
              },
              "Torque": {
                "type": "real",
                "Description": "Indicates the maximum close-off torque for the actuator."
              }
            }
          },
          "Qto_ActuatorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_PointMachine": {
            "Properties": {
              "ActionBarMovementLength": {
                "type": "real",
                "Description": "The movement of the bar that pulls the point of a turnout."
              },
              "ConversionTime": {
                "type": "real",
                "Description": "Turnout conversion completion time."
              },
              "HasLockInside": {
                "type": "boolean",
                "Description": "Indicates whether the locking is inside  (TRUE) or outside (FALSE) of the point machine.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LockingForce": {
                "type": "real",
                "Description": "Locking force of the point machine motor."
              },
              "MarkingRodMovementLength": {
                "type": "real",
                "Description": "The length of the movement bar which indicates the turnout position."
              },
              "MaximumOperatingTime": {
                "type": "real",
                "Description": "The maximum duration of the turnout movement before the interlocking turns to out of control status."
              },
              "MinimumOperatingSpeed": {
                "type": "real",
                "Description": "Minimum operating speed of the point machine."
              },
              "TractionForce": {
                "type": "real",
                "Description": "Traction force of the point machine in turnout conversion."
              }
            }
          }
        }
      },
      "IfcAlarm": {
        "Parent": "IfcDistributionControlElement",
        "Description": "An alarm is a device that signals the existence of a condition or situation that is outside the boundaries of normal expectation or that activates such a device.Alarms include the provision of break glass buttons and manual pull boxes that are used to activate alarms.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_AlarmTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_AlarmBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcAlarmType": {
        "Parent": "IfcDistributionControlElementType",
        "Description": "The distribution control element type IfcAlarmType defines commonly shared information for occurrences of alarms. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a alarm type specification indicating the specific product information that is common to all occurrences of that product type. The IfcAlarmType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcAlarmType are represented by instances of IfcAlarm. Refer to the documentation at IfcAlarm for supported property sets, materials, composition, and ports.HISTORY  New entity in IFC2x2",
        "Psets": {
          "Pset_AlarmTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_AlarmBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcController": {
        "Parent": "IfcDistributionControlElement",
        "Description": "A controller is a device that monitors inputs and controls outputs within a building automation system.A controller may be physical (having placement within a spatial structure) or logical (a software interface or aggregated within a programmable physical controller).HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_ControllerTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ControllerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_OnSiteTelecomControlUnit": {
            "Properties": {
              "ControllerInterfaceType": {
                "type": "PEnum_ControllerInterfaceType",
                "Description": "Indicates the type of serial interface used by the device.",
                "values": [
                  "EARTHQUAKERELAYINTERFACE",
                  "FOREIGNOBJECTRELAYINTERFACE",
                  "NOTKNOWN",
                  "OTHER",
                  "RS_422",
                  "RS_485",
                  "UNSET"
                ]
              },
              "HasEarthquakeAlarm": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit includes earthquake alarm function.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasEarthquakeCollection": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit collects earthquake information.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasForeignObjectCollection": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit collects foreign object information.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasOutputFunction": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit includes an output function.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasRainCollection": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit collects information on rain.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSnowCollection": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit collects information on snow depth.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasWindCollection": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit collects information on wind.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcControllerType": {
        "Parent": "IfcDistributionControlElementType",
        "Description": "The distribution control element type IfcControllerType defines commonly shared information for occurrences of controllers. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a controller type specification indicating the specific product information that is common to all occurrences of that product type. The IfcControllerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcControllerType are represented by instances of IfcController. Refer to the documentation at IfcController for supported property sets, materials, composition, and ports.HISTORY  New entity in IFC2x2",
        "Psets": {
          "Pset_ControllerTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ControllerTypeFloating": {
            "Properties": {
              "ControlType": {
                "type": "PEnum_ControllerTypeFloating",
                "Description": "The type controller, signal modification effected and applicable ports",
                "values": [
                  "ABSOLUTE",
                  "ACCUMULATOR",
                  "AVERAGE",
                  "BINARY",
                  "CONSTANT",
                  "DERIVATIVE",
                  "DIVIDE",
                  "HYSTERESIS",
                  "INPUT",
                  "INTEGRAL",
                  "INVERSE",
                  "LOWERLIMITCONTROL",
                  "MAXIMUM",
                  "MINIMUM",
                  "MODIFIER",
                  "NOTKNOWN",
                  "OTHER",
                  "OUTPUT",
                  "PRODUCT",
                  "PULSECONVERTER",
                  "REPORT",
                  "RUNNINGAVERAGE",
                  "SPLIT",
                  "SUBTRACT",
                  "SUM",
                  "UNSET",
                  "UPPERLIMITCONTROL",
                  "VARIABLE"
                ]
              },
              "SignalFactor": {
                "type": "real",
                "Description": "Factor multiplied onto offset signal."
              },
              "SignalOffset": {
                "type": "real",
                "Description": "Offset constant added to modified signal."
              },
              "SignalTime": {
                "type": "real",
                "Description": "Time factor used for integral and running average controllers."
              }
            }
          },
          "Pset_ControllerTypeMultiPosition": {
            "Properties": {
              "ControlType": {
                "type": "PEnum_ControllerMultiPositionType",
                "Description": "The type controller, signal modification effected and applicable ports",
                "values": [
                  "INPUT",
                  "NOTKNOWN",
                  "OTHER",
                  "OUTPUT",
                  "UNSET",
                  "VARIABLE"
                ]
              }
            }
          },
          "Pset_ControllerTypeProgrammable": {
            "Properties": {
              "Application": {
                "type": "PEnum_ControllerApplication",
                "Description": "Humidifier application.Fixed: Humidifier installed in a ducted flow distribution system.\nPortable: Humidifier is not installed in a ducted flow distribution system.",
                "values": [
                  "BOILERCONTROLLER",
                  "CONSTANTLIGHTCONTROLLER",
                  "DISCHARGEAIRCONTROLLER",
                  "FANCOILUNITCONTROLLER",
                  "LIGHTINGPANELCONTROLLER",
                  "MODEMCONTROLLER",
                  "NOTKNOWN",
                  "OCCUPANCYCONTROLLER",
                  "OTHER",
                  "PARTITIONWALLCONTROLLER",
                  "PUMPCONTROLLER",
                  "REALTIMEBASEDSCHEDULER",
                  "REALTIMEKEEPER",
                  "ROOFTOPUNITCONTROLLER",
                  "SCENECONTROLLER",
                  "SPACECONFORTCONTROLLER",
                  "SUNBLINDCONTROLLER",
                  "TELEPHONEDIRECTORY",
                  "UNITVENTILATORCONTROLLER",
                  "UNSET",
                  "VAV"
                ]
              },
              "ControlType": {
                "type": "PEnum_ControllerTypeProgrammable",
                "Description": "The type controller, signal modification effected and applicable ports",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "PRIMARY",
                  "SECONDARY",
                  "UNSET"
                ]
              },
              "FirmwareVersion": {
                "type": "string",
                "Description": "Indicates version of device firmware according to device manufacturer."
              },
              "SoftwareVersion": {
                "type": "string",
                "Description": "Indicates version of application software according to systems integrator."
              }
            }
          },
          "Pset_ControllerTypeProportional": {
            "Properties": {
              "ControlType": {
                "type": "PEnum_ControllerProportionalType",
                "Description": "The type controller, signal modification effected and applicable ports",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "PROPORTIONAL",
                  "PROPORTIONALINTEGRAL",
                  "PROPORTIONALINTEGRALDERIVATIVE",
                  "UNSET"
                ]
              },
              "DerivativeConstant": {
                "type": "real",
                "Description": "The derivative gain factor of the controller (usually referred to as Kd).  Asserted where ControlType is PROPORTIONALINTEGRALDERIVATIVE."
              },
              "IntegralConstant": {
                "type": "real",
                "Description": "The integral gain factor of the controller (usually referred to as Ki).  Asserted where ControlType is PROPORTIONALINTEGRAL or PROPORTIONALINTEGRALDERIVATIVE."
              },
              "ProportionalConstant": {
                "type": "real",
                "Description": "The proportional gain factor of the controller (usually referred to as Kp)."
              },
              "SignalTimeDecrease": {
                "type": "real",
                "Description": "Time factor used for exponential decrease."
              },
              "SignalTimeIncrease": {
                "type": "real",
                "Description": "Time factor used for exponential increase."
              }
            }
          },
          "Pset_ControllerTypeTwoPosition": {
            "Properties": {
              "ControlType": {
                "type": "PEnum_ControllerTwoPositionType",
                "Description": "The type controller, signal modification effected and applicable ports",
                "values": [
                  "AND",
                  "AVERAGE",
                  "CALENDAR",
                  "INPUT",
                  "LOWERBANDSWITCH",
                  "LOWERLIMITSWITCH",
                  "NOT",
                  "NOTKNOWN",
                  "OR",
                  "OTHER",
                  "OUTPUT",
                  "UNSET",
                  "UPPERBANDSWITCH",
                  "UPPERLIMITSWITCH",
                  "VARIABLE",
                  "XOR"
                ]
              },
              "Polarity": {
                "type": "boolean",
                "Description": "True indicates normal polarity; False indicates reverse polarity.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Value": {
                "type": "boolean",
                "Description": "The expected range and default value.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Qto_ControllerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_OnSiteTelecomControlUnit": {
            "Properties": {
              "ControllerInterfaceType": {
                "type": "PEnum_ControllerInterfaceType",
                "Description": "Indicates the type of serial interface used by the device.",
                "values": [
                  "EARTHQUAKERELAYINTERFACE",
                  "FOREIGNOBJECTRELAYINTERFACE",
                  "NOTKNOWN",
                  "OTHER",
                  "RS_422",
                  "RS_485",
                  "UNSET"
                ]
              },
              "HasEarthquakeAlarm": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit includes earthquake alarm function.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasEarthquakeCollection": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit collects earthquake information.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasForeignObjectCollection": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit collects foreign object information.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasOutputFunction": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit includes an output function.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasRainCollection": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit collects information on rain.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSnowCollection": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit collects information on snow depth.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasWindCollection": {
                "type": "boolean",
                "Description": "Indicates whether the on-site control unit collects information on wind.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcFlowInstrument": {
        "Parent": "IfcDistributionControlElement",
        "Description": "A flow instrument reads and displays the value of a particular property of a system at a point, or displays the difference in the value of a property between two points.Instrumentation is typically for the purpose of determining the value of the property at a point in time. It is not the purpose of an instrument to record or integrate the values over time (although they may be connected to recording devices that do perform such a function). This entity provides for all forms of mechanical flow instrument (thermometers, pressure gauges etc.) and electrical flow instruments (ammeters, voltmeters etc.)HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_FlowInstrumentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_FlowInstrumentBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcFlowInstrumentType": {
        "Parent": "IfcDistributionControlElementType",
        "Description": "The distribution control element type IfcFlowInstrumentType defines commonly shared information for occurrences of flow instruments. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a flow instrument type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFlowInstrumentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFlowInstrumentType are represented by instances of IfcFlowInstrument. Refer to the documentation at IfcFlowInstrument for supported property sets, materials, composition, and ports.HISTORY  New entity in IFC2x2",
        "Psets": {
          "Pset_FlowInstrumentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FlowInstrumentTypePressureGauge": {
            "Properties": {
              "DisplaySize": {
                "type": "real",
                "Description": "The physical size of the display."
              },
              "PressureGaugeType": {
                "type": "PEnum_PressureGaugeType",
                "Description": "Identifies the means by which pressure is displayed.",
                "values": [
                  "DIAL",
                  "DIGITAL",
                  "MANOMETER",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FlowInstrumentTypeThermometer": {
            "Properties": {
              "DisplaySize": {
                "type": "real",
                "Description": "The physical size of the display."
              },
              "ThermometerType": {
                "type": "PEnum_ThermometerType",
                "Description": "Identifies the means by which temperature is displayed.",
                "values": [
                  "DIAL",
                  "DIGITAL",
                  "NOTKNOWN",
                  "OTHER",
                  "STEM",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_FlowInstrumentBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_CurrentInstrumentTransformer": {
            "Properties": {
              "AccuracyClass": {
                "type": "real",
                "Description": "A designation assigned to an instrument transformer the current (or voltage) error and phase displacement of which remain within specified limits under prescribed conditions of use (IEC 321-01-24)."
              },
              "AccuracyGrade": {
                "type": "string",
                "Description": "The grade of accuracy."
              },
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "NominalPower": {
                "type": "real",
                "Description": "A conventional value of apparent power determining a value of the rated current that may be carried with rated voltage applied, under specified conditions. ( IEV ref 421-04-04)"
              },
              "NumberOfPhases": {
                "type": "integer",
                "Description": "Number of phases that the equipment operates on."
              },
              "PrimaryCurrent": {
                "type": "real",
                "Description": "The current that is going to be transformed and that runs into the transformer on the primary side."
              },
              "PrimaryFrequency": {
                "type": "real",
                "Description": "The frequency that is going to be transformed and that runs into the transformer on the primary side."
              },
              "SecondaryCurrent": {
                "type": "real",
                "Description": "The current that has been transformed and is running out of the transformer on the secondary side."
              },
              "SecondaryFrequency": {
                "type": "real",
                "Description": "The frequency that has been transformed and is running out of the transformer on the secondary side."
              }
            }
          },
          "Pset_VoltageInstrumentTransformer": {
            "Properties": {
              "AccuracyClass": {
                "type": "real",
                "Description": "A designation assigned to an instrument transformer the current (or voltage) error and phase displacement of which remain within specified limits under prescribed conditions of use (IEC 321-01-24)."
              },
              "AccuracyGrade": {
                "type": "string",
                "Description": "The grade of accuracy."
              },
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "NominalPower": {
                "type": "real",
                "Description": "A conventional value of apparent power determining a value of the rated current that may be carried with rated voltage applied, under specified conditions. ( IEV ref 421-04-04)"
              },
              "NumberOfPhases": {
                "type": "integer",
                "Description": "Number of phases that the equipment operates on."
              },
              "PrimaryFrequency": {
                "type": "real",
                "Description": "The frequency that is going to be transformed and that runs into the transformer on the primary side."
              },
              "PrimaryVoltage": {
                "type": "real",
                "Description": "The voltage that is going to be transformed and that runs into the transformer on the primary side."
              },
              "SecondaryFrequency": {
                "type": "real",
                "Description": "The frequency that has been transformed and is running out of the transformer on the secondary side."
              },
              "SecondaryVoltage": {
                "type": "real",
                "Description": "The voltage that has been transformed and is running out of the transformer on the secondary side."
              }
            }
          }
        }
      },
      "IfcSensor": {
        "Parent": "IfcDistributionControlElement",
        "Description": "A sensor is a device that measures a physical quantity and converts it into a signal which can be read by an observer or by an instrument.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_SensorTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_SensorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcSensorType": {
        "Parent": "IfcDistributionControlElementType",
        "Description": "The distribution control element type IfcSensorType defines commonly shared information for occurrences of sensors. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a sensor type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSensorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSensorType are represented by instances of IfcSensor. Refer to the documentation at IfcSensor for supported property sets, materials, composition, and ports.HISTORY  New entity in IFC2x2",
        "Psets": {
          "Pset_SensorTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SensorTypeFireSensor": {
            "Properties": {
              "AccuracyOfFireSensor": {
                "type": "real",
                "Description": "The accuracy of the sensor."
              },
              "FireSensorSetPoint": {
                "type": "real",
                "Description": "The temperature value to be sensed to indicate the presence of fire."
              },
              "TimeConstant": {
                "type": "real",
                "Description": "The time constant of the sensor."
              }
            }
          },
          "Pset_SensorTypeGasSensor": {
            "Properties": {
              "CoverageArea": {
                "type": "real",
                "Description": "The area that is covered by the object."
              },
              "GasDetected": {
                "type": "string",
                "Description": "Identification of the gas that is being detected, according to chemical formula.  For example, carbon monoxide is 'CO', carbon dioxide is 'CO2', oxygen is 'O2'."
              }
            }
          },
          "Pset_SensorTypeHeatSensor": {
            "Properties": {
              "CoverageArea": {
                "type": "real",
                "Description": "The area that is covered by the object."
              },
              "RateOfTemperatureRise": {
                "type": "real",
                "Description": "The rate of temperature rise that is to be sensed as being hazardous."
              }
            }
          },
          "Pset_SensorTypeIonConcentrationSensor": {
            "Properties": {
              "SubstanceDetected": {
                "type": "string",
                "Description": "Identification of the substance that is being detected according to chemical formula.  For example, calcium carbonate is 'CaCO3'"
              }
            }
          },
          "Pset_SensorTypeMovementSensor": {
            "Properties": {
              "MovementSensingType": {
                "type": "PEnum_MovementSensingType",
                "Description": "Enumeration that identifies the type of movement sensing mechanism.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "PHOTOELECTRICCELL",
                  "PRESSUREPAD",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SensorTypePressureSensor": {
            "Properties": {
              "IsSwitch": {
                "type": "boolean",
                "Description": "Identifies if the sensor also functions as a switch at the set point (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_SensorTypeSmokeSensor": {
            "Properties": {
              "CoverageArea": {
                "type": "real",
                "Description": "The area that is covered by the object."
              },
              "HasBuiltInAlarm": {
                "type": "boolean",
                "Description": "Indicates whether the smoke sensor is included as an element within a smoke alarm/sensor unit (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_SensorTypeTemperatureSensor": {
            "Properties": {
              "TemperatureSensorType": {
                "type": "PEnum_TemperatureSensorType",
                "Description": "Enumeration that Identifies the types of temperature sensor that can be specified.",
                "values": [
                  "HIGHLIMIT",
                  "LOWLIMIT",
                  "NOTKNOWN",
                  "OPERATINGTEMPERATURE",
                  "OTHER",
                  "OUTSIDETEMPERATURE",
                  "ROOMTEMPERATURE",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SensorTypeWindSensor": {
            "Properties": {
              "DampingRatio": {
                "type": "real",
                "Description": "Indicates the damping ratio of the device."
              },
              "DataCollectionType": {
                "type": "PEnum_DataCollectionType",
                "Description": "Indicates the type or manner of data collection.",
                "values": [
                  "AUTOMATICANDCONTINUOUS",
                  "MANUALANDSINGLE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "LinearVelocityResolution": {
                "type": "real",
                "Description": "Indicates the resolution of the detected linear velocity."
              },
              "MarginOfError": {
                "type": "real",
                "Description": "Indicates the margin of error of the measurement."
              },
              "SamplingFrequency": {
                "type": "real",
                "Description": "Indicates the sampling frequency of the device."
              },
              "SerialInterfaceType": {
                "type": "PEnum_SerialInterfaceType",
                "Description": "Indicates the type of serial interface used by the device.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RS_232",
                  "RS_422",
                  "RS_485",
                  "UNSET"
                ]
              },
              "SetPointSpeed": {
                "type": "real",
                "Description": "The wind speed value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value."
              },
              "StartingWindSpeed": {
                "type": "real",
                "Description": "Indicates the starting wind speed of the wind sensor."
              },
              "TimeConstant": {
                "type": "real",
                "Description": "The time constant of the sensor."
              },
              "WindSensorType": {
                "type": "PEnum_WindSensorType",
                "Description": "Enumeration that Identifies the types of wind sensors that can be specified.",
                "values": [
                  "CUP",
                  "HOTWIRE",
                  "LASERDOPPLER",
                  "NOTKNOWN",
                  "OTHER",
                  "PLATE",
                  "SONIC",
                  "TUBE",
                  "UNSET",
                  "WINDMILL"
                ]
              },
              "WorkingState": {
                "type": "string",
                "Description": "Indicates the working state of device or system."
              }
            }
          },
          "Qto_SensorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_AxleCountingEquipment": {
            "Properties": {
              "AxleCounterResponseTime": {
                "type": "real",
                "Description": "The time that axle counter can detect the axles of locomotive and vehicle."
              },
              "AxleCountingEquipmentType": {
                "type": "PEnum_AxleCountingEquipmentType",
                "Description": "The type of axle counting equipment.",
                "values": [
                  "EVALUATOR",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WHEELDETECTOR"
                ]
              },
              "DetectionRange": {
                "type": "real",
                "Description": "The detection range of the equipment."
              },
              "FailureInformation": {
                "type": "string",
                "Description": "The information for failure description."
              },
              "ImpactParameter": {
                "type": "real",
                "Description": "Impact parameter of the equipment."
              },
              "InsulationResistance": {
                "type": "real",
                "Description": "Minimum resistance between one terminal or several terminals connected together and the case or enclosure of a component at specified voltage."
              },
              "MaximumVibration": {
                "type": "real",
                "Description": "Maximum tolerable vibration level of the device."
              },
              "NominalWeight": {
                "type": "real",
                "Description": "Nominal weight of the object."
              }
            }
          },
          "Pset_SensorTypeEarthquakeSensor": {
            "Properties": {
              "DataCollectionType": {
                "type": "PEnum_DataCollectionType",
                "Description": "Indicates the type or manner of data collection.",
                "values": [
                  "AUTOMATICANDCONTINUOUS",
                  "MANUALANDSINGLE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "DegreeOfLinearity": {
                "type": "real",
                "Description": "Indicates the degree of linearity of the earthquake sensor or accelerometer."
              },
              "EarthquakeSensorType": {
                "type": "PEnum_EarthquakeSensorType",
                "Description": "Indicates the type of earthquake sensor or accelerometer.",
                "values": [
                  "2DIRECTION",
                  "3DIRECTION",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "FullScaleOutput": {
                "type": "real",
                "Description": "Indicates the full scale output of the earthquake sensor or accelerometer."
              },
              "LinearVelocityResolution": {
                "type": "real",
                "Description": "Indicates the resolution of the detected linear velocity."
              },
              "MarginOfError": {
                "type": "real",
                "Description": "Indicates the margin of error of the measurement."
              },
              "SamplingFrequency": {
                "type": "real",
                "Description": "Indicates the sampling frequency of the device."
              },
              "SerialInterfaceType": {
                "type": "PEnum_SerialInterfaceType",
                "Description": "Indicates the type of serial interface used by the device.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RS_232",
                  "RS_422",
                  "RS_485",
                  "UNSET"
                ]
              },
              "TransverseSensitivityRatio": {
                "type": "real",
                "Description": "Indicates the transverse sensitivity ratio of the sensor."
              },
              "WorkingState": {
                "type": "string",
                "Description": "Indicates the working state of device or system."
              }
            }
          },
          "Pset_SensorTypeForeignObjectDetectionSensor": {
            "Properties": {
              "ForeignObjectDetectionSensorType": {
                "type": "PEnum_ForeignObjectDetectionSensorType",
                "Description": "Indicates the type of foreign object detection sensor.",
                "values": [
                  "DUALPOWERNETWORK",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "SerialInterfaceType": {
                "type": "PEnum_SerialInterfaceType",
                "Description": "Indicates the type of serial interface used by the device.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RS_232",
                  "RS_422",
                  "RS_485",
                  "UNSET"
                ]
              },
              "WorkingState": {
                "type": "string",
                "Description": "Indicates the working state of device or system."
              }
            }
          },
          "Pset_SensorTypeRainSensor": {
            "Properties": {
              "DataCollectionType": {
                "type": "PEnum_DataCollectionType",
                "Description": "Indicates the type or manner of data collection.",
                "values": [
                  "AUTOMATICANDCONTINUOUS",
                  "MANUALANDSINGLE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "LengthMeasureResolution": {
                "type": "real",
                "Description": "Indicates the resolution for length measure of the device."
              },
              "MarginOfError": {
                "type": "real",
                "Description": "Indicates the margin of error of the measurement."
              },
              "RainSensorType": {
                "type": "PEnum_RainSensorType",
                "Description": "Indicates the type of rain sensor or gauge.",
                "values": [
                  "MICROWAVE",
                  "NOTKNOWN",
                  "OTHER",
                  "PIEZOELECTRIC",
                  "TIPPINGBUCKET",
                  "UNSET"
                ]
              },
              "SamplingFrequency": {
                "type": "real",
                "Description": "Indicates the sampling frequency of the device."
              },
              "SerialInterfaceType": {
                "type": "PEnum_SerialInterfaceType",
                "Description": "Indicates the type of serial interface used by the device.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RS_232",
                  "RS_422",
                  "RS_485",
                  "UNSET"
                ]
              },
              "WorkingState": {
                "type": "string",
                "Description": "Indicates the working state of device or system."
              }
            }
          },
          "Pset_SensorTypeSnowSensor": {
            "Properties": {
              "DataCollectionType": {
                "type": "PEnum_DataCollectionType",
                "Description": "Indicates the type or manner of data collection.",
                "values": [
                  "AUTOMATICANDCONTINUOUS",
                  "MANUALANDSINGLE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ImageResolution": {
                "type": "string",
                "Description": "Indicates the image resolution of snow depth meter."
              },
              "ImageShootingMode": {
                "type": "PEnum_ImageShootingMode",
                "Description": "Indicates the type or manner of snow depth meter image shooting.",
                "values": [
                  "AUTOMATIC",
                  "MANUAL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "LengthMeasureResolution": {
                "type": "real",
                "Description": "Indicates the resolution for length measure of the device."
              },
              "MarginOfError": {
                "type": "real",
                "Description": "Indicates the margin of error of the measurement."
              },
              "SamplingFrequency": {
                "type": "real",
                "Description": "Indicates the sampling frequency of the device."
              },
              "SerialInterfaceType": {
                "type": "PEnum_SerialInterfaceType",
                "Description": "Indicates the type of serial interface used by the device.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RS_232",
                  "RS_422",
                  "RS_485",
                  "UNSET"
                ]
              },
              "SnowSensorType": {
                "type": "PEnum_SnowSensorType",
                "Description": "Indicates the type of snow depth meter.",
                "values": [
                  "LASERIRRADIATION",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SensorTypeTurnoutClosureSensor": {
            "Properties": {
              "DetectionRange": {
                "type": "real",
                "Description": "The detection range of the equipment."
              }
            }
          }
        }
      },
      "IfcUnitaryControlElement": {
        "Parent": "IfcDistributionControlElement",
        "Description": "A unitary control element combines a number of control components into a single product, such as a thermostat or humidistat.A unitary control element provides a housing for an aggregation of control or electrical distribution elements that, in combination, perform a singular (unitary) purpose. Each item in the aggregation may have its own geometric representation and location.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_UnitaryControlElementTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_UnitaryControlElementBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcUnitaryControlElementType": {
        "Parent": "IfcDistributionControlElementType",
        "Description": "The distribution control element type IfcUnitaryControlElementType defines commonly shared information for occurrences of unitary control elements. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a unitary control element type specification indicating the specific product information that is common to all occurrences of that product type. The IfcUnitaryControlElementType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcUnitaryControlElementType are represented by instances of IfcUnitaryControlElement. Refer to the documentation at IfcUnitaryControlElement for supported property sets, materials, composition, and ports.HISTORY  New entity in IFC4",
        "Psets": {
          "Pset_UnitaryControlElementTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_UnitaryControlElementTypeIndicatorPanel": {
            "Properties": {
              "UnitaryApplication": {
                "type": "PEnum_UnitaryControlElementApplication",
                "Description": "The application of the unitary control element.",
                "values": [
                  "LIFTARRIVALGONG",
                  "LIFTCARDIRECTIONLANTERN",
                  "LIFTFIRESYSTEMSPORT",
                  "LIFTHALLLANTERN",
                  "LIFTPOSITIONINDICATOR",
                  "LIFTVOICEANNOUNCER",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_UnitaryControlElementBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_UnitaryControlElementBaseStationController": {
            "Properties": {
              "NumberOfManagedBTSs": {
                "type": "integer",
                "Description": "Indicates the maximum number of base transceiver stations (BTSs) that can be handled by the device."
              },
              "NumberOfManagedCarriers": {
                "type": "integer",
                "Description": "Indicates how many carrier frequencies can be managed by the device."
              }
            }
          },
          "Pset_UnitaryControlElementTypeControlPanel": {
            "Properties": {
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "NominalPower": {
                "type": "real",
                "Description": "A conventional value of apparent power determining a value of the rated current that may be carried with rated voltage applied, under specified conditions. ( IEV ref 421-04-04)"
              }
            }
          }
        }
      },
      "IfcConstructionEquipmentResource": {
        "Parent": "IfcConstructionResource",
        "Description": "IfcConstructionEquipmentResource is usage of construction equipment to assist in the performance of construction. Construction Equipment resources are wholly or partially consumed or occupied in the performance of construction.HISTORY  New entity in IFC2.0.Occurrences of IfcConstructionEquipmentResource are products that are used as resources to assist the process of construction. More specifically, they are products that are standalone items brought to a project to fulfil a particular purpose. Examples might be a tower crane or other mobile crane, a screwing machine, or a lifting hoist.Instances of any subtype of IfcProduct may be assigned to the equipment resource using IfcRelAssignsToResource in order to characterize the equipment further, as described at the supertype IfcResource. Examples of relevant subtypes of IfcProduct are IfcDiscreteAccessory or IfcBuiltElement (for particular cases where more precise usage details are not available).",
        "Psets": {
          "Qto_ConstructionEquipmentResourceBaseQuantities": {
            "Properties": {
              "OperatingTime": {
                "type": "real",
                "Description": "Productive time using the equipment including operating time and excluding idle time."
              },
              "UsageTime": {
                "type": "real",
                "Description": "Total time using the equipment including operating time and idle time."
              }
            }
          }
        }
      },
      "IfcConstructionEquipmentResourceType": {
        "Parent": "IfcConstructionResourceType",
        "Description": "The resource type IfcConstructionEquipmentType defines commonly shared information for occurrences of construction equipment resources. The set of shared information may include:common productivities\ncommon cost rates\ncommon properties within shared property setsIt is used to define a construction equipment resource specification (the specific resource information that is common to all occurrences of that resource). Resource types may be exchanged without being already assigned to occurrences.Occurrences of the IfcConstructionEquipmentResourceType are represented by instances of IfcConstructionEquipmentResource.HISTORY  New entity in IFC4.{ .use-head}\nAssignment use definitionIn addition to assignments specified at the base class IfcConstructionResourceType, a construction equipment resource type may have assignments of its own using IfcRelAssignsToResource where RelatingResource refers to the IfcConstructionEquipmentResourceType and RelatedObjects contains one or more IfcTypeProduct subtypes. Such relationship indicates the type of equipment to be used as input, which is instantiated as an occurrence assigned for each resource occurrence. There may be multiple chains of production where such product type may have its own task and resource types assigned indicating how to assemble such equipment.",
        "Psets": {
          "Qto_ConstructionEquipmentResourceBaseQuantities": {
            "Properties": {
              "OperatingTime": {
                "type": "real",
                "Description": "Productive time using the equipment including operating time and excluding idle time."
              },
              "UsageTime": {
                "type": "real",
                "Description": "Total time using the equipment including operating time and idle time."
              }
            }
          }
        }
      },
      "IfcConstructionMaterialResource": {
        "Parent": "IfcConstructionResource",
        "Description": "IfcConstructionMaterialResource identifies a material resource type in a construction project.HISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE  The attribute Suppliers has been deleted; use IfcRelAssignsToResource to assign an IfcActor to fulfill the role as a supplier. The attribute UsageRatio has been deleted; use BaseQuantityConsumed and BaseQuantityProduced to indicate material usage.Occurrences of IfcConstructionMaterialResource are consumed (wholly or partially), or occupied during a construction work task (IfcTask).Similar to IfcConstructionProductResource, sometimes things such as 5000kg of gravel are already instantiated as an instance of an IfcProduct subtype because it is a result of a work task (for example, \u0091transporting gravel\u0092). In this case, the instance of IfcConstructionMaterialResource can be associated with the product instance \u00915000kg of gravel\u0092 to provide more information for resource uses. Nevertheless, IfcConstructionMaterialResource should only be used to represent resource usage, but not product substances.NOTE  This entity is not the same as IfcMaterial. One one hand, IfcConstructionMaterialResource represents usage of bulk materials such as sand, gravels, nails and so on. Physical manifestations can be instantiated from IfcProduct as well, depending on their uses in the system, and such an IfcProduct object can be assigned to the IfcConstructionMaterialResource object via IfcRelAssignsToResource. On the other hand, IfcMaterial is about physical materials that a physical building element consists of, possibly with detailed material layering information.\"",
        "Psets": {
          "Qto_ConstructionMaterialResourceBaseQuantities": {
            "Properties": {
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcConstructionMaterialResourceType": {
        "Parent": "IfcConstructionResourceType",
        "Description": "The resource type IfcConstructionMaterialType defines commonly shared information for occurrences of construction material resources. The set of shared information may include:common productivities\ncommon cost rates\ncommon properties within shared property setsIt is used to define a construction material resource specification (the specific resource information that is common to all occurrences of that resource). Resource types may be exchanged without being already assigned to occurrences.Occurrences of the IfcConstructionMaterialResourceType are represented by instances of IfcConstructionMaterialResource.HISTORY  New entity in IFC4.{ .use-head}\nAssignment Use DefinitionIn addition to assignments specified at the base class IfcConstructionResourceType, a construction material resource type may have assignments of its own using IfcRelAssignsToResource where RelatingResource refers to the IfcConstructionMaterialResourceType and RelatedObjects contains one or more IfcTypeProduct subtypes. Such relationship indicates material specifications to be used as input, which is instantiated as an occurrence assigned for each resource occurrence. The IfcGeographicElementType product type may be used to hold the material representation (via IfcRelAssociatesMaterial. There may be multiple chains of production where such product type may have its own task and resource types assigned indicating how to transport or extract such material.",
        "Psets": {
          "Qto_ConstructionMaterialResourceBaseQuantities": {
            "Properties": {
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcConstructionResource": {
        "Parent": "IfcResource",
        "Description": "IfcConstructionResource is an abstract generalization of the different resources used in construction projects, mainly labour, material, equipment and product resources, plus subcontracted resources and aggregations such as a crew resource.A resource represents \"use of something\" and does not necessarily correspond to a single item such as a person or vehicle, but represents a pool of items having limited availability such as general labor or an equipment fleet. A resource can represent either a generic resource pool (not having any task assignment) or a task-specific resource allocation (having an IfcTask assignment).HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Modified in to promote ResourceIdentifer and ResourceGroup (renamed to LongDescription) to supertype IfcResource and add attributes as described.{ .use-head}"
      },
      "IfcConstructionResourceType": {
        "Parent": "IfcTypeResource",
        "Description": "IfcConstructionResourceType is an abstract generalization of the different resource types used in construction projects, mainly labor, material, equipment and product resource types, plus subcontracted resource types and aggregations such as a crew resource type.A resource type represents a model of \"use of something\" and does not necessarily correspond to a specific type of object such as a person or vehicle, but represents possible usages of such objects such as general labor or an equipment fleet. A resource type can either represent usage in general (consumption attributes defined but no task type assignment) or a task-specific resource type (production attributes defined and having an IfcTask assignment).A construction resource type captures common productivities and cost rates for applying resources to particular task types.HISTORY  New entity in IFC4.{ .use-head}\nComposition use definitionResource types may be decomposed into nested resource types indicating productivities when applying the resource to specific task types using the IfcRelNests relationship where IfcRelNests.RelatingObject refers to the general resource type and IfcRelNests.RelatedObjects refers to one or more task-specific productivities. For example, an IfcLaborResourceType may be defined for \"Carpenter\" which may have a nested IfcLaborResourceType for \"Carpenter - Wall Framing\" and another nested IfcLaborResourceType for \"Carpenter - Drywall\", each of which may have productivities based according to specific task types (IfcTaskType).{ .use-head}\nAssignment use definitionResource types may be assigned to process types (IfcTypeProcess subtypes) using the IfcRelAssignsToProcess relationship as shown in Figure 1. Such relationship indicates that the resource type applies to the process type for the use indicated (e.g. IfcTaskType.PredefinedType). Such relationship enables a scenario of placing an IfcProduct of a particular IfcTypeProduct, querying for a set of IfcTypeProcess process types for constructing such product (e.g. IfcTaskTypeEnum.CONSTRUCTION), querying each IfcTypeProcess for a set of IfcTypeResource resource types for carrying out the process, and finally choosing an IfcTypeProcess and IfcTypeResource combination resulting in the shortest time for instantiated IfcTask occurrence(s) and/or lowest-cost for instantiated IfcConstructionResource occurrence(s)."
      },
      "IfcLaborResource": {
        "Parent": "IfcConstructionResource",
        "Description": "An IfcLaborResource is used in construction with particular skills or crafts required to perform certain types of construction or management related work.HISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE  The attribute Skillset has been deleted; use LongDescription to describe the skillset.The purpose of an IfcLaborResource is to identify a skillset that may be required or used. The skillset identified may be (for instance) charge-hand, foreman, labourer, plumbers mate etc. and provides a designation of a particular level of skill. It can be used to identify the generic type of labour resource that is required for a purpose without having to be specific about the actor (person or organization) providing the resource occurrence. It may be particularly useful when creating an overall plan for a process or processes. For instance, within maintenance or work planning there may be a known task that needs to be done which is planned to require a 'chargehand pipe fitter'. There may be several such labour resources available and so the need to identify which will be used is not necessary at the planning stage.At a later stage, individual actors can be determined for the labour resources. This is achieved through specifying the actor through IfcActor. The actor is then identified as the labour resource occurrence through the IfcRelAssignsToResource.RelatedResource attribute. The IfcLaborResource provides the IfcRelAssignsToResource.RelatingResource attribute.",
        "Psets": {
          "Qto_LaborResourceBaseQuantities": {
            "Properties": {
              "OvertimeWork": {
                "type": "real",
                "Description": "Work that is performed after exceeding a particular limit such as hours per day and/or hours per week, after which company or municipal policy requires a different rate to apply.  Note: Policies for when overtime takes effect are the responsibility of the user or application; they are not modelled in IFC."
              },
              "StandardWork": {
                "type": "real",
                "Description": "Work that is performed at regular times, up to a particular limit after which overtime rates may apply."
              }
            }
          }
        }
      },
      "IfcLaborResourceType": {
        "Parent": "IfcConstructionResourceType",
        "Description": "The resource type IfcLaborResourceType defines commonly shared information for occurrences of labour resources. The set of shared information may include:common productivities\ncommon cost rates\ncommon properties within shared property setsIt is used to define a labour resource specification (the specific resource information that is common to all occurrences of that resource). Resource types may be exchanged without being already assigned to occurrences.Occurrences of the IfcLaborResourceType are represented by instances of IfcLaborResource.HISTORY  New entity in IFC4.",
        "Psets": {
          "Qto_LaborResourceBaseQuantities": {
            "Properties": {
              "OvertimeWork": {
                "type": "real",
                "Description": "Work that is performed after exceeding a particular limit such as hours per day and/or hours per week, after which company or municipal policy requires a different rate to apply.  Note: Policies for when overtime takes effect are the responsibility of the user or application; they are not modelled in IFC."
              },
              "StandardWork": {
                "type": "real",
                "Description": "Work that is performed at regular times, up to a particular limit after which overtime rates may apply."
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance": {
        "Parent": "IfcFlowTerminal",
        "Description": "An audio-visual appliance is a device that displays, captures, transmits, or receives audio or video.Audio-visual appliances may be fixed in place or may be able to be moved from one space to another. They may require an electrical supply that may be supplied either by an electrical circuit or provided from a local battery source. Audio-visual appliances may be connected to data circuits including specialist circuits for audio visual purposes only.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_AudioVisualApplianceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_AudioVisualApplianceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcAudioVisualApplianceType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcAudioVisualApplianceType defines commonly shared information for occurrences of audio visual appliances. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a audio visual appliance type specification indicating the specific product information that is common to all occurrences of that product type. The IfcAudioVisualApplianceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcAudioVisualApplianceType are represented by instances of IfcAudioVisualAppliance. Refer to the documentation at IfcAudioVisualAppliance for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_AudioVisualApplianceTypeAmplifier": {
            "Properties": {
              "AmplifierType": {
                "type": "PEnum_AudioVisualAmplifierType",
                "Description": "Indicates the type of amplifier.",
                "values": [
                  "FIXED",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VARIABLE"
                ]
              }
            }
          },
          "Pset_AudioVisualApplianceTypeCamera": {
            "Properties": {
              "CameraType": {
                "type": "PEnum_AudioVisualCameraType",
                "Description": "Indicates the type of camera.",
                "values": [
                  "AUDIOVIDEO",
                  "NOTKNOWN",
                  "OTHER",
                  "PHOTO",
                  "UNSET",
                  "VIDEO"
                ]
              },
              "IsOutdoors": {
                "type": "boolean",
                "Description": "Indicates if camera is designed to be used outdoors.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "VideoResolutionHeight": {
                "type": "integer",
                "Description": "Indicates the number of vertical pixels (the largest native video resolution height)."
              },
              "VideoResolutionWidth": {
                "type": "integer",
                "Description": "Indicates the number of horizontal pixels (the largest native video resolution width)."
              }
            }
          },
          "Pset_AudioVisualApplianceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_AudioVisualApplianceTypeDisplay": {
            "Properties": {
              "Brightness": {
                "type": "real",
                "Description": "Indicates the display brightness."
              },
              "ContrastRatio": {
                "type": "real",
                "Description": "Indicates the display contrast ratio."
              },
              "DisplayHeight": {
                "type": "real",
                "Description": "Indicates the physical height of the screen (only the display surface)."
              },
              "DisplayType": {
                "type": "PEnum_AudioVisualDisplayType",
                "Description": "Indicates the type of display.",
                "values": [
                  "CRT",
                  "DLP",
                  "LCD",
                  "LED",
                  "NOTKNOWN",
                  "OTHER",
                  "PLASMA",
                  "UNSET"
                ]
              },
              "DisplayWidth": {
                "type": "real",
                "Description": "Indicates the physical width of the screen (only the display surface)."
              },
              "NominalSize": {
                "type": "real",
                "Description": "Indicates the diagonal screen size."
              },
              "RefreshRate": {
                "type": "real",
                "Description": "Indicates the display refresh frequency."
              },
              "TouchScreen": {
                "type": "PEnum_AudioVisualDisplayTouchScreen",
                "Description": "Indicates touchscreen support.",
                "values": [
                  "MULTITOUCH",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLETOUCH",
                  "UNSET"
                ]
              },
              "VideoResolutionHeight": {
                "type": "integer",
                "Description": "Indicates the number of vertical pixels (the largest native video resolution height)."
              },
              "VideoResolutionWidth": {
                "type": "integer",
                "Description": "Indicates the number of horizontal pixels (the largest native video resolution width)."
              }
            }
          },
          "Pset_AudioVisualApplianceTypePlayer": {
            "Properties": {
              "PlayerMediaEject": {
                "type": "boolean",
                "Description": "Indicates whether the media can be ejected from the player (if physical media).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PlayerType": {
                "type": "PEnum_AudioVisualPlayerType",
                "Description": "Indicates the type of player.",
                "values": [
                  "AUDIO",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VIDEO"
                ]
              }
            }
          },
          "Pset_AudioVisualApplianceTypeProjector": {
            "Properties": {
              "ProjectorType": {
                "type": "PEnum_AudioVisualProjectorType",
                "Description": "Indicates the type of projector.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "VideoResolutionHeight": {
                "type": "integer",
                "Description": "Indicates the number of vertical pixels (the largest native video resolution height)."
              },
              "VideoResolutionWidth": {
                "type": "integer",
                "Description": "Indicates the number of horizontal pixels (the largest native video resolution width)."
              }
            }
          },
          "Pset_AudioVisualApplianceTypeReceiver": {
            "Properties": {
              "ReceiverType": {
                "type": "PEnum_AudioVisualReceiverType",
                "Description": "Indicates the type of receiver.",
                "values": [
                  "AUDIO",
                  "AUDIOVIDEO",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_AudioVisualApplianceTypeSpeaker": {
            "Properties": {
              "Impedence": {
                "type": "real",
                "Description": "Indicates the speaker impedence."
              },
              "SpeakerMounting": {
                "type": "PEnum_AudioVisualSpeakerMounting",
                "Description": "Indicates how the speaker is designed to be mounted.",
                "values": [
                  "CEILING",
                  "FREESTANDING",
                  "NOTKNOWN",
                  "OTHER",
                  "OUTDOOR",
                  "UNSET",
                  "WALL"
                ]
              },
              "SpeakerType": {
                "type": "PEnum_AudioVisualSpeakerType",
                "Description": "Indicates the type of speaker.",
                "values": [
                  "COAXIAL",
                  "FULLRANGE",
                  "MIDRANGE",
                  "NOTKNOWN",
                  "OTHER",
                  "TWEETER",
                  "UNSET",
                  "WOOFER"
                ]
              }
            }
          },
          "Pset_AudioVisualApplianceTypeTuner": {
            "Properties": {
              "TunerType": {
                "type": "PEnum_AudioVisualTunerType",
                "Description": "Indicates the tuner type.",
                "values": [
                  "AUDIO",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VIDEO"
                ]
              }
            }
          },
          "Qto_AudioVisualApplianceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_AudioVisualApplianceTypeRailwayCommunicationTerminal": {
            "Properties": {
              "RailwayCommunicationTerminalType": {
                "type": "PEnum_RailwayCommunicationTerminalType",
                "Description": "Indicates the type of railway communication terminal.",
                "values": [
                  "IP",
                  "LEGACY",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_AudioVisualApplianceTypeRecordingEquipment": {
            "Properties": {
              "StorageCapacity": {
                "type": "integer",
                "Description": "Indicates the total data storage capacity of the device. It is defined by bytes."
              }
            }
          }
        }
      },
      "IfcCableCarrierFitting": {
        "Parent": "IfcFlowFitting",
        "Description": "A cable carrier fitting is a fitting that is placed at junction or transition in a cable carrier system.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_CableCarrierFittingTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CableCarrierFittingBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCableCarrierFittingType": {
        "Parent": "IfcFlowFittingType",
        "Description": "The flow fitting type IfcCableCarrierFittingType defines commonly shared information for occurrences of cable carrier fittings. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a cable carrier fitting type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCableCarrierFittingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCableCarrierFittingType are represented by instances of IfcCableCarrierFitting. Refer to the documentation at IfcCableCarrierFitting for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_CableCarrierFittingTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CableCarrierFittingBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_FittingBend": {
            "Properties": {
              "BendAngle": {
                "type": "real",
                "Description": "The change of direction of flow."
              },
              "BendRadius": {
                "type": "real",
                "Description": "The radius of bending if circular arc or zero if sharp bend."
              }
            }
          },
          "Pset_FittingJunction": {
            "Properties": {
              "JunctionLeftAngle": {
                "type": "real",
                "Description": "The change of direction of flow for the left junction."
              },
              "JunctionLeftRadius": {
                "type": "real",
                "Description": "The radius of bending for the left junction."
              },
              "JunctionRightAngle": {
                "type": "real",
                "Description": "The change of direction of flow for the right junction where 0 indicates straight segment."
              },
              "JunctionRightRadius": {
                "type": "real",
                "Description": "The radius of bending for the right junction where 0 indicates sharp bend."
              },
              "JunctionType": {
                "type": "PEnum_FittingJunctionType",
                "Description": "The type of junction. TEE=3 ports, CROSS = 4 ports.",
                "values": [
                  "CROSS",
                  "NOTKNOWN",
                  "OTHER",
                  "TEE",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FittingTransition": {
            "Properties": {
              "EccentricityInY": {
                "type": "real",
                "Description": "Distance in y direction between the two points (or vertex points) engaged in the point connection."
              },
              "EccentricityInZ": {
                "type": "real",
                "Description": "Distance in z direction between the two points (or vertex points) engaged in the point connection."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcCableCarrierSegment": {
        "Parent": "IfcFlowSegment",
        "Description": "A cable carrier segment is a flow segment that is specifically used to carry and support cabling.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_CableCarrierSegmentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CableCarrierSegmentBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          },
          "Pset_RailwayCableCarrier": {
            "Properties": {
              "NumberOfCrossedTracks": {
                "type": "integer",
                "Description": "Number of tracks crossed in cable route."
              }
            }
          }
        }
      },
      "IfcCableCarrierSegmentType": {
        "Parent": "IfcFlowSegmentType",
        "Description": "The flow segment type IfcCableCarrierSegmentType defines commonly shared information for occurrences of cable carrier segments. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a cable carrier segment type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCableCarrierSegmentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCableCarrierSegmentType are represented by instances of IfcCableCarrierSegment. Refer to the documentation at IfcCableCarrierSegment for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_CableCarrierSegmentTypeCableLadderSegment": {
            "Properties": {
              "LadderConfiguration": {
                "type": "string",
                "Description": "Description of the configuration of the ladder structure used."
              }
            }
          },
          "Pset_CableCarrierSegmentTypeCableTraySegment": {
            "Properties": {
              "HasCover": {
                "type": "boolean",
                "Description": "Indication of whether the cable tray has a cover (=TRUE) or not (= FALSE). By default, this value should be set to FALSE..",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_CableCarrierSegmentTypeCableTrunkingSegment": {
            "Properties": {
              "NumberOfCompartments": {
                "type": "integer",
                "Description": "The number of separate internal compartments within the trunking."
              }
            }
          },
          "Pset_CableCarrierSegmentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_CableCarrierSegmentTypeConduitSegment": {
            "Properties": {
              "ConduitShapeType": {
                "type": "PEnum_ConduitShapeType",
                "Description": "The shape of the conduit segment.",
                "values": [
                  "CIRCULAR",
                  "NOTKNOWN",
                  "OTHER",
                  "OVAL",
                  "UNSET"
                ]
              },
              "IsRigid": {
                "type": "boolean",
                "Description": "Indication of whether the conduit is rigid (= TRUE) or flexible (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the object."
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Qto_CableCarrierSegmentBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          },
          "Pset_CableCarrierSegmentTypeCatenaryWire": {
            "Properties": {
              "ACResistance": {
                "type": "real",
                "Description": "The resistance under AC."
              },
              "CatenaryWireType": {
                "type": "string",
                "Description": "Indicate the type of Catenary wire."
              },
              "CurrentCarryingCapacity": {
                "type": "real",
                "Description": "Maximum value of electric current which can be carried continuously by a conductor, a device or an apparatus, under specified conditions without its steady-state temperature exceeding a  specified value. Based on IEC60826-11-13. NOTE: The temperature specified value is maximum Design Ambient Temperature."
              },
              "DCResistance": {
                "type": "real",
                "Description": "The resistance under direct current and 20 degrees centigrade."
              },
              "LayRatio": {
                "type": "real",
                "Description": "The ratio between lay length and the diameter of the single conductor."
              },
              "MassPerLength": {
                "type": "real",
                "Description": "Mass per length, i.e. mass of a beam with a unit length of extrusion. For example measured in kg/m."
              },
              "MechanicalTension": {
                "type": "real",
                "Description": "Nominal value of mechanical force applied to a flow segment."
              },
              "StrandingMethod": {
                "type": "string",
                "Description": "Specifies the method used to strand the cable. Stranding is the process where a particular number of stranding elements are joined together while winding them round a common axis."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              },
              "ThermalExpansionCoefficient": {
                "type": "real",
                "Description": "A measure of the expansion coefficient for warming up the material about one Kelvin."
              },
              "UltimateTensileStrength": {
                "type": "real",
                "Description": "Indicates the maximum stress that a material or element can withstand before breaking while being stretched or pulled."
              },
              "YoungModulus": {
                "type": "real",
                "Description": "A measure of the Young's modulus of elasticity of the material."
              }
            }
          },
          "Pset_CableCarrierSegmentTypeDropper": {
            "Properties": {
              "CurrentCarryingCapacity": {
                "type": "real",
                "Description": "Maximum value of electric current which can be carried continuously by a conductor, a device or an apparatus, under specified conditions without its steady-state temperature exceeding a  specified value. Based on IEC60826-11-13. NOTE: The temperature specified value is maximum Design Ambient Temperature."
              },
              "IsAdjustable": {
                "type": "boolean",
                "Description": "Indicates whether the element is adjustable or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsCurrentCarrying": {
                "type": "boolean",
                "Description": "To indicate whether the current will go through the dropper.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsRigid": {
                "type": "boolean",
                "Description": "Indication of whether the conduit is rigid (= TRUE) or flexible (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalLoad": {
                "type": "real",
                "Description": "The nominal load that a component can support."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              },
              "UltimateTensileStrength": {
                "type": "real",
                "Description": "Indicates the maximum stress that a material or element can withstand before breaking while being stretched or pulled."
              }
            }
          },
          "Qto_ConduitSegmentBaseQuantities": {
            "Properties": {
              "InnerDiameter": {
                "type": "real",
                "Description": "The actual inner diameter of the object."
              },
              "OuterDiameter": {
                "type": "real",
                "Description": "The actual outer diameter of the object."
              }
            }
          }
        }
      },
      "IfcCableFitting": {
        "Parent": "IfcFlowFitting",
        "Description": "A cable fitting is a fitting that is placed at a junction, transition or termination in a cable system.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_CableFittingTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CableFittingBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_TelecomCableGeneral": {
            "Properties": {
              "Attenuation": {
                "type": "real",
                "Description": "Indicates the optical or electrical attenuation of the cable measured in dB, at a certain wavelength or frequency, changing with the length of the cable."
              },
              "CableArmourType": {
                "type": "PEnum_CableArmourType",
                "Description": "The armour type of the cable for mechanical protection.",
                "values": [
                  "DIELECTRIC",
                  "METALLIC",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "CableFunctionType": {
                "type": "PEnum_CableFunctionType",
                "Description": "Distinguishes between Telecom and Power Supply cables.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "POWERSUPPLY",
                  "TELECOMMUNICATION",
                  "UNSET"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsFireResistant": {
                "type": "boolean",
                "Description": "Indicates whether the cable is fire resistant.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "JacketColour": {
                "type": "string",
                "Description": "Indicates the colour of the cable or fitting jacket."
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the object."
              }
            }
          }
        }
      },
      "IfcCableFittingType": {
        "Parent": "IfcFlowFittingType",
        "Description": "The flow fitting type IfcCableFittingType defines commonly shared information for occurrences of cable fittings. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a cable fitting type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCableFittingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCableFittingType are represented by instances of IfcCableFitting. Refer to the documentation at IfcCableFitting for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_CableFittingTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CableFittingBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_FittingJunction": {
            "Properties": {
              "JunctionLeftAngle": {
                "type": "real",
                "Description": "The change of direction of flow for the left junction."
              },
              "JunctionLeftRadius": {
                "type": "real",
                "Description": "The radius of bending for the left junction."
              },
              "JunctionRightAngle": {
                "type": "real",
                "Description": "The change of direction of flow for the right junction where 0 indicates straight segment."
              },
              "JunctionRightRadius": {
                "type": "real",
                "Description": "The radius of bending for the right junction where 0 indicates sharp bend."
              },
              "JunctionType": {
                "type": "PEnum_FittingJunctionType",
                "Description": "The type of junction. TEE=3 ports, CROSS = 4 ports.",
                "values": [
                  "CROSS",
                  "NOTKNOWN",
                  "OTHER",
                  "TEE",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FittingTransition": {
            "Properties": {
              "EccentricityInY": {
                "type": "real",
                "Description": "Distance in y direction between the two points (or vertex points) engaged in the point connection."
              },
              "EccentricityInZ": {
                "type": "real",
                "Description": "Distance in z direction between the two points (or vertex points) engaged in the point connection."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Pset_CableFittingTypeExit": {
            "Properties": {
              "GroundResistance": {
                "type": "real",
                "Description": "The soil or ground resistance to electrical current from the cable fitting."
              }
            }
          },
          "Pset_CableFittingTypeFanout": {
            "Properties": {
              "NumberOfTubes": {
                "type": "integer",
                "Description": "Number of fiber tubes."
              },
              "TubeDiameter": {
                "type": "real",
                "Description": "Indicates the diameter of the fiber tubes that are used in the fan out."
              }
            }
          },
          "Pset_OpticalAdapter": {
            "Properties": {
              "FiberType": {
                "type": "PEnum_FiberType",
                "Description": "Indicates the type of the single fiber.",
                "values": [
                  "BEND_INSENSITIVEFIBER",
                  "CUTOFFSHIFTEDFIBER",
                  "DISPERSIONSHIFTEDFIBER",
                  "LOWWATERPEAKFIBER",
                  "NON_ZERODISPERSIONSHIFTEDFIBER",
                  "NOTKNOWN",
                  "OM1",
                  "OM2",
                  "OM3",
                  "OM4",
                  "OM5",
                  "OTHER",
                  "STANDARDSINGLEMODEFIBER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_TelecomCableGeneral": {
            "Properties": {
              "Attenuation": {
                "type": "real",
                "Description": "Indicates the optical or electrical attenuation of the cable measured in dB, at a certain wavelength or frequency, changing with the length of the cable."
              },
              "CableArmourType": {
                "type": "PEnum_CableArmourType",
                "Description": "The armour type of the cable for mechanical protection.",
                "values": [
                  "DIELECTRIC",
                  "METALLIC",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "CableFunctionType": {
                "type": "PEnum_CableFunctionType",
                "Description": "Distinguishes between Telecom and Power Supply cables.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "POWERSUPPLY",
                  "TELECOMMUNICATION",
                  "UNSET"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsFireResistant": {
                "type": "boolean",
                "Description": "Indicates whether the cable is fire resistant.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "JacketColour": {
                "type": "string",
                "Description": "Indicates the colour of the cable or fitting jacket."
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the object."
              }
            }
          }
        }
      },
      "IfcCableSegment": {
        "Parent": "IfcFlowSegment",
        "Description": "A cable segment is a flow segment used to carry electrical power, data, or telecommunications signals.A cable segment is used to typically join two sections of an electrical network or a network of components carrying the electrical service.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_CableSegmentOccurrence": {
            "Properties": {
              "CarrierStackNumber": {
                "type": "integer",
                "Description": "Number of carrier segments (tray, ladder etc.) that are vertically stacked (vertical is measured as the z-axis of the local coordinate system of the carrier segment)."
              },
              "CurrentCarryingCapacity": {
                "type": "real",
                "Description": "Maximum value of electric current which can be carried continuously by a conductor, a device or an apparatus, under specified conditions without its steady-state temperature exceeding a  specified value. Based on IEC60826-11-13. NOTE: The temperature specified value is maximum Design Ambient Temperature."
              },
              "DistanceBetweenParallelCircuits": {
                "type": "real",
                "Description": "Distance measured between parallel circuits."
              },
              "InstallationMethod": {
                "type": "string",
                "Description": "Method of installation of cable/conductor. Installation methods are typically defined by reference in standards such as IEC 60364-5-52, table 52A-1 or BS7671 Appendix 4 Table 4A1 etc. Selection of the value to be used should be determined from such a standard according to local usage."
              },
              "InstallationMethodFlagEnum": {
                "type": "PEnum_InstallationMethodFlagEnum",
                "Description": "Special installation conditions relating to particular types of installation based on IEC60364-5-52:2001 reference installation methods C and D.",
                "values": [
                  "BELOWCEILING",
                  "INDUCT",
                  "INSOIL",
                  "NOTKNOWN",
                  "ONWALL",
                  "OTHER",
                  "UNSET"
                ]
              },
              "IsHorizontalCable": {
                "type": "boolean",
                "Description": "Indication of whether the cable occurrences are mounted horizontally (= TRUE) or vertically (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsMountedFlatCable": {
                "type": "boolean",
                "Description": "Indication of whether the cable occurrences are mounted flat (= TRUE) or in a trefoil pattern (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaximumCableLength": {
                "type": "real",
                "Description": "Maximum cable length based on voltagedrop. NOTE: This value may also be specified as a constraint within an IFC model if required but is included within the property set at this stage pending implementation of the required capabilities within software applications."
              },
              "MountingMethod": {
                "type": "PEnum_MountingMethodEnum",
                "Description": "The method of mounting cable segment occurrences on a cable carrier occurrence from which the method required can be selected. This is for the purpose of carrying out 'worst case' cable sizing calculations and may be a conceptual requirement rather than a statement of the physical occurrences of cable and carrier segments.",
                "values": [
                  "LADDER",
                  "NOTKNOWN",
                  "OTHER",
                  "PERFORATEDTRAY",
                  "UNSET"
                ]
              },
              "NumberOfParallelCircuits": {
                "type": "integer",
                "Description": "Number of parallel circuits."
              },
              "PowerLoss": {
                "type": "real",
                "Description": "The power loss in [W]."
              },
              "SequentialCode": {
                "type": "string",
                "Description": "Indicates the sequential code of the cable or wire."
              },
              "SoilConductivity": {
                "type": "real",
                "Description": "Thermal conductivity of soil. Generally, within standards such as IEC 60364-5-52, table 52A-16, the resistivity of soil is required (measured in [SI] units of degK.m /W). This is the reciprocal of the conductivity value and needs to be calculated accordingly."
              },
              "UserCorrectionFactor": {
                "type": "real",
                "Description": "An arbitrary correction factor that may be applied by the user."
              }
            }
          },
          "Pset_CableSegmentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CableSegmentBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          },
          "Pset_CableSegmentConnector": {
            "Properties": {
              "ConnectorAColour": {
                "type": "string",
                "Description": "Indicates the colour A- end of connector."
              },
              "ConnectorAGender": {
                "type": "PEnum_DistributionPortGender",
                "Description": "Indicates the gender of A-end connector.",
                "values": [
                  "FEMALE",
                  "MALE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ConnectorAType": {
                "type": "string",
                "Description": "Indicates the type of A-end connector."
              },
              "ConnectorBColour": {
                "type": "string",
                "Description": "Indicates the colour B- end of connector."
              },
              "ConnectorBGender": {
                "type": "PEnum_DistributionPortGender",
                "Description": "Indicates the gender of B-end connector.",
                "values": [
                  "FEMALE",
                  "MALE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ConnectorBType": {
                "type": "string",
                "Description": "Indicates the type of B-end connector."
              }
            }
          },
          "Pset_TelecomCableGeneral": {
            "Properties": {
              "Attenuation": {
                "type": "real",
                "Description": "Indicates the optical or electrical attenuation of the cable measured in dB, at a certain wavelength or frequency, changing with the length of the cable."
              },
              "CableArmourType": {
                "type": "PEnum_CableArmourType",
                "Description": "The armour type of the cable for mechanical protection.",
                "values": [
                  "DIELECTRIC",
                  "METALLIC",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "CableFunctionType": {
                "type": "PEnum_CableFunctionType",
                "Description": "Distinguishes between Telecom and Power Supply cables.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "POWERSUPPLY",
                  "TELECOMMUNICATION",
                  "UNSET"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsFireResistant": {
                "type": "boolean",
                "Description": "Indicates whether the cable is fire resistant.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "JacketColour": {
                "type": "string",
                "Description": "Indicates the colour of the cable or fitting jacket."
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the object."
              }
            }
          }
        }
      },
      "IfcCableSegmentType": {
        "Parent": "IfcFlowSegmentType",
        "Description": "The flow segment type IfcCableSegmentType defines commonly shared information for occurrences of cable segments. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a cable segment type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCableSegmentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCableSegmentType are represented by instances of IfcCableSegment. Refer to the documentation at IfcCableSegment for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_CableSegmentTypeBusBarSegment": {
            "Properties": {
              "ACResistance": {
                "type": "real",
                "Description": "The resistance under AC."
              },
              "CrossSectionalArea": {
                "type": "real",
                "Description": "Cross section area of the phase(s) lead(s)."
              },
              "CurrentCarryingCapacity": {
                "type": "real",
                "Description": "Maximum value of electric current which can be carried continuously by a conductor, a device or an apparatus, under specified conditions without its steady-state temperature exceeding a  specified value. Based on IEC60826-11-13. NOTE: The temperature specified value is maximum Design Ambient Temperature."
              },
              "DCResistance": {
                "type": "real",
                "Description": "The resistance under direct current and 20 degrees centigrade."
              },
              "InsulationMethod": {
                "type": "PEnum_InsulatorType",
                "Description": "The method used to insulate.",
                "values": [
                  "LONGRODINSULATOR",
                  "NOTKNOWN",
                  "OTHER",
                  "PININSULATOR",
                  "POSTINSULATOR",
                  "UNSET"
                ]
              },
              "IsHorizontalBusbar": {
                "type": "boolean",
                "Description": "Indication of whether the busbar occurrences are routed horizontally (= TRUE) or vertically (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MassPerLength": {
                "type": "real",
                "Description": "Mass per length, i.e. mass of a beam with a unit length of extrusion. For example measured in kg/m."
              },
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "OverallDiameter": {
                "type": "real",
                "Description": "The overall diameter of a object."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              },
              "ThermalExpansionCoefficient": {
                "type": "real",
                "Description": "A measure of the expansion coefficient for warming up the material about one Kelvin."
              },
              "UltimateTensileStrength": {
                "type": "real",
                "Description": "Indicates the maximum stress that a material or element can withstand before breaking while being stretched or pulled."
              },
              "YoungModulus": {
                "type": "real",
                "Description": "A measure of the Young's modulus of elasticity of the material."
              }
            }
          },
          "Pset_CableSegmentTypeCableSegment": {
            "Properties": {
              "ACResistance": {
                "type": "real",
                "Description": "The resistance under AC."
              },
              "CurrentCarryingCapacity": {
                "type": "real",
                "Description": "Maximum value of electric current which can be carried continuously by a conductor, a device or an apparatus, under specified conditions without its steady-state temperature exceeding a  specified value. Based on IEC60826-11-13. NOTE: The temperature specified value is maximum Design Ambient Temperature."
              },
              "DCResistance": {
                "type": "real",
                "Description": "The resistance under direct current and 20 degrees centigrade."
              },
              "FunctionReliable": {
                "type": "boolean",
                "Description": "Element (such as cable, bus, core) maintain given properties/functions over a given (tested) time and conditions. According to IEC standard.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HalogenProof": {
                "type": "boolean",
                "Description": "Produces small amount of smoke and irritating Deaerator/Gas.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasProtectiveEarth": {
                "type": "boolean",
                "Description": "Indicates whether the object has a protective earth connection (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InsulationVoltage": {
                "type": "real",
                "Description": "The insulation voltage."
              },
              "MassPerLength": {
                "type": "real",
                "Description": "Mass per length, i.e. mass of a beam with a unit length of extrusion. For example measured in kg/m."
              },
              "MaximumBendingRadius": {
                "type": "real",
                "Description": "The maximum bending radius that the cable could withstand."
              },
              "MaximumCurrent": {
                "type": "real",
                "Description": "The maximum allowed current that a device is certified to handle."
              },
              "MaximumOperatingTemperature": {
                "type": "real",
                "Description": "The maximum temperature at which a cable or bus is certified to operate."
              },
              "MaximumShortCircuitTemperature": {
                "type": "real",
                "Description": "The maximum short circuit temperature at which a cable or bus is certified to operate."
              },
              "NumberOfCores": {
                "type": "integer",
                "Description": "The number of cores."
              },
              "NumberOfWires": {
                "type": "integer",
                "Description": "The number of wires used in the element."
              },
              "OverallDiameter": {
                "type": "real",
                "Description": "The overall diameter of a object."
              },
              "ScreenDiameter": {
                "type": "real",
                "Description": "The diameter of the screen around an object (if present)."
              },
              "SelfExtinguishing60332_1": {
                "type": "boolean",
                "Description": "Self Extinguishing cable/core according to IEC 60332.1.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SelfExtinguishing60332_3": {
                "type": "boolean",
                "Description": "Self Extinguishing cable/core according to IEC 60332.3.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SpecialConstruction": {
                "type": "string",
                "Description": "Special construction capabilities like self-supporting, flat devidable cable or bus flat non devidable cable or bus supporting elements inside (steal, textile, concentric conductor). Note that materials used should be agreed between exchange participants before use."
              },
              "Standard": {
                "type": "string",
                "Description": "The designation of the standard applicable for the definition of the object used."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          },
          "Pset_CableSegmentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_CableSegmentTypeConductorSegment": {
            "Properties": {
              "ACResistance": {
                "type": "real",
                "Description": "The resistance under AC."
              },
              "ConductorMaterial": {
                "type": "PEnum_MaterialEnum",
                "Description": "Type of material from which the conductor is constructed.",
                "values": [
                  "ALUMINIUM",
                  "COPPER",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ConductorShape": {
                "type": "PEnum_ShapeEnum",
                "Description": "Indication of the shape of the conductor.",
                "values": [
                  "CIRCULARCONDUCTOR",
                  "HELICALCONDUCTOR",
                  "NOTKNOWN",
                  "OTHER",
                  "RECTANGULARCONDUCTOR",
                  "SECTORCONDUCTOR",
                  "UNSET"
                ]
              },
              "Construction": {
                "type": "PEnum_ConstructionEnum",
                "Description": "Purpose of informing on how the vonductor is constructed (interwined or solid). I.e. Solid (IEV 461-01-06), stranded (IEV 461-01-07), solid-/finestranded(IEV 461-01-11) (not flexible/flexible).",
                "values": [
                  "FLEXIBLESTRANDEDCONDUCTOR",
                  "NOTKNOWN",
                  "OTHER",
                  "SOLIDCONDUCTOR",
                  "STRANDEDCONDUCTOR",
                  "UNSET"
                ]
              },
              "CrossSectionalArea": {
                "type": "real",
                "Description": "Cross section area of the phase(s) lead(s)."
              },
              "CurrentCarryingCapacity": {
                "type": "real",
                "Description": "Maximum value of electric current which can be carried continuously by a conductor, a device or an apparatus, under specified conditions without its steady-state temperature exceeding a  specified value. Based on IEC60826-11-13. NOTE: The temperature specified value is maximum Design Ambient Temperature."
              },
              "DCResistance": {
                "type": "real",
                "Description": "The resistance under direct current and 20 degrees centigrade."
              },
              "Function": {
                "type": "PEnum_FunctionEnum",
                "Description": "Type of function for which the conductor is intended.",
                "values": [
                  "LINE",
                  "NEUTRAL",
                  "NOTKNOWN",
                  "OTHER",
                  "PROTECTIVEEARTH",
                  "PROTECTIVEEARTHNEUTRAL",
                  "UNSET"
                ]
              },
              "MassPerLength": {
                "type": "real",
                "Description": "Mass per length, i.e. mass of a beam with a unit length of extrusion. For example measured in kg/m."
              },
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "NumberOfCores": {
                "type": "integer",
                "Description": "The number of cores."
              },
              "OverallDiameter": {
                "type": "real",
                "Description": "The overall diameter of a object."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              },
              "ThermalExpansionCoefficient": {
                "type": "real",
                "Description": "A measure of the expansion coefficient for warming up the material about one Kelvin."
              },
              "UltimateTensileStrength": {
                "type": "real",
                "Description": "Indicates the maximum stress that a material or element can withstand before breaking while being stretched or pulled."
              },
              "YoungModulus": {
                "type": "real",
                "Description": "A measure of the Young's modulus of elasticity of the material."
              }
            }
          },
          "Pset_CableSegmentTypeCoreSegment": {
            "Properties": {
              "ACResistance": {
                "type": "real",
                "Description": "The resistance under AC."
              },
              "CoreIdentifier": {
                "type": "string",
                "Description": "The core identification used  Identifiers may be used such as by color (Black, Brown, Grey) or by number (1, 2, 3) or by IEC phase reference (L1, L2, L3) etc."
              },
              "CurrentCarryingCapacity": {
                "type": "real",
                "Description": "Maximum value of electric current which can be carried continuously by a conductor, a device or an apparatus, under specified conditions without its steady-state temperature exceeding a  specified value. Based on IEC60826-11-13. NOTE: The temperature specified value is maximum Design Ambient Temperature."
              },
              "DCResistance": {
                "type": "real",
                "Description": "The resistance under direct current and 20 degrees centigrade."
              },
              "FunctionReliable": {
                "type": "boolean",
                "Description": "Element (such as cable, bus, core) maintain given properties/functions over a given (tested) time and conditions. According to IEC standard.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HalogenProof": {
                "type": "boolean",
                "Description": "Produces small amount of smoke and irritating Deaerator/Gas.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LayRatio": {
                "type": "real",
                "Description": "The ratio between lay length and the diameter of the single conductor."
              },
              "MassPerLength": {
                "type": "real",
                "Description": "Mass per length, i.e. mass of a beam with a unit length of extrusion. For example measured in kg/m."
              },
              "OverallDiameter": {
                "type": "real",
                "Description": "The overall diameter of a object."
              },
              "ScreenDiameter": {
                "type": "real",
                "Description": "The diameter of the screen around an object (if present)."
              },
              "SelfExtinguishing60332_1": {
                "type": "boolean",
                "Description": "Self Extinguishing cable/core according to IEC 60332.1.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SelfExtinguishing60332_3": {
                "type": "boolean",
                "Description": "Self Extinguishing cable/core according to IEC 60332.3.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SheathColours": {
                "type": "PEnum_CoreColoursEnum",
                "Description": "",
                "values": [
                  "BLACK",
                  "BLUE",
                  "BROWN",
                  "GOLD",
                  "GREEN",
                  "GREENANDYELLOW",
                  "GREY",
                  "NOTKNOWN",
                  "ORANGE",
                  "OTHER",
                  "PINK",
                  "RED",
                  "SILVER",
                  "TURQUOISE",
                  "UNSET",
                  "VIOLET",
                  "WHITE",
                  "YELLOW"
                ]
              },
              "Standard": {
                "type": "string",
                "Description": "The designation of the standard applicable for the definition of the object used."
              },
              "StrandingMethod": {
                "type": "string",
                "Description": "Specifies the method used to strand the cable. Stranding is the process where a particular number of stranding elements are joined together while winding them round a common axis."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              },
              "ThermalExpansionCoefficient": {
                "type": "real",
                "Description": "A measure of the expansion coefficient for warming up the material about one Kelvin."
              },
              "UltimateTensileStrength": {
                "type": "real",
                "Description": "Indicates the maximum stress that a material or element can withstand before breaking while being stretched or pulled."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              },
              "YoungModulus": {
                "type": "real",
                "Description": "A measure of the Young's modulus of elasticity of the material."
              }
            }
          },
          "Qto_CableSegmentBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          },
          "Pset_CableSegmentConnector": {
            "Properties": {
              "ConnectorAColour": {
                "type": "string",
                "Description": "Indicates the colour A- end of connector."
              },
              "ConnectorAGender": {
                "type": "PEnum_DistributionPortGender",
                "Description": "Indicates the gender of A-end connector.",
                "values": [
                  "FEMALE",
                  "MALE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ConnectorAType": {
                "type": "string",
                "Description": "Indicates the type of A-end connector."
              },
              "ConnectorBColour": {
                "type": "string",
                "Description": "Indicates the colour B- end of connector."
              },
              "ConnectorBGender": {
                "type": "PEnum_DistributionPortGender",
                "Description": "Indicates the gender of B-end connector.",
                "values": [
                  "FEMALE",
                  "MALE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ConnectorBType": {
                "type": "string",
                "Description": "Indicates the type of B-end connector."
              }
            }
          },
          "Pset_CableSegmentTypeContactWire": {
            "Properties": {
              "ACResistance": {
                "type": "real",
                "Description": "The resistance under AC."
              },
              "CrossSectionalArea": {
                "type": "real",
                "Description": "Cross section area of the phase(s) lead(s)."
              },
              "CurrentCarryingCapacity": {
                "type": "real",
                "Description": "Maximum value of electric current which can be carried continuously by a conductor, a device or an apparatus, under specified conditions without its steady-state temperature exceeding a  specified value. Based on IEC60826-11-13. NOTE: The temperature specified value is maximum Design Ambient Temperature."
              },
              "DCResistance": {
                "type": "real",
                "Description": "The resistance under direct current and 20 degrees centigrade."
              },
              "MassPerLength": {
                "type": "real",
                "Description": "Mass per length, i.e. mass of a beam with a unit length of extrusion. For example measured in kg/m."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              },
              "ThermalExpansionCoefficient": {
                "type": "real",
                "Description": "A measure of the expansion coefficient for warming up the material about one Kelvin."
              },
              "TorsionalStrength": {
                "type": "real",
                "Description": "Shear strength in torsion."
              },
              "YoungModulus": {
                "type": "real",
                "Description": "A measure of the Young's modulus of elasticity of the material."
              }
            }
          },
          "Pset_CableSegmentTypeEarthingConductor": {
            "Properties": {
              "ResistanceToGround": {
                "type": "real",
                "Description": "The resistance through earthing conductor to the ground. Real part of the impedance to earth [SOURCE IEC: 195-01-18]"
              }
            }
          },
          "Pset_CableSegmentTypeFiberSegment": {
            "Properties": {
              "FiberColour": {
                "type": "PEnum_FiberColour",
                "Description": "Indicates the colour of a single fiber.",
                "values": [
                  "AQUA",
                  "BLACK",
                  "BLUE",
                  "BROWN",
                  "GREEN",
                  "NOTKNOWN",
                  "ORANGE",
                  "OTHER",
                  "RED",
                  "ROSE",
                  "SLATE",
                  "UNSET",
                  "VIOLET",
                  "WHITE",
                  "YELLOW"
                ]
              },
              "FiberType": {
                "type": "PEnum_FiberType",
                "Description": "Indicates the type of the single fiber.",
                "values": [
                  "BEND_INSENSITIVEFIBER",
                  "CUTOFFSHIFTEDFIBER",
                  "DISPERSIONSHIFTEDFIBER",
                  "LOWWATERPEAKFIBER",
                  "NON_ZERODISPERSIONSHIFTEDFIBER",
                  "NOTKNOWN",
                  "OM1",
                  "OM2",
                  "OM3",
                  "OM4",
                  "OM5",
                  "OTHER",
                  "STANDARDSINGLEMODEFIBER",
                  "UNSET"
                ]
              },
              "HasTightJacket": {
                "type": "boolean",
                "Description": "Indicates whether the fiber has a tight jacket or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_CableSegmentTypeFiberTubeSegment": {
            "Properties": {
              "FiberTubeColour": {
                "type": "PEnum_FiberColour",
                "Description": "Indicates the colour of a single fiber tube.",
                "values": [
                  "AQUA",
                  "BLACK",
                  "BLUE",
                  "BROWN",
                  "GREEN",
                  "NOTKNOWN",
                  "ORANGE",
                  "OTHER",
                  "RED",
                  "ROSE",
                  "SLATE",
                  "UNSET",
                  "VIOLET",
                  "WHITE",
                  "YELLOW"
                ]
              },
              "NumberOfFibers": {
                "type": "integer",
                "Description": "Indicates the number of fibers in the single tube or cable."
              }
            }
          },
          "Pset_CableSegmentTypeOpticalCableSegment": {
            "Properties": {
              "FiberMode": {
                "type": "PEnum_FiberMode",
                "Description": "Indicates the fiber mode.",
                "values": [
                  "MULTIMODE",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLEMODE",
                  "UNSET"
                ]
              },
              "NumberOfFibers": {
                "type": "integer",
                "Description": "Indicates the number of fibers in the single tube or cable."
              },
              "NumberOfMultiModeFibers": {
                "type": "integer",
                "Description": "Total number of multi-mode fibers in the optical fiber cable."
              },
              "NumberOfSingleModeFibers": {
                "type": "integer",
                "Description": "Total number of single-mode fibers in the optical fiber cable."
              },
              "NumberOfTubes": {
                "type": "integer",
                "Description": "Number of fiber tubes."
              },
              "OpticalCableStructure": {
                "type": "PEnum_OpticalCableStructureType",
                "Description": "Distinguishes between different structures of an optical fiber cable.",
                "values": [
                  "BREAKOUT",
                  "LOOSETUBE",
                  "NOTKNOWN",
                  "OTHER",
                  "PATCHCORD",
                  "PIGTAIL",
                  "TIGHTBUFFERED",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_CableSegmentTypeStitchWire": {
            "Properties": {
              "MechanicalTension": {
                "type": "real",
                "Description": "Nominal value of mechanical force applied to a flow segment."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              },
              "UltimateTensileStrength": {
                "type": "real",
                "Description": "Indicates the maximum stress that a material or element can withstand before breaking while being stretched or pulled."
              }
            }
          },
          "Pset_CableSegmentTypeWirePairSegment": {
            "Properties": {
              "CharacteristicImpedance": {
                "type": "real",
                "Description": "A quantity defined for a mode of propagation at a given frequency in a specific uniform transmission line or uniform waveguide by one of the three following relations:\nZ1 = S/ |I|2\nZ2 = |U|2 / S\nZ3 = U / I\nwhere Z is the complex characteristic impedance, S the complex power and U and I are the values, usually complex, respectively of a voltage and a current conventionally defined for each type of mode by analogy with transmission line equations."
              },
              "ConductorDiameter": {
                "type": "real",
                "Description": "Indicates the conductor diameter. It is only used for twisted and untwisted wire pair."
              },
              "CoreConductorDiameter": {
                "type": "real",
                "Description": "Indicates the core conductor diameter. It is only used for coaxial wire pair."
              },
              "JacketColour": {
                "type": "string",
                "Description": "Indicates the colour of the cable or fitting jacket."
              },
              "ShieldConductorDiameter": {
                "type": "real",
                "Description": "Indicates the shielded conductor diameter. It is only used for coaxial wire pair."
              },
              "WirePairType": {
                "type": "PEnum_WirePairType",
                "Description": "Indicates the type of wire pair, i.e., twisted, untwisted or coaxial pair.",
                "values": [
                  "COAXIAL",
                  "NOTKNOWN",
                  "OTHER",
                  "TWISTED",
                  "UNSET",
                  "UNTWISTED"
                ]
              }
            }
          },
          "Pset_CoaxialCable": {
            "Properties": {
              "CharacteristicImpedance": {
                "type": "real",
                "Description": "A quantity defined for a mode of propagation at a given frequency in a specific uniform transmission line or uniform waveguide by one of the three following relations:\nZ1 = S/ |I|2\nZ2 = |U|2 / S\nZ3 = U / I\nwhere Z is the complex characteristic impedance, S the complex power and U and I are the values, usually complex, respectively of a voltage and a current conventionally defined for each type of mode by analogy with transmission line equations."
              },
              "CouplingLoss": {
                "type": "real",
                "Description": "Indicates the coupling loss of a leaky coaxial cable (radiating cable)."
              },
              "MaximumTransmissionAttenuation": {
                "type": "real",
                "Description": "Indicates the Maximum transmission attenuation of feeder."
              },
              "NumberOfCoaxialPairs": {
                "type": "integer",
                "Description": "Indicates the total number of coaxial pairs in the coaxial cable."
              },
              "PropagationSpeedCoefficient": {
                "type": "real",
                "Description": "Indicates the propagation speed coefficient."
              },
              "RadiantFrequency": {
                "type": "real",
                "Description": "Indicates the radiant frequency of the leaky coaxial cable (radiating cable)."
              },
              "TransmissionLoss": {
                "type": "real",
                "Description": "Indicates the transmission loss of the leaky coaxial cable (radiating cable)."
              }
            }
          },
          "Pset_ElectricalFeederLine": {
            "Properties": {
              "CurrentCarryingCapacity": {
                "type": "real",
                "Description": "Maximum value of electric current which can be carried continuously by a conductor, a device or an apparatus, under specified conditions without its steady-state temperature exceeding a  specified value. Based on IEC60826-11-13. NOTE: The temperature specified value is maximum Design Ambient Temperature."
              },
              "ElectricalClearanceDistance": {
                "type": "real",
                "Description": "The distance between two conductive parts along a string stretched the shortest way between these conductive parts. (IEV ref 441-17-31)"
              },
              "ElectricalFeederType": {
                "type": "PEnum_ElectricalFeederType",
                "Description": "Type of electrical feeder.",
                "values": [
                  "ALONGTRACKFEEDER",
                  "BYPASSFEEDER",
                  "NEGATIVEFEEDER",
                  "NOTKNOWN",
                  "OTHER",
                  "POSITIVEFEEDER",
                  "REINFORCINGFEEDER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_OpticalPigtail": {
            "Properties": {
              "ConnectorType": {
                "type": "string",
                "Description": "Indicates the type of connector."
              },
              "FiberType": {
                "type": "PEnum_FiberType",
                "Description": "Indicates the type of the single fiber.",
                "values": [
                  "BEND_INSENSITIVEFIBER",
                  "CUTOFFSHIFTEDFIBER",
                  "DISPERSIONSHIFTEDFIBER",
                  "LOWWATERPEAKFIBER",
                  "NON_ZERODISPERSIONSHIFTEDFIBER",
                  "NOTKNOWN",
                  "OM1",
                  "OM2",
                  "OM3",
                  "OM4",
                  "OM5",
                  "OTHER",
                  "STANDARDSINGLEMODEFIBER",
                  "UNSET"
                ]
              },
              "JacketColour": {
                "type": "string",
                "Description": "Indicates the colour of the cable or fitting jacket."
              }
            }
          },
          "Pset_PatchCordCable": {
            "Properties": {
              "JacketColour": {
                "type": "string",
                "Description": "Indicates the colour of the cable or fitting jacket."
              }
            }
          },
          "Pset_SymmetricPairCable": {
            "Properties": {
              "NumberOfTwistedPairs": {
                "type": "integer",
                "Description": "Total number of twisted wire pairs in copper pair cables."
              },
              "NumberOfUntwistedPairs": {
                "type": "integer",
                "Description": "Total number of untwisted wire pairs in the copper pair cable."
              }
            }
          },
          "Pset_TelecomCableGeneral": {
            "Properties": {
              "Attenuation": {
                "type": "real",
                "Description": "Indicates the optical or electrical attenuation of the cable measured in dB, at a certain wavelength or frequency, changing with the length of the cable."
              },
              "CableArmourType": {
                "type": "PEnum_CableArmourType",
                "Description": "The armour type of the cable for mechanical protection.",
                "values": [
                  "DIELECTRIC",
                  "METALLIC",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "CableFunctionType": {
                "type": "PEnum_CableFunctionType",
                "Description": "Distinguishes between Telecom and Power Supply cables.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "POWERSUPPLY",
                  "TELECOMMUNICATION",
                  "UNSET"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsFireResistant": {
                "type": "boolean",
                "Description": "Indicates whether the cable is fire resistant.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "JacketColour": {
                "type": "string",
                "Description": "Indicates the colour of the cable or fitting jacket."
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the object."
              }
            }
          }
        }
      },
      "IfcCommunicationsAppliance": {
        "Parent": "IfcFlowTerminal",
        "Description": "A communications appliance transmits and receives electronic or digital information as data or sound.Communication appliances may be fixed in place or may be able to be moved from one space to another. Communication appliances require an electrical supply that may be supplied either by an electrical circuit or provided from a local battery source.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_CommunicationsApplianceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CommunicationsApplianceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCommunicationsApplianceType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcCommunicationsApplianceType defines commonly shared information for occurrences of communications appliances. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a communications appliance type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCommunicationsApplianceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCommunicationsApplianceType are represented by instances of IfcCommunicationsAppliance. Refer to the documentation at IfcCommunicationsAppliance for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_CommunicationsApplianceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CommunicationsApplianceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_CommunicationsApplianceTypeAntenna": {
            "Properties": {
              "AntennaGain": {
                "type": "real",
                "Description": "Indicates the antenna gain, which is a ratio of the power transmitted by an antenna in a specific direction compared to an isotropic antenna."
              },
              "AntennaType": {
                "type": "PEnum_AntennaType",
                "Description": "Indicates the type of antenna.",
                "values": [
                  "CEILING",
                  "NOTKNOWN",
                  "OTHER",
                  "PANEL",
                  "UNSET",
                  "YAGI"
                ]
              },
              "PolarizationMode": {
                "type": "PEnum_PolarizationMode",
                "Description": "Indicates the polarization mode of antenna.",
                "values": [
                  "DUALPOLARIZATION",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLEPOLARIZATION",
                  "UNSET"
                ]
              },
              "RadiationPattern": {
                "type": "PEnum_RadiationPattern",
                "Description": "Indicates the radiation pattern of antenna.",
                "values": [
                  "DIRECTIONAL",
                  "FANBEAM",
                  "NOTKNOWN",
                  "OMNIDIRECTIONAL",
                  "OTHER",
                  "PENCILBEAM",
                  "SHAPEDBEAM",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_CommunicationsApplianceTypeAutomaton": {
            "Properties": {
              "InputSignalType": {
                "type": "PEnum_InputOutputSignalType",
                "Description": "The type of the input signal.",
                "values": [
                  "CURRENT",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VOLTAGE"
                ]
              },
              "OutputSignalType": {
                "type": "PEnum_InputOutputSignalType",
                "Description": "The type of the output signal.",
                "values": [
                  "CURRENT",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VOLTAGE"
                ]
              }
            }
          },
          "Pset_CommunicationsApplianceTypeComputer": {
            "Properties": {
              "StorageCapacity": {
                "type": "integer",
                "Description": "Indicates the total data storage capacity of the device. It is defined by bytes."
              },
              "UserInterfaceType": {
                "type": "PEnum_ComputerUIType",
                "Description": "Indicates the user interface of the computer.",
                "values": [
                  "CLI",
                  "GUI",
                  "NOTKNOWN",
                  "OTHER",
                  "TOUCHSCREEN",
                  "TOUCHTONE",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_CommunicationsApplianceTypeIntelligentPeripheral": {
            "Properties": {
              "UserCapacity": {
                "type": "integer",
                "Description": "Indicates the user capacity of the device, defined as the maximum number of users that can be active at the same time."
              }
            }
          },
          "Pset_CommunicationsApplianceTypeIpNetworkEquipment": {
            "Properties": {
              "EquipmentCapacity": {
                "type": "integer",
                "Description": "Indicates the equipment capacity of the appliance. The value is defined in bits/s."
              },
              "ManagingSoftware": {
                "type": "string",
                "Description": "Indicates the type of software responsible for managing the equipment."
              },
              "NumberOfCoolingFans": {
                "type": "integer",
                "Description": "Indicates the number of cooling fans in the equipment."
              },
              "NumberOfSlots": {
                "type": "integer",
                "Description": "Indicates the number of  slots."
              },
              "SupportedProtocol": {
                "type": "string",
                "Description": "Indicates the protocol supported by the IP network equipment."
              }
            }
          },
          "Pset_CommunicationsApplianceTypeModem": {
            "Properties": {
              "CommonInterfaceType": {
                "type": "PEnum_CommonInterfaceType",
                "Description": "Indicates the type of the device common interfaces.",
                "values": [
                  "DRYCONTACTSINTERFACE",
                  "MANAGEMENTINTERFACE",
                  "NOTKNOWN",
                  "OTHER",
                  "OTHER_IO_INTERFACE",
                  "SYNCHRONIZATIONINTERFACE",
                  "UNSET"
                ]
              },
              "TrafficInterfaceType": {
                "type": "PEnum_ModemTrafficInterfaceType",
                "Description": "Indicates the type of the device traffic interfaces.",
                "values": [
                  "E1",
                  "FASTETHERNET",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "XDSL"
                ]
              }
            }
          },
          "Pset_CommunicationsApplianceTypeOpticalLineTerminal": {
            "Properties": {
              "NumberOfSlots": {
                "type": "integer",
                "Description": "Indicates the number of  slots."
              }
            }
          },
          "Pset_CommunicationsApplianceTypeOpticalNetworkUnit": {
            "Properties": {
              "OpticalNetworkUnitType": {
                "type": "PEnum_OpticalNetworkUnitType",
                "Description": "Indicates the type of the optical network unit equipment.",
                "values": [
                  "ACTIVE",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSIVE",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_CommunicationsApplianceTypeTelecommand": {
            "Properties": {
              "NumberOfCPUs": {
                "type": "integer",
                "Description": "The number of CPUs used by the equipment."
              }
            }
          },
          "Pset_CommunicationsApplianceTypeTelephonyExchange": {
            "Properties": {
              "UserCapacity": {
                "type": "integer",
                "Description": "Indicates the user capacity of the device, defined as the maximum number of users that can be active at the same time."
              }
            }
          },
          "Pset_CommunicationsApplianceTypeTransportEquipment": {
            "Properties": {
              "ElectricalCrossCapacity": {
                "type": "string",
                "Description": "Indicates the electrical cross capacity of the transport equipment."
              },
              "IsUpgradable": {
                "type": "boolean",
                "Description": "Indicates whether the transport equipment can be upgraded or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NumberOfSlots": {
                "type": "integer",
                "Description": "Indicates the number of  slots."
              },
              "TransportEquipmentAssemblyType": {
                "type": "PEnum_TransportEquipmentAssemblyType",
                "Description": "Indicates the type of transport equipment assembly.",
                "values": [
                  "FIXEDCONFIGURATION",
                  "MODULARCONFIGURATION",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "TransportEquipmentType": {
                "type": "PEnum_TransportEquipmentType",
                "Description": "Indicates the type of transport equipment.",
                "values": [
                  "MPLS_TP",
                  "NOTKNOWN",
                  "OTHER",
                  "OTN",
                  "PDH",
                  "SDH",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_DataTransmissionUnit": {
            "Properties": {
              "DataTransmissionUnitUsage": {
                "type": "PEnum_DataTransmissionUnitUsage",
                "Description": "Indicates the usage of the data transmission unit. It can be used to transmit data for different types of sensors.",
                "values": [
                  "EARTHQUAKE",
                  "FOREIGNOBJECT",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WINDANDRAIN"
                ]
              },
              "SerialInterfaceType": {
                "type": "PEnum_SerialInterfaceType",
                "Description": "Indicates the type of serial interface used by the device.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RS_232",
                  "RS_422",
                  "RS_485",
                  "UNSET"
                ]
              },
              "WorkingState": {
                "type": "string",
                "Description": "Indicates the working state of device or system."
              }
            }
          },
          "Pset_RailwayBalise": {
            "Properties": {
              "DetectionRange": {
                "type": "real",
                "Description": "The detection range of the equipment."
              },
              "FailureInformation": {
                "type": "string",
                "Description": "The information for failure description."
              },
              "InformationLength": {
                "type": "integer",
                "Description": "Indicates supported bytes of the data Information, e.g.127 bytes."
              },
              "IP_Code": {
                "type": "string",
                "Description": "IP Code, the International Protection Marking, IEC 60529), classifies and rates the degree of protection provided against intrusion."
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWeight": {
                "type": "real",
                "Description": "Nominal weight of the object."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "RailwayBaliseType": {
                "type": "PEnum_RailwayBaliseType",
                "Description": "Type of the railway balise.",
                "values": [
                  "ACTIVEBALISE",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSIVEBALISE",
                  "UNSET"
                ]
              },
              "TransmissionRate": {
                "type": "integer",
                "Description": "Data transmission rate between the device and the receiving module in bits per second."
              }
            }
          },
          "Pset_TransportEquipmentOTN": {
            "Properties": {
              "ChromaticDispersionTolerance": {
                "type": "real",
                "Description": "Indicates the tolerance of the transport equipment chromatic dispersion. The value is defined by picosecond per nanometer (ps/nm)."
              },
              "EquipmentCapacity": {
                "type": "integer",
                "Description": "Indicates the equipment capacity of the appliance. The value is defined in bits/s."
              },
              "MinimumOpticalSignalToNoiseRatio": {
                "type": "real",
                "Description": "Indicates the minimum optical signal to noise ratio of the transport equipment."
              },
              "PolarizationModeDispersionTolerance": {
                "type": "real",
                "Description": "Indicates the polarization mode dispersion tolerance of the transport equipment. It is usually measured by picosecond."
              },
              "SingleChannelAveragePower": {
                "type": "real",
                "Description": "Indicates the average power of a single channel of the transport equipment."
              },
              "SingleWaveTransmissionRate": {
                "type": "real",
                "Description": "Indicates the single wave transmission rate of the transport equipment."
              }
            }
          }
        }
      },
      "IfcDistributionBoard": {
        "Parent": "IfcFlowController",
        "Description": "A distribution board is a flow controller in which instances of electrical or communication devices are brought together at a single place for a particular purpose.A distribution provides a housing for connected distribution elements so that they can be viewed, operated or acted upon from a single place. Each connected item may have its own geometric representation and location."
      },
      "IfcDistributionBoardType": {
        "Parent": "IfcFlowControllerType",
        "Description": "The flow controller type IfcDistributionBoardType defines commonly shared information for occurrences of distribution boards. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a distribution board type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDistributionBoardType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDistributionBoardType are represented by instances of IfcDistributionBoard. Refer to the documentation at IfcDistributionBoard for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_DistributionBoardTypeDispatchingBoard": {
            "Properties": {
              "DispatchingBoardType": {
                "type": "PEnum_DispatchingBoardType",
                "Description": "Indicates the type of dispatching board.",
                "values": [
                  "CENTER",
                  "NOTKNOWN",
                  "OTHER",
                  "STATION",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_DistributionBoardTypeDistributionFrame": {
            "Properties": {
              "PortCapacity": {
                "type": "integer",
                "Description": "Indicates the number of ports in the passive device that can be used to interconnect cables."
              }
            }
          }
        }
      },
      "IfcElectricAppliance": {
        "Parent": "IfcFlowTerminal",
        "Description": "An electric appliance is a device intended for consumer usage that is powered by electricity.Electric appliances may be fixed in place or may be able to be moved from one space to another. Electric appliances require an electrical supply that may be supplied either by an electrical circuit or provided from a local battery source.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_ElectricApplianceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ElectricApplianceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcElectricApplianceType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcElectricApplianceType defines commonly shared information for occurrences of electric appliances. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a electric appliance type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricApplianceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricApplianceType are represented by instances of IfcElectricAppliance. Refer to the documentation at IfcElectricAppliance for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_ElectricApplianceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ElectricApplianceTypeDishwasher": {
            "Properties": {
              "DishwasherType": {
                "type": "PEnum_ElectricApplianceDishwasherType",
                "Description": "Type of dishwasher.",
                "values": [
                  "BOTTLEWASHER",
                  "CUTLERYWASHER",
                  "DISHWASHER",
                  "OTHER",
                  "POTWASHER",
                  "TRAYWASHER",
                  "UNKNOWN",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ElectricApplianceTypeElectricCooker": {
            "Properties": {
              "ElectricCookerType": {
                "type": "PEnum_ElectricApplianceElectricCookerType",
                "Description": "Type of electric cooker.",
                "values": [
                  "COOKINGKETTLE",
                  "DEEPFRYER",
                  "OTHER",
                  "OVEN",
                  "STEAMCOOKER",
                  "STOVE",
                  "TILTINGFRYINGPAN",
                  "UNKNOWN",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ElectricApplianceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_TicketVendingMachine": {
            "Properties": {
              "MoneyStuckRatio": {
                "type": "real",
                "Description": "Indicates the ratio of money being stuck or jammed in appliance."
              },
              "PaymentMethod": {
                "type": "PEnum_PaymentMethod",
                "Description": "Indicates the vending machine payment method.",
                "values": [
                  "CARD",
                  "CASH",
                  "E_PAYMENT",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "TicketProductionSpeed": {
                "type": "integer",
                "Description": "Indicates the production speed of the ticket. It is measured by counting the number of tickets that can be produced per hour."
              },
              "TicketStuckRatio": {
                "type": "real",
                "Description": "Indicates the ratio of tickets being stuck or jammed in the appliance."
              },
              "TicketVendingMachineType": {
                "type": "PEnum_TicketVendingMachineType",
                "Description": "Indicates the type of ticket vending machine.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "TICKETREDEMPTIONMACHINE",
                  "TICKETREFUNDINGMACHINE",
                  "TICKETVENDINGMACHINE",
                  "UNSET"
                ]
              },
              "VendingMachineUserInterface": {
                "type": "PEnum_VendingMachineUserInterface",
                "Description": "Indicates the type of vending machine user interface.",
                "values": [
                  "MOUSECHOOSETYPE",
                  "NOTKNOWN",
                  "OTHER",
                  "TOUCH_TONE",
                  "TOUCHSCREEN",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcElectricDistributionBoard": {
        "Parent": "IfcFlowController",
        "Description": "A distribution board is a flow controller in which instances of electrical devices are brought together at a single place for a particular purpose.A distribution provides a housing for connected electrical distribution elements so that they can be viewed, operated or acted upon from a single place. Each connected item may have its own geometric representation and location.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_DistributionBoardOccurrence": {
            "Properties": {
              "IsMain": {
                "type": "boolean",
                "Description": "Identifies if the current instance is a main distribution point or topmost level in an electrical distribution hierarchy (= TRUE) or a sub-main distribution point (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSkilledOperator": {
                "type": "boolean",
                "Description": "Identifies if the current instance requires a skilled person or instructed person to perform operations on the distribution board (= TRUE) or whether operations may be performed by a person without appropriate skills or instruction (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_DistributionBoardTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_DistributionBoardBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NumberOfCircuits": {
                "type": "real",
                "Description": "Number of circuits."
              }
            }
          }
        }
      },
      "IfcElectricDistributionBoardType": {
        "Parent": "IfcFlowControllerType",
        "Description": "The flow controller type IfcElectricDistributionBoardType defines commonly shared information for occurrences of electric distribution boards. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a electric distribution board type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricDistributionBoardType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricDistributionBoardType are represented by instances of IfcElectricDistributionBoard. Refer to the documentation at IfcElectricDistributionBoard for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_DistributionBoardTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_DistributionBoardBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NumberOfCircuits": {
                "type": "real",
                "Description": "Number of circuits."
              }
            }
          }
        }
      },
      "IfcElectricFlowStorageDevice": {
        "Parent": "IfcFlowStorageDevice",
        "Description": "An electric flow storage device is a device in which electrical energy is stored and from which energy may be progressively released.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_ElectricFlowStorageDeviceTypeCommon": {
            "Properties": {
              "ConnectedConductorFunction": {
                "type": "PEnum_ConductorFunctionEnum",
                "Description": "Function of the conductors to which the load is connected.",
                "values": [
                  "NEUTRAL",
                  "NOTKNOWN",
                  "OTHER",
                  "PHASE_L1",
                  "PHASE_L2",
                  "PHASE_L3",
                  "PROTECTIVEEARTH",
                  "PROTECTIVEEARTHNEUTRAL",
                  "UNSET"
                ]
              },
              "EarthFault1PoleMaximumState": {
                "type": "real",
                "Description": "Maximum 1 pole earth fault current provided at the point of supply i.e. the fault between 1 phase and PE/PEN."
              },
              "EarthFault1PoleMinimumState": {
                "type": "real",
                "Description": "Minimum 1 pole earth fault current provided at the point of supply i.e. the fault between 1 phase and PE/PEN."
              },
              "EarthFault1PolePowerFactorMaximumState": {
                "type": "real",
                "Description": "Power factor of the maximum 1 pole earth fault  current provided at the point of supply i.e. the fault between 1 phase and PE/PEN."
              },
              "EarthFault1PolePowerFactorMinimumState": {
                "type": "real",
                "Description": "Power factor of the minimum 1 pole earth fault current provided at the point of supply i.e. the fault between 1 phase and PE/PEN."
              },
              "MaximumInsulatedVoltage": {
                "type": "real",
                "Description": "The max voltage that the insulation would operate normally"
              },
              "NominalFrequency": {
                "type": "real",
                "Description": "The nominal frequency of the supply."
              },
              "NominalSupplyVoltage": {
                "type": "real",
                "Description": "The nominal voltage of the supply."
              },
              "PowerCapacity": {
                "type": "real",
                "Description": "Power capacity of the equipment"
              },
              "RatedCapacitance": {
                "type": "real",
                "Description": "Capacitance value determined under specified conditions and declared by the manufacturer."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "ShortCircuit1PoleMaximumState": {
                "type": "real",
                "Description": "Maximum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N."
              },
              "ShortCircuit1PoleMinimumState": {
                "type": "real",
                "Description": "Minimum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N."
              },
              "ShortCircuit1PolePowerFactorMaximumState": {
                "type": "real",
                "Description": "Power factor of the maximum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N."
              },
              "ShortCircuit1PolePowerFactorMinimumState": {
                "type": "real",
                "Description": "Power factor of the minimum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N."
              },
              "ShortCircuit2PoleMinimumState": {
                "type": "real",
                "Description": "Minimum 2 pole short circuit current provided at the point of supply."
              },
              "ShortCircuit2PolePowerFactorMinimumState": {
                "type": "real",
                "Description": "Power factor of the minimum 2 pole short circuit current provided at the point of supply."
              },
              "ShortCircuit3PoleMaximumState": {
                "type": "real",
                "Description": "Maximum 3 pole short circuit current provided at the point of supply."
              },
              "ShortCircuit3PolePowerFactorMaximumState": {
                "type": "real",
                "Description": "Power factor of the maximum 3 pole short circuit current provided at the point of supply."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ElectricFlowStorageDeviceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcElectricFlowStorageDeviceType": {
        "Parent": "IfcFlowStorageDeviceType",
        "Description": "The flow storage device type IfcElectricFlowStorageDeviceType defines commonly shared information for occurrences of electric flow storage devices. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a electric flow storage device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricFlowStorageDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricFlowStorageDeviceType are represented by instances of IfcElectricFlowStorageDevice. Refer to the documentation at IfcElectricFlowStorageDevice for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_ElectricFlowStorageDeviceTypeCommon": {
            "Properties": {
              "ConnectedConductorFunction": {
                "type": "PEnum_ConductorFunctionEnum",
                "Description": "Function of the conductors to which the load is connected.",
                "values": [
                  "NEUTRAL",
                  "NOTKNOWN",
                  "OTHER",
                  "PHASE_L1",
                  "PHASE_L2",
                  "PHASE_L3",
                  "PROTECTIVEEARTH",
                  "PROTECTIVEEARTHNEUTRAL",
                  "UNSET"
                ]
              },
              "EarthFault1PoleMaximumState": {
                "type": "real",
                "Description": "Maximum 1 pole earth fault current provided at the point of supply i.e. the fault between 1 phase and PE/PEN."
              },
              "EarthFault1PoleMinimumState": {
                "type": "real",
                "Description": "Minimum 1 pole earth fault current provided at the point of supply i.e. the fault between 1 phase and PE/PEN."
              },
              "EarthFault1PolePowerFactorMaximumState": {
                "type": "real",
                "Description": "Power factor of the maximum 1 pole earth fault  current provided at the point of supply i.e. the fault between 1 phase and PE/PEN."
              },
              "EarthFault1PolePowerFactorMinimumState": {
                "type": "real",
                "Description": "Power factor of the minimum 1 pole earth fault current provided at the point of supply i.e. the fault between 1 phase and PE/PEN."
              },
              "MaximumInsulatedVoltage": {
                "type": "real",
                "Description": "The max voltage that the insulation would operate normally"
              },
              "NominalFrequency": {
                "type": "real",
                "Description": "The nominal frequency of the supply."
              },
              "NominalSupplyVoltage": {
                "type": "real",
                "Description": "The nominal voltage of the supply."
              },
              "PowerCapacity": {
                "type": "real",
                "Description": "Power capacity of the equipment"
              },
              "RatedCapacitance": {
                "type": "real",
                "Description": "Capacitance value determined under specified conditions and declared by the manufacturer."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "ShortCircuit1PoleMaximumState": {
                "type": "real",
                "Description": "Maximum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N."
              },
              "ShortCircuit1PoleMinimumState": {
                "type": "real",
                "Description": "Minimum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N."
              },
              "ShortCircuit1PolePowerFactorMaximumState": {
                "type": "real",
                "Description": "Power factor of the maximum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N."
              },
              "ShortCircuit1PolePowerFactorMinimumState": {
                "type": "real",
                "Description": "Power factor of the minimum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N."
              },
              "ShortCircuit2PoleMinimumState": {
                "type": "real",
                "Description": "Minimum 2 pole short circuit current provided at the point of supply."
              },
              "ShortCircuit2PolePowerFactorMinimumState": {
                "type": "real",
                "Description": "Power factor of the minimum 2 pole short circuit current provided at the point of supply."
              },
              "ShortCircuit3PoleMaximumState": {
                "type": "real",
                "Description": "Maximum 3 pole short circuit current provided at the point of supply."
              },
              "ShortCircuit3PolePowerFactorMaximumState": {
                "type": "real",
                "Description": "Power factor of the maximum 3 pole short circuit current provided at the point of supply."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ElectricFlowStorageDeviceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_ElectricFlowStorageDeviceTypeBattery": {
            "Properties": {
              "BatteryChargingType": {
                "type": "PEnum_BatteryChargingType",
                "Description": "Identifies the predefined types of battery charging.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RECHARGEABLE",
                  "SINGLECHARGE",
                  "UNSET"
                ]
              },
              "CurrentRegulationRate": {
                "type": "real",
                "Description": "It shows the ability of DC regulated power supply to suppress the fluctuation of output voltage caused by the change of load current (output current) when the input voltage is constant."
              },
              "EncapsulationTechnologyCode": {
                "type": "string",
                "Description": "Code indicating the encapsulation technology which has been applied in an electric, electronic or electromechanical component."
              },
              "NominalSupplyCurrent": {
                "type": "real",
                "Description": "The nominal current of the supply."
              },
              "OpenCircuitVoltage": {
                "type": "real",
                "Description": "Voltage of a cell or battery when the discharge current is zero  [Source IEC 482-03-32]"
              },
              "VoltageRegulationRate": {
                "type": "real",
                "Description": "When the input side voltage changes from the lowest allowable input value to the specified maximum value, the relative change value of the output voltage is the percentage of the rated output voltage."
              }
            }
          },
          "Pset_ElectricFlowStorageDeviceTypeCapacitor": {
            "Properties": {
              "NumberOfPhases": {
                "type": "integer",
                "Description": "Number of phases that the equipment operates on."
              }
            }
          },
          "Pset_ElectricFlowStorageDeviceTypeInductor": {
            "Properties": {
              "Inductance": {
                "type": "real",
                "Description": "Measure of the Inductance."
              },
              "NumberOfPhases": {
                "type": "integer",
                "Description": "Number of phases that the equipment operates on."
              }
            }
          },
          "Pset_ElectricFlowStorageDeviceTypeRecharger": {
            "Properties": {
              "NominalSupplyCurrent": {
                "type": "real",
                "Description": "The nominal current of the supply."
              }
            }
          },
          "Pset_ElectricFlowStorageDeviceTypeUPS": {
            "Properties": {
              "CurrentRegulationRate": {
                "type": "real",
                "Description": "It shows the ability of DC regulated power supply to suppress the fluctuation of output voltage caused by the change of load current (output current) when the input voltage is constant."
              },
              "NominalSupplyCurrent": {
                "type": "real",
                "Description": "The nominal current of the supply."
              },
              "VoltageRegulationRate": {
                "type": "real",
                "Description": "When the input side voltage changes from the lowest allowable input value to the specified maximum value, the relative change value of the output voltage is the percentage of the rated output voltage."
              }
            }
          }
        }
      },
      "IfcElectricFlowTreatmentDevice": {
        "Parent": "IfcFlowTreatmentDevice",
        "Description": "An electric flow treatment device is used to remove unwanted matter from an electric or electronic signal in a flow distribution system."
      },
      "IfcElectricFlowTreatmentDeviceType": {
        "Parent": "IfcFlowTreatmentDeviceType",
        "Description": "The flow treatment device type IfcElectricFlowTreatmentDeviceType defines commonly shared information for occurrences of mobile telecommunications appliances. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define an electric flow treatment device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricFlowTreatmentDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricFlowTreatmentDeviceType are represented by instances of IfcElectricFlowTreatmentDevice. Refer to the documentation at IfcElectricFlowTreatmentDevice for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_ElectricFlowTreatmentDeviceTypeElectronicFilter": {
            "Properties": {
              "ElectronicFilterType": {
                "type": "PEnum_ElectronicFilterType",
                "Description": "Type of electronic filter.",
                "values": [
                  "BANDPASSFLITER",
                  "BANDSTOPFILTER",
                  "FILTERCAPACITOR",
                  "HARMONICFILTER",
                  "HIGHPASSFILTER",
                  "LOWPASSFILTER",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "NominalPower": {
                "type": "real",
                "Description": "A conventional value of apparent power determining a value of the rated current that may be carried with rated voltage applied, under specified conditions. ( IEV ref 421-04-04)"
              },
              "PrimaryFrequency": {
                "type": "real",
                "Description": "The frequency that is going to be transformed and that runs into the transformer on the primary side."
              },
              "SecondaryFrequency": {
                "type": "real",
                "Description": "The frequency that has been transformed and is running out of the transformer on the secondary side."
              }
            }
          }
        }
      },
      "IfcElectricGenerator": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An electric generator is an engine that is a machine for converting mechanical energy into electrical energy.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_ElectricGeneratorTypeCommon": {
            "Properties": {
              "ElectricGeneratorEfficiency": {
                "type": "real",
                "Description": "The ratio of output capacity to intake capacity."
              },
              "MaximumPowerOutput": {
                "type": "real",
                "Description": "The maximum output power rating of the engine."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "StartCurrentFactor": {
                "type": "real",
                "Description": "IEC. Start current factor defines how large the peak starting current will become on the engine. StartCurrentFactor is multiplied to NominalCurrent and to give the start current."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ElectricGeneratorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcElectricGeneratorType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcElectricGeneratorType defines commonly shared information for occurrences of electric generators. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a electric generator type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricGeneratorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricGeneratorType are represented by instances of IfcElectricGenerator. Refer to the documentation at IfcElectricGenerator for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_ElectricGeneratorTypeCommon": {
            "Properties": {
              "ElectricGeneratorEfficiency": {
                "type": "real",
                "Description": "The ratio of output capacity to intake capacity."
              },
              "MaximumPowerOutput": {
                "type": "real",
                "Description": "The maximum output power rating of the engine."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "StartCurrentFactor": {
                "type": "real",
                "Description": "IEC. Start current factor defines how large the peak starting current will become on the engine. StartCurrentFactor is multiplied to NominalCurrent and to give the start current."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ElectricGeneratorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcElectricMotor": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An electric motor is an engine that is a machine for converting electrical energy into mechanical energy.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_ElectricMotorTypeCommon": {
            "Properties": {
              "ElectricMotorEfficiency": {
                "type": "real",
                "Description": "The ratio of output capacity to intake capacity."
              },
              "FrameSize": {
                "type": "string",
                "Description": "Designation of the frame size according to the named range of frame sizes designated at the place of use or according to a given standard."
              },
              "HasPartWinding": {
                "type": "boolean",
                "Description": "Indication of whether the motor is single speed, i.e. has a single winding (= FALSE) or multi-speed i.e.has part winding (= TRUE) .",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsGuarded": {
                "type": "boolean",
                "Description": "Indication of whether the motor enclosure is guarded (= TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LockedRotorCurrent": {
                "type": "real",
                "Description": "Input current when a motor armature is energized but not rotating."
              },
              "MaximumPowerOutput": {
                "type": "real",
                "Description": "The maximum output power rating of the engine."
              },
              "MotorEnclosureType": {
                "type": "PEnum_MotorEnclosureType",
                "Description": "A list of the available types of motor enclosure from which that required may be selected.",
                "values": [
                  "NOTKNOWN",
                  "OPENDRIPPROOF",
                  "OTHER",
                  "TOTALLYENCLOSEDAIROVER",
                  "TOTALLYENCLOSEDFANCOOLED",
                  "TOTALLYENCLOSEDNONVENTILATED",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "StartCurrentFactor": {
                "type": "real",
                "Description": "IEC. Start current factor defines how large the peak starting current will become on the engine. StartCurrentFactor is multiplied to NominalCurrent and to give the start current."
              },
              "StartingTime": {
                "type": "real",
                "Description": "The time (in s) needed for the motor to reach its rated speed with its driven equipment attached, starting from standstill and at the nominal voltage applied at its terminals."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TeTime": {
                "type": "real",
                "Description": "The maximum time (in s) at which the motor could run with locked rotor when the motor is used in an EX-environment. The time indicates that a protective device should trip before this time when the starting current of the motor is slowing through the device."
              }
            }
          },
          "Qto_ElectricMotorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcElectricMotorType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcElectricMotorType defines commonly shared information for occurrences of electric motors. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a electric motor type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricMotorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricMotorType are represented by instances of IfcElectricMotor. Refer to the documentation at IfcElectricMotor for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_ElectricMotorTypeCommon": {
            "Properties": {
              "ElectricMotorEfficiency": {
                "type": "real",
                "Description": "The ratio of output capacity to intake capacity."
              },
              "FrameSize": {
                "type": "string",
                "Description": "Designation of the frame size according to the named range of frame sizes designated at the place of use or according to a given standard."
              },
              "HasPartWinding": {
                "type": "boolean",
                "Description": "Indication of whether the motor is single speed, i.e. has a single winding (= FALSE) or multi-speed i.e.has part winding (= TRUE) .",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsGuarded": {
                "type": "boolean",
                "Description": "Indication of whether the motor enclosure is guarded (= TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LockedRotorCurrent": {
                "type": "real",
                "Description": "Input current when a motor armature is energized but not rotating."
              },
              "MaximumPowerOutput": {
                "type": "real",
                "Description": "The maximum output power rating of the engine."
              },
              "MotorEnclosureType": {
                "type": "PEnum_MotorEnclosureType",
                "Description": "A list of the available types of motor enclosure from which that required may be selected.",
                "values": [
                  "NOTKNOWN",
                  "OPENDRIPPROOF",
                  "OTHER",
                  "TOTALLYENCLOSEDAIROVER",
                  "TOTALLYENCLOSEDFANCOOLED",
                  "TOTALLYENCLOSEDNONVENTILATED",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "StartCurrentFactor": {
                "type": "real",
                "Description": "IEC. Start current factor defines how large the peak starting current will become on the engine. StartCurrentFactor is multiplied to NominalCurrent and to give the start current."
              },
              "StartingTime": {
                "type": "real",
                "Description": "The time (in s) needed for the motor to reach its rated speed with its driven equipment attached, starting from standstill and at the nominal voltage applied at its terminals."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TeTime": {
                "type": "real",
                "Description": "The maximum time (in s) at which the motor could run with locked rotor when the motor is used in an EX-environment. The time indicates that a protective device should trip before this time when the starting current of the motor is slowing through the device."
              }
            }
          },
          "Qto_ElectricMotorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcElectricTimeControl": {
        "Parent": "IfcFlowController",
        "Description": "An electric time control is a device that applies control to the provision or flow of electrical energy over time.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_ElectricTimeControlTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ElectricTimeControlBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcElectricTimeControlType": {
        "Parent": "IfcFlowControllerType",
        "Description": "The flow controller type IfcElectricTimeControlType defines commonly shared information for occurrences of electric time controls. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a electric time control type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElectricTimeControlType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElectricTimeControlType are represented by instances of IfcElectricTimeControl. Refer to the documentation at IfcElectricTimeControl for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_ElectricTimeControlTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ElectricTimeControlBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcJunctionBox": {
        "Parent": "IfcFlowFitting",
        "Description": "A junction box is an enclosure within which cables are connected.Cables may be members of an electrical circuit (for electrical power systems) or be information carriers (in a telecommunications system). A junction box is typically intended to conceal a cable junction from sight, eliminate tampering or provide a safe place for electrical connection.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_JunctionBoxTypeCommon": {
            "Properties": {
              "ClearDepth": {
                "type": "real",
                "Description": "The clear depth."
              },
              "IP_Code": {
                "type": "string",
                "Description": "IP Code, the International Protection Marking, IEC 60529), classifies and rates the degree of protection provided against intrusion."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "JunctionBoxMountingType": {
                "type": "PEnum_JunctionBoxMountingType",
                "Description": "Method of mounting to be adopted for the type of junction box.",
                "values": [
                  "CUT_IN",
                  "FACENAIL",
                  "NOTKNOWN",
                  "OTHER",
                  "SIDENAIL",
                  "UNSET"
                ]
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NumberOfGangs": {
                "type": "integer",
                "Description": "Number of gangs in the object."
              },
              "PlacingType": {
                "type": "PEnum_JunctionBoxPlacingType",
                "Description": "Location at which the type of junction box can be located.",
                "values": [
                  "CEILING",
                  "FLOOR",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WALL"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "ShapeType": {
                "type": "PEnum_JunctionBoxShapeType",
                "Description": "Shape of the junction box.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RECTANGULAR",
                  "ROUND",
                  "SLOT",
                  "UNSET"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_JunctionBoxBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NumberOfGangs": {
                "type": "real",
                "Description": "Number of gangs in the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcJunctionBoxType": {
        "Parent": "IfcFlowFittingType",
        "Description": "The flow fitting type IfcJunctionBoxType defines commonly shared information for occurrences of junction boxs. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a junction box type specification indicating the specific product information that is common to all occurrences of that product type. The IfcJunctionBoxType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcJunctionBoxType are represented by instances of IfcJunctionBox. Refer to the documentation at IfcJunctionBox for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_JunctionBoxTypeCommon": {
            "Properties": {
              "ClearDepth": {
                "type": "real",
                "Description": "The clear depth."
              },
              "IP_Code": {
                "type": "string",
                "Description": "IP Code, the International Protection Marking, IEC 60529), classifies and rates the degree of protection provided against intrusion."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "JunctionBoxMountingType": {
                "type": "PEnum_JunctionBoxMountingType",
                "Description": "Method of mounting to be adopted for the type of junction box.",
                "values": [
                  "CUT_IN",
                  "FACENAIL",
                  "NOTKNOWN",
                  "OTHER",
                  "SIDENAIL",
                  "UNSET"
                ]
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NumberOfGangs": {
                "type": "integer",
                "Description": "Number of gangs in the object."
              },
              "PlacingType": {
                "type": "PEnum_JunctionBoxPlacingType",
                "Description": "Location at which the type of junction box can be located.",
                "values": [
                  "CEILING",
                  "FLOOR",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WALL"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "ShapeType": {
                "type": "PEnum_JunctionBoxShapeType",
                "Description": "Shape of the junction box.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RECTANGULAR",
                  "ROUND",
                  "SLOT",
                  "UNSET"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_JunctionBoxBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NumberOfGangs": {
                "type": "real",
                "Description": "Number of gangs in the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_JunctionBoxTypeData": {
            "Properties": {
              "DataConnectionType": {
                "type": "PEnum_DataConnectionType",
                "Description": "Indicates the data connection type of the junction box e.g. copper pair, fiber or others.",
                "values": [
                  "COPPER",
                  "FIBER",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_OpticalSplitter": {
            "Properties": {
              "NumberOfBranches": {
                "type": "integer",
                "Description": "Indicates the number of branches that can be supported by the optical splitter."
              },
              "OpticalSplitterType": {
                "type": "PEnum_OpticalSplitterType",
                "Description": "Indicates the type of optical splitter, single mode or multi-mode.",
                "values": [
                  "MULTIMODE",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLEMODE",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcLamp": {
        "Parent": "IfcFlowTerminal",
        "Description": "A lamp is an artificial light source such as a light bulb or tube.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_LampTypeCommon": {
            "Properties": {
              "ColourAppearance": {
                "type": "string",
                "Description": ""
              },
              "ColourRenderingIndex": {
                "type": "integer",
                "Description": ""
              },
              "ColourTemperature": {
                "type": "real",
                "Description": ""
              },
              "ContributedLuminousFlux": {
                "type": "real",
                "Description": "Luminous flux is a photometric measure of radiant flux, i.e. the volume of light emitted from a light source. Luminous flux is measured either for the interior as a whole or for a part of the interior (partial luminous flux for a solid angle). All other photometric parameters are derivatives of luminous flux. Luminous flux is measured in lumens (lm). The luminous flux is given as a nominal value for each lamp."
              },
              "LampBallastType": {
                "type": "PEnum_LampBallastType",
                "Description": "The type of ballast used to stabilise gas discharge by limiting the current during operation and to deliver the necessary striking voltage for starting. Ballasts are needed to operate Discharge Lamps such as Fluorescent, Compact Fluorescent, High-pressure Mercury, Metal Halide and High-pressure Sodium Lamps.\nMagnetic ballasts are chokes which limit the current passing through a lamp connected in series on the principle of self-induction. The resultant current and power are decisive for the efficient operation of the lamp. A specially designed ballast is required for every type of lamp to comply with lamp rating in terms of Luminous Flux, Color Appearance and service life. The two types of magnetic ballasts for fluorescent lamps are KVG Conventional   (EC-A series) and VVG Low-loss ballasts (EC-B series). Low-loss ballasts have a higher efficiency, which means reduced ballast losses and a lower thermal load. Electronic ballasts are used to run fluorescent lamps at high frequencies (approx. 35 - 40 kHz).",
                "values": [
                  "CONVENTIONAL",
                  "ELECTRONIC",
                  "LOWLOSS",
                  "NOTKNOWN",
                  "OTHER",
                  "RESISTOR",
                  "UNSET"
                ]
              },
              "LampCompensationType": {
                "type": "PEnum_LampCompensationType",
                "Description": "Identifies the form of compensation used for power factor correction and radio suppression.",
                "values": [
                  "CAPACITIVE",
                  "INDUCTIVE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "LampMaintenanceFactor": {
                "type": "real",
                "Description": "Non recoverable losses of luminous flux of a lamp due to lamp depreciation; i.e. the decreasing of light output of a luminaire due to aging and dirt."
              },
              "LightEmitterNominalPower": {
                "type": "real",
                "Description": "Light emitter nominal power."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_LampBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcLampType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcLampType defines commonly shared information for occurrences of lamps. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a lamp type specification indicating the specific product information that is common to all occurrences of that product type. The IfcLampType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcLampType are represented by instances of IfcLamp. Refer to the documentation at IfcLamp for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_LampTypeCommon": {
            "Properties": {
              "ColourAppearance": {
                "type": "string",
                "Description": ""
              },
              "ColourRenderingIndex": {
                "type": "integer",
                "Description": ""
              },
              "ColourTemperature": {
                "type": "real",
                "Description": ""
              },
              "ContributedLuminousFlux": {
                "type": "real",
                "Description": "Luminous flux is a photometric measure of radiant flux, i.e. the volume of light emitted from a light source. Luminous flux is measured either for the interior as a whole or for a part of the interior (partial luminous flux for a solid angle). All other photometric parameters are derivatives of luminous flux. Luminous flux is measured in lumens (lm). The luminous flux is given as a nominal value for each lamp."
              },
              "LampBallastType": {
                "type": "PEnum_LampBallastType",
                "Description": "The type of ballast used to stabilise gas discharge by limiting the current during operation and to deliver the necessary striking voltage for starting. Ballasts are needed to operate Discharge Lamps such as Fluorescent, Compact Fluorescent, High-pressure Mercury, Metal Halide and High-pressure Sodium Lamps.\nMagnetic ballasts are chokes which limit the current passing through a lamp connected in series on the principle of self-induction. The resultant current and power are decisive for the efficient operation of the lamp. A specially designed ballast is required for every type of lamp to comply with lamp rating in terms of Luminous Flux, Color Appearance and service life. The two types of magnetic ballasts for fluorescent lamps are KVG Conventional   (EC-A series) and VVG Low-loss ballasts (EC-B series). Low-loss ballasts have a higher efficiency, which means reduced ballast losses and a lower thermal load. Electronic ballasts are used to run fluorescent lamps at high frequencies (approx. 35 - 40 kHz).",
                "values": [
                  "CONVENTIONAL",
                  "ELECTRONIC",
                  "LOWLOSS",
                  "NOTKNOWN",
                  "OTHER",
                  "RESISTOR",
                  "UNSET"
                ]
              },
              "LampCompensationType": {
                "type": "PEnum_LampCompensationType",
                "Description": "Identifies the form of compensation used for power factor correction and radio suppression.",
                "values": [
                  "CAPACITIVE",
                  "INDUCTIVE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "LampMaintenanceFactor": {
                "type": "real",
                "Description": "Non recoverable losses of luminous flux of a lamp due to lamp depreciation; i.e. the decreasing of light output of a luminaire due to aging and dirt."
              },
              "LightEmitterNominalPower": {
                "type": "real",
                "Description": "Light emitter nominal power."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_LampBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcLightFixture": {
        "Parent": "IfcFlowTerminal",
        "Description": "A light fixture is a container that is designed for the purpose of housing one or more lamps and optionally devices that control, restrict or vary their emission.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_LightFixtureTypeCommon": {
            "Properties": {
              "LightFixtureMountingType": {
                "type": "PEnum_LightFixtureMountingType",
                "Description": "A list of the available types of mounting for light fixtures from which that required may be selected.",
                "values": [
                  "CABLESPANNED",
                  "FREESTANDING",
                  "NOTKNOWN",
                  "OTHER",
                  "POLE_SIDE",
                  "POLE_TOP",
                  "RECESSED",
                  "SURFACE",
                  "SUSPENDED",
                  "TRACKMOUNTED",
                  "UNSET"
                ]
              },
              "LightFixturePlacingType": {
                "type": "PEnum_LightFixturePlacingType",
                "Description": "A list of the available types of placing specification for light fixtures from which that required may be selected.",
                "values": [
                  "CEILING",
                  "FLOOR",
                  "FURNITURE",
                  "NOTKNOWN",
                  "OTHER",
                  "POLE",
                  "UNSET",
                  "WALL"
                ]
              },
              "MaintenanceFactor": {
                "type": "real",
                "Description": "The arithmetical allowance made for depreciation of lamps and reflective equipment from their initial values due to dirt, fumes, or age."
              },
              "MaximumPlenumSensibleLoad": {
                "type": "real",
                "Description": "Maximum or Peak sensible thermal load contributed to return air plenum by the light fixture."
              },
              "MaximumSpaceSensibleLoad": {
                "type": "real",
                "Description": "Maximum or Peak sensible thermal load contributed to the conditioned space by the light fixture."
              },
              "NumberOfSources": {
                "type": "integer",
                "Description": "Number of sources ."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SensibleLoadToRadiant": {
                "type": "real",
                "Description": "Percent of sensible thermal load to radiant heat."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TotalWattage": {
                "type": "real",
                "Description": "Wattage on whole lightfitting device with all sources intact."
              }
            }
          },
          "Qto_LightFixtureBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcLightFixtureType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcLightFixtureType defines commonly shared information for occurrences of light fixtures. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a light fixture type specification indicating the specific product information that is common to all occurrences of that product type. The IfcLightFixtureType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcLightFixtureType are represented by instances of IfcLightFixture. Refer to the documentation at IfcLightFixture for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_LightFixtureTypeCommon": {
            "Properties": {
              "LightFixtureMountingType": {
                "type": "PEnum_LightFixtureMountingType",
                "Description": "A list of the available types of mounting for light fixtures from which that required may be selected.",
                "values": [
                  "CABLESPANNED",
                  "FREESTANDING",
                  "NOTKNOWN",
                  "OTHER",
                  "POLE_SIDE",
                  "POLE_TOP",
                  "RECESSED",
                  "SURFACE",
                  "SUSPENDED",
                  "TRACKMOUNTED",
                  "UNSET"
                ]
              },
              "LightFixturePlacingType": {
                "type": "PEnum_LightFixturePlacingType",
                "Description": "A list of the available types of placing specification for light fixtures from which that required may be selected.",
                "values": [
                  "CEILING",
                  "FLOOR",
                  "FURNITURE",
                  "NOTKNOWN",
                  "OTHER",
                  "POLE",
                  "UNSET",
                  "WALL"
                ]
              },
              "MaintenanceFactor": {
                "type": "real",
                "Description": "The arithmetical allowance made for depreciation of lamps and reflective equipment from their initial values due to dirt, fumes, or age."
              },
              "MaximumPlenumSensibleLoad": {
                "type": "real",
                "Description": "Maximum or Peak sensible thermal load contributed to return air plenum by the light fixture."
              },
              "MaximumSpaceSensibleLoad": {
                "type": "real",
                "Description": "Maximum or Peak sensible thermal load contributed to the conditioned space by the light fixture."
              },
              "NumberOfSources": {
                "type": "integer",
                "Description": "Number of sources ."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SensibleLoadToRadiant": {
                "type": "real",
                "Description": "Percent of sensible thermal load to radiant heat."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TotalWattage": {
                "type": "real",
                "Description": "Wattage on whole lightfitting device with all sources intact."
              }
            }
          },
          "Pset_LightFixtureTypeSecurityLighting": {
            "Properties": {
              "Addressablility": {
                "type": "PEnum_AddressabilityType",
                "Description": "The type of addressability.",
                "values": [
                  "IMPLEMENTED",
                  "NOTIMPLEMENTED",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "UPGRADEABLETO"
                ]
              },
              "BackupSupplySystem": {
                "type": "PEnum_BackupSupplySystemType",
                "Description": "The type of backup supply system.",
                "values": [
                  "CENTRALBATTERY",
                  "LOCALBATTERY",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "FixtureHeight": {
                "type": "real",
                "Description": "The height of the fixture, such as the text height of an exit sign."
              },
              "PictogramEscapeDirection": {
                "type": "PEnum_PictogramEscapeDirectionType",
                "Description": "The direction of escape pictogram.",
                "values": [
                  "DOWNARROW",
                  "LEFTARROW",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHTARROW",
                  "UNSET",
                  "UPARROW"
                ]
              },
              "SecurityLightingType": {
                "type": "PEnum_LightFixtureSecurityLightingType",
                "Description": "The type of security lighting.",
                "values": [
                  "BLUEILLUMINATION",
                  "EMERGENCYEXITLIGHT",
                  "NOTKNOWN",
                  "OTHER",
                  "SAFETYLIGHT",
                  "UNSET",
                  "WARNINGLIGHT"
                ]
              },
              "SelfTestFunction": {
                "type": "PEnum_SelfTestType",
                "Description": "The type of self test function.",
                "values": [
                  "CENTRAL",
                  "LOCAL",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_LightFixtureBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcMobileTelecommunicationsAppliance": {
        "Parent": "IfcFlowTerminal",
        "Description": "A mobile telecommunications appliance is a device that transmits, converts, amplifies or receives signals used in mobile networks.\nNote: This entity is used to define specific appliances used in mobile telecommunication networks. General communications appliances and those used in fixed transmission networks should be instantiated using IfcCommunicationsAppliance.",
        "Psets": {
          "Pset_MobileTelecommunicationsApplianceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcMobileTelecommunicationsApplianceType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcMobileTelecommunicationsApplianceType defines commonly shared information for occurrences of mobile telecommunications appliances. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a mobile telecommunications appliance type specification indicating the specific product information that is common to all occurrences of that product type. The IfcMobileTelecommunicationsApplianceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcMobileTelecommunicationsApplianceType are represented by instances of IfcMobileTelecommunicationsAppliance. Refer to the documentation at IfcMobileTelecommunicationsAppliance for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_MobileTelecommunicationsApplianceTypeAccessPoint": {
            "Properties": {
              "BandWidth": {
                "type": "real",
                "Description": "Indicates the bandwidth for telecommunication of the device."
              },
              "DataEncryptionType": {
                "type": "string",
                "Description": "Indicates the type of security protocols that can be used in the access point to protect the wireless network."
              },
              "DataExchangeRate": {
                "type": "integer",
                "Description": "Indicates the data transfer rate of the access point in bit per second (bps)."
              },
              "NumberOfAntennas": {
                "type": "integer",
                "Description": "Indicates the number of antennas integrated in the device."
              },
              "UserCapacity": {
                "type": "integer",
                "Description": "Indicates the user capacity of the device, defined as the maximum number of users that can be active at the same time."
              }
            }
          },
          "Pset_MobileTelecommunicationsApplianceTypeBasebandUnit": {
            "Properties": {
              "MaximumNumberOfRRUs": {
                "type": "integer",
                "Description": "Indicates the maximum number of remote radio units (RRU) which can be connected to the baseband unit."
              },
              "NumberOfCarriers": {
                "type": "integer",
                "Description": "Indicates how many carrier frequencies can be managed by the device."
              },
              "NumberOfEmergencyTransceivers": {
                "type": "integer",
                "Description": "Indicates the number of emergency transceivers in the base band unit."
              }
            }
          },
          "Pset_MobileTelecommunicationsApplianceTypeBaseTransceiverStation": {
            "Properties": {
              "ExchangeCapacity": {
                "type": "integer",
                "Description": "Indicates how many simultaneous calls the base transceiver station can handle."
              },
              "NumberOfAntennas": {
                "type": "integer",
                "Description": "Indicates the number of antennas integrated in the device."
              },
              "NumberOfCarriers": {
                "type": "integer",
                "Description": "Indicates how many carrier frequencies can be managed by the device."
              },
              "NumberOfEmergencyTransceivers": {
                "type": "integer",
                "Description": "Indicates the number of emergency transceivers in the base band unit."
              }
            }
          },
          "Pset_MobileTelecommunicationsApplianceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_MobileTelecommunicationsApplianceTypeEUtranNodeB": {
            "Properties": {
              "NumberOfAntennas": {
                "type": "integer",
                "Description": "Indicates the number of antennas integrated in the device."
              },
              "NumberOfCarriers": {
                "type": "integer",
                "Description": "Indicates how many carrier frequencies can be managed by the device."
              }
            }
          },
          "Pset_MobileTelecommunicationsApplianceTypeMasterUnit": {
            "Properties": {
              "MasterUnitType": {
                "type": "PEnum_MasterUnitType",
                "Description": "Indicates the master unit type.",
                "values": [
                  "ANALOG",
                  "DIGITAL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "MaximumNumberOfConnectedRUs": {
                "type": "integer",
                "Description": "Indicates the maximum number of remote units (RUs) which can be connected to the master unit."
              },
              "TransmissionType": {
                "type": "PEnum_TransmissionType",
                "Description": "Indicates the data transmission type of the master unit.",
                "values": [
                  "FIBER",
                  "NOTKNOWN",
                  "OTHER",
                  "RADIO",
                  "UNSET"
                ]
              },
              "TransmittedBandwidth": {
                "type": "real",
                "Description": "Indicates the transmitted bandwidth of the master unit."
              },
              "TransmittedFrequency": {
                "type": "real",
                "Description": "Indicates the transmitted frequency used by the master unit."
              },
              "TransmittedSignal": {
                "type": "PEnum_TransmittedSignal",
                "Description": "Indicates the type or standard of signal transmitted by the master unit.",
                "values": [
                  "CDMA",
                  "GSM",
                  "LTE",
                  "NOTKNOWN",
                  "OTHER",
                  "TD_SCDMA",
                  "UNSET",
                  "WCDMA"
                ]
              }
            }
          },
          "Pset_MobileTelecommunicationsApplianceTypeMobileSwitchingCenter": {
            "Properties": {
              "MaximumNumberOfManagedBSCs": {
                "type": "integer",
                "Description": "Indicates the maximum number of base station controller (BSC) that can be managed simultaneously by the mobile switching center (MSC)."
              },
              "UserCapacity": {
                "type": "integer",
                "Description": "Indicates the user capacity of the device, defined as the maximum number of users that can be active at the same time."
              }
            }
          },
          "Pset_MobileTelecommunicationsApplianceTypeMSCServer": {
            "Properties": {
              "UserCapacity": {
                "type": "integer",
                "Description": "Indicates the user capacity of the device, defined as the maximum number of users that can be active at the same time."
              }
            }
          },
          "Pset_MobileTeleCommunicationsApplianceTypeRemoteRadioUnit": {
            "Properties": {
              "AntennaType": {
                "type": "string",
                "Description": "Indicates the type of antenna."
              },
              "NumberOfCarriers": {
                "type": "integer",
                "Description": "Indicates how many carrier frequencies can be managed by the device."
              },
              "RRUConnectionType": {
                "type": "PEnum_UnitConnectionType",
                "Description": "Indicates the connection type between the remote radio unit and baseband unit.",
                "values": [
                  "CHAIN",
                  "MIXED",
                  "NOTKNOWN",
                  "OTHER",
                  "RING",
                  "STAR",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_MobileTelecommunicationsApplianceTypeRemoteUnit": {
            "Properties": {
              "NumberOfAntennas": {
                "type": "integer",
                "Description": "Indicates the number of antennas integrated in the device."
              },
              "RUConnectionType": {
                "type": "PEnum_UnitConnectionType",
                "Description": "Indicate the connection type between the remote unit and the master unit.",
                "values": [
                  "CHAIN",
                  "MIXED",
                  "NOTKNOWN",
                  "OTHER",
                  "RING",
                  "STAR",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcMotorConnection": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A motor connection provides the means for connecting a motor as the driving device to the driven device.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_MotorConnectionTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_MotorConnectionBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcMotorConnectionType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcMotorConnectionType defines commonly shared information for occurrences of motor connections. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a motor connection type specification indicating the specific product information that is common to all occurrences of that product type. The IfcMotorConnectionType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcMotorConnectionType are represented by instances of IfcMotorConnection. Refer to the documentation at IfcMotorConnection for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_MotorConnectionTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_MotorConnectionBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcOutlet": {
        "Parent": "IfcFlowTerminal",
        "Description": "An outlet is a device installed at a point to receive one or more inserted plugs for electrical power or communications.Power outlets are commonly connected within a junction box; data outlets may be directly connected to a wall. For power outlets sharing the same circuit within a junction box, the ports should indicate the logical wiring relationship to the enclosing junction box, even though they may be physically connected to a cable going to another outlet, switch, or fixture.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_OutletTypeCommon": {
            "Properties": {
              "IsPluggableOutlet": {
                "type": "logical",
                "Description": "Indication of whether the outlet accepts a loose plug connection (= TRUE) or whether it is directly connected (= FALSE) or whether the form of connection has not yet been determined (= UNKNOWN).",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "NumberOfSockets": {
                "type": "integer",
                "Description": "The number of sockets that may be connected. In case of inconsistency, sockets defined on ports take precedence."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_OutletBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcOutletType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcOutletType defines commonly shared information for occurrences of outlets. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a outlet type specification indicating the specific product information that is common to all occurrences of that product type. The IfcOutletType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcOutletType are represented by instances of IfcOutlet. Refer to the documentation at IfcOutlet for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_OutletTypeCommon": {
            "Properties": {
              "IsPluggableOutlet": {
                "type": "logical",
                "Description": "Indication of whether the outlet accepts a loose plug connection (= TRUE) or whether it is directly connected (= FALSE) or whether the form of connection has not yet been determined (= UNKNOWN).",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "NumberOfSockets": {
                "type": "integer",
                "Description": "The number of sockets that may be connected. In case of inconsistency, sockets defined on ports take precedence."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_OutletBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcProtectiveDevice": {
        "Parent": "IfcFlowController",
        "Description": "A protective device breaks an electrical circuit when a stated electric current that passes through it is exceeded.A protective device provides protection against electrical current only (not as a general protective device). It may be used to represent the complete set of elements including both the tripping unit and the breaking unit that provide the protection. This may be particularly useful at earlier stages of design where the approach to breaking the electrical supply may be determined but the method of tripping may not. Alternatively, this entity may be used to specifically represent the breaking unit alone (in which case the tripping unit will also be specifically identified). This entity is specific to dedicated protective devices and excludes electrical outlets that may have circuit protection.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_ProtectiveDeviceBreakerUnitI2TCurve": {
            "Properties": {
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "VoltageLevel": {
                "type": "PEnum_VoltageLevels",
                "Description": "The voltage levels for which the data of the instance is valid. More than one value may be selected in the enumeration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "U1000",
                  "U230",
                  "U400",
                  "U440",
                  "U525",
                  "U690",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceBreakerUnitI2TFuseCurve": {
            "Properties": {
              "VoltageLevel": {
                "type": "PEnum_VoltageLevels",
                "Description": "The voltage levels for which the data of the instance is valid. More than one value may be selected in the enumeration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "U1000",
                  "U230",
                  "U400",
                  "U440",
                  "U525",
                  "U690",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceBreakerUnitIPICurve": {
            "Properties": {
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "VoltageLevel": {
                "type": "PEnum_VoltageLevels",
                "Description": "The voltage levels for which the data of the instance is valid. More than one value may be selected in the enumeration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "U1000",
                  "U230",
                  "U400",
                  "U440",
                  "U525",
                  "U690",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceBreakerUnitTypeMotorProtection": {
            "Properties": {
              "ICM60947": {
                "type": "real",
                "Description": "The making capacity in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series."
              },
              "ICS60947": {
                "type": "real",
                "Description": "The service breaking capacity in [A] for an object tested in accordance with the IEC 60947 series."
              },
              "ICU60947": {
                "type": "real",
                "Description": "The ultimate breaking capacity in [A] for an object tested in accordance with the IEC 60947 series."
              },
              "ICW60947": {
                "type": "real",
                "Description": "The thermal withstand current in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series. The value shall be related to 1 s."
              },
              "VoltageLevel": {
                "type": "PEnum_VoltageLevels",
                "Description": "The voltage levels for which the data of the instance is valid. More than one value may be selected in the enumeration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "U1000",
                  "U230",
                  "U400",
                  "U440",
                  "U525",
                  "U690",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceOccurrence": {
            "Properties": {
              "GroundFaultCurrentSetValue": {
                "type": "real",
                "Description": "Ground fault current set value. The set value of the ground tripping current if adjustable."
              },
              "GroundFaultFunction": {
                "type": "boolean",
                "Description": "Applying ground fault function. A flag indicating that the ground fault function of the device is used. The value should be set to FALSE for devices not having a ground fault function, or if the ground fault function is not selected to be used.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "GroundFaulti2tFunction": {
                "type": "boolean",
                "Description": "Applying ground fault i2t function. A flag indicating that the I2t ground fault function of the device is used. The value should be set to TRUE only if the I2t function is explicitly selected for the device.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "GroundFaultTrippingTime": {
                "type": "real",
                "Description": "Ground fault tripping time. The set value of the ground fault tripping current if adjustable."
              },
              "InstantaneousCurrentSetValue": {
                "type": "real",
                "Description": "Instantaneous current set value. The set value of the instantaneous tripping current if adjustable."
              },
              "InstantaneousTrippingTime": {
                "type": "real",
                "Description": "Instantaneous tripping time. The set value of the instantaneous tripping time if adjustable."
              },
              "LongTimeCurrentSetValue": {
                "type": "real",
                "Description": "Long time current set value. The set value of the long time tripping current if adjustable."
              },
              "LongTimeDelay": {
                "type": "real",
                "Description": "Long time delay. The set value of the long time time-delay if adjustable."
              },
              "LongTimeFunction": {
                "type": "boolean",
                "Description": "Applying long time function\nA flag indicating that the long time function (i.e. the thermal tripping) of the device is used. The value should be set to TRUE for all devices except those that allows the Long time function of the device not to be used.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PoleUsage": {
                "type": "PEnum_PoleUsage",
                "Description": "Pole usage.",
                "values": [
                  "1P",
                  "1PN",
                  "2P",
                  "3P",
                  "3PN",
                  "4P",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ShortTimeCurrentSetValue": {
                "type": "real",
                "Description": "Short time current set value. The set value of the long time tripping current if adjustable."
              },
              "ShortTimeFunction": {
                "type": "boolean",
                "Description": "Applying short time function A flag indicating that the short time function of the device is used. The value should be set to FALSE for devices not having a short time function, or if the short time function is not selected to be used.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShortTimei2tFunction": {
                "type": "boolean",
                "Description": "Applying short time i2t function. A flag indicating that the I2t short time function of the device is used. The value should be set to TRUE only if the I2t function \u00a0is explicitly selected for the device.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShortTimeTrippingTime": {
                "type": "real",
                "Description": "Short time tripping time. The set value of the short time tripping time if adjustable."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingCurve": {
            "Properties": {
              "TrippingCurveType": {
                "type": "PEnum_TrippingCurveType",
                "Description": "The type of tripping curve that is represented by the property set.",
                "values": [
                  "LOWER",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "UPPER"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ProtectiveDeviceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcProtectiveDeviceTrippingUnit": {
        "Parent": "IfcDistributionControlElement",
        "Description": "A protective device tripping unit breaks an electrical circuit at a separate breaking unit when a stated electric current that passes through the unit is exceeded.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_ProtectiveDeviceTrippingFunctionGCurve": {
            "Properties": {
              "CurrentTolerance1": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%]."
              },
              "CurrentTolerance2": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%] valid for times above CurrentTolereanceLimit1."
              },
              "CurrentToleranceLimit1": {
                "type": "real",
                "Description": "The time limit in [s] limiting the application of CurrentTolerance1, if any. If the value is set to 0, the value of the CurrentTolerance1 is valid for the whole time/current-curve."
              },
              "ExternalAdjusted": {
                "type": "boolean",
                "Description": "An indication if the ground fault protection may be adjusted according to an external current coil or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsCurrentTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  CurrentTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether something can be switched off or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTimeTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  TimeTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalCurrentAdjusted": {
                "type": "boolean",
                "Description": "An indication if the tripping currents of the short time protection is related to the nominal current multiplied with the actual setting of the current adjustment, if any, of the long time protection part of the protective device, or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ReleaseCurrent": {
                "type": "real",
                "Description": "The release current in [x In] for the initial tripping of the S-function."
              },
              "ReleaseCurrentI2tEnd": {
                "type": "real",
                "Description": "The release current in [x In]."
              },
              "ReleaseCurrentI2tStart": {
                "type": "real",
                "Description": "The release current in [x In]."
              },
              "ReleaseTime": {
                "type": "real",
                "Description": "The release time in [s] for the initial tripping of the relevant part. This time indicates that for current lower than the indicated release current, the tripping time will be longer than the indicated release time. The value is given as a mean value."
              },
              "ReleaseTimeI2tEnd": {
                "type": "real",
                "Description": "The release time in [s]."
              },
              "ReleaseTimeI2tStart": {
                "type": "real",
                "Description": "The release time in [s]."
              },
              "TimeTolerance1": {
                "type": "real",
                "Description": "The tolerance for the time of time/current-curve in [%]."
              },
              "TimeTolerance2": {
                "type": "real",
                "Description": "The tolerance for the time of the time/current-curve in [%] valid for currents above TimeToleranceLimit1."
              },
              "TimeToleranceLimit1": {
                "type": "real",
                "Description": "The current limit in [x In] limiting the application of TimeTolerance1, if any. If the value is set to 0, the value of the TimeTolerance1 is valid for the whole time/current-curve."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingFunctionICurve": {
            "Properties": {
              "CurrentTolerance1": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%]."
              },
              "CurrentTolerance2": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%] valid for times above CurrentTolereanceLimit1."
              },
              "CurrentToleranceLimit1": {
                "type": "real",
                "Description": "The time limit in [s] limiting the application of CurrentTolerance1, if any. If the value is set to 0, the value of the CurrentTolerance1 is valid for the whole time/current-curve."
              },
              "IsCurrentTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  CurrentTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsOffWhenSFunctionOn": {
                "type": "boolean",
                "Description": "Indication whether the I-function is automatically switched off when the S-function is switched on.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether something can be switched off or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTimeTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  TimeTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaxAdjustmentX_ICS": {
                "type": "real",
                "Description": "Provides the maximum setting value for the available current adjustment in relation to the Ics breaking capacity of the protection device of which the actual tripping unit is a part of. The value is not asserted unless the instantaneous time protection is."
              },
              "NominalCurrentAdjusted": {
                "type": "boolean",
                "Description": "An indication if the tripping currents of the short time protection is related to the nominal current multiplied with the actual setting of the current adjustment, if any, of the long time protection part of the protective device, or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ReleaseCurrent": {
                "type": "real",
                "Description": "The release current in [x In] for the initial tripping of the S-function."
              },
              "ReleaseTime": {
                "type": "real",
                "Description": "The release time in [s] for the initial tripping of the relevant part. This time indicates that for current lower than the indicated release current, the tripping time will be longer than the indicated release time. The value is given as a mean value."
              },
              "TimeTolerance1": {
                "type": "real",
                "Description": "The tolerance for the time of time/current-curve in [%]."
              },
              "TimeTolerance2": {
                "type": "real",
                "Description": "The tolerance for the time of the time/current-curve in [%] valid for currents above TimeToleranceLimit1."
              },
              "TimeToleranceLimit1": {
                "type": "real",
                "Description": "The current limit in [x In] limiting the application of TimeTolerance1, if any. If the value is set to 0, the value of the TimeTolerance1 is valid for the whole time/current-curve."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingFunctionLCurve": {
            "Properties": {
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether something can be switched off or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LowerCurrent1": {
                "type": "real",
                "Description": "The current in [x In], indicating that for currents smaller than LowerCurrent1 the I2t part of the L-function will not trip the current,"
              },
              "LowerCurrent2": {
                "type": "real",
                "Description": "The current in [x In], indicating the upper current limit of the lower time/current curve of the I2t part of the L-function."
              },
              "LowerTime1": {
                "type": "real",
                "Description": "The time in [s], indicating that tripping times of the lower time/current curve lower than LowerTime1 is determined by the I2t part of the L-function."
              },
              "LowerTime2": {
                "type": "real",
                "Description": "The time in [s], indicating the tripping times of the upper time/current curve at the LowerCurrent2."
              },
              "UpperCurrent1": {
                "type": "real",
                "Description": "The current in [x In], indicating that for currents larger than UpperCurrent1 the I2t part of the L-function will trip the current."
              },
              "UpperCurrent2": {
                "type": "real",
                "Description": "The current in [x In], indicating the upper current limit of the upper time/current curve of the I2t part of the L-function."
              },
              "UpperTime1": {
                "type": "real",
                "Description": "The time in [s], indicating that tripping times of the upper time/current curve lower than UpperTime1 is determined by the I2t part of the L-function."
              },
              "UpperTime2": {
                "type": "real",
                "Description": "The time in [s], indicating the tripping times of the upper time/current curve at the UpperCurrent2."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingFunctionSCurve": {
            "Properties": {
              "CurrentTolerance1": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%]."
              },
              "CurrentTolerance2": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%] valid for times above CurrentTolereanceLimit1."
              },
              "CurrentToleranceLimit1": {
                "type": "real",
                "Description": "The time limit in [s] limiting the application of CurrentTolerance1, if any. If the value is set to 0, the value of the CurrentTolerance1 is valid for the whole time/current-curve."
              },
              "IsCurrentTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  CurrentTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsOffWhenLfunctionOn": {
                "type": "boolean",
                "Description": "Indication whether the S-function is automatically switched off when the I-function is switched on.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether something can be switched off or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTimeTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  TimeTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalCurrentAdjusted": {
                "type": "boolean",
                "Description": "An indication if the tripping currents of the short time protection is related to the nominal current multiplied with the actual setting of the current adjustment, if any, of the long time protection part of the protective device, or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ReleaseCurrent": {
                "type": "real",
                "Description": "The release current in [x In] for the initial tripping of the S-function."
              },
              "ReleaseCurrentI2tEnd": {
                "type": "real",
                "Description": "The release current in [x In]."
              },
              "ReleaseCurrentI2tStart": {
                "type": "real",
                "Description": "The release current in [x In]."
              },
              "ReleaseTime": {
                "type": "real",
                "Description": "The release time in [s] for the initial tripping of the relevant part. This time indicates that for current lower than the indicated release current, the tripping time will be longer than the indicated release time. The value is given as a mean value."
              },
              "ReleaseTimeI2tEnd": {
                "type": "real",
                "Description": "The release time in [s]."
              },
              "ReleaseTimeI2tStart": {
                "type": "real",
                "Description": "The release time in [s]."
              },
              "TimeTolerance1": {
                "type": "real",
                "Description": "The tolerance for the time of time/current-curve in [%]."
              },
              "TimeTolerance2": {
                "type": "real",
                "Description": "The tolerance for the time of the time/current-curve in [%] valid for currents above TimeToleranceLimit1."
              },
              "TimeToleranceLimit1": {
                "type": "real",
                "Description": "The current limit in [x In] limiting the application of TimeTolerance1, if any. If the value is set to 0, the value of the TimeTolerance1 is valid for the whole time/current-curve."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitCurrentAdjustment": {
            "Properties": {
              "AdjustmentDesignation": {
                "type": "string",
                "Description": "The desgnation on the device for the adjustment."
              },
              "AdjustmentValueType": {
                "type": "PEnum_AdjustmentValueType",
                "Description": "The type of adjustment value that is applied through the property set. This determines the properties that should be asserted (see below).",
                "values": [
                  "LIST",
                  "RANGE"
                ]
              },
              "CurrentAdjustmentRangeStepValue": {
                "type": "real",
                "Description": "Step value of current adjustment for an AdjustmentValueType = RANGE. Note that this property should not have a value for an  AdjustmentValueType = LIST."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitTimeAdjustment": {
            "Properties": {
              "AdjustmentDesignation": {
                "type": "string",
                "Description": "The desgnation on the device for the adjustment."
              },
              "AdjustmentValueType": {
                "type": "PEnum_AdjustmentValueType",
                "Description": "The type of adjustment value that is applied through the property set. This determines the properties that should be asserted (see below).",
                "values": [
                  "LIST",
                  "RANGE"
                ]
              },
              "CurrentForTimeDelay": {
                "type": "real",
                "Description": "The tripping current in [x In] at which the time delay is specified. A value for this property should only be asserted for time delay of L-function, and for I2t of the S and G function."
              },
              "I2TApplicability": {
                "type": "PEnum_AdjustmentValueType",
                "Description": "The applicability of the time adjustment related to the tripping function.",
                "values": [
                  "LIST",
                  "RANGE"
                ]
              },
              "TimeAdjustmentRangeStepValue": {
                "type": "real",
                "Description": "Step value of time adjustment for an AdjustmentValueType = RANGE. Note that this property should not have a value for an  AdjustmentValueType = LIST."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitTypeCommon": {
            "Properties": {
              "AtexVerified": {
                "type": "boolean",
                "Description": "An indication whether the tripping_unit is verified to be applied in EX-environment or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LimitingTerminalSize": {
                "type": "real",
                "Description": "The maximum terminal size capacity of the device."
              },
              "OldDevice": {
                "type": "boolean",
                "Description": "Indication whether the protection_ unit is out-dated or not. If not out-dated, the device is still for sale.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Standard": {
                "type": "string",
                "Description": "The designation of the standard applicable for the definition of the object used."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "UseInDiscrimination": {
                "type": "boolean",
                "Description": "An indication whether the time/current tripping information can be applied in a discrimination\nanalysis or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Qto_ProtectiveDeviceTrippingUnitBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcProtectiveDeviceTrippingUnitType": {
        "Parent": "IfcDistributionControlElementType",
        "Description": "The distribution control element type IfcProtectiveDeviceTrippingUnitType defines commonly shared information for occurrences of protective device tripping units. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a protective device tripping unit type specification indicating the specific product information that is common to all occurrences of that product type. The IfcProtectiveDeviceTrippingUnitType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcProtectiveDeviceTrippingUnitType are represented by instances of IfcProtectiveDeviceTrippingUnit. Refer to the documentation at IfcProtectiveDeviceTrippingUnit for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_ProtectiveDeviceTrippingFunctionGCurve": {
            "Properties": {
              "CurrentTolerance1": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%]."
              },
              "CurrentTolerance2": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%] valid for times above CurrentTolereanceLimit1."
              },
              "CurrentToleranceLimit1": {
                "type": "real",
                "Description": "The time limit in [s] limiting the application of CurrentTolerance1, if any. If the value is set to 0, the value of the CurrentTolerance1 is valid for the whole time/current-curve."
              },
              "ExternalAdjusted": {
                "type": "boolean",
                "Description": "An indication if the ground fault protection may be adjusted according to an external current coil or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsCurrentTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  CurrentTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether something can be switched off or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTimeTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  TimeTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalCurrentAdjusted": {
                "type": "boolean",
                "Description": "An indication if the tripping currents of the short time protection is related to the nominal current multiplied with the actual setting of the current adjustment, if any, of the long time protection part of the protective device, or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ReleaseCurrent": {
                "type": "real",
                "Description": "The release current in [x In] for the initial tripping of the S-function."
              },
              "ReleaseCurrentI2tEnd": {
                "type": "real",
                "Description": "The release current in [x In]."
              },
              "ReleaseCurrentI2tStart": {
                "type": "real",
                "Description": "The release current in [x In]."
              },
              "ReleaseTime": {
                "type": "real",
                "Description": "The release time in [s] for the initial tripping of the relevant part. This time indicates that for current lower than the indicated release current, the tripping time will be longer than the indicated release time. The value is given as a mean value."
              },
              "ReleaseTimeI2tEnd": {
                "type": "real",
                "Description": "The release time in [s]."
              },
              "ReleaseTimeI2tStart": {
                "type": "real",
                "Description": "The release time in [s]."
              },
              "TimeTolerance1": {
                "type": "real",
                "Description": "The tolerance for the time of time/current-curve in [%]."
              },
              "TimeTolerance2": {
                "type": "real",
                "Description": "The tolerance for the time of the time/current-curve in [%] valid for currents above TimeToleranceLimit1."
              },
              "TimeToleranceLimit1": {
                "type": "real",
                "Description": "The current limit in [x In] limiting the application of TimeTolerance1, if any. If the value is set to 0, the value of the TimeTolerance1 is valid for the whole time/current-curve."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingFunctionICurve": {
            "Properties": {
              "CurrentTolerance1": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%]."
              },
              "CurrentTolerance2": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%] valid for times above CurrentTolereanceLimit1."
              },
              "CurrentToleranceLimit1": {
                "type": "real",
                "Description": "The time limit in [s] limiting the application of CurrentTolerance1, if any. If the value is set to 0, the value of the CurrentTolerance1 is valid for the whole time/current-curve."
              },
              "IsCurrentTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  CurrentTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsOffWhenSFunctionOn": {
                "type": "boolean",
                "Description": "Indication whether the I-function is automatically switched off when the S-function is switched on.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether something can be switched off or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTimeTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  TimeTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaxAdjustmentX_ICS": {
                "type": "real",
                "Description": "Provides the maximum setting value for the available current adjustment in relation to the Ics breaking capacity of the protection device of which the actual tripping unit is a part of. The value is not asserted unless the instantaneous time protection is."
              },
              "NominalCurrentAdjusted": {
                "type": "boolean",
                "Description": "An indication if the tripping currents of the short time protection is related to the nominal current multiplied with the actual setting of the current adjustment, if any, of the long time protection part of the protective device, or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ReleaseCurrent": {
                "type": "real",
                "Description": "The release current in [x In] for the initial tripping of the S-function."
              },
              "ReleaseTime": {
                "type": "real",
                "Description": "The release time in [s] for the initial tripping of the relevant part. This time indicates that for current lower than the indicated release current, the tripping time will be longer than the indicated release time. The value is given as a mean value."
              },
              "TimeTolerance1": {
                "type": "real",
                "Description": "The tolerance for the time of time/current-curve in [%]."
              },
              "TimeTolerance2": {
                "type": "real",
                "Description": "The tolerance for the time of the time/current-curve in [%] valid for currents above TimeToleranceLimit1."
              },
              "TimeToleranceLimit1": {
                "type": "real",
                "Description": "The current limit in [x In] limiting the application of TimeTolerance1, if any. If the value is set to 0, the value of the TimeTolerance1 is valid for the whole time/current-curve."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingFunctionLCurve": {
            "Properties": {
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether something can be switched off or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LowerCurrent1": {
                "type": "real",
                "Description": "The current in [x In], indicating that for currents smaller than LowerCurrent1 the I2t part of the L-function will not trip the current,"
              },
              "LowerCurrent2": {
                "type": "real",
                "Description": "The current in [x In], indicating the upper current limit of the lower time/current curve of the I2t part of the L-function."
              },
              "LowerTime1": {
                "type": "real",
                "Description": "The time in [s], indicating that tripping times of the lower time/current curve lower than LowerTime1 is determined by the I2t part of the L-function."
              },
              "LowerTime2": {
                "type": "real",
                "Description": "The time in [s], indicating the tripping times of the upper time/current curve at the LowerCurrent2."
              },
              "UpperCurrent1": {
                "type": "real",
                "Description": "The current in [x In], indicating that for currents larger than UpperCurrent1 the I2t part of the L-function will trip the current."
              },
              "UpperCurrent2": {
                "type": "real",
                "Description": "The current in [x In], indicating the upper current limit of the upper time/current curve of the I2t part of the L-function."
              },
              "UpperTime1": {
                "type": "real",
                "Description": "The time in [s], indicating that tripping times of the upper time/current curve lower than UpperTime1 is determined by the I2t part of the L-function."
              },
              "UpperTime2": {
                "type": "real",
                "Description": "The time in [s], indicating the tripping times of the upper time/current curve at the UpperCurrent2."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingFunctionSCurve": {
            "Properties": {
              "CurrentTolerance1": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%]."
              },
              "CurrentTolerance2": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%] valid for times above CurrentTolereanceLimit1."
              },
              "CurrentToleranceLimit1": {
                "type": "real",
                "Description": "The time limit in [s] limiting the application of CurrentTolerance1, if any. If the value is set to 0, the value of the CurrentTolerance1 is valid for the whole time/current-curve."
              },
              "IsCurrentTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  CurrentTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsOffWhenLfunctionOn": {
                "type": "boolean",
                "Description": "Indication whether the S-function is automatically switched off when the I-function is switched on.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether something can be switched off or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTimeTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  TimeTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalCurrentAdjusted": {
                "type": "boolean",
                "Description": "An indication if the tripping currents of the short time protection is related to the nominal current multiplied with the actual setting of the current adjustment, if any, of the long time protection part of the protective device, or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ReleaseCurrent": {
                "type": "real",
                "Description": "The release current in [x In] for the initial tripping of the S-function."
              },
              "ReleaseCurrentI2tEnd": {
                "type": "real",
                "Description": "The release current in [x In]."
              },
              "ReleaseCurrentI2tStart": {
                "type": "real",
                "Description": "The release current in [x In]."
              },
              "ReleaseTime": {
                "type": "real",
                "Description": "The release time in [s] for the initial tripping of the relevant part. This time indicates that for current lower than the indicated release current, the tripping time will be longer than the indicated release time. The value is given as a mean value."
              },
              "ReleaseTimeI2tEnd": {
                "type": "real",
                "Description": "The release time in [s]."
              },
              "ReleaseTimeI2tStart": {
                "type": "real",
                "Description": "The release time in [s]."
              },
              "TimeTolerance1": {
                "type": "real",
                "Description": "The tolerance for the time of time/current-curve in [%]."
              },
              "TimeTolerance2": {
                "type": "real",
                "Description": "The tolerance for the time of the time/current-curve in [%] valid for currents above TimeToleranceLimit1."
              },
              "TimeToleranceLimit1": {
                "type": "real",
                "Description": "The current limit in [x In] limiting the application of TimeTolerance1, if any. If the value is set to 0, the value of the TimeTolerance1 is valid for the whole time/current-curve."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitCurrentAdjustment": {
            "Properties": {
              "AdjustmentDesignation": {
                "type": "string",
                "Description": "The desgnation on the device for the adjustment."
              },
              "AdjustmentValueType": {
                "type": "PEnum_AdjustmentValueType",
                "Description": "The type of adjustment value that is applied through the property set. This determines the properties that should be asserted (see below).",
                "values": [
                  "LIST",
                  "RANGE"
                ]
              },
              "CurrentAdjustmentRangeStepValue": {
                "type": "real",
                "Description": "Step value of current adjustment for an AdjustmentValueType = RANGE. Note that this property should not have a value for an  AdjustmentValueType = LIST."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitTimeAdjustment": {
            "Properties": {
              "AdjustmentDesignation": {
                "type": "string",
                "Description": "The desgnation on the device for the adjustment."
              },
              "AdjustmentValueType": {
                "type": "PEnum_AdjustmentValueType",
                "Description": "The type of adjustment value that is applied through the property set. This determines the properties that should be asserted (see below).",
                "values": [
                  "LIST",
                  "RANGE"
                ]
              },
              "CurrentForTimeDelay": {
                "type": "real",
                "Description": "The tripping current in [x In] at which the time delay is specified. A value for this property should only be asserted for time delay of L-function, and for I2t of the S and G function."
              },
              "I2TApplicability": {
                "type": "PEnum_AdjustmentValueType",
                "Description": "The applicability of the time adjustment related to the tripping function.",
                "values": [
                  "LIST",
                  "RANGE"
                ]
              },
              "TimeAdjustmentRangeStepValue": {
                "type": "real",
                "Description": "Step value of time adjustment for an AdjustmentValueType = RANGE. Note that this property should not have a value for an  AdjustmentValueType = LIST."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitTypeCommon": {
            "Properties": {
              "AtexVerified": {
                "type": "boolean",
                "Description": "An indication whether the tripping_unit is verified to be applied in EX-environment or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LimitingTerminalSize": {
                "type": "real",
                "Description": "The maximum terminal size capacity of the device."
              },
              "OldDevice": {
                "type": "boolean",
                "Description": "Indication whether the protection_ unit is out-dated or not. If not out-dated, the device is still for sale.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Standard": {
                "type": "string",
                "Description": "The designation of the standard applicable for the definition of the object used."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "UseInDiscrimination": {
                "type": "boolean",
                "Description": "An indication whether the time/current tripping information can be applied in a discrimination\nanalysis or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic": {
            "Properties": {
              "CurveDesignation": {
                "type": "string",
                "Description": "The designation of the trippingcurve given by the manufacturer. For a MCB the designation should be in accordance with the designations given in IEC 60898."
              },
              "DefinedTemperature": {
                "type": "real",
                "Description": "The ambient temperature at which the thermal current/time-curve associated with this protection device is defined."
              },
              "ElectroMagneticTrippingUnitType": {
                "type": "PEnum_ElectroMagneticTrippingUnitType",
                "Description": "A list of the available types of electric magnetic tripping unit  from which that required may be selected. These cover overload, none special, short circuit, motor protection and bi-metal tripping.",
                "values": [
                  "NOTKNOWN",
                  "OL",
                  "OTHER",
                  "TMP_BM",
                  "TMP_MP",
                  "TMP_SC",
                  "TMP_STD",
                  "UNSET"
                ]
              },
              "I1": {
                "type": "real",
                "Description": "The (thermal) lower testing current limit in [x In], indicating that for currents lower than I1, the tripping time shall be longer than the associated tripping time, T2."
              },
              "I2": {
                "type": "real",
                "Description": "The (thermal) upper testing current limit in [x In], indicating that for currents larger than I2, the tripping time shall be shorter than the associated tripping time, T2."
              },
              "I4": {
                "type": "real",
                "Description": "The lower electromagnetic testing current limit in [x In], indicating that for currents lower than I4, the tripping time shall be longer than the associated tripping time, T5, i.e. the device shall not trip instantaneous."
              },
              "I5": {
                "type": "real",
                "Description": "The upper electromagnetic testing current limit in [x In], indicating that for currents larger than I5, the tripping time shall be shorter than or equal to the associated tripping time, T5, i.e. the device shall trip instantaneous."
              },
              "T2": {
                "type": "real",
                "Description": "The (thermal) testing time in [s] associated with the testing currents I1 and I2."
              },
              "T5": {
                "type": "real",
                "Description": "The electromagnetic testing time in [s] associated with the testing currents I4 and I5, i.e. electromagnetic tripping time"
              },
              "TemperatureFactor": {
                "type": "real",
                "Description": "The correction factor (typically measured as %/deg K) for adjusting the thermal current/time to an ambient temperature different from the value given by the defined temperature."
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitTypeElectronic": {
            "Properties": {
              "ElectronicTrippingUnitType": {
                "type": "PEnum_ElectronicTrippingUnitType",
                "Description": "A list of the available types of electronic tripping unit  from which that required may be selected.",
                "values": [
                  "EP_BM",
                  "EP_MP",
                  "EP_SC",
                  "EP_STD",
                  "EP_TIMEDELAYED",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "N_Protection": {
                "type": "boolean",
                "Description": "An indication whether the electronic tripping unit is tripping if the current in the N conductor is more than 50% of that of the phase conductors. The property is only asserted if the property N_Protection is asserted.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "N_Protection_100": {
                "type": "boolean",
                "Description": "An indication whether the electronic tripping unit is tripping if the current in the N conductor is more than 100% of that of the phase conductors. The property is only asserted if the property N_Protection is asserted.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "N_Protection_50": {
                "type": "boolean",
                "Description": "An indication whether the electronic tripping unit is tripping if the current in the N conductor is more than 50% of that of the phase conductors. The property is only asserted if the property N_Protection is asserted.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "N_Protection_Select": {
                "type": "boolean",
                "Description": "An indication whether the use of the N_Protection can be selected by the user or not. If both the properties N_Protection_50 and N_Protection_100 are asserted, the value of N_Protection_Select property is set to TRUE. The property is only asserted if the property N_Protection is asserted.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitTypeResidualCurrent": {
            "Properties": {
              "TrippingUnitReleaseCurrent": {
                "type": "PEnum_TrippingUnitReleaseCurrent",
                "Description": "The value of tripping or residual current for which the device has the possibility to be equipped. The values are given in mA.",
                "values": [
                  "10",
                  "100",
                  "1000",
                  "30",
                  "300",
                  "500",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitTypeThermal": {
            "Properties": {
              "CurveDesignation": {
                "type": "string",
                "Description": "The designation of the trippingcurve given by the manufacturer. For a MCB the designation should be in accordance with the designations given in IEC 60898."
              },
              "DefinedTemperature": {
                "type": "real",
                "Description": "The ambient temperature at which the thermal current/time-curve associated with this protection device is defined."
              },
              "I1": {
                "type": "real",
                "Description": "The (thermal) lower testing current limit in [x In], indicating that for currents lower than I1, the tripping time shall be longer than the associated tripping time, T2."
              },
              "I2": {
                "type": "real",
                "Description": "The (thermal) upper testing current limit in [x In], indicating that for currents larger than I2, the tripping time shall be shorter than the associated tripping time, T2."
              },
              "T2": {
                "type": "real",
                "Description": "The (thermal) testing time in [s] associated with the testing currents I1 and I2."
              },
              "TemperatureFactor": {
                "type": "real",
                "Description": "The correction factor (typically measured as %/deg K) for adjusting the thermal current/time to an ambient temperature different from the value given by the defined temperature."
              },
              "ThermalTrippingUnitType": {
                "type": "PEnum_ThermalTrippingUnitType",
                "Description": "A list of the available types of thermal tripping unit  from which that required may be selected.",
                "values": [
                  "DIAZED",
                  "MINIZED",
                  "NEOZED",
                  "NH_FUSE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ProtectiveDeviceTrippingUnitBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcProtectiveDeviceType": {
        "Parent": "IfcFlowControllerType",
        "Description": "The flow controller type IfcProtectiveDeviceType defines commonly shared information for occurrences of protective devices. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a protective device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcProtectiveDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcProtectiveDeviceType are represented by instances of IfcProtectiveDevice. Refer to the documentation at IfcProtectiveDevice for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_ProtectiveDeviceBreakerUnitI2TCurve": {
            "Properties": {
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "VoltageLevel": {
                "type": "PEnum_VoltageLevels",
                "Description": "The voltage levels for which the data of the instance is valid. More than one value may be selected in the enumeration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "U1000",
                  "U230",
                  "U400",
                  "U440",
                  "U525",
                  "U690",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceBreakerUnitI2TFuseCurve": {
            "Properties": {
              "VoltageLevel": {
                "type": "PEnum_VoltageLevels",
                "Description": "The voltage levels for which the data of the instance is valid. More than one value may be selected in the enumeration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "U1000",
                  "U230",
                  "U400",
                  "U440",
                  "U525",
                  "U690",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceBreakerUnitIPICurve": {
            "Properties": {
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "VoltageLevel": {
                "type": "PEnum_VoltageLevels",
                "Description": "The voltage levels for which the data of the instance is valid. More than one value may be selected in the enumeration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "U1000",
                  "U230",
                  "U400",
                  "U440",
                  "U525",
                  "U690",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceBreakerUnitTypeMCB": {
            "Properties": {
              "ICN60898": {
                "type": "real",
                "Description": "The nominal breaking capacity in [A] for an MCB tested in accordance with the IEC 60898 series."
              },
              "ICS60898": {
                "type": "real",
                "Description": "The service breaking capacity in [A] for an MCB tested in accordance with the IEC 60898 series."
              },
              "ICS60947": {
                "type": "real",
                "Description": "The service breaking capacity in [A] for an object tested in accordance with the IEC 60947 series."
              },
              "ICU60947": {
                "type": "real",
                "Description": "The ultimate breaking capacity in [A] for an object tested in accordance with the IEC 60947 series."
              },
              "PowerLoss": {
                "type": "real",
                "Description": "The power loss in [W]."
              },
              "VoltageLevel": {
                "type": "PEnum_VoltageLevels",
                "Description": "The voltage levels for which the data of the instance is valid. More than one value may be selected in the enumeration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "U1000",
                  "U230",
                  "U400",
                  "U440",
                  "U525",
                  "U690",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceBreakerUnitTypeMotorProtection": {
            "Properties": {
              "ICM60947": {
                "type": "real",
                "Description": "The making capacity in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series."
              },
              "ICS60947": {
                "type": "real",
                "Description": "The service breaking capacity in [A] for an object tested in accordance with the IEC 60947 series."
              },
              "ICU60947": {
                "type": "real",
                "Description": "The ultimate breaking capacity in [A] for an object tested in accordance with the IEC 60947 series."
              },
              "ICW60947": {
                "type": "real",
                "Description": "The thermal withstand current in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series. The value shall be related to 1 s."
              },
              "VoltageLevel": {
                "type": "PEnum_VoltageLevels",
                "Description": "The voltage levels for which the data of the instance is valid. More than one value may be selected in the enumeration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "U1000",
                  "U230",
                  "U400",
                  "U440",
                  "U525",
                  "U690",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingCurve": {
            "Properties": {
              "TrippingCurveType": {
                "type": "PEnum_TrippingCurveType",
                "Description": "The type of tripping curve that is represented by the property set.",
                "values": [
                  "LOWER",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "UPPER"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceTypeCircuitBreaker": {
            "Properties": {
              "ICM60947": {
                "type": "real",
                "Description": "The making capacity in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series."
              },
              "ICS60947": {
                "type": "real",
                "Description": "The service breaking capacity in [A] for an object tested in accordance with the IEC 60947 series."
              },
              "ICU60947": {
                "type": "real",
                "Description": "The ultimate breaking capacity in [A] for an object tested in accordance with the IEC 60947 series."
              },
              "ICW60947": {
                "type": "real",
                "Description": "The thermal withstand current in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series. The value shall be related to 1 s."
              },
              "VoltageLevel": {
                "type": "PEnum_VoltageLevels",
                "Description": "The voltage levels for which the data of the instance is valid. More than one value may be selected in the enumeration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "U1000",
                  "U230",
                  "U400",
                  "U440",
                  "U525",
                  "U690",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker": {
            "Properties": {
              "EarthFailureDeviceType": {
                "type": "PEnum_EarthFailureDeviceType",
                "Description": "A list of the available types of circuit breaker from which that required may be selected where:Standard: Device that operates without a time delay.\nTimeDelayed: Device that operates after a time delay.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "STANDARD",
                  "TIMEDELAYED",
                  "UNSET"
                ]
              },
              "Sensitivity": {
                "type": "real",
                "Description": "Sensitivity."
              }
            }
          },
          "Pset_ProtectiveDeviceTypeFuseDisconnector": {
            "Properties": {
              "ArcExtinctionType": {
                "type": "string",
                "Description": "Type of arc extinction used."
              },
              "BreakingCapacity": {
                "type": "real",
                "Description": "The current that a fuse, circuit breaker, or other electrical apparatus is able to interrupt without being destroyed or causing an electric arc with unacceptable duration."
              },
              "FuseDisconnectorType": {
                "type": "PEnum_FuseDisconnectorType",
                "Description": "A list of the available types of fuse disconnector from which that required may be selected where:EngineProtectionDevice: A fuse whose characteristic is specifically designed for the protection of a motor or generator.\nFuseSwitchDisconnector: A switch disconnector in which a fuse link or a fuse carrier with fuse link forms the moving contact,\nHRC: A standard fuse (High Rupturing Capacity)\nOverloadProtectionDevice: A device that disconnects the supply when the operating conditions in an electrically undamaged circuit causes an overcurrent,\nSemiconductorFuse: A fuse whose characteristic is specifically designed for the protection of sem-conductor devices.\nSwitchDisconnectorFuse: A switch disconnector in which one or more poles have a fuse in series in a composite unit.",
                "values": [
                  "ENGINEPROTECTIONDEVICE",
                  "FUSEDSWITCH",
                  "HRC",
                  "NOTKNOWN",
                  "OTHER",
                  "OVERLOADPROTECTIONDEVICE",
                  "SWITCHDISCONNECTORFUSE",
                  "UNSET"
                ]
              },
              "IC60269": {
                "type": "real",
                "Description": "The breaking capacity in [A] for fuses in accordance with the IEC 60269 series."
              },
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "NominalFrequency": {
                "type": "real",
                "Description": "The nominal frequency of the supply."
              },
              "NumberOfPhases": {
                "type": "integer",
                "Description": "Number of phases that the equipment operates on."
              },
              "NumberOfPoles": {
                "type": "integer",
                "Description": "Number of poles that the object would affect."
              },
              "PowerLoss": {
                "type": "real",
                "Description": "The power loss in [W]."
              },
              "TransformationRatio": {
                "type": "real",
                "Description": "The ratio of the actual primary current or voltage to the actual secondary current or voltage."
              },
              "VoltageLevel": {
                "type": "PEnum_VoltageLevels",
                "Description": "The voltage levels for which the data of the instance is valid. More than one value may be selected in the enumeration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "U1000",
                  "U230",
                  "U400",
                  "U440",
                  "U525",
                  "U690",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceTypeResidualCurrentCircuitBreaker": {
            "Properties": {
              "Sensitivity": {
                "type": "real",
                "Description": "Sensitivity."
              }
            }
          },
          "Pset_ProtectiveDeviceTypeResidualCurrentSwitch": {
            "Properties": {
              "Sensitivity": {
                "type": "real",
                "Description": "Sensitivity."
              }
            }
          },
          "Pset_ProtectiveDeviceTypeVaristor": {
            "Properties": {
              "CharacteristicFunction": {
                "type": "string",
                "Description": "The characteristic function to show the relationship between varistor current and voltage."
              },
              "VaristorType": {
                "type": "PEnum_VaristorType",
                "Description": "A list of the available types of varistor  from which that required may be selected.",
                "values": [
                  "METALOXIDE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "ZINCOXIDE"
                ]
              }
            }
          },
          "Qto_ProtectiveDeviceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_ProtectiveDeviceTypeAntiArcingDevice": {
            "Properties": {
              "GroundingType": {
                "type": "string",
                "Description": "The type of grounding connection."
              }
            }
          },
          "Pset_ProtectiveDeviceTypeSparkGap": {
            "Properties": {
              "BreakdownVoltageTolerance": {
                "type": "real",
                "Description": "Nominal value of the spark gap breakdown voltage tolerance."
              },
              "Capacitance": {
                "type": "real",
                "Description": "Maximum value of the capacitance between the electrodes at specified frequency and temperature."
              },
              "CurrentRMS": {
                "type": "real",
                "Description": "Maximum rms (root mean square) current of an electric-electronic or electromechanical component at specified ambient temperature."
              },
              "PowerDissipation": {
                "type": "real",
                "Description": "Permissible power which may be dissipated continuously, at specified conditions."
              },
              "Resistivity": {
                "type": "real",
                "Description": "Electrical resistivity of a rock or soil (Ohm-m)."
              },
              "SparkGapType": {
                "type": "PEnum_SparkGapType",
                "Description": "Type of Spark gap.",
                "values": [
                  "AIRSPARKGAP",
                  "GASFILLEDSPARKGAP",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcSolarDevice": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A solar device converts solar radiation into other energy such as electric current or thermal energy.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_SolarDeviceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_SolarDeviceBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcSolarDeviceType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcSolarDeviceType defines commonly shared information for occurrences of solar devices. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a solar device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSolarDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSolarDeviceType are represented by instances of IfcSolarDevice. Refer to the documentation at IfcSolarDevice for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_SolarDeviceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_SolarDeviceBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcSwitchingDevice": {
        "Parent": "IfcFlowController",
        "Description": "A switch is used in a cable distribution system (electrical circuit) to control or modulate the flow of electricity.Switches include those used for electrical power, communications, audio-visual, or other distribution system types as determined by the available ports.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_SwitchingDeviceTypeCommon": {
            "Properties": {
              "HasLock": {
                "type": "boolean",
                "Description": "Indication of whether a switching device has a key operated lock (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsIlluminated": {
                "type": "boolean",
                "Description": "An indication of whether there is an illuminated indicator to show that the switch is on (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Legend": {
                "type": "string",
                "Description": "A text inscribed or applied to the switch as a legend to indicate purpose or function."
              },
              "NumberOfGangs": {
                "type": "integer",
                "Description": "Number of gangs in the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SwitchFunction": {
                "type": "PEnum_SwitchFunctionType",
                "Description": "Indicates types of switches which differs in functionality.",
                "values": [
                  "DOUBLETHROWSWITCH",
                  "INTERMEDIATESWITCH",
                  "NOTKNOWN",
                  "ONOFFSWITCH",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_SwitchingDeviceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcSwitchingDeviceType": {
        "Parent": "IfcFlowControllerType",
        "Description": "The flow controller type IfcSwitchingDeviceType defines commonly shared information for occurrences of switching devices. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a switching device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSwitchingDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSwitchingDeviceType are represented by instances of IfcSwitchingDevice. Refer to the documentation at IfcSwitchingDevice for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_SwitchingDeviceTypeCommon": {
            "Properties": {
              "HasLock": {
                "type": "boolean",
                "Description": "Indication of whether a switching device has a key operated lock (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsIlluminated": {
                "type": "boolean",
                "Description": "An indication of whether there is an illuminated indicator to show that the switch is on (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Legend": {
                "type": "string",
                "Description": "A text inscribed or applied to the switch as a legend to indicate purpose or function."
              },
              "NumberOfGangs": {
                "type": "integer",
                "Description": "Number of gangs in the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SwitchFunction": {
                "type": "PEnum_SwitchFunctionType",
                "Description": "Indicates types of switches which differs in functionality.",
                "values": [
                  "DOUBLETHROWSWITCH",
                  "INTERMEDIATESWITCH",
                  "NOTKNOWN",
                  "ONOFFSWITCH",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SwitchingDeviceTypeContactor": {
            "Properties": {
              "ContactorType": {
                "type": "PEnum_ContactorType",
                "Description": "A list of the available types of contactor from which that required may be selected where:CapacitorSwitching: for switching 3 phase single or multi-step capacitor banks.\nLowCurrent: requires the use of low resistance contacts.\nMagneticLatching: enables the contactor to remain in the on position when the coil is no longer energized.\nMechanicalLatching: requires that the contactor is mechanically retained in the on position.\nModular: are totally enclosed and self contained.\nReversing: has a double set of contactors that are prewired.\nStandard: is a generic device that controls the flow of power in a circuit on or off.",
                "values": [
                  "CAPACITORSWITCHING",
                  "LOWCURRENT",
                  "MAGNETICLATCHING",
                  "MECHANICALLATCHING",
                  "MODULAR",
                  "NOTKNOWN",
                  "OTHER",
                  "REVERSING",
                  "STANDARD",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SwitchingDeviceTypeDimmerSwitch": {
            "Properties": {
              "DimmerType": {
                "type": "PEnum_SwitchingDeviceDimmerSwitchType",
                "Description": "A list of the available types of dimmer switch from which that required may be selected.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "ROCKER",
                  "SELECTOR",
                  "TWIST",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SwitchingDeviceTypeEmergencyStop": {
            "Properties": {
              "BreakingCapacity": {
                "type": "real",
                "Description": "The current that a fuse, circuit breaker, or other electrical apparatus is able to interrupt without being destroyed or causing an electric arc with unacceptable duration."
              },
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "NumberOfAffectedPoles": {
                "type": "integer",
                "Description": "Number of poles that the equipment affects."
              },
              "NumberOfEarthFaultRelays": {
                "type": "integer",
                "Description": "Indicates the number of relays used for preventing earth fault."
              },
              "NumberOfEmergencyButtons": {
                "type": "integer",
                "Description": "The number of emergency buttons built in the device."
              },
              "NumberOfOverCurrentRelays": {
                "type": "integer",
                "Description": "Indicates number of relays used for preventing over current."
              },
              "NumberOfPhases": {
                "type": "integer",
                "Description": "Number of phases that the equipment operates on."
              },
              "NumberOfRelays": {
                "type": "integer",
                "Description": "Indicates number of relays built in the device."
              },
              "RatedFrequency": {
                "type": "real",
                "Description": "Frequency of the AC electric power supply when the device or system reaches its optimum operating condition."
              },
              "SwitchOperation": {
                "type": "PEnum_SwitchingDeviceEmergencyStopType",
                "Description": "Indicates operation of emergency stop switch.",
                "values": [
                  "MUSHROOM",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "TransformationRatio": {
                "type": "real",
                "Description": "The ratio of the actual primary current or voltage to the actual secondary current or voltage."
              }
            }
          },
          "Pset_SwitchingDeviceTypeKeypad": {
            "Properties": {
              "KeypadType": {
                "type": "PEnum_SwitchingDeviceKeypadType",
                "Description": "A list of the available types of keypad switch from which that required may be selected.",
                "values": [
                  "BUTTONS",
                  "NOTKNOWN",
                  "OTHER",
                  "TOUCHSCREEN",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SwitchingDeviceTypeMomentarySwitch": {
            "Properties": {
              "MomentaryType": {
                "type": "PEnum_SwitchingDeviceMomentarySwitchType",
                "Description": "A list of the available types of momentary switch from which that required may be selected.",
                "values": [
                  "BUTTON",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SwitchingDeviceTypeSelectorSwitch": {
            "Properties": {
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "NominalPower": {
                "type": "real",
                "Description": "A conventional value of apparent power determining a value of the rated current that may be carried with rated voltage applied, under specified conditions. ( IEV ref 421-04-04)"
              },
              "NumberOfPhases": {
                "type": "integer",
                "Description": "Number of phases that the equipment operates on."
              },
              "RatedFrequency": {
                "type": "real",
                "Description": "Frequency of the AC electric power supply when the device or system reaches its optimum operating condition."
              },
              "SelectorType": {
                "type": "PEnum_SwitchingDeviceDimmerSwitchType",
                "Description": "A list of the available types of selector switch from which that required may be selected.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "ROCKER",
                  "SELECTOR",
                  "TWIST",
                  "UNSET"
                ]
              },
              "SwitchActivation": {
                "type": "PEnum_SwitchActivation",
                "Description": "A list of the available activations for switches from which that required may be selected.",
                "values": [
                  "ACTUATOR",
                  "FOOT",
                  "HAND",
                  "NOTKNOWN",
                  "OTHER",
                  "PROXIMITY",
                  "SOUND",
                  "TWOHAND",
                  "UNSET",
                  "WIRE"
                ]
              },
              "SwitchUsage": {
                "type": "PEnum_SwitchUsage",
                "Description": "A list of the available usages for switches from which that required may be selected.",
                "values": [
                  "EMERGENCY",
                  "GUARD",
                  "LIMIT",
                  "NOTKNOWN",
                  "OTHER",
                  "START",
                  "STOP",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SwitchingDeviceTypeStarter": {
            "Properties": {
              "StarterType": {
                "type": "PEnum_StarterType",
                "Description": "A list of the available types of starter from which that required may be selected where:AutoTransformer: A starter for an induction motor which uses for starting one or more reduced voltages derived from an auto transformer. (IEC 441-14-45)\nManual: A starter in which the force for closing the main contacts is provided exclusively by manual energy. (IEC 441-14-39)\nDirectOnLine: A starter which connects the line voltage across the motor terminals in one step. (IEC 441-14-40)\nFrequency: A starter in which the frequency of the power supply is progressively increased until the normal operation frequency is attained.\nnStep: A starter in which there are (n-1) intermediate accelerating positions between the off and full on positions. (IEC 441-14-41)\nRheostatic: A starter using one or several resistors for obtaining, during starting, stated motor torque characteristics and for limiting the current. (IEC 441-14-425)\nStarDelta: A starter for a 3 phase induction motor such that in the starting position the stator windings are connected in star and in the final running position they are connected in delta. (IEC 441-14-44)",
                "values": [
                  "AUTOTRANSFORMER",
                  "DIRECTONLINE",
                  "FREQUENCY",
                  "MANUAL",
                  "NOTKNOWN",
                  "NSTEP",
                  "OTHER",
                  "RHEOSTATIC",
                  "STARDELTA",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SwitchingDeviceTypeSwitchDisconnector": {
            "Properties": {
              "LoadDisconnectionType": {
                "type": "PEnum_LoadDisconnectionType",
                "Description": "A list of the available types of load disconnection from which that required may be selected.",
                "values": [
                  "NOTKNOWN",
                  "OFFLOAD",
                  "ONLOAD",
                  "OTHER",
                  "UNSET"
                ]
              },
              "SwitchDisconnectorType": {
                "type": "PEnum_SwitchDisconnectorType",
                "Description": "A list of the available types of switch disconnector from which that required may be selected where:CenterBreak: A disconnector in which both contacts of each pole are movable and engage at a point substantially midway between their supports. (IEC 441-14-08)\nDividedSupport: A disconnector in which the fixed and moving contacts of each pole are not supported by a common base or frame. (IEC 441-14-06)\nDoubleBreak: A disconnector that opens a circuit at two points. (IEC 441-14-09)\nEarthingSwitch: A disconnector in which the fixed and moving contacts of each pole are not supported by a common base or frame. (IEC 441-14-07)\nIsolator: A disconnector which in the open position satisfies isolating requirements. (IEC 441-14-12)",
                "values": [
                  "CENTERBREAK",
                  "DIVIDEDSUPPORT",
                  "DOUBLEBREAK",
                  "EARTHINGSWITCH",
                  "ISOLATOR",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SwitchingDeviceTypeToggleSwitch": {
            "Properties": {
              "SwitchActivation": {
                "type": "PEnum_SwitchActivation",
                "Description": "A list of the available activations for switches from which that required may be selected.",
                "values": [
                  "ACTUATOR",
                  "FOOT",
                  "HAND",
                  "NOTKNOWN",
                  "OTHER",
                  "PROXIMITY",
                  "SOUND",
                  "TWOHAND",
                  "UNSET",
                  "WIRE"
                ]
              },
              "SwitchUsage": {
                "type": "PEnum_SwitchUsage",
                "Description": "A list of the available usages for switches from which that required may be selected.",
                "values": [
                  "EMERGENCY",
                  "GUARD",
                  "LIMIT",
                  "NOTKNOWN",
                  "OTHER",
                  "START",
                  "STOP",
                  "UNSET"
                ]
              },
              "ToggleSwitchType": {
                "type": "PEnum_SwitchingDeviceToggleSwitchType",
                "Description": "A list of the available types of toggle switch from which that required may be selected.",
                "values": [
                  "BREAKGLASS",
                  "CHANGEOVER",
                  "KEYOPERATED",
                  "MANUALPULL",
                  "NOTKNOWN",
                  "OTHER",
                  "PULLCORD",
                  "PUSHBUTTON",
                  "ROCKER",
                  "SELECTOR",
                  "TWIST",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_SwitchingDeviceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_SwitchingDeviceTypeRelay": {
            "Properties": {
              "ContactResistance": {
                "type": "real",
                "Description": "Resistance when electrical node is closed."
              },
              "InsulationResistance": {
                "type": "real",
                "Description": "Minimum resistance between one terminal or several terminals connected together and the case or enclosure of a component at specified voltage."
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "PullInVoltage": {
                "type": "real",
                "Description": "Working voltage of relay in excitation state."
              },
              "ReleaseVoltage": {
                "type": "real",
                "Description": "The maximum voltage to guarantee the drop of the relay node."
              }
            }
          }
        }
      },
      "IfcTransformer": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A transformer is an inductive stationary device that transfers electrical energy from one circuit to another.IfcTransformer is used to transform electric power; conversion of electric signals for other purposes is handled at other entities: IfcController converts arbitrary signals, IfcAudioVisualAppliance converts signals for audio or video streams, and IfcCommunicationsAppliance converts signals for data or other communications usage.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_TransformerTypeCommon": {
            "Properties": {
              "ImaginaryImpedanceRatio": {
                "type": "real",
                "Description": "The ratio between the imaginary part of the zero sequence impedance and the imaginary part of the positive impedance (i.e. imaginary part of the short-circuit voltage) of the transformer.\nUsed for three-phase transformer which includes a N-conductor."
              },
              "IsNeutralPrimaryTerminalAvailable": {
                "type": "boolean",
                "Description": "An indication of whether the neutral point of the primary winding is available as a terminal (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsNeutralSecondaryTerminalAvailable": {
                "type": "boolean",
                "Description": "An indication of whether the neutral point of the secondary winding is available as a terminal (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaximumApparentPower": {
                "type": "real",
                "Description": "Maximum apparent power/capacity in VA (volt ampere)."
              },
              "PrimaryApparentPower": {
                "type": "real",
                "Description": "The power in VA (volt ampere) that has been transformed and that runs into the transformer on the primary side."
              },
              "PrimaryCurrent": {
                "type": "real",
                "Description": "The current that is going to be transformed and that runs into the transformer on the primary side."
              },
              "PrimaryFrequency": {
                "type": "real",
                "Description": "The frequency that is going to be transformed and that runs into the transformer on the primary side."
              },
              "PrimaryVoltage": {
                "type": "real",
                "Description": "The voltage that is going to be transformed and that runs into the transformer on the primary side."
              },
              "RealImpedanceRatio": {
                "type": "real",
                "Description": "The ratio between the real part of the zero sequence impedance and the real part of the positive impedance (i.e. real part of the short-circuit voltage) of the transformer.\nUsed for three-phase transformer which includes a N-conductor."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SecondaryApparentPower": {
                "type": "real",
                "Description": "The power in VA (volt ampere) that has been transformed and is running out of the transformer on the secondary side."
              },
              "SecondaryCurrent": {
                "type": "real",
                "Description": "The current that has been transformed and is running out of the transformer on the secondary side."
              },
              "SecondaryCurrentType": {
                "type": "PEnum_SecondaryCurrentType",
                "Description": "A list of the secondary current types that can result from transformer output.",
                "values": [
                  "AC",
                  "DC",
                  "NOTKNOWN",
                  "UNSET"
                ]
              },
              "SecondaryFrequency": {
                "type": "real",
                "Description": "The frequency that has been transformed and is running out of the transformer on the secondary side."
              },
              "SecondaryVoltage": {
                "type": "real",
                "Description": "The voltage that has been transformed and is running out of the transformer on the secondary side."
              },
              "ShortCircuitVoltage": {
                "type": "real",
                "Description": "A complex number that specifies the real and imaginary parts of the short-circuit voltage at rated current of a transformer given in %."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TransformerVectorGroup": {
                "type": "PEnum_TransformerVectorGroup",
                "Description": "List of the possible vector groups for the transformer from which that required may be set. Values in the enumeration list follow a standard international code where the first letter  describes how the primary windings are connected,\nthe second letter describes how the secondary windings are connected, and the numbers describe the rotation of voltages and currents from the primary to the secondary side in multiples of 30 degrees.D: means that the windings are delta-connected.\nY: means that the windings are star-connected.\nZ: means that the windings are zig-zag connected (a special start-connected providing low reactance of the transformer);\nThe connectivity is only relevant for three-phase transformers.",
                "values": [
                  "DD0",
                  "DD6",
                  "DY11",
                  "DY5",
                  "DZ0",
                  "DZ6",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "YD11",
                  "YD5",
                  "YY0",
                  "YY6",
                  "YZ11",
                  "YZ5"
                ]
              }
            }
          },
          "Qto_TransformerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcTransformerType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcTransformerType defines commonly shared information for occurrences of transformers. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a transformer type specification indicating the specific product information that is common to all occurrences of that product type. The IfcTransformerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcTransformerType are represented by instances of IfcTransformer. Refer to the documentation at IfcTransformer for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_TransformerTypeCommon": {
            "Properties": {
              "ImaginaryImpedanceRatio": {
                "type": "real",
                "Description": "The ratio between the imaginary part of the zero sequence impedance and the imaginary part of the positive impedance (i.e. imaginary part of the short-circuit voltage) of the transformer.\nUsed for three-phase transformer which includes a N-conductor."
              },
              "IsNeutralPrimaryTerminalAvailable": {
                "type": "boolean",
                "Description": "An indication of whether the neutral point of the primary winding is available as a terminal (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsNeutralSecondaryTerminalAvailable": {
                "type": "boolean",
                "Description": "An indication of whether the neutral point of the secondary winding is available as a terminal (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaximumApparentPower": {
                "type": "real",
                "Description": "Maximum apparent power/capacity in VA (volt ampere)."
              },
              "PrimaryApparentPower": {
                "type": "real",
                "Description": "The power in VA (volt ampere) that has been transformed and that runs into the transformer on the primary side."
              },
              "PrimaryCurrent": {
                "type": "real",
                "Description": "The current that is going to be transformed and that runs into the transformer on the primary side."
              },
              "PrimaryFrequency": {
                "type": "real",
                "Description": "The frequency that is going to be transformed and that runs into the transformer on the primary side."
              },
              "PrimaryVoltage": {
                "type": "real",
                "Description": "The voltage that is going to be transformed and that runs into the transformer on the primary side."
              },
              "RealImpedanceRatio": {
                "type": "real",
                "Description": "The ratio between the real part of the zero sequence impedance and the real part of the positive impedance (i.e. real part of the short-circuit voltage) of the transformer.\nUsed for three-phase transformer which includes a N-conductor."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SecondaryApparentPower": {
                "type": "real",
                "Description": "The power in VA (volt ampere) that has been transformed and is running out of the transformer on the secondary side."
              },
              "SecondaryCurrent": {
                "type": "real",
                "Description": "The current that has been transformed and is running out of the transformer on the secondary side."
              },
              "SecondaryCurrentType": {
                "type": "PEnum_SecondaryCurrentType",
                "Description": "A list of the secondary current types that can result from transformer output.",
                "values": [
                  "AC",
                  "DC",
                  "NOTKNOWN",
                  "UNSET"
                ]
              },
              "SecondaryFrequency": {
                "type": "real",
                "Description": "The frequency that has been transformed and is running out of the transformer on the secondary side."
              },
              "SecondaryVoltage": {
                "type": "real",
                "Description": "The voltage that has been transformed and is running out of the transformer on the secondary side."
              },
              "ShortCircuitVoltage": {
                "type": "real",
                "Description": "A complex number that specifies the real and imaginary parts of the short-circuit voltage at rated current of a transformer given in %."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TransformerVectorGroup": {
                "type": "PEnum_TransformerVectorGroup",
                "Description": "List of the possible vector groups for the transformer from which that required may be set. Values in the enumeration list follow a standard international code where the first letter  describes how the primary windings are connected,\nthe second letter describes how the secondary windings are connected, and the numbers describe the rotation of voltages and currents from the primary to the secondary side in multiples of 30 degrees.D: means that the windings are delta-connected.\nY: means that the windings are star-connected.\nZ: means that the windings are zig-zag connected (a special start-connected providing low reactance of the transformer);\nThe connectivity is only relevant for three-phase transformers.",
                "values": [
                  "DD0",
                  "DD6",
                  "DY11",
                  "DY5",
                  "DZ0",
                  "DZ6",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "YD11",
                  "YD5",
                  "YY0",
                  "YY6",
                  "YZ11",
                  "YZ5"
                ]
              }
            }
          },
          "Qto_TransformerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcAirTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": "An air terminal is a terminating or origination point for the transfer of air between distribution system(s) and one or more spaces. It can also be used for the transfer of air between adjacent spaces.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_AirTerminalOccurrence": {
            "Properties": {
              "AirFlowRate": {
                "type": "real",
                "Description": "Air flow rate."
              },
              "AirFlowType": {
                "type": "PEnum_AirTerminalAirFlowType",
                "Description": "",
                "values": [
                  "EXHAUSTAIR",
                  "NOTKNOWN",
                  "OTHER",
                  "RETURNAIR",
                  "SUPPLYAIR",
                  "UNSET"
                ]
              },
              "AirTerminalLocation": {
                "type": "PEnum_AirTerminalLocation",
                "Description": "Location  (a single type of diffuser can be used for multiple locations); high means close to ceiling.",
                "values": [
                  "CEILINGINTERIOR",
                  "CEILINGPERIMETER",
                  "FLOOR",
                  "NOTKNOWN",
                  "OTHER",
                  "SIDEWALLHIGH",
                  "SIDEWALLLOW",
                  "SILL",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_AirTerminalTypeCommon": {
            "Properties": {
              "AirDiffusionPerformanceIndex": {
                "type": "real",
                "Description": "The Air Diffusion Performance Index (ADPI) is used for cooling mode conditions. If several measurements of air velocity and air temperature are made throughout the occupied zone of a space, the ADPI is the percentage of locations where measurements were taken that meet the specifications for effective draft temperature and air velocity."
              },
              "AirTerminalMountingType": {
                "type": "PEnum_AirTerminalMountingType",
                "Description": "The way the air terminal is mounted to the ceiling, wall, etc.Surface: mounted to the surface of something (e.g., wall, duct, etc.).\nFlat flush: mounted flat and flush with a surface.\nLay-in: mounted in a lay-in type ceiling (e.g., a dropped ceiling grid).",
                "values": [
                  "FLATFLUSH",
                  "LAYIN",
                  "NOTKNOWN",
                  "OTHER",
                  "SURFACE",
                  "UNSET"
                ]
              },
              "AirTerminalShape": {
                "type": "PEnum_AirTerminalShape",
                "Description": "Shape of the air terminal. Slot is typically a long narrow supply device with an aspect ratio generally greater than 10 to 1.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RECTANGULAR",
                  "ROUND",
                  "SLOT",
                  "SQUARE",
                  "UNSET"
                ]
              },
              "CoreSetHorizontal": {
                "type": "real",
                "Description": "Degree of horizontal (in the X-axis of the LocalPlacement) blade set from the centerline."
              },
              "CoreSetVertical": {
                "type": "real",
                "Description": "Degree of vertical (in the Y-axis of the LocalPlacement) blade set from the centerline."
              },
              "CoreType": {
                "type": "PEnum_AirTerminalCoreType",
                "Description": "Identifies the way the core of the AirTerminal is constructed.",
                "values": [
                  "CURVEDBLADE",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "REMOVABLE",
                  "REVERSIBLE",
                  "SHUTTERBLADE",
                  "UNSET"
                ]
              },
              "DischargeDirection": {
                "type": "PEnum_AirTerminalDischargeDirection",
                "Description": "Discharge direction of the air terminal.Parallel: discharges parallel to mounting surface designed so that flow attaches to the surface.\nPerpendicular:  discharges away from mounting surface.\nAdjustable: both parallel and perpendicular discharge.",
                "values": [
                  "ADJUSTABLE",
                  "NOTKNOWN",
                  "OTHER",
                  "PARALLEL",
                  "PERPENDICULAR",
                  "UNSET"
                ]
              },
              "EffectiveArea": {
                "type": "real",
                "Description": "Effective discharge area of the air terminal."
              },
              "FaceType": {
                "type": "PEnum_AirTerminalFaceType",
                "Description": "Identifies how the terminal face of an AirTerminal is constructed.",
                "values": [
                  "DOUBLEDEFLECTION",
                  "EGGCRATE",
                  "FOURWAYPATTERN",
                  "LOUVERED",
                  "NOTKNOWN",
                  "OTHER",
                  "PERFORATED",
                  "SIGHTPROOF",
                  "SINGLEDEFLECTION",
                  "UNSET"
                ]
              },
              "FinishColour": {
                "type": "string",
                "Description": ""
              },
              "FinishType": {
                "type": "PEnum_AirTerminalFinishType",
                "Description": "The type of finish for the air terminal.",
                "values": [
                  "ANNODIZED",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "PAINTED",
                  "UNSET"
                ]
              },
              "FlowControlType": {
                "type": "PEnum_AirTerminalFlowControlType",
                "Description": "Type of flow control element that may be included as a part of the construction of the air terminal.",
                "values": [
                  "BELLOWS",
                  "DAMPER",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "FlowPattern": {
                "type": "PEnum_AirTerminalFlowPattern",
                "Description": "Flow pattern.",
                "values": [
                  "COMPACTJET",
                  "DISPLACMENT",
                  "LINEARDOUBLE",
                  "LINEARFOURWAY",
                  "LINEARSINGLE",
                  "NOTKNOWN",
                  "OTHER",
                  "RADIAL",
                  "SWIRL",
                  "UNSET"
                ]
              },
              "HasIntegralControl": {
                "type": "boolean",
                "Description": "If TRUE, a self powered temperature control is included in the AirTerminal.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSoundAttenuator": {
                "type": "boolean",
                "Description": "If TRUE, the object has sound attenuation.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasThermalInsulation": {
                "type": "boolean",
                "Description": "If TRUE, the air terminal has thermal insulation.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NeckArea": {
                "type": "real",
                "Description": "Neck area of the air terminal."
              },
              "NumberOfSlots": {
                "type": "integer",
                "Description": "Indicates the number of  slots."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SlotLength": {
                "type": "real",
                "Description": "Slot length."
              },
              "SlotWidth": {
                "type": "real",
                "Description": "Slot width."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThrowLength": {
                "type": "real",
                "Description": "The horizontal or vertical axial distance an airstream travels after leaving an AirTerminal before the maximum stream velocity is reduced to a specified terminal velocity under isothermal conditions at the upper value of the AirFlowrateRange."
              }
            }
          },
          "Qto_AirTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the object."
              },
              "TotalSurfaceArea": {
                "type": "real",
                "Description": "Total surface area of the element."
              }
            }
          }
        }
      },
      "IfcAirTerminalBox": {
        "Parent": "IfcFlowController",
        "Description": "An air terminal box typically participates in an HVAC duct distribution system and is used to control or modulate the amount of air delivered to its downstream ductwork. An air terminal box type is often referred to as an \"air flow regulator\".HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_AirTerminalBoxTypeCommon": {
            "Properties": {
              "ArrangementType": {
                "type": "PEnum_AirTerminalBoxArrangementType",
                "Description": "Terminal box arrangement.\nSingleDuct: Terminal box receives warm or cold air from a single air supply duct.\nDualDuct: Terminal box receives warm and cold air from separate air supply ducts.",
                "values": [
                  "DUALDUCT",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLEDUCT",
                  "UNSET"
                ]
              },
              "HasFan": {
                "type": "boolean",
                "Description": "Terminal box has a fan inside (fan powered box).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasReturnAir": {
                "type": "boolean",
                "Description": "Terminal box has return air mixed with supply air from duct work.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSoundAttenuator": {
                "type": "boolean",
                "Description": "If TRUE, the object has sound attenuation.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HousingThickness": {
                "type": "real",
                "Description": "Air terminal box housing material thickness."
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal air flow rate."
              },
              "NominalDamperDiameter": {
                "type": "real",
                "Description": "Nominal damper diameter."
              },
              "NominalInletAirPressure": {
                "type": "real",
                "Description": "Nominal airflow inlet static pressure."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "ReheatType": {
                "type": "PEnum_AirTerminalBoxReheatType",
                "Description": "Terminal box reheat type.",
                "values": [
                  "ELECTRICALREHEAT",
                  "GASREHEAT",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "STEAMCOILREHEAT",
                  "UNSET",
                  "WATERCOILREHEAT"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_AirTerminalBoxTypeBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcAirTerminalBoxType": {
        "Parent": "IfcFlowControllerType",
        "Description": "The flow controller type IfcAirTerminalBoxType defines commonly shared information for occurrences of air terminal boxes. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define an air terminal box type specification indicating the specific product information that is common to all occurrences of that product type. The IfcAirTerminalBoxType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcAirTerminalBoxType are represented by instances of IfcAirTerminalBox. Refer to the documentation at IfcAirTerminalBox for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_AirTerminalBoxTypeCommon": {
            "Properties": {
              "ArrangementType": {
                "type": "PEnum_AirTerminalBoxArrangementType",
                "Description": "Terminal box arrangement.\nSingleDuct: Terminal box receives warm or cold air from a single air supply duct.\nDualDuct: Terminal box receives warm and cold air from separate air supply ducts.",
                "values": [
                  "DUALDUCT",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLEDUCT",
                  "UNSET"
                ]
              },
              "HasFan": {
                "type": "boolean",
                "Description": "Terminal box has a fan inside (fan powered box).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasReturnAir": {
                "type": "boolean",
                "Description": "Terminal box has return air mixed with supply air from duct work.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSoundAttenuator": {
                "type": "boolean",
                "Description": "If TRUE, the object has sound attenuation.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HousingThickness": {
                "type": "real",
                "Description": "Air terminal box housing material thickness."
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal air flow rate."
              },
              "NominalDamperDiameter": {
                "type": "real",
                "Description": "Nominal damper diameter."
              },
              "NominalInletAirPressure": {
                "type": "real",
                "Description": "Nominal airflow inlet static pressure."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "ReheatType": {
                "type": "PEnum_AirTerminalBoxReheatType",
                "Description": "Terminal box reheat type.",
                "values": [
                  "ELECTRICALREHEAT",
                  "GASREHEAT",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "STEAMCOILREHEAT",
                  "UNSET",
                  "WATERCOILREHEAT"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_AirTerminalBoxTypeBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcAirTerminalType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcAirTerminalType defines commonly shared information for occurrences of air terminals. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define an air terminal type specification indicating the specific product information that is common to all occurrences of that product type. The IfcAirTerminalType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcAirTerminalType are represented by instances of IfcAirTerminal. Refer to the documentation at IfcAirTerminal for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_AirTerminalTypeCommon": {
            "Properties": {
              "AirDiffusionPerformanceIndex": {
                "type": "real",
                "Description": "The Air Diffusion Performance Index (ADPI) is used for cooling mode conditions. If several measurements of air velocity and air temperature are made throughout the occupied zone of a space, the ADPI is the percentage of locations where measurements were taken that meet the specifications for effective draft temperature and air velocity."
              },
              "AirTerminalMountingType": {
                "type": "PEnum_AirTerminalMountingType",
                "Description": "The way the air terminal is mounted to the ceiling, wall, etc.Surface: mounted to the surface of something (e.g., wall, duct, etc.).\nFlat flush: mounted flat and flush with a surface.\nLay-in: mounted in a lay-in type ceiling (e.g., a dropped ceiling grid).",
                "values": [
                  "FLATFLUSH",
                  "LAYIN",
                  "NOTKNOWN",
                  "OTHER",
                  "SURFACE",
                  "UNSET"
                ]
              },
              "AirTerminalShape": {
                "type": "PEnum_AirTerminalShape",
                "Description": "Shape of the air terminal. Slot is typically a long narrow supply device with an aspect ratio generally greater than 10 to 1.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RECTANGULAR",
                  "ROUND",
                  "SLOT",
                  "SQUARE",
                  "UNSET"
                ]
              },
              "CoreSetHorizontal": {
                "type": "real",
                "Description": "Degree of horizontal (in the X-axis of the LocalPlacement) blade set from the centerline."
              },
              "CoreSetVertical": {
                "type": "real",
                "Description": "Degree of vertical (in the Y-axis of the LocalPlacement) blade set from the centerline."
              },
              "CoreType": {
                "type": "PEnum_AirTerminalCoreType",
                "Description": "Identifies the way the core of the AirTerminal is constructed.",
                "values": [
                  "CURVEDBLADE",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "REMOVABLE",
                  "REVERSIBLE",
                  "SHUTTERBLADE",
                  "UNSET"
                ]
              },
              "DischargeDirection": {
                "type": "PEnum_AirTerminalDischargeDirection",
                "Description": "Discharge direction of the air terminal.Parallel: discharges parallel to mounting surface designed so that flow attaches to the surface.\nPerpendicular:  discharges away from mounting surface.\nAdjustable: both parallel and perpendicular discharge.",
                "values": [
                  "ADJUSTABLE",
                  "NOTKNOWN",
                  "OTHER",
                  "PARALLEL",
                  "PERPENDICULAR",
                  "UNSET"
                ]
              },
              "EffectiveArea": {
                "type": "real",
                "Description": "Effective discharge area of the air terminal."
              },
              "FaceType": {
                "type": "PEnum_AirTerminalFaceType",
                "Description": "Identifies how the terminal face of an AirTerminal is constructed.",
                "values": [
                  "DOUBLEDEFLECTION",
                  "EGGCRATE",
                  "FOURWAYPATTERN",
                  "LOUVERED",
                  "NOTKNOWN",
                  "OTHER",
                  "PERFORATED",
                  "SIGHTPROOF",
                  "SINGLEDEFLECTION",
                  "UNSET"
                ]
              },
              "FinishColour": {
                "type": "string",
                "Description": ""
              },
              "FinishType": {
                "type": "PEnum_AirTerminalFinishType",
                "Description": "The type of finish for the air terminal.",
                "values": [
                  "ANNODIZED",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "PAINTED",
                  "UNSET"
                ]
              },
              "FlowControlType": {
                "type": "PEnum_AirTerminalFlowControlType",
                "Description": "Type of flow control element that may be included as a part of the construction of the air terminal.",
                "values": [
                  "BELLOWS",
                  "DAMPER",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "FlowPattern": {
                "type": "PEnum_AirTerminalFlowPattern",
                "Description": "Flow pattern.",
                "values": [
                  "COMPACTJET",
                  "DISPLACMENT",
                  "LINEARDOUBLE",
                  "LINEARFOURWAY",
                  "LINEARSINGLE",
                  "NOTKNOWN",
                  "OTHER",
                  "RADIAL",
                  "SWIRL",
                  "UNSET"
                ]
              },
              "HasIntegralControl": {
                "type": "boolean",
                "Description": "If TRUE, a self powered temperature control is included in the AirTerminal.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSoundAttenuator": {
                "type": "boolean",
                "Description": "If TRUE, the object has sound attenuation.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasThermalInsulation": {
                "type": "boolean",
                "Description": "If TRUE, the air terminal has thermal insulation.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NeckArea": {
                "type": "real",
                "Description": "Neck area of the air terminal."
              },
              "NumberOfSlots": {
                "type": "integer",
                "Description": "Indicates the number of  slots."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SlotLength": {
                "type": "real",
                "Description": "Slot length."
              },
              "SlotWidth": {
                "type": "real",
                "Description": "Slot width."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThrowLength": {
                "type": "real",
                "Description": "The horizontal or vertical axial distance an airstream travels after leaving an AirTerminal before the maximum stream velocity is reduced to a specified terminal velocity under isothermal conditions at the upper value of the AirFlowrateRange."
              }
            }
          },
          "Qto_AirTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the object."
              },
              "TotalSurfaceArea": {
                "type": "real",
                "Description": "Total surface area of the element."
              }
            }
          }
        }
      },
      "IfcAirToAirHeatRecovery": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An air-to-air heat recovery device employs a counter-flow heat exchanger between inbound and outbound air flow. It is typically used to transfer heat from warmer air in one chamber to cooler air in the second chamber (i.e., typically used to recover heat from the conditioned air being exhausted and the outside air being supplied to a building), resulting in energy savings from reduced heating (or cooling) requirements.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_AirToAirHeatRecoveryTypeCommon": {
            "Properties": {
              "HasDefrost": {
                "type": "boolean",
                "Description": "has the heat exchanger has defrost function or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HeatTransferTypeEnum": {
                "type": "PEnum_AirToAirHeatTransferHeatTransferType",
                "Description": "Type of heat transfer between the two air streams.",
                "values": [
                  "LATENT",
                  "NOTKNOWN",
                  "OTHER",
                  "SENSIBLE",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_AirToAirHeatRecoveryBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcAirToAirHeatRecoveryType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcAirToAirHeatRecoveryType defines commonly shared information for occurrences of air to air heat recoverys. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define an air to air heat recovery type specification indicating the specific product information that is common to all occurrences of that product type. The IfcAirToAirHeatRecoveryType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcAirToAirHeatRecoveryType are represented by instances of IfcAirToAirHeatRecovery. Refer to the documentation at IfcAirToAirHeatRecovery for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_AirToAirHeatRecoveryTypeCommon": {
            "Properties": {
              "HasDefrost": {
                "type": "boolean",
                "Description": "has the heat exchanger has defrost function or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HeatTransferTypeEnum": {
                "type": "PEnum_AirToAirHeatTransferHeatTransferType",
                "Description": "Type of heat transfer between the two air streams.",
                "values": [
                  "LATENT",
                  "NOTKNOWN",
                  "OTHER",
                  "SENSIBLE",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_AirToAirHeatRecoveryBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcBoiler": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A boiler is a closed, pressure-rated vessel in which water or other fluid is heated using an energy source such as natural gas, heating oil, or electricity. The fluid in the vessel is then circulated out of the boiler for use in various processes or heating applications.IfcBoiler is a vessel solely used for heating of water or other fluids. Storage vessels, such as for drinking water storage are considered as tanks and use the IfcTank entity.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_BoilerTypeCommon": {
            "Properties": {
              "EnergySource": {
                "type": "PEnum_EnergySource",
                "Description": "Enumeration defining the energy source or fuel cumbusted.",
                "values": [
                  "COAL",
                  "COAL_PULVERIZED",
                  "ELECTRICITY",
                  "GAS",
                  "NOTKNOWN",
                  "OIL",
                  "OTHER",
                  "PROPANE",
                  "UNSET",
                  "WOOD",
                  "WOOD_CHIP",
                  "WOOD_PELLET",
                  "WOOD_PULVERIZED"
                ]
              },
              "HeatTransferSurfaceArea": {
                "type": "real",
                "Description": "Total heat transfer area of the vessel."
              },
              "IsWaterStorageHeater": {
                "type": "boolean",
                "Description": "This is used to identify if the boiler has storage capacity (TRUE). If FALSE, then there is no storage capacity built into the boiler, such as an instantaneous hot water heater.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalEnergyConsumption": {
                "type": "real",
                "Description": "Nominal fuel consumption rate required to produce the total boiler heat output."
              },
              "OperatingMode": {
                "type": "PEnum_BoilerOperatingMode",
                "Description": "Identifies the operating mode of the boiler.",
                "values": [
                  "FIXED",
                  "MODULATING",
                  "NOTKNOWN",
                  "OTHER",
                  "TWOSTEP",
                  "UNSET"
                ]
              },
              "PressureRating": {
                "type": "real",
                "Description": "Pressure rating of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WaterStorageCapacity": {
                "type": "real",
                "Description": "Water storage capacity."
              }
            }
          },
          "Qto_BoilerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "TotalSurfaceArea": {
                "type": "real",
                "Description": "Total surface area of the element."
              }
            }
          }
        }
      },
      "IfcBoilerType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcBoilerType defines commonly shared information for occurrences of boilers. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a boiler type specification indicating the specific product information that is common to all occurrences of that product type. The IfcBoilerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcBoilerType are represented by instances of IfcBoiler. Refer to the documentation at IfcBoiler for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_BoilerTypeCommon": {
            "Properties": {
              "EnergySource": {
                "type": "PEnum_EnergySource",
                "Description": "Enumeration defining the energy source or fuel cumbusted.",
                "values": [
                  "COAL",
                  "COAL_PULVERIZED",
                  "ELECTRICITY",
                  "GAS",
                  "NOTKNOWN",
                  "OIL",
                  "OTHER",
                  "PROPANE",
                  "UNSET",
                  "WOOD",
                  "WOOD_CHIP",
                  "WOOD_PELLET",
                  "WOOD_PULVERIZED"
                ]
              },
              "HeatTransferSurfaceArea": {
                "type": "real",
                "Description": "Total heat transfer area of the vessel."
              },
              "IsWaterStorageHeater": {
                "type": "boolean",
                "Description": "This is used to identify if the boiler has storage capacity (TRUE). If FALSE, then there is no storage capacity built into the boiler, such as an instantaneous hot water heater.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalEnergyConsumption": {
                "type": "real",
                "Description": "Nominal fuel consumption rate required to produce the total boiler heat output."
              },
              "OperatingMode": {
                "type": "PEnum_BoilerOperatingMode",
                "Description": "Identifies the operating mode of the boiler.",
                "values": [
                  "FIXED",
                  "MODULATING",
                  "NOTKNOWN",
                  "OTHER",
                  "TWOSTEP",
                  "UNSET"
                ]
              },
              "PressureRating": {
                "type": "real",
                "Description": "Pressure rating of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WaterStorageCapacity": {
                "type": "real",
                "Description": "Water storage capacity."
              }
            }
          },
          "Pset_BoilerTypeSteam": {
            "Properties": {
              "MaximumOutletPressure": {
                "type": "string",
                "Description": "Maximum steam outlet pressure."
              }
            }
          },
          "Qto_BoilerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "TotalSurfaceArea": {
                "type": "real",
                "Description": "Total surface area of the element."
              }
            }
          }
        }
      },
      "IfcBurner": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A burner is a device that converts fuel into heat through combustion. It includes gas, oil, and wood burners.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_BurnerTypeCommon": {
            "Properties": {
              "EnergySource": {
                "type": "PEnum_EnergySource",
                "Description": "Enumeration defining the energy source or fuel cumbusted.",
                "values": [
                  "COAL",
                  "COAL_PULVERIZED",
                  "ELECTRICITY",
                  "GAS",
                  "NOTKNOWN",
                  "OIL",
                  "OTHER",
                  "PROPANE",
                  "UNSET",
                  "WOOD",
                  "WOOD_CHIP",
                  "WOOD_PELLET",
                  "WOOD_PULVERIZED"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_BurnerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcBurnerType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcBurnerType defines commonly shared information for occurrences of burners. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a burner type specification indicating the specific product information that is common to all occurrences of that product type. The IfcBurnerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcBurnerType are represented by instances of IfcBurner. Refer to the documentation at IfcBurner for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_BurnerTypeCommon": {
            "Properties": {
              "EnergySource": {
                "type": "PEnum_EnergySource",
                "Description": "Enumeration defining the energy source or fuel cumbusted.",
                "values": [
                  "COAL",
                  "COAL_PULVERIZED",
                  "ELECTRICITY",
                  "GAS",
                  "NOTKNOWN",
                  "OIL",
                  "OTHER",
                  "PROPANE",
                  "UNSET",
                  "WOOD",
                  "WOOD_CHIP",
                  "WOOD_PELLET",
                  "WOOD_PULVERIZED"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_BurnerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcChiller": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A chiller is a device used to remove heat from a liquid via a vapor-compression or absorption refrigeration cycle to cool a fluid, typically water or a mixture of water and glycol. The chilled fluid is then used to cool and dehumidify air in a building.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_ChillerTypeCommon": {
            "Properties": {
              "ChillerCapacity": {
                "type": "real",
                "Description": "Nominal cooling capacity of chiller at standardized conditions as defined by the agency having jurisdiction."
              },
              "NominalCondensingTemperature": {
                "type": "real",
                "Description": "Chiller condensing temperature."
              },
              "NominalEfficiency": {
                "type": "real",
                "Description": "Nominal object efficiency under nominal conditions."
              },
              "NominalEvaporatingTemperature": {
                "type": "real",
                "Description": "Chiller evaporating temperature."
              },
              "NominalHeatRejectionRate": {
                "type": "real",
                "Description": "Sum of the refrigeration effect and the heat equivalent of the power input to the compressor."
              },
              "NominalPowerConsumption": {
                "type": "real",
                "Description": "Nominal total power consumption."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ChillerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcChillerType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcChillerType defines commonly shared information for occurrences of chillers. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a chiller type specification indicating the specific product information that is common to all occurrences of that product type. The IfcChillerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcChillerType are represented by instances of IfcChiller. Refer to the documentation at IfcChiller for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_ChillerTypeCommon": {
            "Properties": {
              "ChillerCapacity": {
                "type": "real",
                "Description": "Nominal cooling capacity of chiller at standardized conditions as defined by the agency having jurisdiction."
              },
              "NominalCondensingTemperature": {
                "type": "real",
                "Description": "Chiller condensing temperature."
              },
              "NominalEfficiency": {
                "type": "real",
                "Description": "Nominal object efficiency under nominal conditions."
              },
              "NominalEvaporatingTemperature": {
                "type": "real",
                "Description": "Chiller evaporating temperature."
              },
              "NominalHeatRejectionRate": {
                "type": "real",
                "Description": "Sum of the refrigeration effect and the heat equivalent of the power input to the compressor."
              },
              "NominalPowerConsumption": {
                "type": "real",
                "Description": "Nominal total power consumption."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_ChillerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCoil": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A coil is a device used to provide heat transfer between non-mixing media. A common example is a cooling coil, which utilizes a finned coil in which circulates chilled water, antifreeze, or refrigerant that is used to remove heat from air moving across the surface of the coil. A coil may be used either for heating or cooling purposes by placing a series of tubes (the coil) carrying a heating or cooling fluid into an airstream. The coil may be constructed from tubes bundled in a serpentine form or from finned tubes that give a extended heat transfer surface.Coils may also be used for non-airflow cases such as embedded in a floor slab.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_CoilOccurrence": {
            "Properties": {
              "HasSoundAttenuation": {
                "type": "boolean",
                "Description": "TRUE if the coil has sound attenuation, FALSE if it does not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_CoilTypeCommon": {
            "Properties": {
              "CoilPlacement": {
                "type": "PEnum_CoilPlacementType",
                "Description": "Indicates the placement of the coil.\nFLOOR indicates an under floor heater (if coil type is WATERHEATINGCOIL or ELECTRICHEATINGCOIL);\nCEILING indicates a cooling ceiling (if coil type is WATERCOOLINGCOIL);\nUNIT indicates that the coil is part of a cooling or heating unit, like cooled beam, etc.",
                "values": [
                  "CEILING",
                  "FLOOR",
                  "NOTKNOWN",
                  "OTHER",
                  "UNIT",
                  "UNSET"
                ]
              },
              "NominalLatentCapacity": {
                "type": "real",
                "Description": "Nominal latent capacity."
              },
              "NominalSensibleCapacity": {
                "type": "real",
                "Description": "Nominal sensible capacity."
              },
              "NominalUA": {
                "type": "real",
                "Description": "Nominal UA value."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_CoilTypeHydronic": {
            "Properties": {
              "BypassFactor": {
                "type": "real",
                "Description": "Fraction of air that is bypassed by the coil (0-1)."
              },
              "CoilConnectionDirection": {
                "type": "PEnum_CoilConnectionDirection",
                "Description": "Coil connection direction (facing into the air stream).",
                "values": [
                  "LEFT",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHT",
                  "UNSET"
                ]
              },
              "CoilCoolant": {
                "type": "PEnum_CoilCoolant",
                "Description": "The fluid used for heating or cooling used by the hydronic coil.",
                "values": [
                  "BRINE",
                  "GLYCOL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WATER"
                ]
              },
              "CoilFaceArea": {
                "type": "real",
                "Description": "Coil face area in the direction against air the flow."
              },
              "CoilFluidArrangement": {
                "type": "PEnum_CoilFluidArrangement",
                "Description": "Fluid flow arrangement of the coil.CrossCounterFlow: Air and water flow enter in different directions.\nCrossFlow: Air and water flow are perpendicular.\nCrossParallelFlow: Air and water flow enter in same directions.",
                "values": [
                  "CROSSCOUNTERFLOW",
                  "CROSSFLOW",
                  "CROSSPARALLELFLOW",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "HeatExchangeSurfaceArea": {
                "type": "real",
                "Description": "Heat exchange surface area associated with U-value."
              },
              "PrimarySurfaceArea": {
                "type": "real",
                "Description": "Primary heat transfer surface area of the tubes and headers."
              },
              "SecondarySurfaceArea": {
                "type": "real",
                "Description": "Secondary heat transfer surface area created by fins."
              },
              "SensibleHeatRatio": {
                "type": "real",
                "Description": "Air-side sensible heat ratio, or fraction of sensible heat transfer to the total heat transfer."
              },
              "WetCoilFraction": {
                "type": "real",
                "Description": "Fraction of coil surface area that is wet (0-1)."
              }
            }
          },
          "Qto_CoilBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCoilType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcCoilType defines commonly shared information for occurrences of coils. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a coil type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCoilType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCoilType are represented by instances of IfcCoil. Refer to the documentation at IfcCoil for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_CoilTypeCommon": {
            "Properties": {
              "CoilPlacement": {
                "type": "PEnum_CoilPlacementType",
                "Description": "Indicates the placement of the coil.\nFLOOR indicates an under floor heater (if coil type is WATERHEATINGCOIL or ELECTRICHEATINGCOIL);\nCEILING indicates a cooling ceiling (if coil type is WATERCOOLINGCOIL);\nUNIT indicates that the coil is part of a cooling or heating unit, like cooled beam, etc.",
                "values": [
                  "CEILING",
                  "FLOOR",
                  "NOTKNOWN",
                  "OTHER",
                  "UNIT",
                  "UNSET"
                ]
              },
              "NominalLatentCapacity": {
                "type": "real",
                "Description": "Nominal latent capacity."
              },
              "NominalSensibleCapacity": {
                "type": "real",
                "Description": "Nominal sensible capacity."
              },
              "NominalUA": {
                "type": "real",
                "Description": "Nominal UA value."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_CoilTypeHydronic": {
            "Properties": {
              "BypassFactor": {
                "type": "real",
                "Description": "Fraction of air that is bypassed by the coil (0-1)."
              },
              "CoilConnectionDirection": {
                "type": "PEnum_CoilConnectionDirection",
                "Description": "Coil connection direction (facing into the air stream).",
                "values": [
                  "LEFT",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHT",
                  "UNSET"
                ]
              },
              "CoilCoolant": {
                "type": "PEnum_CoilCoolant",
                "Description": "The fluid used for heating or cooling used by the hydronic coil.",
                "values": [
                  "BRINE",
                  "GLYCOL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WATER"
                ]
              },
              "CoilFaceArea": {
                "type": "real",
                "Description": "Coil face area in the direction against air the flow."
              },
              "CoilFluidArrangement": {
                "type": "PEnum_CoilFluidArrangement",
                "Description": "Fluid flow arrangement of the coil.CrossCounterFlow: Air and water flow enter in different directions.\nCrossFlow: Air and water flow are perpendicular.\nCrossParallelFlow: Air and water flow enter in same directions.",
                "values": [
                  "CROSSCOUNTERFLOW",
                  "CROSSFLOW",
                  "CROSSPARALLELFLOW",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "HeatExchangeSurfaceArea": {
                "type": "real",
                "Description": "Heat exchange surface area associated with U-value."
              },
              "PrimarySurfaceArea": {
                "type": "real",
                "Description": "Primary heat transfer surface area of the tubes and headers."
              },
              "SecondarySurfaceArea": {
                "type": "real",
                "Description": "Secondary heat transfer surface area created by fins."
              },
              "SensibleHeatRatio": {
                "type": "real",
                "Description": "Air-side sensible heat ratio, or fraction of sensible heat transfer to the total heat transfer."
              },
              "WetCoilFraction": {
                "type": "real",
                "Description": "Fraction of coil surface area that is wet (0-1)."
              }
            }
          },
          "Qto_CoilBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCompressor": {
        "Parent": "IfcFlowMovingDevice",
        "Description": "A compressor is a device that compresses a fluid typically used in a refrigeration circuit.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_CompressorTypeCommon": {
            "Properties": {
              "CompressorSpeed": {
                "type": "real",
                "Description": "Compressor speed."
              },
              "HasHotGasBypass": {
                "type": "boolean",
                "Description": "Whether or not hot gas bypass is provided for the compressor. TRUE = Yes, FALSE = No.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IdealCapacity": {
                "type": "real",
                "Description": "Compressor capacity under ideal conditions."
              },
              "IdealShaftPower": {
                "type": "real",
                "Description": "Compressor shaft power under ideal conditions."
              },
              "ImpellerDiameter": {
                "type": "real",
                "Description": "Diameter of object - used to scale performance of geometrically similar objects."
              },
              "MaximumPartLoadRatio": {
                "type": "real",
                "Description": "Maximum part load ratio as a fraction of nominal capacity."
              },
              "MinimumPartLoadRatio": {
                "type": "real",
                "Description": "Minimum part load ratio as a fraction of nominal capacity."
              },
              "NominalCapacity": {
                "type": "real",
                "Description": "The total nominal or volumetric capacity of the object."
              },
              "PowerSource": {
                "type": "PEnum_CompressorTypePowerSource",
                "Description": "Type of power driving the compressor.",
                "values": [
                  "ENGINEDRIVEN",
                  "GASTURBINE",
                  "MOTORDRIVEN",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RefrigerantClass": {
                "type": "PEnum_RefrigerantClass",
                "Description": "Refrigerant class used by the object.\nCFC: Chlorofluorocarbons.\nHCFC: Hydrochlorofluorocarbons.\nHFC: Hydrofluorocarbons.",
                "values": [
                  "AMMONIA",
                  "CFC",
                  "CO2",
                  "H2O",
                  "HCFC",
                  "HFC",
                  "HYDROCARBONS",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CompressorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCompressorType": {
        "Parent": "IfcFlowMovingDeviceType",
        "Description": "The flow moving device type IfcCompressorType defines commonly shared information for occurrences of compressors. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a compressor type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCompressorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCompressorType are represented by instances of IfcCompressor. Refer to the documentation at IfcCompressor for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_CompressorTypeCommon": {
            "Properties": {
              "CompressorSpeed": {
                "type": "real",
                "Description": "Compressor speed."
              },
              "HasHotGasBypass": {
                "type": "boolean",
                "Description": "Whether or not hot gas bypass is provided for the compressor. TRUE = Yes, FALSE = No.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IdealCapacity": {
                "type": "real",
                "Description": "Compressor capacity under ideal conditions."
              },
              "IdealShaftPower": {
                "type": "real",
                "Description": "Compressor shaft power under ideal conditions."
              },
              "ImpellerDiameter": {
                "type": "real",
                "Description": "Diameter of object - used to scale performance of geometrically similar objects."
              },
              "MaximumPartLoadRatio": {
                "type": "real",
                "Description": "Maximum part load ratio as a fraction of nominal capacity."
              },
              "MinimumPartLoadRatio": {
                "type": "real",
                "Description": "Minimum part load ratio as a fraction of nominal capacity."
              },
              "NominalCapacity": {
                "type": "real",
                "Description": "The total nominal or volumetric capacity of the object."
              },
              "PowerSource": {
                "type": "PEnum_CompressorTypePowerSource",
                "Description": "Type of power driving the compressor.",
                "values": [
                  "ENGINEDRIVEN",
                  "GASTURBINE",
                  "MOTORDRIVEN",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RefrigerantClass": {
                "type": "PEnum_RefrigerantClass",
                "Description": "Refrigerant class used by the object.\nCFC: Chlorofluorocarbons.\nHCFC: Hydrochlorofluorocarbons.\nHFC: Hydrofluorocarbons.",
                "values": [
                  "AMMONIA",
                  "CFC",
                  "CO2",
                  "H2O",
                  "HCFC",
                  "HFC",
                  "HYDROCARBONS",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CompressorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCondenser": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A condenser is a device that is used to dissipate heat, typically by condensing a substance such as a refrigerant from its gaseous to its liquid state.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_CondenserTypeCommon": {
            "Properties": {
              "ExternalSurfaceArea": {
                "type": "real",
                "Description": "External surface area (both primary and secondary area)."
              },
              "InternalRefrigerantVolume": {
                "type": "real",
                "Description": "Internal volume of object (refrigerant side)."
              },
              "InternalSurfaceArea": {
                "type": "real",
                "Description": "Internal surface area."
              },
              "InternalWaterVolume": {
                "type": "real",
                "Description": "Internal volume of object (water side)."
              },
              "NominalHeatTransferArea": {
                "type": "real",
                "Description": "Nominal heat transfer surface area associated with nominal overall heat transfer coefficient."
              },
              "NominalHeatTransferCoefficient": {
                "type": "real",
                "Description": "Nominal overall heat transfer coefficient associated with nominal heat transfer area."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RefrigerantClass": {
                "type": "PEnum_RefrigerantClass",
                "Description": "Refrigerant class used by the object.\nCFC: Chlorofluorocarbons.\nHCFC: Hydrochlorofluorocarbons.\nHFC: Hydrofluorocarbons.",
                "values": [
                  "AMMONIA",
                  "CFC",
                  "CO2",
                  "H2O",
                  "HCFC",
                  "HFC",
                  "HYDROCARBONS",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CondenserBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCondenserType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcCondenserType defines commonly shared information for occurrences of condensers. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a condenser type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCondenserType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCondenserType are represented by instances of IfcCondenser. Refer to the documentation at IfcCondenser for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_CondenserTypeCommon": {
            "Properties": {
              "ExternalSurfaceArea": {
                "type": "real",
                "Description": "External surface area (both primary and secondary area)."
              },
              "InternalRefrigerantVolume": {
                "type": "real",
                "Description": "Internal volume of object (refrigerant side)."
              },
              "InternalSurfaceArea": {
                "type": "real",
                "Description": "Internal surface area."
              },
              "InternalWaterVolume": {
                "type": "real",
                "Description": "Internal volume of object (water side)."
              },
              "NominalHeatTransferArea": {
                "type": "real",
                "Description": "Nominal heat transfer surface area associated with nominal overall heat transfer coefficient."
              },
              "NominalHeatTransferCoefficient": {
                "type": "real",
                "Description": "Nominal overall heat transfer coefficient associated with nominal heat transfer area."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RefrigerantClass": {
                "type": "PEnum_RefrigerantClass",
                "Description": "Refrigerant class used by the object.\nCFC: Chlorofluorocarbons.\nHCFC: Hydrochlorofluorocarbons.\nHFC: Hydrofluorocarbons.",
                "values": [
                  "AMMONIA",
                  "CFC",
                  "CO2",
                  "H2O",
                  "HCFC",
                  "HFC",
                  "HYDROCARBONS",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CondenserBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCooledBeam": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A cooled beam (or chilled beam) is a device typically used to cool air by circulating a fluid such as chilled water through exposed finned tubes above a space. Typically mounted overhead near or within a ceiling, the cooled beam uses convection to cool the space below it by acting as a heat sink for the naturally rising warm air of the space. Once cooled, the air naturally drops back to the floor where the cycle begins again.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_CooledBeamTypeCommon": {
            "Properties": {
              "CoilLength": {
                "type": "real",
                "Description": "Length of coil."
              },
              "CoilWidth": {
                "type": "real",
                "Description": "Width of coil."
              },
              "FinishColour": {
                "type": "string",
                "Description": ""
              },
              "IntegratedLightingType": {
                "type": "PEnum_CooledBeamIntegratedLightingType",
                "Description": "Integrated lighting in cooled beam.",
                "values": [
                  "DIRECT",
                  "DIRECTANDINDIRECT",
                  "INDIRECT",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "IsFreeHanging": {
                "type": "boolean",
                "Description": "Is it free hanging type (not mounted in a false ceiling)?",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalCoolingCapacity": {
                "type": "real",
                "Description": "Nominal cooling capacity."
              },
              "NominalHeatingCapacity": {
                "type": "real",
                "Description": "Nominal heating capacity."
              },
              "NominalReturnWaterTemperatureCooling": {
                "type": "real",
                "Description": "Nominal return water temperature (refers to nominal cooling capacity)."
              },
              "NominalReturnWaterTemperatureHeating": {
                "type": "real",
                "Description": "Nominal return water temperature (refers to nominal heating capacity)."
              },
              "NominalSupplyWaterTemperatureCooling": {
                "type": "real",
                "Description": "Nominal supply water temperature (refers to nominal cooling capacity)."
              },
              "NominalSupplyWaterTemperatureHeating": {
                "type": "real",
                "Description": "Nominal supply water temperature (refers to nominal heating capacity)."
              },
              "NominalSurroundingHumidityCooling": {
                "type": "real",
                "Description": "Nominal surrounding humidity (refers to nominal cooling capacity)."
              },
              "NominalSurroundingTemperatureCooling": {
                "type": "real",
                "Description": "Nominal surrounding temperature (refers to nominal cooling capacity)."
              },
              "NominalSurroundingTemperatureHeating": {
                "type": "real",
                "Description": "Nominal surrounding temperature (refers to nominal heating capacity)."
              },
              "NominalWaterFlowCooling": {
                "type": "real",
                "Description": "Nominal water flow (refers to nominal cooling capacity)."
              },
              "NominalWaterFlowHeating": {
                "type": "real",
                "Description": "Nominal water flow (refers to nominal heating capacity)."
              },
              "PipeConnection": {
                "type": "PEnum_CooledBeamPipeConnection",
                "Description": "The manner in which the pipe connection is made to the cooled beam.",
                "values": [
                  "LEFT",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHT",
                  "STRAIGHT",
                  "TOP",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WaterFlowControlSystemType": {
                "type": "PEnum_CooledBeamWaterFlowControlSystemType",
                "Description": "Factory fitted waterflow control system.",
                "values": [
                  "2WAYVALVE",
                  "3WAYVALVE",
                  "NONE",
                  "NOTKNOWN",
                  "ONOFFVALVE",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CooledBeamBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCooledBeamType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcCooledBeamType defines commonly shared information for occurrences of cooled beams. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a cooled beam type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCooledBeamType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCooledBeamType are represented by instances of IfcCooledBeam. Refer to the documentation at IfcCooledBeam for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_CooledBeamTypeActive": {
            "Properties": {
              "AirFlowConfiguration": {
                "type": "PEnum_CooledBeamActiveAirFlowConfigurationType",
                "Description": "Air flow configuration type of cooled beam.",
                "values": [
                  "BIDIRECTIONAL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNIDIRECTIONALLEFT",
                  "UNIDIRECTIONALRIGHT",
                  "UNSET"
                ]
              },
              "ConnectionSize": {
                "type": "real",
                "Description": "The connection size of the object."
              },
              "SupplyAirConnectionType": {
                "type": "PEnum_CooledBeamSupplyAirConnectionType",
                "Description": "The manner in which the pipe connection is made to the cooled beam.",
                "values": [
                  "LEFT",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHT",
                  "STRAIGHT",
                  "TOP",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_CooledBeamTypeCommon": {
            "Properties": {
              "CoilLength": {
                "type": "real",
                "Description": "Length of coil."
              },
              "CoilWidth": {
                "type": "real",
                "Description": "Width of coil."
              },
              "FinishColour": {
                "type": "string",
                "Description": ""
              },
              "IntegratedLightingType": {
                "type": "PEnum_CooledBeamIntegratedLightingType",
                "Description": "Integrated lighting in cooled beam.",
                "values": [
                  "DIRECT",
                  "DIRECTANDINDIRECT",
                  "INDIRECT",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "IsFreeHanging": {
                "type": "boolean",
                "Description": "Is it free hanging type (not mounted in a false ceiling)?",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalCoolingCapacity": {
                "type": "real",
                "Description": "Nominal cooling capacity."
              },
              "NominalHeatingCapacity": {
                "type": "real",
                "Description": "Nominal heating capacity."
              },
              "NominalReturnWaterTemperatureCooling": {
                "type": "real",
                "Description": "Nominal return water temperature (refers to nominal cooling capacity)."
              },
              "NominalReturnWaterTemperatureHeating": {
                "type": "real",
                "Description": "Nominal return water temperature (refers to nominal heating capacity)."
              },
              "NominalSupplyWaterTemperatureCooling": {
                "type": "real",
                "Description": "Nominal supply water temperature (refers to nominal cooling capacity)."
              },
              "NominalSupplyWaterTemperatureHeating": {
                "type": "real",
                "Description": "Nominal supply water temperature (refers to nominal heating capacity)."
              },
              "NominalSurroundingHumidityCooling": {
                "type": "real",
                "Description": "Nominal surrounding humidity (refers to nominal cooling capacity)."
              },
              "NominalSurroundingTemperatureCooling": {
                "type": "real",
                "Description": "Nominal surrounding temperature (refers to nominal cooling capacity)."
              },
              "NominalSurroundingTemperatureHeating": {
                "type": "real",
                "Description": "Nominal surrounding temperature (refers to nominal heating capacity)."
              },
              "NominalWaterFlowCooling": {
                "type": "real",
                "Description": "Nominal water flow (refers to nominal cooling capacity)."
              },
              "NominalWaterFlowHeating": {
                "type": "real",
                "Description": "Nominal water flow (refers to nominal heating capacity)."
              },
              "PipeConnection": {
                "type": "PEnum_CooledBeamPipeConnection",
                "Description": "The manner in which the pipe connection is made to the cooled beam.",
                "values": [
                  "LEFT",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHT",
                  "STRAIGHT",
                  "TOP",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WaterFlowControlSystemType": {
                "type": "PEnum_CooledBeamWaterFlowControlSystemType",
                "Description": "Factory fitted waterflow control system.",
                "values": [
                  "2WAYVALVE",
                  "3WAYVALVE",
                  "NONE",
                  "NOTKNOWN",
                  "ONOFFVALVE",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_CooledBeamBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCoolingTower": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A cooling tower is a device which rejects heat to ambient air by circulating a fluid such as water through it to reduce its temperature by partial evaporation.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_CoolingTowerTypeCommon": {
            "Properties": {
              "AmbientDesignDryBulbTemperature": {
                "type": "real",
                "Description": "Ambient design dry bulb temperature used for selecting the cooling tower."
              },
              "AmbientDesignWetBulbTemperature": {
                "type": "real",
                "Description": "Ambient design wet bulb temperature used for selecting the cooling tower."
              },
              "BasinReserveVolume": {
                "type": "real",
                "Description": "Volume between operating and overflow levels in cooling tower basin."
              },
              "CapacityControl": {
                "type": "PEnum_CoolingTowerCapacityControl",
                "Description": "FanCycling: Fan is cycled on and off to control duty.\nTwoSpeedFan: Fan is switched between low and high speed to control duty.\nVariableSpeedFan: Fan speed is varied to control duty.\nDampersControl: Dampers modulate the air flow to control duty.\nBypassValveControl: Bypass valve modulates the water flow to control duty.\nMultipleSeriesPumps: Turn on/off multiple series pump to control duty.\nTwoSpeedPump: Switch between high/low pump speed to control duty.\nVariableSpeedPump: vary pump speed to control duty.",
                "values": [
                  "BYPASSVALVECONTROL",
                  "DAMPERSCONTROL",
                  "FANCYCLING",
                  "MULTIPLESERIESPUMPS",
                  "NOTKNOWN",
                  "OTHER",
                  "TWOSPEEDFAN",
                  "TWOSPEEDPUMP",
                  "UNSET",
                  "VARIABLESPEEDFAN",
                  "VARIABLESPEEDPUMP"
                ]
              },
              "CircuitType": {
                "type": "PEnum_CoolingTowerCircuitType",
                "Description": "OpenCircuit: Exposes water directly to the cooling atmosphere.\nCloseCircuit: The fluid is separated from the atmosphere by a heat exchanger.\nWet: The air stream or the heat exchange surface is evaporatively cooled.\nDry: No evaporation into the air stream.\nDryWet: A combination of a dry tower and a wet tower.",
                "values": [
                  "CLOSEDCIRCUITDRY",
                  "CLOSEDCIRCUITDRYWET",
                  "CLOSEDCIRCUITWET",
                  "NOTKNOWN",
                  "OPENCIRCUIT",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ControlStrategy": {
                "type": "PEnum_CoolingTowerControlStrategy",
                "Description": "FixedExitingWaterTemp: The capacity is controlled to maintain a fixed exiting water temperature.\nWetBulbTempReset: The set-point is reset based on the wet-bulb temperature.",
                "values": [
                  "FIXEDEXITINGWATERTEMP",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WETBULBTEMPRESET"
                ]
              },
              "FlowArrangement": {
                "type": "PEnum_CoolingTowerFlowArrangement",
                "Description": "CounterFlow: Air and water flow enter in different directions.\nCrossFlow: Air and water flow are perpendicular.\nParallelFlow: air and water flow enter in same directions.",
                "values": [
                  "COUNTERFLOW",
                  "CROSSFLOW",
                  "NOTKNOWN",
                  "OTHER",
                  "PARALLELFLOW",
                  "UNSET"
                ]
              },
              "LiftElevationDifference": {
                "type": "real",
                "Description": "Elevation difference between cooling tower sump and the top of the tower."
              },
              "NominalCapacity": {
                "type": "real",
                "Description": "The total nominal or volumetric capacity of the object."
              },
              "NumberOfCells": {
                "type": "integer",
                "Description": "Number of cells in one cooling tower unit."
              },
              "OperationTemperatureRange": {
                "type": "real",
                "Description": "Allowable operation ambient air temperature range."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SprayType": {
                "type": "PEnum_CoolingTowerSprayType",
                "Description": "SprayFilled: Water is sprayed into airflow.\nSplashTypeFill: water cascades over successive rows of splash bars.\nFilmTypeFill: water flows in a thin layer over closely spaced sheets.",
                "values": [
                  "FILMTYPEFILL",
                  "NOTKNOWN",
                  "OTHER",
                  "SPLASHTYPEFILL",
                  "SPRAYFILLED",
                  "UNSET"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WaterRequirement": {
                "type": "real",
                "Description": "Make-up water requirement."
              }
            }
          },
          "Qto_CoolingTowerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcCoolingTowerType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcCoolingTowerType defines commonly shared information for occurrences of cooling towers. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a cooling tower type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCoolingTowerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCoolingTowerType are represented by instances of IfcCoolingTower. Refer to the documentation at IfcCoolingTower for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_CoolingTowerTypeCommon": {
            "Properties": {
              "AmbientDesignDryBulbTemperature": {
                "type": "real",
                "Description": "Ambient design dry bulb temperature used for selecting the cooling tower."
              },
              "AmbientDesignWetBulbTemperature": {
                "type": "real",
                "Description": "Ambient design wet bulb temperature used for selecting the cooling tower."
              },
              "BasinReserveVolume": {
                "type": "real",
                "Description": "Volume between operating and overflow levels in cooling tower basin."
              },
              "CapacityControl": {
                "type": "PEnum_CoolingTowerCapacityControl",
                "Description": "FanCycling: Fan is cycled on and off to control duty.\nTwoSpeedFan: Fan is switched between low and high speed to control duty.\nVariableSpeedFan: Fan speed is varied to control duty.\nDampersControl: Dampers modulate the air flow to control duty.\nBypassValveControl: Bypass valve modulates the water flow to control duty.\nMultipleSeriesPumps: Turn on/off multiple series pump to control duty.\nTwoSpeedPump: Switch between high/low pump speed to control duty.\nVariableSpeedPump: vary pump speed to control duty.",
                "values": [
                  "BYPASSVALVECONTROL",
                  "DAMPERSCONTROL",
                  "FANCYCLING",
                  "MULTIPLESERIESPUMPS",
                  "NOTKNOWN",
                  "OTHER",
                  "TWOSPEEDFAN",
                  "TWOSPEEDPUMP",
                  "UNSET",
                  "VARIABLESPEEDFAN",
                  "VARIABLESPEEDPUMP"
                ]
              },
              "CircuitType": {
                "type": "PEnum_CoolingTowerCircuitType",
                "Description": "OpenCircuit: Exposes water directly to the cooling atmosphere.\nCloseCircuit: The fluid is separated from the atmosphere by a heat exchanger.\nWet: The air stream or the heat exchange surface is evaporatively cooled.\nDry: No evaporation into the air stream.\nDryWet: A combination of a dry tower and a wet tower.",
                "values": [
                  "CLOSEDCIRCUITDRY",
                  "CLOSEDCIRCUITDRYWET",
                  "CLOSEDCIRCUITWET",
                  "NOTKNOWN",
                  "OPENCIRCUIT",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ControlStrategy": {
                "type": "PEnum_CoolingTowerControlStrategy",
                "Description": "FixedExitingWaterTemp: The capacity is controlled to maintain a fixed exiting water temperature.\nWetBulbTempReset: The set-point is reset based on the wet-bulb temperature.",
                "values": [
                  "FIXEDEXITINGWATERTEMP",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WETBULBTEMPRESET"
                ]
              },
              "FlowArrangement": {
                "type": "PEnum_CoolingTowerFlowArrangement",
                "Description": "CounterFlow: Air and water flow enter in different directions.\nCrossFlow: Air and water flow are perpendicular.\nParallelFlow: air and water flow enter in same directions.",
                "values": [
                  "COUNTERFLOW",
                  "CROSSFLOW",
                  "NOTKNOWN",
                  "OTHER",
                  "PARALLELFLOW",
                  "UNSET"
                ]
              },
              "LiftElevationDifference": {
                "type": "real",
                "Description": "Elevation difference between cooling tower sump and the top of the tower."
              },
              "NominalCapacity": {
                "type": "real",
                "Description": "The total nominal or volumetric capacity of the object."
              },
              "NumberOfCells": {
                "type": "integer",
                "Description": "Number of cells in one cooling tower unit."
              },
              "OperationTemperatureRange": {
                "type": "real",
                "Description": "Allowable operation ambient air temperature range."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SprayType": {
                "type": "PEnum_CoolingTowerSprayType",
                "Description": "SprayFilled: Water is sprayed into airflow.\nSplashTypeFill: water cascades over successive rows of splash bars.\nFilmTypeFill: water flows in a thin layer over closely spaced sheets.",
                "values": [
                  "FILMTYPEFILL",
                  "NOTKNOWN",
                  "OTHER",
                  "SPLASHTYPEFILL",
                  "SPRAYFILLED",
                  "UNSET"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WaterRequirement": {
                "type": "real",
                "Description": "Make-up water requirement."
              }
            }
          },
          "Qto_CoolingTowerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcDamper": {
        "Parent": "IfcFlowController",
        "Description": "A damper typically participates in an HVAC duct distribution system and is used to control or modulate the flow of air.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_DamperOccurrence": {
            "Properties": {
              "SizingMethod": {
                "type": "PEnum_DamperSizingMethod",
                "Description": "Identifies whether the damper is sized nominally or with exact measurements:NOMINAL: Nominal sizing method.\nEXACT: Exact sizing method.",
                "values": [
                  "EXACT",
                  "NOMINAL",
                  "NOTKNOWN",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_DamperTypeCommon": {
            "Properties": {
              "BladeAction": {
                "type": "PEnum_DamperBladeAction",
                "Description": "Blade action.",
                "values": [
                  "FOLDINGCURTAIN",
                  "NOTKNOWN",
                  "OPPOSED",
                  "OTHER",
                  "PARALLEL",
                  "SINGLE",
                  "UNSET"
                ]
              },
              "BladeEdge": {
                "type": "PEnum_DamperBladeEdge",
                "Description": "Blade edge.",
                "values": [
                  "CRIMPED",
                  "NOTKNOWN",
                  "OTHER",
                  "UNCRIMPED",
                  "UNSET"
                ]
              },
              "BladeShape": {
                "type": "PEnum_DamperBladeShape",
                "Description": "Blade shape. Flat means triple V-groove.",
                "values": [
                  "EXTRUDEDAIRFOIL",
                  "FABRICATEDAIRFOIL",
                  "FLAT",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "BladeThickness": {
                "type": "real",
                "Description": "The thickness of the damper blade."
              },
              "CloseOffRating": {
                "type": "real",
                "Description": "Close off rating."
              },
              "FaceArea": {
                "type": "real",
                "Description": "Face area open to the airstream."
              },
              "FrameDepth": {
                "type": "real",
                "Description": "The length (or depth) of the damper frame."
              },
              "FrameThickness": {
                "type": "real",
                "Description": "The thickness of the damper frame material."
              },
              "FrameType": {
                "type": "string",
                "Description": "The type of frame used by the damper (e.g., Standard, Single Flange, Single Reversed Flange, Double Flange, etc.)."
              },
              "LeakageFullyClosed": {
                "type": "real",
                "Description": "Leakage when fully closed."
              },
              "MaximumAirFlowRate": {
                "type": "real",
                "Description": "Maximum allowable air flow rate."
              },
              "MaximumWorkingPressure": {
                "type": "real",
                "Description": "Maximum pressure that the object is manufactured to withstand."
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal air flow rate."
              },
              "NumberofBlades": {
                "type": "integer",
                "Description": "Number of blades."
              },
              "OpenPressureDrop": {
                "type": "real",
                "Description": "Total pressure drop across damper."
              },
              "Operation": {
                "type": "PEnum_DamperOperation",
                "Description": "The operational mechanism for the damper operation.",
                "values": [
                  "AUTOMATIC",
                  "MANUAL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Orientation": {
                "type": "PEnum_DamperOrientation",
                "Description": "The intended orientation for the damper as specified by the manufacturer.",
                "values": [
                  "HORIZONTAL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VERTICAL",
                  "VERTICALORHORIZONTAL"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TemperatureRating": {
                "type": "real",
                "Description": "Temperature rating."
              }
            }
          },
          "Qto_DamperBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcDamperType": {
        "Parent": "IfcFlowControllerType",
        "Description": "The flow controller type IfcDamperType defines commonly shared information for occurrences of dampers. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a damper type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDamperType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDamperType are represented by instances of IfcDamper. Refer to the documentation at IfcDamper for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_DamperTypeCommon": {
            "Properties": {
              "BladeAction": {
                "type": "PEnum_DamperBladeAction",
                "Description": "Blade action.",
                "values": [
                  "FOLDINGCURTAIN",
                  "NOTKNOWN",
                  "OPPOSED",
                  "OTHER",
                  "PARALLEL",
                  "SINGLE",
                  "UNSET"
                ]
              },
              "BladeEdge": {
                "type": "PEnum_DamperBladeEdge",
                "Description": "Blade edge.",
                "values": [
                  "CRIMPED",
                  "NOTKNOWN",
                  "OTHER",
                  "UNCRIMPED",
                  "UNSET"
                ]
              },
              "BladeShape": {
                "type": "PEnum_DamperBladeShape",
                "Description": "Blade shape. Flat means triple V-groove.",
                "values": [
                  "EXTRUDEDAIRFOIL",
                  "FABRICATEDAIRFOIL",
                  "FLAT",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "BladeThickness": {
                "type": "real",
                "Description": "The thickness of the damper blade."
              },
              "CloseOffRating": {
                "type": "real",
                "Description": "Close off rating."
              },
              "FaceArea": {
                "type": "real",
                "Description": "Face area open to the airstream."
              },
              "FrameDepth": {
                "type": "real",
                "Description": "The length (or depth) of the damper frame."
              },
              "FrameThickness": {
                "type": "real",
                "Description": "The thickness of the damper frame material."
              },
              "FrameType": {
                "type": "string",
                "Description": "The type of frame used by the damper (e.g., Standard, Single Flange, Single Reversed Flange, Double Flange, etc.)."
              },
              "LeakageFullyClosed": {
                "type": "real",
                "Description": "Leakage when fully closed."
              },
              "MaximumAirFlowRate": {
                "type": "real",
                "Description": "Maximum allowable air flow rate."
              },
              "MaximumWorkingPressure": {
                "type": "real",
                "Description": "Maximum pressure that the object is manufactured to withstand."
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal air flow rate."
              },
              "NumberofBlades": {
                "type": "integer",
                "Description": "Number of blades."
              },
              "OpenPressureDrop": {
                "type": "real",
                "Description": "Total pressure drop across damper."
              },
              "Operation": {
                "type": "PEnum_DamperOperation",
                "Description": "The operational mechanism for the damper operation.",
                "values": [
                  "AUTOMATIC",
                  "MANUAL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Orientation": {
                "type": "PEnum_DamperOrientation",
                "Description": "The intended orientation for the damper as specified by the manufacturer.",
                "values": [
                  "HORIZONTAL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VERTICAL",
                  "VERTICALORHORIZONTAL"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TemperatureRating": {
                "type": "real",
                "Description": "Temperature rating."
              }
            }
          },
          "Pset_DamperTypeControlDamper": {
            "Properties": {
              "ControlDamperOperation": {
                "type": "PEnum_ControlDamperOperation",
                "Description": "The inherent characteristic of the control damper operation.",
                "values": [
                  "EXPONENTIAL",
                  "LINEAR",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_DamperTypeFireDamper": {
            "Properties": {
              "ActuationType": {
                "type": "PEnum_FireDamperActuationType",
                "Description": "Enumeration that identifies the different types of dampers.",
                "values": [
                  "GRAVITY",
                  "NOTKNOWN",
                  "OTHER",
                  "SPRING",
                  "UNSET"
                ]
              },
              "ClosureRatingEnum": {
                "type": "PEnum_FireDamperClosureRating",
                "Description": "Enumeration that identifies the closure rating for the damper.",
                "values": [
                  "DYNAMIC",
                  "NOTKNOWN",
                  "OTHER",
                  "STATIC",
                  "UNSET"
                ]
              },
              "FireResistanceRating": {
                "type": "string",
                "Description": "Measure of the fire resistance rating in hours (e.g., 1.5 hours, 2 hours, etc.)."
              },
              "FusibleLinkTemperature": {
                "type": "real",
                "Description": "The temperature that the fusible link melts."
              }
            }
          },
          "Pset_DamperTypeFireSmokeDamper": {
            "Properties": {
              "ActuationType": {
                "type": "PEnum_FireDamperActuationType",
                "Description": "Enumeration that identifies the different types of dampers.",
                "values": [
                  "GRAVITY",
                  "NOTKNOWN",
                  "OTHER",
                  "SPRING",
                  "UNSET"
                ]
              },
              "ClosureRatingEnum": {
                "type": "PEnum_FireDamperClosureRating",
                "Description": "Enumeration that identifies the closure rating for the damper.",
                "values": [
                  "DYNAMIC",
                  "NOTKNOWN",
                  "OTHER",
                  "STATIC",
                  "UNSET"
                ]
              },
              "DamperControlType": {
                "type": "string",
                "Description": "The type of control used to operate the damper (e.g., Open/Closed Indicator, Resettable Temperature Sensor, Temperature Override, etc.)."
              },
              "FireResistanceRating": {
                "type": "string",
                "Description": "Measure of the fire resistance rating in hours (e.g., 1.5 hours, 2 hours, etc.)."
              },
              "FusibleLinkTemperature": {
                "type": "real",
                "Description": "The temperature that the fusible link melts."
              }
            }
          },
          "Pset_DamperTypeSmokeDamper": {
            "Properties": {
              "ControlType": {
                "type": "string",
                "Description": "The type controller, signal modification effected and applicable ports"
              }
            }
          },
          "Qto_DamperBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcDuctFitting": {
        "Parent": "IfcFlowFitting",
        "Description": "A duct fitting is a junction or transition in a ducted flow distribution system or used to connect duct segments, resulting in changes in flow characteristics to the fluid such as direction and flow rate.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_DuctFittingOccurrence": {
            "Properties": {
              "Colour": {
                "type": "string",
                "Description": "Stratum colour"
              },
              "HasLiner": {
                "type": "boolean",
                "Description": "TRUE if the fitting has interior duct insulating lining, FALSE if it does not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InteriorRoughnessCoefficient": {
                "type": "real",
                "Description": "The interior roughness of the material of the object."
              }
            }
          },
          "Pset_DuctFittingTypeCommon": {
            "Properties": {
              "PressureClass": {
                "type": "real",
                "Description": "Nominal pressure rating of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_DuctFittingBaseQuantities": {
            "Properties": {
              "GrossCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section of the object."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          }
        }
      },
      "IfcDuctFittingType": {
        "Parent": "IfcFlowFittingType",
        "Description": "The flow fitting type IfcDuctFittingType defines commonly shared information for occurrences of duct fittings. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a duct fitting type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDuctFittingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDuctFittingType are represented by instances of IfcDuctFitting. Refer to the documentation at IfcDuctFitting for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_DuctFittingTypeCommon": {
            "Properties": {
              "PressureClass": {
                "type": "real",
                "Description": "Nominal pressure rating of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FittingBend": {
            "Properties": {
              "BendAngle": {
                "type": "real",
                "Description": "The change of direction of flow."
              },
              "BendRadius": {
                "type": "real",
                "Description": "The radius of bending if circular arc or zero if sharp bend."
              }
            }
          },
          "Pset_FittingJunction": {
            "Properties": {
              "JunctionLeftAngle": {
                "type": "real",
                "Description": "The change of direction of flow for the left junction."
              },
              "JunctionLeftRadius": {
                "type": "real",
                "Description": "The radius of bending for the left junction."
              },
              "JunctionRightAngle": {
                "type": "real",
                "Description": "The change of direction of flow for the right junction where 0 indicates straight segment."
              },
              "JunctionRightRadius": {
                "type": "real",
                "Description": "The radius of bending for the right junction where 0 indicates sharp bend."
              },
              "JunctionType": {
                "type": "PEnum_FittingJunctionType",
                "Description": "The type of junction. TEE=3 ports, CROSS = 4 ports.",
                "values": [
                  "CROSS",
                  "NOTKNOWN",
                  "OTHER",
                  "TEE",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FittingTransition": {
            "Properties": {
              "EccentricityInY": {
                "type": "real",
                "Description": "Distance in y direction between the two points (or vertex points) engaged in the point connection."
              },
              "EccentricityInZ": {
                "type": "real",
                "Description": "Distance in z direction between the two points (or vertex points) engaged in the point connection."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Qto_DuctFittingBaseQuantities": {
            "Properties": {
              "GrossCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section of the object."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          }
        }
      },
      "IfcDuctSegment": {
        "Parent": "IfcFlowSegment",
        "Description": "A duct segment is used to typically join two sections of duct network.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_DuctSegmentOccurrence": {
            "Properties": {
              "Colour": {
                "type": "string",
                "Description": "Stratum colour"
              },
              "HasLiner": {
                "type": "boolean",
                "Description": "TRUE if the fitting has interior duct insulating lining, FALSE if it does not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InteriorRoughnessCoefficient": {
                "type": "real",
                "Description": "The interior roughness of the material of the object."
              }
            }
          },
          "Pset_DuctSegmentTypeCommon": {
            "Properties": {
              "CrossSectionShape": {
                "type": "PEnum_DuctSegmentShape",
                "Description": "Cross sectional shape. Note that this shape is uniform throughout the length of the segment. For nonuniform shapes, a transition fitting should be used instead.",
                "values": [
                  "FLATOVAL",
                  "NOTKNOWN",
                  "OTHER",
                  "RECTANGULAR",
                  "ROUND",
                  "UNSET"
                ]
              },
              "LongitudinalSeam": {
                "type": "string",
                "Description": "The type of seam to be used along the longitudinal axis of the duct segment."
              },
              "NominalDiameterOrWidth": {
                "type": "real",
                "Description": "The nominal diameter or width of the duct segment."
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Reinforcement": {
                "type": "string",
                "Description": "The type of reinforcement, if any, used for the duct segment."
              },
              "ReinforcementSpacing": {
                "type": "real",
                "Description": "The spacing between reinforcing elements."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WorkingPressure": {
                "type": "real",
                "Description": "Working pressure."
              }
            }
          },
          "Qto_DuctSegmentBaseQuantities": {
            "Properties": {
              "GrossCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section of the object."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          }
        }
      },
      "IfcDuctSegmentType": {
        "Parent": "IfcFlowSegmentType",
        "Description": "The flow segment type IfcDuctSegmentType defines commonly shared information for occurrences of duct segments. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a duct segment type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDuctSegmentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDuctSegmentType are represented by instances of IfcDuctSegment. Refer to the documentation at IfcDuctSegment for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_DuctSegmentTypeCommon": {
            "Properties": {
              "CrossSectionShape": {
                "type": "PEnum_DuctSegmentShape",
                "Description": "Cross sectional shape. Note that this shape is uniform throughout the length of the segment. For nonuniform shapes, a transition fitting should be used instead.",
                "values": [
                  "FLATOVAL",
                  "NOTKNOWN",
                  "OTHER",
                  "RECTANGULAR",
                  "ROUND",
                  "UNSET"
                ]
              },
              "LongitudinalSeam": {
                "type": "string",
                "Description": "The type of seam to be used along the longitudinal axis of the duct segment."
              },
              "NominalDiameterOrWidth": {
                "type": "real",
                "Description": "The nominal diameter or width of the duct segment."
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Reinforcement": {
                "type": "string",
                "Description": "The type of reinforcement, if any, used for the duct segment."
              },
              "ReinforcementSpacing": {
                "type": "real",
                "Description": "The spacing between reinforcing elements."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WorkingPressure": {
                "type": "real",
                "Description": "Working pressure."
              }
            }
          },
          "Qto_DuctSegmentBaseQuantities": {
            "Properties": {
              "GrossCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section of the object."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          }
        }
      },
      "IfcDuctSilencer": {
        "Parent": "IfcFlowTreatmentDevice",
        "Description": "A duct silencer is a device that is typically installed inside a duct distribution system for the purpose of reducing the noise levels from air movement, fan noise, etc. in the adjacent space or downstream of the duct silencer device.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_DuctSilencerTypeCommon": {
            "Properties": {
              "HasExteriorInsulation": {
                "type": "boolean",
                "Description": "TRUE if the silencer has exterior insulation. FALSE if it does not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HydraulicDiameter": {
                "type": "real",
                "Description": "Hydraulic diameter."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          },
          "Qto_DuctSilencerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcDuctSilencerType": {
        "Parent": "IfcFlowTreatmentDeviceType",
        "Description": "The flow treatment device type IfcDuctSilencerType defines commonly shared information for occurrences of duct silencers. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a duct silencer type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDuctSilencerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDuctSilencerType are represented by instances of IfcDuctSilencer. Refer to the documentation at IfcDuctSilencer for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_DuctSilencerTypeCommon": {
            "Properties": {
              "HasExteriorInsulation": {
                "type": "boolean",
                "Description": "TRUE if the silencer has exterior insulation. FALSE if it does not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HydraulicDiameter": {
                "type": "real",
                "Description": "Hydraulic diameter."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          },
          "Qto_DuctSilencerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcEngine": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An engine is a device that converts fuel into mechanical energy through combustion.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_EngineTypeCommon": {
            "Properties": {
              "EnergySource": {
                "type": "PEnum_EngineEnergySource",
                "Description": "Enumeration defining the energy source or fuel cumbusted.",
                "values": [
                  "BIFUEL",
                  "BIODIESEL",
                  "DIESEL",
                  "GASOLINE",
                  "HYDROGEN",
                  "NATURALGAS",
                  "OTHER",
                  "PROPANE",
                  "SEWAGEGAS",
                  "UNKNOWN",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcEngineType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcEngineType defines commonly shared information for occurrences of engines. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a engine type specification indicating the specific product information that is common to all occurrences of that product type. The IfcEngineType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcEngineType are represented by instances of IfcEngine. Refer to the documentation at IfcEngine for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_EngineTypeCommon": {
            "Properties": {
              "EnergySource": {
                "type": "PEnum_EngineEnergySource",
                "Description": "Enumeration defining the energy source or fuel cumbusted.",
                "values": [
                  "BIFUEL",
                  "BIODIESEL",
                  "DIESEL",
                  "GASOLINE",
                  "HYDROGEN",
                  "NATURALGAS",
                  "OTHER",
                  "PROPANE",
                  "SEWAGEGAS",
                  "UNKNOWN",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcEvaporativeCooler": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An evaporative cooler is a device that cools air by saturating it with water vapor.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_EvaporativeCoolerTypeCommon": {
            "Properties": {
              "FlowArrangement": {
                "type": "PEnum_EvaporativeCoolerFlowArrangement",
                "Description": "CounterFlow: Air and water flow enter in different directions.\nCrossFlow: Air and water flow are perpendicular.\nParallelFlow: air and water flow enter in same directions.",
                "values": [
                  "COUNTERFLOW",
                  "CROSSFLOW",
                  "NOTKNOWN",
                  "OTHER",
                  "PARALLELFLOW",
                  "UNSET"
                ]
              },
              "HeatExchangeArea": {
                "type": "real",
                "Description": "Heat exchange area."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WaterRequirement": {
                "type": "real",
                "Description": "Make-up water requirement."
              }
            }
          },
          "Qto_EvaporativeCoolerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcEvaporativeCoolerType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcEvaporativeCoolerType defines commonly shared information for occurrences of evaporative coolers. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a evaporative cooler type specification indicating the specific product information that is common to all occurrences of that product type. The IfcEvaporativeCoolerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcEvaporativeCoolerType are represented by instances of IfcEvaporativeCooler. Refer to the documentation at IfcEvaporativeCooler for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_EvaporativeCoolerTypeCommon": {
            "Properties": {
              "FlowArrangement": {
                "type": "PEnum_EvaporativeCoolerFlowArrangement",
                "Description": "CounterFlow: Air and water flow enter in different directions.\nCrossFlow: Air and water flow are perpendicular.\nParallelFlow: air and water flow enter in same directions.",
                "values": [
                  "COUNTERFLOW",
                  "CROSSFLOW",
                  "NOTKNOWN",
                  "OTHER",
                  "PARALLELFLOW",
                  "UNSET"
                ]
              },
              "HeatExchangeArea": {
                "type": "real",
                "Description": "Heat exchange area."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WaterRequirement": {
                "type": "real",
                "Description": "Make-up water requirement."
              }
            }
          },
          "Qto_EvaporativeCoolerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcEvaporator": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An evaporator is a device in which a liquid refrigerent is vaporized and absorbs heat from the surrounding fluid.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_EvaporatorTypeCommon": {
            "Properties": {
              "EvaporatorCoolant": {
                "type": "PEnum_EvaporatorCoolant",
                "Description": "The fluid used for the coolant in the evaporator.",
                "values": [
                  "BRINE",
                  "GLYCOL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WATER"
                ]
              },
              "EvaporatorMediumType": {
                "type": "PEnum_EvaporatorMediumType",
                "Description": "ColdLiquid: Evaporator is using liquid type of fluid to exchange heat with refrigerant.\nColdAir: Evaporator is using air to exchange heat with refrigerant.",
                "values": [
                  "COLDAIR",
                  "COLDLIQUID",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ExternalSurfaceArea": {
                "type": "real",
                "Description": "External surface area (both primary and secondary area)."
              },
              "InternalRefrigerantVolume": {
                "type": "real",
                "Description": "Internal volume of object (refrigerant side)."
              },
              "InternalSurfaceArea": {
                "type": "real",
                "Description": "Internal surface area."
              },
              "InternalWaterVolume": {
                "type": "real",
                "Description": "Internal volume of object (water side)."
              },
              "NominalHeatTransferArea": {
                "type": "real",
                "Description": "Nominal heat transfer surface area associated with nominal overall heat transfer coefficient."
              },
              "NominalHeatTransferCoefficient": {
                "type": "real",
                "Description": "Nominal overall heat transfer coefficient associated with nominal heat transfer area."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RefrigerantClass": {
                "type": "PEnum_RefrigerantClass",
                "Description": "Refrigerant class used by the object.\nCFC: Chlorofluorocarbons.\nHCFC: Hydrochlorofluorocarbons.\nHFC: Hydrofluorocarbons.",
                "values": [
                  "AMMONIA",
                  "CFC",
                  "CO2",
                  "H2O",
                  "HCFC",
                  "HFC",
                  "HYDROCARBONS",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_EvaporatorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcEvaporatorType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcEvaporatorType defines commonly shared information for occurrences of evaporators. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a evaporator type specification indicating the specific product information that is common to all occurrences of that product type. The IfcEvaporatorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcEvaporatorType are represented by instances of IfcEvaporator. Refer to the documentation at IfcEvaporator for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_EvaporatorTypeCommon": {
            "Properties": {
              "EvaporatorCoolant": {
                "type": "PEnum_EvaporatorCoolant",
                "Description": "The fluid used for the coolant in the evaporator.",
                "values": [
                  "BRINE",
                  "GLYCOL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WATER"
                ]
              },
              "EvaporatorMediumType": {
                "type": "PEnum_EvaporatorMediumType",
                "Description": "ColdLiquid: Evaporator is using liquid type of fluid to exchange heat with refrigerant.\nColdAir: Evaporator is using air to exchange heat with refrigerant.",
                "values": [
                  "COLDAIR",
                  "COLDLIQUID",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ExternalSurfaceArea": {
                "type": "real",
                "Description": "External surface area (both primary and secondary area)."
              },
              "InternalRefrigerantVolume": {
                "type": "real",
                "Description": "Internal volume of object (refrigerant side)."
              },
              "InternalSurfaceArea": {
                "type": "real",
                "Description": "Internal surface area."
              },
              "InternalWaterVolume": {
                "type": "real",
                "Description": "Internal volume of object (water side)."
              },
              "NominalHeatTransferArea": {
                "type": "real",
                "Description": "Nominal heat transfer surface area associated with nominal overall heat transfer coefficient."
              },
              "NominalHeatTransferCoefficient": {
                "type": "real",
                "Description": "Nominal overall heat transfer coefficient associated with nominal heat transfer area."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RefrigerantClass": {
                "type": "PEnum_RefrigerantClass",
                "Description": "Refrigerant class used by the object.\nCFC: Chlorofluorocarbons.\nHCFC: Hydrochlorofluorocarbons.\nHFC: Hydrofluorocarbons.",
                "values": [
                  "AMMONIA",
                  "CFC",
                  "CO2",
                  "H2O",
                  "HCFC",
                  "HFC",
                  "HYDROCARBONS",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_EvaporatorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcFan": {
        "Parent": "IfcFlowMovingDevice",
        "Description": "A fan is a device which imparts mechanical work on a gas. A typical usage of a fan is to induce airflow in a building services air distribution system.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_FanOccurrence": {
            "Properties": {
              "ApplicationOfFan": {
                "type": "PEnum_FanApplicationType",
                "Description": "The functional application of the fan.SupplyAir: Supply air fan.\nReturnAir: Return air fan.\nExhaustAir: Exhaust air fan.\nOther: Other type of application not defined above.",
                "values": [
                  "COOLINGTOWER",
                  "EXHAUSTAIR",
                  "NOTKNOWN",
                  "OTHER",
                  "RETURNAIR",
                  "SUPPLYAIR",
                  "UNSET"
                ]
              },
              "CoilPosition": {
                "type": "PEnum_FanCoilPosition",
                "Description": "Defines the relationship between a fan and a coil.DrawThrough: Fan located downstream of the coil.\nBlowThrough: Fan located upstream of the coil.",
                "values": [
                  "BLOWTHROUGH",
                  "DRAWTHROUGH",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "DischargeType": {
                "type": "PEnum_FanDischargeType",
                "Description": "Defines the type of connection at the fan discharge.Duct: Discharge into ductwork.\nScreen: Discharge into screen outlet.\nLouver: Discharge into a louver.\nDamper: Discharge into a damper.",
                "values": [
                  "DAMPER",
                  "DUCT",
                  "LOUVER",
                  "NOTKNOWN",
                  "OTHER",
                  "SCREEN",
                  "UNSET"
                ]
              },
              "FanMountingType": {
                "type": "PEnum_FanMountingType",
                "Description": "Defines the method of mounting the fan in the building.",
                "values": [
                  "CONCRETEPAD",
                  "DUCTMOUNTED",
                  "FIELDERECTEDCURB",
                  "MANUFACTUREDCURB",
                  "NOTKNOWN",
                  "OTHER",
                  "SUSPENDED",
                  "UNSET",
                  "WALLMOUNTED"
                ]
              },
              "FractionOfMotorHeatToAirStream": {
                "type": "real",
                "Description": "Fraction of the motor heat released into the fluid flow."
              },
              "ImpellerDiameter": {
                "type": "real",
                "Description": "Diameter of object - used to scale performance of geometrically similar objects."
              },
              "MotorPosition": {
                "type": "PEnum_FanMotorPosition",
                "Description": "Defines the location of the motor relative to the air stream.InAirStream: Fan motor is in the air stream.\nOutOfAirStream: Fan motor is out of the air stream.",
                "values": [
                  "INAIRSTREAM",
                  "NOTKNOWN",
                  "OTHER",
                  "OUTOFAIRSTREAM",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FanTypeCommon": {
            "Properties": {
              "CapacityControlType": {
                "type": "PEnum_FanCapacityControlType",
                "Description": "InletVane: Control by adjusting inlet vane.\nVariableSpeedDrive: Control by variable speed drive.\nBladePitchAngle: Control by adjusting blade pitch angle.\nTwoSpeed: Control by switch between high and low speed.\nDischargeDamper: Control by modulating discharge damper.",
                "values": [
                  "BLADEPITCHANGLE",
                  "DISCHARGEDAMPER",
                  "INLETVANE",
                  "NOTKNOWN",
                  "OTHER",
                  "TWOSPEED",
                  "UNSET",
                  "VARIABLESPEEDDRIVE"
                ]
              },
              "MotorDriveType": {
                "type": "PEnum_FanMotorConnectionType",
                "Description": "Motor drive type:\nDIRECTDRIVE: Direct drive.\nBELTDRIVE: Belt drive.\nCOUPLING: Coupling.\nOTHER: Other type of motor drive.\nUNKNOWN: Unknown motor drive type.",
                "values": [
                  "BELTDRIVE",
                  "COUPLING",
                  "DIRECTDRIVE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal air flow rate."
              },
              "NominalPowerRate": {
                "type": "real",
                "Description": "Nominal fan power rate."
              },
              "NominalRotationSpeed": {
                "type": "real",
                "Description": "Rotational speed of the object under nominal conditions."
              },
              "NominalStaticPressure": {
                "type": "real",
                "Description": "The static pressure within the air stream that the fan must overcome to insure designed circulation of air."
              },
              "NominalTotalPressure": {
                "type": "real",
                "Description": "Nominal total pressure rise across the fan."
              },
              "OperationalCriteria": {
                "type": "real",
                "Description": "Time of operation at maximum operational ambient air temperature."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_FanBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcFanType": {
        "Parent": "IfcFlowMovingDeviceType",
        "Description": "The flow moving device type IfcFanType defines commonly shared information for occurrences of fans. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a fan type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFanType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFanType are represented by instances of IfcFan. Refer to the documentation at IfcFan for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_FanCentrifugal": {
            "Properties": {
              "DirectionOfRotation": {
                "type": "PEnum_CentrifugalFanRotation",
                "Description": "The direction of the centrifugal fan wheel rotation when viewed from the drive side of the fan.CLOCKWISE: Clockwise.\nCOUNTERCLOCKWISE: Counter-clockwise.\nOTHER: Other type of fan rotation.",
                "values": [
                  "CLOCKWISE",
                  "COUNTERCLOCKWISE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "DischargePosition": {
                "type": "PEnum_CentrifugalFanDischargePosition",
                "Description": "Centrifugal fan discharge position.TOPHORIZONTAL: Top horizontal discharge.\nTOPANGULARDOWN: Top angular down discharge.\nDOWNBLAST: Downblast discharge.\nBOTTOMANGULARDOWN: Bottom angular down discharge.\nBOTTOMHORIZONTAL: Bottom horizontal discharge.\nBOTTOMANGULARUP: Bottom angular up discharge.\nUPBLAST: Upblast discharge.\nTOPANGULARUP: Top angular up discharge.\nOTHER: Other type of fan arrangement.",
                "values": [
                  "BOTTOMANGULARDOWN",
                  "BOTTOMANGULARUP",
                  "BOTTOMHORIZONTAL",
                  "DOWNBLAST",
                  "NOTKNOWN",
                  "OTHER",
                  "TOPANGULARDOWN",
                  "TOPANGULARUP",
                  "TOPHORIZONTAL",
                  "UNSET",
                  "UPBLAST"
                ]
              },
              "FanArrangement": {
                "type": "PEnum_CentrifugalFanArrangement",
                "Description": "Defines the fan and motor drive arrangement as defined by AMCA.ARRANGEMENT1: Arrangement 1.\nARRANGEMENT2: Arrangement 2.\nARRANGEMENT3: Arrangement 3.\nARRANGEMENT4: Arrangement 4.\nARRANGEMENT7: Arrangement 7.\nARRANGEMENT8: Arrangement 8.\nARRANGEMENT9: Arrangement 9.\nARRANGEMENT10: Arrangement 10.\nOTHER: Other type of fan drive arrangement.",
                "values": [
                  "ARRANGEMENT1",
                  "ARRANGEMENT10",
                  "ARRANGEMENT2",
                  "ARRANGEMENT3",
                  "ARRANGEMENT4",
                  "ARRANGEMENT7",
                  "ARRANGEMENT8",
                  "ARRANGEMENT9",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FanTypeCommon": {
            "Properties": {
              "CapacityControlType": {
                "type": "PEnum_FanCapacityControlType",
                "Description": "InletVane: Control by adjusting inlet vane.\nVariableSpeedDrive: Control by variable speed drive.\nBladePitchAngle: Control by adjusting blade pitch angle.\nTwoSpeed: Control by switch between high and low speed.\nDischargeDamper: Control by modulating discharge damper.",
                "values": [
                  "BLADEPITCHANGLE",
                  "DISCHARGEDAMPER",
                  "INLETVANE",
                  "NOTKNOWN",
                  "OTHER",
                  "TWOSPEED",
                  "UNSET",
                  "VARIABLESPEEDDRIVE"
                ]
              },
              "MotorDriveType": {
                "type": "PEnum_FanMotorConnectionType",
                "Description": "Motor drive type:\nDIRECTDRIVE: Direct drive.\nBELTDRIVE: Belt drive.\nCOUPLING: Coupling.\nOTHER: Other type of motor drive.\nUNKNOWN: Unknown motor drive type.",
                "values": [
                  "BELTDRIVE",
                  "COUPLING",
                  "DIRECTDRIVE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal air flow rate."
              },
              "NominalPowerRate": {
                "type": "real",
                "Description": "Nominal fan power rate."
              },
              "NominalRotationSpeed": {
                "type": "real",
                "Description": "Rotational speed of the object under nominal conditions."
              },
              "NominalStaticPressure": {
                "type": "real",
                "Description": "The static pressure within the air stream that the fan must overcome to insure designed circulation of air."
              },
              "NominalTotalPressure": {
                "type": "real",
                "Description": "Nominal total pressure rise across the fan."
              },
              "OperationalCriteria": {
                "type": "real",
                "Description": "Time of operation at maximum operational ambient air temperature."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_FanBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcFilter": {
        "Parent": "IfcFlowTreatmentDevice",
        "Description": "A filter is an apparatus used to remove particulate or gaseous matter from fluids and gases.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_FilterTypeCommon": {
            "Properties": {
              "FinalResistance": {
                "type": "real",
                "Description": "Filter fluid resistance when replacement is required (i.e., Pressure drop at the maximum air flowrate across the filter when the filter needs replacement per ASHRAE Standard 52.1)."
              },
              "InitialResistance": {
                "type": "real",
                "Description": "Initial new filter fluid resistance (i.e., pressure drop at the maximum air flowrate across the filter when the filter is new per ASHRAE Standard 52.1)."
              },
              "NominalFilterFaceVelocity": {
                "type": "real",
                "Description": "Filter face velocity."
              },
              "NominalFlowrate": {
                "type": "real",
                "Description": "Nominal fluid flow rate through the filter."
              },
              "NominalMediaSurfaceVelocity": {
                "type": "real",
                "Description": "Average fluid velocity at the media surface."
              },
              "NominalParticleGeometricMeanDiameter": {
                "type": "real",
                "Description": "Particle geometric mean diameter associated with nominal efficiency."
              },
              "NominalParticleGeometricStandardDeviation": {
                "type": "real",
                "Description": "Particle geometric standard deviation associated with nominal efficiency."
              },
              "NominalPressureDrop": {
                "type": "real",
                "Description": "Total pressure drop across the filter."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          },
          "Qto_FilterBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcFilterType": {
        "Parent": "IfcFlowTreatmentDeviceType",
        "Description": "The flow treatment device type IfcFilterType defines commonly shared information for occurrences of filters. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a filter type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFilterType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFilterType are represented by instances of IfcFilter. Refer to the documentation at IfcFilter for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_FilterTypeAirParticleFilter": {
            "Properties": {
              "AirParticleFilterType": {
                "type": "PEnum_FilterAirParticleFilterType",
                "Description": "A panel dry type extended surface filter is a dry-type air filter with random fiber mats or blankets in the forms of pockets, V-shaped or radial pleats, and include the following:CoarseFilter: Filter with a efficiency lower than 30% for atmosphere dust-spot.\nCoarseMetalScreen: Filter made of metal screen.\nCoarseCellFoams: Filter made of cell foams.\nCoarseSpunGlass: Filter made of spun glass.\nMediumFilter: Filter with an efficiency between 30-98% for atmosphere dust-spot.\nMediumElectretFilter: Filter with fine electret synthetic fibers.\nMediumNaturalFiberFilter: Filter with natural fibers.\nHEPAFilter: High efficiency particulate air filter.\nULPAFilter: Ultra low penetration air filter.\nMembraneFilters: Filter made of membrane for certain pore diameters in flat sheet and pleated form.\nA renewable media with a moving curtain viscous filter are random-fiber media coated with viscous substance in roll form or curtain where fresh media is fed across the face of the filter and the dirty media is rewound onto a roll at the bottom or to into a reservoir:\nRollForm: Viscous filter used in roll form.\nAdhesiveReservoir: Viscous filter used in moving curtain form.\nA renewable moving curtain dry media filter is a random-fiber dry media of relatively high porosity used in moving-curtain(roll) filters.\nAn electrical filter uses electrostatic precipitation to remove and collect particulate contaminants.",
                "values": [
                  "ADHESIVERESERVOIR",
                  "COARSECELLFOAMS",
                  "COARSEMETALSCREEN",
                  "COARSESPUNGLASS",
                  "ELECTRICALFILTER",
                  "HEPAFILTER",
                  "MEDIUMELECTRETFILTER",
                  "MEDIUMNATURALFIBERFILTER",
                  "MEMBRANEFILTERS",
                  "NOTKNOWN",
                  "OTHER",
                  "RENEWABLEMOVINGCURTIANDRYMEDIAFILTER",
                  "ROLLFORM",
                  "ULPAFILTER",
                  "UNSET"
                ]
              },
              "DustHoldingCapacity": {
                "type": "real",
                "Description": "Maximum filter dust holding capacity."
              },
              "FaceSurfaceArea": {
                "type": "real",
                "Description": "Face area of filter frame."
              },
              "MediaExtendedArea": {
                "type": "real",
                "Description": "Total extended media area."
              },
              "NominalCountedEfficiency": {
                "type": "real",
                "Description": "Nominal filter efficiency based the particle count concentration before and after the filter against particles with a certain size distribution."
              },
              "NominalWeightedEfficiency": {
                "type": "real",
                "Description": "Nominal filter efficiency based the particle weight concentration before and after the filter against particles with a certain size distribution."
              },
              "SeparationType": {
                "type": "PEnum_FilterAirParticleFilterSeparationType",
                "Description": "Air particulate filter media separation type.",
                "values": [
                  "BAG",
                  "NOTKNOWN",
                  "OTHER",
                  "PLEAT",
                  "TREADSEPARATION",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FilterTypeCommon": {
            "Properties": {
              "FinalResistance": {
                "type": "real",
                "Description": "Filter fluid resistance when replacement is required (i.e., Pressure drop at the maximum air flowrate across the filter when the filter needs replacement per ASHRAE Standard 52.1)."
              },
              "InitialResistance": {
                "type": "real",
                "Description": "Initial new filter fluid resistance (i.e., pressure drop at the maximum air flowrate across the filter when the filter is new per ASHRAE Standard 52.1)."
              },
              "NominalFilterFaceVelocity": {
                "type": "real",
                "Description": "Filter face velocity."
              },
              "NominalFlowrate": {
                "type": "real",
                "Description": "Nominal fluid flow rate through the filter."
              },
              "NominalMediaSurfaceVelocity": {
                "type": "real",
                "Description": "Average fluid velocity at the media surface."
              },
              "NominalParticleGeometricMeanDiameter": {
                "type": "real",
                "Description": "Particle geometric mean diameter associated with nominal efficiency."
              },
              "NominalParticleGeometricStandardDeviation": {
                "type": "real",
                "Description": "Particle geometric standard deviation associated with nominal efficiency."
              },
              "NominalPressureDrop": {
                "type": "real",
                "Description": "Total pressure drop across the filter."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          },
          "Pset_FilterTypeCompressedAirFilter": {
            "Properties": {
              "AutomaticCondensateDischarge": {
                "type": "boolean",
                "Description": "Whether or not the condensing water or oil is discharged automatically from the filter.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "CloggingIndicator": {
                "type": "boolean",
                "Description": "Whether the filter has an indicator to display the degree of clogging of the filter.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "CompressedAirFilterType": {
                "type": "PEnum_CompressedAirFilterType",
                "Description": "ACTIVATEDCARBON: absorbs oil vapor and odor; PARTICLE_FILTER: used to absorb solid particles of medium size; COALESCENSE_FILTER: used to absorb fine solid, oil, and water particles, also called micro filter",
                "values": [
                  "ACTIVATEDCARBON",
                  "COALESCENSE_FILTER",
                  "NOTKNOWN",
                  "OTHER",
                  "PARTICLE_FILTER",
                  "UNSET"
                ]
              },
              "OperationPressureMax": {
                "type": "real",
                "Description": "Maximum pressure under normal operating conditions."
              }
            }
          },
          "Pset_FilterTypeWaterFilter": {
            "Properties": {
              "WaterFilterType": {
                "type": "PEnum_FilterWaterFilterType",
                "Description": "Further qualifies the type of water filter.  Filtration removes undissolved matter; Purification removes dissolved matter; Softening replaces dissolved matter.",
                "values": [
                  "FILTRATION_DIATOMACEOUSEARTH",
                  "FILTRATION_SAND",
                  "NOTKNOWN",
                  "OTHER",
                  "PURIFICATION_DEIONIZING",
                  "PURIFICATION_REVERSEOSMOSIS",
                  "SOFTENING_ZEOLITE",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_FilterBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcFlowMeter": {
        "Parent": "IfcFlowController",
        "Description": "A flow meter is a device that is used to measure the flow rate in a system.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_FlowMeterOccurrence": {
            "Properties": {
              "FlowMeterOurpose": {
                "type": "PEnum_FlowMeterPurpose",
                "Description": "Enumeration defining the purpose of the flow meter occurrence.",
                "values": [
                  "MASTER",
                  "NOTKNOWN",
                  "OTHER",
                  "SUBMASTER",
                  "SUBMETER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FlowMeterTypeCommon": {
            "Properties": {
              "ReadOutType": {
                "type": "PEnum_MeterReadOutType",
                "Description": "Indication of the form that readout from the meter takes. In the case of a dial read out, this may comprise multiple dials that give a cumulative reading and/or a mechanical odometer.",
                "values": [
                  "DIAL",
                  "DIGITAL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RemoteReading": {
                "type": "boolean",
                "Description": "Indicates whether the meter has a connection for remote reading through connection of a communication device (set TRUE) or not (set FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_FlowMeterBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcFlowMeterType": {
        "Parent": "IfcFlowControllerType",
        "Description": "The flow controller type IfcFlowMeterType defines commonly shared information for occurrences of flow meters. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a flow meter type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFlowMeterType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFlowMeterType are represented by instances of IfcFlowMeter. Refer to the documentation at IfcFlowMeter for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_FlowMeterTypeCommon": {
            "Properties": {
              "ReadOutType": {
                "type": "PEnum_MeterReadOutType",
                "Description": "Indication of the form that readout from the meter takes. In the case of a dial read out, this may comprise multiple dials that give a cumulative reading and/or a mechanical odometer.",
                "values": [
                  "DIAL",
                  "DIGITAL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RemoteReading": {
                "type": "boolean",
                "Description": "Indicates whether the meter has a connection for remote reading through connection of a communication device (set TRUE) or not (set FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FlowMeterTypeEnergyMeter": {
            "Properties": {
              "MaximumCurrent": {
                "type": "real",
                "Description": "The maximum allowed current that a device is certified to handle."
              },
              "MultipleTarriff": {
                "type": "boolean",
                "Description": "Indicates whether meter has built-in support for multiple tarriffs (variable energy cost rates).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              }
            }
          },
          "Pset_FlowMeterTypeGasMeter": {
            "Properties": {
              "ConnectionSize": {
                "type": "real",
                "Description": "The connection size of the object."
              },
              "GasType": {
                "type": "PEnum_GasType",
                "Description": "Defines the types of gas that may be specified.",
                "values": [
                  "COMMERCIALBUTANE",
                  "COMMERCIALPROPANE",
                  "LIQUEFIEDPETROLEUMGAS",
                  "NATURALGAS",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "MaximumFlowRate": {
                "type": "real",
                "Description": "Maximum rate of flow which the meter is expected to pass."
              },
              "MaximumPressureLoss": {
                "type": "real",
                "Description": "Pressure loss expected across the meter under conditions of maximum flow."
              }
            }
          },
          "Pset_FlowMeterTypeOilMeter": {
            "Properties": {
              "ConnectionSize": {
                "type": "real",
                "Description": "The connection size of the object."
              },
              "MaximumFlowRate": {
                "type": "real",
                "Description": "Maximum rate of flow which the meter is expected to pass."
              }
            }
          },
          "Pset_FlowMeterTypeWaterMeter": {
            "Properties": {
              "BackflowPreventerType": {
                "type": "PEnum_BackflowPreventerType",
                "Description": "Identifies the type of backflow preventer installed to prevent the backflow of contaminated or polluted water from an irrigation/reticulation system to a potable water supply.",
                "values": [
                  "ANTISIPHONVALVE",
                  "ATMOSPHERICVACUUMBREAKER",
                  "DOUBLECHECKBACKFLOWPREVENTER",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "PRESSUREVACUUMBREAKER",
                  "REDUCEDPRESSUREBACKFLOWPREVENTER",
                  "UNSET"
                ]
              },
              "ConnectionSize": {
                "type": "real",
                "Description": "The connection size of the object."
              },
              "MaximumFlowRate": {
                "type": "real",
                "Description": "Maximum rate of flow which the meter is expected to pass."
              },
              "MaximumPressureLoss": {
                "type": "real",
                "Description": "Pressure loss expected across the meter under conditions of maximum flow."
              },
              "Type": {
                "type": "PEnum_WaterMeterType",
                "Description": "A symbol designator with content according to local standards, e.g.  'BycycleCrossing', 'RoadStuds', 'SpeedBump', 'TransverseBar', 'BusStop', 'Chevron', 'Hatched', 'KeepClear', 'BoxJunction', 'EmergencyExit', 'Intersection', 'Junction'",
                "values": [
                  "COMPOUND",
                  "INFERENTIAL",
                  "NOTKNOWN",
                  "OTHER",
                  "PISTON",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_FlowMeterBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcHeatExchanger": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A heat exchanger is a device used to provide heat transfer between non-mixing media such as plate and shell and tube heat exchangers.IfcHeatExchanger is commonly used on water-side distribution systems to recover energy from a liquid to another liquid (typically water-based), whereas IfcAirToAirHeatRecovery is commonly used on air-side distribution systems to recover energy from a gas to a gas (usually air).HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_HeatExchangerTypeCommon": {
            "Properties": {
              "FlowArrangement": {
                "type": "PEnum_HeatExchangerArrangement",
                "Description": "CounterFlow: Air and water flow enter in different directions.\nCrossFlow: Air and water flow are perpendicular.\nParallelFlow: air and water flow enter in same directions.",
                "values": [
                  "COUNTERFLOW",
                  "CROSSFLOW",
                  "MULTIPASS",
                  "NOTKNOWN",
                  "OTHER",
                  "PARALLELFLOW",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_HeatExchangerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcHeatExchangerType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcHeatExchangerType defines commonly shared information for occurrences of heat exchangers. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a heat exchanger type specification indicating the specific product information that is common to all occurrences of that product type. The IfcHeatExchangerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcHeatExchangerType are represented by instances of IfcHeatExchanger. Refer to the documentation at IfcHeatExchanger for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_HeatExchangerTypeCommon": {
            "Properties": {
              "FlowArrangement": {
                "type": "PEnum_HeatExchangerArrangement",
                "Description": "CounterFlow: Air and water flow enter in different directions.\nCrossFlow: Air and water flow are perpendicular.\nParallelFlow: air and water flow enter in same directions.",
                "values": [
                  "COUNTERFLOW",
                  "CROSSFLOW",
                  "MULTIPASS",
                  "NOTKNOWN",
                  "OTHER",
                  "PARALLELFLOW",
                  "UNSET"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_HeatExchangerTypePlate": {
            "Properties": {
              "NumberOfPlates": {
                "type": "integer",
                "Description": "Number of plates used by the plate heat exchanger."
              }
            }
          },
          "Qto_HeatExchangerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcHumidifier": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A humidifier is a device that adds moisture into the air.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_HumidifierTypeCommon": {
            "Properties": {
              "HumidifierApplication": {
                "type": "PEnum_HumidifierApplication",
                "Description": "Humidifier application.Fixed: Humidifier installed in a ducted flow distribution system.\nPortable: Humidifier is not installed in a ducted flow distribution system.",
                "values": [
                  "FIXED",
                  "NOTKNOWN",
                  "OTHER",
                  "PORTABLE",
                  "UNSET"
                ]
              },
              "InternalControl": {
                "type": "PEnum_HumidifierInternalControl",
                "Description": "Internal modulation control.",
                "values": [
                  "MODULATING",
                  "NONE",
                  "NOTKNOWN",
                  "ONOFF",
                  "OTHER",
                  "STEPPED",
                  "UNSET"
                ]
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal air flow rate."
              },
              "NominalMoistureGain": {
                "type": "real",
                "Description": "Nominal rate of water vapor added into the airstream."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WaterRequirement": {
                "type": "real",
                "Description": "Make-up water requirement."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          },
          "Qto_HumidifierBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcHumidifierType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcHumidifierType defines commonly shared information for occurrences of humidifiers. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a humidifier type specification indicating the specific product information that is common to all occurrences of that product type. The IfcHumidifierType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcHumidifierType are represented by instances of IfcHumidifier. Refer to the documentation at IfcHumidifier for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_HumidifierTypeCommon": {
            "Properties": {
              "HumidifierApplication": {
                "type": "PEnum_HumidifierApplication",
                "Description": "Humidifier application.Fixed: Humidifier installed in a ducted flow distribution system.\nPortable: Humidifier is not installed in a ducted flow distribution system.",
                "values": [
                  "FIXED",
                  "NOTKNOWN",
                  "OTHER",
                  "PORTABLE",
                  "UNSET"
                ]
              },
              "InternalControl": {
                "type": "PEnum_HumidifierInternalControl",
                "Description": "Internal modulation control.",
                "values": [
                  "MODULATING",
                  "NONE",
                  "NOTKNOWN",
                  "ONOFF",
                  "OTHER",
                  "STEPPED",
                  "UNSET"
                ]
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal air flow rate."
              },
              "NominalMoistureGain": {
                "type": "real",
                "Description": "Nominal rate of water vapor added into the airstream."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WaterRequirement": {
                "type": "real",
                "Description": "Make-up water requirement."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          },
          "Qto_HumidifierBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcMedicalDevice": {
        "Parent": "IfcFlowTerminal",
        "Description": "A medical device is attached to a medical piping system and operates upon medical gases to perform a specific function. Medical gases include medical air, medical vacuum, oxygen, carbon dioxide, nitrogen, and nitrous oxide.Outlets for medical gasses should use IfcValve with PredefinedType equal to GASTAP, containing an IfcDistributionPort with FlowDirection=SINK and PredefinedType equal to COMPRESSEDAIR, VACUUM, or CHEMICAL, and having property sets on the port further indicating the gas type and pressure. Tanks for medical gasses should use IfcTank with PredefinedType equal to PRESSUREVESSEL, containing an IfcDistributionPort with FlowDirection=SOURCE and PredefinedType=CHEMICAL, and having property sets on the port further indicating the gas type and pressure range.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_MedicalDeviceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcMedicalDeviceType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcMedicalDeviceType defines commonly shared information for occurrences of medical devices. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a medical device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcMedicalDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcMedicalDeviceType are represented by instances of IfcMedicalDevice. Refer to the documentation at IfcMedicalDevice for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_MedicalDeviceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcPipeFitting": {
        "Parent": "IfcFlowFitting",
        "Description": "A pipe fitting is a junction or transition in a piping flow distribution system used to connect pipe segments, resulting in changes in flow characteristics to the fluid such as direction or flow rate.Pipe fittings include elbows, junctions, manifolds, and plumbing boxes.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_PipeFittingOccurrence": {
            "Properties": {
              "Colour": {
                "type": "string",
                "Description": "Stratum colour"
              },
              "InteriorRoughnessCoefficient": {
                "type": "real",
                "Description": "The interior roughness of the material of the object."
              }
            }
          },
          "Pset_PipeFittingTypeCommon": {
            "Properties": {
              "FittingLossFactor": {
                "type": "real",
                "Description": "A factor that determines the pressure loss due to friction through the fitting."
              },
              "PressureClass": {
                "type": "real",
                "Description": "Nominal pressure rating of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_PipeFittingBaseQuantities": {
            "Properties": {
              "GrossCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section of the object."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          }
        }
      },
      "IfcPipeFittingType": {
        "Parent": "IfcFlowFittingType",
        "Description": "The flow fitting type IfcPipeFittingType defines commonly shared information for occurrences of pipe fittings. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a pipe fitting type specification indicating the specific product information that is common to all occurrences of that product type. The IfcPipeFittingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcPipeFittingType are represented by instances of IfcPipeFitting. Refer to the documentation at IfcPipeFitting for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_FittingBend": {
            "Properties": {
              "BendAngle": {
                "type": "real",
                "Description": "The change of direction of flow."
              },
              "BendRadius": {
                "type": "real",
                "Description": "The radius of bending if circular arc or zero if sharp bend."
              }
            }
          },
          "Pset_FittingJunction": {
            "Properties": {
              "JunctionLeftAngle": {
                "type": "real",
                "Description": "The change of direction of flow for the left junction."
              },
              "JunctionLeftRadius": {
                "type": "real",
                "Description": "The radius of bending for the left junction."
              },
              "JunctionRightAngle": {
                "type": "real",
                "Description": "The change of direction of flow for the right junction where 0 indicates straight segment."
              },
              "JunctionRightRadius": {
                "type": "real",
                "Description": "The radius of bending for the right junction where 0 indicates sharp bend."
              },
              "JunctionType": {
                "type": "PEnum_FittingJunctionType",
                "Description": "The type of junction. TEE=3 ports, CROSS = 4 ports.",
                "values": [
                  "CROSS",
                  "NOTKNOWN",
                  "OTHER",
                  "TEE",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FittingTransition": {
            "Properties": {
              "EccentricityInY": {
                "type": "real",
                "Description": "Distance in y direction between the two points (or vertex points) engaged in the point connection."
              },
              "EccentricityInZ": {
                "type": "real",
                "Description": "Distance in z direction between the two points (or vertex points) engaged in the point connection."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Pset_PipeFittingTypeCommon": {
            "Properties": {
              "FittingLossFactor": {
                "type": "real",
                "Description": "A factor that determines the pressure loss due to friction through the fitting."
              },
              "PressureClass": {
                "type": "real",
                "Description": "Nominal pressure rating of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_PipeFittingBaseQuantities": {
            "Properties": {
              "GrossCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section of the object."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          }
        }
      },
      "IfcPipeSegment": {
        "Parent": "IfcFlowSegment",
        "Description": "A pipe segment is used to typically join two sections of a piping network.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_PipeConnectionFlanged": {
            "Properties": {
              "BoltholePitch": {
                "type": "real",
                "Description": "Diameter of the circle along which the boltholes are placed."
              },
              "BoltSize": {
                "type": "real",
                "Description": "Size of the bolts securing the flange."
              },
              "BoreSize": {
                "type": "real",
                "Description": "The nominal bore of the pipe flange."
              },
              "FlangeDiameter": {
                "type": "real",
                "Description": "Overall diameter of the flange."
              },
              "FlangeStandard": {
                "type": "string",
                "Description": "Designation of the standard describing the flange table."
              },
              "FlangeTable": {
                "type": "string",
                "Description": "Designation of the standard table to which the flange conforms."
              },
              "FlangeThickness": {
                "type": "real",
                "Description": "Thickness of the material from which the pipe bend is constructed."
              },
              "NumberOfBoltholes": {
                "type": "integer",
                "Description": "Number of boltholes in the flange."
              }
            }
          },
          "Pset_PipeSegmentOccurrence": {
            "Properties": {
              "Colour": {
                "type": "string",
                "Description": "Stratum colour"
              },
              "Gradient": {
                "type": "real",
                "Description": "The gradient of the pipe segment."
              },
              "InteriorRoughnessCoefficient": {
                "type": "real",
                "Description": "The interior roughness of the material of the object."
              },
              "InvertElevation": {
                "type": "real",
                "Description": "The invert elevation relative to the datum established for the project."
              }
            }
          },
          "Pset_PipeSegmentTypeCommon": {
            "Properties": {
              "InnerDiameter": {
                "type": "real",
                "Description": "The actual inner diameter of the object."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the object."
              },
              "OuterDiameter": {
                "type": "real",
                "Description": "The actual outer diameter of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WorkingPressure": {
                "type": "real",
                "Description": "Working pressure."
              }
            }
          },
          "Qto_PipeSegmentBaseQuantities": {
            "Properties": {
              "FootPrintArea": {
                "type": "real",
                "Description": "Gross area of the site covered by the building(s)."
              },
              "GrossCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section of the object."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          }
        }
      },
      "IfcPipeSegmentType": {
        "Parent": "IfcFlowSegmentType",
        "Description": "The flow segment type IfcPipeSegmentType defines commonly shared information for occurrences of pipe segments. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a pipe segment type specification indicating the specific product information that is common to all occurrences of that product type. The IfcPipeSegmentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcPipeSegmentType are represented by instances of IfcPipeSegment. Refer to the documentation at IfcPipeSegment for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_PipeConnectionFlanged": {
            "Properties": {
              "BoltholePitch": {
                "type": "real",
                "Description": "Diameter of the circle along which the boltholes are placed."
              },
              "BoltSize": {
                "type": "real",
                "Description": "Size of the bolts securing the flange."
              },
              "BoreSize": {
                "type": "real",
                "Description": "The nominal bore of the pipe flange."
              },
              "FlangeDiameter": {
                "type": "real",
                "Description": "Overall diameter of the flange."
              },
              "FlangeStandard": {
                "type": "string",
                "Description": "Designation of the standard describing the flange table."
              },
              "FlangeTable": {
                "type": "string",
                "Description": "Designation of the standard table to which the flange conforms."
              },
              "FlangeThickness": {
                "type": "real",
                "Description": "Thickness of the material from which the pipe bend is constructed."
              },
              "NumberOfBoltholes": {
                "type": "integer",
                "Description": "Number of boltholes in the flange."
              }
            }
          },
          "Pset_PipeSegmentTypeCommon": {
            "Properties": {
              "InnerDiameter": {
                "type": "real",
                "Description": "The actual inner diameter of the object."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the object."
              },
              "OuterDiameter": {
                "type": "real",
                "Description": "The actual outer diameter of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "WorkingPressure": {
                "type": "real",
                "Description": "Working pressure."
              }
            }
          },
          "Pset_PipeSegmentTypeCulvert": {
            "Properties": {
              "ClearDepth": {
                "type": "real",
                "Description": "The clear depth."
              },
              "InternalWidth": {
                "type": "real",
                "Description": "The internal width of the culvert."
              }
            }
          },
          "Pset_PipeSegmentTypeGutter": {
            "Properties": {
              "Complementaryfunction": {
                "type": "PEnum_ComplementaryWorks",
                "Description": "Indicates the complementary function of the drain channel.",
                "values": [
                  "DISPERSING_WELLS",
                  "LIFTING_WATER_WELLS",
                  "NOTDEFINED",
                  "NOTKNOWN",
                  "OTHER",
                  "TRANSVERSAL_WATER_REMOVAL"
                ]
              },
              "FlowRating": {
                "type": "real",
                "Description": "Actual flow capacity for the gutter. Value of 0.00 means this value has not been set."
              },
              "IsCovered": {
                "type": "boolean",
                "Description": "This property defines if the drain channel has a cover (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsMonitored": {
                "type": "boolean",
                "Description": "This property defines if the Drain Chanel is monitored (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "OrthometricHeight": {
                "type": "real",
                "Description": "The orthometric height is the vertical distance H along the plumb line from a point of interest to a reference surface known as the geoid, the vertical datum that approximates mean sea level."
              },
              "Slope": {
                "type": "real",
                "Description": "Slope angle - relative to horizontal (0.0 degrees).The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only."
              }
            }
          },
          "Qto_PipeSegmentBaseQuantities": {
            "Properties": {
              "FootPrintArea": {
                "type": "real",
                "Description": "Gross area of the site covered by the building(s)."
              },
              "GrossCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetCrossSectionArea": {
                "type": "real",
                "Description": "Area of the cross section of the object."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          }
        }
      },
      "IfcPump": {
        "Parent": "IfcFlowMovingDevice",
        "Description": "A pump is a device which imparts mechanical work on fluids or slurries to move them through a channel or pipeline. A typical use of a pump is to circulate chilled water or heating hot water in a building services distribution system.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_PumpOccurrence": {
            "Properties": {
              "BaseType": {
                "type": "PEnum_PumpBaseType",
                "Description": "Defines general types of pump bases.FRAME: Frame.\nBASE: Base.\nNONE: There is no pump base, such as an inline pump.\nOTHER: Other type of pump base.",
                "values": [
                  "BASE",
                  "FRAME",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "DriveConnectionType": {
                "type": "PEnum_PumpDriveConnectionType",
                "Description": "The way the pump drive mechanism is connected to the pump.DIRECTDRIVE: Direct drive.\nBELTDRIVE: Belt drive.\nCOUPLING: Coupling.\nOTHER: Other type of drive connection.",
                "values": [
                  "BELTDRIVE",
                  "COUPLING",
                  "DIRECTDRIVE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ImpellerDiameter": {
                "type": "real",
                "Description": "Diameter of object - used to scale performance of geometrically similar objects."
              }
            }
          },
          "Pset_PumpTypeCommon": {
            "Properties": {
              "ConnectionSize": {
                "type": "real",
                "Description": "The connection size of the object."
              },
              "NetPositiveSuctionHead": {
                "type": "real",
                "Description": "Minimum liquid pressure at the pump inlet to prevent cavitation."
              },
              "NominalRotationSpeed": {
                "type": "real",
                "Description": "Rotational speed of the object under nominal conditions."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_PumpBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcPumpType": {
        "Parent": "IfcFlowMovingDeviceType",
        "Description": "The flow moving device type IfcPumpType defines commonly shared information for occurrences of pumps. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a pump type specification indicating the specific product information that is common to all occurrences of that product type. The IfcPumpType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcPumpType are represented by instances of IfcPump. Refer to the documentation at IfcPump for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_PumpTypeCommon": {
            "Properties": {
              "ConnectionSize": {
                "type": "real",
                "Description": "The connection size of the object."
              },
              "NetPositiveSuctionHead": {
                "type": "real",
                "Description": "Minimum liquid pressure at the pump inlet to prevent cavitation."
              },
              "NominalRotationSpeed": {
                "type": "real",
                "Description": "Rotational speed of the object under nominal conditions."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_PumpBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcSpaceHeater": {
        "Parent": "IfcFlowTerminal",
        "Description": "Space heaters utilize a combination of radiation and/or natural convection using a heating source such as electricity, steam or hot water to heat a limited space or area. Examples of space heaters include radiators, convectors, baseboard and finned-tube heaters.IfcUnitaryEquipment should be used for packaged units supporting a combination of heating, cooling, and/or dehumidification; IfcCoil should be used for coil-based floor heating.HISTORY  New entity in IFC4{ .note}{ .change-ifc2x4}IFC4 CHANGE  Electric heaters formerly defined by IfcElectricHeaterType are now represented by this entity with PredefinedType set to CONVECTOR and Pset_SpaceHeaterCommon.HeatTransferDimension reflecting IfcElectricHeaterTypeEnum as follows: ELECTRICPOINTHEATER = POINT, ELECTRICCABLEHEATER = CURVE, ELECTRICMATHEATER = SURFACE.",
        "Psets": {
          "Pset_SpaceHeaterTypeCommon": {
            "Properties": {
              "BodyMass": {
                "type": "real",
                "Description": "Overall body mass of the heater."
              },
              "EnergySource": {
                "type": "PEnum_EnergySource",
                "Description": "Enumeration defining the energy source or fuel cumbusted.",
                "values": [
                  "COAL",
                  "COAL_PULVERIZED",
                  "ELECTRICITY",
                  "GAS",
                  "NOTKNOWN",
                  "OIL",
                  "OTHER",
                  "PROPANE",
                  "UNSET",
                  "WOOD",
                  "WOOD_CHIP",
                  "WOOD_PELLET",
                  "WOOD_PULVERIZED"
                ]
              },
              "HeatTransferDimension": {
                "type": "PEnum_SpaceHeaterHeatTransferDimension",
                "Description": "Indicates how heat is transmitted according to the shape of the space heater.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "PATH",
                  "POINT",
                  "SURFACE",
                  "UNSET"
                ]
              },
              "HeatTransferMedium": {
                "type": "PEnum_HeatTransferMedium",
                "Description": "Enumeration defining the heat transfer medium if applicable.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "STEAM",
                  "UNSET",
                  "WATER"
                ]
              },
              "NumberOfPanels": {
                "type": "integer",
                "Description": "Number of panels."
              },
              "NumberOfSections": {
                "type": "integer",
                "Description": "Number of sections."
              },
              "OutputCapacity": {
                "type": "real",
                "Description": "Total nominal heat output as listed by the manufacturer."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SpaceHeaterPlacement": {
                "type": "PEnum_SpaceHeaterPlacementType",
                "Description": "Indicates how the space heater is designed to be placed.",
                "values": [
                  "BASEBOARD",
                  "NOTKNOWN",
                  "OTHER",
                  "SUSPENDED",
                  "TOWELWARMER",
                  "UNSET",
                  "WALL"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TemperatureClassification": {
                "type": "PEnum_SpaceHeaterTemperatureClassification",
                "Description": "Enumeration defining the temperature classification of the space heater surface temperature.\nlow temperature - surface temperature is relatively low, usually heated by hot water or electricity.\nhigh temperature - surface temperature is relatively high, usually heated by gas or steam.",
                "values": [
                  "HIGHTEMPERATURE",
                  "LOWTEMPERATURE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ThermalEfficiency": {
                "type": "real",
                "Description": "Overall Thermal Efficiency is defined as gross energy output of the heat transfer device divided by the energy input."
              },
              "ThermalMassHeatCapacity": {
                "type": "real",
                "Description": "Product of component mass and specific heat."
              }
            }
          },
          "Qto_SpaceHeaterBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcSpaceHeaterType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcSpaceHeaterType defines commonly shared information for occurrences of space heaters. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a space heater type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSpaceHeaterType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSpaceHeaterType are represented by instances of IfcSpaceHeater. Refer to the documentation at IfcSpaceHeater for supported property sets, materials, composition, and ports.{ .change-ifc2x4}IFC4 CHANGE  Supertype changed from IfcEnergyConversionDeviceType to IfcFlowTerminalType",
        "Psets": {
          "Pset_SpaceHeaterTypeCommon": {
            "Properties": {
              "BodyMass": {
                "type": "real",
                "Description": "Overall body mass of the heater."
              },
              "EnergySource": {
                "type": "PEnum_EnergySource",
                "Description": "Enumeration defining the energy source or fuel cumbusted.",
                "values": [
                  "COAL",
                  "COAL_PULVERIZED",
                  "ELECTRICITY",
                  "GAS",
                  "NOTKNOWN",
                  "OIL",
                  "OTHER",
                  "PROPANE",
                  "UNSET",
                  "WOOD",
                  "WOOD_CHIP",
                  "WOOD_PELLET",
                  "WOOD_PULVERIZED"
                ]
              },
              "HeatTransferDimension": {
                "type": "PEnum_SpaceHeaterHeatTransferDimension",
                "Description": "Indicates how heat is transmitted according to the shape of the space heater.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "PATH",
                  "POINT",
                  "SURFACE",
                  "UNSET"
                ]
              },
              "HeatTransferMedium": {
                "type": "PEnum_HeatTransferMedium",
                "Description": "Enumeration defining the heat transfer medium if applicable.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "STEAM",
                  "UNSET",
                  "WATER"
                ]
              },
              "NumberOfPanels": {
                "type": "integer",
                "Description": "Number of panels."
              },
              "NumberOfSections": {
                "type": "integer",
                "Description": "Number of sections."
              },
              "OutputCapacity": {
                "type": "real",
                "Description": "Total nominal heat output as listed by the manufacturer."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SpaceHeaterPlacement": {
                "type": "PEnum_SpaceHeaterPlacementType",
                "Description": "Indicates how the space heater is designed to be placed.",
                "values": [
                  "BASEBOARD",
                  "NOTKNOWN",
                  "OTHER",
                  "SUSPENDED",
                  "TOWELWARMER",
                  "UNSET",
                  "WALL"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TemperatureClassification": {
                "type": "PEnum_SpaceHeaterTemperatureClassification",
                "Description": "Enumeration defining the temperature classification of the space heater surface temperature.\nlow temperature - surface temperature is relatively low, usually heated by hot water or electricity.\nhigh temperature - surface temperature is relatively high, usually heated by gas or steam.",
                "values": [
                  "HIGHTEMPERATURE",
                  "LOWTEMPERATURE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ThermalEfficiency": {
                "type": "real",
                "Description": "Overall Thermal Efficiency is defined as gross energy output of the heat transfer device divided by the energy input."
              },
              "ThermalMassHeatCapacity": {
                "type": "real",
                "Description": "Product of component mass and specific heat."
              }
            }
          },
          "Pset_SpaceHeaterTypeConvector": {
            "Properties": {
              "ConvectorType": {
                "type": "PEnum_SpaceHeaterConvectorType",
                "Description": "Indicates the type of convector, whether forced air (mechanically driven) or natural (gravity).",
                "values": [
                  "FORCED",
                  "NATURAL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SpaceHeaterTypeRadiator": {
            "Properties": {
              "RadiatorType": {
                "type": "PEnum_SpaceHeaterRadiatorType",
                "Description": "Indicates the type of radiator.",
                "values": [
                  "FINNEDTUBE",
                  "NOTKNOWN",
                  "OTHER",
                  "PANEL",
                  "SECTIONAL",
                  "TUBULAR",
                  "UNSET"
                ]
              },
              "TubingLength": {
                "type": "real",
                "Description": "Water tube length inside the component."
              },
              "WaterContent": {
                "type": "real",
                "Description": "Weight of water content within the heater."
              }
            }
          },
          "Qto_SpaceHeaterBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcTank": {
        "Parent": "IfcFlowStorageDevice",
        "Description": "A tank is a vessel or container in which a fluid or gas is stored for later use.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_TankOccurrence": {
            "Properties": {
              "HasLadder": {
                "type": "boolean",
                "Description": "Indication of whether the tank is provided with a ladder (set TRUE) for access to the top. If no ladder is provided then value is set FALSE.Note: No indication is given of the type of ladder (gooseneck etc.)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasVisualIndicator": {
                "type": "boolean",
                "Description": "Indication of whether the tank is provided with a visual indicator (set TRUE) that shows the water level in the tank. If no visual indicator is provided then value is set FALSE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "TankComposition": {
                "type": "PEnum_TankComposition",
                "Description": "Defines the level of element composition where.COMPLEX: A set of elementary units aggregated together to fulfill the overall  required purpose.\nELEMENT: A single elementary unit that may exist of itself or as an aggregation of partial units..\nPARTIAL: A partial elementary unit.",
                "values": [
                  "COMPLEX",
                  "ELEMENT",
                  "NOTKNOWN",
                  "OTHER",
                  "PARTIAL",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_TankTypeCommon": {
            "Properties": {
              "AccessType": {
                "type": "PEnum_TankAccessType",
                "Description": "Defines the types of access (or cover) to a tank that may be specified.Note that covers are generally specified for rectangular tanks. For cylindrical tanks, access will normally be via a manhole.",
                "values": [
                  "LOOSECOVER",
                  "MANHOLE",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "SECUREDCOVER",
                  "SECUREDCOVERWITHMANHOLE",
                  "UNSET"
                ]
              },
              "EffectiveCapacity": {
                "type": "real",
                "Description": "The total effective or actual volumetric capacity of the tank."
              },
              "EndShapeType": {
                "type": "PEnum_EndShapeType",
                "Description": "Defines the types of end shapes that can be used for preformed tanks. The convention for reading these enumerated values is that for a vertical cylinder, the first value is the base and the second is the top; for a horizontal cylinder, the order of reading should be left to right. For a speherical tank, the value UNSET should be used.",
                "values": [
                  "CONCAVECONVEX",
                  "CONCAVEFLAT",
                  "CONVEXCONVEX",
                  "FLATCONVEX",
                  "FLATFLAT",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "FirstCurvatureRadius": {
                "type": "real",
                "Description": "FirstCurvatureRadius should be defined as the base or left side radius of curvature value."
              },
              "NominalDepth": {
                "type": "real",
                "Description": "Nominal or quoted depth of the object measured from the inlet drain connection to the base of the unit."
              },
              "NominalLengthOrDiameter": {
                "type": "real",
                "Description": "The nominal length or, in the case of a vertical cylindrical tank, the nominal diameter of the tank."
              },
              "NominalWidthOrDiameter": {
                "type": "real",
                "Description": "The nominal width or, in the case of a horizontal cylindrical tank, the nominal diameter of the tank.Note: Not required for a vertical cylindrical tank."
              },
              "NumberOfSections": {
                "type": "integer",
                "Description": "Number of sections."
              },
              "OperatingWeight": {
                "type": "real",
                "Description": "Operating weight of the tank including all of its contents."
              },
              "PatternType": {
                "type": "PEnum_TankPatternType",
                "Description": "Defines the types of pattern (or shape of a tank that may be specified.",
                "values": [
                  "HORIZONTALCYLINDER",
                  "NOTKNOWN",
                  "OTHER",
                  "RECTANGULAR",
                  "UNSET",
                  "VERTICALCYLINDER"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SecondCurvatureRadius": {
                "type": "real",
                "Description": "SecondCurvatureRadius should be defined as the top or right side radius of curvature value."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "StorageType": {
                "type": "PEnum_TankStorageType",
                "Description": "Defines the general material category intended to be stored.",
                "values": [
                  "FUEL",
                  "ICE",
                  "NOTKNOWN",
                  "OIL",
                  "OTHER",
                  "POTABLEWATER",
                  "RAINWATER",
                  "UNSET",
                  "WASTEWATER",
                  "WATER"
                ]
              },
              "TankNominalCapacity": {
                "type": "real",
                "Description": "The total nominal or design volumetric capacity of the tank."
              }
            }
          },
          "Pset_TankTypePreformed": {
            "Properties": {
              "EndShapeType": {
                "type": "PEnum_EndShapeType",
                "Description": "Defines the types of end shapes that can be used for preformed tanks. The convention for reading these enumerated values is that for a vertical cylinder, the first value is the base and the second is the top; for a horizontal cylinder, the order of reading should be left to right. For a speherical tank, the value UNSET should be used.",
                "values": [
                  "CONCAVECONVEX",
                  "CONCAVEFLAT",
                  "CONVEXCONVEX",
                  "FLATCONVEX",
                  "FLATFLAT",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "FirstCurvatureRadius": {
                "type": "real",
                "Description": "FirstCurvatureRadius should be defined as the base or left side radius of curvature value."
              },
              "PatternType": {
                "type": "PEnum_TankPatternType",
                "Description": "Defines the types of pattern (or shape of a tank that may be specified.",
                "values": [
                  "HORIZONTALCYLINDER",
                  "NOTKNOWN",
                  "OTHER",
                  "RECTANGULAR",
                  "UNSET",
                  "VERTICALCYLINDER"
                ]
              },
              "SecondCurvatureRadius": {
                "type": "real",
                "Description": "SecondCurvatureRadius should be defined as the top or right side radius of curvature value."
              }
            }
          },
          "Pset_TankTypeSectional": {
            "Properties": {
              "NumberOfSections": {
                "type": "integer",
                "Description": "Number of sections."
              },
              "SectionLength": {
                "type": "real",
                "Description": "The length of a section used in the construction of the tank."
              },
              "SectionWidth": {
                "type": "real",
                "Description": "The width of a section used in the construction of the tank."
              }
            }
          },
          "Qto_TankBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "TotalSurfaceArea": {
                "type": "real",
                "Description": "Total surface area of the element."
              }
            }
          }
        }
      },
      "IfcTankType": {
        "Parent": "IfcFlowStorageDeviceType",
        "Description": "The flow storage device type IfcTankType defines commonly shared information for occurrences of tanks. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a tank type specification indicating the specific product information that is common to all occurrences of that product type. The IfcTankType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcTankType are represented by instances of IfcTank. Refer to the documentation at IfcTank for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_TankTypeCommon": {
            "Properties": {
              "AccessType": {
                "type": "PEnum_TankAccessType",
                "Description": "Defines the types of access (or cover) to a tank that may be specified.Note that covers are generally specified for rectangular tanks. For cylindrical tanks, access will normally be via a manhole.",
                "values": [
                  "LOOSECOVER",
                  "MANHOLE",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "SECUREDCOVER",
                  "SECUREDCOVERWITHMANHOLE",
                  "UNSET"
                ]
              },
              "EffectiveCapacity": {
                "type": "real",
                "Description": "The total effective or actual volumetric capacity of the tank."
              },
              "EndShapeType": {
                "type": "PEnum_EndShapeType",
                "Description": "Defines the types of end shapes that can be used for preformed tanks. The convention for reading these enumerated values is that for a vertical cylinder, the first value is the base and the second is the top; for a horizontal cylinder, the order of reading should be left to right. For a speherical tank, the value UNSET should be used.",
                "values": [
                  "CONCAVECONVEX",
                  "CONCAVEFLAT",
                  "CONVEXCONVEX",
                  "FLATCONVEX",
                  "FLATFLAT",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "FirstCurvatureRadius": {
                "type": "real",
                "Description": "FirstCurvatureRadius should be defined as the base or left side radius of curvature value."
              },
              "NominalDepth": {
                "type": "real",
                "Description": "Nominal or quoted depth of the object measured from the inlet drain connection to the base of the unit."
              },
              "NominalLengthOrDiameter": {
                "type": "real",
                "Description": "The nominal length or, in the case of a vertical cylindrical tank, the nominal diameter of the tank."
              },
              "NominalWidthOrDiameter": {
                "type": "real",
                "Description": "The nominal width or, in the case of a horizontal cylindrical tank, the nominal diameter of the tank.Note: Not required for a vertical cylindrical tank."
              },
              "NumberOfSections": {
                "type": "integer",
                "Description": "Number of sections."
              },
              "OperatingWeight": {
                "type": "real",
                "Description": "Operating weight of the tank including all of its contents."
              },
              "PatternType": {
                "type": "PEnum_TankPatternType",
                "Description": "Defines the types of pattern (or shape of a tank that may be specified.",
                "values": [
                  "HORIZONTALCYLINDER",
                  "NOTKNOWN",
                  "OTHER",
                  "RECTANGULAR",
                  "UNSET",
                  "VERTICALCYLINDER"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SecondCurvatureRadius": {
                "type": "real",
                "Description": "SecondCurvatureRadius should be defined as the top or right side radius of curvature value."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "StorageType": {
                "type": "PEnum_TankStorageType",
                "Description": "Defines the general material category intended to be stored.",
                "values": [
                  "FUEL",
                  "ICE",
                  "NOTKNOWN",
                  "OIL",
                  "OTHER",
                  "POTABLEWATER",
                  "RAINWATER",
                  "UNSET",
                  "WASTEWATER",
                  "WATER"
                ]
              },
              "TankNominalCapacity": {
                "type": "real",
                "Description": "The total nominal or design volumetric capacity of the tank."
              }
            }
          },
          "Pset_TankTypeExpansion": {
            "Properties": {
              "ChargePressure": {
                "type": "real",
                "Description": "Nominal or design operating pressure of the tank."
              },
              "PressureRegulatorSetting": {
                "type": "real",
                "Description": "Pressure that is automatically maintained in the tank."
              },
              "ReliefValveSetting": {
                "type": "real",
                "Description": "Pressure at which the relief valve activates."
              }
            }
          },
          "Pset_TankTypePreformed": {
            "Properties": {
              "EndShapeType": {
                "type": "PEnum_EndShapeType",
                "Description": "Defines the types of end shapes that can be used for preformed tanks. The convention for reading these enumerated values is that for a vertical cylinder, the first value is the base and the second is the top; for a horizontal cylinder, the order of reading should be left to right. For a speherical tank, the value UNSET should be used.",
                "values": [
                  "CONCAVECONVEX",
                  "CONCAVEFLAT",
                  "CONVEXCONVEX",
                  "FLATCONVEX",
                  "FLATFLAT",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "FirstCurvatureRadius": {
                "type": "real",
                "Description": "FirstCurvatureRadius should be defined as the base or left side radius of curvature value."
              },
              "PatternType": {
                "type": "PEnum_TankPatternType",
                "Description": "Defines the types of pattern (or shape of a tank that may be specified.",
                "values": [
                  "HORIZONTALCYLINDER",
                  "NOTKNOWN",
                  "OTHER",
                  "RECTANGULAR",
                  "UNSET",
                  "VERTICALCYLINDER"
                ]
              },
              "SecondCurvatureRadius": {
                "type": "real",
                "Description": "SecondCurvatureRadius should be defined as the top or right side radius of curvature value."
              }
            }
          },
          "Pset_TankTypePressureVessel": {
            "Properties": {
              "ChargePressure": {
                "type": "real",
                "Description": "Nominal or design operating pressure of the tank."
              },
              "PressureRegulatorSetting": {
                "type": "real",
                "Description": "Pressure that is automatically maintained in the tank."
              },
              "ReliefValveSetting": {
                "type": "real",
                "Description": "Pressure at which the relief valve activates."
              }
            }
          },
          "Pset_TankTypeSectional": {
            "Properties": {
              "NumberOfSections": {
                "type": "integer",
                "Description": "Number of sections."
              },
              "SectionLength": {
                "type": "real",
                "Description": "The length of a section used in the construction of the tank."
              },
              "SectionWidth": {
                "type": "real",
                "Description": "The width of a section used in the construction of the tank."
              }
            }
          },
          "Qto_TankBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "TotalSurfaceArea": {
                "type": "real",
                "Description": "Total surface area of the element."
              }
            }
          }
        }
      },
      "IfcTubeBundle": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A tube bundle is a device consisting of tubes and bundles of tubes used for heat transfer and contained typically within other energy conversion devices, such as a chiller or coil.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_TubeBundleTypeCommon": {
            "Properties": {
              "FoulingFactor": {
                "type": "real",
                "Description": "Fouling factor of the tubes in the tube bundle."
              },
              "HasTurbulator": {
                "type": "boolean",
                "Description": "TRUE if the tube has a turbulator, FALSE if it does not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HorizontalSpacing": {
                "type": "real",
                "Description": "Horizontal spacing between tubes in the tube bundle."
              },
              "InLineRowSpacing": {
                "type": "real",
                "Description": "In-line tube row spacing."
              },
              "InsideDiameter": {
                "type": "real",
                "Description": "Actual inner diameter of the tube in the tube bundle."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the object."
              },
              "NumberOfCircuits": {
                "type": "integer",
                "Description": "Number of circuits."
              },
              "NumberOfRows": {
                "type": "integer",
                "Description": "Number of tube rows in the tube bundle assembly."
              },
              "OutsideDiameter": {
                "type": "real",
                "Description": "Actual outside diameter of the tube in the tube bundle."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "StaggeredRowSpacing": {
                "type": "real",
                "Description": "Staggered tube row spacing."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalConductivity": {
                "type": "real",
                "Description": "The thermal conductivity of the object."
              },
              "VerticalSpacing": {
                "type": "real",
                "Description": "Vertical spacing between tubes in the tube bundle."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              }
            }
          },
          "Qto_TubeBundleBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcTubeBundleType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcTubeBundleType defines commonly shared information for occurrences of tube bundles. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a tube bundle type specification indicating the specific product information that is common to all occurrences of that product type. The IfcTubeBundleType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcTubeBundleType are represented by instances of IfcTubeBundle. Refer to the documentation at IfcTubeBundle for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_TubeBundleTypeCommon": {
            "Properties": {
              "FoulingFactor": {
                "type": "real",
                "Description": "Fouling factor of the tubes in the tube bundle."
              },
              "HasTurbulator": {
                "type": "boolean",
                "Description": "TRUE if the tube has a turbulator, FALSE if it does not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HorizontalSpacing": {
                "type": "real",
                "Description": "Horizontal spacing between tubes in the tube bundle."
              },
              "InLineRowSpacing": {
                "type": "real",
                "Description": "In-line tube row spacing."
              },
              "InsideDiameter": {
                "type": "real",
                "Description": "Actual inner diameter of the tube in the tube bundle."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the object."
              },
              "NumberOfCircuits": {
                "type": "integer",
                "Description": "Number of circuits."
              },
              "NumberOfRows": {
                "type": "integer",
                "Description": "Number of tube rows in the tube bundle assembly."
              },
              "OutsideDiameter": {
                "type": "real",
                "Description": "Actual outside diameter of the tube in the tube bundle."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "StaggeredRowSpacing": {
                "type": "real",
                "Description": "Staggered tube row spacing."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalConductivity": {
                "type": "real",
                "Description": "The thermal conductivity of the object."
              },
              "VerticalSpacing": {
                "type": "real",
                "Description": "Vertical spacing between tubes in the tube bundle."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              }
            }
          },
          "Pset_TubeBundleTypeFinned": {
            "Properties": {
              "Diameter": {
                "type": "real",
                "Description": "The Diameter of the object."
              },
              "FinCorrugatedType": {
                "type": "string",
                "Description": "Description of a fin corrugated type."
              },
              "HasCoating": {
                "type": "boolean",
                "Description": "TRUE if the fin has a coating, FALSE if it does not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Spacing": {
                "type": "real",
                "Description": "Distance between fins on a tube in the tube bundle."
              },
              "ThermalConductivity": {
                "type": "real",
                "Description": "The thermal conductivity of the object."
              },
              "Thickness": {
                "type": "real",
                "Description": "The geometric thickness of the object."
              }
            }
          },
          "Qto_TubeBundleBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcUnitaryEquipment": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "Unitary equipment typically combine a number of components into a single product, such as air handlers, pre-packaged rooftop air-conditioning units, heat pumps, and split systems.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_UnitaryEquipmentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_UnitaryEquipmentBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcUnitaryEquipmentType": {
        "Parent": "IfcEnergyConversionDeviceType",
        "Description": "The energy conversion device type IfcUnitaryEquipmentType defines commonly shared information for occurrences of unitary equipments. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a unitary equipment type specification indicating the specific product information that is common to all occurrences of that product type. The IfcUnitaryEquipmentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcUnitaryEquipmentType are represented by instances of IfcUnitaryEquipment. Refer to the documentation at IfcUnitaryEquipment for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_UnitaryEquipmentTypeAirConditioningUnit": {
            "Properties": {
              "CondenserEnteringTemperature": {
                "type": "real",
                "Description": "Temperature of fluid entering condenser."
              },
              "CondenserFlowrate": {
                "type": "real",
                "Description": "Flow rate of fluid through the condenser."
              },
              "CondenserLeavingTemperature": {
                "type": "real",
                "Description": "Temperature of fluid leaving condenser."
              },
              "CoolingEfficiency": {
                "type": "real",
                "Description": "Coefficient of Performance: Ratio of cooling energy output to energy input under full load operating conditions."
              },
              "HeatingCapacity": {
                "type": "real",
                "Description": "Heating capacity."
              },
              "HeatingEfficiency": {
                "type": "real",
                "Description": "Heating efficiency under full load heating conditions."
              },
              "LatentCoolingCapacity": {
                "type": "real",
                "Description": "Latent cooling capacity."
              },
              "OutsideAirFlowrate": {
                "type": "real",
                "Description": "Flow rate of outside air entering the unit."
              },
              "SensibleCoolingCapacity": {
                "type": "real",
                "Description": "Sensible cooling capacity."
              }
            }
          },
          "Pset_UnitaryEquipmentTypeAirHandler": {
            "Properties": {
              "AirHandlerConstruction": {
                "type": "PEnum_AirHandlerConstruction",
                "Description": "Enumeration defining how the air handler might be fabricated.",
                "values": [
                  "CONSTRUCTEDONSITE",
                  "MANUFACTUREDITEM",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "AirHandlerFanCoilArrangement": {
                "type": "PEnum_AirHandlerFanCoilArrangement",
                "Description": "Enumeration defining the arrangement of the supply air fan and the cooling coil.",
                "values": [
                  "BLOWTHROUGH",
                  "DRAWTHROUGH",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "DualDeck": {
                "type": "boolean",
                "Description": "Does the AirHandler have a dual deck? TRUE = Yes, FALSE = No.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_UnitaryEquipmentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_UnitaryEquipmentBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcValve": {
        "Parent": "IfcFlowController",
        "Description": "A valve is used in a building services piping distribution system to control or modulate the flow of the fluid.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_ValveTypeCommon": {
            "Properties": {
              "CloseOffRating": {
                "type": "real",
                "Description": "Close off rating."
              },
              "FlowCoefficient": {
                "type": "real",
                "Description": "Flow coefficient (the quantity of fluid that passes through a fully open valve at unit pressure drop), typically expressed as the Kv or Cv value for the valve."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Size": {
                "type": "real",
                "Description": "The size of the connection to the valve (or to each connection for faucets, mixing valves, etc.)."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TestPressure": {
                "type": "real",
                "Description": "The maximum pressure to which the valve has been subjected under test."
              },
              "ValveMechanism": {
                "type": "PEnum_ValveMechanism",
                "Description": "The mechanism by which the valve function is achieved where:BALL: Valve that has a ported ball that can be turned relative to the body seat ports.\nBUTTERFLY: Valve in which a streamlined disc pivots about a diametric axis.\nCONFIGUREDGATE: Screwdown valve in which the closing gate is shaped in a configured manner to have a more precise control of pressure and flow change across the valve.\nGLAND: Valve with a tapered seating, in which a rotatable plug is retained by means of a gland and gland packing.\nGLOBE: Screwdown valve that has a spherical body.\nLUBRICATEDPLUG: Plug valve in which a lubricant is injected under pressure between the plug face and the body.\nNEEDLE: Valve for regulating the flow in or from a pipe, in which a slender cone moves along the axis of flow to close against a fixed conical seat.\nPARALLELSLIDE: Screwdown valve that has a machined plate that slides in formed grooves to form a seal.\nPLUG: Valve that has a ported plug that can be turned relative to the body seat ports.\nWEDGEGATE: Screwdown valve that has a wedge shaped plate fitting into tapered guides to form a seal.",
                "values": [
                  "BALL",
                  "BUTTERFLY",
                  "CONFIGUREDGATE",
                  "GLAND",
                  "GLOBE",
                  "LUBRICATEDPLUG",
                  "NEEDLE",
                  "NOTKNOWN",
                  "OTHER",
                  "PARALLELSLIDE",
                  "PLUG",
                  "UNSET",
                  "WEDGEGATE"
                ]
              },
              "ValveOperation": {
                "type": "PEnum_ValveOperation",
                "Description": "The method of valve operation where:DROPWEIGHT: A valve that is closed by the action of a weighted lever being released, the weight normally being prevented from dropping by being held by a wire, the closure normally being made by the action of heat on a fusible link in the wire\nFLOAT: A valve that is opened and closed by the action of a float that rises and falls with water level. The float may be a ball attached to a lever or other mechanism\nHYDRAULIC: A valve that is opened and closed by hydraulic actuation\nLEVER: A valve that is opened and closed by the action of a lever rotating the gate within the valve.\nLOCKSHIELD: A valve that requires the use of a special lockshield key for opening and closing, the operating mechanism being protected by a shroud during normal operation.\nMOTORIZED: A valve that is opened and closed by the action of an electric motor on an actuator\nPNEUMATIC: A valve that is opened and closed by pneumatic actuation\nSOLENOID: A valve that is normally held open by a magnetic field in a coil acting on the gate but that is closed immediately if the electrical current generating the magnetic field is removed.\nSPRING: A valve that is normally held in position by the pressure of a spring on a plate but that may be caused to open if the pressure of the fluid is sufficient to overcome the spring pressure.\nTHERMOSTATIC: A valve in which the ports are opened or closed to maintain a required predetermined temperature.\nWHEEL: A valve that is opened and closed by the action of a wheel moving the gate within the valve.",
                "values": [
                  "DROPWEIGHT",
                  "FLOAT",
                  "HYDRAULIC",
                  "LEVER",
                  "LOCKSHIELD",
                  "MOTORIZED",
                  "NOTKNOWN",
                  "OTHER",
                  "PNEUMATIC",
                  "SOLENOID",
                  "SPRING",
                  "THERMOSTATIC",
                  "UNSET",
                  "WHEEL"
                ]
              },
              "ValvePattern": {
                "type": "PEnum_ValvePattern",
                "Description": "The configuration of the ports of a valve according to either the linear route taken by a fluid flowing through the valve or by the number of ports where:SINGLEPORT: Valve that has a single entry port from the system that it serves, the exit port being to the surrounding environment.\nANGLED_2_PORT: Valve in which the direction of flow is changed through 90 degrees.\nSTRAIGHT_2_PORT: Valve in which the flow is straight through.\nSTRAIGHT_3_PORT: Valve with three separate ports.\nCROSSOVER_4_PORT: Valve with 4 separate ports.",
                "values": [
                  "ANGLED_2_PORT",
                  "CROSSOVER_4_PORT",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLEPORT",
                  "STRAIGHT_2_PORT",
                  "STRAIGHT_3_PORT",
                  "UNSET"
                ]
              },
              "WorkingPressure": {
                "type": "real",
                "Description": "Working pressure."
              }
            }
          },
          "Qto_ValveBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcValveType": {
        "Parent": "IfcFlowControllerType",
        "Description": "The flow controller type IfcValveType defines commonly shared information for occurrences of valves. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a valve type specification indicating the specific product information that is common to all occurrences of that product type. The IfcValveType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcValveType are represented by instances of IfcValve. Refer to the documentation at IfcValve for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_ValveTypeAirRelease": {
            "Properties": {
              "IsAutomatic": {
                "type": "boolean",
                "Description": "Indication of whether the valve is automatically operated (TRUE) or manually operated (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_ValveTypeCommon": {
            "Properties": {
              "CloseOffRating": {
                "type": "real",
                "Description": "Close off rating."
              },
              "FlowCoefficient": {
                "type": "real",
                "Description": "Flow coefficient (the quantity of fluid that passes through a fully open valve at unit pressure drop), typically expressed as the Kv or Cv value for the valve."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Size": {
                "type": "real",
                "Description": "The size of the connection to the valve (or to each connection for faucets, mixing valves, etc.)."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TestPressure": {
                "type": "real",
                "Description": "The maximum pressure to which the valve has been subjected under test."
              },
              "ValveMechanism": {
                "type": "PEnum_ValveMechanism",
                "Description": "The mechanism by which the valve function is achieved where:BALL: Valve that has a ported ball that can be turned relative to the body seat ports.\nBUTTERFLY: Valve in which a streamlined disc pivots about a diametric axis.\nCONFIGUREDGATE: Screwdown valve in which the closing gate is shaped in a configured manner to have a more precise control of pressure and flow change across the valve.\nGLAND: Valve with a tapered seating, in which a rotatable plug is retained by means of a gland and gland packing.\nGLOBE: Screwdown valve that has a spherical body.\nLUBRICATEDPLUG: Plug valve in which a lubricant is injected under pressure between the plug face and the body.\nNEEDLE: Valve for regulating the flow in or from a pipe, in which a slender cone moves along the axis of flow to close against a fixed conical seat.\nPARALLELSLIDE: Screwdown valve that has a machined plate that slides in formed grooves to form a seal.\nPLUG: Valve that has a ported plug that can be turned relative to the body seat ports.\nWEDGEGATE: Screwdown valve that has a wedge shaped plate fitting into tapered guides to form a seal.",
                "values": [
                  "BALL",
                  "BUTTERFLY",
                  "CONFIGUREDGATE",
                  "GLAND",
                  "GLOBE",
                  "LUBRICATEDPLUG",
                  "NEEDLE",
                  "NOTKNOWN",
                  "OTHER",
                  "PARALLELSLIDE",
                  "PLUG",
                  "UNSET",
                  "WEDGEGATE"
                ]
              },
              "ValveOperation": {
                "type": "PEnum_ValveOperation",
                "Description": "The method of valve operation where:DROPWEIGHT: A valve that is closed by the action of a weighted lever being released, the weight normally being prevented from dropping by being held by a wire, the closure normally being made by the action of heat on a fusible link in the wire\nFLOAT: A valve that is opened and closed by the action of a float that rises and falls with water level. The float may be a ball attached to a lever or other mechanism\nHYDRAULIC: A valve that is opened and closed by hydraulic actuation\nLEVER: A valve that is opened and closed by the action of a lever rotating the gate within the valve.\nLOCKSHIELD: A valve that requires the use of a special lockshield key for opening and closing, the operating mechanism being protected by a shroud during normal operation.\nMOTORIZED: A valve that is opened and closed by the action of an electric motor on an actuator\nPNEUMATIC: A valve that is opened and closed by pneumatic actuation\nSOLENOID: A valve that is normally held open by a magnetic field in a coil acting on the gate but that is closed immediately if the electrical current generating the magnetic field is removed.\nSPRING: A valve that is normally held in position by the pressure of a spring on a plate but that may be caused to open if the pressure of the fluid is sufficient to overcome the spring pressure.\nTHERMOSTATIC: A valve in which the ports are opened or closed to maintain a required predetermined temperature.\nWHEEL: A valve that is opened and closed by the action of a wheel moving the gate within the valve.",
                "values": [
                  "DROPWEIGHT",
                  "FLOAT",
                  "HYDRAULIC",
                  "LEVER",
                  "LOCKSHIELD",
                  "MOTORIZED",
                  "NOTKNOWN",
                  "OTHER",
                  "PNEUMATIC",
                  "SOLENOID",
                  "SPRING",
                  "THERMOSTATIC",
                  "UNSET",
                  "WHEEL"
                ]
              },
              "ValvePattern": {
                "type": "PEnum_ValvePattern",
                "Description": "The configuration of the ports of a valve according to either the linear route taken by a fluid flowing through the valve or by the number of ports where:SINGLEPORT: Valve that has a single entry port from the system that it serves, the exit port being to the surrounding environment.\nANGLED_2_PORT: Valve in which the direction of flow is changed through 90 degrees.\nSTRAIGHT_2_PORT: Valve in which the flow is straight through.\nSTRAIGHT_3_PORT: Valve with three separate ports.\nCROSSOVER_4_PORT: Valve with 4 separate ports.",
                "values": [
                  "ANGLED_2_PORT",
                  "CROSSOVER_4_PORT",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLEPORT",
                  "STRAIGHT_2_PORT",
                  "STRAIGHT_3_PORT",
                  "UNSET"
                ]
              },
              "WorkingPressure": {
                "type": "real",
                "Description": "Working pressure."
              }
            }
          },
          "Pset_ValveTypeDrawOffCock": {
            "Properties": {
              "HasHoseUnion": {
                "type": "boolean",
                "Description": "Indicates whether the object is fitted with a hose union connection (= TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_ValveTypeFaucet": {
            "Properties": {
              "FaucetFunction": {
                "type": "PEnum_FaucetFunction",
                "Description": "Defines the operating temperature of a faucet that may be specified.",
                "values": [
                  "COLD",
                  "HOT",
                  "MIXED",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "FaucetOperation": {
                "type": "PEnum_FaucetOperation",
                "Description": "Defines the range of ways in which a faucet can be operated that may be specified where:CeramicDisc: Quick action faucet with a ceramic seal to open or close the orifice\n.\nLeverHandle: Quick action faucet that is operated by a lever handle\n.\nNonConcussiveSelfClosing:    Self closing faucet that does not induce surge pressure\n.\nQuarterTurn: Quick action faucet that can be fully opened or shut by turning the operating mechanism through 90 degrees.\nQuickAction: Faucet that can be opened or closed fully with a single small movement of the operating mechanism\n.\nScrewDown: Faucet in which a plate or disc is moved, by the rotation of a screwed spindle, to close or open the orifice.\nSelfClosing: Faucet that is opened by pressure of the top of an operating spindle and is closed under the action of a spring or weight when the pressure is released.\nTimedSelfClosing:   Self closing faucet that discharges for a predetermined period of time\n.",
                "values": [
                  "CERAMICDISC",
                  "LEVERHANDLE",
                  "NONCONCUSSIVESELFCLOSING",
                  "NOTKNOWN",
                  "OTHER",
                  "QUARTERTURN",
                  "QUICKACTION",
                  "SCREWDOWN",
                  "SELFCLOSING",
                  "TIMEDSELFCLOSING",
                  "UNSET"
                ]
              },
              "FaucetTopDescription": {
                "type": "string",
                "Description": "Description of the operating mechanism/top of the faucet."
              },
              "FaucetType": {
                "type": "PEnum_FaucetType",
                "Description": "Defines the range of faucet types that may be specified where:Bib:     Faucet with a horizontal inlet and a nozzle that discharges downwards.\nGlobe:   Faucet fitted through the end of a bath, with a horizontal inlet, a partially spherical body and a vertical nozzle.\nDiverter:   Combination faucet assembly with a valve to enable the flow of mixed water to be transferred to a showerhead.\nDividedFlowCombination:  Combination faucet assembly in which hot and cold water are kept separate until emerging from a common nozzle\n.\nPillar:  Faucet that has a vertical inlet and a nozzle that discharges downwards\n.\nSingleOutletCombination =    Combination faucet assembly in which hot and cold water mix before emerging from a common nozzle\n.\nSpray:   Faucet with a spray outlet\n.\nSprayMixing:     Spray faucet connected to hot and cold water supplies that delivers water at a temperature determined during use.",
                "values": [
                  "BIB",
                  "DIVERTER",
                  "DIVIDEDFLOWCOMBINATION",
                  "GLOBE",
                  "NOTKNOWN",
                  "OTHER",
                  "PILLAR",
                  "SINGLEOUTLETCOMBINATION",
                  "SPRAY",
                  "SPRAYMIXING",
                  "UNSET"
                ]
              },
              "Finish": {
                "type": "string",
                "Description": "Description of the (surface) finish of the object for informational purposes."
              }
            }
          },
          "Pset_ValveTypeFlushing": {
            "Properties": {
              "FlushingRate": {
                "type": "real",
                "Description": "The predetermined quantity of water to be flushed."
              },
              "HasIntegralShutOffDevice": {
                "type": "boolean",
                "Description": "Indication of whether the flushing valve has an integral shut off device fitted (set TRUE) or not (set FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsHighPressure": {
                "type": "boolean",
                "Description": "Indication of whether the flushing valve is suitable for use on a high pressure water main (set TRUE) or not (set FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_ValveTypeGasTap": {
            "Properties": {
              "HasHoseUnion": {
                "type": "boolean",
                "Description": "Indicates whether the object is fitted with a hose union connection (= TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_ValveTypeIsolating": {
            "Properties": {
              "IsNormallyOpen": {
                "type": "boolean",
                "Description": "If TRUE, the valve is normally open. If FALSE is is normally closed.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsolatingPurpose": {
                "type": "PEnum_IsolatingPurpose",
                "Description": "Defines the purpose for which the isolating valve is used since the way in which the valve is identified as an isolating valve may be in the context of its use. Note that unless there is a contextual name for the isolating valve (as in the case of a Landing Valve on a rising fire main), then the value assigned shoulkd be UNSET.",
                "values": [
                  "LANDING",
                  "LANDINGWITHPRESSUREREGULATION",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ValveTypeMixing": {
            "Properties": {
              "MixerControl": {
                "type": "PEnum_MixingValveControl",
                "Description": "Defines the form of control of the mixing valve.",
                "values": [
                  "MANUAL",
                  "NOTKNOWN",
                  "OTHER",
                  "PREDEFINED",
                  "THERMOSTATIC",
                  "UNSET"
                ]
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the object."
              }
            }
          },
          "Pset_ValveTypePressureReducing": {
            "Properties": {
              "DownstreamPressure": {
                "type": "real",
                "Description": "The operating pressure of the fluid downstream of the pressure reducing valve."
              },
              "UpstreamPressure": {
                "type": "real",
                "Description": "The operating pressure of the fluid upstream of the pressure reducing valve."
              }
            }
          },
          "Pset_ValveTypePressureRelief": {
            "Properties": {
              "ReliefPressure": {
                "type": "real",
                "Description": "The pressure at which the spring or weight in the valve is set to discharge fluid."
              }
            }
          },
          "Qto_ValveBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcActor": {
        "Parent": "IfcObject",
        "Description": "The IfcActor defines all actors or human agents involved in a project during its full life cycle. It facilitates the use of person and organization definitions in the resource part of the IFC object model. This includes name, address, telecommunication addresses, and roles.HISTORY  New entity in IFC2.0",
        "Psets": {
          "Pset_Address": {
            "Properties": {
              "Country": {
                "type": "string",
                "Description": "The two letter country code (from ISO 3166)."
              },
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "InternalLocation": {
                "type": "string",
                "Description": "An organization defined address for internal mail delivery."
              },
              "PagerNumber": {
                "type": "string",
                "Description": ""
              },
              "PostalBox": {
                "type": "string",
                "Description": "An address that is implied by an identifiable mail drop."
              },
              "PostalCode": {
                "type": "string",
                "Description": "The code that is used by the country's postal service."
              },
              "Purpose": {
                "type": "IfcAddressTypeEnum",
                "Description": "Purpose; usually an enumeration.",
                "values": [
                  "DISTRIBUTIONPOINT",
                  "HOME",
                  "OFFICE",
                  "SITE",
                  "USERDEFINED"
                ]
              },
              "Region": {
                "type": "string",
                "Description": "The name of a region.NOTE  The counties of the United Kingdom and the states of North America are examples of regions."
              },
              "Town": {
                "type": "string",
                "Description": "===========The name of a town."
              },
              "UserDefinedPurpose": {
                "type": "string",
                "Description": "Allows for specification of user specific purpose of the address beyond the enumeration values provided by Purpose attribute of type IfcAddressTypeEnum. When a value is provided for attribute UserDefinedPurpose, in parallel the attribute Purpose shall have enumeration value USERDEFINED."
              },
              "WWWHomePageURL": {
                "type": "string",
                "Description": ""
              }
            }
          },
          "Pset_ActorCommon": {
            "Properties": {
              "ActorCategory": {
                "type": "string",
                "Description": "Designation of the category into which the actors in the population belong."
              },
              "NumberOfActors": {
                "type": "integer",
                "Description": "The number of actors that are to be dealt with together in the population."
              },
              "SkillLevel": {
                "type": "string",
                "Description": "Skill level exhibited by the actor and which indicates an extent of their capability to perform actions on the artefacts upon which they can act."
              }
            }
          }
        }
      },
      "IfcContext": {
        "Parent": "IfcObjectDefinition",
        "Description": "IfcContext is the generalization of a project context in which objects, type objects, property sets, and properties are defined. The IfcProject as subtype of IfcContext provides the context for all information on a construction project, it may include one or several IfcProjectLibrary's as subtype of IfcContext to register the included libraries for the project. A library of products that is referenced is declared within the IfcProjectLibrary as the context of that library.Context definitions can be named, using the inherited Name attribute, which should be a user recognizable key or number for the context. The LongName can add a full name. Further explanations to the context can be given using the inherited Description attribute.A Context is declared by the relationship object IfcRelDeclares that refers to the corresponding objects within the context. More specific relationships are introduced at the level of subtypes.HISTORY  New abstract entity in IFC4.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": null
              },
              "ObjectType": {
                "type": "string",
                "Description": null
              },
              "Phase": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcControl": {
        "Parent": "IfcObject",
        "Description": "IfcControl is the abstract generalization of all concepts that control or constrain the utilization of products, processes, or resources in general. It can be seen as a regulation, cost schedule, request or order, or other requirements applied to a product, process or resource whose requirements and provisions must be fulfilled.EXAMPLE  Controls include action requests, cost schedules, project orders, work plans, and work calendars.\nHISTORY  New entity in IFC1.0.{ .change-ifc2x4}IFC4 CHANGE  Attribute Identification added.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "Identification": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcGroup": {
        "Parent": "IfcObject",
        "Description": "IfcGroup is an generalization of any arbitrary group. A group is a logical collection of objects. It does not have its own position, nor can it hold its own shape representation. Therefore a group is an aggregation under some non-geometrical / topological grouping aspects.EXAMPLE  An example for a group is a system, since it groups elements under the aspect of their role, regardless of their position in a building. One of the most important usage of a group representing a system is the IfcDistributionSystem, that groups distribution components, such as space heaters and valves into a heating system.A group can hold any collection of objects, the relationship IfcRelAssignsToGroup is used to establish the group collection. Objects within a group are\u00a0products, processes, controls, resources, actors or other groups, thus groups can be nested. An object can be part of zero, one, or many groups. Grouping relationships are not required to be hierarchical nor do they imply a dependency.Groups are assigned to other objects (such as a process or a resource) by the relationship object that refers to the corresponding object:Process: assigned using IfcRelAssignsToProcess\nResource: assigned using IfcRelAssignsToResource\nControls: affecting the group using IfcRelAssignsToControlA group can be exchanged without having already objects within the group collection.IfcGroup does not define an own object coordinate system, nor does it have an independent shape representation.NOTE  Use IfcRelAggregates together with the appropriate subtypes of IfcProduct to define an aggregation of products that may have its own position and shape representation. This relationship shall be used to create a product breakdown structure.\nHISTORY  New entity in IFC1.0.{ .change-ifc2x4}IFC4 CHANGE  The inverse IsGroupedBy relationship is set to 0..n",
        "Psets": {
          "Pset_Risk": {
            "Properties": {
              "AssociatedActivity": {
                "type": "string",
                "Description": "An indication or link to any associated activity or process that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "AssociatedLocation": {
                "type": "string",
                "Description": "An indication or link to any associated location or space that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "AssociatedProduct": {
                "type": "string",
                "Description": "An indication or link to any associated product or material that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "MitigatedRiskConsequence": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the consequence of the hazard given the planned mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigatedRiskLikelihood": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the likelihood of the hazard given the planned mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigatedRiskSignificance": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the signifiance of the risk given the mitigation of likelihood and consequence.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigationPlanned": {
                "type": "string",
                "Description": "The planned (agreed and irrevocable) mitigation of the likelhood and consequences of the hazard."
              },
              "MitigationProposed": {
                "type": "string",
                "Description": "Any proposed, but not yet agreed and irrevocable, mitigation of the likelhood and consequences of the hazard."
              },
              "NatureOfRisk": {
                "type": "string",
                "Description": "A description of the generic nature of the context or hazard that might be encountered."
              },
              "RiskAssessmentMethodology": {
                "type": "string",
                "Description": "An indication or link to the chosen risk assessment methodology, for example PAS1192-6 or a chosen ISO13100 annex."
              },
              "RiskName": {
                "type": "string",
                "Description": "A locally unique identifier for the risk entry that can be used to track the development and mitiagtion of the risk throughout the project life cycle"
              },
              "RiskType": {
                "type": "PEnum_RiskType",
                "Description": "Identifies the predefined types of risk from which the type required may be set.",
                "values": [
                  "ASBESTOSEFFECTS",
                  "ASPHIXIATION",
                  "BUSINESS",
                  "BUSINESSISSUES",
                  "CHEMICALEFFECTS",
                  "COMMERICALISSUES",
                  "CONFINEMENT",
                  "CRUSHING",
                  "DROWNINGANDFLOODING",
                  "ELECTRICSHOCK",
                  "ENVIRONMENTALISSUES",
                  "EVENT",
                  "FALL",
                  "FALL_LADDER",
                  "FALLEDGE",
                  "FALLFRAGILEMATERIAL",
                  "FALLSCAFFOLD",
                  "FIRE_EXPLOSION",
                  "HANDLING",
                  "HAZARD",
                  "HAZARDOUSDUST",
                  "HEALTHANDSAFETY",
                  "HEALTHISSUE",
                  "INSURANCE",
                  "INSURANCE_ISSUES",
                  "LEADEFFECTS",
                  "MACHINERYGUARDING",
                  "MATERIALEFFECTS",
                  "MATERIALSHANDLING",
                  "MECHANICAL_LIFTING",
                  "MECHANICALEFFECTS",
                  "MOBILE_ELEVATEDWORKPLATFORM",
                  "NOISE_EFFECTS",
                  "NOTKNOWN",
                  "OPERATIONALISSUES",
                  "OTHER",
                  "OTHERISSUES",
                  "OVERTURINGPLANT",
                  "PUBLICPROTECTIONISSUES",
                  "SAFETYISSUE",
                  "SILICADUST",
                  "SLIPTRIP",
                  "SOCIALISSUES",
                  "STRUCK",
                  "STRUCKFALLINFOBJECT",
                  "STRUCKVEHICLE",
                  "TOOLUSAGE",
                  "TRAPPED",
                  "UNINTENDEDCOLLAPSE",
                  "UNSET",
                  "VIBRATION",
                  "WELFAREISSUE",
                  "WOODDUST",
                  "WORKINGOVERHEAD"
                ]
              },
              "UnmitigatedRiskConsequence": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the consequence of the hazard prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "UnmitigatedRiskLikelihood": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the likelihood of the hazard prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "UnmitigatedRiskSignificance": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the signifiance of the risk given the likelihood and consequence prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              }
            }
          }
        }
      },
      "IfcObject": {
        "Parent": "IfcObjectDefinition",
        "Description": "An IfcObject is the generalization of any semantically treated thing or process. Objects are things as they appear - i.e. occurrences.NOTE  Examples of IfcObject include physically tangible items such as wall, beam or covering, physically existing items such as spaces, or conceptual items such as grids or virtual boundaries. It also stands for processes such as work tasks, for controls such as cost items, or for actors such as persons involved in the design process.Objects can be named, using the inherited Name attribute, which should be a user recognizable label for the object occurrence. Further explanations to the object can be given using the inherited Description attribute. The ObjectType attribute is used:to store the user defined value for all subtypes of IfcObject, where a PredefinedType attribute is given, and its value is set to USERDEFINED.\nto provide a type information (could be seen as a very lightweight classifier) of the subtype of IfcObject, if no PredefinedType attribute is given. This is often the case, if no comprehensive list of predefined types is available.Objects are independent pieces of information that might contain or reference other pieces of information. There are several relationships in which objects can be involved:Association to external/internal resource information - an association relationship that refers to external/internal sources of information. See supertype IfcObjectDefinition for more information.\nAssignment of other objects - an assignment relationship that refers to other types of objects. See supertype IfcObjectDefinition for more information.\nAggregation of other objects - an aggregation relationship that establishes a whole/part relation. Objects can either be a whole, or a part, or both. See supertype IfcObjectDefinition for more information.\nAssignment of a type : IsTypedBy - a definition relationship IfcRelDefinesByType that uses a type definition to define the common characteristics of this occurrences, potentially including the common shape representation and common properties of all object occurrences assigned to this type. It is a specific - occurrence relationship with implied dependencies (as the occurrence properties depend on the properties of the type, but may override them).\nAssignment of a partial type : IsDeclaredBy, Declares - a definition relationship IfcRelDefinesByObject that uses a component of a type definition (a part of a type, called the \"declaring part\") to define a component of an occurence (part of occurrence, called the \"reflected part\"). This is also referred to as a \"deep copy\". The common characteristics of all parts in the occurrence are defined by parts in the type. It is a specific - occurrence relationship with implied dependencies (as the occurrence properties depend on the properties of the type, but may override them).\nAssignment of property sets : IsDefinedBy - a definition relationship IfcRelDefinesByProperties that assigns property set definitions to the object occurrence.NOTE  See IfcRelDefinesByType for an explanatory figure. Also see there for how to override type properties by occurrence properties. See IfcRelDefinesByObject for an explanatory figure for the assignment of a partial type.\nHISTORY  New entity in IFC1.0{ .change-ifc2x4}IFC4 CHANGE  The inverse relationships Declares, IsDeclaredBy, and IsTypedBy have been added, types are not longer included in the IsDefinesBy relationship. IfcProject has been promoted to be a subtype of IfcObjectDefinition -> IfcContext.{ .spec-head}\nInformal Propositions:A partial type assignment, i.e. the inverse attribute IsDeclaredBy, or Declares shall only be used, if the object is part of a decomposition, i.e. if either IsDecomposedBy, or Decomposes is exerted.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "ObjectType": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcObjectDefinition": {
        "Parent": "IfcRoot",
        "Description": "An IfcObjectDefinition is the generalization of any semantically treated thing or process, either being a type or an occurrences. Object definitions can be named, using the inherited Name attribute, which should be a user recognizable label for the object occurrence. Further explanations to the object can be given using the inherited Description attribute. A context is a specific kind of object definition as it provides the project or library context in which object types and object occurrences are defined.Objects are independent pieces of information that might contain or reference other pieces of information. There are four essential kinds of relationships in which object definitions (by their instantiable subtypes) can be involved:Assignment of other objects - an assignment relationship (IfcRelAssigns) that refers to other types of objects and creates a bi-directional association. The semantic of the assignment is established at the level of the subtypes of the general IfcRelAssigns relationship. There is no dependency implied a priori by the assignment.\nAssociation to external resources - an association relationship (IfcRelAssociates) that refers to external sources of information (most notably a classification or document) and creates a uni-directional association. There is no dependency implied by the association.\nAggregation of other objects - an aggregation relationship (IfcRelAggregates) that establishes an unordered, spatial whole/part relation and creates a bi-directional relation. There is an implied dependency established.\nNesting of other objects - a nesting relationship (IfcRelNests) that establishes an ordered, non-spatial whole/part relation and creates a bi-directional relation. There is an implied dependency established.\nDeclaration within a context - a relationship (IfcRelDeclares) of the uppermost object definition within the object definition tree (e.g. the summary object within an object nesting tree) to the context (a project or project library). It applies the units, representation context and other context information to this object definition and all dependent ones.NOTE  The link between the uppermost object in the spatial structure tree, that is IfcSite or ifcBuilding, and the context provided by IfcProject is created using the IfcRelAggregates relationship. See IfcProject for more information.\nHISTORY  New abstract entity in IFC2x3.{ .change-ifc2x4}IFC4 CHANGE The new subtype IfcContext and the relationship to context HasContext has been added . The decomposition relationship is split into ordered nesting (Nests, IsNestedBy) and un-ordered aggregating (Decomposes, IsDecomposedBy)."
      },
      "IfcProcess": {
        "Parent": "IfcObject",
        "Description": "IfcProcess is defined as one individual activity or event, that is ordered in time, that has sequence relationships with other processes, which transforms input in output, and may connect to other other processes through input output relationships. An IfcProcess can be an activity (or task), or an event. It takes usually place in building construction with the intent of designing, costing, acquiring, constructing, or maintaining products or other and similar tasks or procedures. Figure 1 illustrates process relationships.{ .extDef}NOTE  Definition according to ISO9000:\nA process is a set of activities that are interrelated or that interact with one another. Processes use resources to transform inputs into outputs. Processes are interconnected because the output from one process becomes the input for another process. In effect, processes are \"glued\" together by means of such input output relationships.Process information relates to other objects by establishing the following relationships:Nesting of processes : IfcRelNests - A process can contain sub processes and thereby be nested.\nSequencing of processes : IfcRelSequence - Processes can be placed in sequence (including overlapping for parallel tasks), and have predecessors and successors.\nAssigning process to schedules : IfcRelAssignsToControl - Activities such as tasks, and predominately summary tasks, are assigned to a work schedule.\nHaving a product assigned to the process as input : IfcRelAssignsToProcess - Products can be assigned as input to a process, such as for construction process planning.\nHaving a product assigned to the process as output : IfcRelAssignsToProduct - Products can be assigned as output to a process, such as for construction process planning.\nHaving a control assigned to the process as process control : IfcRelAssignsToProcess - Items that act as a control onto the process can be assigned to a process, such as for cost management (a cost item assigned to a work task).\nHaving a resource assigned to the process as consumed by the process : IfcRelAssignsToProcess - Items that act as a mechanism to a process, such as labor, material and equipment in cost calculations.HISTORY  New entity in IFC1.0.{ .change-ifc2x}IFC2x CHANGE  The attribute Productivity has been removed.{ .change-ifc2x4}IFC4 CHANGE  The attribute Identification has been promoted from subtypes IfcTask and others.",
        "Psets": {
          "Pset_Risk": {
            "Properties": {
              "AssociatedActivity": {
                "type": "string",
                "Description": "An indication or link to any associated activity or process that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "AssociatedLocation": {
                "type": "string",
                "Description": "An indication or link to any associated location or space that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "AssociatedProduct": {
                "type": "string",
                "Description": "An indication or link to any associated product or material that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "MitigatedRiskConsequence": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the consequence of the hazard given the planned mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigatedRiskLikelihood": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the likelihood of the hazard given the planned mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigatedRiskSignificance": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the signifiance of the risk given the mitigation of likelihood and consequence.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigationPlanned": {
                "type": "string",
                "Description": "The planned (agreed and irrevocable) mitigation of the likelhood and consequences of the hazard."
              },
              "MitigationProposed": {
                "type": "string",
                "Description": "Any proposed, but not yet agreed and irrevocable, mitigation of the likelhood and consequences of the hazard."
              },
              "NatureOfRisk": {
                "type": "string",
                "Description": "A description of the generic nature of the context or hazard that might be encountered."
              },
              "RiskAssessmentMethodology": {
                "type": "string",
                "Description": "An indication or link to the chosen risk assessment methodology, for example PAS1192-6 or a chosen ISO13100 annex."
              },
              "RiskName": {
                "type": "string",
                "Description": "A locally unique identifier for the risk entry that can be used to track the development and mitiagtion of the risk throughout the project life cycle"
              },
              "RiskType": {
                "type": "PEnum_RiskType",
                "Description": "Identifies the predefined types of risk from which the type required may be set.",
                "values": [
                  "ASBESTOSEFFECTS",
                  "ASPHIXIATION",
                  "BUSINESS",
                  "BUSINESSISSUES",
                  "CHEMICALEFFECTS",
                  "COMMERICALISSUES",
                  "CONFINEMENT",
                  "CRUSHING",
                  "DROWNINGANDFLOODING",
                  "ELECTRICSHOCK",
                  "ENVIRONMENTALISSUES",
                  "EVENT",
                  "FALL",
                  "FALL_LADDER",
                  "FALLEDGE",
                  "FALLFRAGILEMATERIAL",
                  "FALLSCAFFOLD",
                  "FIRE_EXPLOSION",
                  "HANDLING",
                  "HAZARD",
                  "HAZARDOUSDUST",
                  "HEALTHANDSAFETY",
                  "HEALTHISSUE",
                  "INSURANCE",
                  "INSURANCE_ISSUES",
                  "LEADEFFECTS",
                  "MACHINERYGUARDING",
                  "MATERIALEFFECTS",
                  "MATERIALSHANDLING",
                  "MECHANICAL_LIFTING",
                  "MECHANICALEFFECTS",
                  "MOBILE_ELEVATEDWORKPLATFORM",
                  "NOISE_EFFECTS",
                  "NOTKNOWN",
                  "OPERATIONALISSUES",
                  "OTHER",
                  "OTHERISSUES",
                  "OVERTURINGPLANT",
                  "PUBLICPROTECTIONISSUES",
                  "SAFETYISSUE",
                  "SILICADUST",
                  "SLIPTRIP",
                  "SOCIALISSUES",
                  "STRUCK",
                  "STRUCKFALLINFOBJECT",
                  "STRUCKVEHICLE",
                  "TOOLUSAGE",
                  "TRAPPED",
                  "UNINTENDEDCOLLAPSE",
                  "UNSET",
                  "VIBRATION",
                  "WELFAREISSUE",
                  "WOODDUST",
                  "WORKINGOVERHEAD"
                ]
              },
              "UnmitigatedRiskConsequence": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the consequence of the hazard prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "UnmitigatedRiskLikelihood": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the likelihood of the hazard prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "UnmitigatedRiskSignificance": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the signifiance of the risk given the likelihood and consequence prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Identification": {
                "type": "string",
                "Description": null
              },
              "LongDescription": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcProduct": {
        "Parent": "IfcObject",
        "Description": "The IfcProduct is an abstract representation of any object that relates to a geometric or spatial context. An IfcProduct occurs at a specific location in space if it has a geometric representation assigned. It can be placed relatively to other products, but ultimately relative to the project coordinate system. The ObjectPlacement attribute establishes the coordinate system in which all points and directions used by the geometric representation items under Representation are founded. The Representation is provided by an IfcProductDefinitionShape being either a geometric shape representation, or a topology representation (with or without underlying geometry of the topological items).Products include manufactured, supplied or created objects (referred to as elements) for incorporation into an AEC/FM project. This also includes objects that are created indirectly by other products, as spaces are defined by bounding elements. Products can be designated for permanent use or temporary use, an example for the latter is formwork. Products are defined by their properties and representations.In addition to physical products (covered by the subtype IfcElement) and spatial items (covered by the subtype IfcSpatialElement) the IfcProduct also includes non-physical items, that relate to a geometric or spatial contexts, such as grid, port, annotation, structural actions, etc.Any instance of IfcProduct defines a particular occurrence of a product, the common type information, that relates to many similar (or identical) occurrences of IfcProduct, is handled by the IfcTypeProduct (and its subtypes), assigned to one or many occurrences of IfcProduct by using the objectified relationship IfcRelDefinesByType. The IfcTypeProduct may provide, in addition to common properties, also a common geometric representation for all occurrences.NOTE  See IfcTypeProduct for how to use a common geometric representation and IfcRelDefinesByType for using and overriding common properties.On a generic level products can be assigned to processes, controls, resources, project by using the relationship objects that refer to the corresponding object:Having a control applied: assigned using IfcRelAssignsToControl linking the IfcProduct to an IfcControl\nBeing assigned to a process: assigned using IfcRelAssignsToProcess linking the IfcProduct to an IfcProcess\nBeing assigned to a resource: assigned using IfcRelAssignsToResource linking the IfcProduct to an IfcResourceEXAMPLE  An example of the control relationship is the assignment of a performance history to a distribution element. An example of process assignment relationship is the assignment of products like wall, slab, column to a construction task for construction planning. And an example of resource assignment relationship is the assignment of products to a construction resource that consumes the product.\nHISTORY  New entity in IFC1.0",
        "Psets": {
          "Pset_Tolerance": {
            "Properties": {
              "ElevationalFlatness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range flatness associated to the elevational surface in ZX, if different to the overall flatness."
              },
              "HorizontalFlatness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range flatness associated to the horizontal surface in XY, if different to the overall flatness."
              },
              "HorizontalOrthogonality": {
                "type": "real",
                "Description": "Indicative (95%-100%) range orthogonality associated to the horizontal shape and orientation in X, if different to the overall orthogonality."
              },
              "HorizontalStraightness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range straightness  associated to the horizontal shape in X, if different to the overall straightness."
              },
              "HorizontalTolerance": {
                "type": "real",
                "Description": "Indicative (95%-100%) range tolerance associated to the horizontal shape and position in X, if different to the overall tolerance."
              },
              "OrthogonalOrthogonality": {
                "type": "real",
                "Description": "Indicative (95%-100%) range orthogonality associated to the horizontal shape and orientation in Y, if different to the overall orthogonality."
              },
              "OrthogonalStraightness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range straightness  associated to the horizontal shape  in Y, if different to the overall straightness."
              },
              "OrthogonalTolerance": {
                "type": "real",
                "Description": "Indicative (95%-100%) range tolerance associated to the horizontal shape and position in Y, if different to the overall tolerance."
              },
              "OverallOrthogonality": {
                "type": "real",
                "Description": "Indicative (95%-100%) range orthogonality associated to the intended shape and orientation in XYZ."
              },
              "OverallStraightness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range straightness associated to the intended shape."
              },
              "OverallTolerance": {
                "type": "real",
                "Description": "Indicative (95%-100%) range tolerance associated to the intended shape and position in XYZ."
              },
              "PlanarFlatness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range flatness associated to the intended shape and position in XYZ."
              },
              "SideFlatness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range flatness associated to the side surface in YZ, if different to the overall flatness."
              },
              "ToleranceBasis": {
                "type": "PEnum_ToleranceBasis",
                "Description": "Indication of the basis of the tolerance requirement",
                "values": [
                  "APPEARANCE",
                  "ASSEMBLY",
                  "DEFLECTION",
                  "EXPANSION",
                  "FUNCTIONALITY",
                  "NOTKNOWN",
                  "OTHER",
                  "SETTLEMENT",
                  "STRUCTURAL",
                  "UNSET"
                ]
              },
              "ToleranceDescription": {
                "type": "string",
                "Description": "General description of the tolerance associated to the element or feature, its source and implications."
              },
              "VerticalOrthogonality": {
                "type": "real",
                "Description": "Indicative (95%-100%) range orthogonality associated to the vertical shape and orientation in Z, if different to the overall orthogonality."
              },
              "VerticalStraightness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range straightness associated to the vertical shape in Z, if different to the overall straightness."
              },
              "VerticalTolerance": {
                "type": "real",
                "Description": "Indicative (95%-100%) range tolerance associated to the vertical shape and position in Z, if different to the overall tolerance."
              }
            }
          },
          "Pset_Uncertainty": {
            "Properties": {
              "HorizontalUncertainty": {
                "type": "real",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in X, if different to the linear uncertainty."
              },
              "LinearUncertainty": {
                "type": "real",
                "Description": "Indicative (95%-100%) range diameter associated to the overall shape and position in XYZ."
              },
              "OrthogonalUncertainty": {
                "type": "real",
                "Description": "Indicative (95%-100%) range diameter associated to the horizontal shape and position in Y, if different to the horizontal uncertainty."
              },
              "UncertaintyBasis": {
                "type": "PEnum_UncertaintyBasis",
                "Description": "Indication of the basis of the uncertainty",
                "values": [
                  "ASSESSMENT",
                  "ESTIMATE",
                  "INTERPRITATION",
                  "MEASUREMENT",
                  "NOTDEFINED",
                  "NOTKNOWN",
                  "OBSERVATION",
                  "USERDEFINED"
                ]
              },
              "UncertaintyDescription": {
                "type": "string",
                "Description": "General description of the uncertainty associated to the element or feature, its source and implications."
              },
              "VerticalUncertainty": {
                "type": "real",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in Z, if different to the linear uncertainty."
              }
            }
          },
          "Pset_Risk": {
            "Properties": {
              "AssociatedActivity": {
                "type": "string",
                "Description": "An indication or link to any associated activity or process that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "AssociatedLocation": {
                "type": "string",
                "Description": "An indication or link to any associated location or space that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "AssociatedProduct": {
                "type": "string",
                "Description": "An indication or link to any associated product or material that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "MitigatedRiskConsequence": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the consequence of the hazard given the planned mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigatedRiskLikelihood": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the likelihood of the hazard given the planned mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigatedRiskSignificance": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the signifiance of the risk given the mitigation of likelihood and consequence.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigationPlanned": {
                "type": "string",
                "Description": "The planned (agreed and irrevocable) mitigation of the likelhood and consequences of the hazard."
              },
              "MitigationProposed": {
                "type": "string",
                "Description": "Any proposed, but not yet agreed and irrevocable, mitigation of the likelhood and consequences of the hazard."
              },
              "NatureOfRisk": {
                "type": "string",
                "Description": "A description of the generic nature of the context or hazard that might be encountered."
              },
              "RiskAssessmentMethodology": {
                "type": "string",
                "Description": "An indication or link to the chosen risk assessment methodology, for example PAS1192-6 or a chosen ISO13100 annex."
              },
              "RiskName": {
                "type": "string",
                "Description": "A locally unique identifier for the risk entry that can be used to track the development and mitiagtion of the risk throughout the project life cycle"
              },
              "RiskType": {
                "type": "PEnum_RiskType",
                "Description": "Identifies the predefined types of risk from which the type required may be set.",
                "values": [
                  "ASBESTOSEFFECTS",
                  "ASPHIXIATION",
                  "BUSINESS",
                  "BUSINESSISSUES",
                  "CHEMICALEFFECTS",
                  "COMMERICALISSUES",
                  "CONFINEMENT",
                  "CRUSHING",
                  "DROWNINGANDFLOODING",
                  "ELECTRICSHOCK",
                  "ENVIRONMENTALISSUES",
                  "EVENT",
                  "FALL",
                  "FALL_LADDER",
                  "FALLEDGE",
                  "FALLFRAGILEMATERIAL",
                  "FALLSCAFFOLD",
                  "FIRE_EXPLOSION",
                  "HANDLING",
                  "HAZARD",
                  "HAZARDOUSDUST",
                  "HEALTHANDSAFETY",
                  "HEALTHISSUE",
                  "INSURANCE",
                  "INSURANCE_ISSUES",
                  "LEADEFFECTS",
                  "MACHINERYGUARDING",
                  "MATERIALEFFECTS",
                  "MATERIALSHANDLING",
                  "MECHANICAL_LIFTING",
                  "MECHANICALEFFECTS",
                  "MOBILE_ELEVATEDWORKPLATFORM",
                  "NOISE_EFFECTS",
                  "NOTKNOWN",
                  "OPERATIONALISSUES",
                  "OTHER",
                  "OTHERISSUES",
                  "OVERTURINGPLANT",
                  "PUBLICPROTECTIONISSUES",
                  "SAFETYISSUE",
                  "SILICADUST",
                  "SLIPTRIP",
                  "SOCIALISSUES",
                  "STRUCK",
                  "STRUCKFALLINFOBJECT",
                  "STRUCKVEHICLE",
                  "TOOLUSAGE",
                  "TRAPPED",
                  "UNINTENDEDCOLLAPSE",
                  "UNSET",
                  "VIBRATION",
                  "WELFAREISSUE",
                  "WOODDUST",
                  "WORKINGOVERHEAD"
                ]
              },
              "UnmitigatedRiskConsequence": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the consequence of the hazard prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "UnmitigatedRiskLikelihood": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the likelihood of the hazard prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "UnmitigatedRiskSignificance": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the signifiance of the risk given the likelihood and consequence prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              }
            }
          }
        }
      },
      "IfcProject": {
        "Parent": "IfcContext",
        "Description": "IfcProject indicates the undertaking of some design, engineering, construction, or maintenance activities leading towards a product. The project establishes the context for information to be exchanged or shared, and it may represent a construction project but does not have to. The IfcProject's main purpose in an exchange structure is to provide the root instance and the context for all other information items included.The context provided by the IfcProject includes:the default units\nthe geometric representation context for exchange structures including shape representations\nthe project coordinate system\nthe coordinate space dimension\nthe precision used within the geometric representations\noptionally the indication of the true north\noptionally the map conversion between the project coordinate system and the geospatial coordinate reference system.HISTORY  New entity in IFC1.0{ .change-ifc2x4}IFC4 CHANGE  The attributes RepresentationContexts and UnitsInContext are made optional and are promoted to supertype IfcContext.{ .spec-head}\nInformal Propositions:There shall only be one project within the exchange context. This is enforced by the global rule IfcSingleProjectInstance.",
        "Psets": {
          "Pset_ProjectCommon": {
            "Properties": {
              "FundingSource": {
                "type": "string",
                "Description": "Investment funding source"
              },
              "PaybackPeriod": {
                "type": "string",
                "Description": "Payback period of investment"
              },
              "ProjectType": {
                "type": "PEnum_ProjectType",
                "Description": "Additional typing of a project",
                "values": [
                  "MODIFICATION",
                  "NEWBUILD",
                  "OPERATIONMAINTENANCE",
                  "RENOVATION",
                  "REPAIR"
                ]
              },
              "ROI": {
                "type": "real",
                "Description": "Return on Investment"
              }
            }
          }
        }
      },
      "IfcResource": {
        "Parent": "IfcObject",
        "Description": "IfcResource contains the information needed to represent the costs, schedule, and other impacts from the use of a thing in a process. It is not intended to use IfcResource to model the general properties of the things themselves, while an optional linkage from IfcResource to the things to be used can be specified (specifically, the relationship from subtypes of IfcResource to IfcProduct through the IfcRelAssignsToResource relationship).There are two basic intended uses of IfcResource. First, if the attributes of the thing are not needed for the purpose of the use of IfcResource, or the types of things are not explicitly modeled in IFC yet, then the linkage between the resource and the thing doesn't have to be instantiated in the system. That is, the attributes of IfcResource (or its subtypes) alone are sufficient to represent the use of the thing as a resource for the purpose of the project.EXAMPLE  construction equipment such as earth-moving vehicles or tools are not currently modeled within the IFC. For the purpose of estimating and scheduling, these can be represented using subtypes of IfcResource alone.Second, if the attributes of the thing are needed for the use of IfcResource objects, and they are modeled explicitly as objects, then the IfcResource instances can be linked to the instances of the type of the things being referenced. Things that might be used as resources and that are already modeled in the IFC include physical products, people and organizations, and materials. The relationship object IfcRelAssignsToResource is provided for this approach.The inherited attribute ObjectType is used as a textual code that identifies the resource type.HISTORY  New entity in IFC1.0{ .change-ifc2x}IFC2x CHANGE  The attributes BaseUnit and ResourceConsumption have been removed from the abstract entity; they are reintroduced at a lower level in the hierarchy.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "Identification": {
                "type": "string",
                "Description": null
              },
              "LongDescription": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcRoot": {
        "Description": "IfcRoot is the most abstract and root class for all entity definitions that roots in the kernel or in subsequent layers of the IFC specification. It is therefore the common supertype of all IFC entities, beside those defined in an IFC resource schema. All entities that are subtypes of IfcRoot can be used independently, whereas resource schema entities, that are not subtypes of IfcRoot, are not supposed to be independent entities.NOTE  View definitions and implementation agreement may impose additional restrictions on the use of the OwnerHistory to handle object versioning.\nHISTORY  New entity in IFC1.0{ .change-ifc2x4}IFC4 CHANGE  The attribute OwnerHistory has been made OPTIONAL.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": null
              },
              "GlobalId": {
                "type": "string",
                "Description": null
              },
              "Name": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcTypeObject": {
        "Parent": "IfcObjectDefinition",
        "Description": "The object type defines the specific information about a type, being common to all occurrences of this type. It refers to the specific level of the well recognized generic - specific - occurrence modeling paradigm. The IfcTypeObject gets assigned to the individual object instances (the occurrences) via the IfcRelDefinesByType relationship.NOTE  The terms 'Type' and 'Style' are often used interchangeably.The object type is represented by a set of property set definitions. The attached property sets describe the available alpha-numeric information about the object type. and are used to define all common properties that apply to all object occurrences of that type.NOTE  If a property having having the same name is used within the IfcPropertySet assigned to an IfcTypeObject (and subtypes) and to an occurrence of that type, then the occurrence property overrides the type property. See IfcRelDefinesByType for an explanatory figure.Object types may be exchanged without being already assigned to objects. An object type may have an indication of the library (or catalogue) from which its definition originates. This association is handled by the inherited HasAssociations relationship pointing to IfcRelAssociatesLibrary.HISTORY  New entity in IFC2x{ .change-ifc2x3}IFC2x3 CHANGE  The IfcTypeObject is now subtyped from the new supertype IfcObjectDefinition, and the attribute HasPropertySets has been changed from a LIST into a SET.{ .change-ifc2x4}IFC4 CHANGE  The entity IfcTypeObject shall not be instantiated from IFC4 onwards. It will be changed into an ABSTRACT supertype in future releases of IFC. The inverse attribute Types has been renamed from ObjectTypeOf.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "ApplicableOccurrence": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcTypeProcess": {
        "Parent": "IfcTypeObject",
        "Description": "IfcTypeProcess defines a specific (or type) definition of a process or activity without being assigned to a schedule or a time.\u00a0It is used to define a process or activity specification, that is, the specific process or activity information that is common to all occurrences that are defined for that process or activity type.An IfcTypeProcess may have a list of property set attached. Values of these properties are common to all occurrences of that process or activity type. The type occurrence relationship is realized using the objectified relationship IfcRelDefinesByType.Subtypes of IfcTypeProcess may be exchanged without being already assigned to subtypes of IfcProcess.HISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_Risk": {
            "Properties": {
              "AssociatedActivity": {
                "type": "string",
                "Description": "An indication or link to any associated activity or process that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "AssociatedLocation": {
                "type": "string",
                "Description": "An indication or link to any associated location or space that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "AssociatedProduct": {
                "type": "string",
                "Description": "An indication or link to any associated product or material that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "MitigatedRiskConsequence": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the consequence of the hazard given the planned mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigatedRiskLikelihood": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the likelihood of the hazard given the planned mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigatedRiskSignificance": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the signifiance of the risk given the mitigation of likelihood and consequence.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigationPlanned": {
                "type": "string",
                "Description": "The planned (agreed and irrevocable) mitigation of the likelhood and consequences of the hazard."
              },
              "MitigationProposed": {
                "type": "string",
                "Description": "Any proposed, but not yet agreed and irrevocable, mitigation of the likelhood and consequences of the hazard."
              },
              "NatureOfRisk": {
                "type": "string",
                "Description": "A description of the generic nature of the context or hazard that might be encountered."
              },
              "RiskAssessmentMethodology": {
                "type": "string",
                "Description": "An indication or link to the chosen risk assessment methodology, for example PAS1192-6 or a chosen ISO13100 annex."
              },
              "RiskName": {
                "type": "string",
                "Description": "A locally unique identifier for the risk entry that can be used to track the development and mitiagtion of the risk throughout the project life cycle"
              },
              "RiskType": {
                "type": "PEnum_RiskType",
                "Description": "Identifies the predefined types of risk from which the type required may be set.",
                "values": [
                  "ASBESTOSEFFECTS",
                  "ASPHIXIATION",
                  "BUSINESS",
                  "BUSINESSISSUES",
                  "CHEMICALEFFECTS",
                  "COMMERICALISSUES",
                  "CONFINEMENT",
                  "CRUSHING",
                  "DROWNINGANDFLOODING",
                  "ELECTRICSHOCK",
                  "ENVIRONMENTALISSUES",
                  "EVENT",
                  "FALL",
                  "FALL_LADDER",
                  "FALLEDGE",
                  "FALLFRAGILEMATERIAL",
                  "FALLSCAFFOLD",
                  "FIRE_EXPLOSION",
                  "HANDLING",
                  "HAZARD",
                  "HAZARDOUSDUST",
                  "HEALTHANDSAFETY",
                  "HEALTHISSUE",
                  "INSURANCE",
                  "INSURANCE_ISSUES",
                  "LEADEFFECTS",
                  "MACHINERYGUARDING",
                  "MATERIALEFFECTS",
                  "MATERIALSHANDLING",
                  "MECHANICAL_LIFTING",
                  "MECHANICALEFFECTS",
                  "MOBILE_ELEVATEDWORKPLATFORM",
                  "NOISE_EFFECTS",
                  "NOTKNOWN",
                  "OPERATIONALISSUES",
                  "OTHER",
                  "OTHERISSUES",
                  "OVERTURINGPLANT",
                  "PUBLICPROTECTIONISSUES",
                  "SAFETYISSUE",
                  "SILICADUST",
                  "SLIPTRIP",
                  "SOCIALISSUES",
                  "STRUCK",
                  "STRUCKFALLINFOBJECT",
                  "STRUCKVEHICLE",
                  "TOOLUSAGE",
                  "TRAPPED",
                  "UNINTENDEDCOLLAPSE",
                  "UNSET",
                  "VIBRATION",
                  "WELFAREISSUE",
                  "WOODDUST",
                  "WORKINGOVERHEAD"
                ]
              },
              "UnmitigatedRiskConsequence": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the consequence of the hazard prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "UnmitigatedRiskLikelihood": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the likelihood of the hazard prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "UnmitigatedRiskSignificance": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the signifiance of the risk given the likelihood and consequence prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Identification": {
                "type": "string",
                "Description": null
              },
              "LongDescription": {
                "type": "string",
                "Description": null
              },
              "ProcessType": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcTypeProduct": {
        "Parent": "IfcTypeObject",
        "Description": "IfcTypeProduct defines a type definition of a product without being already inserted into a project structure (without having a placement), and not being included in the geometric representation context of the project.\u00a0It is used to define a product specification, that is, the specific product information that is common to all occurrences of that product type.An IfcTypeProduct may have a list of property set attached and an optional set of product representations. Values of these properties and the representation maps are common to all occurrences\u00a0of that product type.\u00a0The type-occurrence relationship is realized using the objectified relationship IfcRelDefinesByType.NOTE  The product representations are defined as representation maps, which may be assigned by a product instance through the representation item(s) being an IfcShapeRepresentation and having Items of type\u00a0IfcMappedItem.The representations at the occurrence level (represented by subtypes of IfcProduct) can override the specific representations at the type level:for geometric representations, a Cartesian transformation operator can be applied at the occurrence level.\nfor property sets, a property within an occurrence property set, assigned at the product occurrence, overrides the same property assigned to the product type.An IfcTypeProduct may be exchanged without being already assigned to subtypes of IfcProduct.HISTORY  New entity in IFC2x.{ .change-ifc2x4}IFC4 CHANGE  The entity IfcTypeProduct shall not be instantiated from IFC4 onwards. It will be changed into an ABSTRACT supertype in future releases of IFC.",
        "Psets": {
          "Pset_Tolerance": {
            "Properties": {
              "ElevationalFlatness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range flatness associated to the elevational surface in ZX, if different to the overall flatness."
              },
              "HorizontalFlatness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range flatness associated to the horizontal surface in XY, if different to the overall flatness."
              },
              "HorizontalOrthogonality": {
                "type": "real",
                "Description": "Indicative (95%-100%) range orthogonality associated to the horizontal shape and orientation in X, if different to the overall orthogonality."
              },
              "HorizontalStraightness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range straightness  associated to the horizontal shape in X, if different to the overall straightness."
              },
              "HorizontalTolerance": {
                "type": "real",
                "Description": "Indicative (95%-100%) range tolerance associated to the horizontal shape and position in X, if different to the overall tolerance."
              },
              "OrthogonalOrthogonality": {
                "type": "real",
                "Description": "Indicative (95%-100%) range orthogonality associated to the horizontal shape and orientation in Y, if different to the overall orthogonality."
              },
              "OrthogonalStraightness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range straightness  associated to the horizontal shape  in Y, if different to the overall straightness."
              },
              "OrthogonalTolerance": {
                "type": "real",
                "Description": "Indicative (95%-100%) range tolerance associated to the horizontal shape and position in Y, if different to the overall tolerance."
              },
              "OverallOrthogonality": {
                "type": "real",
                "Description": "Indicative (95%-100%) range orthogonality associated to the intended shape and orientation in XYZ."
              },
              "OverallStraightness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range straightness associated to the intended shape."
              },
              "OverallTolerance": {
                "type": "real",
                "Description": "Indicative (95%-100%) range tolerance associated to the intended shape and position in XYZ."
              },
              "PlanarFlatness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range flatness associated to the intended shape and position in XYZ."
              },
              "SideFlatness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range flatness associated to the side surface in YZ, if different to the overall flatness."
              },
              "ToleranceBasis": {
                "type": "PEnum_ToleranceBasis",
                "Description": "Indication of the basis of the tolerance requirement",
                "values": [
                  "APPEARANCE",
                  "ASSEMBLY",
                  "DEFLECTION",
                  "EXPANSION",
                  "FUNCTIONALITY",
                  "NOTKNOWN",
                  "OTHER",
                  "SETTLEMENT",
                  "STRUCTURAL",
                  "UNSET"
                ]
              },
              "ToleranceDescription": {
                "type": "string",
                "Description": "General description of the tolerance associated to the element or feature, its source and implications."
              },
              "VerticalOrthogonality": {
                "type": "real",
                "Description": "Indicative (95%-100%) range orthogonality associated to the vertical shape and orientation in Z, if different to the overall orthogonality."
              },
              "VerticalStraightness": {
                "type": "real",
                "Description": "Indicative (95%-100%) range straightness associated to the vertical shape in Z, if different to the overall straightness."
              },
              "VerticalTolerance": {
                "type": "real",
                "Description": "Indicative (95%-100%) range tolerance associated to the vertical shape and position in Z, if different to the overall tolerance."
              }
            }
          },
          "Pset_Uncertainty": {
            "Properties": {
              "HorizontalUncertainty": {
                "type": "real",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in X, if different to the linear uncertainty."
              },
              "LinearUncertainty": {
                "type": "real",
                "Description": "Indicative (95%-100%) range diameter associated to the overall shape and position in XYZ."
              },
              "OrthogonalUncertainty": {
                "type": "real",
                "Description": "Indicative (95%-100%) range diameter associated to the horizontal shape and position in Y, if different to the horizontal uncertainty."
              },
              "UncertaintyBasis": {
                "type": "PEnum_UncertaintyBasis",
                "Description": "Indication of the basis of the uncertainty",
                "values": [
                  "ASSESSMENT",
                  "ESTIMATE",
                  "INTERPRITATION",
                  "MEASUREMENT",
                  "NOTDEFINED",
                  "NOTKNOWN",
                  "OBSERVATION",
                  "USERDEFINED"
                ]
              },
              "UncertaintyDescription": {
                "type": "string",
                "Description": "General description of the uncertainty associated to the element or feature, its source and implications."
              },
              "VerticalUncertainty": {
                "type": "real",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in Z, if different to the linear uncertainty."
              }
            }
          },
          "Pset_Risk": {
            "Properties": {
              "AssociatedActivity": {
                "type": "string",
                "Description": "An indication or link to any associated activity or process that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "AssociatedLocation": {
                "type": "string",
                "Description": "An indication or link to any associated location or space that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "AssociatedProduct": {
                "type": "string",
                "Description": "An indication or link to any associated product or material that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encoding template"
              },
              "MitigatedRiskConsequence": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the consequence of the hazard given the planned mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigatedRiskLikelihood": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the likelihood of the hazard given the planned mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigatedRiskSignificance": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the signifiance of the risk given the mitigation of likelihood and consequence.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MitigationPlanned": {
                "type": "string",
                "Description": "The planned (agreed and irrevocable) mitigation of the likelhood and consequences of the hazard."
              },
              "MitigationProposed": {
                "type": "string",
                "Description": "Any proposed, but not yet agreed and irrevocable, mitigation of the likelhood and consequences of the hazard."
              },
              "NatureOfRisk": {
                "type": "string",
                "Description": "A description of the generic nature of the context or hazard that might be encountered."
              },
              "RiskAssessmentMethodology": {
                "type": "string",
                "Description": "An indication or link to the chosen risk assessment methodology, for example PAS1192-6 or a chosen ISO13100 annex."
              },
              "RiskName": {
                "type": "string",
                "Description": "A locally unique identifier for the risk entry that can be used to track the development and mitiagtion of the risk throughout the project life cycle"
              },
              "RiskType": {
                "type": "PEnum_RiskType",
                "Description": "Identifies the predefined types of risk from which the type required may be set.",
                "values": [
                  "ASBESTOSEFFECTS",
                  "ASPHIXIATION",
                  "BUSINESS",
                  "BUSINESSISSUES",
                  "CHEMICALEFFECTS",
                  "COMMERICALISSUES",
                  "CONFINEMENT",
                  "CRUSHING",
                  "DROWNINGANDFLOODING",
                  "ELECTRICSHOCK",
                  "ENVIRONMENTALISSUES",
                  "EVENT",
                  "FALL",
                  "FALL_LADDER",
                  "FALLEDGE",
                  "FALLFRAGILEMATERIAL",
                  "FALLSCAFFOLD",
                  "FIRE_EXPLOSION",
                  "HANDLING",
                  "HAZARD",
                  "HAZARDOUSDUST",
                  "HEALTHANDSAFETY",
                  "HEALTHISSUE",
                  "INSURANCE",
                  "INSURANCE_ISSUES",
                  "LEADEFFECTS",
                  "MACHINERYGUARDING",
                  "MATERIALEFFECTS",
                  "MATERIALSHANDLING",
                  "MECHANICAL_LIFTING",
                  "MECHANICALEFFECTS",
                  "MOBILE_ELEVATEDWORKPLATFORM",
                  "NOISE_EFFECTS",
                  "NOTKNOWN",
                  "OPERATIONALISSUES",
                  "OTHER",
                  "OTHERISSUES",
                  "OVERTURINGPLANT",
                  "PUBLICPROTECTIONISSUES",
                  "SAFETYISSUE",
                  "SILICADUST",
                  "SLIPTRIP",
                  "SOCIALISSUES",
                  "STRUCK",
                  "STRUCKFALLINFOBJECT",
                  "STRUCKVEHICLE",
                  "TOOLUSAGE",
                  "TRAPPED",
                  "UNINTENDEDCOLLAPSE",
                  "UNSET",
                  "VIBRATION",
                  "WELFAREISSUE",
                  "WOODDUST",
                  "WORKINGOVERHEAD"
                ]
              },
              "UnmitigatedRiskConsequence": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the consequence of the hazard prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "UnmitigatedRiskLikelihood": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the likelihood of the hazard prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "UnmitigatedRiskSignificance": {
                "type": "PEnum_RiskRating",
                "Description": "Identifies the signifiance of the risk given the likelihood and consequence prior to any specific mitigation.",
                "values": [
                  "CONSIDERABLE",
                  "CRITICAL",
                  "HIGH",
                  "INSIGNIFICANT",
                  "LOW",
                  "MODERATE",
                  "NOTKNOWN",
                  "OTHER",
                  "SOME",
                  "UNSET",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Tag": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcTypeResource": {
        "Parent": "IfcTypeObject",
        "Description": "IfcTypeResource defines a specific (or type) definition of a resource.\u00a0It is used to define a resource specification (the specific resource, that is common to all occurrences that are defined for that resource) and could act as a resource template.An IfcTypeResource may have a list of property sets attached. Values of these properties are common to all occurrences of that resource type. The type occurrence relationship is realized using the objectified relationship IfcRelDefinesByType.Subtypes of IfcTypeResource may be exchanged without being already assigned to subtypes of IfcResource.HISTORY  New entity in IFC4.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "Identification": {
                "type": "string",
                "Description": null
              },
              "LongDescription": {
                "type": "string",
                "Description": null
              },
              "ResourceType": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcMaterial": {
        "Parent": "IfcMaterialDefinition",
        "Description": "IfcMaterial is a homogeneous or inhomogeneous substance that can be used to form elements (physical products or their components).IfcMaterial is the basic entity for material designation and definition; this includes identification by name and classification (via reference to an external classification), as well as association of material properties (isotropic or anisotropic) defined by (subtypes of) IfcMaterialProperties. An instance of IfcMaterial may be associated to an element or element type using the IfcRelAssociatesMaterial relationship. The assignment might either be direct as a single material information, or viaa material layer set\na material profile set\na material constituent setAn IfcMaterial may also have presentation information associated. Such presentation information is provided by IfcMaterialDefinitionRepresentation, associating curve styles, hatching definitions or surface colouring/rendering information to a material.HISTORY\u00a0New entity in IFC4{ .change-ifc2x4}IFC4 CHANGE\u00a0 The attributes Description and Category have been added.",
        "Psets": {
          "Pset_MaterialCombustion": {
            "Properties": {
              "CO2Content": {
                "type": "real",
                "Description": "Carbon dioxide (CO2) content of the products of combustion. This is measured in weight of CO2 per unit weight and is therefore unitless."
              },
              "COContent": {
                "type": "real",
                "Description": "Carbon monoxide (CO) content of the products of combustion. This is measured in weight of CO per unit weight and is therefore unitless."
              },
              "N20Content": {
                "type": "real",
                "Description": "Nitrous oxide (N2O) content of the products of combustion. This is measured in weight of N2O per unit weight and is therefore unitless."
              },
              "SpecificHeatCapacity": {
                "type": "real",
                "Description": "Defines the specific heat capacity of a material."
              }
            }
          },
          "Pset_MaterialCommon": {
            "Properties": {
              "MassDensity": {
                "type": "real",
                "Description": "Material mass density."
              },
              "MolecularWeight": {
                "type": "real",
                "Description": "Molecular weight of material (typically gas)."
              },
              "Porosity": {
                "type": "real",
                "Description": "The void fraction of the total volume occupied by material (Vbr - Vnet)/Vbr."
              }
            }
          },
          "Pset_MaterialConcrete": {
            "Properties": {
              "AdmixturesDescription": {
                "type": "string",
                "Description": "Description of the admixtures added to the concrete mix."
              },
              "CompressiveStrength": {
                "type": "real",
                "Description": "Defining values: \u03b1; defined values: compressive strength."
              },
              "MaxAggregateSize": {
                "type": "real",
                "Description": "The maximum aggregate size of the concrete."
              },
              "ProtectivePoreRatio": {
                "type": "real",
                "Description": "The protective pore ratio indicating the frost-resistance of the concrete."
              },
              "WaterImpermeability": {
                "type": "string",
                "Description": "Description of the water impermeability denoting the water repelling properties."
              },
              "Workability": {
                "type": "string",
                "Description": "Description of the workability of the fresh concrete defined according to local standards."
              }
            }
          },
          "Pset_MaterialEnergy": {
            "Properties": {
              "GasPressure": {
                "type": "real",
                "Description": "Fill pressure (e.g. for between-pane gas fills): the pressure exerted by a mass of gas confined in a constant volume."
              },
              "MoistureCapacityThermalGradient": {
                "type": "real",
                "Description": "Thermal gradient coefficient for moisture capacity. Based on water vapor density."
              },
              "SolarRefractionIndex": {
                "type": "real",
                "Description": "Index of refraction (solar) defines the \"bending\" of the solar ray when it passes from one medium into another."
              },
              "SpecificHeatTemperatureDerivative": {
                "type": "real",
                "Description": "Specific heat temperature derivative."
              },
              "ThermalConductivityTemperatureDerivative": {
                "type": "real",
                "Description": "Thermal conductivity temperature derivative."
              },
              "ViscosityTemperatureDerivative": {
                "type": "real",
                "Description": "Viscosity temperature derivative."
              },
              "VisibleRefractionIndex": {
                "type": "real",
                "Description": "Index of refraction (visible) defines the \"bending\" of the sola! r ray in the visible spectrum when it passes from one medium into another."
              }
            }
          },
          "Pset_MaterialFuel": {
            "Properties": {
              "CarbonContent": {
                "type": "real",
                "Description": "The carbon content in the fuel. This is measured in weight of carbon per unit weight of fuel and is therefore unitless."
              },
              "CombustionTemperature": {
                "type": "real",
                "Description": "Combustion temperature."
              },
              "HigherHeatingValue": {
                "type": "real",
                "Description": "Higher Heating Value is defined as the amount of energy released (MJ/kg) when a fuel is burned completely, and H2O is in liquid form in the combustion products."
              },
              "LowerHeatingValue": {
                "type": "real",
                "Description": "Lower Heating Value is defined as the amount of energy released (MJ/kg) when a fuel is burned completely, and H2O is in vapor form in the combustion products."
              }
            }
          },
          "Pset_MaterialHygroscopic": {
            "Properties": {
              "IsothermalMoistureCapacity": {
                "type": "real",
                "Description": "Based on water vapor density."
              },
              "LowerVaporResistanceFactor": {
                "type": "real",
                "Description": "The vapor permeability relationship of air/material (typically value > 1), measured in low relative humidity (typically in 0/50 % RH)."
              },
              "MoistureDiffusivity": {
                "type": "real",
                "Description": "Moisture diffusivity is a transport property that is frequently used in the hygrothermal analysis of building envelope components."
              },
              "UpperVaporResistanceFactor": {
                "type": "real",
                "Description": "The vapor permeability relationship of air/material (typically value > 1), measured in high relative humidity (typically in 95/50 % RH)."
              },
              "VaporPermeability": {
                "type": "real",
                "Description": "The rate of water vapor transmission per unit area per unit of vapor pressure differential under test conditions."
              }
            }
          },
          "Pset_MaterialMechanical": {
            "Properties": {
              "DynamicViscosity": {
                "type": "real",
                "Description": "A measure of the viscous resistance of the material."
              },
              "PoissonRatio": {
                "type": "real",
                "Description": "A measure of the lateral deformations in the elastic range."
              },
              "ShearModulus": {
                "type": "real",
                "Description": "A measure of the shear modulus of elasticity of the material."
              },
              "ThermalExpansionCoefficient": {
                "type": "real",
                "Description": "A measure of the expansion coefficient for warming up the material about one Kelvin."
              },
              "YoungModulus": {
                "type": "real",
                "Description": "A measure of the Young's modulus of elasticity of the material."
              }
            }
          },
          "Pset_MaterialOptical": {
            "Properties": {
              "SolarReflectanceBack": {
                "type": "real",
                "Description": "Reflectance at normal incidence (solar): back side. Defines the fraction of the solar ray that is reflected and not transmitted when the ray passes from one medium into another, at the \"back\" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics."
              },
              "SolarReflectanceFront": {
                "type": "real",
                "Description": "Reflectance at normal incidence (solar): front side. Defines the fraction of the solar ray that is reflected and not transmitted when the ray passes from one medium into another, at the \"front\" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics."
              },
              "SolarTransmittance": {
                "type": "real",
                "Description": "The ratio of incident solar radiation that directly passes through a system (also named \u03c4e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "ThermalIrEmissivityBack": {
                "type": "real",
                "Description": "Thermal IR emissivity: back side. Defines the fraction of thermal energy emitted per unit area to \"blackbody\" at the same temperature, through the \"back\" side of the material."
              },
              "ThermalIrEmissivityFront": {
                "type": "real",
                "Description": "Thermal IR emissivity: front side. Defines the fraction of thermal energy emitted per unit area to \"blackbody\" at the same temperature, through the \"front\" side of the material."
              },
              "ThermalIrTransmittance": {
                "type": "real",
                "Description": "Thermal IR transmittance at normal incidence. Defines the fraction of thermal energy that passes through per unit area, perpendicular to the surface."
              },
              "VisibleReflectanceBack": {
                "type": "real",
                "Description": "Reflectance at normal incidence (visible): back side. Defines the fraction of the solar ray in the visible spectrum that is reflected and not transmitted when the ray passes from one medium into another, at the \"back\" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics."
              },
              "VisibleReflectanceFront": {
                "type": "real",
                "Description": "Reflectance at normal incidence (visible): front side. Defines the fraction of the solar ray in the visible spectrum that is reflected and not transmitted when the ray passes from one medium into another, at the \"front\" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics."
              },
              "VisibleTransmittance": {
                "type": "real",
                "Description": "Transmittance at normal incidence (visible). Defines the fraction of the visible spectrum of solar radiation that passes through per unit area, perpendicular to the surface."
              }
            }
          },
          "Pset_MaterialSteel": {
            "Properties": {
              "HardeningModule": {
                "type": "real",
                "Description": "A measure of the hardening module of the material (slope of stress versus strain curve after yield range)."
              },
              "PlasticStrain": {
                "type": "real",
                "Description": "A measure of the permanent displacement, as in slip or twinning, which remains after the stress has been removed. Currently applied to a strain of 0.2% proportional stress of the material."
              },
              "ProportionalStress": {
                "type": "real",
                "Description": "A measure of the proportional stress of the material. It describes the stress before the first plastic deformation occurs and is commonly measured at a deformation of 0.01%."
              },
              "StructuralGrade": {
                "type": "string",
                "Description": "Classification label to define mechanical properties according to structural grades defined in published standards; designated by numbers, letters, or a combination of both."
              },
              "UltimateStrain": {
                "type": "real",
                "Description": "A measure of the (engineering) strain at the state of ultimate stress of the material."
              },
              "UltimateStress": {
                "type": "real",
                "Description": "A measure of the ultimate stress of the material."
              },
              "YieldStress": {
                "type": "real",
                "Description": "A measure of the yield stress (or characteristic 0.2 percent proof stress) of the material."
              }
            }
          },
          "Pset_MaterialThermal": {
            "Properties": {
              "BoilingPoint": {
                "type": "real",
                "Description": "The boiling point of the material (fluid)."
              },
              "FreezingPoint": {
                "type": "real",
                "Description": "The freezing point of the material (fluid)."
              },
              "SpecificHeatCapacity": {
                "type": "real",
                "Description": "Defines the specific heat capacity of a material."
              },
              "ThermalConductivity": {
                "type": "real",
                "Description": "The thermal conductivity of the object."
              }
            }
          },
          "Pset_MaterialWater": {
            "Properties": {
              "AcidityConcentration": {
                "type": "real",
                "Description": "Maximum CaCO3 equivalent that would neutralize the acid."
              },
              "AlkalinityConcentration": {
                "type": "real",
                "Description": "Maximum alkalinity concentration (maximum sum of concentrations of each of the negative ions substances measured as CaCO3)."
              },
              "DissolvedSolidsContent": {
                "type": "real",
                "Description": "Fraction of the dissolved solids to the total amount of water. This is measured in weight of dissolved solids per weight of water and is therefore unitless."
              },
              "Hardness": {
                "type": "real",
                "Description": "Water hardness as positive, multivalent ion concentration in the water (usually concentrations of calcium and magnesium ions in terms of calcium carbonate)."
              },
              "ImpuritiesContent": {
                "type": "real",
                "Description": "Fraction of impurities such as dust to the total amount of water. This is measured in weight of impurities per weight of water and is therefore unitless."
              },
              "IsPotable": {
                "type": "boolean",
                "Description": "If TRUE, then the water is considered potable.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PHLevel": {
                "type": "real",
                "Description": "Maximum water PH in a range from 0-14."
              }
            }
          },
          "Pset_MaterialWood": {
            "Properties": {
              "AppearanceGrade": {
                "type": "string",
                "Description": "Grade with respect to visual quality."
              },
              "DimensionalChangeCoefficient": {
                "type": "real",
                "Description": "Weighted dimensional change coefficient, relative to 1% change in moisture content."
              },
              "Layers": {
                "type": "integer",
                "Description": "Number of layers."
              },
              "Layup": {
                "type": "string",
                "Description": "Configuration of the lamination."
              },
              "MoistureContent": {
                "type": "real",
                "Description": "Total weight of moisture relative to oven-dried weight of the wood."
              },
              "Plies": {
                "type": "integer",
                "Description": "Number of plies."
              },
              "Species": {
                "type": "string",
                "Description": "Wood species of a solid wood or laminated wood product."
              },
              "StrengthGrade": {
                "type": "string",
                "Description": "Grade with respect to mechanical strength and stiffness."
              },
              "ThicknessSwelling": {
                "type": "real",
                "Description": "Swelling ratio relative to board depth."
              }
            }
          },
          "Pset_MaterialWoodBasedStructure": {
            "Properties": {
              "ApplicableStructuralDesignMethod": {
                "type": "string",
                "Description": "Determines whether mechanical material properties are applicable to 'ASD' = allowable stress design (working stress design), 'LSD' = limit state design, or 'LRFD' = load and resistance factor design."
              }
            }
          },
          "Pset_MechanicalBeamInPlane": {
            "Properties": {
              "BendingStrength": {
                "type": "real",
                "Description": "Defining values: \u03b1; defined values: bending strength."
              },
              "CompStrength": {
                "type": "real",
                "Description": "Compressive strength, \u03b1=0\u00b0."
              },
              "CompStrengthPerp": {
                "type": "real",
                "Description": "Compressive strength, \u03b1=90\u00b0."
              },
              "RaisedCompStrengthPerp": {
                "type": "real",
                "Description": "Alternative value for compressive strength, \u03b1=90\u00b0, which may be used under material and code dependent conditions (e.g. if deformation is tolerable, or far from ends of the member); conditions should be stated in SELF\\IfcProperty.Description."
              },
              "ReferenceDepth": {
                "type": "real",
                "Description": "Depth in bending for which the mechanical properties are valid; provided as a means to check the integrity of material assignment."
              },
              "ShearModulus": {
                "type": "real",
                "Description": "A measure of the shear modulus of elasticity of the material."
              },
              "ShearModulusMin": {
                "type": "real",
                "Description": "Shear modulus, minimal value."
              },
              "ShearStrength": {
                "type": "real",
                "Description": "Defining values: \u03b1; defined values: shear strength."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              },
              "TensileStrengthPerp": {
                "type": "real",
                "Description": "Tensile strength, \u03b1=90\u00b0."
              },
              "TorsionalStrength": {
                "type": "real",
                "Description": "Shear strength in torsion."
              },
              "YoungModulus": {
                "type": "real",
                "Description": "A measure of the Young's modulus of elasticity of the material."
              },
              "YoungModulusMin": {
                "type": "real",
                "Description": "Elastic modulus, minimal value, \u03b1=0\u00b0."
              },
              "YoungModulusPerp": {
                "type": "real",
                "Description": "Elastic modulus, mean value, \u03b1=90\u00b0."
              },
              "YoungModulusPerpMin": {
                "type": "real",
                "Description": "Elastic modulus, minimal value, \u03b1=90\u00b0."
              }
            }
          },
          "Pset_MechanicalBeamInPlaneNegative": {
            "Properties": {
              "BendingStrength": {
                "type": "real",
                "Description": "Defining values: \u03b1; defined values: bending strength."
              },
              "CompStrength": {
                "type": "real",
                "Description": "Compressive strength, \u03b1=0\u00b0."
              },
              "CompStrengthPerp": {
                "type": "real",
                "Description": "Compressive strength, \u03b1=90\u00b0."
              },
              "RaisedCompStrengthPerp": {
                "type": "real",
                "Description": "Alternative value for compressive strength, \u03b1=90\u00b0, which may be used under material and code dependent conditions (e.g. if deformation is tolerable, or far from ends of the member); conditions should be stated in SELF\\IfcProperty.Description."
              },
              "ReferenceDepth": {
                "type": "real",
                "Description": "Depth in bending for which the mechanical properties are valid; provided as a means to check the integrity of material assignment."
              },
              "ShearModulus": {
                "type": "real",
                "Description": "A measure of the shear modulus of elasticity of the material."
              },
              "ShearModulusMin": {
                "type": "real",
                "Description": "Shear modulus, minimal value."
              },
              "ShearStrength": {
                "type": "real",
                "Description": "Defining values: \u03b1; defined values: shear strength."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              },
              "TensileStrengthPerp": {
                "type": "real",
                "Description": "Tensile strength, \u03b1=90\u00b0."
              },
              "TorsionalStrength": {
                "type": "real",
                "Description": "Shear strength in torsion."
              },
              "YoungModulus": {
                "type": "real",
                "Description": "A measure of the Young's modulus of elasticity of the material."
              },
              "YoungModulusMin": {
                "type": "real",
                "Description": "Elastic modulus, minimal value, \u03b1=0\u00b0."
              },
              "YoungModulusPerp": {
                "type": "real",
                "Description": "Elastic modulus, mean value, \u03b1=90\u00b0."
              },
              "YoungModulusPerpMin": {
                "type": "real",
                "Description": "Elastic modulus, minimal value, \u03b1=90\u00b0."
              }
            }
          },
          "Pset_MechanicalBeamOutOfPlane": {
            "Properties": {
              "BendingStrength": {
                "type": "real",
                "Description": "Defining values: \u03b1; defined values: bending strength."
              },
              "CompStrength": {
                "type": "real",
                "Description": "Compressive strength, \u03b1=0\u00b0."
              },
              "CompStrengthPerp": {
                "type": "real",
                "Description": "Compressive strength, \u03b1=90\u00b0."
              },
              "RaisedCompStrengthPerp": {
                "type": "real",
                "Description": "Alternative value for compressive strength, \u03b1=90\u00b0, which may be used under material and code dependent conditions (e.g. if deformation is tolerable, or far from ends of the member); conditions should be stated in SELF\\IfcProperty.Description."
              },
              "ReferenceDepth": {
                "type": "real",
                "Description": "Depth in bending for which the mechanical properties are valid; provided as a means to check the integrity of material assignment."
              },
              "ShearModulus": {
                "type": "real",
                "Description": "A measure of the shear modulus of elasticity of the material."
              },
              "ShearModulusMin": {
                "type": "real",
                "Description": "Shear modulus, minimal value."
              },
              "ShearStrength": {
                "type": "real",
                "Description": "Defining values: \u03b1; defined values: shear strength."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              },
              "TensileStrengthPerp": {
                "type": "real",
                "Description": "Tensile strength, \u03b1=90\u00b0."
              },
              "TorsionalStrength": {
                "type": "real",
                "Description": "Shear strength in torsion."
              },
              "YoungModulus": {
                "type": "real",
                "Description": "A measure of the Young's modulus of elasticity of the material."
              },
              "YoungModulusMin": {
                "type": "real",
                "Description": "Elastic modulus, minimal value, \u03b1=0\u00b0."
              },
              "YoungModulusPerp": {
                "type": "real",
                "Description": "Elastic modulus, mean value, \u03b1=90\u00b0."
              },
              "YoungModulusPerpMin": {
                "type": "real",
                "Description": "Elastic modulus, minimal value, \u03b1=90\u00b0."
              }
            }
          },
          "Pset_MechanicalPanelInPlane": {
            "Properties": {
              "RaisedCompressiveStrength": {
                "type": "real",
                "Description": "Alternative value for compressive strength which may be used under material and code dependent conditions (e.g. if deformation is tolerable, or far from ends of the member); conditions should be stated in SELF\\IfcProperty.Description."
              },
              "ReferenceDepth": {
                "type": "real",
                "Description": "Depth in bending for which the mechanical properties are valid; provided as a means to check the integrity of material assignment."
              },
              "ShearModulus": {
                "type": "real",
                "Description": "A measure of the shear modulus of elasticity of the material."
              },
              "YoungModulusCompression": {
                "type": "real",
                "Description": "Elastic modulus in compression."
              }
            }
          },
          "Pset_MechanicalPanelOutOfPlane": {
            "Properties": {
              "RaisedCompressiveStrength": {
                "type": "real",
                "Description": "Alternative value for compressive strength which may be used under material and code dependent conditions (e.g. if deformation is tolerable, or far from ends of the member); conditions should be stated in SELF\\IfcProperty.Description."
              },
              "ReferenceDepth": {
                "type": "real",
                "Description": "Depth in bending for which the mechanical properties are valid; provided as a means to check the integrity of material assignment."
              },
              "ShearModulus": {
                "type": "real",
                "Description": "A measure of the shear modulus of elasticity of the material."
              },
              "YoungModulusCompression": {
                "type": "real",
                "Description": "Elastic modulus in compression."
              }
            }
          },
          "Pset_MechanicalPanelOutOfPlaneNegative": {
            "Properties": {
              "RaisedCompressiveStrength": {
                "type": "real",
                "Description": "Alternative value for compressive strength which may be used under material and code dependent conditions (e.g. if deformation is tolerable, or far from ends of the member); conditions should be stated in SELF\\IfcProperty.Description."
              },
              "ReferenceDepth": {
                "type": "real",
                "Description": "Depth in bending for which the mechanical properties are valid; provided as a means to check the integrity of material assignment."
              },
              "ShearModulus": {
                "type": "real",
                "Description": "A measure of the shear modulus of elasticity of the material."
              },
              "YoungModulusCompression": {
                "type": "real",
                "Description": "Elastic modulus in compression."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Category": {
                "type": "string",
                "Description": null
              },
              "Description": {
                "type": "string",
                "Description": null
              },
              "Name": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcMaterialDefinition": {
        "Description": "IfcMaterialDefinition is a general supertype for all material related information items in IFC that have common material related properties that may include association of material with some shape parameters or assignments to identified parts of a component.There are three ways of assigning materials to a single component or multiple components; they are characterized as:by layer - assigning a material to a layer with constant thickness\nby profile - assigning a material to a profile with a constant of varying shape along an extrusion\nby constituents - assigning a material to an identified part of a component shape; the identification is by a keyword rather than by a shape parameterEach instantiable subtype of IfcMaterialDefinition may have material properties assigned, or have an external classification of its definition. It can be assigned to either a subtype of IfcElement, or a subtype of IfcElementType by using the objectified relationship IfcRelAssociatesMaterial.HISTORY\u00a0 New entity in IFC4"
      },
      "IfcFireSuppressionTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": "A fire suppression terminal has the purpose of delivering a fluid (gas or liquid) that will suppress a fire.A fire suppression terminal provides for all forms of sprinkler, spreader and other form of terminal that is connected to a pipework system and intended to act in the role of suppressing a fire.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_FireSuppressionTerminalTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_FireSuppressionTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcFireSuppressionTerminalType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcFireSuppressionTerminalType defines commonly shared information for occurrences of fire suppression terminals. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a fire suppression terminal type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFireSuppressionTerminalType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFireSuppressionTerminalType are represented by instances of IfcFireSuppressionTerminal. Refer to the documentation at IfcFireSuppressionTerminal for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_FireSuppressionTerminalTypeBreechingInlet": {
            "Properties": {
              "BreechingInletType": {
                "type": "PEnum_BreechingInletType",
                "Description": "Defines the type of breeching inlet.",
                "values": [
                  "FOURWAY",
                  "NOTDEFINED",
                  "OTHER",
                  "TWOWAY",
                  "USERDEFINED"
                ]
              },
              "CouplingType": {
                "type": "PEnum_BreechingInletCouplingType",
                "Description": "Defines the type coupling on the inlet of the breeching inlet.",
                "values": [
                  "INSTANTANEOUS_FEMALE",
                  "INSTANTANEOUS_MALE",
                  "NOTDEFINED",
                  "OTHER",
                  "USERDEFINED"
                ]
              },
              "HasCaps": {
                "type": "boolean",
                "Description": "Does the inlet connection have protective caps.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InletDiameter": {
                "type": "real",
                "Description": "The inlet diameter of the breeching inlet."
              },
              "OutletDiameter": {
                "type": "real",
                "Description": "The outlet diameter of the breeching inlet."
              }
            }
          },
          "Pset_FireSuppressionTerminalTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_FireSuppressionTerminalTypeFireHydrant": {
            "Properties": {
              "BodyColour": {
                "type": "string",
                "Description": ""
              },
              "CapColour": {
                "type": "string",
                "Description": ""
              },
              "DischargeFlowRate": {
                "type": "real",
                "Description": "The volumetric rate of fluid discharge."
              },
              "FireHydrantType": {
                "type": "PEnum_FireHydrantType",
                "Description": "Defines the range of hydrant types from which the required type can be selected where.DryBarrel:   A hydrant that has isolating valves fitted below ground and that may be used where the possibility of water freezing is a consideration.\nWetBarrel:   A hydrant that has isolating valves fitted above ground and that may be used where there is no possibility of water freezing.",
                "values": [
                  "DRYBARREL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WETBARREL"
                ]
              },
              "FlowClass": {
                "type": "string",
                "Description": "Alphanumeric indication of the flow class of a hydrant (may be used in connection with or instead of the FlowRate property)."
              },
              "HoseConnectionSize": {
                "type": "real",
                "Description": "The size of connections to which a hose may be connected (other than that to be linked to a pumping unit)."
              },
              "NumberOfHoseConnections": {
                "type": "integer",
                "Description": "The number of hose connections on the hydrant (excluding the pumper connection)."
              },
              "PressureRating": {
                "type": "real",
                "Description": "Pressure rating of the object."
              },
              "PumperConnectionSize": {
                "type": "real",
                "Description": "The size of a connection to which a fire hose may be connected that is then linked to a pumping unit."
              },
              "WaterIsPotable": {
                "type": "boolean",
                "Description": "Indication of whether the water flow from the hydrant is potable (set TRUE) or non potable (set FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_FireSuppressionTerminalTypeHoseReel": {
            "Properties": {
              "ClassificationAuthority": {
                "type": "string",
                "Description": "The name of the authority that applies the classification of service to the hose reel (e.g. NFPA/FEMA)."
              },
              "ClassOfService": {
                "type": "string",
                "Description": "A classification of usage of the hose reel that may be applied."
              },
              "HoseDiameter": {
                "type": "real",
                "Description": "Notional diameter (bore) of the hose."
              },
              "HoseLength": {
                "type": "real",
                "Description": "Notional length of the hose fitted to the hose reel when fully extended."
              },
              "HoseNozzleType": {
                "type": "PEnum_HoseNozzleType",
                "Description": "Identifies the predefined types of nozzle (in terms of spray pattern) fitted to the end of the hose from which the type required may be set.",
                "values": [
                  "FOG",
                  "NOTKNOWN",
                  "OTHER",
                  "STRAIGHTSTREAM",
                  "UNSET"
                ]
              },
              "HoseReelMountingType": {
                "type": "PEnum_HoseReelMountingType",
                "Description": "Identifies the predefined types of hose reel mounting from which the type required may be set.",
                "values": [
                  "CABINET_RECESSED",
                  "CABINET_SEMIRECESSED",
                  "NOTKNOWN",
                  "OTHER",
                  "SURFACE",
                  "UNSET"
                ]
              },
              "HoseReelType": {
                "type": "PEnum_HoseReelType",
                "Description": "Identifies the predefined types of hose arrangement from which the type required may be set.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "RACK",
                  "REEL",
                  "UNSET"
                ]
              },
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection.\nNote that all inlet connections are assumed to be the same size."
              }
            }
          },
          "Pset_FireSuppressionTerminalTypeSprinkler": {
            "Properties": {
              "Activation": {
                "type": "PEnum_SprinklerActivation",
                "Description": "Identifies the predefined methods of sprinkler activation from which that required may be set.",
                "values": [
                  "BULB",
                  "FUSIBLESOLDER",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "ActivationTemperature": {
                "type": "real",
                "Description": "The temperature at which the object is designed to activate."
              },
              "BulbLiquidColour": {
                "type": "PEnum_SprinklerBulbLiquidColour",
                "Description": "",
                "values": [
                  "BLUE",
                  "GREEN",
                  "MAUVE",
                  "NOTKNOWN",
                  "ORANGE",
                  "OTHER",
                  "RED",
                  "UNSET",
                  "YELLOW"
                ]
              },
              "ConnectionSize": {
                "type": "real",
                "Description": "The connection size of the object."
              },
              "CoverageArea": {
                "type": "real",
                "Description": "The area that is covered by the object."
              },
              "DischargeCoefficient": {
                "type": "real",
                "Description": "The coefficient of flow at the sprinkler."
              },
              "DischargeFlowRate": {
                "type": "real",
                "Description": "The volumetric rate of fluid discharge."
              },
              "HasDeflector": {
                "type": "boolean",
                "Description": "Indication of whether the sprinkler has a deflector (baffle) fitted to diffuse the discharge on activation (= TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaximumWorkingPressure": {
                "type": "real",
                "Description": "Maximum pressure that the object is manufactured to withstand."
              },
              "ResidualFlowingPressure": {
                "type": "real",
                "Description": "The residual flowing pressure in the pipeline at which the discharge flow rate is determined."
              },
              "Response": {
                "type": "PEnum_SprinklerResponse",
                "Description": "Identifies the predefined methods of sprinkler response from which that required may be set.",
                "values": [
                  "NOTKNOWN",
                  "QUICK",
                  "STANDARD",
                  "UNSET"
                ]
              },
              "SprinklerType": {
                "type": "PEnum_SprinklerType",
                "Description": "Identifies the predefined types of sprinkler  from which the type required may be set.",
                "values": [
                  "CEILING",
                  "CONCEALED",
                  "CUTOFF",
                  "NOTKNOWN",
                  "OTHER",
                  "PENDANT",
                  "RECESSEDPENDANT",
                  "SIDEWALL",
                  "UNSET",
                  "UPRIGHT"
                ]
              }
            }
          },
          "Qto_FireSuppressionTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcInterceptor": {
        "Parent": "IfcFlowTreatmentDevice",
        "Description": "An interceptor is a device designed and installed in order to separate and retain deleterious, hazardous or undesirable matter while permitting normal sewage or liquids to discharge into a collection system by gravity.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_InterceptorTypeCommon": {
            "Properties": {
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the object."
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the y-axis in the local coordinate system of the cover of the object."
              },
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection.\nNote that all inlet connections are assumed to be the same size."
              },
              "NominalBodyDepth": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the z-axis of the local coordinate system of the object."
              },
              "NominalBodyLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis of the local coordinate system of the object."
              },
              "NominalBodyWidth": {
                "type": "real",
                "Description": "Nominal or quoted length, measured along the y-axis of the local coordinate system of the object."
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "VentilatingPipeSize": {
                "type": "real",
                "Description": "Size of the ventilating pipe(s)."
              }
            }
          },
          "Qto_InterceptorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcInterceptorType": {
        "Parent": "IfcFlowTreatmentDeviceType",
        "Description": "The flow treatment device type IfcInterceptorType defines commonly shared information for occurrences of interceptors. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a interceptor type specification indicating the specific product information that is common to all occurrences of that product type. The IfcInterceptorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcInterceptorType are represented by instances of IfcInterceptor. Refer to the documentation at IfcInterceptor for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_InterceptorTypeCommon": {
            "Properties": {
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the object."
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the y-axis in the local coordinate system of the cover of the object."
              },
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection.\nNote that all inlet connections are assumed to be the same size."
              },
              "NominalBodyDepth": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the z-axis of the local coordinate system of the object."
              },
              "NominalBodyLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis of the local coordinate system of the object."
              },
              "NominalBodyWidth": {
                "type": "real",
                "Description": "Nominal or quoted length, measured along the y-axis of the local coordinate system of the object."
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "VentilatingPipeSize": {
                "type": "real",
                "Description": "Size of the ventilating pipe(s)."
              }
            }
          },
          "Qto_InterceptorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcSanitaryTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": "A sanitary terminal is a fixed appliance or terminal usually supplied with water and used for drinking, cleaning or foul water disposal or that is an item of equipment directly used with such an appliance or terminal.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_SanitaryTerminalTypeCommon": {
            "Properties": {
              "Colour": {
                "type": "string",
                "Description": "Stratum colour"
              },
              "NominalDepth": {
                "type": "real",
                "Description": "Nominal or quoted depth of the object measured from the inlet drain connection to the base of the unit."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_SanitaryTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcSanitaryTerminalType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcSanitaryTerminalType defines commonly shared information for occurrences of sanitary terminals. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a sanitary terminal type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSanitaryTerminalType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSanitaryTerminalType are represented by instances of IfcSanitaryTerminal. Refer to the documentation at IfcSanitaryTerminal for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_SanitaryTerminalTypeBath": {
            "Properties": {
              "BathType": {
                "type": "PEnum_BathType",
                "Description": "The property enumeration defines the types of bath that may be specified within the property set.",
                "values": [
                  "DOMESTIC",
                  "FOOT",
                  "NOTKNOWN",
                  "OTHER",
                  "PLUNGE",
                  "POOL",
                  "SITZ",
                  "SPA",
                  "TREATMENT",
                  "UNSET"
                ]
              },
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object."
              },
              "HasGrabHandles": {
                "type": "boolean",
                "Description": "Indicates whether the bath is fitted with handles that provide assistance to a bather in entering or leaving the bath.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_SanitaryTerminalTypeBidet": {
            "Properties": {
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object."
              },
              "Mounting": {
                "type": "PEnum_SanitaryMounting",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-BackToWall:     A pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections\nPedestal:   A floor mounted sanitary terminal that has an integral base\nCounterTop:     A sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\nWallHung:   A sanitary terminal cantilevered clear of the floor.Note that BackToWall, Pedestal and WallHung are allowable values for a bidet.",
                "values": [
                  "BACKTOWALL",
                  "COUNTERTOP",
                  "NOTKNOWN",
                  "OTHER",
                  "PEDESTAL",
                  "UNSET",
                  "WALLHUNG"
                ]
              },
              "SpilloverLevel": {
                "type": "real",
                "Description": "The level at which water spills out of the object."
              }
            }
          },
          "Pset_SanitaryTerminalTypeCistern": {
            "Properties": {
              "CisternCapacity": {
                "type": "real",
                "Description": "Volumetric capacity of the cistern"
              },
              "CisternHeight": {
                "type": "PEnum_CisternHeight",
                "Description": "Enumeration that identifies the height of the cistern or, if set to 'None' if the urinal has no cistern and is flushed using mains or high pressure water through a flushing valve.",
                "values": [
                  "HIGHLEVEL",
                  "LOWLEVEL",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "FlushType": {
                "type": "PEnum_FlushType",
                "Description": "The property enumeration Pset_FlushTypeEnum defines the types of flushing mechanism that may be specified for cisterns and sanitary terminals where:-Lever:  Flushing is achieved by twisting a lever that causes a predetermined flow of water to be passed from a cistern to the sanitary terminal.\nPull:   Flushing is achieved by pulling a handle or knob vertically upwards that causes a predetermined flow of water to be passed from a cistern to the sanitary terminal.\nPush:   Flushing is achieved by pushing a button or plate that causes a predetermined flow of water to be passed from a cistern to the sanitary terminal.\nSensor: Flush is activated through an automatic sensing mechanism.",
                "values": [
                  "LEVER",
                  "NOTKNOWN",
                  "OTHER",
                  "PULL",
                  "PUSH",
                  "SENSOR",
                  "UNSET"
                ]
              },
              "IsAutomaticFlush": {
                "type": "boolean",
                "Description": "Boolean value that determines if the cistern is flushed automatically either after each use or periodically (TRUE) or whether manual flushing is required (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSingleFlush": {
                "type": "boolean",
                "Description": "Indicates whether the cistern is single flush = TRUE (i.e. the same amount of water is used for each and every flush) or dual flush = FALSE (i.e. the amount of water used for a flush may be selected by the user to be high or low depending on the waste material to be removed).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_SanitaryTerminalTypeCommon": {
            "Properties": {
              "Colour": {
                "type": "string",
                "Description": "Stratum colour"
              },
              "NominalDepth": {
                "type": "real",
                "Description": "Nominal or quoted depth of the object measured from the inlet drain connection to the base of the unit."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SanitaryTerminalTypeSanitaryFountain": {
            "Properties": {
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object."
              },
              "FountainType": {
                "type": "PEnum_FountainType",
                "Description": "Selection of the type of fountain from the enumerated list of types where:-DrinkingWater:  Sanitary appliance that provides a low pressure jet of drinking water.\nEyewash:    Waste water appliance, usually installed in work places where there is a risk of injury to eyes by solid particles or dangerous liquids, with which the user can wash the eyes without touching them.",
                "values": [
                  "DRINKINGWATER",
                  "EYEWASH",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "Mounting": {
                "type": "PEnum_SanitaryMounting",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-BackToWall:     A pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections\nPedestal:   A floor mounted sanitary terminal that has an integral base\nCounterTop:     A sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\nWallHung:   A sanitary terminal cantilevered clear of the floor.Note that BackToWall, Pedestal and WallHung are allowable values for a bidet.",
                "values": [
                  "BACKTOWALL",
                  "COUNTERTOP",
                  "NOTKNOWN",
                  "OTHER",
                  "PEDESTAL",
                  "UNSET",
                  "WALLHUNG"
                ]
              }
            }
          },
          "Pset_SanitaryTerminalTypeShower": {
            "Properties": {
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object."
              },
              "HasTray": {
                "type": "boolean",
                "Description": "Indicates whether the shower has a separate receptacle that catches the water in a shower and directs it to a waste outlet.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShowerHeadDescription": {
                "type": "string",
                "Description": "A description of the shower head(s) that emit the spray of water."
              },
              "ShowerType": {
                "type": "PEnum_ShowerType",
                "Description": "Selection of the type of shower from the enumerated list of types where:-Drench:     Shower that rapidly gives a thorough soaking in an emergency.\nIndividual:     Shower unit that is typically enclosed and is for the use of one person at a time.\nTunnel:     Shower that has a succession of shower heads or spreaders that operate simultaneously along its length.",
                "values": [
                  "DRENCH",
                  "INDIVIDUAL",
                  "NOTKNOWN",
                  "OTHER",
                  "TUNNEL",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SanitaryTerminalTypeSink": {
            "Properties": {
              "Colour": {
                "type": "string",
                "Description": "Stratum colour"
              },
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object."
              },
              "Mounting": {
                "type": "PEnum_SanitaryMounting",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-BackToWall:     A pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections\nPedestal:   A floor mounted sanitary terminal that has an integral base\nCounterTop:     A sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\nWallHung:   A sanitary terminal cantilevered clear of the floor.Note that BackToWall, Pedestal and WallHung are allowable values for a bidet.",
                "values": [
                  "BACKTOWALL",
                  "COUNTERTOP",
                  "NOTKNOWN",
                  "OTHER",
                  "PEDESTAL",
                  "UNSET",
                  "WALLHUNG"
                ]
              },
              "MountingOffset": {
                "type": "real",
                "Description": "For counter top mounted basins the vertical offset between the top of the sink and the counter top."
              },
              "SinkType": {
                "type": "PEnum_SinkType",
                "Description": "Selection of the type of sink from the enumerated list of types where:-Belfast:    Deep sink that has a plain edge and a weir overflow\n.\nBucket:     Sink at low level, with protected front edge, that facilitates filling and emptying buckets, usually with a hinged grid on which to stand them.\nCleaners:    Sink, usually fixed at normal height (900mm), with protected front edge.\nCombination_Left:    Sink with integral drainer on left hand side\n.\nCombination_Right: Sink with integral drainer on right hand side\n.\nCombination_Double:     Sink with integral drainer on both sides\n.\nDrip: Small sink that catches drips or flow from a faucet\n.\nLaboratory: Sink, of acid resisting material, with a top edge shaped to facilitate fixing to the underside of a desktop\n.\nLondon: Deep sink that has a plain edge and no overflow\n.\nPlaster: Sink with sediment receiver to prevent waste plaster passing into drains\n.\nPot: Large metal sink, with a standing waste, for washing cooking utensils\n.\nRinsing: Metal sink in which water can be heated and culinary utensils and tableware immersed at high temperature that destroys most harmful bacteria and allows subsequent self drying.\n.\nShelf: Ceramic sink with an integral back shelf through which water fittings are mounted\n.\nVegetablePreparation:   Large metal sink, with a standing waste, for washing and preparing vegetables\n.",
                "values": [
                  "BELFAST",
                  "BUCKET",
                  "CLEANERS",
                  "COMBINATION_DOUBLE",
                  "COMBINATION_LEFT",
                  "COMBINATION_RIGHT",
                  "DRIP",
                  "LABORATORY",
                  "LONDON",
                  "NOTKNOWN",
                  "OTHER",
                  "PLASTER",
                  "POT",
                  "RINSING",
                  "SHELF",
                  "UNSET",
                  "VEGETABLEPREPARATION"
                ]
              }
            }
          },
          "Pset_SanitaryTerminalTypeToiletPan": {
            "Properties": {
              "PanMounting": {
                "type": "PEnum_SanitaryMounting",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-BackToWall:     A pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections.\nPedestal:   A floor mounted sanitary terminal that has an integral base.\nCounterTop:     A sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\nWallHung:   A sanitary terminal cantilevered clear of the floor.",
                "values": [
                  "BACKTOWALL",
                  "COUNTERTOP",
                  "NOTKNOWN",
                  "OTHER",
                  "PEDESTAL",
                  "UNSET",
                  "WALLHUNG"
                ]
              },
              "SpilloverLevel": {
                "type": "real",
                "Description": "The level at which water spills out of the object."
              },
              "ToiletPanType": {
                "type": "PEnum_ToiletPanType",
                "Description": "The property enumeration Pset_ToiletPanTypeEnum defines the types of toilet pan that may be specified within the property set Pset_Toilet:-Siphonic:   Toilet pan in which excrement is removed by siphonage induced by the flushing water.\nSquat:  Toilet pan with an elongated bowl installed with its top edge at or near floor level, so that the user has to squat.\nWashDown:   Toilet pan in which excrement is removed by the momentum of the flushing water.\nWashOut:    A washdown toilet pan in which excrement falls first into a shallow water filled bowl.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "SIPHONIC",
                  "SQUAT",
                  "UNSET",
                  "WASHDOWN",
                  "WASHOUT"
                ]
              },
              "ToiletType": {
                "type": "PEnum_ToiletType",
                "Description": "Enumeration that defines the types of toilet (water closet) arrangements that may be specified where:-BedPanWasher: Enclosed soil appliance in which bedpans and urinal bottles are emptied and cleansed.\nChemical: Portable receptacle or soil appliance that receives and retains excrement in either an integral or a separate container, in which it is chemically treated and from which it has to be emptied periodically.\nCloseCoupled:   Toilet suite in which a flushing cistern is connected directly to the water closet pan.\nLooseCoupled:   Toilet arrangement in which a flushing cistern is connected to the water closet pan through a flushing pipe.\nSlopHopper:     Hopper shaped soil appliance with a flushing rim and outlet similar to those of a toilet pan, into which human excrement is emptied for disposal.",
                "values": [
                  "BEDPANWASHER",
                  "CHEMICAL",
                  "CLOSECOUPLED",
                  "LOOSECOUPLED",
                  "NOTKNOWN",
                  "OTHER",
                  "SLOPHOPPER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SanitaryTerminalTypeUrinal": {
            "Properties": {
              "Mounting": {
                "type": "PEnum_SanitaryMounting",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-BackToWall:     A pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections\nPedestal:   A floor mounted sanitary terminal that has an integral base\nCounterTop:     A sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\nWallHung:   A sanitary terminal cantilevered clear of the floor.Note that BackToWall, Pedestal and WallHung are allowable values for a bidet.",
                "values": [
                  "BACKTOWALL",
                  "COUNTERTOP",
                  "NOTKNOWN",
                  "OTHER",
                  "PEDESTAL",
                  "UNSET",
                  "WALLHUNG"
                ]
              },
              "SpilloverLevel": {
                "type": "real",
                "Description": "The level at which water spills out of the object."
              },
              "UrinalType": {
                "type": "PEnum_UrinalType",
                "Description": "Selection of the type of urinal from the enumerated list of types where:-Bowl: Individual wall mounted urinal.\nSlab: Urinal that consists of a slab or sheet fixed to a wall and down which urinal flows into a floor channel.\nStall: Floor mounted urinal that consists of an elliptically shaped sanitary stall fixed to a wall and down which urine flows into a floor channel.\nTrough: Wall mounted urinal of elongated rectangular shape on plan, that can be used by more than one person at a time.",
                "values": [
                  "BOWL",
                  "NOTKNOWN",
                  "OTHER",
                  "SLAB",
                  "STALL",
                  "TROUGH",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SanitaryTerminalTypeWashHandBasin": {
            "Properties": {
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object."
              },
              "Mounting": {
                "type": "PEnum_SanitaryMounting",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-BackToWall:     A pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections\nPedestal:   A floor mounted sanitary terminal that has an integral base\nCounterTop:     A sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\nWallHung:   A sanitary terminal cantilevered clear of the floor.Note that BackToWall, Pedestal and WallHung are allowable values for a bidet.",
                "values": [
                  "BACKTOWALL",
                  "COUNTERTOP",
                  "NOTKNOWN",
                  "OTHER",
                  "PEDESTAL",
                  "UNSET",
                  "WALLHUNG"
                ]
              },
              "MountingOffset": {
                "type": "real",
                "Description": "For counter top mounted basins the vertical offset between the top of the sink and the counter top."
              },
              "WashHandBasinType": {
                "type": "PEnum_WashHandBasinType",
                "Description": "Defines the types of wash hand basin that may be specified where:DentalCuspidor: Waste water appliance that receives and flushes away mouth washings\n.\nHandRinse: Wall mounted wash hand basin that has an overall width of 500mm or less\n.\nHospital: Wash hand basin that has a smooth easy clean surface without tapholes or overflow slot for use where hygiene is of prime importance.Tipup: Wash hand basin mounted on pivots so that it can be emptied by tilting.Vanity: Wash hand basin for installation into a horizontal surface.Washfountain: Wash hand basin that is circular, semi-circular or polygonal on plan, at which more than one person can wash at the same time.\nWashingTrough: Wash hand basin of elongated rectangular shape in plan, at which more than one person can wash at the same time.",
                "values": [
                  "DENTALCUSPIDOR",
                  "HANDRINSE",
                  "HOSPITAL",
                  "NOTKNOWN",
                  "OTHER",
                  "TIPUP",
                  "UNSET",
                  "WASHFOUNTAIN",
                  "WASHINGTROUGH"
                ]
              }
            }
          },
          "Qto_SanitaryTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcStackTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": "A stack terminal is placed at the top of a ventilating stack (such as to prevent ingress by birds or rainwater) or rainwater pipe (to act as a collector or hopper for discharge from guttering).HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_StackTerminalTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_StackTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcStackTerminalType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcStackTerminalType defines commonly shared information for occurrences of stack terminals. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a stack terminal type specification indicating the specific product information that is common to all occurrences of that product type. The IfcStackTerminalType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcStackTerminalType are represented by instances of IfcStackTerminal. Refer to the documentation at IfcStackTerminal for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_StackTerminalTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_StackTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcWasteTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": "A waste terminal has the purpose of collecting or intercepting waste from one or more sanitary terminals or other fluid waste generating equipment and discharging it into a single waste/drainage system.A waste terminal provides for all forms of trap and waste point that collects discharge from a sanitary terminal and discharges it into a waste/drainage subsystem or that collects waste from several terminals and passes it into a single waste/drainage subsystem. This includes the P and S traps from soil sanitary terminals, sinks, and basins as well as floor wastes and gully traps that provide collection points.HISTORY  New entity in IFC4{ .note}",
        "Psets": {
          "Pset_WasteTerminalTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_WasteTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcWasteTerminalType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The flow terminal type IfcWasteTerminalType defines commonly shared information for occurrences of waste terminals. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a waste terminal type specification indicating the specific product information that is common to all occurrences of that product type. The IfcWasteTerminalType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcWasteTerminalType are represented by instances of IfcWasteTerminal. Refer to the documentation at IfcWasteTerminal for supported property sets, materials, composition, and ports.",
        "Psets": {
          "Pset_WasteTerminalTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_WasteTerminalTypeFloorTrap": {
            "Properties": {
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the object."
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the y-axis in the local coordinate system of the cover of the object."
              },
              "HasStrainer": {
                "type": "boolean",
                "Description": "Indicates whether the gully trap has a strainer (= TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection.\nNote that all inlet connections are assumed to be the same size."
              },
              "InletPatternType": {
                "type": "PEnum_InletPatternType",
                "Description": "Identifies the pattern of inlet connections to a trap.A trap may have 0,1,2,3 or 4 inlet connections and the pattern of their arrangement may vary. The enumeration makes the convention that an outlet is either vertical or is placed at the bottom (south side) of the trap (when viewed in plan). Position 1 is to the left (west), position 2 is to the top (north), position 3 is to the right (east) and position 4 is to the bottom (south).",
                "values": [
                  "1",
                  "12",
                  "123",
                  "1234",
                  "124",
                  "13",
                  "134",
                  "14",
                  "2",
                  "23",
                  "234",
                  "24",
                  "3",
                  "34",
                  "4",
                  "NONE"
                ]
              },
              "IsForSullageWater": {
                "type": "boolean",
                "Description": "Indicates if the purpose of the floor trap is to receive sullage water, or if that is amongst its purposes (= TRUE), or not (= FALSE). Note that if TRUE, it is expected that an upstand or kerb will be placed around the floor trap to prevent the ingress of surface water runoff; the provision of the upstand or kerb is not dealt with in this property set.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalBodyDepth": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the z-axis of the local coordinate system of the object."
              },
              "NominalBodyLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis of the local coordinate system of the object."
              },
              "NominalBodyWidth": {
                "type": "real",
                "Description": "Nominal or quoted length, measured along the y-axis of the local coordinate system of the object."
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the object."
              },
              "SpilloverLevel": {
                "type": "real",
                "Description": "The level at which water spills out of the object."
              },
              "TrapType": {
                "type": "PEnum_TrapType",
                "Description": "Identifies the predefined types of trap from which the type required may be set.",
                "values": [
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "P_TRAP",
                  "Q_TRAP",
                  "S_TRAP",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_WasteTerminalTypeFloorWaste": {
            "Properties": {
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the object."
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the y-axis in the local coordinate system of the cover of the object."
              },
              "NominalBodyDepth": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the z-axis of the local coordinate system of the object."
              },
              "NominalBodyLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis of the local coordinate system of the object."
              },
              "NominalBodyWidth": {
                "type": "real",
                "Description": "Nominal or quoted length, measured along the y-axis of the local coordinate system of the object."
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the object."
              }
            }
          },
          "Pset_WasteTerminalTypeGullySump": {
            "Properties": {
              "BackInletPatternType": {
                "type": "PEnum_BackInletPatternType",
                "Description": "Identifies the pattern of inlet connections to a gully trap.A gulley trap may have 0,1,2,3 or 4 inlet connections and the pattern of their arrangement may vary. The enumeration makes the convention that an outlet is either vertical or is placed at the bottom (south side) of the gully trap (when viewed in plan). Position 1 is to the left (west), position 2 is to the top (north), position 3 is to the right (east) and position 4 is to the bottom (south).2\n           |!                       |\n1-|                       |-3\n   !                       ||\n          4",
                "values": [
                  "1",
                  "12",
                  "123",
                  "1234",
                  "124",
                  "13",
                  "134",
                  "14",
                  "2",
                  "23",
                  "234",
                  "24",
                  "3",
                  "34",
                  "4",
                  "NONE"
                ]
              },
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the object."
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the y-axis in the local coordinate system of the cover of the object."
              },
              "GullyType": {
                "type": "PEnum_GullyType",
                "Description": "Identifies the predefined types of gully from which the type required may be set.",
                "values": [
                  "BACKINLET",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VERTICAL"
                ]
              },
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection.\nNote that all inlet connections are assumed to be the same size."
              },
              "NominalSumpDepth": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the z-axis in the local coordinate system of the sump."
              },
              "NominalSumpLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the sump."
              },
              "NominalSumpWidth": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the y-axis in the local coordinate system of the sump."
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the object."
              },
              "TrapType": {
                "type": "PEnum_TrapType",
                "Description": "Identifies the predefined types of trap from which the type required may be set.",
                "values": [
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "P_TRAP",
                  "Q_TRAP",
                  "S_TRAP",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_WasteTerminalTypeGullyTrap": {
            "Properties": {
              "BackInletPatternType": {
                "type": "PEnum_BackInletPatternType",
                "Description": "Identifies the pattern of inlet connections to a gully trap.A gulley trap may have 0,1,2,3 or 4 inlet connections and the pattern of their arrangement may vary. The enumeration makes the convention that an outlet is either vertical or is placed at the bottom (south side) of the gully trap (when viewed in plan). Position 1 is to the left (west), position 2 is to the top (north), position 3 is to the right (east) and position 4 is to the bottom (south).2\n           |!                       |\n1-|                       |-3\n   !                       ||\n          4",
                "values": [
                  "1",
                  "12",
                  "123",
                  "1234",
                  "124",
                  "13",
                  "134",
                  "14",
                  "2",
                  "23",
                  "234",
                  "24",
                  "3",
                  "34",
                  "4",
                  "NONE"
                ]
              },
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the object."
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the y-axis in the local coordinate system of the cover of the object."
              },
              "GullyType": {
                "type": "PEnum_GullyType",
                "Description": "Identifies the predefined types of gully from which the type required may be set.",
                "values": [
                  "BACKINLET",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VERTICAL"
                ]
              },
              "HasStrainer": {
                "type": "boolean",
                "Description": "Indicates whether the gully trap has a strainer (= TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection.\nNote that all inlet connections are assumed to be the same size."
              },
              "NominalBodyDepth": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the z-axis of the local coordinate system of the object."
              },
              "NominalBodyLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis of the local coordinate system of the object."
              },
              "NominalBodyWidth": {
                "type": "real",
                "Description": "Nominal or quoted length, measured along the y-axis of the local coordinate system of the object."
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the object."
              },
              "TrapType": {
                "type": "PEnum_TrapType",
                "Description": "Identifies the predefined types of trap from which the type required may be set.",
                "values": [
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "P_TRAP",
                  "Q_TRAP",
                  "S_TRAP",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_WasteTerminalTypeRoofDrain": {
            "Properties": {
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the object."
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the y-axis in the local coordinate system of the cover of the object."
              },
              "NominalBodyDepth": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the z-axis of the local coordinate system of the object."
              },
              "NominalBodyLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis of the local coordinate system of the object."
              },
              "NominalBodyWidth": {
                "type": "real",
                "Description": "Nominal or quoted length, measured along the y-axis of the local coordinate system of the object."
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the object."
              }
            }
          },
          "Pset_WasteTerminalTypeWasteDisposalUnit": {
            "Properties": {
              "DrainConnectionSize": {
                "type": "real",
                "Description": "Size of the drain connection inlet to the waste disposal unit."
              },
              "NominalDepth": {
                "type": "real",
                "Description": "Nominal or quoted depth of the object measured from the inlet drain connection to the base of the unit."
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the object."
              }
            }
          },
          "Pset_WasteTerminalTypeWasteTrap": {
            "Properties": {
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection.\nNote that all inlet connections are assumed to be the same size."
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the object."
              },
              "WasteTrapType": {
                "type": "PEnum_TrapType",
                "Description": "Identifies the predefined types of trap from which the type required may be set.",
                "values": [
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "P_TRAP",
                  "Q_TRAP",
                  "S_TRAP",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_WasteTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcConveyorSegment": {
        "Parent": "IfcFlowSegment",
        "Description": "A conveyor segment defines an occurrence of a flow segment/ continuous run within a conveyor system that joins two sections of the system. these can utilise different carrying methods such as belt, rope, chain, screw etc.NOTE  Definition according to ISO6707-1: machine that continuously transports material or objects along a gentle slope using an endless belt, rope or chain, or rollers."
      },
      "IfcLiquidTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": "A liquid terminal is a terminating or origination point for the transfer of liquid between distribution system(s). this is the point where the liquid distribution system interacts with the external environment. An example of this is a loading arm for the transfer of liquid from a docked vessel."
      },
      "IfcMarineFacility": {
        "Parent": "IfcFacility",
        "Description": "A marine facility represents any major structure or entity that is specific to the ports and waterways domain. examples of this include quays, jetties, shipyards, breakwaters etc.",
        "Psets": {
          "Pset_MarineFacilityTransportation": {
            "Properties": {
              "BerthCargoWeight": {
                "type": "real",
                "Description": "Total cargo weight of berths within the facility"
              },
              "BerthGrade": {
                "type": "string",
                "Description": "Berth grade"
              },
              "Berths": {
                "type": "integer",
                "Description": "Number of standard berths within the facility"
              }
            }
          },
          "Qto_MarineFacilityBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcMarinePart": {
        "Parent": "IfcFacilityPart",
        "Description": "Part of a marine facility."
      },
      "IfcMooringDevice": {
        "Parent": "IfcBuiltElement",
        "Description": "A mooring device is an active or passive built element who's primary function is to participate in the mooring of a vessel, this could be in the form of a bollard used as an attachment point for lines or active equipment such as quick release hooks.",
        "Psets": {
          "Pset_MooringDeviceCommon": {
            "Properties": {
              "AnchorageType": {
                "type": "PEnum_AnchorageType",
                "Description": "Mooring device anchorage type",
                "values": [
                  "CASTIN",
                  "DRILLEDANDFIXED",
                  "THROUGHBOLTED"
                ]
              },
              "DeviceCapacity": {
                "type": "real",
                "Description": "Mooring device force capacity"
              },
              "DeviceType": {
                "type": "PEnum_MooringDeviceType",
                "Description": "Mooring device type",
                "values": [
                  "CLEAT",
                  "DOUBLEBUTT",
                  "HORN",
                  "KIDNEY",
                  "PILLAR",
                  "RING",
                  "SINGLEBUTT",
                  "THEAD"
                ]
              },
              "MaximumLineCount": {
                "type": "integer",
                "Description": "Maximum number of lines that may be secured to the mooring device."
              },
              "MaximumLineSlope": {
                "type": "real",
                "Description": "Maximum allowable line angle in degrees (negative if below horizontal from quay)"
              },
              "MinumumLineSlope": {
                "type": "real",
                "Description": "Minimum allowable line angle in degrees (negative if below horizontal from quay)"
              }
            }
          }
        }
      },
      "IfcMooringDeviceType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The IfcMooringDeviceType__ _  provides the type information for _IfcMooringDevice  occurrences.\nA mooring device is an active or passive built element who's primary function is to participate in the mooring of a vessel, this could be in the form of a bollard used as an attachment point for lines or active equipment such as quick release hooks.",
        "Psets": {
          "Pset_MooringDeviceCommon": {
            "Properties": {
              "AnchorageType": {
                "type": "PEnum_AnchorageType",
                "Description": "Mooring device anchorage type",
                "values": [
                  "CASTIN",
                  "DRILLEDANDFIXED",
                  "THROUGHBOLTED"
                ]
              },
              "DeviceCapacity": {
                "type": "real",
                "Description": "Mooring device force capacity"
              },
              "DeviceType": {
                "type": "PEnum_MooringDeviceType",
                "Description": "Mooring device type",
                "values": [
                  "CLEAT",
                  "DOUBLEBUTT",
                  "HORN",
                  "KIDNEY",
                  "PILLAR",
                  "RING",
                  "SINGLEBUTT",
                  "THEAD"
                ]
              },
              "MaximumLineCount": {
                "type": "integer",
                "Description": "Maximum number of lines that may be secured to the mooring device."
              },
              "MaximumLineSlope": {
                "type": "real",
                "Description": "Maximum allowable line angle in degrees (negative if below horizontal from quay)"
              },
              "MinumumLineSlope": {
                "type": "real",
                "Description": "Minimum allowable line angle in degrees (negative if below horizontal from quay)"
              }
            }
          }
        }
      },
      "IfcNavigationElement": {
        "Parent": "IfcBuiltElement",
        "Description": "A navigation element is an active or passive built element who's primary function is to provide navigational instructions and warnings to vessels, this could be in the form of a floating buoy, a fixed beacon.\nNavigation elements can aggregate other components and elements to form the entire structure. this might include a frame structure to form the body, instances of IfcSign for signage or instances of IfcSignal for supplementary lights an/or sound signals."
      },
      "IfcTaskType": {
        "Parent": "IfcTypeProcess",
        "Description": "An IfcTaskType defines a particular type of task that may be specified for use within a work control.HISTORY  New entity in IFC4An IfcTaskType provides for all forms of types of task that may be specified. It is a reference definition for a unit of work that may be broken down into (a sequence of) subtasks. Please note that a reference definition can not be part of a workflow definition, i.e. IfcTaskType instances define the most abstract level of a reference process without dependencies to other reference processes.Usage of IfcTaskType defines the parameters for one or more occurrences of IfcTask. Parameters may be specified through property sets that may be enumerated in the IfcTaskTypeEnum data type or through explicit attributes of IfcTaskType. Task occurrences (IfcTask entities) are linked to the task type through the IfcRelDefinesByType relationship.Figure 1 shows the definition of a task type that is part of a task template library. Please note that in this example the task type is further subdivided into tasks that define task times (for example, duration) and/or a task sequence.",
        "Psets": {
          "Pset_PackingInstructions": {
            "Properties": {
              "PackingCareType": {
                "type": "PEnum_PackingCareType",
                "Description": "Identifies the predefined types of care that may be required when handling the artefact during a move where:Fragile: artefact may be broken during a move through careless handling.\nHandleWithCare: artefact may be damaged during a move through careless handling.",
                "values": [
                  "FRAGILE",
                  "HANDLEWITHCARE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "SpecialInstructions": {
                "type": "string",
                "Description": "Special instructions."
              }
            }
          }
        }
      },
      "IfcWorkControl": {
        "Parent": "IfcControl",
        "Description": "An IfcWorkControl is an abstract supertype which captures information that is common to both IfcWorkPlan and IfcWorkSchedule.HISTORY  New entity in IFC2x{ .change-ifc2x4}CHANGE IFC4  Corrected assignment of resources to work control in documentation. Assignment of tasks to work control updated based on changes of task time definitions and the introduction of a summary task. Identifier has been renamed (now Identification) and promoted to supertype IfcControlA work control may have resources assigned to it. This is handled by the IfcRelAssignsToControl relationship. A work control should also define a context that gives further information about its usage. If no special context information is required then the IfcProject instance as a global context should be used instead. An explicit link between the work control and the IfcProject via IfcRelDeclares should then be provided.The attribute IfcWorkControl.Purpose is used to define the purpose of either a work schedule or a work plan. In the case of IfcWorkPlan, the purpose attribute can be used to determine if the work plan is for cost estimating, task scheduling or some other defined purpose.",
        "Psets": {
          "Pset_WorkControlCommon": {
            "Properties": {
              "WorkDayDuration": {
                "type": "string",
                "Description": "The elapsed time within a worktime-based day. For presentation purposes, applications may choose to display IfcTask durations in work days where IfcTaskTime.DurationType=WORKTIME. This value must be less than or equal to 24 hours (an elapsed day); if omitted then 8 hours is assumed."
              },
              "WorkFinishTime": {
                "type": "string",
                "Description": "The default time of day a task is scheduled to finish. For presentation purposes, if the finish time of a task matches the WorkFinishTime, then applications may choose to display the date only. Conversely when entering dates without specifying time, applications may automatically append the WorkFinishTime."
              },
              "WorkMonthDuration": {
                "type": "string",
                "Description": "The elapsed time within a worktime-based month. For presentation purposes, applications may choose to display IfcTask durations in work months where IfcTaskTime.DurationType=WORKTIME. This value must be less than or equal to 744 hours (an elapsed month of 31 days); if omitted then 160 hours is assumed."
              },
              "WorkStartTime": {
                "type": "string",
                "Description": "The default time of day a task is scheduled to start. For presentation purposes, if the start time of a task matches the WorkStartTime, then applications may choose to display the date only. Conversely when entering dates without specifying time, applications may automatically append the WorkStartTime."
              },
              "WorkWeekDuration": {
                "type": "string",
                "Description": "The elapsed time within a worktime-based week. For presentation purposes, applications may choose to display IfcTask durations in work weeks where IfcTaskTime.DurationType=WORKTIME. This value must be less than or equal to 168 hours (an elapsed week); if omitted then 40 hours is assumed."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "CreationDate": {
                "type": "string",
                "Description": null
              },
              "Duration": {
                "type": "string",
                "Description": null
              },
              "FinishTime": {
                "type": "string",
                "Description": null
              },
              "Purpose": {
                "type": "string",
                "Description": null
              },
              "StartTime": {
                "type": "string",
                "Description": null
              },
              "TotalFloat": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcAlignment": {
        "Parent": "IfcLinearPositioningElement",
        "Description": "For the purposes of IFC the English term \"alignment\" defines three essentially separate but closely interconnected concepts.defintion of a reference system for linear positioning\nsafeguarding and optimization of the movement of vehicles - kinematic perspective\ngeometric construction of roads, railway tracks or other linear infrastructureReference system for linear positioningAn alignment is used to define a reference system to position elements mainly for linear construction works, such as roads, rails, bridges, and others. The relative positioning along the alignment is defined by the linear referencing methodology.NOTE  See ISO 19148 Geographic information \u2013 Linear referencing for general definitions about linear referencing.Kinematic perspectiveIn the kinematic perspective focus is on the safe and optimized movement of a vehicle under the constraints induced by changes in the direction of the horizontal and the vertical layout.Geometric perspectiveIn the geometric perspective the focus is on the proper placement of horizontal and vertical segments to connect certain points along a proposed path. A huge body of knowledge has been developed over a long period of time, in many aspects predating the availability of modern computers and their software.State of the art in contemporary engineeringContemporary engineering usually establishes first a horizontal layout in a properly projected plane.\n\n\nIn a second step the vertical profile (i.e. sequence of segments with constant gradients  together with smoothing segments showing a variation in gradient) is added.\n\n\nIn the rail domain in most cases a cant layout is added to the horizontal layout to compensate a part of the unwanted lateral acceleration.\n\n\nIn a final step the proposed layout is checked against a defined set of rules, formulas and thresholds to guarantee the conformance against the regulation.The sequence of steps might change from case to case and might be repeated one or more times to achieve the economic objectives and fulfill regulatory safety requirements.Contemporary alignment design almost always implements a 2.5 dimension approach.The resulting and documented geometry might be very precise or just good enough to meet safety thresholds. This depends on factors like priorities of the management, date of the design - existing alignments might have been designed more then 50 years ago - or software tools used. Working with legacy data in a high precision BIM model requires a good understanding of these factors.Distinction between business modeling and IFC core geometryAccording to IFC modeling principles alignment entities are organised in two large parts. The two parts work together, but they can also be used independently from each otherBusiness aspects of alignment\nRepresentation with the IFC geometry resourcesBusiness aspects of alignment: Here the focus is a on a schema structure as close to business terminology as possible. It is possible to have a very detailed segment structure with many domain specific properties attached. Examples for domain specific properties are design speed or cant deficiency.Representation with IFC geometry resources: Here the focus is on using as much of the established IFC geometry entities as possible. A mapping between Business aspects and IFC geometry is proposed.IFC modellingIn IFC a single alignment must have:a horizontal alignment defined in the x/y plane of the engineering coordinate systemA single alignment may have:an accompanying vertical alignment, defined along the horizontal alignment in the distance along / z coordinate space\na relative alignment, defined as a span within another alignment and/or at constant or variable offsets\na 3D alignment, either computed from the horizontal and vertical alignment, or extracted from geospatial data.Alignments may be aggregated into referents (IfcReferent) or derivative alignments. Derivative alignments may be used to indicate dependent alignments, such as an alignment for a bridge that is relative to a parent alignment for a road, where the child IfcAlignment may have its shape representation set to IfcOffsetCurveByDistances that starts and ends at a span within the extent of the shape representation of the parent IfcAlignment.Alignments may be assigned to groups using IfcRelAssignsToGroup, where IfcGroup or subtypes may capture information common to multiple alignments.Supported shape representations of IfcAlignment are:IfcGradientCurve as a 3D horizontal and vertical alignment (represented by their alignment segments)\nIfcCompositeCurve as a 2D horizontal alignment (represented by its horizontal alignment segments) without a vertical alignment\nIfcOffsetCurveByDistances as a 2D or 3D curve defined relative to an IfcAlignmentCurve or another IfcOffsetCurveByDistances\nIfcSegmentedReferenceCurve as a 3D curve defined relative to an IfcGradientCurve to incorporate the application of cant\nIfcPolyline or IfcIndexedPolyCurve as a 3D alignment by a 3D polyline representation (such as coming from a survey)\nIfcPolyline or IfcIndexedPolyCurve as a 2D horizontal alignment by a 2D polyline representation (such as in very early planning phases or as a map representation)The RepresentationIdentifier shall always be set to 'Axis' and the RepresentationType shall be set to either 'Curve2D' or 'Curve3D' depending on if the referenced curve is 2- or 3-dimensionalNOTE  Derivative specifications (Model View Definitions) may expand the above set to include additional supported curve types.",
        "Psets": {
          "Pset_LinearReferencingMethod": {
            "Properties": {
              "LRMConstraint": {
                "type": "string",
                "Description": "Allows for the specification of constraints imposed by this Linear Referencing Method. For example, a Reference Post Linear Referencing Method may specify that referents be of type \u201creference marker\u201d.NOTE definition according to ISO 19148:2021"
              },
              "LRMName": {
                "type": "string",
                "Description": "Gives the name of this Linear Referencing Method, such as \u201ckilometre-point\u201d.NOTE Definition according to ISO 19148:2021.\nNOTE Names of commonly used Linear Referencing Methods are included in ISO 19148, Annex C, along with recognized name aliases."
              },
              "LRMType": {
                "type": "PEnum_LRMType",
                "Description": "Gives the type of this Linear Referencing Method.NOTE Definition according to ISO 19148:2021, LRMType.\nNOTE Since the definition in ISO 19148:2021, LRMType is stereotyped as a CodeList it is open for user defined extensions. In this Pset this is handled by adding the enumeration constant LRM_USERDEFINED and the additional property UserDefinedLRMType",
                "values": [
                  "LRM_ABSOLUTE",
                  "LRM_INTERPOLATIVE",
                  "LRM_RELATIVE",
                  "LRM_USERDEFINED"
                ]
              },
              "LRMUnit": {
                "type": "string",
                "Description": "Specifies the units of measure used by this Linear Referencing Method for measures along the linear element being measured.NOTE Definition according to ISO 19148:2021."
              },
              "UserDefinedLRMType": {
                "type": "string",
                "Description": "Gives the user defined type of this Linear Referencing Method when property LRMType is LRM_USERDEFINED."
              }
            }
          }
        }
      },
      "IfcAlignmentCant": {
        "Parent": "IfcLinearElement",
        "Description": "An IfcAlignmentCant is a lateral inclination profile defined along the horizontal alignment. All points defined in this profile have two coordinate values. The first value is the distance along the horizontal alignment, and the second value is the height relative to the projection of the point along vertical alignment.Cant as a railway specificityNOTE figure was first published in (Basics of) Railway Curve Kinematics Presentation, (Wojtczak 2018)The diagram in the figure above shows the principle of compensating part of the lateral acceleration by elevating the outer rail relative to the inner rail of a track.Almost always the following principles for the placement of horizontal segments and cant segments are implemented:Straight horizontal line: no applied cant\nHorizontal circular arc: constant applied cant\nHorizontal transition bend: variation of applied cant according to a defined formulaIn specific difficult topographic environments like mountain lines the extension of a cant transition may differ from the horizontal transition. So far this has only been found for clothoids and is either a so called shortened ramp (can transition is shorter than the corresponding horizontal curvature transition) or a so called \u201cscissor\u201d ramp (overlapping variations of cant on both rails with opposite direction).Application of high-performance horizontal transition bends is always combined with a cant transition with identical start and end location.In real world designs, such as slow speed sections in railway stations, exceptions to the above principles can be found. It might even happen that the inner rail is elevated relative to the outer rail.Detailed geometric modelling of the superelevation has a low priority in the existing processes in most rail companies. This will very probably change with the introduction of 3D modelling in rail design. The following list shows some use cases:Correct 3D placement of certain assets (e.g. sleepers)\nRelevant input for calculation of structural gauge space\nCorrect calculation of horizontal coordinate values for the Viennese Bend\u00ae (high performance transition bend)",
        "Psets": {
          "Attributes": {
            "Properties": {
              "RailHeadDistance": {
                "type": "real",
                "Description": null
              }
            }
          }
        }
      },
      "IfcAlignmentHorizontal": {
        "Parent": "IfcLinearElement",
        "Description": "An IfcAlignmentHorizontal is a linear reference projected onto the horizontal x/y plane. Points along a horizontal alignment have two coordinate values, x and y in the local Cartesian engineering system.The horizontal alignment is defined by segments that are connected end-to-start. The transition at the segment connection is not enforced to be tangential, if the \u201ctangential continuity\u201d flag is set to false, otherwise a tangential continuity shall be preserved. Based on the context of the project, they are geo-referenced and convertible into Northing and Easting values.NOTE  Georeferencing is provided by IfcMapConversion through the IfcGeometricRepresentationContext defined at IfcProject."
      },
      "IfcAlignmentSegment": {
        "Parent": "IfcLinearElement",
        "Description": "An IfcAlignmentSegment is a segment of an IfcAlignment where either the vertical or horizontal direction or cant (in the case of trackdesign) obey a unique mathematical description as a function of the horizontal projection segment length of the alignment.NOTE 1 to entry: Unless otherwise stated, for railway, the appertaining track alignment design parameters are defined for the track center line.\nNOTE 2 to entry: For roads, the alignment typically describes the path of the road center line, but in certain situations, e.g. ramps, the alignment may describe the path of other edges of the road body\nNOTE Rail domain definitions according to EN 13803:2017",
        "Psets": {
          "Pset_AlignmentCantSegmentCommon": {
            "Properties": {
              "CantDeficiency": {
                "type": "real",
                "Description": "Difference between applied cant and a higher equilibrium cant."
              },
              "CantEquilibrium": {
                "type": "real",
                "Description": "Cant at a particular speed at which the vehicle will have a resultant force perpendicular to the running plane."
              },
              "EndSmoothingLength": {
                "type": "real",
                "Description": "Length for the circular transition change of curvature at the end of the cant segment, measured from the start of the circular transition change of curvature to the end of the cant segment."
              },
              "StartSmoothingLength": {
                "type": "real",
                "Description": "Length for the circular transition change of curvature at the start of the cant segment, measured from the start of the cant segment to the end of the circular transition change of curvature."
              }
            }
          },
          "Pset_AlignmentVerticalSegmentCommon": {
            "Properties": {
              "EndElevation": {
                "type": "real",
                "Description": "Elevation of the end point relative to the mean sea level."
              },
              "StartElevation": {
                "type": "real",
                "Description": "Elevation of the start point relative to the mean sea level."
              }
            }
          }
        }
      },
      "IfcAlignmentVertical": {
        "Parent": "IfcLinearElement",
        "Description": "An IfcAlignmentVertical is a height profile along the horizontal alignment. Points along a vertical alignment have two coordinate values. The first value is the distance along the horizontal alignment, the second value is the height according to the project engineering coordinate system. Based on the context of the project, they are georeferenced and the height value is convertible into orthogonal height above/below the vertical datum.NOTE  Georeferencing is provided by IfcCoordinateOperation through the IfcGeometricRepresentationContext defined at IfcProject."
      },
      "IfcAnnotation": {
        "Parent": "IfcProduct",
        "Description": "An annotation is an information element within the geometric (and spatial) context of a project, that adds a note or meaning to the objects which constitutes the project model. Annotations include additional points, curves, text, dimensioning, hatching and other forms of graphical notes. It also includes virtual or symbolic representations of additional model components, not representing products or spatial structures, such as event elements, survey points, contour lines or similar.NOTE  Additional presentation information (often 2D) such as tag number or hatching, that is directly related to a particular product representation is included within the IfcProductDefinitionShape having various IfcShapeRepresentation's of the IfcElement (and its subtypes). Only those presentation information, that cannot be directly related to a single product, have to be wrapped within the IfcAnnotation.If available, the annotation should be related to the spatial context of the project, by containing the annotation within the appropriate level of the building structure (site, facility, facility part or building, storey, or space). This is handled by the IfcRelContainedInSpatialStructure relationship.The IfcAnnotation can provide specific 0D, 1D, and 2D geometric items as representation of the annotation, offering annotation point, curves, and surfaces. In addition to the predefined type values in IfcAnnotationTypeEnum, the following values can be used for the ObjectType (with PredefinedType attribute value USERDEFINED).Annotation point is an annotation provided by a point that has additional semantic. The inherited attribute ObjectType should be used to capture the type of point annotation, some suggested values are:\n\nSurveyPoint: A single survey point represented by a Cartesian point. A property set may add the conditions (method, accuracy, etc. to the survey point).\nSurveyArea: A set of survey points represented by Cartesian point. These coordinates are determined relative to the coordinates of a reference point, which acts as the datum for the survey. Properties attached apply equally to all points. The difference in elevation of the survey points enables terrain to be determined.\n\n\n\nAnnotation curve is an annotation provided by a curve that has additional semantic. The inherited attribute ObjectType should be used to capture the type of curve annotation, some suggested values are:\n\nContourLine: A line of constant elevation typically used on geographic maps where the spacing of lines at constant intervals of elevation may be used as an indication of slope.\nIsoBar: A line of constant pressure typically used on weather maps or to show pressure gradient in spaces, chambers or externally.\nIsoLux: A line of constant illumination typically used to show the distribution of illumination levels and/or day lighting in a space or externally.\nIsoTherm: A line of constant temperature typically used to show the distribution and effect of heating or cooling within a space or to show temperature distribution on a geographic map.\n\n\n\nAnnotation surface: is an annotation provided by a surface that has additional semantic. The inherited attribute ObjectType should be used to capture the type of surface annotation, some suggested values are:\n\nSurveyArea: A surface patch based on survey points.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_AnnotationContourLine": {
            "Properties": {
              "ContourValue": {
                "type": "real",
                "Description": "Value of the elevation of the contour above or below a reference plane."
              }
            }
          },
          "Pset_AnnotationLineOfSight": {
            "Properties": {
              "RoadVisibleDistanceLeft": {
                "type": "real",
                "Description": "Distance visible to the left of the access."
              },
              "RoadVisibleDistanceRight": {
                "type": "real",
                "Description": "Distance visible to the right of the access."
              },
              "SetbackDistance": {
                "type": "real",
                "Description": "Setback distance from the point of connection on the major element along the axis of the minor element (e.g. distance from a public road at which the line of sigfht is measured."
              },
              "VisibleAngleLeft": {
                "type": "real",
                "Description": "Angle of visibility to the left of the access."
              },
              "VisibleAngleRight": {
                "type": "real",
                "Description": "Angle of visibility to the right of the access."
              }
            }
          },
          "Pset_AnnotationSurveyArea": {
            "Properties": {
              "AccuracyQualityExpected": {
                "type": "real",
                "Description": "A measure of the accuracy quality of survey points as expected expressed in percentage terms."
              },
              "AccuracyQualityObtained": {
                "type": "real",
                "Description": "A measure of the accuracy quality of survey points as obtained expressed in percentage terms."
              },
              "AcquisitionMethod": {
                "type": "PEnum_AcquisitionMethod",
                "Description": "The means by which survey data was acquired.",
                "values": [
                  "GPS",
                  "LASERSCAN_AIRBORNE",
                  "LASERSCAN_GROUND",
                  "NOTKNOWN",
                  "SONAR",
                  "THEODOLITE",
                  "UNSET",
                  "USERDEFINED"
                ]
              }
            }
          },
          "Pset_SoundAttenuation": {
            "Properties": {
              "SoundScale": {
                "type": "PEnum_SoundScale",
                "Description": "The reference sound scale.DBA: Decibels in an A-weighted scale\nDBB: Decibels in an B-weighted scale\nDBC: Decibels in an C-weighted scale\nNC: Noise criteria\nNR: Noise rating",
                "values": [
                  "DBA",
                  "DBB",
                  "DBC",
                  "NC",
                  "NR"
                ]
              }
            }
          }
        }
      },
      "IfcBridge": {
        "Parent": "IfcFacility",
        "Description": "A Bridge is civil engineering works that affords passage to pedestrians, animals, vehicles, and services above obstacles or between two points at a height above ground.{ .extDef}NOTE  Definition from [ISO 6707-1:2014:\nCivil engineering works that affords passage to pedestrians, animals, vehicles, and services above obstacles or between two points at a height above ground.",
        "Psets": {
          "Pset_BridgeCommon": {
            "Properties": {
              "StructureIndicator": {
                "type": "PEnum_StructureIndicator",
                "Description": "Structure Indicator",
                "values": [
                  "COATED",
                  "COMPOSITE",
                  "HOMOGENEOUS"
                ]
              }
            }
          }
        }
      },
      "IfcBridgePart": {
        "Parent": "IfcFacilityPart",
        "Description": "Part of a bridge."
      },
      "IfcBuilding": {
        "Parent": "IfcFacility",
        "Description": "A building represents a structure that provides shelter for its occupants or contents and stands in one place. The building is also used to provide a basic element within the spatial structure hierarchy for the components of a building project (together with site, storey, and space).NOTE  Definition from ISO 6707-1:\nConstruction work that has the provision of shelter for its occupants or contents as one of its main purpose and is normally designed to stand permanently in one place.A building is (if specified) associated to a site. A building may span over several connected or disconnected buildings. Therefore building complex provides for a collection of buildings included in a site. A building can also be decomposed in (vertical) parts, where each part defines a building section. This is defined by the composition type attribute of the supertype IfcSpatialStructureElements which is interpreted as follow:COMPLEX: building complex\nELEMENT: building\nPARTIAL: building sectionThe IfcBuilding is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical). The spatial structure elements are linked together by using the objectified relationship IfcRelAggregates. Figure 1 shows the IfcBuilding as part of the spatial structure. It also serves as the spatial container for building and other elements.NOTE  Detailed requirements on mandatory element containment and placement structure relationships are given in model view definitions.Figure 1 \u2014 Building compositionSystems, such as building service or electrical distribution systems, zonal systems, or structural analysis systems, relate to IfcBuilding by using the objectified relationship IfcRelServicesBuildings.Figure 2 describes the heights and elevations of the IfcBuilding. It is used to provide the height above sea level of the project height datum for this building, that is, the internal height 0.00. The height 0.00 is often used as a building internal reference height and equal to the floor finish level of the ground floor.total height of building, also referred to as ridge height (top of roof structure, e.g the ridge against terrain): provided by Qto_BuildingBaseQuantities with Name=\"Height\"\neaves height of building (base of roof structure, e.g the eaves against terrain): provided by Qto_BuildingBaseQuantities with Name=\"EavesHeight\"Figure 2 \u2014 Building elevationsHISTORY  New entity in IFC1.0.",
        "Psets": {
          "Pset_Address": {
            "Properties": {
              "Country": {
                "type": "string",
                "Description": "The two letter country code (from ISO 3166)."
              },
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "InternalLocation": {
                "type": "string",
                "Description": "An organization defined address for internal mail delivery."
              },
              "PagerNumber": {
                "type": "string",
                "Description": ""
              },
              "PostalBox": {
                "type": "string",
                "Description": "An address that is implied by an identifiable mail drop."
              },
              "PostalCode": {
                "type": "string",
                "Description": "The code that is used by the country's postal service."
              },
              "Purpose": {
                "type": "IfcAddressTypeEnum",
                "Description": "Purpose; usually an enumeration.",
                "values": [
                  "DISTRIBUTIONPOINT",
                  "HOME",
                  "OFFICE",
                  "SITE",
                  "USERDEFINED"
                ]
              },
              "Region": {
                "type": "string",
                "Description": "The name of a region.NOTE  The counties of the United Kingdom and the states of North America are examples of regions."
              },
              "Town": {
                "type": "string",
                "Description": "===========The name of a town."
              },
              "UserDefinedPurpose": {
                "type": "string",
                "Description": "Allows for specification of user specific purpose of the address beyond the enumeration values provided by Purpose attribute of type IfcAddressTypeEnum. When a value is provided for attribute UserDefinedPurpose, in parallel the attribute Purpose shall have enumeration value USERDEFINED."
              },
              "WWWHomePageURL": {
                "type": "string",
                "Description": ""
              }
            }
          },
          "Pset_BuildingCommon": {
            "Properties": {
              "BuildingID": {
                "type": "string",
                "Description": "A unique identifier assigned to a building. A temporary identifier is initially assigned at the time of making a planning application. This temporary identifier is changed to a permanent identifier when the building is registered into a statutory buildings and properties database."
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "The type of construction action to the object, e.g. new construction, renovation, refurbishment, etc."
              },
              "FireProtectionClass": {
                "type": "string",
                "Description": "Main fire protection class for the building which is assigned from the fire protection classification table as given by the relevant national building code."
              },
              "GrossPlannedArea": {
                "type": "real",
                "Description": "Total planned gross area of the spatial structure element. Used for programming the spatial structure element."
              },
              "IsLandmarked": {
                "type": "logical",
                "Description": "This builing is listed as a historic building (TRUE), or not (FALSE), or unknown.",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "IsPermanentID": {
                "type": "boolean",
                "Description": "Indicates whether the identity assigned to the object is permanent (= TRUE) or temporary (=FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NetPlannedArea": {
                "type": "real",
                "Description": "Total planned net area of the object. Used for programming the object."
              },
              "NumberOfStoreys": {
                "type": "integer",
                "Description": "The number of storeys within a building.\nCaptured for those cases where the IfcBuildingStorey entity is not used. Note that if IfcBuilingStorey is asserted and the number of storeys in a building can be determined from it, then this approach should be used in preference to setting a property for the number of storeys."
              },
              "OccupancyType": {
                "type": "string",
                "Description": "Occupancy type for this object.\nIt is defined according to the presiding national building code."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SprinklerProtection": {
                "type": "boolean",
                "Description": "Indication whether this object is sprinkler protected (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtectionAutomatic": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic sprinkler protection (TRUE) or not (FALSE).\nIt should only be given, if the property \"SprinklerProtection\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "YearOfConstruction": {
                "type": "string",
                "Description": "Year of construction of this building, including expected year of completion."
              },
              "YearOfLastRefurbishment": {
                "type": "string",
                "Description": "Year of last major refurbishment, or reconstruction, of the building (applies to reconstruction works)."
              }
            }
          },
          "Pset_BuildingUse": {
            "Properties": {
              "MarketCategory": {
                "type": "string",
                "Description": "Category of use e.g. residential, commercial, recreation etc."
              },
              "MarketSubCategory": {
                "type": "string",
                "Description": "Subset of category of use e.g. multi-family, 2 bedroom, low rise."
              },
              "NarrativeText": {
                "type": "string",
                "Description": "Added information relating to the adjacent building use that is not appropriate to the general descriptive text associated with an entity through the inherited IfcRoot.Description."
              },
              "PlanningControlStatus": {
                "type": "string",
                "Description": "Label of zoning category or class, or planning control category for the site or facility."
              },
              "VacancyRateInCategoryFuture": {
                "type": "real",
                "Description": "Percentage of vacancy found in the particular category expected in the future."
              },
              "VacancyRateInCategoryNow": {
                "type": "real",
                "Description": "Percentage of vacancy found in the particular category currently."
              }
            }
          },
          "Pset_BuildingUseAdjacent": {
            "Properties": {
              "MarketCategory": {
                "type": "string",
                "Description": "Category of use e.g. residential, commercial, recreation etc."
              },
              "MarketSubCategory": {
                "type": "string",
                "Description": "Subset of category of use e.g. multi-family, 2 bedroom, low rise."
              },
              "NarrativeText": {
                "type": "string",
                "Description": "Added information relating to the adjacent building use that is not appropriate to the general descriptive text associated with an entity through the inherited IfcRoot.Description."
              },
              "PlanningControlStatus": {
                "type": "string",
                "Description": "Label of zoning category or class, or planning control category for the site or facility."
              }
            }
          },
          "Qto_BuildingBaseQuantities": {
            "Properties": {
              "EavesHeight": {
                "type": "real",
                "Description": "Standard net height of this storey, from the top surface of the construction floor, to the bottom surface of the construction floor or roof above. Only provided is there is a constant height."
              },
              "FootPrintArea": {
                "type": "real",
                "Description": "Gross area of the site covered by the building(s)."
              },
              "GrossFloorArea": {
                "type": "real",
                "Description": "Sum of all gross floor areas covered by the spaces within the spatial structure element."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "NetFloorArea": {
                "type": "real",
                "Description": "Sum of all net usable floor areas."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_OutsideDesignCriteria": {
            "Properties": {
              "BuildingThermalExposure": {
                "type": "PEnum_BuildingThermalExposure",
                "Description": "The thermal exposure expected by the building based on surrounding site conditions.",
                "values": [
                  "HEAVY",
                  "LIGHT",
                  "MEDIUM",
                  "NOTKNOWN",
                  "UNSET"
                ]
              },
              "CoolingDesignDay": {
                "type": "string",
                "Description": "The month, day  and time that has been selected for the cooling design calculations."
              },
              "CoolingDryBulb": {
                "type": "real",
                "Description": "Dry bulb temperature, usually for for cooling design."
              },
              "CoolingWetBulb": {
                "type": "real",
                "Description": "Outside wet bulb temperature for cooling design."
              },
              "HeatingDesignDay": {
                "type": "string",
                "Description": "The month, day and time that has been selected for the heating design calculations."
              },
              "HeatingDryBulb": {
                "type": "real",
                "Description": "Dry bulb temperature for heating design."
              },
              "HeatingWetBulb": {
                "type": "real",
                "Description": "Outside wet bulb temperature for heating design."
              },
              "PrevailingWindDirection": {
                "type": "real",
                "Description": "The prevailing wind angle direction measured from True North (0 degrees) in a clockwise direction."
              },
              "PrevailingWindVelocity": {
                "type": "real",
                "Description": "The design wind velocity coming from the direction specified by the PrevailingWindDirection attribute."
              },
              "WeatherDataDate": {
                "type": "string",
                "Description": "The date for which the weather data was gathered."
              },
              "WeatherDataStation": {
                "type": "string",
                "Description": "The site weather data station description or reference to the data source from which weather data was obtained for use in calculations."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "ElevationOfRefHeight": {
                "type": "real",
                "Description": null
              },
              "ElevationOfTerrain": {
                "type": "real",
                "Description": null
              }
            }
          }
        }
      },
      "IfcBuildingStorey": {
        "Parent": "IfcSpatialStructureElement",
        "Description": "The building storey has an elevation and typically represents a (nearly) horizontal aggregation of spaces that are vertically bound.NOTE  Definition from ISO 6707-1:\nspace between two consecutive floors or between a floor and a roofA storey is (if specified) associated to a building. A storey may span over several connected storeys. Therefore storey complex provides for a collection of storeys included in a building. A storey can also be decomposed in (horizontical) parts, where each part defines a partial storey. This is defined by the composition type attribute of the supertype IfcSpatialStructureElement which is interpreted as follow:COMPLEX: building storey complex\nELEMENT: building storey\nPARTIAL: partial building storeyEXAMPLE  In split level houses, a storey is split into two or more partial storeys, each with a different elevation. It can be handled by defining a storey, which includes two or more partial storeys with the individual elevations.The IfcBuildingStorey is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical). The spatial structure elements are linked together by using the objectified relationship IfcRelAggregates.Figure 1 shows the IfcBuildingStorey as part of the spatial structure. It also serves as the spatial container for building and other elements.NOTE  Detailed requirements on mandatory element containment and placement structure relationships are provided in model view definitions.Figure 1 \u2014 Building storey compositionFigure 2 describes the heights and elevations of the IfcBuildingStorey.elevation of the structural slab level: provided by Pset_BuildingStoreyCommon with Name=\"ElevationOfSSLRelative\"\nelevation of the finish floor level: provided by Pset_BuildingStoreyCommon with Name=\"ElevationOfFFLRelative\"\ngross height of storey, also referred to as total height or system height (top of construction slab to top of construction slab above): provided by Qto_BuildingStoreyBaseQuantities with Name=\"GrossHeight\"\nnet height of storey (top of construction slab to bottom of construction slab above): provided by Qto_BuildingStoreyBaseQuantities with Name=\"NetHeight\"Figure 2 \u2014 Example showing the use of base quantities for building storeysHISTORY  New entity in IFC1.0",
        "Psets": {
          "Pset_BuildingStoreyCommon": {
            "Properties": {
              "AboveGround": {
                "type": "logical",
                "Description": "Indication whether this building storey is fully above ground (TRUE), or below ground (FALSE), or partially above and below ground (UNKNOWN) - as in sloped terrain.",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "ElevationOfFFLRelative": {
                "type": "real",
                "Description": "Elevation of the top surface of the finished floor level given in elevation above the local zero height. If the level varies and there is no significantly more prominent elevation, then this property may be omitted. In case of any inconsistency with the geometric positioning of the top surface, the geometric representation takes precedence."
              },
              "ElevationOfSSLRelative": {
                "type": "real",
                "Description": "Elevation of the top surface of the structural slab level given in elevation above the local zero height. If the level varies and there is no significantly more prominent elevation, then this property may be omitted. In case of any inconsistency with the geometric positioning of the top surface, the geometric representation takes precedence."
              },
              "EntranceLevel": {
                "type": "boolean",
                "Description": "Indication whether this building storey is an entrance level to the building (TRUE), or (FALSE) if otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "GrossPlannedArea": {
                "type": "real",
                "Description": "Total planned gross area of the spatial structure element. Used for programming the spatial structure element."
              },
              "LoadBearingCapacity": {
                "type": "real",
                "Description": "Maximum load bearing capacity of the floor structure throughtout the storey as designed."
              },
              "NetPlannedArea": {
                "type": "real",
                "Description": "Total planned net area of the object. Used for programming the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SprinklerProtection": {
                "type": "boolean",
                "Description": "Indication whether this object is sprinkler protected (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtectionAutomatic": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic sprinkler protection (TRUE) or not (FALSE).\nIt should only be given, if the property \"SprinklerProtection\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Qto_BuildingStoreyBaseQuantities": {
            "Properties": {
              "GrossFloorArea": {
                "type": "real",
                "Description": "Sum of all gross floor areas covered by the spaces within the spatial structure element."
              },
              "GrossHeight": {
                "type": "real",
                "Description": "Standard gross height of this storey, from the top surface of the construction floor, to the top surface of the construction floor or roof above. Only provided is there is a constant height."
              },
              "GrossPerimeter": {
                "type": "real",
                "Description": "Gross perimeter at the outer contour of the object."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "NetFloorArea": {
                "type": "real",
                "Description": "Sum of all net usable floor areas."
              },
              "NetHeight": {
                "type": "real",
                "Description": "Standard net height of this storey, from the top surface of the construction floor, to the bottom surface of the construction floor or roof above. Only provided is there is a constant height."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Elevation": {
                "type": "real",
                "Description": null
              }
            }
          }
        }
      },
      "IfcBuiltElement": {
        "Parent": "IfcElement",
        "Description": "The built element comprises all elements that are primarily part of the construction of a built facility, i.e., its structural and space separating system. Built elements are all physically existent and tangible things.This IfcBuiltElement is a generalization of all elements that are major functional parts of the structural or space separation system of a built facility. Typical examples of IfcBuiltElement's are (among others):built elements within a space separation systems\nbuilt elements within an enclosure system (such as a facade)\nbuilt elements within a fenestration system\nbuilt elements within a load bearing system\nbuilt elements within a foundation system\nbuilt elements within an infrastructure facilityEXAMPLE  built elements are curtain wall, doors, and others in case of buildings; walls, columns, pile, beams in case of buildings or infrastructure works, bearings in case of bridges, pavements in case of roads or rails in case of railways.The IfcBuiltElement can be instantiated in the case when arbitrary built elements cannot be expressed by a subtype of IfcBuiltElement.NOTE  The deprecated IfcBuildingElementProxy shall not be used to represent any arbitrary built element, use a direct instantiation of IfcBuiltElement instead.\nHISTORY  New entity in IFC1.0\nIFC4.3.0.0 CHANGE  The entity has been renamed from IfcBuildingElement and made non abstract."
      },
      "IfcBuiltElementType": {
        "Parent": "IfcElementType",
        "Description": "The IfcBuiltElementType provides the type information for IfcBuiltElement occurrences.NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.A built element type is used to define the common properties of a certain type of built element that are applied to all occurrences of that type. It is used to define a built element specification (i.e. the specific product information, that is common to all occurrences of that product type). Built element types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.The IfcBuiltElementType can be instantiated in the case when arbitrary built element types cannot be expressed by a subtype of IfcBuiltElementType.NOTE  The deprecated IfcBuildingElementProxyType shall not be used to represent any arbitrary built element type, use a direct instantiation of IfcBuiltElementType instead.Occurrences of subtypes of the IfcBuiltElementType are represented by instances of the appropriate subtypes of IfcBuiltElement.HISTORY  New entity in IFC2x2.\nIFC4.3.0.0 CHANGE  The entity has been renamed from IfcBuildingElementType and made non abstract."
      },
      "IfcBuiltSystem": {
        "Parent": "IfcSystem",
        "Description": "A built system is a group by which built elements are grouped according to a common function within the facility.\nThe group IfcBuiltSystem  defines the occurrence of a specialized system for use within the context of a facilities physical or finishing fabric. Important functionalities for the description of a built system are derived from supertypes:\n* From IfcSystem it inherits the ability to couple the built system via IfcRelReferencedInSpatialStructure to one or more IfcSpatialElement subtypes as necessary.\n* From IfcGroup it inherits the inverse attribute IsGroupedBy, pointing to the relationship class IfcRelAssignsToGroup . This allows the grouping of built elements (instances of IfcBuiltElement subtypes, IfcFurnishingElement subtypes, IfcElementAssembly and IfcTransportElement).\n* From IfcObjectDefinition it inherits the inverse attribute IsDecomposedBy pointing to the relationship class IfcRelAggregates. It provides the hierarchy between the separate (partial) building systems.",
        "Psets": {
          "Pset_ProcessCapacity": {
            "Properties": {
              "ProcessCapacity": {
                "type": "integer",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance"
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcCivilElement": {
        "Parent": "IfcElement",
        "Description": "An IfcCivilElement is a generalization of all elements within a civil engineering works that cannot be represented as BuildingElements, DistributionElements or GeographicElements. Depending on the context of the construction project, included building work, such as buildings or factories, are represented as a collection of IfcBuildingElement's, distribution systems, such as piping or drainage, are represented as a collection of IfcDistributionElement's, and other geographic elements, such as trees, light posts, traffic signs etc. are represented as IfcGeographicElement's.NOTE  The IfcCivilElement has been introduced as a stub for future extensions of this specification to include an object model for civil engineering works.Civil elements are typically horizontally organized using a spatial structure expressed by spatial zones, therefore IfcCivilElement is spatially contained by default within an IfcSpatialZone.HISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_CivilElementCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcCivilElementType": {
        "Parent": "IfcElementType",
        "Description": "An IfcCivilElementType is used to define an element specification of an element used within civil engineering works. Civil element types include for different types of element that may be used to represent information for construction works external to a building. IfcCivilElementType's may include:linear elements such as sections of a roadway (including carriageway/pavement, verge, median, marker line, kerb etc.);\nelements for connections and junctions including traffic roundabouts, T junctions, 4 way junctions;\nelements for supporting structures such as piers, piles, pylons, and similar.The specification of the specific types is provided by the inherited attribute IfcElementType.ElementType given as an IfcLabel.NOTE  This is due to the range of choices of element type that are available and their expression in different languages. It is not considered possible to create a reasonably full list of types within an enumeration. It is suggested that selection of the relevant type be drawn from an available 'feature catalog'.\nNOTE  The IfcCivilElementType has been introduced as a stub for future extensions of this specification to include an object model for civil engineering works.\nHISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_CivilElementCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcDistributionElement": {
        "Parent": "IfcElement",
        "Description": "This IfcDistributionElement is a generalization of all elements that participate in a distribution system. Typical examples of IfcDistributionElement's are (among others):building service elements within a heating systems\nbuilding service elements within a cooling system\nbuilding service elements within a ventilation system\nbuilding service elements within a plumbing system\nbuilding service elements within a drainage system\nelectrical elements\nelements within a communication network\nwithin a sensor (monitoring) networkThe IfcDistributionElement is further specialized in the IFC specification. Direct instantiation of IfcDistributionElement without an assigned subtype of IfcDistributionElementType provides the meaning of an distribution element proxy.HISTORY  New entity in IFC1.5.{ .change-ifc2x4}IFC4 CHANGE The entity is marked as deprecated for instantiation - will be made ABSTRACT in future releases.",
        "Psets": {
          "Pset_ElectricalDeviceCommon": {
            "Properties": {
              "ConductorFunction": {
                "type": "PEnum_ConductorFunctionEnum",
                "Description": "Indicates function of the conductors to which the load is connected. Where L1, L2 and L3 represent the phase lines according to IEC 60446 notation (sometimes phase lines may be referenced by color [Red, Blue, Yellow] or by number [1, 2, 3] etc). Protective Earth is sometimes also known as CPC or common protective conductor. Note that for an electrical device, a set of line conductor functions may be applied.",
                "values": [
                  "NEUTRAL",
                  "NOTKNOWN",
                  "OTHER",
                  "PHASE_L1",
                  "PHASE_L2",
                  "PHASE_L3",
                  "PROTECTIVEEARTH",
                  "PROTECTIVEEARTHNEUTRAL",
                  "UNSET"
                ]
              },
              "EarthingStyle": {
                "type": "string",
                "Description": "Indicates the earthing style of the electric device."
              },
              "HasProtectiveEarth": {
                "type": "boolean",
                "Description": "Indicates whether the object has a protective earth connection (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HeatDissipation": {
                "type": "real",
                "Description": "Indicates the heat dissipation of the electric device measured in power."
              },
              "IK_Code": {
                "type": "string",
                "Description": "IK Code according to IEC 62262 (2002) is a numeric classification for the degree of protection provided by enclosures for electrical equipment against external mechanical impacts.NOTE  In earlier labeling, the third numeral (1..) had been occasionally added to the closely related IP Code on ingress protection, to indicate the level of impact protection."
              },
              "InsulationStandardClass": {
                "type": "PEnum_InsulationStandardClass",
                "Description": "Insulation standard classes provides basic protection information against electric shock. Defines levels of insulation required in terms of constructional requirements (creepage and clearance distances) and electrical requirements (compliance with electric strength tests). Basic insulation is considered to be shorted under single fault conditions. The actual values required depend on the working voltage to which the insulation is subjected, as well as other factors. Also indicates whether the electrical device has a protective earth connection.",
                "values": [
                  "CLASS0APPLIANCE",
                  "CLASS0IAPPLIANCE",
                  "CLASSIAPPLIANCE",
                  "CLASSIIAPPLIANCE",
                  "CLASSIIIAPPLIANCE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "IP_Code": {
                "type": "string",
                "Description": "IP Code, the International Protection Marking, IEC 60529), classifies and rates the degree of protection provided against intrusion."
              },
              "NominalPowerConsumption": {
                "type": "real",
                "Description": "Nominal total power consumption."
              },
              "NumberOfPoles": {
                "type": "integer",
                "Description": "Number of poles that the object would affect."
              },
              "PowerFactor": {
                "type": "real",
                "Description": "Power factor; usually as ratio."
              }
            }
          },
          "Pset_EnergyRequirements": {
            "Properties": {
              "EnergyConsumption": {
                "type": "real",
                "Description": "Annual energy consumption requirement"
              },
              "EnergyConversionEfficiency": {
                "type": "real",
                "Description": "Measure of the efficiency of conversion of fuel energy to mechanical energy"
              },
              "EnergySourceLabel": {
                "type": "string",
                "Description": "Type of energy source e.g. Electricity, Diesel, LPG etc. utilised by the element."
              },
              "PowerDemand": {
                "type": "real",
                "Description": "Power demand of the element"
              }
            }
          },
          "Pset_EnvironmentalEmissions": {
            "Properties": {
              "CarbonDioxideEmissions": {
                "type": "real",
                "Description": "Rate of emission of carbon dioxide"
              },
              "NitrogenOxidesEmissions": {
                "type": "real",
                "Description": "Rate of emission of nitrogen oxides"
              },
              "NoiseEmissions": {
                "type": "real",
                "Description": "Level of sound emission"
              },
              "ParticulateMatterEmissions": {
                "type": "real",
                "Description": "Rate of emission of particulate matter"
              },
              "SulphurDioxideEmissions": {
                "type": "real",
                "Description": "Rate of emission of sulphur dioxide"
              }
            }
          }
        }
      },
      "IfcDistributionElementType": {
        "Parent": "IfcElementType",
        "Description": "The IfcDistributionElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is common to all occurrences of that product type).NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.A distribution element type is used to define the common properties of a certain type of a distribution element that may be applied to many instances of that feature type to assign a specific style. Distribution element types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.The occurrences of the IfcDistributionElementType are represented by instances of IfcDistributionElement (or its subtypes).HISTORY  New entity in IFC2x2.{ .change-ifc2x3}IFC2x3 CHANGE  The entity has been made non-abstract{ .change-ifc2x3}IFC4 CHANGE  The entity is marked as deprecated for instantiation - will be made ABSTRACT in future releases.",
        "Psets": {
          "Pset_ElectricalDeviceCommon": {
            "Properties": {
              "ConductorFunction": {
                "type": "PEnum_ConductorFunctionEnum",
                "Description": "Indicates function of the conductors to which the load is connected. Where L1, L2 and L3 represent the phase lines according to IEC 60446 notation (sometimes phase lines may be referenced by color [Red, Blue, Yellow] or by number [1, 2, 3] etc). Protective Earth is sometimes also known as CPC or common protective conductor. Note that for an electrical device, a set of line conductor functions may be applied.",
                "values": [
                  "NEUTRAL",
                  "NOTKNOWN",
                  "OTHER",
                  "PHASE_L1",
                  "PHASE_L2",
                  "PHASE_L3",
                  "PROTECTIVEEARTH",
                  "PROTECTIVEEARTHNEUTRAL",
                  "UNSET"
                ]
              },
              "EarthingStyle": {
                "type": "string",
                "Description": "Indicates the earthing style of the electric device."
              },
              "HasProtectiveEarth": {
                "type": "boolean",
                "Description": "Indicates whether the object has a protective earth connection (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HeatDissipation": {
                "type": "real",
                "Description": "Indicates the heat dissipation of the electric device measured in power."
              },
              "IK_Code": {
                "type": "string",
                "Description": "IK Code according to IEC 62262 (2002) is a numeric classification for the degree of protection provided by enclosures for electrical equipment against external mechanical impacts.NOTE  In earlier labeling, the third numeral (1..) had been occasionally added to the closely related IP Code on ingress protection, to indicate the level of impact protection."
              },
              "InsulationStandardClass": {
                "type": "PEnum_InsulationStandardClass",
                "Description": "Insulation standard classes provides basic protection information against electric shock. Defines levels of insulation required in terms of constructional requirements (creepage and clearance distances) and electrical requirements (compliance with electric strength tests). Basic insulation is considered to be shorted under single fault conditions. The actual values required depend on the working voltage to which the insulation is subjected, as well as other factors. Also indicates whether the electrical device has a protective earth connection.",
                "values": [
                  "CLASS0APPLIANCE",
                  "CLASS0IAPPLIANCE",
                  "CLASSIAPPLIANCE",
                  "CLASSIIAPPLIANCE",
                  "CLASSIIIAPPLIANCE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "IP_Code": {
                "type": "string",
                "Description": "IP Code, the International Protection Marking, IEC 60529), classifies and rates the degree of protection provided against intrusion."
              },
              "NominalPowerConsumption": {
                "type": "real",
                "Description": "Nominal total power consumption."
              },
              "NumberOfPoles": {
                "type": "integer",
                "Description": "Number of poles that the object would affect."
              },
              "PowerFactor": {
                "type": "real",
                "Description": "Power factor; usually as ratio."
              }
            }
          },
          "Pset_EnergyRequirements": {
            "Properties": {
              "EnergyConsumption": {
                "type": "real",
                "Description": "Annual energy consumption requirement"
              },
              "EnergyConversionEfficiency": {
                "type": "real",
                "Description": "Measure of the efficiency of conversion of fuel energy to mechanical energy"
              },
              "EnergySourceLabel": {
                "type": "string",
                "Description": "Type of energy source e.g. Electricity, Diesel, LPG etc. utilised by the element."
              },
              "PowerDemand": {
                "type": "real",
                "Description": "Power demand of the element"
              }
            }
          },
          "Pset_EnvironmentalEmissions": {
            "Properties": {
              "CarbonDioxideEmissions": {
                "type": "real",
                "Description": "Rate of emission of carbon dioxide"
              },
              "NitrogenOxidesEmissions": {
                "type": "real",
                "Description": "Rate of emission of nitrogen oxides"
              },
              "NoiseEmissions": {
                "type": "real",
                "Description": "Level of sound emission"
              },
              "ParticulateMatterEmissions": {
                "type": "real",
                "Description": "Rate of emission of particulate matter"
              },
              "SulphurDioxideEmissions": {
                "type": "real",
                "Description": "Rate of emission of sulphur dioxide"
              }
            }
          }
        }
      },
      "IfcElement": {
        "Parent": "IfcProduct",
        "Description": "An element is a generalization of all components that make up an AEC product.Elements are physically existent objects, although they might be void elements, such as holes. Elements either remain permanently in the AEC product, or only temporarily, as formwork does. Elements can be either assembled on site or pre-manufactured and built in on site.EXAMPLE  Examples of elements in a building construction context are walls, floors, windows and recesses.The elements can be logically contained by a spatial structure element that constitutes a certain level within a project structure hierarchy (site, building, storey or space). This is done by using the IfcRelContainedInSpatialStructure relationship. An element can have material and quantity information assigned through the IfcRelAssociatesMaterial and IfcRelDefinesByProperties relationship.In addition an element can be declared to be a specific occurrence of an element type (and thereby be defined by the element type properties) using the IfcRelDefinesByType relationship. An element can also be defined as an element assembly that is a group of semantically and topologically related elements that form a higher level part of the AEC product. Those element assemblies are defined by virtue of the IfcRelAggregates relationship.EXAMPLE  Examples for element assembly are complete Roof Structures, made by several Roof Areas, or a Stair, composed by Flights and Landings.Elements that performs the same function may be grouped by an \"Element Group By Function\". It is realized by an instance of IfcGroup with the ObjectType ='ElementGroupByFunction'.HISTORY  New entity in IFC1.0",
        "Psets": {
          "Pset_EnvironmentalImpactIndicators": {
            "Properties": {
              "AtmosphericAcidificationPerUnit": {
                "type": "real",
                "Description": "Quantity of gases responsible for the atmospheric acidification calculated in equivalent SO2"
              },
              "ClimateChangePerUnit": {
                "type": "real",
                "Description": "Quantity of greenhouse gases emitted calculated in equivalent CO2"
              },
              "EutrophicationPerUnit": {
                "type": "real",
                "Description": "Quantity of eutrophicating compounds calculated in equivalent PO4"
              },
              "ExpectedServiceLife": {
                "type": "real",
                "Description": "Expected service life in years."
              },
              "FunctionalUnitReference": {
                "type": "string",
                "Description": "Reference to a database or a classification"
              },
              "HazardousWastePerUnit": {
                "type": "real",
                "Description": "Quantity of hazardous waste generated"
              },
              "IndicatorsUnit": {
                "type": "string",
                "Description": "The unit of the quantity the environmental indicators values are related with."
              },
              "InertWastePerUnit": {
                "type": "real",
                "Description": "Quantity of inert waste generated"
              },
              "LifeCyclePhase": {
                "type": "PEnum_LifeCyclePhase",
                "Description": "The whole life cycle or only a given phase  from which environmental data are valid.",
                "values": [
                  "ACQUISITION",
                  "CRADLETOSITE",
                  "DECONSTRUCTION",
                  "DISPOSAL",
                  "DISPOSALTRANSPORT",
                  "GROWTH",
                  "INSTALLATION",
                  "MAINTENANCE",
                  "MANUFACTURE",
                  "NOTDEFINED",
                  "OCCUPANCY",
                  "OPERATION",
                  "PROCUREMENT",
                  "PRODUCTION",
                  "PRODUCTIONTRANSPORT",
                  "RECOVERY",
                  "REFURBISHMENT",
                  "REPAIR",
                  "REPLACEMENT",
                  "TRANSPORT",
                  "USAGE",
                  "USERDEFINED",
                  "WASTE",
                  "WHOLELIFECYCLE"
                ]
              },
              "NonHazardousWastePerUnit": {
                "type": "real",
                "Description": "Quantity of non hazardous waste generated"
              },
              "NonRenewableEnergyConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of non-renewable energy used as defined in ISO21930:2007"
              },
              "PhotochemicalOzoneFormationPerUnit": {
                "type": "real",
                "Description": "Quantity of gases creating the photochemical ozone calculated in equivalent ethylene"
              },
              "RadioactiveWastePerUnit": {
                "type": "real",
                "Description": "Quantity of radioactive waste generated"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RenewableEnergyConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of renewable energy used as defined in ISO21930:2007"
              },
              "ResourceDepletionPerUnit": {
                "type": "real",
                "Description": "Quantity of resources used calculated in equivalent antimony"
              },
              "StratosphericOzoneLayerDestructionPerUnit": {
                "type": "real",
                "Description": "Quantity of gases destroying the stratospheric ozone layer calculated in equivalent CFC-R11"
              },
              "TotalPrimaryEnergyConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of energy used as defined in ISO21930:2007."
              },
              "WaterConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of water used."
              }
            }
          },
          "Pset_EnvironmentalImpactValues": {
            "Properties": {
              "AtmosphericAcidification": {
                "type": "real",
                "Description": "Quantity of gases responsible for the atmospheric acidification calculated in equivalent SO2."
              },
              "ClimateChange": {
                "type": "real",
                "Description": "Quantity of greenhouse gases emitted calculated in equivalent CO2."
              },
              "Duration": {
                "type": "string",
                "Description": "Duration."
              },
              "Eutrophication": {
                "type": "real",
                "Description": "Quantity of eutrophicating compounds calculated in equivalent PO4."
              },
              "HazardousWaste": {
                "type": "real",
                "Description": "Quantity of hazardous waste generated."
              },
              "InertWaste": {
                "type": "real",
                "Description": "Quantity of inert waste generated ."
              },
              "LeadInTime": {
                "type": "string",
                "Description": "Lead in time before start of process."
              },
              "LeadOutTime": {
                "type": "string",
                "Description": "Lead out time after end of process."
              },
              "NonHazardousWaste": {
                "type": "real",
                "Description": "Quantity of non hazardous waste generated."
              },
              "NonRenewableEnergyConsumption": {
                "type": "real",
                "Description": "Quantity of non-renewable energy used as defined in ISO21930:2007"
              },
              "PhotochemicalOzoneFormation": {
                "type": "real",
                "Description": "Quantity of gases creating the photochemical ozone calculated in equivalent ethylene."
              },
              "RadioactiveWaste": {
                "type": "real",
                "Description": "Quantity of radioactive waste generated."
              },
              "RenewableEnergyConsumption": {
                "type": "real",
                "Description": "Quantity of renewable energy used as defined in ISO21930:2007"
              },
              "ResourceDepletion": {
                "type": "real",
                "Description": "Quantity of resources used calculated in equivalent antimony."
              },
              "StratosphericOzoneLayerDestruction": {
                "type": "real",
                "Description": "Quantity of gases destroying the stratospheric ozone layer calculated in equivalent CFC-R11."
              },
              "TotalPrimaryEnergyConsumption": {
                "type": "real",
                "Description": "Quantity of energy used as defined in ISO21930:2007."
              },
              "WaterConsumption": {
                "type": "real",
                "Description": "Quantity of water used."
              }
            }
          },
          "Pset_EnvironmentalCondition": {
            "Properties": {
              "MaximumAtmosphericPressure": {
                "type": "real",
                "Description": "Maximum level of atmospheric pressure that the equipment can operate effectively in."
              },
              "MaximumRainIntensity": {
                "type": "real",
                "Description": "Maximum level of rain intensity that the equipment can operate effectively in. It is usually measured in millimeter per hour (mm/h)."
              },
              "MaximumSolarRadiation": {
                "type": "real",
                "Description": "Maximum level of solar irradiance that the equipment can operate effectively in. This is usually tested and measured by a national or international standard. The value indicates power density measured in watt per square meter (w/m2)."
              },
              "MaximumWindSpeed": {
                "type": "real",
                "Description": "Maximum resistance to wind load exposure."
              },
              "SaltMistLevel": {
                "type": "string",
                "Description": "Maximum level of salt mist that the equipment can operate effectively in. It is provided according to an international or national standard."
              },
              "SeismicResistance": {
                "type": "real",
                "Description": "Maximum magnitude of earthquake that the equipment complies with. The value indicates earthquake intensity measured in Richter scale."
              },
              "SmokeLevel": {
                "type": "string",
                "Description": "Maximum level of smoke that the equipment complies with. It is provided according to an international or national standard."
              }
            }
          },
          "Pset_InstallationOccurrence": {
            "Properties": {
              "AcceptanceDate": {
                "type": "string",
                "Description": "Date on which the element is accepted by the manager or administrator."
              },
              "InstallationDate": {
                "type": "string",
                "Description": "Date on which the element is installed."
              },
              "PutIntoOperationDate": {
                "type": "string",
                "Description": "Date on which the element is put into operation."
              }
            }
          },
          "Pset_RepairOccurrence": {
            "Properties": {
              "MeanTimeToRepair": {
                "type": "real",
                "Description": "Mean time to repair."
              },
              "RepairContent": {
                "type": "string",
                "Description": "Content of repair, reason and nature can be given, e.g. display faults, communication failure, display exchange."
              },
              "RepairDate": {
                "type": "string",
                "Description": "Date on which the last repair is done on the asset."
              }
            }
          },
          "Pset_Condition": {
            "Properties": {
              "AssessmentCondition": {
                "type": "string",
                "Description": "The overall condition of a product based on an assessment of the contributions to the overall condition made by the various criteria considered. The meanings given to the values of assessed condition should be agreed and documented by local agreements. For instance, is overall condition measured on a scale of 1 - 10 or by assigning names such as Good, OK, Poor."
              },
              "AssessmentDate": {
                "type": "string",
                "Description": "Date on which the overall condition is assessed"
              },
              "AssessmentDescription": {
                "type": "string",
                "Description": "Qualitative description of the condition."
              },
              "AssessmentFrequency": {
                "type": "real",
                "Description": "Indicates how often the equipment should be assessed, to have a clear estimation on its working state, based on which the maintenance staff can decide whether it requires maintenance or requires to be updated or replaced."
              },
              "AssessmentType": {
                "type": "string",
                "Description": "Category of latest condition assessment report of the asset."
              },
              "LastAssessmentReport": {
                "type": "string",
                "Description": "Reference to latest condition (state of health) report."
              },
              "NextAssessmentDate": {
                "type": "string",
                "Description": "Date of next condition inspection"
              }
            }
          },
          "Pset_ConstructionAdministration": {
            "Properties": {
              "ProcurementMethod": {
                "type": "string",
                "Description": "The method by which an IfcProductType/IfcProduct is acquired and installed. The value provided shall be one of the following four character acronyms: \u201cCFCI\u201d (meaning Contractor Furnished Contractor Installed), \u201cOFCI\u201d (meaning Owner Furnished Contractor Installed), or \u201cOFOI\u201d (meaning Owner Furnished Owner Installed)."
              },
              "SpecificationSectionNumber": {
                "type": "string",
                "Description": "A reference number to an external contract technical specification section describing either (a) minimum performance requirements of a given IfcProductType/IfcProduct or (b) a preselection for a specific IfcProductType/IfcProduct made for this project."
              },
              "SubmittalIdentifer": {
                "type": "string",
                "Description": "The reference number to an external construction administration submittal used by the construction contractor and/or subcontractor to verify that the referenced IfcProductType/IfcProduct selection conforms with the requirements found in the referenced SpecificationSectionNumber."
              }
            }
          },
          "Pset_ConstructionOccurance": {
            "Properties": {
              "AssetIdentifier": {
                "type": "string",
                "Description": "A unique identification assigned to an asset that enables its differentiation from other assets.NOTE  The asset identifier is unique within the asset register. It differs from the globally unique id assigned to the instance of an entity populating a database."
              },
              "InstallationDate": {
                "type": "string",
                "Description": "Date on which the element is installed."
              },
              "ModelNumber": {
                "type": "string",
                "Description": "The model number and/or unit designator assigned by the manufacturer of the manufactured item."
              },
              "TagNumber": {
                "type": "string",
                "Description": "Tag number."
              }
            }
          },
          "Pset_MaintenanceStrategy": {
            "Properties": {
              "AccidentResponse": {
                "type": "PEnum_AccidentResponse",
                "Description": "Accident response chosen for the asset",
                "values": [
                  "EMERGENCYINSPECTION",
                  "EMERGENCYPROCEDURE",
                  "REACTIVE",
                  "URGENTINSPECTION",
                  "URGENTPROCEDURE"
                ]
              },
              "AssetCriticality": {
                "type": "PEnum_AssetRating",
                "Description": "Rating of the asset's criticality to the operation of the facility",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "AssetFrailty": {
                "type": "PEnum_AssetRating",
                "Description": "Rating of the asset's frailty to breakage or deterioration",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "AssetPriority": {
                "type": "PEnum_AssetRating",
                "Description": "Combined criticality and frailty rating indicating the operational and maintenance priority of the asset",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MonitoringType": {
                "type": "PEnum_MonitoringType",
                "Description": "Monitoring strategy chosen for the asset",
                "values": [
                  "FEEDBACK",
                  "INSPECTION",
                  "IOT",
                  "PPM",
                  "SENSORS"
                ]
              }
            }
          },
          "Pset_MaintenanceTriggerCondition": {
            "Properties": {
              "ConditionDisposalLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger a disposal process",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionMaintenanceLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger maintenance",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionReplacementLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger a replacement process",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionTargetPerformance": {
                "type": "PEnum_AssetRating",
                "Description": "Target condition of the asset",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              }
            }
          },
          "Pset_MaintenanceTriggerDuration": {
            "Properties": {
              "DurationDisposalLevel": {
                "type": "string",
                "Description": "Duration interval at which disposal is performed"
              },
              "DurationMaintenanceLevel": {
                "type": "string",
                "Description": "Duration interval at which maintenance is performed"
              },
              "DurationReplacementLevel": {
                "type": "string",
                "Description": "Duration interval at which replacement is performed"
              },
              "DurationTargetPerformance": {
                "type": "string",
                "Description": "Target time to failure of the asset"
              }
            }
          },
          "Pset_MaintenanceTriggerPerformance": {
            "Properties": {
              "DisposalLevel": {
                "type": "real",
                "Description": "Performance level at which disposal takes place"
              },
              "PerformanceMaintenanceLevel": {
                "type": "real",
                "Description": "Performance level at which maintenance takes place"
              },
              "ReplacementLevel": {
                "type": "real",
                "Description": "Performance level at which replacement takes place"
              },
              "TargetPerformance": {
                "type": "real",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute."
              }
            }
          },
          "Pset_ManufacturerOccurrence": {
            "Properties": {
              "AcquisitionDate": {
                "type": "string",
                "Description": "The date that the manufactured item was purchased."
              },
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "BarCode": {
                "type": "string",
                "Description": "The identity of the bar code given to an occurrence of the product."
              },
              "BatchReference": {
                "type": "string",
                "Description": "The identity of the batch reference from which an occurrence of a product is taken."
              },
              "ManufacturingDate": {
                "type": "string",
                "Description": "Date on which the element was manufactured."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              }
            }
          },
          "Pset_ManufacturerTypeInformation": {
            "Properties": {
              "ArticleNumber": {
                "type": "string",
                "Description": "Article number or reference that is be applied to a configured product according to a standard scheme for article number definition as defined by the manufacturer. It is often used as the purchasing number."
              },
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "GlobalTradeItemNumber": {
                "type": "string",
                "Description": "The Global Trade Item Number (GTIN) is an identifier for trade items developed by GS1 (www.gs1.org)."
              },
              "Manufacturer": {
                "type": "string",
                "Description": "The organization that manufactured and/or assembled the item."
              },
              "ModelLabel": {
                "type": "string",
                "Description": "The descriptive model name of the product model (or product line) as assigned by the manufacturer of the manufactured item."
              },
              "ModelReference": {
                "type": "string",
                "Description": "The model number or designator of the product model (or product line) as assigned by the manufacturer of the manufactured item."
              },
              "ProductionYear": {
                "type": "string",
                "Description": "The year of production of the manufactured item."
              }
            }
          },
          "Pset_ServiceLife": {
            "Properties": {
              "MeanTimeBetweenFailure": {
                "type": "string",
                "Description": "The average time duration between instances of failure of a product."
              }
            }
          },
          "Pset_Warranty": {
            "Properties": {
              "Exclusions": {
                "type": "string",
                "Description": "Items, conditions or actions that may be excluded from the warranty or that may cause the warranty to become void."
              },
              "IsExtendedWarranty": {
                "type": "boolean",
                "Description": "Indication of whether this is an extended warranty whose duration is greater than that normally assigned to an artefact (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PointOfContact": {
                "type": "string",
                "Description": "The organization that should be contacted for action under the terms of the warranty. Note that the role of the organization (manufacturer, supplier, installer etc.) is determined by the IfcActorRole attribute of IfcOrganization."
              },
              "WarrantyContent": {
                "type": "string",
                "Description": "The content of the warranty."
              },
              "WarrantyIdentifier": {
                "type": "string",
                "Description": "The identifier assigned to a warranty."
              },
              "WarrantyPeriod": {
                "type": "string",
                "Description": "The time duration during which a manufacturer or supplier guarantees or warrants the performance of an artefact."
              },
              "WarrantyStartDate": {
                "type": "string",
                "Description": "The date on which the warranty commences."
              }
            }
          },
          "Pset_ElementKinematics": {
            "Properties": {
              "CyclicRange": {
                "type": "real",
                "Description": "Identifies the angular range of the kinematic behaviour"
              },
              "LinearRange": {
                "type": "real",
                "Description": "Identifies the linear range of the kinematic behaviour."
              },
              "MaximumAngularVelocity": {
                "type": "real",
                "Description": "Identifies the maximum angular velocity of the kinematic behaviour."
              },
              "MaximumConstantSpeed": {
                "type": "real",
                "Description": "Identifies the maximum constant speed over the kinematic path."
              },
              "MinimumTime": {
                "type": "real",
                "Description": "Identifies the minimum time for the kinematic behaviour."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Tag": {
                "type": "string",
                "Description": null
              },
              "ElementType": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcElementAssembly": {
        "Parent": "IfcElement",
        "Description": "The IfcElementAssembly represents complex element assemblies aggregated from several elements, such as discrete elements, building elements, or other elements.EXAMPLE Steel construction assemblies, such as trusses and different kinds of frames, can be represented by the IfcElementAssembly entity. Premanufactured or precast elements are examples of the general IfcElementAssembly entity\nNOTE  The IfcElementAssembly is a general purpose entity that is required to be decomposed. Also other subtypes of IfcElement can be decomposed.\nThe assembly structure can be nested, i.e. an IfcElementAssembly could be an aggregated part within another IfcElementAssembly.\nNOTE  View definitions and/or implementer agreements may restrict the number of allowed levels of nesting.The geometry of an IfcElementAssembly is generally formed from its components, in which case it does not need to have an explicit geometric representation. In some cases it may be useful to also expose an own explicit representation of the aggregate.NOTE  View definitions or implementer agreements may further constrain the applicability of certain shape representations at the IfcElementAssembly in respect of the shape representations of its parts.\nHISTORY  New entity in IFC2x2.{ .spec-head}\nInformal Propositions:The IfcElementAssembly shall have an aggregation relationship to the contained parts, i.e. the (INV) IsDecomposedBy relationship shall be utilized.",
        "Psets": {
          "Pset_ElementAssemblyCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Attributes": {
            "Properties": {
              "AssemblyPlace": {
                "values": [
                  "FACTORY",
                  "SITE",
                  "NOTDEFINED"
                ],
                "type": "IfcAssemblyPlaceEnum",
                "Description": null
              }
            }
          }
        }
      },
      "IfcElementAssemblyType": {
        "Parent": "IfcElementType",
        "Description": "The IfcElementAssemblyType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is common to all occurrences of that product type).NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.An element assembly type is used to define the common properties of a certain type of an element assembly that may be applied to many instances of that type to assign a specific style. An element assembly types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.The occurrences of the IfcElementAssemblyType are represented by instances of IfcElementAssembly.HISTORY \u00a0New entity in IFC4.",
        "Psets": {
          "Pset_ElementAssemblyCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ElementAssemblyTypeCantilever": {
            "Properties": {
              "CantileverType": {
                "type": "PEnum_CantileverAssemblyType",
                "Description": "Type of cantilever assembly.",
                "values": [
                  "CENTER_CANTILEVER",
                  "DIRECT_SUSPENSION",
                  "INSULATED_OVERLAP_CANTILEVER",
                  "INSULATED_SUSPENSION_SET",
                  "MECHANICAL_OVERLAP_CANTILEVER",
                  "MIDPOINT_CANTILEVER",
                  "MULTIPLE_TRACK_CANTILEVER",
                  "NOTKNOWN",
                  "OTHER",
                  "OUT_OF_RUNNING_CANTILEVER",
                  "PHASE_SEPARATION_CANTILEVER",
                  "SINGLE",
                  "SYSTEM_SEPARATION_CANTILEVER",
                  "TRANSITION_CANTILEVER",
                  "TURNOUT_CANTILEVER",
                  "UNDERBRIDGE_CANTILEVER",
                  "UNSET"
                ]
              },
              "ContactWireStagger": {
                "type": "real",
                "Description": "Lateral displacement of the contact wire to opposite sides of the track centre at successive supports."
              },
              "SystemHeight": {
                "type": "real",
                "Description": "Vertical distance between the main catenary wire and the contact wire measured at a support point."
              }
            }
          },
          "Pset_ElementAssemblyTypeDilatationPanel": {
            "Properties": {
              "BladesOrientation": {
                "type": "PEnum_BladesOrientation",
                "Description": "Orientation of internal blades.",
                "values": [
                  "BLADESINSIDE",
                  "BLADESOUTSIDE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "DilatationLength": {
                "type": "real",
                "Description": "Length dilatation admitted by the element."
              },
              "ExpansionDirection": {
                "type": "PEnum_ExpansionDirection",
                "Description": "The expansion direction, e.g. single direction, bi-direction",
                "values": [
                  "BI_DIRECTION",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLE_DIRECTION",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ElementAssemblyTypeHeadSpan": {
            "Properties": {
              "NumberOfTracksCrossed": {
                "type": "integer",
                "Description": "Indicates the number of tracks which OCS supporting system crosses."
              },
              "Span": {
                "type": "real",
                "Description": "Clear span for this object.The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence. For geometry editing applications, like CAD: this value should be write-only."
              }
            }
          },
          "Pset_ElementAssemblyTypeMast": {
            "Properties": {
              "WithLightningRod": {
                "type": "boolean",
                "Description": "Indicates whether the element is equipped with a lightning rod (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_ElementAssemblyTypeOCSSuspension": {
            "Properties": {
              "ContactWireHeight": {
                "type": "real",
                "Description": "Distance from the top of the rail to the lower face of the contact wire, measured perpendicular to the track."
              },
              "ContactWireStagger": {
                "type": "real",
                "Description": "Lateral displacement of the contact wire to opposite sides of the track centre at successive supports."
              }
            }
          },
          "Pset_ElementAssemblyTypeRigidFrame": {
            "Properties": {
              "LoadCapacity": {
                "type": "real",
                "Description": "Indicates the highest permissible load capacity."
              },
              "NumberOfTracksCrossed": {
                "type": "integer",
                "Description": "Indicates the number of tracks which OCS supporting system crosses."
              },
              "Span": {
                "type": "real",
                "Description": "Clear span for this object.The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence. For geometry editing applications, like CAD: this value should be write-only."
              }
            }
          },
          "Pset_ElementAssemblyTypeSteadyDevice": {
            "Properties": {
              "ContactWireStagger": {
                "type": "real",
                "Description": "Lateral displacement of the contact wire to opposite sides of the track centre at successive supports."
              },
              "IsSetOnWorkingWire": {
                "type": "boolean",
                "Description": "Indicates whether the steady device is set on the working wire.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SteadyDeviceType": {
                "type": "PEnum_SteadyDeviceType",
                "Description": "Type of Steady Device: To indicate the mode of registration.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "PULL_OFF",
                  "PUSH_OFF",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ElementAssemblyTypeSupportingAssembly": {
            "Properties": {
              "NumberOfCantilevers": {
                "type": "integer",
                "Description": "Indicates the number of cantilevers in the OCS supporting system."
              },
              "TypeOfSupportingSystem": {
                "type": "PEnum_SupportingSystemType",
                "Description": "Type of foundation in the OCS supporting system.",
                "values": [
                  "ENDCATENARYSUPPORT",
                  "HEADSPANSUPPORT",
                  "HERSE",
                  "MULTITRACKSUPPORT",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGIDGANTRY",
                  "SIMPLESUPPORT",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_ElementAssemblyTypeTrackPanel": {
            "Properties": {
              "IsAccessibleByVehicle": {
                "type": "boolean",
                "Description": "Indicates whether the element is accessible by a vehicle or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_ElementAssemblyTypeTractionSwitchingAssembly": {
            "Properties": {
              "NominalCurrent": {
                "type": "real",
                "Description": "The nominal current that is designed to be measured."
              },
              "NominalPower": {
                "type": "real",
                "Description": "A conventional value of apparent power determining a value of the rated current that may be carried with rated voltage applied, under specified conditions. ( IEV ref 421-04-04)"
              }
            }
          },
          "Pset_ElementAssemblyTypeTurnoutPanel": {
            "Properties": {
              "BranchLineDirection": {
                "type": "PEnum_BranchLineDirection",
                "Description": "Describes the direction associated to the branch line of the turnout (deviated branch).",
                "values": [
                  "LEFT_LEFTDEVIATION",
                  "LEFT_RIGHTDEVIATION",
                  "LEFTDEVIATION",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHT_LEFTDEVIATION",
                  "RIGHT_RIGHTDEVIATION",
                  "RIGHTDEVIATION",
                  "SYMETRIC",
                  "UNSET"
                ]
              },
              "IsAccessibleByVehicle": {
                "type": "boolean",
                "Description": "Indicates whether the element is accessible by a vehicle or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSharedTurnout": {
                "type": "boolean",
                "Description": "Indicates if the turnout makes a connection to another infrastructure owner (for sharing costs).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaximumSpeedLimitOfDivergingLine": {
                "type": "real",
                "Description": "Maximum speed for diverging line that corresponds to the type of turnout and design constraints."
              },
              "PercentShared": {
                "type": "real",
                "Description": "Percent of costs paid by the other infrastructure owner."
              },
              "TrackElementOrientation": {
                "type": "PEnum_TurnoutPanelOrientation",
                "Description": "Turnout panels can be placed in 2 mirror-symmetric directions in the field. To distinguish both ends of the turnout panel, a definition of an orientation system with respect to the panel is necessary. The orientation defines, if the panel is oriented in a way or opposite with respect to the direction of the alignment/stationing.",
                "values": [
                  "BACK",
                  "FRONT",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "TrackGaugeLength": {
                "type": "real",
                "Description": "Basic track gauge of permanent way."
              },
              "TurnoutCurvedRadius": {
                "type": "real",
                "Description": "If turnout is curved, the main branch radius of curvature."
              },
              "TurnoutHeaterType": {
                "type": "PEnum_TurnoutHeaterType",
                "Description": "Defines the kind of turnout heater installed.",
                "values": [
                  "ELECTRIC",
                  "GAS",
                  "GEOTHERMAL",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "TurnoutPointMachineCount": {
                "type": "integer",
                "Description": "Count of point machines inside turnout panel."
              },
              "TypeOfCurvedTurnout": {
                "type": "PEnum_TypeOfCurvedTurnout",
                "Description": "Turnouts that are positioned in the curved part of the alignment.",
                "values": [
                  "CIRCULAR_ARC",
                  "NOTKNOWN",
                  "OTHER",
                  "STRAIGHT",
                  "TRANSITION",
                  "UNSET"
                ]
              },
              "TypeOfDrivingDevice": {
                "type": "PEnum_TypeOfDrivingDevice",
                "Description": "Type of the driving device used for the turnout.",
                "values": [
                  "ELECTRIC",
                  "HYDRAULIC",
                  "MANUAL",
                  "MIXED",
                  "MOTORISED",
                  "NOTKNOWN",
                  "OTHER",
                  "PNEUMATIC",
                  "UNSET"
                ]
              },
              "TypeOfJunction": {
                "type": "PEnum_TypeOfJunction",
                "Description": "The turnout part of the continuous welded rail.",
                "values": [
                  "ISOLATED_JOINT",
                  "JOINTED",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WELDED_AND_INSERTABLE",
                  "WELDED_AND_NOT_INSERTABLE"
                ]
              },
              "TypeOfTurnout": {
                "type": "PEnum_TypeOfTurnout",
                "Description": "Type of turnout.",
                "values": [
                  "DERAILMENT_TURNOUT",
                  "DIAMOND_CROSSING",
                  "DOUBLE_SLIP_CROSSING",
                  "NOTKNOWN",
                  "OTHER",
                  "SCISSOR_CROSSOVER",
                  "SINGLE_SLIP_CROSSING",
                  "SLIP_TURNOUT_AND_SCISSORS_CROSSING",
                  "SYMMETRIC_TURNOUT",
                  "THREE_WAYS_TURNOUT",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_MarkerGeneral": {
            "Properties": {
              "ApproachSpeed": {
                "type": "real",
                "Description": "The design speed of trains approaching the signal if different from the line speed."
              },
              "MarkerType": {
                "type": "PEnum_MarkerType",
                "Description": "The type of marker (sign) e.g. stop signal, restriction signal, track circuit tuning zone sign or others specified in PEnum_MarkerType.",
                "values": [
                  "APPROACHING_MARKER",
                  "CABLE_POST_MARKER",
                  "COMMUNICATION_MODE_CONVERSION_MARKER",
                  "EMU_STOP_POSITION_SIGN",
                  "FOUR_ASPECT_CAB_SIGNAL_CONNECT_SIGN",
                  "FOUR_ASPECT_CAB_SIGNAL_DISCONNECT_SIGN",
                  "LEVEL_CONVERSION_SIGN",
                  "LOCOMOTIVE_STOP_POSITION_SIGN",
                  "NOTKNOWN",
                  "OTHER",
                  "RELAY_STATION_SIGN",
                  "RESTRICTION_PLACE_SIGN",
                  "RESTRICTION_PROTECTION_AREA_TERMINAL_SIGN",
                  "RESTRICTION_SIGN",
                  "SECTION_SIGNAL_MARKER",
                  "STOP_SIGN",
                  "TRACK_CIRCUIT_TUNING_ZONE_SIGN",
                  "UNSET"
                ]
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Pset_SumpBusterCommon": {
            "Properties": {
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_TrafficCalmingDeviceCommon": {
            "Properties": {
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcElementType": {
        "Parent": "IfcTypeProduct",
        "Description": "IfcElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is common to all occurrences of that product type).NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.An element type is used to define the common properties of a certain type or style of an element that may be applied to instances of that element type to assign a specific style. Element types (the instantiable subtypes) may be exchanged without being already assigned to occurrences.HISTORY  New entity in IFC2x2",
        "Psets": {
          "Pset_EnvironmentalImpactIndicators": {
            "Properties": {
              "AtmosphericAcidificationPerUnit": {
                "type": "real",
                "Description": "Quantity of gases responsible for the atmospheric acidification calculated in equivalent SO2"
              },
              "ClimateChangePerUnit": {
                "type": "real",
                "Description": "Quantity of greenhouse gases emitted calculated in equivalent CO2"
              },
              "EutrophicationPerUnit": {
                "type": "real",
                "Description": "Quantity of eutrophicating compounds calculated in equivalent PO4"
              },
              "ExpectedServiceLife": {
                "type": "real",
                "Description": "Expected service life in years."
              },
              "FunctionalUnitReference": {
                "type": "string",
                "Description": "Reference to a database or a classification"
              },
              "HazardousWastePerUnit": {
                "type": "real",
                "Description": "Quantity of hazardous waste generated"
              },
              "IndicatorsUnit": {
                "type": "string",
                "Description": "The unit of the quantity the environmental indicators values are related with."
              },
              "InertWastePerUnit": {
                "type": "real",
                "Description": "Quantity of inert waste generated"
              },
              "LifeCyclePhase": {
                "type": "PEnum_LifeCyclePhase",
                "Description": "The whole life cycle or only a given phase  from which environmental data are valid.",
                "values": [
                  "ACQUISITION",
                  "CRADLETOSITE",
                  "DECONSTRUCTION",
                  "DISPOSAL",
                  "DISPOSALTRANSPORT",
                  "GROWTH",
                  "INSTALLATION",
                  "MAINTENANCE",
                  "MANUFACTURE",
                  "NOTDEFINED",
                  "OCCUPANCY",
                  "OPERATION",
                  "PROCUREMENT",
                  "PRODUCTION",
                  "PRODUCTIONTRANSPORT",
                  "RECOVERY",
                  "REFURBISHMENT",
                  "REPAIR",
                  "REPLACEMENT",
                  "TRANSPORT",
                  "USAGE",
                  "USERDEFINED",
                  "WASTE",
                  "WHOLELIFECYCLE"
                ]
              },
              "NonHazardousWastePerUnit": {
                "type": "real",
                "Description": "Quantity of non hazardous waste generated"
              },
              "NonRenewableEnergyConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of non-renewable energy used as defined in ISO21930:2007"
              },
              "PhotochemicalOzoneFormationPerUnit": {
                "type": "real",
                "Description": "Quantity of gases creating the photochemical ozone calculated in equivalent ethylene"
              },
              "RadioactiveWastePerUnit": {
                "type": "real",
                "Description": "Quantity of radioactive waste generated"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RenewableEnergyConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of renewable energy used as defined in ISO21930:2007"
              },
              "ResourceDepletionPerUnit": {
                "type": "real",
                "Description": "Quantity of resources used calculated in equivalent antimony"
              },
              "StratosphericOzoneLayerDestructionPerUnit": {
                "type": "real",
                "Description": "Quantity of gases destroying the stratospheric ozone layer calculated in equivalent CFC-R11"
              },
              "TotalPrimaryEnergyConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of energy used as defined in ISO21930:2007."
              },
              "WaterConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of water used."
              }
            }
          },
          "Pset_EnvironmentalImpactValues": {
            "Properties": {
              "AtmosphericAcidification": {
                "type": "real",
                "Description": "Quantity of gases responsible for the atmospheric acidification calculated in equivalent SO2."
              },
              "ClimateChange": {
                "type": "real",
                "Description": "Quantity of greenhouse gases emitted calculated in equivalent CO2."
              },
              "Duration": {
                "type": "string",
                "Description": "Duration."
              },
              "Eutrophication": {
                "type": "real",
                "Description": "Quantity of eutrophicating compounds calculated in equivalent PO4."
              },
              "HazardousWaste": {
                "type": "real",
                "Description": "Quantity of hazardous waste generated."
              },
              "InertWaste": {
                "type": "real",
                "Description": "Quantity of inert waste generated ."
              },
              "LeadInTime": {
                "type": "string",
                "Description": "Lead in time before start of process."
              },
              "LeadOutTime": {
                "type": "string",
                "Description": "Lead out time after end of process."
              },
              "NonHazardousWaste": {
                "type": "real",
                "Description": "Quantity of non hazardous waste generated."
              },
              "NonRenewableEnergyConsumption": {
                "type": "real",
                "Description": "Quantity of non-renewable energy used as defined in ISO21930:2007"
              },
              "PhotochemicalOzoneFormation": {
                "type": "real",
                "Description": "Quantity of gases creating the photochemical ozone calculated in equivalent ethylene."
              },
              "RadioactiveWaste": {
                "type": "real",
                "Description": "Quantity of radioactive waste generated."
              },
              "RenewableEnergyConsumption": {
                "type": "real",
                "Description": "Quantity of renewable energy used as defined in ISO21930:2007"
              },
              "ResourceDepletion": {
                "type": "real",
                "Description": "Quantity of resources used calculated in equivalent antimony."
              },
              "StratosphericOzoneLayerDestruction": {
                "type": "real",
                "Description": "Quantity of gases destroying the stratospheric ozone layer calculated in equivalent CFC-R11."
              },
              "TotalPrimaryEnergyConsumption": {
                "type": "real",
                "Description": "Quantity of energy used as defined in ISO21930:2007."
              },
              "WaterConsumption": {
                "type": "real",
                "Description": "Quantity of water used."
              }
            }
          },
          "Pset_EnvironmentalCondition": {
            "Properties": {
              "MaximumAtmosphericPressure": {
                "type": "real",
                "Description": "Maximum level of atmospheric pressure that the equipment can operate effectively in."
              },
              "MaximumRainIntensity": {
                "type": "real",
                "Description": "Maximum level of rain intensity that the equipment can operate effectively in. It is usually measured in millimeter per hour (mm/h)."
              },
              "MaximumSolarRadiation": {
                "type": "real",
                "Description": "Maximum level of solar irradiance that the equipment can operate effectively in. This is usually tested and measured by a national or international standard. The value indicates power density measured in watt per square meter (w/m2)."
              },
              "MaximumWindSpeed": {
                "type": "real",
                "Description": "Maximum resistance to wind load exposure."
              },
              "SaltMistLevel": {
                "type": "string",
                "Description": "Maximum level of salt mist that the equipment can operate effectively in. It is provided according to an international or national standard."
              },
              "SeismicResistance": {
                "type": "real",
                "Description": "Maximum magnitude of earthquake that the equipment complies with. The value indicates earthquake intensity measured in Richter scale."
              },
              "SmokeLevel": {
                "type": "string",
                "Description": "Maximum level of smoke that the equipment complies with. It is provided according to an international or national standard."
              }
            }
          },
          "Pset_Condition": {
            "Properties": {
              "AssessmentCondition": {
                "type": "string",
                "Description": "The overall condition of a product based on an assessment of the contributions to the overall condition made by the various criteria considered. The meanings given to the values of assessed condition should be agreed and documented by local agreements. For instance, is overall condition measured on a scale of 1 - 10 or by assigning names such as Good, OK, Poor."
              },
              "AssessmentDate": {
                "type": "string",
                "Description": "Date on which the overall condition is assessed"
              },
              "AssessmentDescription": {
                "type": "string",
                "Description": "Qualitative description of the condition."
              },
              "AssessmentFrequency": {
                "type": "real",
                "Description": "Indicates how often the equipment should be assessed, to have a clear estimation on its working state, based on which the maintenance staff can decide whether it requires maintenance or requires to be updated or replaced."
              },
              "AssessmentType": {
                "type": "string",
                "Description": "Category of latest condition assessment report of the asset."
              },
              "LastAssessmentReport": {
                "type": "string",
                "Description": "Reference to latest condition (state of health) report."
              },
              "NextAssessmentDate": {
                "type": "string",
                "Description": "Date of next condition inspection"
              }
            }
          },
          "Pset_ConstructionAdministration": {
            "Properties": {
              "ProcurementMethod": {
                "type": "string",
                "Description": "The method by which an IfcProductType/IfcProduct is acquired and installed. The value provided shall be one of the following four character acronyms: \u201cCFCI\u201d (meaning Contractor Furnished Contractor Installed), \u201cOFCI\u201d (meaning Owner Furnished Contractor Installed), or \u201cOFOI\u201d (meaning Owner Furnished Owner Installed)."
              },
              "SpecificationSectionNumber": {
                "type": "string",
                "Description": "A reference number to an external contract technical specification section describing either (a) minimum performance requirements of a given IfcProductType/IfcProduct or (b) a preselection for a specific IfcProductType/IfcProduct made for this project."
              },
              "SubmittalIdentifer": {
                "type": "string",
                "Description": "The reference number to an external construction administration submittal used by the construction contractor and/or subcontractor to verify that the referenced IfcProductType/IfcProduct selection conforms with the requirements found in the referenced SpecificationSectionNumber."
              }
            }
          },
          "Pset_MaintenanceStrategy": {
            "Properties": {
              "AccidentResponse": {
                "type": "PEnum_AccidentResponse",
                "Description": "Accident response chosen for the asset",
                "values": [
                  "EMERGENCYINSPECTION",
                  "EMERGENCYPROCEDURE",
                  "REACTIVE",
                  "URGENTINSPECTION",
                  "URGENTPROCEDURE"
                ]
              },
              "AssetCriticality": {
                "type": "PEnum_AssetRating",
                "Description": "Rating of the asset's criticality to the operation of the facility",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "AssetFrailty": {
                "type": "PEnum_AssetRating",
                "Description": "Rating of the asset's frailty to breakage or deterioration",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "AssetPriority": {
                "type": "PEnum_AssetRating",
                "Description": "Combined criticality and frailty rating indicating the operational and maintenance priority of the asset",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MonitoringType": {
                "type": "PEnum_MonitoringType",
                "Description": "Monitoring strategy chosen for the asset",
                "values": [
                  "FEEDBACK",
                  "INSPECTION",
                  "IOT",
                  "PPM",
                  "SENSORS"
                ]
              }
            }
          },
          "Pset_MaintenanceTriggerCondition": {
            "Properties": {
              "ConditionDisposalLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger a disposal process",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionMaintenanceLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger maintenance",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionReplacementLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger a replacement process",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionTargetPerformance": {
                "type": "PEnum_AssetRating",
                "Description": "Target condition of the asset",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              }
            }
          },
          "Pset_MaintenanceTriggerDuration": {
            "Properties": {
              "DurationDisposalLevel": {
                "type": "string",
                "Description": "Duration interval at which disposal is performed"
              },
              "DurationMaintenanceLevel": {
                "type": "string",
                "Description": "Duration interval at which maintenance is performed"
              },
              "DurationReplacementLevel": {
                "type": "string",
                "Description": "Duration interval at which replacement is performed"
              },
              "DurationTargetPerformance": {
                "type": "string",
                "Description": "Target time to failure of the asset"
              }
            }
          },
          "Pset_MaintenanceTriggerPerformance": {
            "Properties": {
              "DisposalLevel": {
                "type": "real",
                "Description": "Performance level at which disposal takes place"
              },
              "PerformanceMaintenanceLevel": {
                "type": "real",
                "Description": "Performance level at which maintenance takes place"
              },
              "ReplacementLevel": {
                "type": "real",
                "Description": "Performance level at which replacement takes place"
              },
              "TargetPerformance": {
                "type": "real",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute."
              }
            }
          },
          "Pset_ManufacturerTypeInformation": {
            "Properties": {
              "ArticleNumber": {
                "type": "string",
                "Description": "Article number or reference that is be applied to a configured product according to a standard scheme for article number definition as defined by the manufacturer. It is often used as the purchasing number."
              },
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "GlobalTradeItemNumber": {
                "type": "string",
                "Description": "The Global Trade Item Number (GTIN) is an identifier for trade items developed by GS1 (www.gs1.org)."
              },
              "Manufacturer": {
                "type": "string",
                "Description": "The organization that manufactured and/or assembled the item."
              },
              "ModelLabel": {
                "type": "string",
                "Description": "The descriptive model name of the product model (or product line) as assigned by the manufacturer of the manufactured item."
              },
              "ModelReference": {
                "type": "string",
                "Description": "The model number or designator of the product model (or product line) as assigned by the manufacturer of the manufactured item."
              },
              "ProductionYear": {
                "type": "string",
                "Description": "The year of production of the manufactured item."
              }
            }
          },
          "Pset_ServiceLife": {
            "Properties": {
              "MeanTimeBetweenFailure": {
                "type": "string",
                "Description": "The average time duration between instances of failure of a product."
              }
            }
          },
          "Pset_Warranty": {
            "Properties": {
              "Exclusions": {
                "type": "string",
                "Description": "Items, conditions or actions that may be excluded from the warranty or that may cause the warranty to become void."
              },
              "IsExtendedWarranty": {
                "type": "boolean",
                "Description": "Indication of whether this is an extended warranty whose duration is greater than that normally assigned to an artefact (=TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PointOfContact": {
                "type": "string",
                "Description": "The organization that should be contacted for action under the terms of the warranty. Note that the role of the organization (manufacturer, supplier, installer etc.) is determined by the IfcActorRole attribute of IfcOrganization."
              },
              "WarrantyContent": {
                "type": "string",
                "Description": "The content of the warranty."
              },
              "WarrantyIdentifier": {
                "type": "string",
                "Description": "The identifier assigned to a warranty."
              },
              "WarrantyPeriod": {
                "type": "string",
                "Description": "The time duration during which a manufacturer or supplier guarantees or warrants the performance of an artefact."
              },
              "WarrantyStartDate": {
                "type": "string",
                "Description": "The date on which the warranty commences."
              }
            }
          },
          "Pset_ElementKinematics": {
            "Properties": {
              "CyclicRange": {
                "type": "real",
                "Description": "Identifies the angular range of the kinematic behaviour"
              },
              "LinearRange": {
                "type": "real",
                "Description": "Identifies the linear range of the kinematic behaviour."
              },
              "MaximumAngularVelocity": {
                "type": "real",
                "Description": "Identifies the maximum angular velocity of the kinematic behaviour."
              },
              "MaximumConstantSpeed": {
                "type": "real",
                "Description": "Identifies the maximum constant speed over the kinematic path."
              },
              "MinimumTime": {
                "type": "real",
                "Description": "Identifies the minimum time for the kinematic behaviour."
              }
            }
          }
        }
      },
      "IfcExternalSpatialElement": {
        "Parent": "IfcExternalSpatialStructureElement",
        "Description": "The external spatial element defines external regions at the building site. Those regions can be defined:logically - for example, an instance of IfcExternalSpatialElement could represent the air space around the building without having an own shape representation, or\nphysically - for example, an instance of IfcExternalSpatialElement could represent the sloping ground around the building to identify the part of the external building envelop that is below ground.HISTORY  New entity in IFC4."
      },
      "IfcExternalSpatialStructureElement": {
        "Parent": "IfcSpatialElement",
        "Description": "The external spatial structure element is an abstract entity provided for different kind of external spaces, regions, and volumes.HISTORY  New entity in IFC4."
      },
      "IfcFacility": {
        "Parent": "IfcSpatialStructureElement",
        "Description": "A Facility (derived from IfcSpatialStructureElement) may be an IfcBuilding, an IfcBridge, an IfcRailway, an IfcRoad, an IfcMarineFacility (or any other type of built facility defined in the future, such as IfcTunnel)."
      },
      "IfcFacilityPart": {
        "Parent": "IfcSpatialStructureElement",
        "Description": "IfcFacilityPart provides for spatial breakdown of built facilities. It may be further specialised according to the type of facility being broken down.",
        "Psets": {
          "Qto_FacilityPartBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "UsageType": {
                "values": [
                  "LATERAL",
                  "LONGITUDINAL",
                  "REGION",
                  "VERTICAL",
                  "USERDEFINED",
                  "NOTDEFINED"
                ],
                "type": "IfcFacilityUsageEnum",
                "Description": null
              }
            }
          }
        }
      },
      "IfcFacilityPartCommon": {
        "Parent": "IfcFacilityPart",
        "Description": "A part of a facility."
      },
      "IfcFeatureElement": {
        "Parent": "IfcElement",
        "Description": "A feature element is a generalization of all existence dependent elements which modify the shape and appearance of the associated master element. The IfcFeatureElement offers the ability to handle shape modifiers as semantic objects within the IFC object model.NOTE  The term \"feature\" has a predefined meaning in a context of \"feature-based modeling\" and within steel construction work. It is introduced here in a broader sense to cover all existence dependent, but semantically described, modifiers of an element's shape and appearance. It is envisioned that future releases enhance the feature-based capabilities of the IFC model.In contrary to the aggregation, as used in IfcElementAssembly, that defines the aggregate as a container element, that has equally treated parts, the feature concept introduced by IfcFeatureElement defines the master element with subordinate parts as additions, or with voids or cut-outs as subtractions.HISTORY  New entity in IFC2x2.{ .change-ifc2x2}IFC2x2 CHANGE  The entity is introduced as an upward compatible extension of the IFC2x platform. It is an intermediate abstract supertype without defining its own explicit attributes."
      },
      "IfcFeatureElementAddition": {
        "Parent": "IfcFeatureElement",
        "Description": "A feature element addition is a specialization of the general feature element, that represents an existence dependent element which modifies the shape and appearance of the associated master element. The IfcFeatureElementAddition offers the ability to handle shape modifiers as semantic objects within the IFC object model that add to the shape of the master element.The IfcFeatureElementAddition is associated to its master element by virtue of the objectified relationship IfcRelProjectsElement. This relationship implies a Boolean 'union' operation between the shape of the master element and the shape of the addition feature.The local placement for IfcFeatureElementAddition is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. The local placement is always defined in relation to the local placement of the element to which the feature element is added:The PlacementRelTo attribute of IfcObjectPlacement shall point (if given) to the object placement of the IfcElement, which is used in the ProjectsElements.RelatingElement inverse attribute (the parent element of the feature).HISTORY  New entity in IFC2x2.{ .change-ifc2x2}IFC2x2 CHANGE  The entity is introduced as an upward compatible extension of the IFC2x platform. It is an intermediate abstract supertype without defining its own explicit attributes."
      },
      "IfcFeatureElementSubtraction": {
        "Parent": "IfcFeatureElement",
        "Description": "The IfcFeatureElementSubtraction is specialization of the general feature element, that represents an existence dependent elements which modifies the shape and appearance of the associated master element. The IfcFeatureElementSubtraction offers the ability to handle shape modifiers as semantic objects within the IFC object model that subtract from the shape of the master element.NOTE  A single subtraction feature such as the subtype IfcOpeningElement is assigned by a single subtraction relationship IfcRelVoidsElement to one occurrences of IfcElement. It establishes a 1:1 relationship between the opening and the element. An element may have several IfcRelVoidsElement relationships, enabling several voids.The voiding relationship between a master element and a subtraction feature is geometrically resolved by a Boolean difference operation.The local placement for IfcFeatureElementSubtraction is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. The local placement is always defined in relation to the local placement of the building element from which the feature element substration is substracted:The PlacementRelTo attribute of IfcObjectPlacement shall point (if given) to the object placement of the IfcElement, which is used in the VoidsElements.RelatingElement inverse attribute (the parent element of the feature).HISTORY  New entity in IFC2x2.{ .change-ifc2x2}IFC2x2 CHANGE  The entity is introduced as an upward compatible extension of the IFC2x platform. It is an intermediate abstract supertype without defining its own explicit attributes."
      },
      "IfcFurnishingElement": {
        "Parent": "IfcElement",
        "Description": "A furnishing element is a generalization of all furniture related objects. Furnishing objects are characterized as beingpre-manufactured and assembled on-site, or\nmanufactured on-site (built-in)Thus furnishing elements can either be movable, or not (as the built-ins).HISTORY  New entity in IFC2x.{ .change-ifc2x4}IFC4 CHANGE  The entity is marked as deprecated for instantiation - will be made ABSTRACT after IFC4."
      },
      "IfcFurnishingElementType": {
        "Parent": "IfcElementType",
        "Description": "IfcFurnishingElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (the specific product information, that is common to all occurrences of that product type).NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.A furnishing element type is used to define the common properties of a certain type of a furnishing element that may be applied to many instances of that feature type to assign a specific style. Furnishing element types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.The occurrences of the IfcFurnishingElementType are represented by instances of IfcFurnishingElement (or its subtypes).HISTORY\u00a0New entity in IFC2x2.{ .change-ifc2x3}IFC2x3 CHANGE  The entity has been made non-abstract{ .change-ifc2x4}IFC4 CHANGE  The entity is marked as deprecated for instantiation - will be made ABSTRACT after IFC4."
      },
      "IfcGeographicElement": {
        "Parent": "IfcElement",
        "Description": "An IfcGeographicElement is a generalization of all elements within a geographical landscape. It includes occurrences of typical geographical elements, often referred to as features, such as trees or terrain. Common type information behind several occurrences of IfcGeographicElement is provided by the IfcGeographicElementType.HISTORY New entity in IFC4."
      },
      "IfcGrid": {
        "Parent": "IfcPositioningElement",
        "Description": "IfcGrid ia a planar design grid defined in 3D space used as an aid in locating structural and design elements. The position of the grid (ObjectPlacement) is defined by a 3D coordinate system (and thereby the design grid can be used in plan, section or in any position relative to the world coordinate system). The position can be relative to the object placement of other products or grids. The XY plane of the 3D coordinate system is used to place the grid axes, which are 2D curves (for example, line, circle, arc, polyline).The inherited attributes Name and Description can be used to define a descriptive name of the grid and to indicate the grid's purpose. A grid is defined by (normally) two, or (in case of a triangular grid) three lists of grid axes. The following figures/ shows some examples.A grid may support a rectangular layout as shown in Figure 1, a radial layout as shown in Figure 2, or a triangular layout as shown in Figure 3.NOTE  The PredefinedType denotes the type of grid that is represented by IfcGrid. The instantiation of IfcGridAxis's has to agree to the PredefinedType, if provided.\nNOTE  The grid axes, defined within the design grid, are those elements to which project objects will be placed relatively using the IfcGridPlacement.Figure 1 \u2014 Grid rectangular layoutFigure 2 \u2014 Grid radial layoutFigure 3 \u2014 Grid triangular layoutHISTORY  New entity in IFC1.0.{ .change-ifc2x4}IFC4 CHANGE  The attribute PredefinedType has been added at the end of the attribute list.{ .spec-head}\nInformal Propositions:Grid axes, which are referenced in different lists of axes (UAxes, VAxes, WAxes) shall not be parallel.\nGrid axes should be defined such as there are no two grid axes which intersect twice (see Figure 4).NOTE  Left side: ambiguous intersections A1 and A2, a grid containing such grid axes is not a valid design grid;  Right side: the conflict can be resolved by splitting one grid axis in a way, such as no ambiguous intersections exist.Figure 4 \u2014 Grid intersections"
      },
      "IfcImpactProtectionDevice": {
        "Parent": "IfcElementComponent",
        "Description": "A impact protection device is a component used to protect other built elements from kinetic damage. impact protection devices currently come in different varieties:\n- A vibration damper used to minimize the effects of vibration in a structure by dissipating kinetic energy. The damper may be passive (elastic, frictional, inertia) or active (in a system using sensors and actuators).\n- A vibration isolator is a device used to minimize the effects of vibration transmissibility in a structure.\n- Impact devices that dissipate kinetic energy from impacting elements (such as vehicles) by deformation or elastic mechanics.",
        "Psets": {
          "Qto_ImpactProtectionDeviceBaseQuantities": {
            "Properties": {
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          }
        }
      },
      "IfcImpactProtectionDeviceType": {
        "Parent": "IfcElementComponentType",
        "Description": "Defines the Type of Impact Protection Device.",
        "Psets": {
          "Pset_FenderCommon": {
            "Properties": {
              "CoefficientOfFriction": {
                "type": "real",
                "Description": "Coefficient of friction value for the fender"
              },
              "EnergyAbsorption": {
                "type": "real",
                "Description": "Energy absorption capacity of the element."
              },
              "EnergyAbsorptionTolerance": {
                "type": "real",
                "Description": "Manufacturing tolerance on energy absorption"
              },
              "FenderType": {
                "type": "PEnum_FenderType",
                "Description": "The type of fender",
                "values": [
                  "ARCH",
                  "CELL",
                  "CONE",
                  "CYLINDER",
                  "PNEUMATIC"
                ]
              },
              "MaximumTemperatureFactor": {
                "type": "real",
                "Description": "Deviation in performance due to maximum design temperature"
              },
              "MaxReaction": {
                "type": "real",
                "Description": "Maximum reaction from the element"
              },
              "MaxReactionTolerance": {
                "type": "real",
                "Description": "Manufacturing tolerance on maximum reaction at fender support."
              },
              "MinimumTemperatureFactor": {
                "type": "real",
                "Description": "Deviation in performance due to minimum design temperature"
              },
              "VelocityFactorEnergy": {
                "type": "real",
                "Description": "Deviation in energy absorption performance due to strain rate"
              },
              "VelocityFactorReaction": {
                "type": "real",
                "Description": "Deviation in reaction due to strain rate"
              }
            }
          },
          "Pset_ImpactProtectionDeviceTypeBumper": {
            "Properties": {
              "EnergyAbsorption": {
                "type": "real",
                "Description": "Energy absorption capacity of the element."
              },
              "IsAbsorbingEnergy": {
                "type": "boolean",
                "Description": "Indicates whether the bumper absorbs energy or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaximumLoadRetention": {
                "type": "real",
                "Description": "Maximum possible impact load retention."
              }
            }
          },
          "Qto_ImpactProtectionDeviceBaseQuantities": {
            "Properties": {
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          }
        }
      },
      "IfcLinearElement": {
        "Parent": "IfcProduct",
        "Description": "A generalization of all linear elements that are parts of an alignment."
      },
      "IfcLinearPositioningElement": {
        "Parent": "IfcPositioningElement",
        "Description": "An IfcLinearPositioningElement is an abstract entity describing positioning according to a curve."
      },
      "IfcOpeningElement": {
        "Parent": "IfcFeatureElementSubtraction",
        "Description": "The opening element stands for opening, recess or chase, all reflecting voids. It represents a void within any element that has physical manifestation. Openings can be inserted into walls, slabs, beams, columns, or other elements.There are two different types of opening elements. The attribute PredefinedType should be used to capture the differences:an opening, where the thickness of the opening is greater or equal to the thickness of the element \u2014\n  the attribute PredefinedType is set to OPENING\na recess or niche, where the thickness of the recess is smaller than the thickness of the element  \u2014\n  the attribute  PredefinedType is set to RECESS for a recess or niche.If the value for PredefinedType is omitted, or the value is set to NOTDEFINED, no specific information of whether it is an opening or recess shall be assumed.An IfcOpeningElement has to be inserted into an IfcElement by using the IfcRelVoidsElement relationship. It may be filled by an IfcDoor, IfcWindow, or another filling element by using the relationship IfcRelFillsElements. Depending on the type of the IfcShapeRepresentation of the IfcOpeningElement the voiding relationship implies:if the IfcShapeRepresentation.RepresentationIdentifier = 'Body', then the Body shape representation of the opening has to be subtracted from the body shape representation of the voided element - implicit Boolean difference operation.\nif the IfcShapeRepresentation.RepresentationIdentifier = 'Reference', then the Reference shape representation of the opening is not subtracted, it is provided in addition to the hole in the Body shape representation of the voided element.The IfcOpeningElement shall not participate in the containment relationship, i.e. it is not linked directly to the spatial structure of the project. It has a mandatory VoidsElements inverse relationship pointing to the IfcElement that is contained in the spatial structure. The inverse relationship ContainedInStructure shall be NIL.REFERENCE Definition according to ISO 6707-1: void in a building element\nNOTE  The entity IfcOpeningStandardCase has been deprecated. Use an IfcOpeningElement with a single extrusion body perpendicular to the wall or slab instead.\nNOTE  See IfcRelVoidsElement for a diagram on how to apply spatial containment and the voiding relationship.\nIFC2x CHANGE  The intermediate ABSTRACT supertypes IfcFeatureElement and IfcFeatureSubtraction have been added.\nIFC4 CHANGE  The attribute PredefinedType has been added at the end of attribute list. It should be used instead of the inherited attribute ObjectType from now on.\nHISTORY  New entity in IFC1.0",
        "Psets": {
          "Pset_OpeningElementCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "Purpose": {
                "type": "string",
                "Description": "Purpose; usually an enumeration."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_OpeningElementBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcPort": {
        "Parent": "IfcProduct",
        "Description": "A port provides the means for an element to connect to other elements.An IfcPort is associated with an IfcElement, it belongs to through the objectified relationship IfcRelNests if such port is fixed, or IfcRelConnectsPortToElement if such port is dynamically attached. Exactly two ports, belonging to two different elements, are connected with each other through the objectified relationship IfcRelConnectsPorts.An instance of IfcElement may have one or more points at which it connects to other instances of IfcElement. An instance of em>IfcPort is located at a point where a connection can occur. The location of the port is determined in the context of the local coordinate system of the element to which it belongs. As a subordinate part being fully dependent on the master element the IfcPort shall have no independent containment relationship to the spatial structure.The local placement for IfcPort is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. The PlacementRelTo relationship of IfcLocalPlacement shall point to the local placement of the master IfcElement or IfcElementType (relevant subtypes), which is related to the IfcPort by the relationship object IfcRelNests for fixed ports, or IfcRelConnectsPortToElement for dynamic ports.HISTORY  New entity in IFC2x2."
      },
      "IfcPositioningElement": {
        "Parent": "IfcProduct",
        "Description": "New and abstract entity definition for positioning and annotating elements that are used to position other elements relatively.EXAMPLE  A grid is a positioning element to position building components mainly in vertical structures, an alignment is a linear positioning element to position geographic and civil elements mainly in infrastructure works.\nEXAMPLE  An alignment is a linear positioning element for using a linear referencing method to position other items. See ISO 19148 \u201cLinear referencing\u201d for general information about linear referencing methods and expressions."
      },
      "IfcProjectionElement": {
        "Parent": "IfcFeatureElementAddition",
        "Description": "The projection element is a specialization of the general feature element to represent projections applied to building elements. It represents a solid attached to any element that has physical manifestation.EXAMPLE  A wall projection such as a pilaster strip is handled by IfcProjectionElement\nNOTE  View definitions or implementer agreements may restrict the types of elements to which IfcProjectionElement can be applied.An IfcProjectionElement has to be linked to a element (all subtypes of IfcElement) by using the IfcRelProjectsElement relationship. Its existence depends on the existence of the master element. The relationship implies a Boolean union operation between the volume of the projection element and the volume of the element.The IfcProjectionElement shall not participate in the containment relationship, i.e. it is not linked directly to the spatial structure of the project. It has a mandatory ProjectsElements inverse relationship pointing to the IfcElement that is contained in the spatial structure.The inverse relationship ContainedInStructure shall be NIL.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  The attribute PredefinedType has been added at the end of attribute list.",
        "Psets": {
          "Qto_ProjectionElementBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              }
            }
          }
        }
      },
      "IfcReferent": {
        "Parent": "IfcPositioningElement",
        "Description": "IfcReferent defines a position at a particular offset along an alignment curve.Referents may be used for several scenarios:positioning physical elements at common locations along an alignment curve (e.g. bridge piers)\nindicating transitions for cross-sections (e.g. beginning of curvature where road is relatively flat, maximum curvature having super-elevated cross-slope to accomodate design speed)\nindicating broken chainage where distance measurements reset or reverse directions\nindicating domain-specific design parameters (via property sets) at locations along an alignment curve",
        "Psets": {
          "Pset_ReferentCommon": {
            "Properties": {
              "NameFormat": {
                "type": "string",
                "Description": "Specifies a reference to or description of the formatting or encoding of the Name attribute of the IfcReferent occurence."
              }
            }
          },
          "Pset_Stationing": {
            "Properties": {
              "IncomingStation": {
                "type": "real",
                "Description": "The optional station value of the incoming segment that ends at this location. This value needs to be set if the intention is to specify a station equation, i.e. a location where stationing changes."
              },
              "Station": {
                "type": "real",
                "Description": "The station value at this location."
              }
            }
          }
        }
      },
      "IfcSite": {
        "Parent": "IfcSpatialStructureElement",
        "Description": "A site is a defined area of land, possibly covered with water, on which the project construction is to be completed. A site may be used to erect, retrofit or turn down building(s), or for other construction related developments.NOTE  Definition according to ISO 6707-1: area of land or water where construction work or other development is undertaken.A site may include a definition of the single geographic reference point for this site (global position using WGS84 with Longitude, Latitude and Elevation). The precision is provided up to millionth of a second and it provides an absolute placement in relation to the real world as used in exchange with geospational information systems. If asserted, the Longitude, Latitude and Elevation establish the point in WGS84 where the point 0.,0.,0. of the LocalPlacement of IfcSite is situated.The geometrical placement of the site, defined by the IfcLocalPlacement, shall be always relative to the spatial structure element, in which this site is included, or absolute, i.e. to the world coordinate system, as established by the geometric representation context of the project. The world coordinate system, established at the IfcProject.RepresentationContexts, may include a definition of the true north within the XY plane of the world coordinate system, if provided, it can be obtained at IfcGeometricRepresentationContext.TrueNorth.A project may span over several connected or disconnected sites. Therefore site complex provides for a collection of sites included in a project. A site can also be decomposed in parts, where each part defines a site section. This is defined by the composition type attribute of the supertype IfcSpatialStructureElements which is interpreted as follow:COMPLEX = site complex\nELEMENT = site\nPARTIAL = site sectionThe IfcSite is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical).Figure 1 shows the IfcSite as part of the spatial structure. In addition to the logical spatial structure, also the placement hierarchy is shown. In this example the spatial structure hierarchy and the placement hierarchy are identical.NOTE  Detailed requirements on mandatory element containment and placement structure relationships are given in view definitions and implementer agreements.Figure 2 describes the heights and elevations of the IfcSite. It is used to provide the geographic longitude, latitude, and height above sea level for the origin of the site. The origin of the site is the local placement.The provision of longitude, latitude, height at the IfcSite for georeferencing is provided for upward compatibility reasons. It requires a single instance of IfcSite and WGS84 as coordinate reference system.For exact georeferencing (or referencing to any other geographic coordinate system other than WSG84) the entities IfcCoordinateReferenceSystem and IfcMapConversion have to be used to define an exact mapping of the project engineering coordinate system to the geographic (or map) coordinate system.reference height of site is provided by: IfcSite.RefElevation, it is given according to the height datum used at this location.\nthe reference height of each building situated at the site is given against the same height datum used at this location.\nthe elevations of each storey belonging to each building are given as local height relative to the reference height of the building.HISTORY  New entity in IFC1.0.",
        "Psets": {
          "Pset_Address": {
            "Properties": {
              "Country": {
                "type": "string",
                "Description": "The two letter country code (from ISO 3166)."
              },
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "InternalLocation": {
                "type": "string",
                "Description": "An organization defined address for internal mail delivery."
              },
              "PagerNumber": {
                "type": "string",
                "Description": ""
              },
              "PostalBox": {
                "type": "string",
                "Description": "An address that is implied by an identifiable mail drop."
              },
              "PostalCode": {
                "type": "string",
                "Description": "The code that is used by the country's postal service."
              },
              "Purpose": {
                "type": "IfcAddressTypeEnum",
                "Description": "Purpose; usually an enumeration.",
                "values": [
                  "DISTRIBUTIONPOINT",
                  "HOME",
                  "OFFICE",
                  "SITE",
                  "USERDEFINED"
                ]
              },
              "Region": {
                "type": "string",
                "Description": "The name of a region.NOTE  The counties of the United Kingdom and the states of North America are examples of regions."
              },
              "Town": {
                "type": "string",
                "Description": "===========The name of a town."
              },
              "UserDefinedPurpose": {
                "type": "string",
                "Description": "Allows for specification of user specific purpose of the address beyond the enumeration values provided by Purpose attribute of type IfcAddressTypeEnum. When a value is provided for attribute UserDefinedPurpose, in parallel the attribute Purpose shall have enumeration value USERDEFINED."
              },
              "WWWHomePageURL": {
                "type": "string",
                "Description": ""
              }
            }
          },
          "Pset_SiteWeather": {
            "Properties": {
              "MaxAmbientTemp": {
                "type": "real",
                "Description": "Maximum ambient temperature of the site used as a basis of design"
              },
              "MinAmbientTemp": {
                "type": "real",
                "Description": "Minimum ambient temperature of the site used as a basis of design"
              }
            }
          },
          "Pset_LandRegistration": {
            "Properties": {
              "IsPermanentID": {
                "type": "boolean",
                "Description": "Indicates whether the identity assigned to the object is permanent (= TRUE) or temporary (=FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LandID": {
                "type": "string",
                "Description": "Identification number assigned by the statutory registration authority to a land parcel."
              },
              "LandTitleID": {
                "type": "string",
                "Description": "Identification number assigned by the statutory registration authority to the title to a land parcel."
              }
            }
          },
          "Pset_SiteCommon": {
            "Properties": {
              "BuildableArea": {
                "type": "real",
                "Description": "The area of site utilization expressed as a maximum value according to local building codes."
              },
              "BuildingHeightLimit": {
                "type": "real",
                "Description": "Allowed maximum height of buildings on this site - according to local building codes."
              },
              "FloorAreaRatio": {
                "type": "real",
                "Description": "The ratio of all floor areas to the buildable area as the maximum floor area utilization of the site as a maximum value according to local building codes."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SiteCoverageRatio": {
                "type": "real",
                "Description": "The ratio of the utilization,  TotalArea / BuildableArea, expressed as a maximum value. The ratio value may be used to derive BuildableArea."
              },
              "TotalArea": {
                "type": "real",
                "Description": "Total planned area for the site. Used for programming the site space."
              }
            }
          },
          "Qto_SiteBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "GrossPerimeter": {
                "type": "real",
                "Description": "Gross perimeter at the outer contour of the object."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LandTitleNumber": {
                "type": "string",
                "Description": null
              },
              "RefElevation": {
                "type": "real",
                "Description": null
              }
            }
          }
        }
      },
      "IfcSpace": {
        "Parent": "IfcSpatialStructureElement",
        "Description": "A space represents an area or volume bounded actually or theoretically. Spaces are areas or volumes that provide for certain functions within a building.A space is associated to a building storey (or in case of exterior spaces to a site). A space may span over several connected spaces. Therefore a space group provides for a collection of spaces included in a storey. A space can also be decomposed in parts, where each part defines a partial space. This is defined by the CompositionType attribute of the supertype IfcSpatialStructureElement which is interpreted as follow:COMPLEX = space group\nELEMENT = space\nPARTIAL = partial spaceNOTE  View definitions and implementation agreements may restrict spaces with CompositionType=ELEMENT to be non-overlapping.The IfcSpace is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical). The spatial structure elements are linked together by using the objectified relationship IfcRelAggregates.Figure 1 shows the IfcSpace as part of the spatial structure. It also serves as the spatial container for space related elements.NOTE  Detailed requirements on mandatory element containment and placement structure relationships are given in view definitions and implementer agreements.The following guidelines should apply for using the Name, Description, LongName and ObjectType attributes.Name holds the unique name (or space number) from the plan.\nDescription holds any additional information field the user may have specified, there are no further recommendations.\nLongName holds the full name of the space, it is often used in addition to the Name, if a number is assigned to the room, then the descriptive name is exchanged as LongName.\nObjectType holds the space type, i.e. usually the functional category of the space .NOTE  In cases of inconsistency between the geometric representation of the IfcSpace and the combined geometric representations of the surrounding IfcRelSpaceBoundary, the geometric representation of the space should take priority over the geometric representation of the surrounding space boundaries.Figure 2 describes the heights and elevations of the IfcSpace.elevation of the space (top of construction slab) equals elevation of storey: provided by IfcBuildingStorey.Elevation relative to em>IfcBuilding.ElevationOfRefHeight\nelevation of the space flooring (top of flooring on top of slab): provided by IfcSpace.ElevationWithFlooring relative to IfcBuilding.ElevationOfRefHeight\nheight of space (top of slab below to bottom of slab above): provided by BaseQuantity with Name=\"Height\"\nfloor height of space (top of slab below to top of flooring): provided by BaseQuantity with Name=\"FinishFloorHeight\"\nnet height of space (top of flooring to bottom of suspended ceiling): provided by BaseQuantity with Name=\"FinishCeilingHeight\"HISTORY  New entity in IFC1.0",
        "Psets": {
          "Pset_ProcessCapacity": {
            "Properties": {
              "ProcessCapacity": {
                "type": "integer",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance"
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity."
              }
            }
          },
          "Qto_SpaceBaseQuantities": {
            "Properties": {
              "FinishCeilingHeight": {
                "type": "real",
                "Description": "Height of the suspended ceiling (from top of flooring to the bottom of the suspended ceiling). To be provided only if the space has a suspended ceiling with constant height."
              },
              "FinishFloorHeight": {
                "type": "real",
                "Description": "Height of the flooring (from base slab without flooring to the flooring height). To be provided only if the space has a constant flooring height."
              },
              "GrossCeilingArea": {
                "type": "real",
                "Description": "Sum of all ceiling areas of the space. It includes the area covered by elementsinside the space (columns, inner walls, etc.). The ceiling area is the real (and not the projected) area (e.g. in case of sloped ceilings)."
              },
              "GrossFloorArea": {
                "type": "real",
                "Description": "Sum of all gross floor areas covered by the spaces within the spatial structure element."
              },
              "GrossPerimeter": {
                "type": "real",
                "Description": "Gross perimeter at the outer contour of the object."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWallArea": {
                "type": "real",
                "Description": "Sum of all wall (and other vertically bounding elements, like columns) areas bounded by the space. It includes the area covered by elements inside the wall area (doors, windows, other openings, etc.)."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "NetCeilingArea": {
                "type": "real",
                "Description": "Sum of all ceiling areas of the space. It excludes the area covered by elementsinside the space (columns, inner walls, etc.). The ceiling area is the real (and not the projected) area (e.g. in case of sloped ceilings)."
              },
              "NetFloorArea": {
                "type": "real",
                "Description": "Sum of all net usable floor areas."
              },
              "NetPerimeter": {
                "type": "real",
                "Description": "Net perimeter at the floor level of this space. It excludes those parts of the perimeter that are created by by virtual boundaries and openings (like doors). It is the measurement used for skirting boards and may includes the perimeter of internal fixed objects like columns."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWallArea": {
                "type": "real",
                "Description": "Sum of all wall (and other vertically bounding elements, like columns) areas bounded by the space. It excludes the area covered by elements inside the wall area (doors, windows, other openings, etc.)."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "ElevationWithFlooring": {
                "type": "real",
                "Description": null
              },
              "LongName": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcSpaceType": {
        "Parent": "IfcSpatialStructureElementType",
        "Description": "A space represents an area or volume bounded actually or theoretically. Spaces are areas or volumes that provide for certain functions within a building.The IfcSpaceType defines a list of commonly shared defines commonly shared information for occurrences of spaces. The set of shared information may include:common properties within shared property sets\ncommon shape representationsIt is used to define an space specification (i.e. the specific space information, that is common to all occurrences of that space type. Space types may be exchanged without being already assigned to occurrences.NOTE  The space types are often used to represent space catalogues, less so for sharing a common representation map. Space types in a space catalogue share same space classification and a common set of space requirement properties.The occurrences of IfcSpaceType are represented by instances of IfcSpace.HISTORY  New entity in IFC2x3.{ .change-ifc2x4}IFC4 CHANGE  The attribute LongName has been added to the end of the entity definition.",
        "Psets": {
          "Pset_BerthCommon": {
            "Properties": {
              "AbnormalBerthingFactor": {
                "type": "real",
                "Description": "Risk assessed safety factor"
              },
              "BerthApproach": {
                "type": "PEnum_BerthApproach",
                "Description": "How the vessel approaches the berth",
                "values": [
                  "END",
                  "SIDE"
                ]
              },
              "BerthingAngle": {
                "type": "real",
                "Description": "Angle of approach for the vessel to the berth"
              },
              "BerthingVelocity": {
                "type": "real",
                "Description": "Velocity of the vessel as it berths"
              },
              "BerthMode": {
                "type": "PEnum_BerthMode",
                "Description": "Orientation of vessel as it approaches berth",
                "values": [
                  "BOW",
                  "STERN"
                ]
              }
            }
          },
          "Pset_FenderDesignCriteria": {
            "Properties": {
              "AddedMassCoefficientMethod": {
                "type": "PEnum_AddedMassCoefficientMethod",
                "Description": "Method used to determine the Added Mass Coefficient used for design",
                "values": [
                  "PIANC",
                  "SHIGERU_UEDA",
                  "VASCO_COSTA"
                ]
              },
              "CoefficientOfFriction": {
                "type": "real",
                "Description": "Coefficient of friction value for the fender"
              },
              "EnergyAbsorption": {
                "type": "real",
                "Description": "Energy absorption capacity of the element."
              },
              "EnergyAbsorptionTolerance": {
                "type": "real",
                "Description": "Manufacturing tolerance on energy absorption"
              },
              "MaximumTemperatureFactor": {
                "type": "real",
                "Description": "Deviation in performance due to maximum design temperature"
              },
              "MaxReaction": {
                "type": "real",
                "Description": "Maximum reaction from the element"
              },
              "MaxReactionTolerance": {
                "type": "real",
                "Description": "Manufacturing tolerance on maximum reaction at fender support."
              },
              "MinCompressedFenderHeight": {
                "type": "real",
                "Description": "Minimum height required for a compressed fender to prevent vessels striking the structure"
              },
              "MinimumTemperatureFactor": {
                "type": "real",
                "Description": "Deviation in performance due to minimum design temperature"
              },
              "VelocityFactorEnergy": {
                "type": "real",
                "Description": "Deviation in energy absorption performance due to strain rate"
              },
              "VelocityFactorReaction": {
                "type": "real",
                "Description": "Deviation in reaction due to strain rate"
              }
            }
          },
          "Pset_ProcessCapacity": {
            "Properties": {
              "ProcessCapacity": {
                "type": "integer",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance"
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity."
              }
            }
          },
          "Pset_SpaceParking": {
            "Properties": {
              "IsAisle": {
                "type": "boolean",
                "Description": "Indicates that this parking zone is for accessing the parking units, i.e. an aisle (TRUE) and not a parking unit itself (FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsOneWay": {
                "type": "boolean",
                "Description": "Indicates whether the parking aisle is designed for oneway traffic (TRUE) or twoway traffic (FALSE). Should only be provided if the property IsAisle is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ParkingUnits": {
                "type": "integer",
                "Description": "Indicates the number of transportation units of the type specified by the property ParkingUse that may be accommodated within the space. Generally, this value should default to 1 unit. However, where the parking space is for motorcycles or bicycles, provision may be made for more than one unit in the space."
              },
              "ParkingUse": {
                "type": "string",
                "Description": "Identifies the type of transportation for which the parking space is designed. Values are not predefined but might include car, compact car, motorcycle, bicycle, truck, bus etc."
              }
            }
          },
          "Qto_SpaceBaseQuantities": {
            "Properties": {
              "FinishCeilingHeight": {
                "type": "real",
                "Description": "Height of the suspended ceiling (from top of flooring to the bottom of the suspended ceiling). To be provided only if the space has a suspended ceiling with constant height."
              },
              "FinishFloorHeight": {
                "type": "real",
                "Description": "Height of the flooring (from base slab without flooring to the flooring height). To be provided only if the space has a constant flooring height."
              },
              "GrossCeilingArea": {
                "type": "real",
                "Description": "Sum of all ceiling areas of the space. It includes the area covered by elementsinside the space (columns, inner walls, etc.). The ceiling area is the real (and not the projected) area (e.g. in case of sloped ceilings)."
              },
              "GrossFloorArea": {
                "type": "real",
                "Description": "Sum of all gross floor areas covered by the spaces within the spatial structure element."
              },
              "GrossPerimeter": {
                "type": "real",
                "Description": "Gross perimeter at the outer contour of the object."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWallArea": {
                "type": "real",
                "Description": "Sum of all wall (and other vertically bounding elements, like columns) areas bounded by the space. It includes the area covered by elements inside the wall area (doors, windows, other openings, etc.)."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "NetCeilingArea": {
                "type": "real",
                "Description": "Sum of all ceiling areas of the space. It excludes the area covered by elementsinside the space (columns, inner walls, etc.). The ceiling area is the real (and not the projected) area (e.g. in case of sloped ceilings)."
              },
              "NetFloorArea": {
                "type": "real",
                "Description": "Sum of all net usable floor areas."
              },
              "NetPerimeter": {
                "type": "real",
                "Description": "Net perimeter at the floor level of this space. It excludes those parts of the perimeter that are created by by virtual boundaries and openings (like doors). It is the measurement used for skirting boards and may includes the perimeter of internal fixed objects like columns."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWallArea": {
                "type": "real",
                "Description": "Sum of all wall (and other vertically bounding elements, like columns) areas bounded by the space. It excludes the area covered by elements inside the wall area (doors, windows, other openings, etc.)."
              }
            }
          }
        }
      },
      "IfcSpatialElement": {
        "Parent": "IfcProduct",
        "Description": "A spatial element is the generalization of all spatial elements that might be used to define a spatial structure or to define spatial zones.a hierarchical spatial structure element as IfcSpatialStructureElement\na spatial structure is a hiearchical decomposition of the project. That spatial structure is often used to provide a project structure to organize a building project.\nA spatial project structure might define as many levels of decomposition as necessary for the building project. Elements within the spatial project structure are site, building, storey, and space or alternatively, site, bridge and bridge part\n\n\na spatial zone as IfcSpatialZone\na spatial zone is a non-hierarchical and potentially overlapping decomposition of the project under some functional consideration.\na spatial zone might be used to represent a thermal zone, a lighting zone, a usable area zone.\na spatial zone might be used to represent a horizontal spatial structure as used in civil works.\na spatial zone might have its independent placement and shape representation.HISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_ProcessCapacity": {
            "Properties": {
              "ProcessCapacity": {
                "type": "integer",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance"
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity."
              }
            }
          },
          "Pset_SpaceCommon": {
            "Properties": {
              "GrossPlannedArea": {
                "type": "real",
                "Description": "Total planned gross area of the spatial structure element. Used for programming the spatial structure element."
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication that this object is designed to be accessible by the handicapped. Set to (TRUE) if this object is rated as handicap accessible according the local building codes, otherwise (FALSE).\nIt is giving according to the requirements of the national building code.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NetPlannedArea": {
                "type": "real",
                "Description": "Total planned net area of the object. Used for programming the object."
              },
              "PubliclyAccessible": {
                "type": "boolean",
                "Description": "Indication whether this space (in case of e.g., a toilet) is designed to serve as a publicly accessible space, e.g., for a public toilet (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              }
            }
          },
          "Pset_SpaceCoveringRequirements": {
            "Properties": {
              "CeilingCovering": {
                "type": "string",
                "Description": "Label to indicate the material or finish of the space flooring. The label is used for room book information and often displayed in room stamp.The material information is provided in absence of an IfcCovering (type=CEILING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence."
              },
              "CeilingCoveringThickness": {
                "type": "real",
                "Description": "Thickness of the material layer(s) for the space ceiling.The thickness information is provided in absence of an IfcCovering (type=CEILING) object with own shape representation. In cases of inconsistency between the geometric parameters of an assigned IfcCovering and this attached property, the geometric parameters take precedence."
              },
              "ConcealedCeiling": {
                "type": "boolean",
                "Description": "Indication whether this space is designed to have a concealed flooring space (TRUE) or not (FALSE). A concealed ceiling space is normally meant to be the space between a slab and a ceiling.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ConcealedCeilingOffset": {
                "type": "real",
                "Description": "Distance between the upper floor slab and the suspended ceiling, often used for distribution systems. Often referred to as plenum."
              },
              "ConcealedFlooring": {
                "type": "boolean",
                "Description": "Indication whether this space is designed to have a concealed flooring space (TRUE) or not (FALSE). A concealed flooring space is normally meant to be the space beneath a raised floor.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ConcealedFlooringOffset": {
                "type": "real",
                "Description": "Distance between the floor slab and the floor covering, often used for cables and other installations. Often referred to as raised flooring."
              },
              "FloorCovering": {
                "type": "string",
                "Description": "Label to indicate the material or finish of the space flooring. The label is used for room book information and often displayed in room stamp.The material information is provided in absence of an IfcCovering (type=FLOORING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence."
              },
              "FloorCoveringThickness": {
                "type": "real",
                "Description": "Thickness of the material layer(s) for the space flooring.The thickness information is provided in absence of an IfcCovering (type=FLOORING) object with own shape representation. In cases of inconsistency between the geometric parameters of an assigned IfcCovering and this attached property, the geometric parameters take precedence."
              },
              "Molding": {
                "type": "string",
                "Description": "Label to indicate the material or construction of the molding around the space ceiling. The label is used for room book information.The material information is provided in absence of an IfcCovering (type=MOLDING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence."
              },
              "MoldingHeight": {
                "type": "real",
                "Description": "Height of the molding.The height information is provided in absence of an IfcCovering (type=MOLDING) object with own shape representation and material assignment. In case of inconsistency the height assigned to IfcCovering elements takes precedence."
              },
              "SkirtingBoard": {
                "type": "string",
                "Description": "Label to indicate the material or construction of the skirting board around the space flooring. The label is used for room book information.The material information is provided in absence of an IfcCovering (type=SKIRTINGBOARD) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence."
              },
              "SkirtingBoardHeight": {
                "type": "real",
                "Description": "Height of the skirting board.The height information is provided in absence of an IfcCovering (type=SKIRTINGBOARD) object with own shape representation and material assignment. In case of inconsistency the height assigned to IfcCovering elements takes precedence."
              },
              "WallCovering": {
                "type": "string",
                "Description": "Label to indicate the material or finish of the space flooring. The label is used for room book information and often displayed in room stamp.The material information is provided in absence of an IfcCovering (type=CLADDING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence."
              },
              "WallCoveringThickness": {
                "type": "real",
                "Description": "Thickness of the material layer(s) for the space cladding.The thickness information is provided in absence of an IfcCovering (type=CLADDING) object with own shape representation. In cases of inconsistency between the geometric parameters of an assigned IfcCovering and this attached property, the geometric parameters take precedence."
              }
            }
          },
          "Pset_SpaceFireSafetyRequirements": {
            "Properties": {
              "AirPressurization": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have pressurized air (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRiskFactor": {
                "type": "string",
                "Description": "Fire Risk factor assigned to the space according to local building regulations. It defines the fire risk of the space at several levels of fire hazard."
              },
              "FlammableStorage": {
                "type": "boolean",
                "Description": "Indication whether the space is intended to serve as a storage of flammable material (which is regarded as such by the presiding building code. (TRUE) indicates yes, (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtection": {
                "type": "boolean",
                "Description": "Indication whether this object is sprinkler protected (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtectionAutomatic": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic sprinkler protection (TRUE) or not (FALSE).\nIt should only be given, if the property \"SprinklerProtection\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_SpaceHVACDesign": {
            "Properties": {
              "AirConditioning": {
                "type": "boolean",
                "Description": "Indication whether this space requires air conditioning provided (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "AirConditioningCentral": {
                "type": "boolean",
                "Description": "Indication whether the space  requires a central air conditioning provided (TRUE) or not (FALSE).\nIt should only be given, if the property \"AirConditioning\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "AirHandlingName": {
                "type": "string",
                "Description": "Name of the Air Handling unit or system."
              },
              "DiscontinuedHeating": {
                "type": "boolean",
                "Description": "Indication whether discontinued heating is required/desirable from user/designer view point. (TRUE) if yes, (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HumidityMax": {
                "type": "real",
                "Description": "Maximum allowed humidity."
              },
              "HumidityMin": {
                "type": "real",
                "Description": "Minimum required humidity."
              },
              "HumiditySetPoint": {
                "type": "real",
                "Description": "Required Humidity Set Point."
              },
              "HumiditySummer": {
                "type": "real",
                "Description": "Required humidity in summer."
              },
              "HumidityWinter": {
                "type": "real",
                "Description": "Required humidity in winter."
              },
              "MechanicalVentilation": {
                "type": "boolean",
                "Description": "Mechanical Ventilation",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalVentilationRate": {
                "type": "integer",
                "Description": "Indication of the requirement of a particular mechanical air ventilation rate, given in air changes per hour."
              },
              "NaturalVentilation": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have natural ventilation (TRUE) or mechanical ventilation (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NaturalVentilationRate": {
                "type": "integer",
                "Description": "Indication of the requirement of a particular natural air ventilation rate, given in air changes per hour."
              },
              "TemperatureMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone, that is required from user/designer view point.  If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period."
              },
              "TemperatureMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone, that is required from user/designer view point. If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period."
              },
              "TemperatureSetPoint": {
                "type": "real",
                "Description": "The temperature setpoint range and default setpoint."
              },
              "TemperatureSummerMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling."
              },
              "TemperatureSummerMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling."
              },
              "TemperatureWinterMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating."
              },
              "TemperatureWinterMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating."
              }
            }
          },
          "Pset_SpaceLightingDesign": {
            "Properties": {
              "ArtificialLighting": {
                "type": "boolean",
                "Description": "Indication whether this space  requires artificial lighting (as natural lighting would be not sufficient). (TRUE) indicates yes (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Illuminance": {
                "type": "real",
                "Description": "Required average illuminance value for this space."
              }
            }
          },
          "Pset_SpaceOccupancyRequirements": {
            "Properties": {
              "AreaPerOccupant": {
                "type": "real",
                "Description": "Design occupancy loading for this type of usage assigned to this space."
              },
              "IsOutlookDesirable": {
                "type": "boolean",
                "Description": "An indication of whether the outlook is desirable (set TRUE) or not (set FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MinimumHeadroom": {
                "type": "real",
                "Description": "Headroom required for the activity assigned to this space."
              },
              "OccupancyNumber": {
                "type": "integer",
                "Description": "Number of people required for the activity assigned to this space."
              },
              "OccupancyNumberPeak": {
                "type": "integer",
                "Description": "Maximal number of people required for the activity assigned to this space in peak time."
              },
              "OccupancyTimePerDay": {
                "type": "real",
                "Description": "The amount of time during the day that the activity is required within this space."
              },
              "OccupancyType": {
                "type": "string",
                "Description": "Occupancy type for this object.\nIt is defined according to the presiding national building code."
              }
            }
          },
          "Pset_AirSideSystemInformation": {
            "Properties": {
              "AirFlowSensible": {
                "type": "real",
                "Description": ""
              },
              "AirSideSystemDistributionType": {
                "type": "PEnum_AirSideSystemDistributionType",
                "Description": "This enumeration defines the basic types of air side systems (e.g., SingleDuct, DualDuct, Multizone, etc.).",
                "values": [
                  "DUALDUCT",
                  "MULTIZONE",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLEDUCT",
                  "UNSET"
                ]
              },
              "AirSideSystemType": {
                "type": "PEnum_AirSideSystemType",
                "Description": "This enumeration specifies the basic types of possible air side systems (e.g., Constant Volume, Variable Volume, etc.).",
                "values": [
                  "CONSTANTVOLUME",
                  "CONSTANTVOLUMEBYPASS",
                  "CONSTANTVOLUMEMULTIPLEZONEREHEAT",
                  "CONSTANTVOLUMESINGLEZONE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VARIABLEAIRVOLUME",
                  "VARIABLEAIRVOLUMEDUALCONDUIT",
                  "VARIABLEAIRVOLUMEFANPOWERED",
                  "VARIABLEAIRVOLUMEINDUCTION",
                  "VARIABLEAIRVOLUMEREHEAT",
                  "VARIABLEAIRVOLUMEVARIABLEDIFFUSERS",
                  "VARIABLEAIRVOLUMEVARIABLETEMPERATURE"
                ]
              },
              "ApplianceDiversity": {
                "type": "real",
                "Description": "Diversity of appliance load."
              },
              "CoolingTemperatureDelta": {
                "type": "real",
                "Description": "Cooling temperature difference for calculating space air flow rates."
              },
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "EnergyGainSensible": {
                "type": "real",
                "Description": "The sum of total energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level sensible energy gains."
              },
              "EnergyGainTotal": {
                "type": "real",
                "Description": "The total amount of energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level total energy gains."
              },
              "EnergyLoss": {
                "type": "real",
                "Description": "The sum of energy losses for the spaces served by the system during the peak heating conditions."
              },
              "FanPower": {
                "type": "real",
                "Description": "Fan motor loads contributing to the cooling load."
              },
              "HeatingTemperatureDelta": {
                "type": "real",
                "Description": "Heating temperature difference for calculating space air flow rates."
              },
              "InfiltrationDiversitySummer": {
                "type": "real",
                "Description": "Diversity factor for Summer infiltration."
              },
              "InfiltrationDiversityWinter": {
                "type": "real",
                "Description": "Diversity factor for Winter infiltration."
              },
              "TotalAirFlow": {
                "type": "real",
                "Description": ""
              },
              "Ventilation": {
                "type": "real",
                "Description": "Required outside air ventilation."
              }
            }
          },
          "Pset_SpaceAirHandlingDimensioning": {
            "Properties": {
              "BoundaryAreaHeatLoss": {
                "type": "real",
                "Description": "Heat loss per unit area for the boundary object. This is a design input value for use in the absence of calculated load data."
              },
              "CeilingRAPlenum": {
                "type": "boolean",
                "Description": "Ceiling plenum used for return air or not. TRUE = Yes, FALSE = No.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "CoolingDesignAirFlow": {
                "type": "real",
                "Description": "The air flowrate required during the peak cooling conditions."
              },
              "CoolingDryBulb": {
                "type": "real",
                "Description": "Dry bulb temperature, usually for for cooling design."
              },
              "CoolingRelativeHumidity": {
                "type": "real",
                "Description": "Inside relative humidity for cooling design."
              },
              "DesignAirFlow": {
                "type": "real",
                "Description": "The air flowrate required during the peak cooling conditions."
              },
              "HeatingDesignAirFlow": {
                "type": "real",
                "Description": "The air flowrate required during the peak heating conditions, but could also be determined by minimum ventilation requirement or minimum air change requirements."
              },
              "HeatingDryBulb": {
                "type": "real",
                "Description": "Dry bulb temperature for heating design."
              },
              "HeatingRelativeHumidity": {
                "type": "real",
                "Description": "Inside relative humidity for heating design."
              },
              "SensibleHeatGain": {
                "type": "real",
                "Description": "The  sensible heat or energy gained by the space during the peak conditions."
              },
              "TotalHeatGain": {
                "type": "real",
                "Description": "The total amount of heat or energy gained by the space at the time of the space's peak cooling conditions."
              },
              "TotalHeatLoss": {
                "type": "real",
                "Description": "The total amount of heat or energy lost by the space at the time of the space's peak heating conditions."
              },
              "VentilationDesignAirFlow": {
                "type": "real",
                "Description": "Ventilation outside air requirement for the space."
              }
            }
          },
          "Pset_ThermalLoad": {
            "Properties": {
              "ApplianceDiversity": {
                "type": "real",
                "Description": "Diversity of appliance load."
              },
              "AppliancePercentLoadToRadiant": {
                "type": "real",
                "Description": "Percent of sensible load to radiant heat."
              },
              "InfiltrationDiversitySummer": {
                "type": "real",
                "Description": "Diversity factor for Summer infiltration."
              },
              "InfiltrationDiversityWinter": {
                "type": "real",
                "Description": "Diversity factor for Winter infiltration."
              },
              "LightingDiversity": {
                "type": "real",
                "Description": "Lighting diversity."
              },
              "LightingLoadIntensity": {
                "type": "real",
                "Description": "Average lighting load intensity in the space per unit area (PowerMeasure/IfcAreaMeasure)."
              },
              "LightingPercentLoadToReturnAir": {
                "type": "real",
                "Description": "Percent of lighting load to the return air plenum."
              },
              "LoadSafetyFactor": {
                "type": "real",
                "Description": "Load safety factor."
              },
              "OccupancyDiversity": {
                "type": "real",
                "Description": "Diversity factor that may be applied to the number of people in the space."
              },
              "OutsideAirPerPerson": {
                "type": "real",
                "Description": "Design quantity of outside air to be provided per person in the space."
              },
              "ReceptacleLoadIntensity": {
                "type": "real",
                "Description": "Average power use intensity of appliances and other non-HVAC equipment in the space per unit area.(PowerMeasure/IfcAreaMeasure)."
              },
              "TotalCoolingLoad": {
                "type": "real",
                "Description": "The peak total cooling load for the building, zone or space."
              },
              "TotalHeatingLoad": {
                "type": "real",
                "Description": "The peak total heating load for the building, zone or space."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": null
              },
              "ElementType": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcSpatialElementType": {
        "Parent": "IfcTypeProduct",
        "Description": "IfcSpatialElementType defines a list of commonly shared property set definitions of a spatial structure element and an optional set of product representations. It is used to define a spatial element specification (the specific element information, that is common to all occurrences of that element type).NOTE \u00a0The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.A spatial element type is used to define the common properties of a certain type of a spatial structure element that may be applied to many instances of that\u00a0type to assign a specific style. Spatial element types (i.e. the instantiable subtypes) may be exchanged without being already assigned to occurrences.NOTE \u00a0The spatial element types are often used to represent catalogues of predefined spatial types for shared attributes, less so for sharing a common representation map.The occurrences of subtypes of the abstract IfcSpatialElementType are represented by instances of subtypes of the abstract IfcSpatialElement.HISTORY \u00a0New entity in IFC4.",
        "Psets": {
          "Pset_ProcessCapacity": {
            "Properties": {
              "ProcessCapacity": {
                "type": "integer",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance"
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity."
              }
            }
          },
          "Pset_SpaceCommon": {
            "Properties": {
              "GrossPlannedArea": {
                "type": "real",
                "Description": "Total planned gross area of the spatial structure element. Used for programming the spatial structure element."
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication that this object is designed to be accessible by the handicapped. Set to (TRUE) if this object is rated as handicap accessible according the local building codes, otherwise (FALSE).\nIt is giving according to the requirements of the national building code.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NetPlannedArea": {
                "type": "real",
                "Description": "Total planned net area of the object. Used for programming the object."
              },
              "PubliclyAccessible": {
                "type": "boolean",
                "Description": "Indication whether this space (in case of e.g., a toilet) is designed to serve as a publicly accessible space, e.g., for a public toilet (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              }
            }
          },
          "Pset_SpaceCoveringRequirements": {
            "Properties": {
              "CeilingCovering": {
                "type": "string",
                "Description": "Label to indicate the material or finish of the space flooring. The label is used for room book information and often displayed in room stamp.The material information is provided in absence of an IfcCovering (type=CEILING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence."
              },
              "CeilingCoveringThickness": {
                "type": "real",
                "Description": "Thickness of the material layer(s) for the space ceiling.The thickness information is provided in absence of an IfcCovering (type=CEILING) object with own shape representation. In cases of inconsistency between the geometric parameters of an assigned IfcCovering and this attached property, the geometric parameters take precedence."
              },
              "ConcealedCeiling": {
                "type": "boolean",
                "Description": "Indication whether this space is designed to have a concealed flooring space (TRUE) or not (FALSE). A concealed ceiling space is normally meant to be the space between a slab and a ceiling.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ConcealedCeilingOffset": {
                "type": "real",
                "Description": "Distance between the upper floor slab and the suspended ceiling, often used for distribution systems. Often referred to as plenum."
              },
              "ConcealedFlooring": {
                "type": "boolean",
                "Description": "Indication whether this space is designed to have a concealed flooring space (TRUE) or not (FALSE). A concealed flooring space is normally meant to be the space beneath a raised floor.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ConcealedFlooringOffset": {
                "type": "real",
                "Description": "Distance between the floor slab and the floor covering, often used for cables and other installations. Often referred to as raised flooring."
              },
              "FloorCovering": {
                "type": "string",
                "Description": "Label to indicate the material or finish of the space flooring. The label is used for room book information and often displayed in room stamp.The material information is provided in absence of an IfcCovering (type=FLOORING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence."
              },
              "FloorCoveringThickness": {
                "type": "real",
                "Description": "Thickness of the material layer(s) for the space flooring.The thickness information is provided in absence of an IfcCovering (type=FLOORING) object with own shape representation. In cases of inconsistency between the geometric parameters of an assigned IfcCovering and this attached property, the geometric parameters take precedence."
              },
              "Molding": {
                "type": "string",
                "Description": "Label to indicate the material or construction of the molding around the space ceiling. The label is used for room book information.The material information is provided in absence of an IfcCovering (type=MOLDING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence."
              },
              "MoldingHeight": {
                "type": "real",
                "Description": "Height of the molding.The height information is provided in absence of an IfcCovering (type=MOLDING) object with own shape representation and material assignment. In case of inconsistency the height assigned to IfcCovering elements takes precedence."
              },
              "SkirtingBoard": {
                "type": "string",
                "Description": "Label to indicate the material or construction of the skirting board around the space flooring. The label is used for room book information.The material information is provided in absence of an IfcCovering (type=SKIRTINGBOARD) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence."
              },
              "SkirtingBoardHeight": {
                "type": "real",
                "Description": "Height of the skirting board.The height information is provided in absence of an IfcCovering (type=SKIRTINGBOARD) object with own shape representation and material assignment. In case of inconsistency the height assigned to IfcCovering elements takes precedence."
              },
              "WallCovering": {
                "type": "string",
                "Description": "Label to indicate the material or finish of the space flooring. The label is used for room book information and often displayed in room stamp.The material information is provided in absence of an IfcCovering (type=CLADDING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence."
              },
              "WallCoveringThickness": {
                "type": "real",
                "Description": "Thickness of the material layer(s) for the space cladding.The thickness information is provided in absence of an IfcCovering (type=CLADDING) object with own shape representation. In cases of inconsistency between the geometric parameters of an assigned IfcCovering and this attached property, the geometric parameters take precedence."
              }
            }
          },
          "Pset_SpaceFireSafetyRequirements": {
            "Properties": {
              "AirPressurization": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have pressurized air (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRiskFactor": {
                "type": "string",
                "Description": "Fire Risk factor assigned to the space according to local building regulations. It defines the fire risk of the space at several levels of fire hazard."
              },
              "FlammableStorage": {
                "type": "boolean",
                "Description": "Indication whether the space is intended to serve as a storage of flammable material (which is regarded as such by the presiding building code. (TRUE) indicates yes, (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtection": {
                "type": "boolean",
                "Description": "Indication whether this object is sprinkler protected (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtectionAutomatic": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic sprinkler protection (TRUE) or not (FALSE).\nIt should only be given, if the property \"SprinklerProtection\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_SpaceHVACDesign": {
            "Properties": {
              "AirConditioning": {
                "type": "boolean",
                "Description": "Indication whether this space requires air conditioning provided (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "AirConditioningCentral": {
                "type": "boolean",
                "Description": "Indication whether the space  requires a central air conditioning provided (TRUE) or not (FALSE).\nIt should only be given, if the property \"AirConditioning\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "AirHandlingName": {
                "type": "string",
                "Description": "Name of the Air Handling unit or system."
              },
              "DiscontinuedHeating": {
                "type": "boolean",
                "Description": "Indication whether discontinued heating is required/desirable from user/designer view point. (TRUE) if yes, (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HumidityMax": {
                "type": "real",
                "Description": "Maximum allowed humidity."
              },
              "HumidityMin": {
                "type": "real",
                "Description": "Minimum required humidity."
              },
              "HumiditySetPoint": {
                "type": "real",
                "Description": "Required Humidity Set Point."
              },
              "HumiditySummer": {
                "type": "real",
                "Description": "Required humidity in summer."
              },
              "HumidityWinter": {
                "type": "real",
                "Description": "Required humidity in winter."
              },
              "MechanicalVentilation": {
                "type": "boolean",
                "Description": "Mechanical Ventilation",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalVentilationRate": {
                "type": "integer",
                "Description": "Indication of the requirement of a particular mechanical air ventilation rate, given in air changes per hour."
              },
              "NaturalVentilation": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have natural ventilation (TRUE) or mechanical ventilation (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NaturalVentilationRate": {
                "type": "integer",
                "Description": "Indication of the requirement of a particular natural air ventilation rate, given in air changes per hour."
              },
              "TemperatureMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone, that is required from user/designer view point.  If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period."
              },
              "TemperatureMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone, that is required from user/designer view point. If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period."
              },
              "TemperatureSetPoint": {
                "type": "real",
                "Description": "The temperature setpoint range and default setpoint."
              },
              "TemperatureSummerMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling."
              },
              "TemperatureSummerMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling."
              },
              "TemperatureWinterMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating."
              },
              "TemperatureWinterMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating."
              }
            }
          },
          "Pset_SpaceLightingDesign": {
            "Properties": {
              "ArtificialLighting": {
                "type": "boolean",
                "Description": "Indication whether this space  requires artificial lighting (as natural lighting would be not sufficient). (TRUE) indicates yes (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Illuminance": {
                "type": "real",
                "Description": "Required average illuminance value for this space."
              }
            }
          },
          "Pset_SpaceOccupancyRequirements": {
            "Properties": {
              "AreaPerOccupant": {
                "type": "real",
                "Description": "Design occupancy loading for this type of usage assigned to this space."
              },
              "IsOutlookDesirable": {
                "type": "boolean",
                "Description": "An indication of whether the outlook is desirable (set TRUE) or not (set FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MinimumHeadroom": {
                "type": "real",
                "Description": "Headroom required for the activity assigned to this space."
              },
              "OccupancyNumber": {
                "type": "integer",
                "Description": "Number of people required for the activity assigned to this space."
              },
              "OccupancyNumberPeak": {
                "type": "integer",
                "Description": "Maximal number of people required for the activity assigned to this space in peak time."
              },
              "OccupancyTimePerDay": {
                "type": "real",
                "Description": "The amount of time during the day that the activity is required within this space."
              },
              "OccupancyType": {
                "type": "string",
                "Description": "Occupancy type for this object.\nIt is defined according to the presiding national building code."
              }
            }
          },
          "Pset_SpaceAirHandlingDimensioning": {
            "Properties": {
              "BoundaryAreaHeatLoss": {
                "type": "real",
                "Description": "Heat loss per unit area for the boundary object. This is a design input value for use in the absence of calculated load data."
              },
              "CeilingRAPlenum": {
                "type": "boolean",
                "Description": "Ceiling plenum used for return air or not. TRUE = Yes, FALSE = No.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "CoolingDesignAirFlow": {
                "type": "real",
                "Description": "The air flowrate required during the peak cooling conditions."
              },
              "CoolingDryBulb": {
                "type": "real",
                "Description": "Dry bulb temperature, usually for for cooling design."
              },
              "CoolingRelativeHumidity": {
                "type": "real",
                "Description": "Inside relative humidity for cooling design."
              },
              "DesignAirFlow": {
                "type": "real",
                "Description": "The air flowrate required during the peak cooling conditions."
              },
              "HeatingDesignAirFlow": {
                "type": "real",
                "Description": "The air flowrate required during the peak heating conditions, but could also be determined by minimum ventilation requirement or minimum air change requirements."
              },
              "HeatingDryBulb": {
                "type": "real",
                "Description": "Dry bulb temperature for heating design."
              },
              "HeatingRelativeHumidity": {
                "type": "real",
                "Description": "Inside relative humidity for heating design."
              },
              "SensibleHeatGain": {
                "type": "real",
                "Description": "The  sensible heat or energy gained by the space during the peak conditions."
              },
              "TotalHeatGain": {
                "type": "real",
                "Description": "The total amount of heat or energy gained by the space at the time of the space's peak cooling conditions."
              },
              "TotalHeatLoss": {
                "type": "real",
                "Description": "The total amount of heat or energy lost by the space at the time of the space's peak heating conditions."
              },
              "VentilationDesignAirFlow": {
                "type": "real",
                "Description": "Ventilation outside air requirement for the space."
              }
            }
          },
          "Pset_ThermalLoad": {
            "Properties": {
              "ApplianceDiversity": {
                "type": "real",
                "Description": "Diversity of appliance load."
              },
              "AppliancePercentLoadToRadiant": {
                "type": "real",
                "Description": "Percent of sensible load to radiant heat."
              },
              "InfiltrationDiversitySummer": {
                "type": "real",
                "Description": "Diversity factor for Summer infiltration."
              },
              "InfiltrationDiversityWinter": {
                "type": "real",
                "Description": "Diversity factor for Winter infiltration."
              },
              "LightingDiversity": {
                "type": "real",
                "Description": "Lighting diversity."
              },
              "LightingLoadIntensity": {
                "type": "real",
                "Description": "Average lighting load intensity in the space per unit area (PowerMeasure/IfcAreaMeasure)."
              },
              "LightingPercentLoadToReturnAir": {
                "type": "real",
                "Description": "Percent of lighting load to the return air plenum."
              },
              "LoadSafetyFactor": {
                "type": "real",
                "Description": "Load safety factor."
              },
              "OccupancyDiversity": {
                "type": "real",
                "Description": "Diversity factor that may be applied to the number of people in the space."
              },
              "OutsideAirPerPerson": {
                "type": "real",
                "Description": "Design quantity of outside air to be provided per person in the space."
              },
              "ReceptacleLoadIntensity": {
                "type": "real",
                "Description": "Average power use intensity of appliances and other non-HVAC equipment in the space per unit area.(PowerMeasure/IfcAreaMeasure)."
              },
              "TotalCoolingLoad": {
                "type": "real",
                "Description": "The peak total cooling load for the building, zone or space."
              },
              "TotalHeatingLoad": {
                "type": "real",
                "Description": "The peak total heating load for the building, zone or space."
              }
            }
          }
        }
      },
      "IfcSpatialStructureElement": {
        "Parent": "IfcSpatialElement",
        "Description": "A spatial structure element is the generalization of all spatial elements that might be used to define a spatial structure. That spatial structure is often used to provide a project structure to organize a building project.A spatial project structure might define as many levels of decomposition as necessary for the building project. Elements within the spatial project structure are:site as IfcSite\n\nfacility as IfcFacility, or specifically\n\nbuilding as IfcBuilding\nbridge as IfcBridge\nmarine facility as IfcMarineFacility\nrailway as IfcRailway\nroad as IfcRoad\n\n\n\nfacility part as IfcFacilityPart, or specifically\n\nstorey as IfcBuildingStorey\nfacility part as IfcFacilityPart\n\n\n\nspace as IfcSpaceor aggregations or parts thereof. The composition type declares an element to be either an element itself, or an aggregation (complex) or a decomposition (part). The interpretation of these types is given at each subtype of IfcSpatialStructureElement.The IfcRelAggregates is defined as an 1-to-many relationship and used to establish the relationship between exactly two levels within the spatial project structure. Finally the highest level of the spatial structure is assigned to IfcProject using the IfcRelAggregates.The subtypes of IfcSpatialStructureElement relate to other elements and systems by establishing the following relationships:Containment of elements : IfcRelContainedInSpatialStructure by inverse attribute ContainsElements, used to assign any element, like building elements, MEP elements, etc. to the spatial structure element in which they are primarily contained.\nReference of elements : IfcRelReferencedInSpatialStructure by inverse attribute ReferencesElements, used to reference any element, like building elements, MEP elements, etc. in spatial structure elements, other then the one, where it is contained.\nReference of systems : IfcRelServicesBuildings by inverse attribute ServicedBySystems, used to reference a system, like a building service or electrical distribution system, a zonal system, or a structural analysis system, that is assigned to this spatial structure element.The subtypes of IfcSpatialStructureElement relate to each other by using the IfcRelAggregates relationship to build the project spatial structure. Figure 1 shows the use of IfcRelAggregates to establish a spatial structure including site, building, building section and storey. More information is provided at the level of the subtypes.HISTORY  New entity in IFC2x.{ .spec-head}\nInformal Propositions:The spatial project structure, established by the IfcRelAggregates, shall be acyclic.\nA site should not be (directly or indirectly) associated to a building, storey or space.\nA building should not be (directly or indirectly) associated to a storey or space.\nA storey should not be (directly or indirectly) associated to a space.",
        "Psets": {
          "Pset_PropertyAgreement": {
            "Properties": {
              "AgreementDate": {
                "type": "string",
                "Description": "The date on which the version of the agreement became applicable."
              },
              "AgreementType": {
                "type": "PEnum_PropertyAgreementType",
                "Description": "Identifies the predefined types of property agreement from which the type required may be set.",
                "values": [
                  "ASSIGNMENT",
                  "LEASE",
                  "NOTKNOWN",
                  "OTHER",
                  "TENANT",
                  "UNSET"
                ]
              },
              "AgreementVersion": {
                "type": "string",
                "Description": "The version number of the agreement that is identified."
              },
              "CommencementDate": {
                "type": "string",
                "Description": "Date on which the agreement commences."
              },
              "ConditionCommencement": {
                "type": "string",
                "Description": "Condition of property provided on commencement of the agreement e.g. cold shell, warm lit shell, broom clean, turn-key."
              },
              "ConditionTermination": {
                "type": "string",
                "Description": "Condition of property required on termination of the agreement e.g. cold shell, warm lit shell, broom clean, turn-key."
              },
              "Duration": {
                "type": "string",
                "Description": "Duration."
              },
              "Options": {
                "type": "string",
                "Description": "A statement of the options available in the agreement."
              },
              "PropertyName": {
                "type": "string",
                "Description": "Addressing details of the property as stated within the agreement."
              },
              "Restrictions": {
                "type": "string",
                "Description": "Restrictions that may be placed by a  competent authority."
              },
              "TerminationDate": {
                "type": "string",
                "Description": "Date on which the agreement terminates."
              },
              "TrackingIdentifier": {
                "type": "string",
                "Description": "The identifier assigned to the agreement for the purposes of tracking."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "CompositionType": {
                "values": [
                  "COMPLEX",
                  "ELEMENT",
                  "PARTIAL"
                ],
                "type": "IfcElementCompositionEnum",
                "Description": null
              }
            }
          }
        }
      },
      "IfcSpatialStructureElementType": {
        "Parent": "IfcSpatialElementType",
        "Description": "The element type (IfcSpatialStructureElementType) defines a list of commonly shared property set definitions of a spatial structure element and an optional set of product representations. It is used to define an element specification (i.e. the specific element information, that is common to all occurrences of that element type).NOTE \u00a0The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.A spatial structure element type is used to define the common properties of a certain type of a spatial structure element that may be applied to many instances of that\u00a0type to assign a specific style. Spatial structure element types (the instantiable subtypes) may be exchanged without being already assigned to occurrences.NOTE \u00a0The spatial structure element types are often used to represent catalogues of predefined spatial types for shared attributes, less so for sharing a common representation map.The occurrences of subtypes of the abstract\u00a0IfcSpatialStructureElementType are represented by instances of subtypes of IfcSpatialStructureElement.HISTORY \u00a0New entity in IFC2x3.",
        "Psets": {
          "Pset_PropertyAgreement": {
            "Properties": {
              "AgreementDate": {
                "type": "string",
                "Description": "The date on which the version of the agreement became applicable."
              },
              "AgreementType": {
                "type": "PEnum_PropertyAgreementType",
                "Description": "Identifies the predefined types of property agreement from which the type required may be set.",
                "values": [
                  "ASSIGNMENT",
                  "LEASE",
                  "NOTKNOWN",
                  "OTHER",
                  "TENANT",
                  "UNSET"
                ]
              },
              "AgreementVersion": {
                "type": "string",
                "Description": "The version number of the agreement that is identified."
              },
              "CommencementDate": {
                "type": "string",
                "Description": "Date on which the agreement commences."
              },
              "ConditionCommencement": {
                "type": "string",
                "Description": "Condition of property provided on commencement of the agreement e.g. cold shell, warm lit shell, broom clean, turn-key."
              },
              "ConditionTermination": {
                "type": "string",
                "Description": "Condition of property required on termination of the agreement e.g. cold shell, warm lit shell, broom clean, turn-key."
              },
              "Duration": {
                "type": "string",
                "Description": "Duration."
              },
              "Options": {
                "type": "string",
                "Description": "A statement of the options available in the agreement."
              },
              "PropertyName": {
                "type": "string",
                "Description": "Addressing details of the property as stated within the agreement."
              },
              "Restrictions": {
                "type": "string",
                "Description": "Restrictions that may be placed by a  competent authority."
              },
              "TerminationDate": {
                "type": "string",
                "Description": "Date on which the agreement terminates."
              },
              "TrackingIdentifier": {
                "type": "string",
                "Description": "The identifier assigned to the agreement for the purposes of tracking."
              }
            }
          }
        }
      },
      "IfcSpatialZone": {
        "Parent": "IfcSpatialElement",
        "Description": "A spatial zone is a non-hierarchical and potentially overlapping decomposition of the project under some functional consideration. A spatial zone might be used to represent a thermal zone, a construction zone, a lighting zone, a usable area zone. A spatial zone might have its independent placement and shape representation.The IfcSpatialZone inherits and declares these attributes that shall have the following meaning:Name: A number or designator provided by the user or system for the spatial element\nLongName: Name of the spatial element provided by the user\nDescription: Any additional description provided by the user\nObjectType: reserved for typing of spatial elements in case of PredefinedType = .USERDEFINED., restrictions on applicable values might be published in view definitions or implementer agreements.EXAMPLE A Name could be \"1-003\", typically a running number provided by default by the application. LongName may be \"Office\", and Description may be \"Corner office with habour view\".Physical elements that are referenced by this spatial zone are related using the IfcRelReferencedInSpatialStructure relationship as it is a non-hierarchical assignment in addition to the hierarchical spatial containment within a subtype of IfcSpatialStructureElement. Also spaces, that referenced by this spatial zone are related using the IfcRelReferencedInSpatialStructure relationship. The IfcSpatialZone itself can also be referenced by another spatial element using IfcRelReferencedInSpatialStructure.NOTE  The IfcSpatialZone is different to the IfcZone entity by allowing an own placement and shape representation, whereas IfcZone is only a grouping of IfcSpace's.\nHISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_SpaceFireSafetyRequirements": {
            "Properties": {
              "AirPressurization": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have pressurized air (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRiskFactor": {
                "type": "string",
                "Description": "Fire Risk factor assigned to the space according to local building regulations. It defines the fire risk of the space at several levels of fire hazard."
              },
              "FlammableStorage": {
                "type": "boolean",
                "Description": "Indication whether the space is intended to serve as a storage of flammable material (which is regarded as such by the presiding building code. (TRUE) indicates yes, (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtection": {
                "type": "boolean",
                "Description": "Indication whether this object is sprinkler protected (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtectionAutomatic": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic sprinkler protection (TRUE) or not (FALSE).\nIt should only be given, if the property \"SprinklerProtection\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_SpaceHVACDesign": {
            "Properties": {
              "AirConditioning": {
                "type": "boolean",
                "Description": "Indication whether this space requires air conditioning provided (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "AirConditioningCentral": {
                "type": "boolean",
                "Description": "Indication whether the space  requires a central air conditioning provided (TRUE) or not (FALSE).\nIt should only be given, if the property \"AirConditioning\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "AirHandlingName": {
                "type": "string",
                "Description": "Name of the Air Handling unit or system."
              },
              "DiscontinuedHeating": {
                "type": "boolean",
                "Description": "Indication whether discontinued heating is required/desirable from user/designer view point. (TRUE) if yes, (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HumidityMax": {
                "type": "real",
                "Description": "Maximum allowed humidity."
              },
              "HumidityMin": {
                "type": "real",
                "Description": "Minimum required humidity."
              },
              "HumiditySetPoint": {
                "type": "real",
                "Description": "Required Humidity Set Point."
              },
              "HumiditySummer": {
                "type": "real",
                "Description": "Required humidity in summer."
              },
              "HumidityWinter": {
                "type": "real",
                "Description": "Required humidity in winter."
              },
              "MechanicalVentilation": {
                "type": "boolean",
                "Description": "Mechanical Ventilation",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalVentilationRate": {
                "type": "integer",
                "Description": "Indication of the requirement of a particular mechanical air ventilation rate, given in air changes per hour."
              },
              "NaturalVentilation": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have natural ventilation (TRUE) or mechanical ventilation (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NaturalVentilationRate": {
                "type": "integer",
                "Description": "Indication of the requirement of a particular natural air ventilation rate, given in air changes per hour."
              },
              "TemperatureMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone, that is required from user/designer view point.  If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period."
              },
              "TemperatureMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone, that is required from user/designer view point. If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period."
              },
              "TemperatureSetPoint": {
                "type": "real",
                "Description": "The temperature setpoint range and default setpoint."
              },
              "TemperatureSummerMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling."
              },
              "TemperatureSummerMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling."
              },
              "TemperatureWinterMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating."
              },
              "TemperatureWinterMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating."
              }
            }
          },
          "Pset_SpaceLightingDesign": {
            "Properties": {
              "ArtificialLighting": {
                "type": "boolean",
                "Description": "Indication whether this space  requires artificial lighting (as natural lighting would be not sufficient). (TRUE) indicates yes (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Illuminance": {
                "type": "real",
                "Description": "Required average illuminance value for this space."
              }
            }
          },
          "Pset_SpaceOccupancyRequirements": {
            "Properties": {
              "AreaPerOccupant": {
                "type": "real",
                "Description": "Design occupancy loading for this type of usage assigned to this space."
              },
              "IsOutlookDesirable": {
                "type": "boolean",
                "Description": "An indication of whether the outlook is desirable (set TRUE) or not (set FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MinimumHeadroom": {
                "type": "real",
                "Description": "Headroom required for the activity assigned to this space."
              },
              "OccupancyNumber": {
                "type": "integer",
                "Description": "Number of people required for the activity assigned to this space."
              },
              "OccupancyNumberPeak": {
                "type": "integer",
                "Description": "Maximal number of people required for the activity assigned to this space in peak time."
              },
              "OccupancyTimePerDay": {
                "type": "real",
                "Description": "The amount of time during the day that the activity is required within this space."
              },
              "OccupancyType": {
                "type": "string",
                "Description": "Occupancy type for this object.\nIt is defined according to the presiding national building code."
              }
            }
          },
          "Pset_SpatialZoneCommon": {
            "Properties": {
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              }
            }
          },
          "Qto_SpatialZoneBaseQuantities": {
            "Properties": {
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_AirSideSystemInformation": {
            "Properties": {
              "AirFlowSensible": {
                "type": "real",
                "Description": ""
              },
              "AirSideSystemDistributionType": {
                "type": "PEnum_AirSideSystemDistributionType",
                "Description": "This enumeration defines the basic types of air side systems (e.g., SingleDuct, DualDuct, Multizone, etc.).",
                "values": [
                  "DUALDUCT",
                  "MULTIZONE",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLEDUCT",
                  "UNSET"
                ]
              },
              "AirSideSystemType": {
                "type": "PEnum_AirSideSystemType",
                "Description": "This enumeration specifies the basic types of possible air side systems (e.g., Constant Volume, Variable Volume, etc.).",
                "values": [
                  "CONSTANTVOLUME",
                  "CONSTANTVOLUMEBYPASS",
                  "CONSTANTVOLUMEMULTIPLEZONEREHEAT",
                  "CONSTANTVOLUMESINGLEZONE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VARIABLEAIRVOLUME",
                  "VARIABLEAIRVOLUMEDUALCONDUIT",
                  "VARIABLEAIRVOLUMEFANPOWERED",
                  "VARIABLEAIRVOLUMEINDUCTION",
                  "VARIABLEAIRVOLUMEREHEAT",
                  "VARIABLEAIRVOLUMEVARIABLEDIFFUSERS",
                  "VARIABLEAIRVOLUMEVARIABLETEMPERATURE"
                ]
              },
              "ApplianceDiversity": {
                "type": "real",
                "Description": "Diversity of appliance load."
              },
              "CoolingTemperatureDelta": {
                "type": "real",
                "Description": "Cooling temperature difference for calculating space air flow rates."
              },
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "EnergyGainSensible": {
                "type": "real",
                "Description": "The sum of total energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level sensible energy gains."
              },
              "EnergyGainTotal": {
                "type": "real",
                "Description": "The total amount of energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level total energy gains."
              },
              "EnergyLoss": {
                "type": "real",
                "Description": "The sum of energy losses for the spaces served by the system during the peak heating conditions."
              },
              "FanPower": {
                "type": "real",
                "Description": "Fan motor loads contributing to the cooling load."
              },
              "HeatingTemperatureDelta": {
                "type": "real",
                "Description": "Heating temperature difference for calculating space air flow rates."
              },
              "InfiltrationDiversitySummer": {
                "type": "real",
                "Description": "Diversity factor for Summer infiltration."
              },
              "InfiltrationDiversityWinter": {
                "type": "real",
                "Description": "Diversity factor for Winter infiltration."
              },
              "TotalAirFlow": {
                "type": "real",
                "Description": ""
              },
              "Ventilation": {
                "type": "real",
                "Description": "Required outside air ventilation."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcSpatialZoneType": {
        "Parent": "IfcSpatialElementType",
        "Description": "The IfcSpatialZoneType defines a list of commonly shared property set definitions of a space and an optional set of product representations. It is used to define a space specification (i.e. the specific space information, that is common to all occurrences of that space type).NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.A spatial zone type is used to define the common properties of a certain type of space that may be applied to many instances of that type to assign a specific style. Space types may be exchanged without being already assigned to occurrences.NOTE  The spatial zone types are often used to represent space catalogues, less so for sharing a common representation map. Spatial zone types in a space catalogue share same space classification and a common set of space requirement properties.The occurrences of IfcSpatialZoneType are represented by instances of IfcSpatialZone.HISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_SpaceFireSafetyRequirements": {
            "Properties": {
              "AirPressurization": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have pressurized air (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRiskFactor": {
                "type": "string",
                "Description": "Fire Risk factor assigned to the space according to local building regulations. It defines the fire risk of the space at several levels of fire hazard."
              },
              "FlammableStorage": {
                "type": "boolean",
                "Description": "Indication whether the space is intended to serve as a storage of flammable material (which is regarded as such by the presiding building code. (TRUE) indicates yes, (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtection": {
                "type": "boolean",
                "Description": "Indication whether this object is sprinkler protected (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtectionAutomatic": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic sprinkler protection (TRUE) or not (FALSE).\nIt should only be given, if the property \"SprinklerProtection\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_SpaceHVACDesign": {
            "Properties": {
              "AirConditioning": {
                "type": "boolean",
                "Description": "Indication whether this space requires air conditioning provided (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "AirConditioningCentral": {
                "type": "boolean",
                "Description": "Indication whether the space  requires a central air conditioning provided (TRUE) or not (FALSE).\nIt should only be given, if the property \"AirConditioning\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "AirHandlingName": {
                "type": "string",
                "Description": "Name of the Air Handling unit or system."
              },
              "DiscontinuedHeating": {
                "type": "boolean",
                "Description": "Indication whether discontinued heating is required/desirable from user/designer view point. (TRUE) if yes, (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HumidityMax": {
                "type": "real",
                "Description": "Maximum allowed humidity."
              },
              "HumidityMin": {
                "type": "real",
                "Description": "Minimum required humidity."
              },
              "HumiditySetPoint": {
                "type": "real",
                "Description": "Required Humidity Set Point."
              },
              "HumiditySummer": {
                "type": "real",
                "Description": "Required humidity in summer."
              },
              "HumidityWinter": {
                "type": "real",
                "Description": "Required humidity in winter."
              },
              "MechanicalVentilation": {
                "type": "boolean",
                "Description": "Mechanical Ventilation",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalVentilationRate": {
                "type": "integer",
                "Description": "Indication of the requirement of a particular mechanical air ventilation rate, given in air changes per hour."
              },
              "NaturalVentilation": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have natural ventilation (TRUE) or mechanical ventilation (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NaturalVentilationRate": {
                "type": "integer",
                "Description": "Indication of the requirement of a particular natural air ventilation rate, given in air changes per hour."
              },
              "TemperatureMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone, that is required from user/designer view point.  If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period."
              },
              "TemperatureMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone, that is required from user/designer view point. If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period."
              },
              "TemperatureSetPoint": {
                "type": "real",
                "Description": "The temperature setpoint range and default setpoint."
              },
              "TemperatureSummerMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling."
              },
              "TemperatureSummerMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling."
              },
              "TemperatureWinterMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating."
              },
              "TemperatureWinterMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating."
              }
            }
          },
          "Pset_SpaceLightingDesign": {
            "Properties": {
              "ArtificialLighting": {
                "type": "boolean",
                "Description": "Indication whether this space  requires artificial lighting (as natural lighting would be not sufficient). (TRUE) indicates yes (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Illuminance": {
                "type": "real",
                "Description": "Required average illuminance value for this space."
              }
            }
          },
          "Pset_SpaceOccupancyRequirements": {
            "Properties": {
              "AreaPerOccupant": {
                "type": "real",
                "Description": "Design occupancy loading for this type of usage assigned to this space."
              },
              "IsOutlookDesirable": {
                "type": "boolean",
                "Description": "An indication of whether the outlook is desirable (set TRUE) or not (set FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MinimumHeadroom": {
                "type": "real",
                "Description": "Headroom required for the activity assigned to this space."
              },
              "OccupancyNumber": {
                "type": "integer",
                "Description": "Number of people required for the activity assigned to this space."
              },
              "OccupancyNumberPeak": {
                "type": "integer",
                "Description": "Maximal number of people required for the activity assigned to this space in peak time."
              },
              "OccupancyTimePerDay": {
                "type": "real",
                "Description": "The amount of time during the day that the activity is required within this space."
              },
              "OccupancyType": {
                "type": "string",
                "Description": "Occupancy type for this object.\nIt is defined according to the presiding national building code."
              }
            }
          },
          "Pset_SpatialZoneCommon": {
            "Properties": {
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              }
            }
          },
          "Qto_SpatialZoneBaseQuantities": {
            "Properties": {
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcSystem": {
        "Parent": "IfcGroup",
        "Description": "A system is an organized combination of related parts within an AEC product, composed for a common purpose or function or to provide a service. A system is essentially a functionally related aggregation of products. The grouping relationship to one or several instances of IfcProduct (the system members) is handled by IfcRelAssignsToGroup.NOTE  The use of IfcSystem often applies to the representation of building services related systems, such as the piping system, cold water system, etc. Members within such a system may or may not be connected using the connectivity related entities (through IfcDistributionPort).\nHISTORY  New entity in IFC1.0",
        "Psets": {
          "Pset_InstallationOccurrence": {
            "Properties": {
              "AcceptanceDate": {
                "type": "string",
                "Description": "Date on which the element is accepted by the manager or administrator."
              },
              "InstallationDate": {
                "type": "string",
                "Description": "Date on which the element is installed."
              },
              "PutIntoOperationDate": {
                "type": "string",
                "Description": "Date on which the element is put into operation."
              }
            }
          },
          "Pset_RepairOccurrence": {
            "Properties": {
              "MeanTimeToRepair": {
                "type": "real",
                "Description": "Mean time to repair."
              },
              "RepairContent": {
                "type": "string",
                "Description": "Content of repair, reason and nature can be given, e.g. display faults, communication failure, display exchange."
              },
              "RepairDate": {
                "type": "string",
                "Description": "Date on which the last repair is done on the asset."
              }
            }
          },
          "Pset_Condition": {
            "Properties": {
              "AssessmentCondition": {
                "type": "string",
                "Description": "The overall condition of a product based on an assessment of the contributions to the overall condition made by the various criteria considered. The meanings given to the values of assessed condition should be agreed and documented by local agreements. For instance, is overall condition measured on a scale of 1 - 10 or by assigning names such as Good, OK, Poor."
              },
              "AssessmentDate": {
                "type": "string",
                "Description": "Date on which the overall condition is assessed"
              },
              "AssessmentDescription": {
                "type": "string",
                "Description": "Qualitative description of the condition."
              },
              "AssessmentFrequency": {
                "type": "real",
                "Description": "Indicates how often the equipment should be assessed, to have a clear estimation on its working state, based on which the maintenance staff can decide whether it requires maintenance or requires to be updated or replaced."
              },
              "AssessmentType": {
                "type": "string",
                "Description": "Category of latest condition assessment report of the asset."
              },
              "LastAssessmentReport": {
                "type": "string",
                "Description": "Reference to latest condition (state of health) report."
              },
              "NextAssessmentDate": {
                "type": "string",
                "Description": "Date of next condition inspection"
              }
            }
          },
          "Pset_MaintenanceStrategy": {
            "Properties": {
              "AccidentResponse": {
                "type": "PEnum_AccidentResponse",
                "Description": "Accident response chosen for the asset",
                "values": [
                  "EMERGENCYINSPECTION",
                  "EMERGENCYPROCEDURE",
                  "REACTIVE",
                  "URGENTINSPECTION",
                  "URGENTPROCEDURE"
                ]
              },
              "AssetCriticality": {
                "type": "PEnum_AssetRating",
                "Description": "Rating of the asset's criticality to the operation of the facility",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "AssetFrailty": {
                "type": "PEnum_AssetRating",
                "Description": "Rating of the asset's frailty to breakage or deterioration",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "AssetPriority": {
                "type": "PEnum_AssetRating",
                "Description": "Combined criticality and frailty rating indicating the operational and maintenance priority of the asset",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MonitoringType": {
                "type": "PEnum_MonitoringType",
                "Description": "Monitoring strategy chosen for the asset",
                "values": [
                  "FEEDBACK",
                  "INSPECTION",
                  "IOT",
                  "PPM",
                  "SENSORS"
                ]
              }
            }
          },
          "Pset_MaintenanceTriggerCondition": {
            "Properties": {
              "ConditionDisposalLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger a disposal process",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionMaintenanceLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger maintenance",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionReplacementLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger a replacement process",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionTargetPerformance": {
                "type": "PEnum_AssetRating",
                "Description": "Target condition of the asset",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              }
            }
          },
          "Pset_MaintenanceTriggerDuration": {
            "Properties": {
              "DurationDisposalLevel": {
                "type": "string",
                "Description": "Duration interval at which disposal is performed"
              },
              "DurationMaintenanceLevel": {
                "type": "string",
                "Description": "Duration interval at which maintenance is performed"
              },
              "DurationReplacementLevel": {
                "type": "string",
                "Description": "Duration interval at which replacement is performed"
              },
              "DurationTargetPerformance": {
                "type": "string",
                "Description": "Target time to failure of the asset"
              }
            }
          },
          "Pset_MaintenanceTriggerPerformance": {
            "Properties": {
              "DisposalLevel": {
                "type": "real",
                "Description": "Performance level at which disposal takes place"
              },
              "PerformanceMaintenanceLevel": {
                "type": "real",
                "Description": "Performance level at which maintenance takes place"
              },
              "ReplacementLevel": {
                "type": "real",
                "Description": "Performance level at which replacement takes place"
              },
              "TargetPerformance": {
                "type": "real",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute."
              }
            }
          }
        }
      },
      "IfcTransportationDevice": {
        "Parent": "IfcElement",
        "Description": "Abstract intermediate supertype for transportation devices.",
        "Psets": {
          "Pset_EnergyRequirements": {
            "Properties": {
              "EnergyConsumption": {
                "type": "real",
                "Description": "Annual energy consumption requirement"
              },
              "EnergyConversionEfficiency": {
                "type": "real",
                "Description": "Measure of the efficiency of conversion of fuel energy to mechanical energy"
              },
              "EnergySourceLabel": {
                "type": "string",
                "Description": "Type of energy source e.g. Electricity, Diesel, LPG etc. utilised by the element."
              },
              "PowerDemand": {
                "type": "real",
                "Description": "Power demand of the element"
              }
            }
          },
          "Pset_EnvironmentalEmissions": {
            "Properties": {
              "CarbonDioxideEmissions": {
                "type": "real",
                "Description": "Rate of emission of carbon dioxide"
              },
              "NitrogenOxidesEmissions": {
                "type": "real",
                "Description": "Rate of emission of nitrogen oxides"
              },
              "NoiseEmissions": {
                "type": "real",
                "Description": "Level of sound emission"
              },
              "ParticulateMatterEmissions": {
                "type": "real",
                "Description": "Rate of emission of particulate matter"
              },
              "SulphurDioxideEmissions": {
                "type": "real",
                "Description": "Rate of emission of sulphur dioxide"
              }
            }
          },
          "Pset_ProcessCapacity": {
            "Properties": {
              "ProcessCapacity": {
                "type": "integer",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance"
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity."
              }
            }
          },
          "Pset_TransportElementCommon": {
            "Properties": {
              "CapacityPeople": {
                "type": "integer",
                "Description": "Capacity of the transportation element measured in numbers of person."
              },
              "CapacityWeight": {
                "type": "real",
                "Description": "Capacity of the transport element measured by weight."
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_TransportElementElevator": {
            "Properties": {
              "ClearDepth": {
                "type": "real",
                "Description": "The clear depth."
              },
              "ClearHeight": {
                "type": "real",
                "Description": "Clear height of the object (elevator).\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence."
              },
              "ClearWidth": {
                "type": "real",
                "Description": "The clear width."
              },
              "FireFightingLift": {
                "type": "boolean",
                "Description": "Indication whether the elevator is designed to serve as a fire fighting lift the case of fire (TRUE) or not (FALSE). A fire fighting lift is used by fire fighters to access the location of fire and to evacuate people.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcTransportationDeviceType": {
        "Parent": "IfcElementType",
        "Description": "Types of Transportation Devices.",
        "Psets": {
          "Pset_EnergyRequirements": {
            "Properties": {
              "EnergyConsumption": {
                "type": "real",
                "Description": "Annual energy consumption requirement"
              },
              "EnergyConversionEfficiency": {
                "type": "real",
                "Description": "Measure of the efficiency of conversion of fuel energy to mechanical energy"
              },
              "EnergySourceLabel": {
                "type": "string",
                "Description": "Type of energy source e.g. Electricity, Diesel, LPG etc. utilised by the element."
              },
              "PowerDemand": {
                "type": "real",
                "Description": "Power demand of the element"
              }
            }
          },
          "Pset_EnvironmentalEmissions": {
            "Properties": {
              "CarbonDioxideEmissions": {
                "type": "real",
                "Description": "Rate of emission of carbon dioxide"
              },
              "NitrogenOxidesEmissions": {
                "type": "real",
                "Description": "Rate of emission of nitrogen oxides"
              },
              "NoiseEmissions": {
                "type": "real",
                "Description": "Level of sound emission"
              },
              "ParticulateMatterEmissions": {
                "type": "real",
                "Description": "Rate of emission of particulate matter"
              },
              "SulphurDioxideEmissions": {
                "type": "real",
                "Description": "Rate of emission of sulphur dioxide"
              }
            }
          },
          "Pset_ProcessCapacity": {
            "Properties": {
              "ProcessCapacity": {
                "type": "integer",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance"
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity."
              }
            }
          },
          "Pset_TransportElementCommon": {
            "Properties": {
              "CapacityPeople": {
                "type": "integer",
                "Description": "Capacity of the transportation element measured in numbers of person."
              },
              "CapacityWeight": {
                "type": "real",
                "Description": "Capacity of the transport element measured by weight."
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_TransportElementElevator": {
            "Properties": {
              "ClearDepth": {
                "type": "real",
                "Description": "The clear depth."
              },
              "ClearHeight": {
                "type": "real",
                "Description": "Clear height of the object (elevator).\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence."
              },
              "ClearWidth": {
                "type": "real",
                "Description": "The clear width."
              },
              "FireFightingLift": {
                "type": "boolean",
                "Description": "Indication whether the elevator is designed to serve as a fire fighting lift the case of fire (TRUE) or not (FALSE). A fire fighting lift is used by fire fighters to access the location of fire and to evacuate people.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcTransportElement": {
        "Parent": "IfcTransportationDevice",
        "Description": "A transport element is a generalization of all transport related objects that move people, animals or goods within a Facility. The IfcTransportElement defines the occurrence of a transport element, that (if given), is expressed by the IfcTransportElementType.EXAMPLE Transportation elements include elevator (lift), escalator, moving walkway, etc.\nNOTE  More detailed equipment that may be a part of a transportation device, like a lifting hook, is defined as IfcDiscreteAccessory. It maybe included as a part of the IfcTransportElement by virtue of the objectified relationship IfcRelAggregates.Transport element can describe fixed or non fixed elements, which can either be identified as specified operational assets within a facility or vehicles that interact with the facility as a user or customer.\nIn the case of operational assets, instances of IfcTransportElement can represent individual identifiable vehicles or structures with properties such as serial numbers, registration numbers etc. and be typed accordingly by instances of IfcTransportElementType.In the case transport elements that interact as users or customers, such as cars on a road or vessels at a port, IfcTransportElementType is used to define element specifications which are used to design, analyse and provide operational constraints to the facility.Depending on local classification systems transport elements and transportation systems in buildings are either considered as part of a built system, or as part of a built service system. Within IFC they are considered as part of a built system and may have to be mapped appropriately.HISTORY  New entity in IFC2x.{ .change-ifc2x}IFC2x CHANGE  The attribute PredefinedType (previously OperationType) is made optional.{ .change-ifc2x4}IFC4 CHANGE  The last attributes CapacityByWeight and CapacityByNumber are removed, use Pset_TransportElementCommon instead."
      },
      "IfcVehicle": {
        "Parent": "IfcTransportationDevice",
        "Description": "A Vehicle."
      },
      "IfcVehicleType": {
        "Parent": "IfcTransportationDeviceType",
        "Description": "Type of Vehicle.",
        "Psets": {
          "Pset_CargoCommon": {
            "Properties": {
              "AdditionalProcessing": {
                "type": "PEnum_AdditionalProcessing",
                "Description": "Any additional or special processing requirements on the associated cargo.",
                "values": [
                  "INSPECTION",
                  "ISOLATION",
                  "NONE",
                  "TARIFFS"
                ]
              },
              "ProcessDirection": {
                "type": "PEnum_ProcessDirection",
                "Description": "The direction of flow of the cargo within the process.",
                "values": [
                  "EXPORT",
                  "IMPORT",
                  "TRANSFER"
                ]
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              }
            }
          },
          "Pset_MarineVehicleCommon": {
            "Properties": {
              "AboveDeckProjectedWindEnd": {
                "type": "real",
                "Description": "End on projected windage area above the main deck"
              },
              "AboveDeckProjectedWindSide": {
                "type": "real",
                "Description": "Side on projected windage area above the main deck"
              },
              "CargoDeadWeight": {
                "type": "real",
                "Description": "Weight of (bulk) cargo carried"
              },
              "Displacement": {
                "type": "real",
                "Description": "Weight of water displaced by the vessel"
              },
              "LaneMeters": {
                "type": "real",
                "Description": "Length of lanes accommodating vehicles on roll-on, roll-off vessels"
              },
              "LengthBetweenPerpendiculars": {
                "type": "real",
                "Description": "Length of vessel from rudder shaft to crossing point of the bow and the loaded waterline."
              },
              "VesselDepth": {
                "type": "real",
                "Description": "Depth of the vessel from the main deck to the keel."
              },
              "VesselDraft": {
                "type": "real",
                "Description": "Depth of vessel from the waterline to the keel (LightShip, Ballasted, Maximum)"
              }
            }
          },
          "Pset_MarineVehicleDesignCriteria": {
            "Properties": {
              "AllowableHullPressure": {
                "type": "real",
                "Description": "Allowable contact pressure between fender and hull"
              },
              "SoftnessCoefficient": {
                "type": "real",
                "Description": "Vessel flexibility factor - proportion of impact energy absorbed by the hull."
              }
            }
          },
          "Pset_VehicleAvailability": {
            "Properties": {
              "MaintenanceDowntime": {
                "type": "real",
                "Description": "Maintenance downtime proportion."
              },
              "VehicleAvailability": {
                "type": "real",
                "Description": "Vehicle or Plant availability"
              },
              "WeatherDowntime": {
                "type": "real",
                "Description": "Weather downtime proportion"
              }
            }
          },
          "Qto_VehicleBaseQuantities": {
            "Properties": {
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcVibrationDamper": {
        "Parent": "IfcElementComponent",
        "Description": "A vibration damper is a device used to minimize the effects of vibration in a structure by dissipating kinetic energy. The damper may be passive (elastic, frictional, inertia) or active (in a system using sensors and actuators)."
      },
      "IfcVibrationIsolator": {
        "Parent": "IfcElementComponent",
        "Description": "A vibration isolator is a device used to minimize the effects of vibration transmissibility in a building.",
        "Psets": {
          "Pset_VibrationIsolatorTypeCommon": {
            "Properties": {
              "IsolatorCompressibility": {
                "type": "real",
                "Description": "The compressibility of the vibration isolator."
              },
              "IsolatorStaticDeflection": {
                "type": "real",
                "Description": "Static deflection of the vibration isolator."
              },
              "MaximumSupportedWeight": {
                "type": "real",
                "Description": "The maximum weight that can be carried by the vibration isolator."
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "VibrationTransmissibility": {
                "type": "real",
                "Description": "The vibration transmissibility percentage."
              }
            }
          },
          "Qto_VibrationIsolatorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcVibrationIsolatorType": {
        "Parent": "IfcElementComponentType",
        "Description": "The element component type IfcVibrationIsolatorType defines commonly shared information for occurrences of vibration isolators. The set of shared information may include:\n- common properties with shared property sets\n- common representations\n- common materials\n- common composition of elementsIt is used to define a vibration isolator type specification indicating the specific product information that is common to all occurrences of that product type. The IfcVibrationIsolatorType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcVibrationIsolatorType are represented by instances of IfcVibrationIsolator. Refer to the documentation at IfcVibrationIsolator for supported property sets, materials, and composition.",
        "Psets": {
          "Pset_VibrationIsolatorTypeCommon": {
            "Properties": {
              "IsolatorCompressibility": {
                "type": "real",
                "Description": "The compressibility of the vibration isolator."
              },
              "IsolatorStaticDeflection": {
                "type": "real",
                "Description": "Static deflection of the vibration isolator."
              },
              "MaximumSupportedWeight": {
                "type": "real",
                "Description": "The maximum weight that can be carried by the vibration isolator."
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "VibrationTransmissibility": {
                "type": "real",
                "Description": "The vibration transmissibility percentage."
              }
            }
          },
          "Qto_VibrationIsolatorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcVirtualElement": {
        "Parent": "IfcElement",
        "Description": "A virtual element is a special element used to provide imaginary boundaries, such as between two adjacent, but not separated, spaces. Virtual elements are usually not displayed and does not have quantities and other measures. Therefore IfcVirtualElement does not have material information and quantities attached.NOTE  The main purpose of IfcVirtualElement is the provision of a virtual space boundary. The IfcVirtualElement may provide the 2D curve or 3D surface representation of the virtual space connection and is referenced by two instances of IfcRelSpaceBoundary, each pointing to one of the two adjacent IfcSpaces.The IfcVirtualElement is mainly used to define a virtual boundary between two spaces. Figure 1 describes how to use IfcRelSpaceBoundary in conjunction with IfcVirtualElement to define space boundaries.HISTORY  New entity in IFC2x2 Addendum.{ .change-ifc2x3}IFC2x2 CHANGE  The entity IfcVirtualElement has been added. Upward compatibility for file based exchange is guaranteed."
      },
      "IfcZone": {
        "Parent": "IfcSystem",
        "Description": "A zone is a group of spaces, partial spaces or other zones. These spaces may or may not be adjacent. A zone does not have its own shape representation. Zone structures may not be hierarchical (in contrary to the spatial structure of a project - see IfcSpatialStructureElement), i.e. one individual IfcSpace may be associated with zero, one, or several IfcZone's. IfcSpace's are grouped into an IfcZone by using the objectified relationship IfcRelAssignsToGroup as specified at the supertype IfcGroup. For example, a zone might be used to represent an apartment as a group of spaces.NOTE \u00a0Certain use cases may restrict the freedom of non hierarchical relationships. In some building service use cases the zone denotes a\u00a0view based delimited volume for the purpose of analysis and calculation. This type of zone cannot overlap with respect to that analysis, but may overlap otherwise.\nHISTORY  New entity in IFC1.0{ .change-ifc2x4}IFC4 CHANGE  The entity is now subtyped from IfcSystem (not its supertype IfcGroup) with upward compatibility for file based exchange.",
        "Psets": {
          "Pset_ProcessCapacity": {
            "Properties": {
              "ProcessCapacity": {
                "type": "integer",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance"
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity."
              }
            }
          },
          "Pset_SpaceFireSafetyRequirements": {
            "Properties": {
              "AirPressurization": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have pressurized air (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRiskFactor": {
                "type": "string",
                "Description": "Fire Risk factor assigned to the space according to local building regulations. It defines the fire risk of the space at several levels of fire hazard."
              },
              "FlammableStorage": {
                "type": "boolean",
                "Description": "Indication whether the space is intended to serve as a storage of flammable material (which is regarded as such by the presiding building code. (TRUE) indicates yes, (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtection": {
                "type": "boolean",
                "Description": "Indication whether this object is sprinkler protected (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtectionAutomatic": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic sprinkler protection (TRUE) or not (FALSE).\nIt should only be given, if the property \"SprinklerProtection\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_SpaceHVACDesign": {
            "Properties": {
              "AirConditioning": {
                "type": "boolean",
                "Description": "Indication whether this space requires air conditioning provided (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "AirConditioningCentral": {
                "type": "boolean",
                "Description": "Indication whether the space  requires a central air conditioning provided (TRUE) or not (FALSE).\nIt should only be given, if the property \"AirConditioning\" is set to TRUE.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "AirHandlingName": {
                "type": "string",
                "Description": "Name of the Air Handling unit or system."
              },
              "DiscontinuedHeating": {
                "type": "boolean",
                "Description": "Indication whether discontinued heating is required/desirable from user/designer view point. (TRUE) if yes, (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HumidityMax": {
                "type": "real",
                "Description": "Maximum allowed humidity."
              },
              "HumidityMin": {
                "type": "real",
                "Description": "Minimum required humidity."
              },
              "HumiditySetPoint": {
                "type": "real",
                "Description": "Required Humidity Set Point."
              },
              "HumiditySummer": {
                "type": "real",
                "Description": "Required humidity in summer."
              },
              "HumidityWinter": {
                "type": "real",
                "Description": "Required humidity in winter."
              },
              "MechanicalVentilation": {
                "type": "boolean",
                "Description": "Mechanical Ventilation",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalVentilationRate": {
                "type": "integer",
                "Description": "Indication of the requirement of a particular mechanical air ventilation rate, given in air changes per hour."
              },
              "NaturalVentilation": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have natural ventilation (TRUE) or mechanical ventilation (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NaturalVentilationRate": {
                "type": "integer",
                "Description": "Indication of the requirement of a particular natural air ventilation rate, given in air changes per hour."
              },
              "TemperatureMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone, that is required from user/designer view point.  If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period."
              },
              "TemperatureMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone, that is required from user/designer view point. If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period."
              },
              "TemperatureSetPoint": {
                "type": "real",
                "Description": "The temperature setpoint range and default setpoint."
              },
              "TemperatureSummerMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling."
              },
              "TemperatureSummerMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling."
              },
              "TemperatureWinterMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating."
              },
              "TemperatureWinterMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating."
              }
            }
          },
          "Pset_SpaceLightingDesign": {
            "Properties": {
              "ArtificialLighting": {
                "type": "boolean",
                "Description": "Indication whether this space  requires artificial lighting (as natural lighting would be not sufficient). (TRUE) indicates yes (FALSE) otherwise.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Illuminance": {
                "type": "real",
                "Description": "Required average illuminance value for this space."
              }
            }
          },
          "Pset_SpaceOccupancyRequirements": {
            "Properties": {
              "AreaPerOccupant": {
                "type": "real",
                "Description": "Design occupancy loading for this type of usage assigned to this space."
              },
              "IsOutlookDesirable": {
                "type": "boolean",
                "Description": "An indication of whether the outlook is desirable (set TRUE) or not (set FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MinimumHeadroom": {
                "type": "real",
                "Description": "Headroom required for the activity assigned to this space."
              },
              "OccupancyNumber": {
                "type": "integer",
                "Description": "Number of people required for the activity assigned to this space."
              },
              "OccupancyNumberPeak": {
                "type": "integer",
                "Description": "Maximal number of people required for the activity assigned to this space in peak time."
              },
              "OccupancyTimePerDay": {
                "type": "real",
                "Description": "The amount of time during the day that the activity is required within this space."
              },
              "OccupancyType": {
                "type": "string",
                "Description": "Occupancy type for this object.\nIt is defined according to the presiding national building code."
              }
            }
          },
          "Pset_ZoneCommon": {
            "Properties": {
              "GrossPlannedArea": {
                "type": "real",
                "Description": "Total planned gross area of the spatial structure element. Used for programming the spatial structure element."
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication that this object is designed to be accessible by the handicapped. Set to (TRUE) if this object is rated as handicap accessible according the local building codes, otherwise (FALSE).\nIt is giving according to the requirements of the national building code.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NetPlannedArea": {
                "type": "real",
                "Description": "Total planned net area of the object. Used for programming the object."
              },
              "PubliclyAccessible": {
                "type": "boolean",
                "Description": "Indication whether this space (in case of e.g., a toilet) is designed to serve as a publicly accessible space, e.g., for a public toilet (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              }
            }
          },
          "Pset_AirSideSystemInformation": {
            "Properties": {
              "AirFlowSensible": {
                "type": "real",
                "Description": ""
              },
              "AirSideSystemDistributionType": {
                "type": "PEnum_AirSideSystemDistributionType",
                "Description": "This enumeration defines the basic types of air side systems (e.g., SingleDuct, DualDuct, Multizone, etc.).",
                "values": [
                  "DUALDUCT",
                  "MULTIZONE",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLEDUCT",
                  "UNSET"
                ]
              },
              "AirSideSystemType": {
                "type": "PEnum_AirSideSystemType",
                "Description": "This enumeration specifies the basic types of possible air side systems (e.g., Constant Volume, Variable Volume, etc.).",
                "values": [
                  "CONSTANTVOLUME",
                  "CONSTANTVOLUMEBYPASS",
                  "CONSTANTVOLUMEMULTIPLEZONEREHEAT",
                  "CONSTANTVOLUMESINGLEZONE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "VARIABLEAIRVOLUME",
                  "VARIABLEAIRVOLUMEDUALCONDUIT",
                  "VARIABLEAIRVOLUMEFANPOWERED",
                  "VARIABLEAIRVOLUMEINDUCTION",
                  "VARIABLEAIRVOLUMEREHEAT",
                  "VARIABLEAIRVOLUMEVARIABLEDIFFUSERS",
                  "VARIABLEAIRVOLUMEVARIABLETEMPERATURE"
                ]
              },
              "ApplianceDiversity": {
                "type": "real",
                "Description": "Diversity of appliance load."
              },
              "CoolingTemperatureDelta": {
                "type": "real",
                "Description": "Cooling temperature difference for calculating space air flow rates."
              },
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "EnergyGainSensible": {
                "type": "real",
                "Description": "The sum of total energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level sensible energy gains."
              },
              "EnergyGainTotal": {
                "type": "real",
                "Description": "The total amount of energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level total energy gains."
              },
              "EnergyLoss": {
                "type": "real",
                "Description": "The sum of energy losses for the spaces served by the system during the peak heating conditions."
              },
              "FanPower": {
                "type": "real",
                "Description": "Fan motor loads contributing to the cooling load."
              },
              "HeatingTemperatureDelta": {
                "type": "real",
                "Description": "Heating temperature difference for calculating space air flow rates."
              },
              "InfiltrationDiversitySummer": {
                "type": "real",
                "Description": "Diversity factor for Summer infiltration."
              },
              "InfiltrationDiversityWinter": {
                "type": "real",
                "Description": "Diversity factor for Winter infiltration."
              },
              "TotalAirFlow": {
                "type": "real",
                "Description": ""
              },
              "Ventilation": {
                "type": "real",
                "Description": "Required outside air ventilation."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcArbitraryClosedProfileDef": {
        "Parent": "IfcProfileDef",
        "Description": "The closed profile IfcArbitraryClosedProfileDef defines an arbitrary two-dimensional profile for the use within the swept surface geometry, the swept area solid or a sectioned spine. It is given by an outer boundary from which the surface or solid can be constructed.HISTORY  New entity in IFC1.5. Entity has been renamed from IfcArbitraryProfileDef in IFC2x.{ .spec-head}\nInformal Propositions:The OuterCurve has to be a closed curve.\nThe OuterCurve shall not intersect.Figure 1 illustrates the arbitrary closed profile definition. The OuterCurve is defined in the underlying coordinate system. The underlying coordinate system is defined by the swept surface or swept area solid that uses the profile definition. It is the xy plane of either:IfcSweptSurface.Position\nIfcSweptAreaSolid.Positionor in case of sectioned spines the xy plane of each list member of IfcSectionedSpine.CrossSectionPositions. The OuterCurve attribute defines a two dimensional closed bounded curve.",
        "Psets": {
          "Pset_ProfileArbitraryDoubleT": {
            "Properties": {
              "FlangeBaseFillet": {
                "type": "real",
                "Description": "Flange base fillet of the profile."
              },
              "FlangeChamfer": {
                "type": "real",
                "Description": "Flange chamfer of the profile."
              },
              "FlangeDepth": {
                "type": "real",
                "Description": "Flange depth of the profile."
              },
              "FlangeDraft": {
                "type": "real",
                "Description": "Flange draft of the profile."
              },
              "FlangeTopFillet": {
                "type": "real",
                "Description": "Flange top fillet of the profile."
              },
              "LeftFlangeWidth": {
                "type": "real",
                "Description": "Left flange width of the profile."
              },
              "OverallDepth": {
                "type": "real",
                "Description": "Overall depth of the profile."
              },
              "OverallWidth": {
                "type": "real",
                "Description": "Overall width of the profile."
              },
              "RightFlangeWidth": {
                "type": "real",
                "Description": "Right flange width of the profile."
              },
              "StemBaseChamfer": {
                "type": "real",
                "Description": "Stem base chamfer of the profile."
              },
              "StemBaseFillet": {
                "type": "real",
                "Description": "Stem base fillet of the profile."
              },
              "StemBaseWidth": {
                "type": "real",
                "Description": "Stem base width of the profile."
              },
              "StemTopChamfer": {
                "type": "real",
                "Description": "Stem top chamfer of the profile."
              },
              "StemTopFillet": {
                "type": "real",
                "Description": "Stem top fillet of the profile."
              },
              "StemTopWidth": {
                "type": "real",
                "Description": "Stem top width of the profile."
              }
            }
          }
        }
      },
      "IfcArbitraryProfileDefWithVoids": {
        "Parent": "IfcArbitraryClosedProfileDef",
        "Description": "The IfcArbitraryProfileDefWithVoids defines an arbitrary closed two-dimensional profile with holes. It is given by an outer boundary and inner boundaries. A common usage of IfcArbitraryProfileDefWithVoids is as the cross section for the creation of swept surfaces or swept solids.HISTORY  New entity in IFC2x.{ .spec-head}\nInformal Propositions:The outer curve and all inner curves shall be closed curves.\nThe outer curve shall enclose all inner curves.\nNo inner curve shall intersect with the outer curve or any other inner curve. That is, no two curves of the profile definition shall have a point or segment in common, taken into account the geometric precision factor of the geometric representation context. In other words, curves must neither cross nor touch each other.\nNo inner curve may enclose another inner curve.Figure 1 illustrates the arbitrary closed profile definition with voids. The OuterCurve, defined at the supertype IfcArbitraryClosedProfileDef and the inner curves are defined in the same underlying coordinate system. The common underlying coordinate system is defined by the swept area solid that uses the profile definition. It is the xy plane of:IfcSweptAreaSolid.Positionor in case of sectioned spines the xy plane of each list member of IfcSectionedSpine.CrossSectionPositions. The OuterCurve attribute defines a two dimensional closed bounded curve, the InnerCurves define a set of two dimensional closed bounded curves.",
        "Psets": {
          "Pset_ProfileArbitraryHollowCore": {
            "Properties": {
              "BaseChamfer": {
                "type": "real",
                "Description": "Base chamfer of the profile."
              },
              "BottomCover": {
                "type": "real",
                "Description": "Bottom cover of the profile."
              },
              "CenterCoreBaseHeight": {
                "type": "real",
                "Description": "Center core base height of the profile."
              },
              "CenterCoreBaseWidth": {
                "type": "real",
                "Description": "Center core base width of the profile."
              },
              "CenterCoreMiddleHeight": {
                "type": "real",
                "Description": "Center core middle height of the profile."
              },
              "CenterCoreSpacing": {
                "type": "real",
                "Description": "Center core spacing of the profile."
              },
              "CenterCoreTopHeight": {
                "type": "real",
                "Description": "Center core top height of the profile."
              },
              "CenterCoreTopWidth": {
                "type": "real",
                "Description": "Center core top width of the profile."
              },
              "CoreBaseHeight": {
                "type": "real",
                "Description": "Core base height of the profile."
              },
              "CoreBaseWidth": {
                "type": "real",
                "Description": "Core base width of the profile."
              },
              "CoreMiddleHeight": {
                "type": "real",
                "Description": "Core middle height of the profile."
              },
              "CoreSpacing": {
                "type": "real",
                "Description": "Core spacing of the profile."
              },
              "CoreTopHeight": {
                "type": "real",
                "Description": "Core top height of the profile."
              },
              "CoreTopWidth": {
                "type": "real",
                "Description": "Core top width of the profile."
              },
              "DraftBaseOffset": {
                "type": "real",
                "Description": "Draft base offset of the profile."
              },
              "DraftSideOffset": {
                "type": "real",
                "Description": "Draft side offset of the profile."
              },
              "EdgeDraft": {
                "type": "real",
                "Description": "Edge draft of the profile."
              },
              "KeyDepth": {
                "type": "real",
                "Description": "Key depth of the profile."
              },
              "KeyHeight": {
                "type": "real",
                "Description": "Key height of the profile."
              },
              "KeyOffset": {
                "type": "real",
                "Description": "Key offset of the profile."
              },
              "NumberOfCores": {
                "type": "integer",
                "Description": "The number of cores."
              },
              "OverallDepth": {
                "type": "real",
                "Description": "Overall depth of the profile."
              },
              "OverallWidth": {
                "type": "real",
                "Description": "Overall width of the profile."
              }
            }
          }
        }
      },
      "IfcProfileDef": {
        "Description": "IfcProfileDef is the supertype of all definitions of standard and arbitrary profiles within IFC. It is used to define a standard set of commonly used section profiles by their parameters or by their explicit curve geometry.Parameterized profiles are 2D primitives, which are used within the industry to describe cross sections by a description of its parameters.\nArbitrary profiles are cross sections defined by an outer boundary as bounded curve, which may also include holes, defined by inner boundaries.\nDerived profiles, based on a transformation of a parent profile, are also part of the profile definitions available.\nIn addition composite profiles can be defined, which include two or more profile definitions to define the resulting profile.HISTORY  New entity in IFC1.5, the capabilities have been extended in IFC2x. Profiles can now support swept surfaces and swept area solids with inner boundaries. It had been renamed from IfcAttDrivenProfileDef.{ .change-ifc2x4}IFC4 CHANGE  Changed from ABSTRACT to non-abstract for uses which do not require an explicitly defined geometry. Added inverse attributes HasProperties and HasExternalReference.Use in material associationBeams, columns, and similarly shaped building elements and their type objects may be associated with a section profile definition, combined with material definition, by means of IfcRelAssociatesMaterial together with IfcMaterialProfileSet and IfcMaterialProfileSetUsage. This way, building elements and element types with same section and material can share a common section profile definition and association.The profile definition in material association is required to be consistent with shape representations of the respective building elements.A higher-level description of spatial alignment of the section profile of a member (such as centered, bottom-left, in the geometric centroid, and more) can be provided within IfcMaterialProfileSetUsage by means of a cardinal point reference. This can be used redundant to geometric data in order to convey design intent.Use in shape modelsProfile definitions are used within the geometry and geometric model resource to create either swept surfaces, swept area solids, or sectioned spines.The purpose of the profile definition within the swept surfaces or swept area solids is to define a uniform cross section being swept:along a line (extrusion) using IfcSurfaceOfLinearExtrusion or IfcExtrudedAreaSolid\nalong a circular arc (revolution) using IfcSurfaceOfRevolution or IfcRevolvedAreaSolid\nalong a directrix lying on a reference surface using IfcSurfaceCurveSweptAreaSolidThe purpose of the profile definition within the sectioned spine is to define a varying cross sections at several positions along a spine curve. The subtype IfcDerivedProfileDef is particularly suited to provide the consecutive profiles to be based on transformations of the start profile and thus maintaining the identity of vertices and edges.NOTE  Subtypes of the IfcProfileDef contain parameterized profiles (as subtypes of IfcParameterizedProfileDef) which establish their own 2D position coordinate system, profiles given by explicit curve geometry (either open or closed profiles) and two special types for composite profiles and derived profiles, based on a 2D Cartesian transformation.An IfcProfileDef is treated as bounded area if it is used within swept area solids. In this case, the inside of the profile is part of the profile. The attribute ProfileType is set to AREA. An IfcProfileDef is treated as a curve if it is used within swept surfaces. In this case, the inside of the profile (if the curve is closed) is not part of the profile. The attribute ProfileType is set to CURVE.Figure 1 and Figure 2 illustrates use of parameterized profiles within a swept area solid.Figure 1 \u2014 Example of standard profile definitionThe IfcProfileDef is defined within the underlying coordinate system which is defined by the swept surface or swept area solid that uses the profile definition. It is the xy plane:of IfcSweptSurface.Position or\nof IfcSweptAreaSolid.Position or\nof each list member of IfcSectionedSpine.CrossSectionPositions.In Figure 1 to the left, the z axis of the position coordinate system points outwards of the drawing plane.NOTE The subtype IfcParameterizedProfileDef optionally provides an additional 2D position coordinate system relative to the underlying coordinate system of the IfcProfileDef.Figure 2 \u2014 Use within swept area solidsIn the later use of the IfcProfileDef within the swept surface or swept area solid,  e.g. the IfcExtrudedAreaSolid (here used as an example), the profile boundaries (here based on the 2D position coordinate system of IfcParameterizedProfileDef) are placed within the xy plane of the 3D position coordinate system of the swept surface or swept area solid.The profile is inserted into the underlying coordinate system either:directly in case of using IfcArbitraryClosedProfileDef and IfcArbitraryOpenProfileDef,\nthrough an intermediate position coordinate system in case of using IfcParameterizedProfileDef.\nthrough an 2D Cartesian transformation operator (applied directly to the curve position when using arbitrary profile definitions, or applied to the position coordinate system when using parameterized profile definitions) in case of using IfcDerivedProfileDef.\nwhen using IfcCompositeProfileDef the insertion depends on the subtype of the included sub-profiles.Profile typesResults of the different usage of the ProfileType attribute are demonstrated here. The ProfileType defines whether the inside (the bounded area) is part of the profile definition (Area) or not (Curve). Figure 3 and Figure 4 illustrates the resulting area or curve depending on ProfileType.Figure 3 \u2014 AREA profile type without thicknessFigure 4 \u2014 CURVE profile type with a closed curveProfile specification by external referenceIf the profile is standardized by a norm or a catalogue, a reference to this norm or catalogue should be provided by means of HasExternalReference. This inverse relationship is used to associate an IfcExternalReference (notably IfcClassificationReference or IfcLibraryReference) with the profile.IfcClassificationReference is used to refer to a profile norm (a common standard or manufacturer's standard). In this case,IfcClassificationReference.ItemReference contains the formal profile designation from the norm. (On the other hand, IfcProfileDef.ProfileName contains a displayable name which may not necessarily be the same as the formal designation.)\nIfcClassificationReference.Name carries the short name of the profile norm.\nOptionally, the norm can be further described by IfcClassificationReference.ReferencedSource.IfcLibraryReference is used to refer to a library which contains profile definitions. In this case,IfcLibraryReference.ItemReference contains the identifier of the profile within the library and is meant to be machine-readable (in contrast to IfcProfileDef.ProfileName which should be human-readable).\nIfcLibraryReference.Location and .Name or .ReferencedLibrary further describe the library.If an external reference is provided, sending systems shall ensure that the shape of the profile definition object agrees with the definitions in the referenced classification or library.Direct instances of IfcProfileDefUsually, only subtypes of IfcProfileDef should be instantiated. In some special cases, e.g. if the profile object is used for purposes other than geometric models (e.g. for structural analysis models), it may be possible to directly instantiate IfcProfileDef and further specify the profile only by external reference or by profile properties. The latter are tracked by the inverse attribute HasProperties.",
        "Psets": {
          "Pset_ProfileMechanical": {
            "Properties": {
              "CentreOfGravityInX": {
                "type": "real",
                "Description": "Location of the profile's centre of gravity (geometric centroid), measured along xp."
              },
              "CentreOfGravityInY": {
                "type": "real",
                "Description": "Location of the profile's centre of gravity (geometric centroid), measured along yp."
              },
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "MassPerLength": {
                "type": "real",
                "Description": "Mass per length, i.e. mass of a beam with a unit length of extrusion. For example measured in kg/m."
              },
              "MaximumPlateThickness": {
                "type": "real",
                "Description": "This value may be needed for stress analysis and to handle buckling problems. It can also be derived from the given profile geometry or classification and therefore it is only an optional feature allowing for an explicit description. For example measured in mm."
              },
              "MaximumSectionModulusY": {
                "type": "real",
                "Description": "Bending resistance about the ys axis at the point with maximum zs ordinate. For example measured in mm\u00b3."
              },
              "MaximumSectionModulusZ": {
                "type": "real",
                "Description": "Bending resistance about the zs axis at the point with maximum ys ordinate. For example measured in mm\u00b3."
              },
              "MinimumPlateThickness": {
                "type": "real",
                "Description": "This value may be needed for stress analysis and to handle buckling problems. It can also be derived from the given profile geometry or classification and therefore it is only an optional feature allowing for an explicit description. For example measured in mm."
              },
              "MinimumSectionModulusY": {
                "type": "real",
                "Description": "Bending resistance about the ys axis at the point with minimum zs ordinate. For example measured in mm\u00b3."
              },
              "MinimumSectionModulusZ": {
                "type": "real",
                "Description": "Bending resistance about the zs axis at the point with minimum ys ordinate. For example measured in mm\u00b3."
              },
              "MomentOfInertiaY": {
                "type": "real",
                "Description": "Moment of inertia about ys (second moment of area, about ys). For example measured in mm4."
              },
              "MomentOfInertiaYZ": {
                "type": "real",
                "Description": "Moment of inertia about ys and zs (product moment of area). For example measured in mm4."
              },
              "MomentOfInertiaZ": {
                "type": "real",
                "Description": "Moment of inertia about zs (second moment of area, about zs). For example measured in mm4"
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the object."
              },
              "PlasticShapeFactorY": {
                "type": "real",
                "Description": "Ratio of plastic versus elastic bending moment capacity about the section analysis axis ys. A dimensionless value."
              },
              "PlasticShapeFactorZ": {
                "type": "real",
                "Description": "Ratio of plastic versus elastic bending moment capacity about the section analysis axis zs. A dimensionless value."
              },
              "ShearAreaY": {
                "type": "real",
                "Description": "Area of the profile for calculating the shear stress due to shear force parallel to the section analysis axis ys. For example measured in mm\u00b2. If given, the shear area ys shall be non-negative."
              },
              "ShearAreaZ": {
                "type": "real",
                "Description": "Area of the profile for calculating the shear stress due to shear force parallel to the section analysis axis zs. For example measured in mm\u00b2. If given, the shear area zs shall be non-negative."
              },
              "ShearCentreY": {
                "type": "real",
                "Description": "Location of the profile's shear centre, measured along ys."
              },
              "ShearCentreZ": {
                "type": "real",
                "Description": "Location of the profile's shear centre, measured along zs."
              },
              "ShearDeformationAreaY": {
                "type": "real",
                "Description": "Area of the profile for calculating the shear deformation due to a shear force parallel to ys. For example measured in mm\u00b2. If given, the shear deformation area ys shall be non-negative."
              },
              "ShearDeformationAreaZ": {
                "type": "real",
                "Description": "Area of the profile for calculating the shear deformation due to a shear force parallel to zs. For example measured in mm\u00b2. If given, the shear deformation area zs shall be non-negative."
              },
              "TorsionalConstantX": {
                "type": "real",
                "Description": "Torsional constant about xs. For example measured in mm4."
              },
              "TorsionalSectionModulus": {
                "type": "real",
                "Description": "Torsional resistance (about xs). For example measured in mm\u00b3."
              },
              "WarpingConstant": {
                "type": "real",
                "Description": "Warping constant of the profile for torsional action. For example measured in mm6."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "ProfileName": {
                "type": "string",
                "Description": null
              },
              "ProfileType": {
                "values": [
                  "AREA",
                  "CURVE"
                ],
                "type": "IfcProfileTypeEnum",
                "Description": null
              }
            }
          }
        }
      },
      "IfcRail": {
        "Parent": "IfcBuiltElement",
        "Description": "A rail is a predominately linear built element that has a special section profile. Rail is distinctive from built elements with similar geometric shapes (e.g. beam, member) that its major function is to ensure guidance of moving for vehicles or other kinds of machineries.",
        "Psets": {
          "Qto_RailBaseQuantities": {
            "Properties": {
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          }
        }
      },
      "IfcRailType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The element type IfcRailType defines commonly shared information for occurrences of rails. The set of shared information may include:\n* common properties within shared property sets\n* common material information\n* common profile definitions\n* common shape representationsIt is used to define a rail specification, or rail style (the specific product information that is common to all occurrences of that rail type). Rail types may be exchanged without being already assigned to occurrences.\nOccurrences of the IfcRailType are represented by instances of IfcRail.",
        "Psets": {
          "Pset_RailTypeBlade": {
            "Properties": {
              "BladeRadius": {
                "type": "real",
                "Description": "The radius of the blade bend defined as design parameter."
              },
              "IsArticulatedBlade": {
                "type": "boolean",
                "Description": "Indicates whether the blade is articulated or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsFallbackBlade": {
                "type": "boolean",
                "Description": "Indicates whether the blade always returns to the same position as a trailable turnout or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Pset_RailTypeCheckRail": {
            "Properties": {
              "CheckRailType": {
                "type": "PEnum_CheckRailType",
                "Description": "Type of the check rail. Check rail types enumerated in this property are defined based on EN 13674.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "TYPE_33C1",
                  "TYPE_40C1",
                  "TYPE_47C1",
                  "TYPE_CR3_60U",
                  "TYPE_R260",
                  "TYPE_R320CR",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_RailTypeGuardRail": {
            "Properties": {
              "GuardRailConnection": {
                "type": "PEnum_GuardRailConnection",
                "Description": "Indicates how the guard rail is connected along its length, when the fasteners are not explicitly modelled.",
                "values": [
                  "FISHPLATE",
                  "NONE",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET",
                  "WELD"
                ]
              },
              "GuardRailType": {
                "type": "PEnum_GuardRailType",
                "Description": "Type of the guard rail.",
                "values": [
                  "GUARDRAILANDSPOTSLEEPERS",
                  "GUARDRAILSONLY",
                  "NOTKNOWN",
                  "OTHER",
                  "SPOTSLEEPERSONLY",
                  "UNSET"
                ]
              },
              "PositionInTrack": {
                "type": "PEnum_RelativePosition",
                "Description": "Indicates the relative position of the element in track, which lies to the left or right as facing in the direction of increasing stationing values.",
                "values": [
                  "LEFT",
                  "MIDDLE",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHT",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_RailTypeRail": {
            "Properties": {
              "DrillOnRail": {
                "type": "PEnum_DrillOnRail",
                "Description": "Indicates if the manufactured rail is drilled at its extremities or not. It can have holes on one, both or none of its extremities.",
                "values": [
                  "BOTHENDS",
                  "NONE",
                  "NOTKNOWN",
                  "ONEEND",
                  "OTHER",
                  "UNSET"
                ]
              },
              "IsStainless": {
                "type": "boolean",
                "Description": "Indicates whether the rail is stainless or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MinimumTensileStrength": {
                "type": "real",
                "Description": "Indicates the minimum tensile strength."
              },
              "PositionInTrack": {
                "type": "PEnum_RelativePosition",
                "Description": "Indicates the relative position of the element in track, which lies to the left or right as facing in the direction of increasing stationing values.",
                "values": [
                  "LEFT",
                  "MIDDLE",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHT",
                  "UNSET"
                ]
              },
              "RailCondition": {
                "type": "PEnum_RailCondition",
                "Description": "Assessment of the condition of the rail at point of installation.",
                "values": [
                  "NEWRAIL",
                  "NOTKNOWN",
                  "OTHER",
                  "REGENERATEDRAIL",
                  "REUSEDRAIL",
                  "UNSET"
                ]
              },
              "RailDeliveryState": {
                "type": "PEnum_RailDeliveryState",
                "Description": "The delivery state of rail, which indicates the final treatment at the end in manufacturing.",
                "values": [
                  "HEATTREATMENT",
                  "HOTROLLING",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "RailElementaryLength": {
                "type": "PEnum_RailElementaryLength",
                "Description": "The standardised length of rail supplied from the manufacturer.",
                "values": [
                  "100M",
                  "108M",
                  "120M",
                  "12M",
                  "144M",
                  "18M",
                  "24M",
                  "25M",
                  "27M",
                  "30M",
                  "36M",
                  "400M",
                  "48M",
                  "54M",
                  "60M",
                  "6M",
                  "72M",
                  "75M",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_RailTypeStockRail": {
            "Properties": {
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "StockRailRadius": {
                "type": "real",
                "Description": "The radius of the stock rail bend defined as design parameter."
              }
            }
          },
          "Qto_RailBaseQuantities": {
            "Properties": {
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          }
        }
      },
      "IfcRailway": {
        "Parent": "IfcFacility",
        "Description": "An IfcRailway is a spatial structure element as a route from one location to another for guided passage of wheeled vehicles on rails. An IfcRailway acts as a basic spatial structure element that supports to break down a railway project into manageable parts.\nNote: Definition according to ISO 6706: 2017: national or regional transport system for guided passage of wheeled vehicles on rails."
      },
      "IfcRailwayPart": {
        "Parent": "IfcFacilityPart",
        "Description": "Part of a railway."
      },
      "IfcTrackElement": {
        "Parent": "IfcBuiltElement",
        "Description": "A track element is a built element used specifically in the track domain in railway."
      },
      "IfcTrackElementType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The element type IfcTrackElementType defines commonly shared information for occurrences of track elements. The set of shared information may include:\n* common properties within shared property sets\n* common material information\n* common profile definitions\n* common shape representationsIt is used to define a track element specification (the specific product information that is common to all occurrences of that track element type). Track element types may be exchanged without being already assigned to occurrences.\nOccurrences of the IfcTrackElementType are represented by instances of IfcTrackElement.",
        "Psets": {
          "Pset_TrackElementTypeDerailer": {
            "Properties": {
              "AppliedLineLoad": {
                "type": "real",
                "Description": "The load of line where the derailer is installed. It is a design parameter and is defined by mass per length."
              },
              "DerailmentHeight": {
                "type": "real",
                "Description": "Height of derailment block when derailer in protection state."
              },
              "DerailmentMaximumSpeedLimit": {
                "type": "real",
                "Description": "Indicates the maximum allowable train speed for the derailer."
              },
              "DerailmentWheelDiameter": {
                "type": "real",
                "Description": "Indicates the wheel diameter requirement for the derailer."
              }
            }
          },
          "Pset_TrackElementTypeSleeper": {
            "Properties": {
              "FasteningType": {
                "type": "string",
                "Description": "Indicates the type of fastening used to generate traction between the foot of the rail and the sleeper. It depends on but is not uniquely identified by the type of sleeper. This property shall only be used when sleeper fastening is not modelled as an element."
              },
              "HollowSleeperUsage": {
                "type": "string",
                "Description": "Indicates the purpose of using hollow sleeper. The possible value can be eg. cable trenching, protection of turnout mechanism, etc."
              },
              "InstalledCondition": {
                "type": "PEnum_InstalledCondition",
                "Description": "Assessment of the condition of the element at point of installation.",
                "values": [
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "REGENERATED",
                  "REUSED",
                  "UNSET"
                ]
              },
              "IsElectricallyInsulated": {
                "type": "boolean",
                "Description": "Indicates whether the sleeper is electrically insulated due to its design or the running rails or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsHollowSleeper": {
                "type": "boolean",
                "Description": "Indicates whether the sleeper is hollowed or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NumberOfTrackCenters": {
                "type": "integer",
                "Description": "Indicates the number of track centers running over the sleepers."
              },
              "SleeperType": {
                "type": "PEnum_SleeperType",
                "Description": "Indicates the sleeper type.",
                "values": [
                  "COMPOSITESLEEPER",
                  "CONCRETESLEEPER",
                  "INSULATEDSTEELSLEEPER",
                  "MONOBLOCKCONCRETESLEEPER",
                  "NOTINSULATEDSTEELSLEEPER",
                  "NOTKNOWN",
                  "OTHER",
                  "TWOBLOCKCONCRETESLEEPER",
                  "UNSET",
                  "WOODENSLEEPER"
                ]
              }
            }
          },
          "Qto_SleeperBaseQuantities": {
            "Properties": {
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcKerb": {
        "Parent": "IfcBuiltElement",
        "Description": "A border of stone, concrete or other rigid material formed at the edge of the carriageway or footway.NOTE  Definition from ISO 6707-1: border, usually upstanding, at the edge of a carriageway, hard strip, hard shoulder, or footway, (Curb, US).\nNOTE  Definition from PIARC: Unit intended to separate surfacings of different surfaces and to provide physical delineation or containment [CEN].",
        "Psets": {
          "Pset_KerbCommon": {
            "Properties": {
              "CombinedKerbGutter": {
                "type": "boolean",
                "Description": "Indicating  the use of a combined kerb and gutter.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Upstand": {
                "type": "real",
                "Description": "The height difference between the two separated surfaces."
              }
            }
          },
          "Pset_KerbStone": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "StoneFinishes": {
                "type": "string",
                "Description": "Eg. 'Polished', 'Bush Hammered', 'Split', 'Sawn', 'Flamed'"
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_OnSiteCastKerb": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Pset_PrecastKerbStone": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_RadiiKerbStone": {
            "Properties": {
              "CurveShape": {
                "type": "PEnum_CurveShapeEnum",
                "Description": "Shape according to CurveShapeEnum",
                "values": [
                  "EXTERNAL",
                  "INTERNAL"
                ]
              },
              "Radius": {
                "type": "real",
                "Description": "The radius of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Qto_KerbBaseQuantities": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Mountable": {
                "type": "boolean",
                "Description": null,
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcKerbType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The IfcKerbType provides the type information for the IfcKerb element.\nAn IfcKerb is a border of stone, concrete or other rigid material formed at the edge of the carriageway or footway.",
        "Psets": {
          "Pset_KerbCommon": {
            "Properties": {
              "CombinedKerbGutter": {
                "type": "boolean",
                "Description": "Indicating  the use of a combined kerb and gutter.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Upstand": {
                "type": "real",
                "Description": "The height difference between the two separated surfaces."
              }
            }
          },
          "Pset_KerbStone": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "StoneFinishes": {
                "type": "string",
                "Description": "Eg. 'Polished', 'Bush Hammered', 'Split', 'Sawn', 'Flamed'"
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_OnSiteCastKerb": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Pset_PrecastKerbStone": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_RadiiKerbStone": {
            "Properties": {
              "CurveShape": {
                "type": "PEnum_CurveShapeEnum",
                "Description": "Shape according to CurveShapeEnum",
                "values": [
                  "EXTERNAL",
                  "INTERNAL"
                ]
              },
              "Radius": {
                "type": "real",
                "Description": "The radius of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Qto_KerbBaseQuantities": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcRoad": {
        "Parent": "IfcFacility",
        "Description": "A route built on land to allow travel from one location to another, including highways, streets, cycle and foot paths, but excluding railways. As a type of Facility, Road provides the basic element in the project structure hierarchy for the components of a road project (i.e. any undertaking such as design, construction or maintenance).NOTE  Definition from ISO 6707-1: Way mainly for vehicles.\nNOTE  Definition from PIARC: Line of communication (travelled way) using a stabilized base other than rails or air strips, primarily for the use of road motor vehicles running on their own wheel.",
        "Psets": {
          "Pset_RoadDesignCriteriaCommon": {
            "Properties": {
              "Crossfall": {
                "type": "real",
                "Description": "Specifies the nominal crossfall as a ratio measure (slope) at the location of the event."
              },
              "DesignSpeed": {
                "type": "real",
                "Description": "Speed selected in designing a new road or in modernizing, strengthening or rehabilitating an existing road section, to determine the various geometric design features of the carriageway that allow a car to travel safely at that speed, under normal road surface and weather conditions.NOTE  Definition according to PIARC.\nNOTE  The design speed is not constant, but may vary depending on the conditions of relief (plain, hill, mountain)."
              },
              "DesignTrafficVolume": {
                "type": "integer",
                "Description": "The traffic volume used for planning and design purposes specified as the number of vehicles per day . Typically given as AADT - Average Annual Daily Traffic"
              },
              "DesignVehicleClass": {
                "type": "string",
                "Description": "A vehicle designator with content according to local standards."
              },
              "LaneWidth": {
                "type": "real",
                "Description": "Standard nominal width of one trough lane."
              },
              "NumberOfThroughLanes": {
                "type": "integer",
                "Description": "The total number of through lanes on the segment. This excludes auxiliary lanes, parking and turning lanes, acceleration/deceleration lanes, toll collection lanes, shoulders etc."
              },
              "RoadDesignClass": {
                "type": "string",
                "Description": "A road design class designator with content according to local standards."
              }
            }
          }
        }
      },
      "IfcRoadPart": {
        "Parent": "IfcFacilityPart",
        "Description": "Part of a road."
      },
      "IfcBeam": {
        "Parent": "IfcBuiltElement",
        "Description": "An IfcBeam is typically a horizontal, or nearly horizontal, structural member that is capable of withstanding load primarily by resisting bending. It may also represent such a member from an architectural point of view. It is not required to be load bearing.There are two main representations for beam occurrences:IfcBeam with IfcMaterialProfileSetUsage is used for all occurrences of beams, that have a profile defined that is swept along a directrix. The profile might change uniformly by a taper definition along the directrix. The profile parameter and its cardinal point of insertion can be fully described by the IfcMaterialProfileSetUsage. These beams are always represented geometricly by an 'Axis' and a 'SweptSolid' or 'AdvancedSweptSolid' shape representation (or by a 'Clipping' geometry based on the swept solid), if a 3D geometric representation is assigned.\nIfcBeam without IfcMaterialProfileSetUsage is used for all other occurrences of beams, particularly for beams with non-uniformly changing profile sizes along the sweep, or beams having only 'AdvancedBrep', 'Brep', or 'SurfaceModel' geometry, if a more parametric representation is not intended.For any other longitudinal structural member, not constrained to be predominately horizontal nor vertical, or where this semantic information is irrelevant, the entity IfcMember should be used.REFERENCE  Definition according to ISO 6707-1: structural member for carrying load(s) between or beyond points of support, usually narrow in relation to its length and horizontal or nearly so.\nNOTE  The entity IfcBeamStandardCase has been deprecated, IfcBeam with IfcMaterialProfileSetUsage is used instead.\nNOTE  The representation of load-bearing beams in a structural analysis model is provided by subtypes of IfcStructuralMember (with IfcStructuralCurveMember being mostly applicable) as part of an IfcStructuralAnalysisModel. The camber of a beam may be defined by assigning an IfcStructuralCurveMember with displacement coordinates. Multiple sets of camber ordinates may be provided that are qualified by the particular load case, where full dead load would typically be used for fabrication, and other scenarios used for other loading conditions such as during construction.\nHISTORY  New entity in IFC1.0",
        "Psets": {
          "Pset_BeamCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Roll": {
                "type": "real",
                "Description": "Rotation against the longitudinal axis."
              },
              "Slope": {
                "type": "real",
                "Description": "Slope angle - relative to horizontal (0.0 degrees).The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only."
              },
              "Span": {
                "type": "real",
                "Description": "Clear span for this object.The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence. For geometry editing applications, like CAD: this value should be write-only."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_BeamBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetSurfaceArea": {
                "type": "real",
                "Description": "Net surface area of the object, normally generated as perimeter * length + 2 * cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfBeam": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SpacingBarPitch": {
                "type": "real",
                "Description": "The pitch length of the spacing bar."
              },
              "StirrupBarPitch": {
                "type": "real",
                "Description": "The pitch length of the stirrup bar."
              }
            }
          }
        }
      },
      "IfcBeamType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The element type IfcBeamType defines commonly shared information for occurrences of beams. The set of shared information may include:common properties within shared property sets\ncommon material information\ncommon profile definitions\ncommon shape representationsIt is used to define a beam specification, or beam style (the specific product information that is common to all occurrences of that beam type). Beam types may be exchanged without being already assigned to occurrences.Occurrences of the IfcBeamType within structural analysis models are represented by instances of IfcStructuralCurveMember, or its applicable subtypes.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_BeamCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Roll": {
                "type": "real",
                "Description": "Rotation against the longitudinal axis."
              },
              "Slope": {
                "type": "real",
                "Description": "Slope angle - relative to horizontal (0.0 degrees).The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only."
              },
              "Span": {
                "type": "real",
                "Description": "Clear span for this object.The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence. For geometry editing applications, like CAD: this value should be write-only."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_BeamBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetSurfaceArea": {
                "type": "real",
                "Description": "Net surface area of the object, normally generated as perimeter * length + 2 * cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfBeam": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SpacingBarPitch": {
                "type": "real",
                "Description": "The pitch length of the spacing bar."
              },
              "StirrupBarPitch": {
                "type": "real",
                "Description": "The pitch length of the stirrup bar."
              }
            }
          }
        }
      },
      "IfcBearing": {
        "Parent": "IfcBuiltElement",
        "Description": "Type of building element that is usually used to transmit loads from superstructure to substructure, and usually allowing movement (displacement or rotation) in one or more degrees of freedom. It is typically a mechanical component procured as a whole and installed on site, but in simple cases it may be built on site (composed of other building elements, element components, etc.).NOTE  The sliding and roller materials are to be assigned to the bearing with the Material Constituent Set concept.\nNOTE  The displacements and rotations accommodated can be defined in the Pset_BearingCommon property set."
      },
      "IfcBuildingElementProxy": {
        "Parent": "IfcBuiltElement",
        "Description": "The IfcBuildingElementProxy is a proxy definition that provides the same functionality as subtypes of IfcBuildingElement, but without having a predefined meaning of the special type of building element, it represents.Proxies can also be used as spatial place holders or provisions, that are later replaced by special types of elements.One use of the proxy object is a provision for voids, i.e. where a particular volume of space is requested by an engineering function that might later be accepted or rejected. If accepted it is transformed into a void within a building element, like a wall opening, or a slab opening. The provision for voids is exchanged as an IfcBuildingElementProxy with the PredefinedType = ProvisionForVoid. Such proxy shall have a swept solid geometry, where the profile of the swept solid lies on/near the surface of the referred building element and the extrusion depths is equal to or bigger then (in case of round or otherwise irregular element shape) the thickness of the building element. The appropriate property set should be attached.In addition to the provision for voids, the building element proxy can also represent a provision for space, often the necessary space allocation for mechanical equipment that will be determined in a later design phase. The provision for space is exchanged as an IfcBuildingElementProxy with the PredefinedType = ProvisionForSpace.Other usages of IfcBuildingElementProxy include:The IfcBuildingElementProxy can be used to exchange special types of building elements for which the current specification does not yet provide a semantic definition.\nThe IfcBuildingElementProxy can also be used to represent building elements for which the participating applications can not provide a semantic definition.HISTORY  New entity in IFC2x.",
        "Psets": {
          "Pset_BuiltElementProxyCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_BuildingElementProxyQuantities": {
            "Properties": {
              "NetSurfaceArea": {
                "type": "real",
                "Description": "Net surface area of the object, normally generated as perimeter * length + 2 * cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcBuildingElementProxyType": {
        "Parent": "IfcBuiltElementType",
        "Description": "IfcBuildingElementProxyType defines a list of commonly shared property set definitions of a building element proxy and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is common to all occurrences of that product type).NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.A building element proxy type is used to define the common properties of a certain type of a building element proxy that may be applied to many instances of that\u00a0type to assign a specific style. Building element proxy types\u00a0may be exchanged without being already assigned to occurrences.NOTE  Although an building element proxy does not have a predefined ontological meaning the provision of a type may be helpful in sharing information among multiple occurrences. Applications that provide type information for element types not yet included in the current IFC specification can use the IfcBuildingElementProxyType to exchange such types.The occurrences of the IfcBuildingElementProxyType are represented by instances of IfcBuildingElementProxy.HISTORY  New entity in IFC2x3.",
        "Psets": {
          "Pset_BuiltElementProxyCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_BuildingElementProxyQuantities": {
            "Properties": {
              "NetSurfaceArea": {
                "type": "real",
                "Description": "Net surface area of the object, normally generated as perimeter * length + 2 * cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcBuildingSystem": {
        "Parent": "IfcSystem",
        "Description": "A building system is a group by which building elements are grouped according to a common function within the facility.The group IfcBuildingSystem defines the occurrence of a specialized system for use within the context of a building and finishing fabric. Important functionalities for the description of a building system are derived from supertypes:From IfcSystem it inherits the ability to couple the building system via IfcRelServicesBuildings to one or more IfcSpatialElement subtypes as necessary.\nFrom IfcGroup it inherits the inverse attribute IsGroupedBy, pointing to the relationship class IfcRelAssignsToGroup. This allows to group building elements (instances of IfcBuildingElement subtypes, IfcFurnishingElement subtype, IfcElementAssembly and IfcTransportElement).\nFrom IfcObjectDefinition it inherits the inverse attribute IsDecomposedBy pointing to the relationship class IfcRelAggregates. It provides the hierarchy between the separate (partial) building systems.HISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_BuildingSystemCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcChimney": {
        "Parent": "IfcBuiltElement",
        "Description": "Chimneys are typically vertical, or as near as vertical, parts of the construction of a building and part of the building fabric. Often constructed by pre-cast or insitu concrete, today seldom by bricks.{ .extDef}NOTE  Definition according to ISO 6707-1: construction containing one or more flues.\nFlue: Duct designed to convey the products of combustion to the open air.\nChimney stack: Part of the chimney that projects above a roof.\nHISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_ChimneyCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NumberOfDrafts": {
                "type": "integer",
                "Description": "Number of the chimney drafts, continuous holes in the chimney through which the air passes, within the single chimney."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_ChimneyBaseQuantities": {
            "Properties": {
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcChimneyType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The building element type IfcChimneyType defines commonly shared information for occurrences of chimneys. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a chimney type specification indicating the specific product information that is common to all occurrences of that product type. The IfcChimneyType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcChimneyType are represented by instances of IfcChimney. Refer to the documentation at IfcChimney for supported property sets, materials, and composition.HISTORY  New entity in IFC4",
        "Psets": {
          "Pset_ChimneyCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NumberOfDrafts": {
                "type": "integer",
                "Description": "Number of the chimney drafts, continuous holes in the chimney through which the air passes, within the single chimney."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_ChimneyBaseQuantities": {
            "Properties": {
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcColumn": {
        "Parent": "IfcBuiltElement",
        "Description": "An IfcColumn is a vertical structural or architectural member which often is aligned with a structural grid intersection. In most cases it represents a vertical, or nearly vertical, structural member that transmits, through compression, the weight of the structure above to other structural elements below. It may also represent such a member from an architectural point of view in which case it may represent a non load bearing element. Whether it is a structural load bearing element or a non-load bearing element is determined by the Pset_ColumnCommon.LoadBearing property.There are two main representations for column occurrences:IfcColumn with IfcMaterialProfileSetUsage is used for all occurrences of columns, that have a profile defined that is swept along a directrix. The profile might change uniformly by a taper definition along the directrix. The profile parameter and its cardinal point of insertion can be fully described by the IfcMaterialProfileSetUsage. These columns are always represented geometricly by an 'Axis' and a 'SweptSolid' or 'AdvancedSweptSolid' shape representation (or by a 'Clipping' geometry based on the swept solid), if a 3D geometric representation is assigned.\nIfcColumn is used for all other occurrences of columns, particularly for columns with changing profile sizes along the extrusion, or columns defined by non-linear extrusion, or columns having only 'Brep', or 'SurfaceModel' geometry, if a more parametric representation is not intended.For any longitudial structural member, not constrained to be predominately horizontal nor vertical, or where this semantic information is irrelevant, the entity IfcMember exists.REFERENCE  Definition according to ISO 6707-1 structural member of slender form, usually vertical, that transmits to its base the forces, primarily in compression, that are applied to it.\nNOTE  The entity IfcColumnStandardCase has been deprecated, IfcColumn with IfcMaterialProfileSetUsage is used instead.\nNOTE  The representation of a column in a structural analysis model is provided by IfcStructuralCurveMember being part of an IfcStructuralAnalysisModel.\nHISTORY  New entity in IFC1.0",
        "Psets": {
          "Pset_ColumnCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Roll": {
                "type": "real",
                "Description": "Rotation against the longitudinal axis."
              },
              "Slope": {
                "type": "real",
                "Description": "Slope angle - relative to horizontal (0.0 degrees).The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_ColumnBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetSurfaceArea": {
                "type": "real",
                "Description": "Net surface area of the object, normally generated as perimeter * length + 2 * cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfColumn": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "HoopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the hoop bar."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "ReinforcementBarType": {
                "type": "PEnum_ReinforcementBarType",
                "Description": "Defines the type of the reinforcement bar.",
                "values": [
                  "NOTDEFINED",
                  "OTHER",
                  "RING",
                  "SPIRAL",
                  "USERDEFINED"
                ]
              },
              "XDirectionTieHoopBarPitch": {
                "type": "real",
                "Description": "The X direction pitch length of the tie hoop."
              },
              "XDirectionTieHoopCount": {
                "type": "integer",
                "Description": "The number of bars with X direction tie hoop bars."
              },
              "YDirectionTieHoopBarPitch": {
                "type": "real",
                "Description": "The Y direction pitch length of the tie hoop."
              },
              "YDirectionTieHoopCount": {
                "type": "integer",
                "Description": "The number of bars with Y direction tie hoop bars."
              }
            }
          }
        }
      },
      "IfcColumnType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The element type IfcColumnType defines commonly shared information for occurrences of columns. The set of shared information may include:common properties within shared property sets\ncommon material information\ncommon profile definitions\ncommon shape representationsIt is used to define a column specification, or column style (i.e. the specific product information that is common to all occurrences of that column type). Column types may be exchanged without being already assigned to occurrences.Occurrences of the IfcColumnType within structural analysis models are represented by instances of IfcStructuralCurveMember, or its applicable subtypes.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_ColumnCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Roll": {
                "type": "real",
                "Description": "Rotation against the longitudinal axis."
              },
              "Slope": {
                "type": "real",
                "Description": "Slope angle - relative to horizontal (0.0 degrees).The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_ColumnBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetSurfaceArea": {
                "type": "real",
                "Description": "Net surface area of the object, normally generated as perimeter * length + 2 * cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfColumn": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "HoopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the hoop bar."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "ReinforcementBarType": {
                "type": "PEnum_ReinforcementBarType",
                "Description": "Defines the type of the reinforcement bar.",
                "values": [
                  "NOTDEFINED",
                  "OTHER",
                  "RING",
                  "SPIRAL",
                  "USERDEFINED"
                ]
              },
              "XDirectionTieHoopBarPitch": {
                "type": "real",
                "Description": "The X direction pitch length of the tie hoop."
              },
              "XDirectionTieHoopCount": {
                "type": "integer",
                "Description": "The number of bars with X direction tie hoop bars."
              },
              "YDirectionTieHoopBarPitch": {
                "type": "real",
                "Description": "The Y direction pitch length of the tie hoop."
              },
              "YDirectionTieHoopCount": {
                "type": "integer",
                "Description": "The number of bars with Y direction tie hoop bars."
              }
            }
          }
        }
      },
      "IfcCovering": {
        "Parent": "IfcBuiltElement",
        "Description": "A covering is an element which covers some part of another element and is fully dependent on that other element. The IfcCovering defines the occurrence of a covering type, that (if given) is expressed by the IfcCoveringType.{ .extDef}NOTE  Definition according to ISO ISO 6707-1: final coverings and treatments of surfaces and their intersections.Coverings are elements with relationships to the covered element and the space on the other side, they may contain openings, assigned by IfcRelVoidsElement, material information, assigned by IfcRelAssociatesMaterial, and others.EXAMPLE  Coverings include wall claddings, floorings, suspended ceilings, moldings and skirting boards.\nNOTE  A more basic information about claddings, floorings, and ceilings of a space can be attached to IfcSpace's using the Pset_SpaceCommon properties. Then only a name can be provided and the covering quantities would be interpreted from the space quantities.Coverings can be assigned toa space represented by IfcSpace\nusing the inverse relationship CoversSpaces pointing to IfcRelCoversSpaces. The space is then accessible via IfcRelCoversSpaces.RelatedSpace. It defines to which space a covering is facing towards.\n\n\na space boundary represented by IfcRelSpaceBoundary\nusing the inverse relationship ProvidesBoundaries pointing to IfcRelSpaceBoundary. The space is then accessible via IfcRelSpaceBoundary.RelatingSpace.\n\n\na building element represented by IfcBuildingElement\nusing the inverse relationship Covers pointing to IfcRelCoversBldgElements. The building element is then accessible via IfcRelCoversBldgElements.RelatingBuildingElement.NOTE  The mere containment relationship between an IfcCovering and an IfcSpace is created by using IfcRelContainedInSpatialStructureThe following guideline shall apply:(default) if the space has coverings that may not have their own shape representation and no defined relationships to the building elements they cover, then the IfcCovering shall be assigned to IfcSpace using the IfcRelCoversSpaces relationship,\nif the space has coverings that have an own shape representation and the space has defined space boundaries, then the covering, which relates to that space, shall be contained in the space using IfcRelContainedInSpatialStructure. It may be assigned to the space boundaries using the IfcRelSpaceBoundary.\nif the covering does not relate to a space, then the covering should be assigned to the building element or a distribution element using the IfcRelCoversBldgElements relationship.HISTORY  New entity in IFC1.0.{ .change-ifc2x}IFC2x CHANGE  The attribute PredefinedType is now optional and should only be inserted when no type information, given by IfcCoveringType, is assigned to the IfcCovering occurrence by IfcRelDefinesByType.",
        "Psets": {
          "Pset_CoveringCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Finish": {
                "type": "string",
                "Description": "Description of the (surface) finish of the object for informational purposes."
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "FlammabilityRating": {
                "type": "string",
                "Description": "Flammability Rating for this object.\nIt is given according to the national building code that governs the rating of flammability for materials."
              },
              "FragilityRating": {
                "type": "string",
                "Description": "Indication on the fragility of the covering (e.g., under fire conditions).  It is given according to the national building code that might provide a classification for fragility."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\nIt is given according to the national building code that governs the fire behaviour for materials."
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Pset_Tiling": {
            "Properties": {
              "Permeability": {
                "type": "real",
                "Description": "Ratio of the permeability of the ceiling.\nThe ration can be used to indicate an open ceiling (that enables identification of whether ceiling construction should be considered as impeding distribution of sprinkler water, light etc. from installations within the ceiling area)."
              },
              "TileLength": {
                "type": "real",
                "Description": "Length of ceiling tiles. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "TileWidth": {
                "type": "real",
                "Description": "Width of ceiling tiles. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Qto_CoveringBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcCoveringType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The element type IfcCoveringType defines commonly shared information for occurrences of coverings. The set of shared information may include:common properties within shared property sets\ncommon material (layer set) information\ncommon shape representationsIt is used to define an covering specification or covering style (i.e. the specific product information, that is common to all occurrences of that product type). Covering types may be exchanged without being already assigned to occurrences.The occurrences of the IfcCoveringType are represented by instances of IfcCoveringHISTORY  New entity in IFC2x2.{ .spec-head}\nInformal Propositions:The material assignment, if provided using the IfcRelAssociatesMaterial relationship, shall not reference IfcMaterialLayerSetUsage or IfcMaterialProfileSetUsage.",
        "Psets": {
          "Pset_CoveringTypeMembrane": {
            "Properties": {
              "NominalInstallationDepth": {
                "type": "real",
                "Description": "Nominal installation depth underground."
              },
              "NominalTransverseInclination": {
                "type": "real",
                "Description": "Required nominal angle of transverse slope."
              }
            }
          },
          "Pset_CoveringCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Finish": {
                "type": "string",
                "Description": "Description of the (surface) finish of the object for informational purposes."
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "FlammabilityRating": {
                "type": "string",
                "Description": "Flammability Rating for this object.\nIt is given according to the national building code that governs the rating of flammability for materials."
              },
              "FragilityRating": {
                "type": "string",
                "Description": "Indication on the fragility of the covering (e.g., under fire conditions).  It is given according to the national building code that might provide a classification for fragility."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\nIt is given according to the national building code that governs the fire behaviour for materials."
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Pset_CoveringFlooring": {
            "Properties": {
              "HasAntiStaticSurface": {
                "type": "boolean",
                "Description": "Indication whether the surface finish is designed to prevent electrostatic charge (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasNonSkidSurface": {
                "type": "boolean",
                "Description": "Indication whether the surface finish is designed to prevent slippery (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_Tiling": {
            "Properties": {
              "Permeability": {
                "type": "real",
                "Description": "Ratio of the permeability of the ceiling.\nThe ration can be used to indicate an open ceiling (that enables identification of whether ceiling construction should be considered as impeding distribution of sprinkler water, light etc. from installations within the ceiling area)."
              },
              "TileLength": {
                "type": "real",
                "Description": "Length of ceiling tiles. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "TileWidth": {
                "type": "real",
                "Description": "Width of ceiling tiles. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Qto_CoveringBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcCurtainWall": {
        "Parent": "IfcBuiltElement",
        "Description": "A curtain wall is a wall of a building which is an assembly of components, hung from the edge of the floor/roof structure rather than bearing on a floor. Curtain wall is represented as a building element assembly and implemented as a subtype of IfcBuildingElement that uses an IfcRelAggregates relationship. A curtain wall is often external, but using Pset_CurtainWallCommon.IsExternal can be used to define interior curtain walls.{ .extDef}NOTE  Definition according to ISO 6707-1: non load bearing wall positioned on the outside of a building and enclosing it.\nHISTORY  New entity in IFC2.0The geometric representation of IfcCurtainWall is given by the IfcProductDefinitionShape, allowing multiple geometric representations. Independent 'Body' geometric representation, as described below, should only be used when the IfcCurtainWall is not defined as an aggregate. If defined as an aggregate, the geometric representation is the sum of the representations of the components within the aggregate.The geometric representation of IfcCurtainWall is defined using the following multiple shape representations for its definition:Axis: A two-dimensional open curve (for restrictions see below) defining the axis for the curtain wall.\nThis is an optional representation for curtain walls.\n\n\nBody: A surface model or boundary representation model representation defining the 3D shape of the curtain wall.\nIf the IfcCurtainWall has components (referenced by SELF\\IfcObject.IsDecomposedBy) then no independent shape representation with RepresentationType = 'Body' shall be defined. The body of IfcCurtainWall is then geometrically represented by the shape representation of its components. The components are accessed via SELF\\IfcObject.IsDecomposedBy[1].RelatedObjects.\nIf the IfcCurtainWall has no components defined (empty set of SELF\\IfcObject.IsDecomposedBy) then the IfcCurtainWall may be represented by an shape representation with the RepresentationIdentifier ='Body'.",
        "Psets": {
          "Pset_CurtainWallCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\nIt is given according to the national building code that governs the fire behaviour for materials."
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_CurtainWallQuantities": {
            "Properties": {
              "GrossSideArea": {
                "type": "real",
                "Description": "Area of the wall as viewed by an elevation view of the middle plane of the wall.  It does not take into account any wall modifications (such as openings)."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetSideArea": {
                "type": "real",
                "Description": "Area of the object as viewed by an elevation view of the middle plane of the object. It does take into account all object modifications (such as openings)."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcCurtainWallType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The building element type IfcCurtainWallType defines commonly shared information for occurrences of curtain walls. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a curtain wall type specification indicating the specific product information that is common to all occurrences of that product type. The IfcCurtainWallType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcCurtainWallType are represented by instances of IfcCurtainWall. Refer to the documentation at IfcCurtainWall for supported property sets, materials, and composition.HISTORY  New entity in IFC2x3.",
        "Psets": {
          "Pset_CurtainWallCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\nIt is given according to the national building code that governs the fire behaviour for materials."
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_CurtainWallQuantities": {
            "Properties": {
              "GrossSideArea": {
                "type": "real",
                "Description": "Area of the wall as viewed by an elevation view of the middle plane of the wall.  It does not take into account any wall modifications (such as openings)."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetSideArea": {
                "type": "real",
                "Description": "Area of the object as viewed by an elevation view of the middle plane of the object. It does take into account all object modifications (such as openings)."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcDoor": {
        "Parent": "IfcBuiltElement",
        "Description": "The door is a built element that is predominately used to provide controlled access for people, goods, animals and vehicles. It includes constructions with hinged, pivoted, sliding, and additionally revolving and folding operations. A door can:be a \"free standing\" door, contained in an IfcSpatialElement such as an IfcBuildingStorey.\nfill an opening, typically in a wall. The door will then have a FillsVoids attribute which uses the IfcRelFillsElement relationship to relate the IfcDoor with the IfcOpeningElement;\nbe part of an element assembly, typically an IfcCurtainWall. The door will then have a Decomposes attribute which uses the the IfcRelAggregates relationship to relate the door with the assembly of elements;There are two main representations for door occurrences:IfcDoor entities that have a 3D rectangle 'Profile' shape representation defined. This profile can then be used to parametrically generate the geometry of a door. If not provided, the profile of the IfcOpeningElement can be used if the door fills an opening. The parameters are specified on the relating IfcDoorType that references IfcDoorLiningProperties and IfcDoorPanelProperties for each panel in the door;\nIfcDoor entities that are not parametrically generated and have only 'Brep', or 'SurfaceModel' geometry.In addition, an IfcDoor may commonly include a 'FootPrint' representation defining the 2D shape of the door and its swing.The parameters of a door are defined by both the IfcDoor occurence and its IfcDoorType. The IfcDoor specifies:the door width and height\nthe door opening direction (by the positive y-axis of the ObjectPlacement)The IfcDoorType specifies parameters which are common to all of its occurrences of IfcDoor:the operation type (single swing, double swing, revolving, etc.)\nthe door hinge side (by using two different styles for right and left opening doors)\nthe particular attributes for the lining by the IfcDoorLiningProperties\nthe particular attributes for the panels by the IfcDoorPanelPropertiesREFERENCE  Definition according to ISO 6707-1: construction for closing an opening, intended primarily for access with hinged, pivoted or sliding operation.\nNOTE  The entity IfcDoorStandardCase has been deprecated. Use an IfcDoor with a 'Profile' representation instead. The IfcDoor should also have an IfcDoorType with ParameterTakesPrecedence set to 'TRUE'.\nHISTORY  New entity in IFC1.0.{ .change-ifc2x4}IFC4 CHANGE  The attributes PredefinedType and OperationType are added, the applicable type object has been changed to IfcDoorType.",
        "Psets": {
          "Pset_ProcessCapacity": {
            "Properties": {
              "ProcessCapacity": {
                "type": "integer",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance"
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity."
              }
            }
          },
          "Pset_DoorCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "DurabilityRating": {
                "type": "string",
                "Description": "Durability against mechanical stress. It is given according to the national code or regulation."
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "GlazingAreaFraction": {
                "type": "real",
                "Description": "Fraction of the glazing area relative to the total area of the filling element.\nIt shall be used, if the glazing area is not given separately for all panels within the filling element."
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication that this object is designed to be accessible by the handicapped. Set to (TRUE) if this object is rated as handicap accessible according the local building codes, otherwise (FALSE).\nIt is giving according to the requirements of the national building code.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasDrive": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic drive to operate it (TRUE) or no drive (FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HygrothermalRating": {
                "type": "string",
                "Description": "Resistance against hygrothermal impact from different temperatures and humidities inside and outside. It is given according to the national code or regulation."
              },
              "Infiltration": {
                "type": "real",
                "Description": "Infiltration flowrate of outside air for the filler object based on the area of the filler object at a pressure level of 50 Pascals. It shall be used, if the length of all joints is unknown."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalLoadRating": {
                "type": "string",
                "Description": "Mechanical load rating for this object.\nIt is provided according to the national building code."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SecurityRating": {
                "type": "string",
                "Description": "Index based rating system indicating security level.\nIt is giving according to the national building code."
              },
              "SelfClosing": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to close automatically after use (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SmokeStop": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to provide a smoke stop (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              },
              "WaterTightnessRating": {
                "type": "string",
                "Description": "Water tightness rating for this object.\nIt is provided according to the national building code."
              },
              "WindLoadRating": {
                "type": "string",
                "Description": "Wind load resistance rating for this object.\nIt is provided according to the national building code."
              }
            }
          },
          "Pset_DoorWindowGlazingType": {
            "Properties": {
              "FillGas": {
                "type": "string",
                "Description": "Name of the gas by which the gap between two glass layers is filled. It is given for information purposes only."
              },
              "GlassColour": {
                "type": "string",
                "Description": ""
              },
              "GlassLayers": {
                "type": "integer",
                "Description": "Number of glass layers within the frame. E.g. \"2\" for double glazing."
              },
              "GlassThickness1": {
                "type": "real",
                "Description": "Thickness of the first (inner) glass layer."
              },
              "GlassThickness2": {
                "type": "real",
                "Description": "Thickness of the second (intermediate or outer) glass layer."
              },
              "GlassThickness3": {
                "type": "real",
                "Description": "Thickness of the third (outer) glass layer."
              },
              "IsCoated": {
                "type": "boolean",
                "Description": "Indication whether the glass is coated with a material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsLaminated": {
                "type": "boolean",
                "Description": "Indication whether the glass is layered with other materials (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTempered": {
                "type": "boolean",
                "Description": "Indication whether the glass is tempered (TRUE) or not (FALSE) .",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsWired": {
                "type": "boolean",
                "Description": "Indication whether the glass includes a contained wire mesh to prevent break-in (TRUE) or not (FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShadingCoefficient": {
                "type": "real",
                "Description": "(SC): The measure of the ability of a glazing to transmit solar heat, relative to that ability for 3 mm (1/8-inch) clear, double-strength, single glass. Shading coefficient is being phased out in favor of the solar heat gain coefficient (SHGC), and is approximately equal to the SHGC multiplied by 1.15. The shading coefficient is expressed as a number without units between 0 and 1."
              },
              "SolarAbsorption": {
                "type": "real",
                "Description": "(Asol) The ratio of incident solar radiation that is absorbed by a glazing system. It is the sum of the absorption distributed to the exterior (a) and to the interior (qi). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "SolarHeatGainTransmittance": {
                "type": "real",
                "Description": "(SHGC): The ratio of incident solar radiation that contributes to the heat gain of the interior, it is the solar radiation that directly passes (Tsol or \u03c4e) plus the part of the absorbed radiation that is distributed to the interior (qi). The SHGC is referred to also as g-value (g = \u03c4e + qi)."
              },
              "SolarReflectance": {
                "type": "real",
                "Description": "(Rsol): The ratio of incident solar radiation that is reflected by a glazing system (also named \u03c1e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "SolarTransmittance": {
                "type": "real",
                "Description": "The ratio of incident solar radiation that directly passes through a system (also named \u03c4e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "ThermalTransmittanceSummer": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of a material.\nSummer thermal transmittance coefficient of the glazing only, often referred to as (U-value)."
              },
              "ThermalTransmittanceWinter": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of a material.\nWinter thermal transmittance coefficient of the glazing only, often referred to as (U-value)."
              },
              "VisibleLightReflectance": {
                "type": "real",
                "Description": "Fraction of the visible light that is reflected by the glazing at normal incidence. It is a value without unit."
              },
              "VisibleLightTransmittance": {
                "type": "real",
                "Description": "Fraction of the visible light that passes the object at normal incidence. It is a value without unit."
              }
            }
          },
          "Qto_DoorBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "OperationType": {
                "values": [
                  "DOUBLE_PANEL_DOUBLE_SWING",
                  "DOUBLE_PANEL_FOLDING",
                  "DOUBLE_PANEL_LIFTING_VERTICAL",
                  "DOUBLE_PANEL_SINGLE_SWING",
                  "DOUBLE_PANEL_SINGLE_SWING_OPPOSITE_LEFT",
                  "DOUBLE_PANEL_SINGLE_SWING_OPPOSITE_RIGHT",
                  "DOUBLE_PANEL_SLIDING",
                  "DOUBLE_SWING_LEFT",
                  "DOUBLE_SWING_RIGHT",
                  "FOLDING_TO_LEFT",
                  "FOLDING_TO_RIGHT",
                  "LIFTING_HORIZONTAL",
                  "LIFTING_VERTICAL_LEFT",
                  "LIFTING_VERTICAL_RIGHT",
                  "REVOLVING_HORIZONTAL",
                  "REVOLVING_VERTICAL",
                  "ROLLINGUP",
                  "SINGLE_SWING_LEFT",
                  "SINGLE_SWING_RIGHT",
                  "SLIDING_TO_LEFT",
                  "SLIDING_TO_RIGHT",
                  "SWING_FIXED_LEFT",
                  "SWING_FIXED_RIGHT",
                  "USERDEFINED",
                  "NOTDEFINED"
                ],
                "type": "IfcDoorTypeOperationEnum",
                "Description": null
              },
              "OverallHeight": {
                "type": "real",
                "Description": null
              },
              "OverallWidth": {
                "type": "real",
                "Description": null
              },
              "UserDefinedOperationType": {
                "type": "string",
                "Description": null
              },
              "ParameterTakesPrecedence": {
                "type": "boolean",
                "Description": null,
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcDoorType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The element type IfcDoorType defines commonly shared information for occurrences of doors. The set of shared information may include:common properties within shared property sets\ncommon material information\ncommon operation type definitions\ncommon shape representationsA door type defines the particular parameter of the lining and one (or several) panels through the IfcDoorLiningProperties and the IfcDoorPanelProperties as predefined property sets applicable to doors only.It is used to define a door specification, or door style (i.e. the specific product information that is common to all occurrences of that door type). Door types may be exchanged without being already assigned to occurrences.NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.Occurrences of the IfcDoorType within building models are represented by instances of IfcDoor.HISTORY  New entity in IFC4. The entity IfcDoorType replaces the previous definition IfcDoorStyle (which is deprecated in IFC4).",
        "Psets": {
          "Pset_ProcessCapacity": {
            "Properties": {
              "ProcessCapacity": {
                "type": "integer",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance"
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity."
              }
            }
          },
          "Pset_DoorTypeTurnstile": {
            "Properties": {
              "IsBidirectional": {
                "type": "boolean",
                "Description": "Indicates whether the turnstile is bidirectional.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NarrowChannelWidth": {
                "type": "real",
                "Description": "Indicates the width of the narrow channel."
              },
              "TurnstileType": {
                "type": "PEnum_TurnstileType",
                "Description": "Indicates the type of turnstile gate.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "SWINGGATEBRAKE",
                  "THREEPOLEROTARYBRAKE",
                  "UNSET",
                  "WINGGATEBRAKE"
                ]
              },
              "WideChannelWidth": {
                "type": "real",
                "Description": "Indicates the width of the wide channel."
              }
            }
          },
          "Pset_TicketProcessing": {
            "Properties": {
              "TicketProcessingTime": {
                "type": "real",
                "Description": "Indicates the processing time of a ticket."
              },
              "TicketStuckRatio": {
                "type": "real",
                "Description": "Indicates the ratio of tickets being stuck or jammed in the appliance."
              }
            }
          },
          "Pset_DoorCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "DurabilityRating": {
                "type": "string",
                "Description": "Durability against mechanical stress. It is given according to the national code or regulation."
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "GlazingAreaFraction": {
                "type": "real",
                "Description": "Fraction of the glazing area relative to the total area of the filling element.\nIt shall be used, if the glazing area is not given separately for all panels within the filling element."
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication that this object is designed to be accessible by the handicapped. Set to (TRUE) if this object is rated as handicap accessible according the local building codes, otherwise (FALSE).\nIt is giving according to the requirements of the national building code.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasDrive": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic drive to operate it (TRUE) or no drive (FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HygrothermalRating": {
                "type": "string",
                "Description": "Resistance against hygrothermal impact from different temperatures and humidities inside and outside. It is given according to the national code or regulation."
              },
              "Infiltration": {
                "type": "real",
                "Description": "Infiltration flowrate of outside air for the filler object based on the area of the filler object at a pressure level of 50 Pascals. It shall be used, if the length of all joints is unknown."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalLoadRating": {
                "type": "string",
                "Description": "Mechanical load rating for this object.\nIt is provided according to the national building code."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SecurityRating": {
                "type": "string",
                "Description": "Index based rating system indicating security level.\nIt is giving according to the national building code."
              },
              "SelfClosing": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to close automatically after use (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SmokeStop": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to provide a smoke stop (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              },
              "WaterTightnessRating": {
                "type": "string",
                "Description": "Water tightness rating for this object.\nIt is provided according to the national building code."
              },
              "WindLoadRating": {
                "type": "string",
                "Description": "Wind load resistance rating for this object.\nIt is provided according to the national building code."
              }
            }
          },
          "Pset_DoorWindowGlazingType": {
            "Properties": {
              "FillGas": {
                "type": "string",
                "Description": "Name of the gas by which the gap between two glass layers is filled. It is given for information purposes only."
              },
              "GlassColour": {
                "type": "string",
                "Description": ""
              },
              "GlassLayers": {
                "type": "integer",
                "Description": "Number of glass layers within the frame. E.g. \"2\" for double glazing."
              },
              "GlassThickness1": {
                "type": "real",
                "Description": "Thickness of the first (inner) glass layer."
              },
              "GlassThickness2": {
                "type": "real",
                "Description": "Thickness of the second (intermediate or outer) glass layer."
              },
              "GlassThickness3": {
                "type": "real",
                "Description": "Thickness of the third (outer) glass layer."
              },
              "IsCoated": {
                "type": "boolean",
                "Description": "Indication whether the glass is coated with a material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsLaminated": {
                "type": "boolean",
                "Description": "Indication whether the glass is layered with other materials (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTempered": {
                "type": "boolean",
                "Description": "Indication whether the glass is tempered (TRUE) or not (FALSE) .",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsWired": {
                "type": "boolean",
                "Description": "Indication whether the glass includes a contained wire mesh to prevent break-in (TRUE) or not (FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShadingCoefficient": {
                "type": "real",
                "Description": "(SC): The measure of the ability of a glazing to transmit solar heat, relative to that ability for 3 mm (1/8-inch) clear, double-strength, single glass. Shading coefficient is being phased out in favor of the solar heat gain coefficient (SHGC), and is approximately equal to the SHGC multiplied by 1.15. The shading coefficient is expressed as a number without units between 0 and 1."
              },
              "SolarAbsorption": {
                "type": "real",
                "Description": "(Asol) The ratio of incident solar radiation that is absorbed by a glazing system. It is the sum of the absorption distributed to the exterior (a) and to the interior (qi). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "SolarHeatGainTransmittance": {
                "type": "real",
                "Description": "(SHGC): The ratio of incident solar radiation that contributes to the heat gain of the interior, it is the solar radiation that directly passes (Tsol or \u03c4e) plus the part of the absorbed radiation that is distributed to the interior (qi). The SHGC is referred to also as g-value (g = \u03c4e + qi)."
              },
              "SolarReflectance": {
                "type": "real",
                "Description": "(Rsol): The ratio of incident solar radiation that is reflected by a glazing system (also named \u03c1e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "SolarTransmittance": {
                "type": "real",
                "Description": "The ratio of incident solar radiation that directly passes through a system (also named \u03c4e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "ThermalTransmittanceSummer": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of a material.\nSummer thermal transmittance coefficient of the glazing only, often referred to as (U-value)."
              },
              "ThermalTransmittanceWinter": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of a material.\nWinter thermal transmittance coefficient of the glazing only, often referred to as (U-value)."
              },
              "VisibleLightReflectance": {
                "type": "real",
                "Description": "Fraction of the visible light that is reflected by the glazing at normal incidence. It is a value without unit."
              },
              "VisibleLightTransmittance": {
                "type": "real",
                "Description": "Fraction of the visible light that passes the object at normal incidence. It is a value without unit."
              }
            }
          },
          "Qto_DoorBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcMember": {
        "Parent": "IfcBuiltElement",
        "Description": "An IfcMember is a structural member designed to carry loads between or beyond points of support. It is not required to be load bearing. The orientation of the member (being horizontal, vertical or sloped) is not relevant to its definition (in contrary to IfcBeam and IfcColumn). An IfcMember represents a linear structural element from an architectural or structural modeling point of view and shall be used if it cannot be expressed more specifically as either an IfcBeam or an IfcColumn.There are two main representations for member occurrences:IfcMember with IfcMaterialProfileSetUsage is used for all occurrences of members, that have a profile defined that is swept along a directrix. The profile might be changed uniformly by a taper definition along the directrix. The profile parameter and its cardinal point of insertion can be fully described by the IfcMaterialProfileSetUsage. These members are always represented geometricly by an 'Axis' and a 'SweptSolid' or 'AdvancedSweptSolid' shape representation (or by a 'Clipping' geometry based on the swept solid), if a 3D geometric representation is assigned.\nIfcMember without IfcMaterialProfileSetUsage is used for all other occurrences of members, particularly for members with changing profile sizes along the extrusion, or members defined by non-linear extrusion, or members having only 'Brep', or 'SurfaceModel' geometry, or if a more parametric representation is not intended.NOTE  The representation of a member in a structural analysis model is provided by IfcStructuralCurveMember being part of an IfcStructuralAnalysisModel.\nHISTORY  New entity in IFC2x2 Addendum 1.",
        "Psets": {
          "Pset_MemberCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Roll": {
                "type": "real",
                "Description": "Rotation against the longitudinal axis."
              },
              "Slope": {
                "type": "real",
                "Description": "Slope angle - relative to horizontal (0.0 degrees).The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only."
              },
              "Span": {
                "type": "real",
                "Description": "Clear span for this object.The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence. For geometry editing applications, like CAD: this value should be write-only."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_MemberBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetSurfaceArea": {
                "type": "real",
                "Description": "Net surface area of the object, normally generated as perimeter * length + 2 * cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcMemberType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The element type IfcMemberType defines commonly shared information for occurrences of members. Members are predominately linear building elements, often forming part of a structural system. The orientation of the member (being horizontal, vertical or sloped) is not relevant to its definition (in contrary to beam and column). The set of shared information may include:common properties within shared property sets\ncommon material information\ncommon profile definitions\ncommon shape representationsIt is used to define a member specification, or member style (the specific product information that is common to all occurrences of that member type). Member types may be exchanged without being already assigned to occurrences.Occurrences of the IfcMemberType within building models are represented by instances of IfcMember. Occurrences of the IfcMemberType within structural analysis models are represented by instances of IfcStructuralCurveMember, or its applicable subtypes.HISTORY  New entity in IFC2x2 Addendum 1.",
        "Psets": {
          "Pset_MemberTypeAnchoringBar": {
            "Properties": {
              "HasLightningRod": {
                "type": "boolean",
                "Description": "Indicates whether the element is equipped with a lightning rod (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalStressType": {
                "type": "PEnum_MechanicalStressType",
                "Description": "Indicates which type of stress is applied to the element.",
                "values": [
                  "MECHANICAL_COMPRESSION",
                  "MECHANICAL_TRACTION",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_MemberTypeCatenaryStay": {
            "Properties": {
              "CatenaryStayType": {
                "type": "PEnum_CatenaryStayType",
                "Description": "Indicates the type of catenary stay used.",
                "values": [
                  "DOUBLE_STAY",
                  "NOTKNOWN",
                  "OTHER",
                  "SINGLE_STAY",
                  "UNSET"
                ]
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Pset_MemberTypeOCSRigidSupport": {
            "Properties": {
              "ContactWireStagger": {
                "type": "real",
                "Description": "Lateral displacement of the contact wire to opposite sides of the track centre at successive supports."
              }
            }
          },
          "Pset_MemberTypePost": {
            "Properties": {
              "BendingStrength": {
                "type": "real",
                "Description": "Defining values: \u03b1; defined values: bending strength."
              },
              "ConicityRatio": {
                "type": "real",
                "Description": "The ratio of the diameter of the cone bottom surface to the height of the pole."
              },
              "LoadBearingCapacity": {
                "type": "real",
                "Description": "Maximum load bearing capacity of the floor structure throughtout the storey as designed."
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "TorsionalStrength": {
                "type": "real",
                "Description": "Shear strength in torsion."
              },
              "WindLoadRating": {
                "type": "string",
                "Description": "Wind load resistance rating for this object.\nIt is provided according to the national building code."
              }
            }
          },
          "Pset_MemberTypeTieBar": {
            "Properties": {
              "IsTemporaryInstallation": {
                "type": "boolean",
                "Description": "Indicates whether the installation (in the construction stage) is permanent (TRUE) or temporary (FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_MemberCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Roll": {
                "type": "real",
                "Description": "Rotation against the longitudinal axis."
              },
              "Slope": {
                "type": "real",
                "Description": "Slope angle - relative to horizontal (0.0 degrees).The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only."
              },
              "Span": {
                "type": "real",
                "Description": "Clear span for this object.The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence. For geometry editing applications, like CAD: this value should be write-only."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_MemberBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetSurfaceArea": {
                "type": "real",
                "Description": "Net surface area of the object, normally generated as perimeter * length + 2 * cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcPlate": {
        "Parent": "IfcBuiltElement",
        "Description": "An IfcPlate is a planar and often flat part with constant thickness. A plate may carry loads between or beyond points of support, or provide stiffening. The location of the plate (being horizontal, vertical or sloped) is not relevant to its definition.Plates are\u00a0normally made of steel, other metallic material, or by glass panels. However the definition of IfcPlate is material independent and specific material information shall be handled by using IfcAssociatesMaterial to assign a material specification to the IfcPlate.Plates are often add-on parts. This is represented by the IfcRelAggregates decomposition mechanism used to aggregate parts, such as IfcPlate, into a container element such as IfcElementAssembly or IfcCurtainWall.An instance of IfcPlate should preferably get its geometric representation and material assignment through the type definition by IfcPlateType assigned using the IfcRelDefinesByType relationship. This allows identical plates in a construction to be represented by the same instance of IfcPlateType.A plate may have openings, such as voids or recesses. They are defined by an IfcOpeningElement attached to the plate using the inverse relationship HasOpenings pointing to IfcRelVoidsElement. The position number of a plate as often used in steel construction is assigned through the attribute IfcElement.TagThere are two main representations for plate occurrences:IfcPlate with IfcMaterialLayerSetUsage is used for all occurrences of plates, that are prismatic and where the thickness parameter can be fully described by the IfcMaterialLayerSetUsage. These plates are always represented geometrically by a 'SweptSolid' geometry (or by a 'Clipping' geometry based on 'SweptSolid'), if a 3D geometric representation is assigned.\nIfcPlate without IfcMaterialLayerSetUsage is used for all other occurrences of plates, particularly for plates with changing thickness, or plates with non planar surfaces, and plates having only 'SurfaceModel' or 'Brep' geometry or if a more parametric representation is not intended.REFERENCE  Definition according to ISO 6707-1: thin, rigid, flat, metal product, of a thickness greater than that of a sheet.\nNOTE  The representation of a plate in a structural analysis model is provided by IfcStructuralSurfaceMember being part of an IfcStructuralAnalysisModel.\nHISTORY  New entity in IFC2x2",
        "Psets": {
          "Pset_PlateCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_PlateBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcPlateType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The element type IfcPlateType defines commonly shared information for occurrences of plates. The set of shared information may include:common properties within shared property sets\ncommon material information\ncommon material layer definitions\ncommon shape representationsIt is used to define a plate specification (i.e. the specific product information, that is common to all occurrences of that product type). Plate types may be exchanged without being already assigned to occurrences.NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.The occurrences of the IfcPlateType within building models are represented by instances of IfcPlate.HISTORY  New entity in IFC2x2.{ .spec-head}\nInformal Propositions:The material assignment, if provided using the IfcRelAssociatesMaterial relationship, shall not reference the IfcMaterialLayerSetUsage.",
        "Psets": {
          "Pset_PlateCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_PlateBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcRailing": {
        "Parent": "IfcBuiltElement",
        "Description": "The railing is a frame assembly adjacent to human or vehicle circulation spaces and at some space boundaries where it is used in lieu of walls or to complement walls. Designed as an optional physical support, or to prevent injury or damage, either by falling or collision.HISTORY  New entity in IFC2.0",
        "Psets": {
          "Pset_RailingCommon": {
            "Properties": {
              "Diameter": {
                "type": "real",
                "Description": "The Diameter of the object."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_RailingBaseQuantities": {
            "Properties": {
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          }
        }
      },
      "IfcRailingType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The building element type IfcRailingType defines commonly shared information for occurrences of railings. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a railing type specification indicating the specific product information that is common to all occurrences of that product type. The IfcRailingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcRailingType are represented by instances of IfcRailing. Refer to the documentation at IfcRailing for supported property sets, materials, and composition.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_RoadGuardElement": {
            "Properties": {
              "IsMoveable": {
                "type": "boolean",
                "Description": "True if element is moveable.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTerminal": {
                "type": "boolean",
                "Description": "True if element is a terminal. See class Terminal.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTransition": {
                "type": "boolean",
                "Description": "True if element is a transition. See class Transition.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "TerminalType": {
                "type": "string",
                "Description": "Specifies the kind of terminal if IsTerminal is true."
              }
            }
          },
          "Pset_RailingCommon": {
            "Properties": {
              "Diameter": {
                "type": "real",
                "Description": "The Diameter of the object."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_RailingBaseQuantities": {
            "Properties": {
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          }
        }
      },
      "IfcRamp": {
        "Parent": "IfcBuiltElement",
        "Description": "A ramp is a vertical passageway which provides a human or vehicle circulation link between one floor level and another floor level at a different elevation. It may include a landing as an intermediate floor slab. A ramp normally does not include steps.{ .extDef}NOTE  Definition according to ISO 6707-1: Inclined way or floor joining two surfaces at different levels.The IfcRamp shall either be represented:as a ramp assembly that aggregates all parts(ramp flight, landing, etc.) with own shape representations, or\nas a single ramp without decomposition including all shape representations directly at the ramp entity.NOTE  In case of an IfcRamp being the assembly of all parts of the ramp the aggregation is handled by the IfcRelAggregates relationship, relating an IfcRamp with the related IfcRampFlight and landings, IfcSlab with PredefinedType=LANDING. IfcRailing's belonging to the ramp may also be included into the aggregation.\nNOTE  Model View Definitions and implementer agreements may restrict the IfcRamp being an assembly to not have an independent shape representation, but to always require that the decomposed parts have a shape representation. In this case, at least the 'Body' geometric representations shall not be provided directly at IfcRamp if it is an assembly. The 'Body' geometric representation of the IfcRamp is then the sum of the 'Body' shape representation of the parts within the decomposition structure.\nHISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE Attribute ShapeType renamed to PredefinedType",
        "Psets": {
          "Pset_RampCommon": {
            "Properties": {
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication that this object is designed to be accessible by the handicapped. Set to (TRUE) if this object is rated as handicap accessible according the local building codes, otherwise (FALSE).\nIt is giving according to the requirements of the national building code.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasNonSkidSurface": {
                "type": "boolean",
                "Description": "Indication whether the surface finish is designed to prevent slippery (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RequiredHeadroom": {
                "type": "real",
                "Description": "Required headroom clearance for the passageway according to the applicable building code or additional requirements."
              },
              "RequiredSlope": {
                "type": "real",
                "Description": "Required sloping angle of the object  - relative to horizontal (0.0 degrees).\nRequired maximum slope for the passageway according to the applicable building code or additional requirements."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcRampFlight": {
        "Parent": "IfcBuiltElement",
        "Description": "A ramp comprises a single inclined segment, or several inclined segments that are connected by a horizontal segment, referred to as a landing. A ramp flight is the single inclined segment and part of the ramp construction. In case of single flight ramps, the ramp flight and the ramp are identical.NOTE  A single flight ramp is represented by an IfcRamp instance without using aggregation and by utilizing the product shape representation directly at IfcRamp.An IfcRampFlight is an aggregated part of an IfcRamp realized through the IfcRelAggregates relationship, the ramp flight is therefore included in the set of IfcRelAggregates.RelatedObjects.An IfcRampFlight connects the floor slab of zero to two different storeys (or partial storeys or landings) within a building. The connection relationship between the IfcRampFlight and the IfcSlab can be expressed using the IfcRelConnectsElements relationship.HISTORY  New entity in IFC2.0.",
        "Psets": {
          "Pset_RampFlightCommon": {
            "Properties": {
              "ClearWidth": {
                "type": "real",
                "Description": "The clear width."
              },
              "CounterSlope": {
                "type": "real",
                "Description": "Sloping angle of the object, measured perpendicular to the slope  - relative to horizontal (0.0 degrees).\nActual maximum slope for the passageway measured perpendicular to the direction of travel according to the current design. The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\nNote: new property in IFC4."
              },
              "Headroom": {
                "type": "real",
                "Description": "Actual headroom clearance for the passageway according to the current design.\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Slope": {
                "type": "real",
                "Description": "Slope angle - relative to horizontal (0.0 degrees).The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_RampFlightBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcRampFlightType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The building element type IfcRampFlightType defines commonly shared information for occurrences of ramp flights. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a ramp flight type specification indicating the specific product information that is common to all occurrences of that product type. The IfcRampFlightType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcRampFlightType are represented by instances of IfcRampFlight. Refer to the documentation at IfcRampFlight for supported property sets, materials, and composition.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_RampFlightCommon": {
            "Properties": {
              "ClearWidth": {
                "type": "real",
                "Description": "The clear width."
              },
              "CounterSlope": {
                "type": "real",
                "Description": "Sloping angle of the object, measured perpendicular to the slope  - relative to horizontal (0.0 degrees).\nActual maximum slope for the passageway measured perpendicular to the direction of travel according to the current design. The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\nNote: new property in IFC4."
              },
              "Headroom": {
                "type": "real",
                "Description": "Actual headroom clearance for the passageway according to the current design.\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Slope": {
                "type": "real",
                "Description": "Slope angle - relative to horizontal (0.0 degrees).The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_RampFlightBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcRampType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The building element type IfcRampType defines commonly shared information for occurrences of ramps. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a ramp type specification indicating the specific product information that is common to all occurrences of that product type. The IfcRampType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcRampType are represented by instances of IfcRamp. Refer to the documentation at IfcRamp for supported property sets, materials, and composition.HISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_RampCommon": {
            "Properties": {
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication that this object is designed to be accessible by the handicapped. Set to (TRUE) if this object is rated as handicap accessible according the local building codes, otherwise (FALSE).\nIt is giving according to the requirements of the national building code.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasNonSkidSurface": {
                "type": "boolean",
                "Description": "Indication whether the surface finish is designed to prevent slippery (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RequiredHeadroom": {
                "type": "real",
                "Description": "Required headroom clearance for the passageway according to the applicable building code or additional requirements."
              },
              "RequiredSlope": {
                "type": "real",
                "Description": "Required sloping angle of the object  - relative to horizontal (0.0 degrees).\nRequired maximum slope for the passageway according to the applicable building code or additional requirements."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcRoof": {
        "Parent": "IfcBuiltElement",
        "Description": "A roof is the covering of the top part of a building, it protects the building against the effects of weather.{ .extDef}NOTE  Definition according to ISO 6707-1: construction enclosing the building from above.The IfcRoof shall either be represented:as a roof assembly that aggregates all parts (slabs, rafters and purlins, or other included roofs, such as dormers) with own shape representation, or\nas a single roof without decomposition including all shape representations directly at the roof entity.NOTE  In case of an IfcRoof being the assembly of all parts of the roof the aggregation is handled by the IfcRelAggregates relationship, relating an IfcRoof with the related roof elements, like slabs (represented by IfcSlab), rafters and purlins (represented by IfcBeam), or other included roofs, such as dormers (represented by IfcRoof).\nNOTE  Model View Definitions and implementer agreements may restrict the IfcRoof being an assembly to not have an independent shape representation, but to always require that the decomposed parts have a shape representation. In this case, at least the 'Body' geometric representations shall not be provided directly at IfcRoof if it is an assembly. The 'Body' geometric representation of the IfcRoof is then the sum of the 'Body' shape representation of the parts within the decomposition structure.\nHISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE  Attribute ShapeType renamed to PredefinedType.",
        "Psets": {
          "Pset_RoofCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_RoofBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "ProjectedArea": {
                "type": "real",
                "Description": "Total gross area of the outer surfaces of the roof, projected tp the ground. It is the sum of all projected roof slab gross areas. Roof openings, like sky windows and other openings and cut-outs are not taken into account."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcRoofType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The building element type IfcRoofType defines commonly shared information for occurrences of roofs. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a roof type specification indicating the specific product information that is common to all occurrences of that product type. The IfcRoofType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcRoofType are represented by instances of IfcRoof. Refer to the documentation at IfcRoof for supported property sets, materials, and composition.HISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_RoofCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_RoofBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "ProjectedArea": {
                "type": "real",
                "Description": "Total gross area of the outer surfaces of the roof, projected tp the ground. It is the sum of all projected roof slab gross areas. Roof openings, like sky windows and other openings and cut-outs are not taken into account."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcShadingDevice": {
        "Parent": "IfcBuiltElement",
        "Description": "Shading devices are purpose built devices to protect from the sunlight, from natural light, or screening them from view. Shading devices can form part of the facade or can be mounted inside the building, they can be fixed or operable.NOTE  Also other building elements such as protruding slabs or balconies can act as shading devices. Those elements however have another primary purpose and are defined as IfcSlab or by other subtypes of IfcBuildingElement.\nHISTORY  New entity in IFC4",
        "Psets": {
          "Pset_ShadingDeviceCommon": {
            "Properties": {
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalOperated": {
                "type": "boolean",
                "Description": "Indication whether the element is operated machanically (TRUE) or not, i.e. manually  (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Roughness": {
                "type": "string",
                "Description": "A measure of the vertical deviations of the surface."
              },
              "ShadingDeviceType": {
                "type": "PEnum_ElementShading",
                "Description": "Specifies the type of shading device.",
                "values": [
                  "FIXED",
                  "MOVABLE",
                  "NOTKNOWN",
                  "OTHER",
                  "OVERHANG",
                  "SIDEFIN",
                  "UNSET"
                ]
              },
              "SolarReflectance": {
                "type": "real",
                "Description": "(Rsol): The ratio of incident solar radiation that is reflected by a glazing system (also named \u03c1e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "SolarTransmittance": {
                "type": "real",
                "Description": "The ratio of incident solar radiation that directly passes through a system (also named \u03c4e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SurfaceColour": {
                "type": "string",
                "Description": ""
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              },
              "VisibleLightReflectance": {
                "type": "real",
                "Description": "Fraction of the visible light that is reflected by the glazing at normal incidence. It is a value without unit."
              },
              "VisibleLightTransmittance": {
                "type": "real",
                "Description": "Fraction of the visible light that passes the object at normal incidence. It is a value without unit."
              }
            }
          }
        }
      },
      "IfcShadingDeviceType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The building element type IfcShadingDeviceType defines commonly shared information for occurrences of shading devices. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a shading device type specification indicating the specific product information that is common to all occurrences of that product type. The IfcShadingDeviceType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcShadingDeviceType are represented by instances of IfcShadingDevice. Refer to the documentation at IfcShadingDevice for supported property sets, materials, and composition.HISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_ShadingDeviceCommon": {
            "Properties": {
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalOperated": {
                "type": "boolean",
                "Description": "Indication whether the element is operated machanically (TRUE) or not, i.e. manually  (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Roughness": {
                "type": "string",
                "Description": "A measure of the vertical deviations of the surface."
              },
              "ShadingDeviceType": {
                "type": "PEnum_ElementShading",
                "Description": "Specifies the type of shading device.",
                "values": [
                  "FIXED",
                  "MOVABLE",
                  "NOTKNOWN",
                  "OTHER",
                  "OVERHANG",
                  "SIDEFIN",
                  "UNSET"
                ]
              },
              "SolarReflectance": {
                "type": "real",
                "Description": "(Rsol): The ratio of incident solar radiation that is reflected by a glazing system (also named \u03c1e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "SolarTransmittance": {
                "type": "real",
                "Description": "The ratio of incident solar radiation that directly passes through a system (also named \u03c4e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SurfaceColour": {
                "type": "string",
                "Description": ""
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              },
              "VisibleLightReflectance": {
                "type": "real",
                "Description": "Fraction of the visible light that is reflected by the glazing at normal incidence. It is a value without unit."
              },
              "VisibleLightTransmittance": {
                "type": "real",
                "Description": "Fraction of the visible light that passes the object at normal incidence. It is a value without unit."
              }
            }
          }
        }
      },
      "IfcSlab": {
        "Parent": "IfcBuiltElement",
        "Description": "A slab is a component of the construction that may enclose a space vertically. The slab may provide the lower support (floor) or upper construction (roof slab) in any space in a building.Only the core or constructional part of this construction is considered to be a slab. The upper finish (flooring, roofing) and the lower finish (ceiling, suspended ceiling) are considered to be coverings. A special type of slab is the landing, described as a floor section to which one or more stair flights or ramp flights connect.A slab may have openings, such as floor openings, or recesses. They are defined by an IfcOpeningElement attached to the slab using the inverse relationship HasOpenings pointing to IfcRelVoidsElement. Slabs with openings that have already been modeled within the enclosing geometry may use the relationship IfcRelConnectsElements to associate the IfcSlab with embedded elements such as trap doors.There are two main representations for slab occurrences:IfcSlab with IfcMaterialLayerSetUsage is used for all occurrences of slabs, that are prismatic and where the thickness parameter can be fully described by the IfcMaterialLayerSetUsage. These slabs are always represented geometrically by a 'SweptSolid' geometry (or by a 'Clipping' geometry based on 'SweptSolid'), if a 3D geometric representation is assigned.\n\n\nIfcSlab without IfcMaterialLayerSetUsage is used for all other occurrences of slabs, particularly for slabs with changing thickness, or slabs with non planar surfaces, and slabs having only 'SweptSolid' or 'Brep' geometry, or if a more parametric representation is not intended.REFERENCE  Definition according to ISO 6707-1: thick, flat or shaped component, usually larger than 300 mm square, used to form a covering or projecting from a building.\nNOTE \u00a0An arbitrary planar element to which this semantic information is not applicable or irrelevant shall be modeled as IfcPlate.\nNOTE The entity IfcSlabStandardCase has been deprecated, IfcSlab with IfcMaterialLayerSetUsage is used instead. The entity IfcSlabElementedCase has been deprecated, IfcSlab with IfcRelAggregates is used to describe occurrences of slabs which are aggregated from subordinate elements.\nNOTE There is a representation of slabs for structural analysis provided by a proper subtype of IfcStructuralMember being part of the IfcStructuralAnalysisModel.\nHISTORY  New entity in IFC2.0; it is a merger of the two previous entities IfcFloor, IfcRoofSlab, introduced in IFC1.0",
        "Psets": {
          "Pset_SlabCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Compartmentation": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to serve as a fire compartmentation (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PitchAngle": {
                "type": "real",
                "Description": "Angle of the slab to the horizontal when used as a component for the roof (specified as 0 degrees or not asserted for cases where the slab is not used as a roof component).The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\nIt is given according to the national building code that governs the fire behaviour for materials."
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_SlabBaseQuantities": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastSlab": {
            "Properties": {
              "AngleBetweenComponentAxes": {
                "type": "real",
                "Description": "The angle between the axes of each pair of components."
              },
              "AngleToFirstAxis": {
                "type": "real",
                "Description": "The angle of rotation of the axis of the first component relative to the \u2018West\u2019 edge of the slab."
              },
              "DistanceBetweenComponentAxes": {
                "type": "real",
                "Description": "The distance between the axes of the components, measured along the \u2018South\u2019 edge of the slab."
              },
              "EdgeDistanceToFirstAxis": {
                "type": "real",
                "Description": "The distance from the left (\u2018West\u2019) edge of the slab (in the direction of span of the components) to the axis of the first component."
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalToppingThickness": {
                "type": "real",
                "Description": "The nominal thickness of the topping."
              },
              "ToppingType": {
                "type": "string",
                "Description": "Defines if a topping is applied and what kind. Values are \u201cFull topping\u201d, \u201cPerimeter Wash\u201d, \u201cNone\u201d"
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfSlab": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "LongInsideCenterLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside center lower bar."
              },
              "LongInsideCenterTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside center top bar."
              },
              "LongInsideEndLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside end lower bar."
              },
              "LongInsideEndTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside end top bar."
              },
              "LongOutsideLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long outside lower bar."
              },
              "LongOutsideTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long outside top bar."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "ShortInsideCenterLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside center lower bar."
              },
              "ShortInsideCenterTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside center top bar."
              },
              "ShortInsideEndLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside end lower bar."
              },
              "ShortInsideEndTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside end top bar."
              },
              "ShortOutsideLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short outside lower bar."
              },
              "ShortOutsideTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short outside top bar."
              }
            }
          }
        }
      },
      "IfcSlabType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The element type IfcSlabType defines commonly shared information for occurrences of slabs. The set of shared information may include:common properties within shared property sets\ncommon material information\ncommon material layer definitions\ncommon shape representationsIt is used to define a slab specification (i.e. the specific product information, that is common to all occurrences of that product type). Slab types may be exchanged without being already assigned to occurrences.NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.The occurrences of the IfcSlabType within building models are represented by instances of IfcSlab.HISTORY  New entity in IFC2x2.{ .spec-head}\nInformal Propositions:The material assignment, if provided using the IfcRelAssociatesMaterial relationship, shall not reference the IfcMaterialLayerSetUsage.",
        "Psets": {
          "Pset_CessBetweenRails": {
            "Properties": {
              "CheckRailType": {
                "type": "PEnum_CheckRailType",
                "Description": "Type of the check rail. Check rail types enumerated in this property are defined based on EN 13674.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "TYPE_33C1",
                  "TYPE_40C1",
                  "TYPE_47C1",
                  "TYPE_CR3_60U",
                  "TYPE_R260",
                  "TYPE_R320CR",
                  "UNSET"
                ]
              },
              "JointRelativePosition": {
                "type": "PEnum_RelativePosition",
                "Description": "Indicates the relative position of the joint, which lies in the left or right rail or in the middle, or in combination. The left rail is to the left as facing in the direction of increasing stationing values, and the right rail is to the right.",
                "values": [
                  "LEFT",
                  "MIDDLE",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHT",
                  "UNSET"
                ]
              },
              "LoadCapacity": {
                "type": "real",
                "Description": "Indicates the highest permissible load capacity."
              },
              "UsagePurpose": {
                "type": "PEnum_UsagePurpose",
                "Description": "The purpose of usage of the cess between rails, e.g. maintenance, rescue services.",
                "values": [
                  "MAINTENANCE",
                  "NOTKNOWN",
                  "OTHER",
                  "RESCUESERVICES",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_EmbeddedTrack": {
            "Properties": {
              "HasDrainage": {
                "type": "boolean",
                "Description": "Indicates whether the infrastructure element has drainage embedded or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsAccessibleByVehicle": {
                "type": "boolean",
                "Description": "Indicates whether the element is accessible by a vehicle or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PermissibleRoadLoad": {
                "type": "real",
                "Description": "Permissible traffic load for the road design."
              }
            }
          },
          "Pset_TrackBase": {
            "Properties": {
              "IsSurfaceGalling": {
                "type": "boolean",
                "Description": "Indicates whether the surface is galling or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SurfaceGallingArea": {
                "type": "real",
                "Description": "The galling area of the object surface."
              }
            }
          },
          "Pset_SlabCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Compartmentation": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to serve as a fire compartmentation (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PitchAngle": {
                "type": "real",
                "Description": "Angle of the slab to the horizontal when used as a component for the roof (specified as 0 degrees or not asserted for cases where the slab is not used as a roof component).The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\nIt is given according to the national building code that governs the fire behaviour for materials."
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_SlabBaseQuantities": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastSlab": {
            "Properties": {
              "AngleBetweenComponentAxes": {
                "type": "real",
                "Description": "The angle between the axes of each pair of components."
              },
              "AngleToFirstAxis": {
                "type": "real",
                "Description": "The angle of rotation of the axis of the first component relative to the \u2018West\u2019 edge of the slab."
              },
              "DistanceBetweenComponentAxes": {
                "type": "real",
                "Description": "The distance between the axes of the components, measured along the \u2018South\u2019 edge of the slab."
              },
              "EdgeDistanceToFirstAxis": {
                "type": "real",
                "Description": "The distance from the left (\u2018West\u2019) edge of the slab (in the direction of span of the components) to the axis of the first component."
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalToppingThickness": {
                "type": "real",
                "Description": "The nominal thickness of the topping."
              },
              "ToppingType": {
                "type": "string",
                "Description": "Defines if a topping is applied and what kind. Values are \u201cFull topping\u201d, \u201cPerimeter Wash\u201d, \u201cNone\u201d"
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfSlab": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "LongInsideCenterLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside center lower bar."
              },
              "LongInsideCenterTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside center top bar."
              },
              "LongInsideEndLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside end lower bar."
              },
              "LongInsideEndTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside end top bar."
              },
              "LongOutsideLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long outside lower bar."
              },
              "LongOutsideTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long outside top bar."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "ShortInsideCenterLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside center lower bar."
              },
              "ShortInsideCenterTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside center top bar."
              },
              "ShortInsideEndLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside end lower bar."
              },
              "ShortInsideEndTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside end top bar."
              },
              "ShortOutsideLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short outside lower bar."
              },
              "ShortOutsideTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short outside top bar."
              }
            }
          }
        }
      },
      "IfcStair": {
        "Parent": "IfcBuiltElement",
        "Description": "A stair is a vertical passageway allowing occupants to walk (step) from one floor level to another floor level at a different elevation. It may include a landing as an intermediate floor slab.{ .extDef}NOTE  Definition according to ISO 6707-1: Construction comprising a succession of horizontal stages (steps or landings) that make it possible to pass on foot to other levels.The IfcStair shall either be represented:as a stair assembly entity that aggregates all parts (stair flight, landing, etc. with own representations), or\nas a single stair entity without decomposition including all representation directly at the stair entity.NOTE  In case of an IfcStair being the aggregate of all parts of the stair the aggregation is handled by the IfcRelAggregates relationship, relating an IfcStair with the related IfcStairFlight and landings, IfcSlab with PredefinedType=LANDING. IfcRailing's belonging to the stair may also be included into the aggregation.\nNOTE  Model View Definitions and implementer agreements may restrict the IfcStair being an assembly to not have an independent shape representation, but to always require that the decomposed parts have a shape representation. In this case, at least the 'Body' geometric representations shall not be provided directly at IfcStair if it is an assembly. The 'Body' geometric representation of the IfcStair is then the sum of the 'Body' shape representation of the parts within the decomposition structure.\nHISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE Attribute ShapeType renamed to PredefinedType.",
        "Psets": {
          "Pset_StairCommon": {
            "Properties": {
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication that this object is designed to be accessible by the handicapped. Set to (TRUE) if this object is rated as handicap accessible according the local building codes, otherwise (FALSE).\nIt is giving according to the requirements of the national building code.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasNonSkidSurface": {
                "type": "boolean",
                "Description": "Indication whether the surface finish is designed to prevent slippery (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NosingLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the tread to the riser underneath. It is the overhang of the tread."
              },
              "NumberOfRiser": {
                "type": "integer",
                "Description": "Total number of the risers included in the stair or stair flight."
              },
              "NumberOfTreads": {
                "type": "integer",
                "Description": "Total number of treads included in the stair or stairflight."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RequiredHeadroom": {
                "type": "real",
                "Description": "Required headroom clearance for the passageway according to the applicable building code or additional requirements."
              },
              "RiserHeight": {
                "type": "real",
                "Description": "Vertical distance from tread to tread.\nThe riser height is supposed to be equal for all steps of a stair or stair flight."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              },
              "TreadLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the thread to the front of the next tread.\nThe tread length is supposed to be equal for all steps of the stair or stair flight at the walking line."
              },
              "TreadLengthAtInnerSide": {
                "type": "real",
                "Description": "Minimum length of treads at the inner side of the winder.\nOnly relevant in case of winding flights, for straight flights it is identical with IfcStairFlight.TreadLength. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence."
              },
              "TreadLengthAtOffset": {
                "type": "real",
                "Description": "Length of treads at a given offset.\nWalking line position is given by the 'WalkingLineOffset'. The resulting value should normally be identical with TreadLength, it may be given in addition, if the walking line offset for building code calculations is different from that used in design."
              },
              "WaistThickness": {
                "type": "real",
                "Description": "Minimum thickness of the stair flight, measured perpendicular to the slope of the flight to the inner corner of riser and tread. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence."
              },
              "WalkingLineOffset": {
                "type": "real",
                "Description": "Offset of the walking line from the inner side of the flight.\nNote: the walking line may have a own shape representation (in case of inconsistencies, the value derived from the shape representation shall take precedence)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcStairFlight": {
        "Parent": "IfcBuiltElement",
        "Description": "A stair flight is an assembly of building components in a single \"run\" of stair steps (not interrupted by a landing). The stair steps and any stringers are included in the stair flight. A winder is also regarded a part of a stair flight.An IfcStairFlight is normally aggregated by an IfcStair through the IfcRelAggregates relationship, the stair flight is then included in the set of IfcRelAggregates.RelatedObjects. An IfcStairFlight normally connects the floor slab of zero to two different storeys (or partial storeys, or landings) within a building. The connection relationship between the IfcStairFlight and the IfcSlab can be expressed using the IfcRelConnectsElements relationship.HISTORY  New entity in IFC2.0.",
        "Psets": {
          "Pset_StairFlightCommon": {
            "Properties": {
              "Headroom": {
                "type": "real",
                "Description": "Actual headroom clearance for the passageway according to the current design.\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence."
              },
              "NosingLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the tread to the riser underneath. It is the overhang of the tread."
              },
              "NumberOfRiser": {
                "type": "integer",
                "Description": "Total number of the risers included in the stair or stair flight."
              },
              "NumberOfTreads": {
                "type": "integer",
                "Description": "Total number of treads included in the stair or stairflight."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RiserHeight": {
                "type": "real",
                "Description": "Vertical distance from tread to tread.\nThe riser height is supposed to be equal for all steps of a stair or stair flight."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TreadLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the thread to the front of the next tread.\nThe tread length is supposed to be equal for all steps of the stair or stair flight at the walking line."
              },
              "TreadLengthAtInnerSide": {
                "type": "real",
                "Description": "Minimum length of treads at the inner side of the winder.\nOnly relevant in case of winding flights, for straight flights it is identical with IfcStairFlight.TreadLength. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence."
              },
              "TreadLengthAtOffset": {
                "type": "real",
                "Description": "Length of treads at a given offset.\nWalking line position is given by the 'WalkingLineOffset'. The resulting value should normally be identical with TreadLength, it may be given in addition, if the walking line offset for building code calculations is different from that used in design."
              },
              "WaistThickness": {
                "type": "real",
                "Description": "Minimum thickness of the stair flight, measured perpendicular to the slope of the flight to the inner corner of riser and tread. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence."
              },
              "WalkingLineOffset": {
                "type": "real",
                "Description": "Offset of the walking line from the inner side of the flight.\nNote: the walking line may have a own shape representation (in case of inconsistencies, the value derived from the shape representation shall take precedence)."
              }
            }
          },
          "Qto_StairFlightBaseQuantities": {
            "Properties": {
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "NumberOfRisers": {
                "type": "integer",
                "Description": null
              },
              "NumberOfTreads": {
                "type": "integer",
                "Description": null
              },
              "RiserHeight": {
                "type": "real",
                "Description": null
              },
              "TreadLength": {
                "type": "real",
                "Description": null
              }
            }
          }
        }
      },
      "IfcStairFlightType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The building element type IfcStairFlightType defines commonly shared information for occurrences of stair flights. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a stair flight type specification indicating the specific product information that is common to all occurrences of that product type. The IfcStairFlightType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcStairFlightType are represented by instances of IfcStairFlight. Refer to the documentation at IfcStairFlight for supported property sets, materials, and composition.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_StairFlightCommon": {
            "Properties": {
              "Headroom": {
                "type": "real",
                "Description": "Actual headroom clearance for the passageway according to the current design.\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence."
              },
              "NosingLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the tread to the riser underneath. It is the overhang of the tread."
              },
              "NumberOfRiser": {
                "type": "integer",
                "Description": "Total number of the risers included in the stair or stair flight."
              },
              "NumberOfTreads": {
                "type": "integer",
                "Description": "Total number of treads included in the stair or stairflight."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RiserHeight": {
                "type": "real",
                "Description": "Vertical distance from tread to tread.\nThe riser height is supposed to be equal for all steps of a stair or stair flight."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "TreadLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the thread to the front of the next tread.\nThe tread length is supposed to be equal for all steps of the stair or stair flight at the walking line."
              },
              "TreadLengthAtInnerSide": {
                "type": "real",
                "Description": "Minimum length of treads at the inner side of the winder.\nOnly relevant in case of winding flights, for straight flights it is identical with IfcStairFlight.TreadLength. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence."
              },
              "TreadLengthAtOffset": {
                "type": "real",
                "Description": "Length of treads at a given offset.\nWalking line position is given by the 'WalkingLineOffset'. The resulting value should normally be identical with TreadLength, it may be given in addition, if the walking line offset for building code calculations is different from that used in design."
              },
              "WaistThickness": {
                "type": "real",
                "Description": "Minimum thickness of the stair flight, measured perpendicular to the slope of the flight to the inner corner of riser and tread. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence."
              },
              "WalkingLineOffset": {
                "type": "real",
                "Description": "Offset of the walking line from the inner side of the flight.\nNote: the walking line may have a own shape representation (in case of inconsistencies, the value derived from the shape representation shall take precedence)."
              }
            }
          },
          "Qto_StairFlightBaseQuantities": {
            "Properties": {
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcStairType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The building element type IfcStairType defines commonly shared information for occurrences of stairs. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a stair type specification indicating the specific product information that is common to all occurrences of that product type. The IfcStairType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcStairType are represented by instances of IfcStair. Refer to the documentation at IfcStair for supported property sets, materials, and composition.HISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_StairCommon": {
            "Properties": {
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication that this object is designed to be accessible by the handicapped. Set to (TRUE) if this object is rated as handicap accessible according the local building codes, otherwise (FALSE).\nIt is giving according to the requirements of the national building code.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasNonSkidSurface": {
                "type": "boolean",
                "Description": "Indication whether the surface finish is designed to prevent slippery (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NosingLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the tread to the riser underneath. It is the overhang of the tread."
              },
              "NumberOfRiser": {
                "type": "integer",
                "Description": "Total number of the risers included in the stair or stair flight."
              },
              "NumberOfTreads": {
                "type": "integer",
                "Description": "Total number of treads included in the stair or stairflight."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "RequiredHeadroom": {
                "type": "real",
                "Description": "Required headroom clearance for the passageway according to the applicable building code or additional requirements."
              },
              "RiserHeight": {
                "type": "real",
                "Description": "Vertical distance from tread to tread.\nThe riser height is supposed to be equal for all steps of a stair or stair flight."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              },
              "TreadLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the thread to the front of the next tread.\nThe tread length is supposed to be equal for all steps of the stair or stair flight at the walking line."
              },
              "TreadLengthAtInnerSide": {
                "type": "real",
                "Description": "Minimum length of treads at the inner side of the winder.\nOnly relevant in case of winding flights, for straight flights it is identical with IfcStairFlight.TreadLength. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence."
              },
              "TreadLengthAtOffset": {
                "type": "real",
                "Description": "Length of treads at a given offset.\nWalking line position is given by the 'WalkingLineOffset'. The resulting value should normally be identical with TreadLength, it may be given in addition, if the walking line offset for building code calculations is different from that used in design."
              },
              "WaistThickness": {
                "type": "real",
                "Description": "Minimum thickness of the stair flight, measured perpendicular to the slope of the flight to the inner corner of riser and tread. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence."
              },
              "WalkingLineOffset": {
                "type": "real",
                "Description": "Offset of the walking line from the inner side of the flight.\nNote: the walking line may have a own shape representation (in case of inconsistencies, the value derived from the shape representation shall take precedence)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          }
        }
      },
      "IfcWall": {
        "Parent": "IfcBuiltElement",
        "Description": "The wall represents a vertical construction that may bound or subdivide spaces. Wall are usually vertical, or nearly vertical, planar elements, often designed to bear structural loads. A wall is however\u00a0not required to be load bearing.{ .extDef}A wall may have openings, such as wall openings, openings used for windows or doors, or niches and recesses. They are defined by an IfcOpeningElement attached to the wall using the inverse relationship HasOpenings pointing to IfcRelVoidsElement. Walls with openings that have already been modeled within the enclosing geometry may use the relationship IfcRelConnectsElements to associate the wall with embedded elements such as doors and windows.There are two main representations for all occurrences:IfcWall with IfcMaterialLayerSetUsage is used for all occurrences of walls, that have a non-changing thickness along the wall path and where the thickness parameter can be fully described by a material layer set. These walls are always represented geometrically by an 'Axis' and a 'SweptSolid' shape representation (or by a 'Clipping' geometry based on 'SweptSolid'), if a 3D geometric representation is assigned.\n\n\nIfcWall without IfcMaterialLayerSetUsage is used for all other occurrences of wall, particularly for walls with changing thickness along the wall path (e.g. polygonal walls), or walls with a non-rectangular cross sections (e.g. L-shaped retaining walls), and walls having an extrusion axis that is unequal to the global Z axis of the project (i.e. non-vertical walls), or walls having only 'Brep', or 'SurfaceModel' geometry, or if a more parametric representation is not intended.REFERENCE  Definition according to ISO 6707-1: vertical construction usually in masonry or in concrete which bounds or subdivides a construction works and fulfils a load bearing or retaining function.\nNOTE  An arbitrary planar element to which this semantic information is not applicable (is not predominantly vertical), shall be modeled as IfcPlate.\nNOTE  The entity IfcWallStandardCase has been deprecated, IfcWall with IfcMaterialLayerSetUsage is used instead. The entity IfcWallElementedCase has been deprecated, IfcWall with IfcRelAggregates is used to describe occurrences of wall which are aggregated from subordinate elements, such as wall panels.\nNOTE  There is a representation of walls for structural analysis provided by a proper subtype of IfcStructuralMember being part of the IfcStructuralAnalysisModel.\nHISTORY  New entity in IFC1.0",
        "Psets": {
          "Pset_WallCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Compartmentation": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to serve as a fire compartmentation (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ExtendToStructure": {
                "type": "boolean",
                "Description": "Indicates whether the object extend to the structure above (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\nIt is given according to the national building code that governs the fire behaviour for materials."
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_WallBaseQuantities": {
            "Properties": {
              "GrossFootPrintArea": {
                "type": "real",
                "Description": ""
              },
              "GrossSideArea": {
                "type": "real",
                "Description": "Area of the wall as viewed by an elevation view of the middle plane of the wall.  It does not take into account any wall modifications (such as openings)."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetFootPrintArea": {
                "type": "real",
                "Description": ""
              },
              "NetSideArea": {
                "type": "real",
                "Description": "Area of the object as viewed by an elevation view of the middle plane of the object. It does take into account all object modifications (such as openings)."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfWall": {
            "Properties": {
              "BarAllocationType": {
                "type": "PEnum_ReinforcementBarAllocationType",
                "Description": "Defines the type of the reinforcement bar allocation.",
                "values": [
                  "ALTERNATE",
                  "DOUBLE",
                  "NOTDEFINED",
                  "OTHER",
                  "SINGLE",
                  "USERDEFINED"
                ]
              },
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "HorizontalBarPitch": {
                "type": "real",
                "Description": "The pitch length of the horizontal bar."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SpacingBarPitch": {
                "type": "real",
                "Description": "The pitch length of the spacing bar."
              },
              "VerticalBarPitch": {
                "type": "real",
                "Description": "The pitch length of the vertical bar."
              }
            }
          }
        }
      },
      "IfcWallStandardCase": {
        "Parent": "IfcWall",
        "Description": "The IfcWallStandardCase defines a wall with certain constraints for the provision of parameters and with certain constraints for the geometric representation. The IfcWallStandardCase handles all cases of walls, that are extruded vertically:along the positive z axis of the wall object coordinate system, and\nalong the positive z axis of the global (world) coordinate systemand have a single thickness along the path for each wall layer, i.e.:parallel sides for straight walls\nco-centric sides for curved walls.and have either:a straight line axis (straight wall), or\na circular arc axis (round wall).and shall not haveaggregated components, that is, parts aggregated to a wall by IfcRelAggregates\nshape representation for 'Body' not being an extrusion, or clipped extrusionThe following parameter have to be provided:Wall height, taken from the depth of extrusion, provided by the geometric representation.\nWall thickness, taken from the material layer set usage, attached to the wall\nWall offset from axis, taken from the material layer set usage, attached to the wallThe IfcWallStandardCase requires the provision of the wall axis either a straight line that is parallel to the x-axis of the object coordinate system, or a circular arc where the tangent at start is parallel to the x-axis of the object coordinate system. The direction of the wall axis shall be the positive direction of that x-axis.The material of the wall is defined by the IfcMaterialLayerSetUsage and is attached by the IfcRelAssociatesMaterial objectified relationship. It is accessible by the inverse HasAssociations relationship. The material layer set usage has to be given (enforced by where rule).An 'Axis' and a 'Body' shape representation has to be provided, and it is invalid to exchange a 'Tessellation', 'SurfaceModel', 'Brep' or 'MappedRepresentation' representation for the 'Body' shape representation of the IfcWallStandardCase.HISTORY  New entity in IFC2x."
      },
      "IfcWallType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The element type IfcWallType defines commonly shared information for occurrences of walls. The set of shared information may include:common properties within shared property sets\ncommon material information\ncommon material layer definitions\ncommon shape representationsIt is used to define a wall specification (i.e. the specific product information, that is common to all occurrences of that product type). Wall types may be exchanged without being already assigned to occurrences.NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.Occurrences of the IfcWallType within building models are represented by instances of IfcWall. Occurrences of the IfcWallType within structural analysis models are represented by instances of IfcStructuralSurfaceMember, or its applicable subtypes.HISTORY  New entity in IFC2x2.{ .spec-head}\nInformal Propositions:The material assignment, if provided using the IfcRelAssociatesMaterial relationship, shall not reference the IfcMaterialLayerSetUsage.",
        "Psets": {
          "Pset_RoadGuardElement": {
            "Properties": {
              "IsMoveable": {
                "type": "boolean",
                "Description": "True if element is moveable.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTerminal": {
                "type": "boolean",
                "Description": "True if element is a terminal. See class Terminal.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTransition": {
                "type": "boolean",
                "Description": "True if element is a transition. See class Transition.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "TerminalType": {
                "type": "string",
                "Description": "Specifies the kind of terminal if IsTerminal is true."
              }
            }
          },
          "Pset_WallCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Compartmentation": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to serve as a fire compartmentation (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ExtendToStructure": {
                "type": "boolean",
                "Description": "Indicates whether the object extend to the structure above (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\nIt is given according to the national building code that governs the fire behaviour for materials."
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              }
            }
          },
          "Qto_WallBaseQuantities": {
            "Properties": {
              "GrossFootPrintArea": {
                "type": "real",
                "Description": ""
              },
              "GrossSideArea": {
                "type": "real",
                "Description": "Area of the wall as viewed by an elevation view of the middle plane of the wall.  It does not take into account any wall modifications (such as openings)."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetFootPrintArea": {
                "type": "real",
                "Description": ""
              },
              "NetSideArea": {
                "type": "real",
                "Description": "Area of the object as viewed by an elevation view of the middle plane of the object. It does take into account all object modifications (such as openings)."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfWall": {
            "Properties": {
              "BarAllocationType": {
                "type": "PEnum_ReinforcementBarAllocationType",
                "Description": "Defines the type of the reinforcement bar allocation.",
                "values": [
                  "ALTERNATE",
                  "DOUBLE",
                  "NOTDEFINED",
                  "OTHER",
                  "SINGLE",
                  "USERDEFINED"
                ]
              },
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "HorizontalBarPitch": {
                "type": "real",
                "Description": "The pitch length of the horizontal bar."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SpacingBarPitch": {
                "type": "real",
                "Description": "The pitch length of the spacing bar."
              },
              "VerticalBarPitch": {
                "type": "real",
                "Description": "The pitch length of the vertical bar."
              }
            }
          }
        }
      },
      "IfcWindow": {
        "Parent": "IfcBuiltElement",
        "Description": "The window is a building element that is predominately used to provide natural light and fresh air. It includes vertical opening but also horizontal opening such as skylights or light domes. It includes constructions with swinging, pivoting, sliding, or revolving panels and fixed panels. A window consists of a lining and one or several panels. A window can:be a \"free standing\" window, contained in an IfcSpatialElement such as an IfcBuildingStorey.\nfill an opening, typically in a wall. The window will then have a FillsVoids attribute which uses the IfcRelFillsElement relationship to relate the IfcWindow with the IfcOpeningElement;\nbe part of an element assembly, typically an IfcCurtainWall. The window will then have a Decomposes attribute which uses the the IfcRelAggregates relationship to relate the window with the assembly of elements;There are two main representations for window occurrences:IfcWindow entities that have a 3D rectangle 'Profile' shape representation defined. This profile can then be used to parametrically generate the geometry of a window. If not provided, the profile of the IfcOpeningElement can be used if the window fills an opening. The parameters are specified on the relating IfcWindowType that references IfcWindowLiningProperties and IfcWindowPanelProperties for each panel in the window;\nIfcWindow entities that are not parametrically generated and have only 'Brep', or 'SurfaceModel' geometry.In addition, an IfcWindow may commonly include a 'FootPrint' representation defining the 2D shape of the window and its swing.the window width and height\nthe window opening direction (by the positive y-axis of the ObjectPlacement)The IfcWindowType specifies parameters which are common to all of its occurrences of IfcWindow:the partitioning type (single panel, double panel, tripel panel, more panels)\nthe operation type (swing, tilt and turn, pivot revolve, fixed casement, etc.)\nthe window panel hinge side (by using two different styles for right and left opening windows)\nthe particular attributes for the lining by the IfcWindowLiningProperties\nthe particular attributes for the panels by the\u00a0 IfcWindowPanelPropertiesREFERENCE  Definition according to ISO 6707-1 Construction for closing a vertical or near vertical opening in a wall or pitched roof that will admit light and may admit fresh air.\nNOTE  The entity IfcWindowStandardCase has been deprecated. Use an IfcWindow with a 'Profile' representation instead. The IfcWindow should also have an IfcWindowType with ParameterTakesPrecedence set to 'TRUE'.\nIFC4 CHANGE  The attributes PredefinedType and OperationType are added, the applicable type object has been changed to IfcWindowType.\nHISTORY  New entity in IFC1.0.",
        "Psets": {
          "Pset_DoorWindowGlazingType": {
            "Properties": {
              "FillGas": {
                "type": "string",
                "Description": "Name of the gas by which the gap between two glass layers is filled. It is given for information purposes only."
              },
              "GlassColour": {
                "type": "string",
                "Description": ""
              },
              "GlassLayers": {
                "type": "integer",
                "Description": "Number of glass layers within the frame. E.g. \"2\" for double glazing."
              },
              "GlassThickness1": {
                "type": "real",
                "Description": "Thickness of the first (inner) glass layer."
              },
              "GlassThickness2": {
                "type": "real",
                "Description": "Thickness of the second (intermediate or outer) glass layer."
              },
              "GlassThickness3": {
                "type": "real",
                "Description": "Thickness of the third (outer) glass layer."
              },
              "IsCoated": {
                "type": "boolean",
                "Description": "Indication whether the glass is coated with a material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsLaminated": {
                "type": "boolean",
                "Description": "Indication whether the glass is layered with other materials (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTempered": {
                "type": "boolean",
                "Description": "Indication whether the glass is tempered (TRUE) or not (FALSE) .",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsWired": {
                "type": "boolean",
                "Description": "Indication whether the glass includes a contained wire mesh to prevent break-in (TRUE) or not (FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShadingCoefficient": {
                "type": "real",
                "Description": "(SC): The measure of the ability of a glazing to transmit solar heat, relative to that ability for 3 mm (1/8-inch) clear, double-strength, single glass. Shading coefficient is being phased out in favor of the solar heat gain coefficient (SHGC), and is approximately equal to the SHGC multiplied by 1.15. The shading coefficient is expressed as a number without units between 0 and 1."
              },
              "SolarAbsorption": {
                "type": "real",
                "Description": "(Asol) The ratio of incident solar radiation that is absorbed by a glazing system. It is the sum of the absorption distributed to the exterior (a) and to the interior (qi). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "SolarHeatGainTransmittance": {
                "type": "real",
                "Description": "(SHGC): The ratio of incident solar radiation that contributes to the heat gain of the interior, it is the solar radiation that directly passes (Tsol or \u03c4e) plus the part of the absorbed radiation that is distributed to the interior (qi). The SHGC is referred to also as g-value (g = \u03c4e + qi)."
              },
              "SolarReflectance": {
                "type": "real",
                "Description": "(Rsol): The ratio of incident solar radiation that is reflected by a glazing system (also named \u03c1e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "SolarTransmittance": {
                "type": "real",
                "Description": "The ratio of incident solar radiation that directly passes through a system (also named \u03c4e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "ThermalTransmittanceSummer": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of a material.\nSummer thermal transmittance coefficient of the glazing only, often referred to as (U-value)."
              },
              "ThermalTransmittanceWinter": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of a material.\nWinter thermal transmittance coefficient of the glazing only, often referred to as (U-value)."
              },
              "VisibleLightReflectance": {
                "type": "real",
                "Description": "Fraction of the visible light that is reflected by the glazing at normal incidence. It is a value without unit."
              },
              "VisibleLightTransmittance": {
                "type": "real",
                "Description": "Fraction of the visible light that passes the object at normal incidence. It is a value without unit."
              }
            }
          },
          "Pset_WindowCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "GlazingAreaFraction": {
                "type": "real",
                "Description": "Fraction of the glazing area relative to the total area of the filling element.\nIt shall be used, if the glazing area is not given separately for all panels within the filling element."
              },
              "HasDrive": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic drive to operate it (TRUE) or no drive (FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSillExternal": {
                "type": "boolean",
                "Description": "Indication whether the window opening has an external sill (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSillInternal": {
                "type": "boolean",
                "Description": "Indication whether the window opening has an internal sill (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Infiltration": {
                "type": "real",
                "Description": "Infiltration flowrate of outside air for the filler object based on the area of the filler object at a pressure level of 50 Pascals. It shall be used, if the length of all joints is unknown."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalLoadRating": {
                "type": "string",
                "Description": "Mechanical load rating for this object.\nIt is provided according to the national building code."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SecurityRating": {
                "type": "string",
                "Description": "Index based rating system indicating security level.\nIt is giving according to the national building code."
              },
              "SmokeStop": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to provide a smoke stop (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              },
              "WaterTightnessRating": {
                "type": "string",
                "Description": "Water tightness rating for this object.\nIt is provided according to the national building code."
              },
              "WindLoadRating": {
                "type": "string",
                "Description": "Wind load resistance rating for this object.\nIt is provided according to the national building code."
              }
            }
          },
          "Qto_WindowBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "OverallHeight": {
                "type": "real",
                "Description": null
              },
              "OverallWidth": {
                "type": "real",
                "Description": null
              },
              "PartitioningType": {
                "values": [
                  "DOUBLE_PANEL_HORIZONTAL",
                  "DOUBLE_PANEL_VERTICAL",
                  "SINGLE_PANEL",
                  "TRIPLE_PANEL_BOTTOM",
                  "TRIPLE_PANEL_HORIZONTAL",
                  "TRIPLE_PANEL_LEFT",
                  "TRIPLE_PANEL_RIGHT",
                  "TRIPLE_PANEL_TOP",
                  "TRIPLE_PANEL_VERTICAL",
                  "USERDEFINED",
                  "NOTDEFINED"
                ],
                "type": "IfcWindowTypePartitioningEnum",
                "Description": null
              },
              "UserDefinedPartitioningType": {
                "type": "string",
                "Description": null
              },
              "ParameterTakesPrecedence": {
                "type": "boolean",
                "Description": null,
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcWindowType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The element type IfcWindowType defines commonly shared information for occurrences of windows. The set of shared information may include:common properties within shared property sets\ncommon material information\ncommon partitioning of panels\ncommon operation types of panels\ncommon shape representationsA window type defines the particular parameter of the lining and one (or several) panels through the IfcWindowLiningProperties and the IfcWindowPanelProperties as predefined property sets applicable to windows only.It is used to define a window specification, or window style (the specific product information that is common to all occurrences of that window type). Window types may be exchanged without being already assigned to occurrences.Occurrences of the IfcWindowType within building models are represented by instances of IfcWindow.HISTORY  New entity in IFC4. The entity IfcWindowType replaces the previous definition IfcWindowStyle (which is deprecated in IFC4).{ .use-head}\nPartitioning type use definitionThe IfcWindowTypePartitioningEnum defines the general layout of the window type and its symbolic presentation. Depending on the enumerator, the appropriate instances of IfcWindowLiningProperties and IfcWindowPanelProperties are attached in the list of HasPropertySets. The IfcWindowTypePartitioningEnum mainly determines the way of partitioning the window into individual window panels and thereby number and position of window panels.See geometry use definitions at IfcWindowTypePartitioningEnum for the correct usage of panel partitioning and IfcWindowPanelProperties for the opening symbols for different panel operation types.{ .use-head}\nMaterial Use DefinitionThe material of the IfcWindowType is defined by the IfcMaterialConstituentSet or as fall back by IfcMaterial and attached by the IfcRelAssociatesMaterial.RelatingMaterial. It is accessible by the inverse HasAssociations relationship.The following keywords for IfcMaterialConstituentSet.MaterialConstituents[n].Name shall be used:'Lining' - to indicate that the material constituent applies to to the window lining\n'Framing' - to indicate that the material constituent applies to to the window panels, if not provided, the 'Lining' material information applied to panels as well\n'Glazing' - to indicate that the material constituent applies to to the glazing partIf the fall back single IfcMaterial is referenced, it applies to the lining and framing of the window.{ .use-head}\nGeometry Use Definitions:The IfcWindowType may define the common shape of window occurrences. The common shape can be defined byapplying shape parameters defined within the associated IfcWindowLiningProperties and IfcWindowPanelProperties applied to the 'Profile' geometric representation. It is only applicable if the IfcWindowType has only occurrences of type IfcWindowStandardCase (See geometric use definition of IfcWindowStandardCase for further information).\napplying the RepresentationMaps attribute to refer to a list of IfcRepresentationMap's, that allow for multiple geometric representations (e.g. with IfcShapeRepresentation's having an RepresentationIdentifier 'Box', 'Profile', 'FootPrint', or 'Body')\n\nNOTE  The product shape representations are defined as RepresentationMaps (attribute of the supertype IfcTypeProduct), which get assigned by an element occurrence instance through the IfcShapeRepresentation.Item[n] being an IfcMappedItem. See IfcTypeProduct for further information.\nNOTE  The values of attributes RepresentationIdentifier and RepresentationType of IfcShapeRepresentation are restricted in the same way as those for IfcWindow and IfcWindowStandardCase",
        "Psets": {
          "Pset_DoorWindowGlazingType": {
            "Properties": {
              "FillGas": {
                "type": "string",
                "Description": "Name of the gas by which the gap between two glass layers is filled. It is given for information purposes only."
              },
              "GlassColour": {
                "type": "string",
                "Description": ""
              },
              "GlassLayers": {
                "type": "integer",
                "Description": "Number of glass layers within the frame. E.g. \"2\" for double glazing."
              },
              "GlassThickness1": {
                "type": "real",
                "Description": "Thickness of the first (inner) glass layer."
              },
              "GlassThickness2": {
                "type": "real",
                "Description": "Thickness of the second (intermediate or outer) glass layer."
              },
              "GlassThickness3": {
                "type": "real",
                "Description": "Thickness of the third (outer) glass layer."
              },
              "IsCoated": {
                "type": "boolean",
                "Description": "Indication whether the glass is coated with a material (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsLaminated": {
                "type": "boolean",
                "Description": "Indication whether the glass is layered with other materials (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTempered": {
                "type": "boolean",
                "Description": "Indication whether the glass is tempered (TRUE) or not (FALSE) .",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsWired": {
                "type": "boolean",
                "Description": "Indication whether the glass includes a contained wire mesh to prevent break-in (TRUE) or not (FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShadingCoefficient": {
                "type": "real",
                "Description": "(SC): The measure of the ability of a glazing to transmit solar heat, relative to that ability for 3 mm (1/8-inch) clear, double-strength, single glass. Shading coefficient is being phased out in favor of the solar heat gain coefficient (SHGC), and is approximately equal to the SHGC multiplied by 1.15. The shading coefficient is expressed as a number without units between 0 and 1."
              },
              "SolarAbsorption": {
                "type": "real",
                "Description": "(Asol) The ratio of incident solar radiation that is absorbed by a glazing system. It is the sum of the absorption distributed to the exterior (a) and to the interior (qi). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "SolarHeatGainTransmittance": {
                "type": "real",
                "Description": "(SHGC): The ratio of incident solar radiation that contributes to the heat gain of the interior, it is the solar radiation that directly passes (Tsol or \u03c4e) plus the part of the absorbed radiation that is distributed to the interior (qi). The SHGC is referred to also as g-value (g = \u03c4e + qi)."
              },
              "SolarReflectance": {
                "type": "real",
                "Description": "(Rsol): The ratio of incident solar radiation that is reflected by a glazing system (also named \u03c1e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "SolarTransmittance": {
                "type": "real",
                "Description": "The ratio of incident solar radiation that directly passes through a system (also named \u03c4e). Note the following equation Asol + Rsol + Tsol = 1"
              },
              "ThermalTransmittanceSummer": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of a material.\nSummer thermal transmittance coefficient of the glazing only, often referred to as (U-value)."
              },
              "ThermalTransmittanceWinter": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of a material.\nWinter thermal transmittance coefficient of the glazing only, often referred to as (U-value)."
              },
              "VisibleLightReflectance": {
                "type": "real",
                "Description": "Fraction of the visible light that is reflected by the glazing at normal incidence. It is a value without unit."
              },
              "VisibleLightTransmittance": {
                "type": "real",
                "Description": "Fraction of the visible light that passes the object at normal incidence. It is a value without unit."
              }
            }
          },
          "Pset_WindowCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorption values)."
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety classification."
              },
              "GlazingAreaFraction": {
                "type": "real",
                "Description": "Fraction of the glazing area relative to the total area of the filling element.\nIt shall be used, if the glazing area is not given separately for all panels within the filling element."
              },
              "HasDrive": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic drive to operate it (TRUE) or no drive (FALSE)",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSillExternal": {
                "type": "boolean",
                "Description": "Indication whether the window opening has an external sill (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSillInternal": {
                "type": "boolean",
                "Description": "Indication whether the window opening has an internal sill (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Infiltration": {
                "type": "real",
                "Description": "Infiltration flowrate of outside air for the filler object based on the area of the filler object at a pressure level of 50 Pascals. It shall be used, if the length of all joints is unknown."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalLoadRating": {
                "type": "string",
                "Description": "Mechanical load rating for this object.\nIt is provided according to the national building code."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "SecurityRating": {
                "type": "string",
                "Description": "Index based rating system indicating security level.\nIt is giving according to the national building code."
              },
              "SmokeStop": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to provide a smoke stop (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of an element, within the direction of the thermal flow (including all materials)."
              },
              "WaterTightnessRating": {
                "type": "string",
                "Description": "Water tightness rating for this object.\nIt is provided according to the national building code."
              },
              "WindLoadRating": {
                "type": "string",
                "Description": "Wind load resistance rating for this object.\nIt is provided according to the national building code."
              }
            }
          },
          "Qto_WindowBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcDistributionChamberElement": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "A distribution chamber element defines a place at which distribution systems and their constituent elements may be inspected or through which they may travel.An IfcDistributionChamberElement is a formed volume used in a distribution system, such as a sump, trench or manhole. Instances of IfcDistributionSystem or IfcDistributionFlowElement may be related to the IfcDistributionChamberElement enabling their location in or at the chamber to be determined.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Pset_DistributionChamberElementCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_DistributionChamberElementBaseQuantities": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "NetSurfaceArea": {
                "type": "real",
                "Description": "Net surface area of the object, normally generated as perimeter * length + 2 * cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcDistributionChamberElementType": {
        "Parent": "IfcDistributionFlowElementType",
        "Description": "The distribution flow element type IfcDistributionChamberElementType defines commonly shared information for occurrences of distribution chamber elements. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elements\ncommon portsIt is used to define a distribution chamber element type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDistributionChamberElementType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDistributionChamberElementType are represented by instances of IfcDistributionChamberElement. Refer to the documentation at IfcDistributionChamberElement for supported property sets, materials, composition, and ports.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Pset_DistributionChamberElementCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_DistributionChamberElementTypeFormedDuct": {
            "Properties": {
              "AccessCoverLoadRating": {
                "type": "string",
                "Description": "The load rating of the access cover (which may be a value or an alphanumerically defined class rating)."
              },
              "BaseThickness": {
                "type": "real",
                "Description": "The thickness of the base construction, assumed to be constructed at a single thickness."
              },
              "CableDuctOccupancyRatio": {
                "type": "real",
                "Description": "Indicates the ratio between the number of cables in the duct and the maximum number of cables that the duct can contain."
              },
              "ClearDepth": {
                "type": "real",
                "Description": "The clear depth."
              },
              "ClearWidth": {
                "type": "real",
                "Description": "The clear width."
              },
              "WallThickness": {
                "type": "real",
                "Description": "The thickness of the wall construction.\nNOTE: It is assumed that walls will be constructed at a single thickness."
              }
            }
          },
          "Pset_DistributionChamberElementTypeInspectionChamber": {
            "Properties": {
              "AccessCoverLoadRating": {
                "type": "string",
                "Description": "The load rating of the access cover (which may be a value or an alphanumerically defined class rating)."
              },
              "AccessLengthOrRadius": {
                "type": "real",
                "Description": "The length of the chamber access cover or, where the plan shape of the cover is circular, the radius."
              },
              "AccessWidth": {
                "type": "real",
                "Description": "The width of the chamber access cover where the plan shape of the cover is not circular."
              },
              "BaseThickness": {
                "type": "real",
                "Description": "The thickness of the base construction, assumed to be constructed at a single thickness."
              },
              "ChamberLengthOrRadius": {
                "type": "real",
                "Description": "Length or, in the event of the shape being circular in plan, the radius of the chamber."
              },
              "ChamberWidth": {
                "type": "real",
                "Description": "Width, in the event of the shape being non circular in plan."
              },
              "InspectionChamberInvertLevel": {
                "type": "real",
                "Description": "Level of the lowest part of the cross section as measured from ground level."
              },
              "SoffitLevel": {
                "type": "real",
                "Description": "Level of the highest internal part of the cross section as measured from ground level."
              },
              "WallThickness": {
                "type": "real",
                "Description": "The thickness of the wall construction.\nNOTE: It is assumed that walls will be constructed at a single thickness."
              },
              "WithBackdrop": {
                "type": "boolean",
                "Description": "Indicates whether the chamber has a backdrop or tumbling bay (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_DistributionChamberElementTypeInspectionPit": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_DistributionChamberElementTypeManhole": {
            "Properties": {
              "AccessCoverLoadRating": {
                "type": "string",
                "Description": "The load rating of the access cover (which may be a value or an alphanumerically defined class rating)."
              },
              "AccessLengthOrRadius": {
                "type": "real",
                "Description": "The length of the chamber access cover or, where the plan shape of the cover is circular, the radius."
              },
              "AccessWidth": {
                "type": "real",
                "Description": "The width of the chamber access cover where the plan shape of the cover is not circular."
              },
              "BaseThickness": {
                "type": "real",
                "Description": "The thickness of the base construction, assumed to be constructed at a single thickness."
              },
              "HasSteps": {
                "type": "boolean",
                "Description": "Indicates whether the chamber has steps (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InvertLevel": {
                "type": "real",
                "Description": "Level of the lowest part of the cross section as measured from ground level."
              },
              "IsAccessibleOnFoot": {
                "type": "boolean",
                "Description": "Indicates whether the element is accessible on foot (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsLocked": {
                "type": "boolean",
                "Description": "Indicates whether the element is locked (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsShallow": {
                "type": "boolean",
                "Description": "Indicates whether the chamber has been designed as being shallow (TRUE) or deep (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NumberOfCableEntries": {
                "type": "integer",
                "Description": "Indicates the number of cable entries in the manhole."
              },
              "NumberOfManholeCovers": {
                "type": "integer",
                "Description": "Indicates the number of manhole covers."
              },
              "SoffitLevel": {
                "type": "real",
                "Description": "Level of the highest internal part of the cross section as measured from ground level."
              },
              "TypeOfShaft": {
                "type": "PEnum_TypeOfShaft",
                "Description": "Additional information on the purpose of the shaft.",
                "values": [
                  "DIVERSIONSHAFT",
                  "FLUSHINGCHAMBER",
                  "GATESHAFT",
                  "GULLY",
                  "INSPECTIONCHAMBER",
                  "NOTKNOWN",
                  "OTHER",
                  "PUMPSHAFT",
                  "ROOFWATERSHAFT",
                  "SHAFTWITHCHECKVALVE",
                  "SLURRYCOLLECTOR",
                  "SOAKAWAY",
                  "UNSET",
                  "WELL"
                ]
              },
              "WallThickness": {
                "type": "real",
                "Description": "The thickness of the wall construction.\nNOTE: It is assumed that walls will be constructed at a single thickness."
              },
              "WithBackdrop": {
                "type": "boolean",
                "Description": "Indicates whether the chamber has a backdrop or tumbling bay (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_DistributionChamberElementTypeMeterChamber": {
            "Properties": {
              "BaseThickness": {
                "type": "real",
                "Description": "The thickness of the base construction, assumed to be constructed at a single thickness."
              },
              "ChamberLengthOrRadius": {
                "type": "real",
                "Description": "Length or, in the event of the shape being circular in plan, the radius of the chamber."
              },
              "ChamberWidth": {
                "type": "real",
                "Description": "Width, in the event of the shape being non circular in plan."
              },
              "WallThickness": {
                "type": "real",
                "Description": "The thickness of the wall construction.\nNOTE: It is assumed that walls will be constructed at a single thickness."
              }
            }
          },
          "Pset_DistributionChamberElementTypeSump": {
            "Properties": {
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "SumpInvertLevel": {
                "type": "real",
                "Description": "The lowest point in the cross section of the sump."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_DistributionChamberElementTypeTrench": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "InvertLevel": {
                "type": "real",
                "Description": "Level of the lowest part of the cross section as measured from ground level."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          },
          "Pset_DistributionChamberElementTypeValveChamber": {
            "Properties": {
              "BaseThickness": {
                "type": "real",
                "Description": "The thickness of the base construction, assumed to be constructed at a single thickness."
              },
              "ChamberLengthOrRadius": {
                "type": "real",
                "Description": "Length or, in the event of the shape being circular in plan, the radius of the chamber."
              },
              "ChamberWidth": {
                "type": "real",
                "Description": "Width, in the event of the shape being non circular in plan."
              },
              "WallThickness": {
                "type": "real",
                "Description": "The thickness of the wall construction.\nNOTE: It is assumed that walls will be constructed at a single thickness."
              }
            }
          },
          "Qto_DistributionChamberElementBaseQuantities": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "NetSurfaceArea": {
                "type": "real",
                "Description": "Net surface area of the object, normally generated as perimeter * length + 2 * cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              }
            }
          }
        }
      },
      "IfcDistributionControlElement": {
        "Parent": "IfcDistributionElement",
        "Description": "The distribution element IfcDistributionControlElement defines occurrence elements of a building automation control system that are used to impart control over elements of a distribution system.IfcDistributionControlElement defines elements of a building automation control system. These are typically used to control distribution system elements to maintain variables such as temperature, humidity, pressure, flow, power, or lighting levels, through the modulation, staging or sequencing of mechanical or electrical devices. The three general functional categories of control elements are as follows:Impart control over flow control elements (IfcFlowController) in a distribution system such as dampers, valves, or relays, typically through the use of actuation (IfcActuator).\nSensing elements (IfcSensor) that measure changes in the controlled variable such as temperature, humidity, pressure, or flow.\nControllers (IfcController) typically classified according to the control action they seek to perform and generally responsible for making decisions about the elements under control.Since IfcDistributionControlElement and its subtypes typically relate to many different distribution flow elements (IfcDistributionFlowElement), the objectified relationship IfcRelFlowControlElements has been provided to relate control and flow elements as required.The key distinction between IfcDistributionFlowElement and IfcDistributionControlElement is whether it is internal or external to the flow system, respectively. For example, the distinction between IfcFlowMeter (subtype of IfcDistributionFlowElement measuring a flow quantity) and IfcFlowInstrument (subtype of IfcDistributionControlElement measuring a flow quality), is based on this principal. A physical device that connects within the flow system in which it measures (having inlet/outlet pipes for the measured substance) follows the IfcDistributionFlowElement hierarchy (and therefore IfcFlowMeter which measures the flow internally). Otherwise, if it monitors/controls but does not connect inline within the flow system (it is external or is a component of another device), then it follows the IfcDistributionControlElement hierarchy (and therefore IfcFlowInstrument which may display various attributes through connected sensors).HISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE  Attribute ControlElementId attribute deleted; replaced by classification usage. Ports are now primarily defined using IfcRelNests to enable definition of ports at type definitions (both forward and backward compatible), provide a logical order, and reduce the number of relationship objects needed. The relationship IfcRelConnectsPortToElement is still supported, however is now specific to dynamically connected ports."
      },
      "IfcDistributionControlElementType": {
        "Parent": "IfcDistributionElementType",
        "Description": "The element type IfcDistributionControlElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (the specific product information that is common to all occurrences of that product type).Distribution control element types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.The occurrences of the IfcDistributionControlElementType are represented by instances of IfcDistributionControlElement or its subtypes.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Ports may now be defined using IfcRelNests to enable definition of ports at type definitions (both forward and backward compatible), provide a logical order, and reduce the number of relationship objects needed. The relationship IfcRelConnectsPortToElement is still supported on occurrence objects, however is now specific to dynamically connected ports."
      },
      "IfcDistributionFlowElement": {
        "Parent": "IfcDistributionElement",
        "Description": "The distribution element IfcDistributionFlowElement defines occurrence elements of a distribution system that facilitate the distribution of energy or matter, such as air, water or power.EXAMPLE  Examples of distribution flow elements are ducts, pipes, wires, fittings, and equipment.\nHISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE  Ports are now primarily defined using IfcRelNests to enable definition of ports at type definitions (both forward and backward compatible), provide a logical order, and reduce the number of relationship objects needed. The relationship IfcRelConnectsPortToElement is still supported, however is now specific to dynamically connected ports."
      },
      "IfcDistributionFlowElementType": {
        "Parent": "IfcDistributionElementType",
        "Description": "The element type IfcDistributionFlowElementType defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (the specific product information that is common to all occurrences of that product type).Distribution flow element types (orthe instantiable subtypes) may be exchanged without being already assigned to occurrences.The occurrences of the IfcDistributionFlowElementType are represented by instances of IfcDistributionFlowElement or its subtypes.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Ports may now be defined using IfcRelNests to enable definition of ports at type definitions (both forward and backward compatible), provide a logical order, and reduce the number of relationship objects needed. The relationship IfcRelConnectsPortToElement is still supported on occurrence objects, however is now specific to dynamically connected ports."
      },
      "IfcDistributionPort": {
        "Parent": "IfcPort",
        "Description": "A distribution port is an inlet or outlet of a product through which a particular substance may flow.Distribution ports are used for passage of solid, liquid, or gas substances, as well as electricity for power or communications. Flow segments (pipes, ducts, cables) may be used to connect ports across products. Distribution ports are defined by system type and flow direction such that for two ports to be connected, they must share the same system type and have opposite flow directions (one side being a SOURCE and the other being a SINK). Ports are similar to openings in that they do not have any visible geometry; such geometry is captured at the shape representation of the enclosing element or element type. Ports may have placement that indicates the position and orientation of the connection.Ports are assigned the distribution systems in order to indicate its role in a particular system, e.g. cold water inlet.HISTORY  New entity in IFC2x2{ .change-ifc2x4}",
        "Psets": {
          "Pset_DistributionPortCommon": {
            "Properties": {
              "ColourCode": {
                "type": "string",
                "Description": ""
              },
              "PortNumber": {
                "type": "integer",
                "Description": "The port index for logically ordering the port within the containing element or element type."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "FlowDirection": {
                "values": [
                  "SINK",
                  "SOURCE",
                  "SOURCEANDSINK",
                  "NOTDEFINED"
                ],
                "type": "IfcFlowDirectionEnum",
                "Description": null
              },
              "SystemType": {
                "values": [
                  "AIRCONDITIONING",
                  "AUDIOVISUAL",
                  "CATENARY_SYSTEM",
                  "CHEMICAL",
                  "CHILLEDWATER",
                  "COMMUNICATION",
                  "COMPRESSEDAIR",
                  "CONDENSERWATER",
                  "CONTROL",
                  "CONVEYING",
                  "DATA",
                  "DISPOSAL",
                  "DOMESTICCOLDWATER",
                  "DOMESTICHOTWATER",
                  "DRAINAGE",
                  "EARTHING",
                  "ELECTRICAL",
                  "ELECTROACOUSTIC",
                  "EXHAUST",
                  "FIREPROTECTION",
                  "FIXEDTRANSMISSIONNETWORK",
                  "FUEL",
                  "GAS",
                  "HAZARDOUS",
                  "HEATING",
                  "LIGHTING",
                  "LIGHTNINGPROTECTION",
                  "MOBILENETWORK",
                  "MONITORINGSYSTEM",
                  "MUNICIPALSOLIDWASTE",
                  "OIL",
                  "OPERATIONAL",
                  "OPERATIONALTELEPHONYSYSTEM",
                  "OVERHEAD_CONTACTLINE_SYSTEM",
                  "POWERGENERATION",
                  "RAINWATER",
                  "REFRIGERATION",
                  "RETURN_CIRCUIT",
                  "SECURITY",
                  "SEWAGE",
                  "SIGNAL",
                  "STORMWATER",
                  "TELEPHONE",
                  "TV",
                  "VACUUM",
                  "VENT",
                  "VENTILATION",
                  "WASTEWATER",
                  "WATERSUPPLY",
                  "USERDEFINED",
                  "NOTDEFINED"
                ],
                "type": "IfcDistributionSystemEnum",
                "Description": null
              }
            }
          }
        }
      },
      "IfcDistributionSystem": {
        "Parent": "IfcSystem",
        "Description": "A distribution system is a network designed to receive, store, maintain, distribute, or control the flow of a distribution media. A common example is a heating hot water system that consists of a pump, a tank, and an interconnected piping system for distributing hot water to terminals.The group IfcDistributionSystem defines the occurrence of a specialized system for use within the context of building services or utilities for built facilities.Important functionalities for the description of a distribution system are derived from existing IFC entities:From IfcSystem it inherits the ability to couple the built system via IfcRelReferencedInSpatialStructure to one or more IfcSpatialElement subtypes as necessary.\n\n\nFrom IfcGroup it inherits the inverse attribute IsGroupedBy, pointing to the relationship class IfcRelAssignsToGroup. This allows the grouping of distribution elements (instances of IfcDistributionElement subtypes).\n\n\nFrom IfcObjectDefinition it inherits the inverse attribute IsDecomposedBy pointing to the relationship class IfcRelAggregates. It provides the hierarchy between the separate (partial) distribution systems. For example, an electrical main circuit may be aggregated into branch circuits.HISTORY  New entity in IFC4.{ .change-ifc2x4}IFC4 CHANGE  For electrical power systems, IfcElectricalCircuit has been used for low-voltage (12-1000 V) power circuits and has been replaced by IfcDistributionCircuit in IFC4; IfcDistributionSystem with PredefinedType 'ELECTRICAL' should be used for overall power systems, and IfcDistributionCircuit with PredefinedType 'ELECTRICAL' should be used for each switched circuit.",
        "Psets": {
          "Pset_ProcessCapacity": {
            "Properties": {
              "ProcessCapacity": {
                "type": "integer",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance"
              },
              "ProcessItem": {
                "type": "PEnum_ProcessItem",
                "Description": "The type of item (and its measurement method) being modelled within a process. This can be cargo, passengers or vehicles that pass through the system.",
                "values": [
                  "BARREL",
                  "CGT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "TEU",
                  "TONNE",
                  "UNSET",
                  "VEHICLE"
                ]
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity."
              }
            }
          },
          "Pset_DistributionSystemCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcEnergyConversionDevice": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element IfcEnergyConversionDevice defines the occurrence of a device used to perform energy conversion or heat transfer and typically participates in a flow distribution system. Its type is defined by IfcEnergyConversionDeviceType or its subtypes.HISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE  This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcEnergyConversionDeviceType": {
        "Parent": "IfcDistributionFlowElementType",
        "Description": "The element type IfcEnergyConversionType defines a list of commonly shared property set definitions of an energy conversion device and an optional set of product representations. It is used to define an energy conversion device specification (the specific product information, that is common to all occurrences of that product type).A energy conversion type is used to define the common properties of a energy conversion device that may be applied to many occurrences of that type. An energy conversion device is a building systems device that converts energy from one form into another such as a boiler (combusting gas to heat water), chiller (using a refrigeration cycle to cool a liquid), or a cooling coil (using the phase-change characteristics of a refrigerant to cool air). Energy conversion types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.Occurrences of the IfcEnergyConversionType are represented by instances of IfcEnergyConversionDevice or its subtypes.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcFlowController": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element IfcFlowController defines the occurrence of elements of a distribution system that are used to regulate flow through a distribution system. Examples include dampers, valves, switches, and relays. Its type is defined by IfcFlowControllerType or subtypes.HISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE  This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcFlowControllerType": {
        "Parent": "IfcDistributionFlowElementType",
        "Description": "The element type IfcFlowControllerType defines a list of commonly shared property set definitions of a flow controller and an optional set of product representations. It is used to define a flow controller specification (i.e. the specific product information, that is common to all occurrences of that product type).A flow controller type is used to define the common properties of a flow controller that may be applied to many occurrences of that type. A flow controller is a device that regulates flow within a distribution system, such as a valve in a piping system, modulating damper in an air distribution system, or electrical switch in an electrical distribution system. Flow controller types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.Occurrences of the IfcFlowControllerType are represented by instances of IfcFlowController or its subtypes.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcFlowFitting": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element IfcFlowFitting defines the occurrence of a junction or transition in a flow distribution system, such as an elbow or tee. Its type is defined by IfcFlowFittingType or its subtypes.HISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE  This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead."
      },
      "IfcFlowFittingType": {
        "Parent": "IfcDistributionFlowElementType",
        "Description": "The element type IfcFlowFittingType defines a list of commonly shared property set definitions of a flow fitting and an optional set of product representations. It is used to define a flow fitting specification (i.e. the specific product information, that is common to all occurrences of that product type).A flow fitting type is used to define the common properties of a flow fitting that may be applied to many occurrences of that type. A flow fitting is a device that is used to interconnect flow segments or other fittings within a distribution system, such as a tee in a ducted system that branches flow into two directions, or a junction box in an electrical distribution system. Flow fitting types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.Occurrences of the IfcFlowFittingType are represented by instances of IfcFlowFitting or its subtypes.HISTORY  New entity in IFC2x2."
      },
      "IfcFlowMovingDevice": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element IfcFlowMovingDevice defines the occurrence of an apparatus used to distribute, circulate or perform conveyance of fluids, including liquids and gases (such as a pump or fan), and typically participates in a flow distribution system. Its type is defined by IfcFlowMovingDeviceType or its subtypes.HISTORY  New entity in IFC2x.{ .change-ifc2x4}IFC4 CHANGE  This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcFlowMovingDeviceType": {
        "Parent": "IfcDistributionFlowElementType",
        "Description": "The element type IfcFlowMovingDeviceType defines a list of commonly shared property set definitions of a flow moving device and an optional set of product representations. It is used to define a flow moving device specification (i.e. the specific product information, that is common to all occurrences of that product type).A flow moving type is used to define the common properties of a flow moving device that may be applied to many occurrences of that type. A flow moving device is a device that is used to produce a pressure differential in a distribution system, such as a pump, fan, or compressor. Flow moving types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.The occurrences of the IfcFlowMovingDeviceType are represented by instances of IfcFlowMovingDevice or its subtypes.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcFlowSegment": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element IfcFlowSegment defines the occurrence of a segment of a flow distribution system.The IfcFlowSegment defines a particular occurrence of a segment inserted in the spatial context of a project. The parameters defining the type of the segment and/or its shape are defined by the IfcFlowSegmentType, which is related by the inverse relationship IsDefinedBy pointing to IfcRelDefinesByType.HISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE  This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead."
      },
      "IfcFlowSegmentType": {
        "Parent": "IfcDistributionFlowElementType",
        "Description": "The element type IfcFlowSegmentType defines a list of commonly shared property set definitions of a flow segment and an optional set of product representations. It is used to define a flow segment specification (the specific product information, that is common to all occurrences of that product type).A flow segment type is used to define the common properties of a flow segment that may be applied to many occurrences of that type. A flow segment is a section of a distribution system, such as a duct, pipe, or conduit, that typically has only two ports. Flow segment types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.Occurrences of the IfcFlowSegmentType are represented by instances of IfcFlowSegment or its subtypes.HISTORY  New entity in IFC2x2."
      },
      "IfcFlowStorageDevice": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element IfcFlowStorageDevice defines the occurrence of a device that participates in a distribution system and is used for temporary storage (such as a tank). Its type is defined by IfcFlowStorageDeviceType or its subtypes.HISTORY  New entity in IFC2x.{ .change-ifc2x4}IFC4 CHANGE  This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcFlowStorageDeviceType": {
        "Parent": "IfcDistributionFlowElementType",
        "Description": "The element type IfcFlowStorageDeviceType defines a list of commonly shared property set definitions of a flow storage device and an optional set of product representations. It is used to define a flow storage device specification (the specific product information that is common to all occurrences of that product type).A flow storage device is a device used for the temporary storage of a fluid (such as a tank) or the voltage potential induced by the induced electron flow (such as a battery). Flow storage types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.The occurrences of the IfcFlowStorageDeviceType are represented by instances of IfcFlowStorageDevice or its subtypes.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcFlowTerminal": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element IfcFlowTerminal defines the occurrence of a permanently attached element that acts as a terminus or beginning of a distribution system (such as an air outlet, drain, water closet, or sink). A terminal is typically a point at which a system interfaces with an external environment. Its type is defined by IfcFlowTerminalType or its subtypes.HISTORY  New entity in IFC2.0.{ .change-ifc2x4}IFC4 CHANGE  This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcFlowTerminalType": {
        "Parent": "IfcDistributionFlowElementType",
        "Description": "The element type IfcFlowTerminalType defines a list of commonly shared property set definitions of a flow terminal and an optional set of product representations. It is used to define a flow terminal specification (the specific product information that is common to all occurrences of that product type).A flow terminal type is used to define the common properties of a flow terminal that may be applied to many occurrences of that type. A flow terminal acts as a terminus or beginning element in a distribution system such as a ceiling register in a ducted air distribution system, a sink in a waste-water system, or a light fixture in an electrical lighting system. Flow terminal types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.The occurrences of the IfcFlowTerminalType are represented by instances of IfcFlowTerminal or its subtypes.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcFlowTreatmentDevice": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element IfcFlowTreatmentDevice defines the occurrence of a device typically used to remove unwanted matter from a fluid, either liquid or gas, and typically participates in a flow distribution system. Its type is defined by IfcFlowTreatmentDeviceType or its subtypes.HISTORY  New entity in IFC2x.{ .change-ifc2x4}IFC4 CHANGE  This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcFlowTreatmentDeviceType": {
        "Parent": "IfcDistributionFlowElementType",
        "Description": "The element type IfcFlowTreatmentDeviceType defines a list of commonly shared property set definitions of a flow treatment device and an optional set of product representations. It is used to define a flow treatment device specification (the specific product information that is common to all occurrences of that product type).A flow treatment device is a device used to change the physical properties of the medium, such as an air, oil or water filter (used to remove particulates from the fluid), or a duct silencer (used to attenuate noise). Flow treatment types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.The occurrences of the IfcFlowTreatmentDeviceType are represented by instances of IfcFlowTreatmentDevice or its subtypes.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_ElementSize": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcBuildingElementPart": {
        "Parent": "IfcElementComponent",
        "Description": "IfcBuildingElementPart represents major components as subordinate parts of a building element. Typical usage examples include precast concrete sandwich walls, where the layers may have different geometry representations. In this case the layered material representation does not sufficiently describe the element. Each layer is represented by an own instance of the IfcBuildingElementPart with its own geometry description.The kind of building element part is further specified by a corresponding instance of IfcBuildingElementPartType, referred to by IfcRelDefinesByType.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Moved from IfcStructuralElementsDomain schema to IfcSharedComponentElements schema, compatible change of supertype, attribute PredefinedType added."
      },
      "IfcDiscreteAccessory": {
        "Parent": "IfcElementComponent",
        "Description": "A discrete accessory is a representation of different kinds of accessories included in or added to elements.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Attribute PredefinedType added.",
        "Psets": {
          "Pset_DiscreteAccessoryCornerFixingPlate": {
            "Properties": {
              "CornerFixingPlateFlangeWidthInPlaneX": {
                "type": "real",
                "Description": "The flange width of the L-shaped corner plate in plane X."
              },
              "CornerFixingPlateFlangeWidthInPlaneZ": {
                "type": "real",
                "Description": "The flange width of the L-shaped corner plate in plane Z."
              },
              "CornerFixingPlateLength": {
                "type": "real",
                "Description": "The length of the L-shaped corner plate."
              },
              "CornerFixingPlateThickness": {
                "type": "real",
                "Description": "The thickness of the L-shaped corner plate."
              }
            }
          },
          "Pset_DiscreteAccessoryDiagonalTrussConnector": {
            "Properties": {
              "DiagonalTrussBaseBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the base bar."
              },
              "DiagonalTrussCrossBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the diagonal cross-bars."
              },
              "DiagonalTrussCrossBarSpacing": {
                "type": "real",
                "Description": "The spacing between diagonal cross-bar sections."
              },
              "DiagonalTrussHeight": {
                "type": "real",
                "Description": "The overall height of the truss connector."
              },
              "DiagonalTrussLength": {
                "type": "real",
                "Description": "The overall length of the truss connector."
              },
              "DiagonalTrussSecondaryBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the secondary bar."
              }
            }
          },
          "Pset_DiscreteAccessoryEdgeFixingPlate": {
            "Properties": {
              "EdgeFixingPlateFlangeWidthInPlaneX": {
                "type": "real",
                "Description": "The flange width of the L-shaped edge plate in plane X."
              },
              "EdgeFixingPlateFlangeWidthInPlaneZ": {
                "type": "real",
                "Description": "The flange width of the L-shaped edge plate in plane Z."
              },
              "EdgeFixingPlateLength": {
                "type": "real",
                "Description": "The length of the L-shaped edge plate."
              },
              "EdgeFixingPlateThickness": {
                "type": "real",
                "Description": "The thickness of the L-shaped edge plate."
              }
            }
          },
          "Pset_DiscreteAccessoryFixingSocket": {
            "Properties": {
              "FixingSocketHeight": {
                "type": "real",
                "Description": "The overall height of the fixing socket."
              },
              "FixingSocketThreadDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the thread."
              },
              "FixingSocketThreadLength": {
                "type": "real",
                "Description": "The length of the threaded part of the fixing socket."
              }
            }
          },
          "Pset_DiscreteAccessoryLadderTrussConnector": {
            "Properties": {
              "LadderTrussBaseBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the base bar."
              },
              "LadderTrussCrossBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the straight cross-bars."
              },
              "LadderTrussCrossBarSpacing": {
                "type": "real",
                "Description": "The spacing between the straight cross-bars."
              },
              "LadderTrussHeight": {
                "type": "real",
                "Description": "The overall height of the truss connector."
              },
              "LadderTrussLength": {
                "type": "real",
                "Description": "The overall length of the truss connector."
              },
              "LadderTrussSecondaryBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the secondary bar."
              }
            }
          },
          "Pset_DiscreteAccessoryStandardFixingPlate": {
            "Properties": {
              "StandardFixingPlateDepth": {
                "type": "real",
                "Description": "The depth of the standard fixing plate."
              },
              "StandardFixingPlateThickness": {
                "type": "real",
                "Description": "The thickness of the standard fixing plate."
              },
              "StandardFixingPlateWidth": {
                "type": "real",
                "Description": "The width of the standard fixing plate."
              }
            }
          },
          "Pset_DiscreteAccessoryWireLoop": {
            "Properties": {
              "WireDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the wire."
              },
              "WireEmbeddingLength": {
                "type": "real",
                "Description": "The length of the part of wire which is embedded in the precast concrete element."
              },
              "WireLoopBasePlateLength": {
                "type": "real",
                "Description": "The length of the base plate."
              },
              "WireLoopBasePlateThickness": {
                "type": "real",
                "Description": "The thickness of the base plate."
              },
              "WireLoopBasePlateWidth": {
                "type": "real",
                "Description": "The width of the base plate."
              },
              "WireLoopLength": {
                "type": "real",
                "Description": "The length of the fastening loop part of the wire."
              }
            }
          }
        }
      },
      "IfcDiscreteAccessoryType": {
        "Parent": "IfcElementComponentType",
        "Description": "The element component type IfcDiscreteAccessoryType defines commonly shared information for occurrences of discrete accessories. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a discrete accessory type specification indicating the specific product information that is common to all occurrences of that product type. The IfcDiscreteAccessoryType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcDiscreteAccessoryType are represented by instances of IfcDiscreteAccessory.HISTORY  New entity in IFC4.{ .use-head}\nType Use DefinitionThe exact type information of the IfcDiscreteAccessoryType is given in the PredefinedType attribute, possibly in combination with the ElementType attribute inherited from IfcElementType. Standard ElementType designations are provided for guideline below. The list is not exhaustive and the list of definitions may be extended based on local agreements.Corbels as separate components:'Hidden steel corbel': Corbel system made from steel components embedded into the master element.\n'Visible steel corbel': Corbel system made from steel components protruding from the master element.\n'Visible concrete corbel': Corbel system made as a separate precast concrete component added to the master element.Connecting accessories, for example for sandwich wall panels:'Diagonal truss connector': A fixing device in truss form with diagonal cross bars holding two precast concrete panels together in a sandwich wall panel.\n'Ladder truss connector': A fixing device in truss form with straight cross bars in ladder form holding two precast concrete panels together in a sandwich wall panel.\n'Panel suspender': A straight fixing device holding two precast concrete panels together in a sandwich wall panel.Electrical accessories for precast concrete elements:'Protective plug': Protective plug used in element for protecting electrical accessories during manufacturing, transportation and assembly.Fixing parts:'Standard fixing plate': Standard fixing plate.\n'Edge fixing plate': Fixing plate attached to the edge of an element.\n'Corner fixing plate': Fixing plate attached to the corner of an element.\n'Slab fixing plate': Fixing plate for slabs.\n'Channel fixing': Fixing channels, often realized as cast-in channels.\n'Balcony hinge': Accessory supporting and fixing balconies.\n'Frame shoe': Fixing shoe for frames.\n'Thermo frame': Thermo frame.\n'Column shoe': Fixing shoe for columns.\n'Wall shoe': Fixing shoe for walls.\n'Fixing socket': Fixing socket.Joint accessories:'Neoprene bearing plate': Rubber plate used as a bearing in, for example, joints between column corbels and beams.\n'Working joint reinforcement': Reinforcement accessory used in working joints.\n'Expansion joint reinforcement': Reinforcement accessory used in expansion joints.\n'Ribbed steel bar extension': Extension accessory made of a ribbed (reinforcement) bar used in joints.\n'Steel pin bolt': Pin bolt used to join together, for example, columns and beams.\n'Concrete dowel': Dowel pin used in joints.\n'Concrete groove': A groove made in a joint.\n'Steel plate': A steel plate used as an accessory in a joint.\n'Wire loop': A joint connector accessory made from a wire loop.\n'Steel loop': A joint connector accessory made from a steel bar loop.\n'Sealing strip': A strip sealing the joint.\n'Sealing compound': Sealing compound protecting and sealing the joint.Lifting accessories:'Wire lifting hook': A lifting aid in the form of a wire loop.\n'Steel lifting hook': A lifting aid in the form of a steel bar loop.\n'Lifting socket': A lifting aid in the form of a socket.\n'Steel lifting anchor': A lifting aid in the form of a steel lifting anchor.\n'Lifting hole': A lifting aid in the form of a hole.Accessories mainly used in the building services domain:'Antivibration' : An isolating device to prevent other elements to be effected by vibrations.\n'Drop rod' : A length of material providing a hanging support to a bracket. Note that a drop rod is considered to include nuts and washers required for securing.\n'Duct foot' : A base support used to receive a vertical pipe .\n'Framing' : A frame placed around a penetration to prevent scraping against the building surface or structure.\n'Grommet' : An element placed within a penetration that seals the penetration for a particular reason.\n'Rack' : A set of shelving for the purposes of storage that may be freestanding or bolted to a structure.\n'Safety part' : A part, typically installed in vertical shafts at each level, to ensure safety from falling when entering the shaft.\n'Sleeve' : A thin barrier placed between a penetration and a penetrating element.\n'Support section' : A section of material that is used as an intermediate support upon which multiple brackets can be mounted.",
        "Psets": {
          "Pset_DiscreteAccessoryTypeBracket": {
            "Properties": {
              "IsInsulated": {
                "type": "boolean",
                "Description": "Indicates whether the element is insulated or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_DiscreteAccessoryTypeCableArranger": {
            "Properties": {
              "CableArrangerPosition": {
                "type": "PEnum_ArrangerPositionEnum",
                "Description": "Indicates the directional position of the cable arranger: vertical, horizontal, front or rear. It is relative to the element (usually a cabinet) that the cable arranger is affiliated.",
                "values": [
                  "FRONTSIDE",
                  "HORIZONTAL",
                  "NOTKNOWN",
                  "OTHER",
                  "REARSIDE",
                  "UNSET",
                  "VERTICAL"
                ]
              }
            }
          },
          "Pset_DiscreteAccessoryTypeInsulator": {
            "Properties": {
              "BendingStrength": {
                "type": "real",
                "Description": "Defining values: \u03b1; defined values: bending strength."
              },
              "BreakdownVoltageTolerance": {
                "type": "real",
                "Description": "Nominal value of the spark gap breakdown voltage tolerance."
              },
              "CreepageDistance": {
                "type": "real",
                "Description": "Shortest distance or the sum of the shortest distances along the surface on an insulator between two conductive parts which normally have the operating voltage between them. (IEV ref 471-01-04)"
              },
              "InstallationMethod": {
                "type": "string",
                "Description": "Method of installation of cable/conductor. Installation methods are typically defined by reference in standards such as IEC 60364-5-52, table 52A-1 or BS7671 Appendix 4 Table 4A1 etc. Selection of the value to be used should be determined from such a standard according to local usage."
              },
              "InsulationMethod": {
                "type": "PEnum_InsulatorType",
                "Description": "The method used to insulate.",
                "values": [
                  "LONGRODINSULATOR",
                  "NOTKNOWN",
                  "OTHER",
                  "PININSULATOR",
                  "POSTINSULATOR",
                  "UNSET"
                ]
              },
              "InsulationVoltage": {
                "type": "real",
                "Description": "The insulation voltage."
              },
              "LightningPeakVoltage": {
                "type": "real",
                "Description": "The peak lightning voltage that the insulator could withstand."
              },
              "RMSWithstandVoltage": {
                "type": "real",
                "Description": "Rms value of sinusoidal power frequency voltage that the insulation of the given equipment can withstand during tests made under specified conditions and for a specified duration. (IEV ref 614-03-22\uff09"
              }
            }
          },
          "Pset_DiscreteAccessoryTypeLock": {
            "Properties": {
              "RequiredClosureSpacing": {
                "type": "real",
                "Description": "Required length of the closure spacing."
              }
            }
          },
          "Pset_DiscreteAccessoryTypeRailBrace": {
            "Properties": {
              "IsTemporary": {
                "type": "boolean",
                "Description": "Indicates if the installation of the element is temporary or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_DiscreteAccessoryTypeRailLubrication": {
            "Properties": {
              "LubricationPowerSupplyType": {
                "type": "PEnum_LubricationPowerSupply",
                "Description": "Type of power supply method used by the rail lubrication.",
                "values": [
                  "ELECTRIC",
                  "NOTKNOWN",
                  "OTHER",
                  "PHOTOVOLTAIC",
                  "UNSET"
                ]
              },
              "LubricationSystemType": {
                "type": "PEnum_LubricationSystemType",
                "Description": "Design and type of lubricating system e.g. active, passive.",
                "values": [
                  "ACTIVE_LUBRICATION",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSIVE_LUBRICATION",
                  "UNSET"
                ]
              },
              "MaximumNoiseEmissions": {
                "type": "real",
                "Description": "Maximum noise emissions limit at this location."
              },
              "PositionInTrack": {
                "type": "PEnum_RelativePosition",
                "Description": "Indicates the relative position of the element in track, which lies to the left or right as facing in the direction of increasing stationing values.",
                "values": [
                  "LEFT",
                  "MIDDLE",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHT",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_DiscreteAccessoryTypeRailPad": {
            "Properties": {
              "RailPadStiffness": {
                "type": "PEnum_RailPadStiffness",
                "Description": "Indicates the stiffness of a rail pad.",
                "values": [
                  "MEDIUM",
                  "NOTKNOWN",
                  "OTHER",
                  "SOFT",
                  "STIFF",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_DiscreteAccessoryTypeSlidingChair": {
            "Properties": {
              "IsSelfLubricated": {
                "type": "boolean",
                "Description": "Indicates whether the element is self lubricated or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_DiscreteAccessoryTypeSoundAbsorption": {
            "Properties": {
              "SoundAbsorptionLimit": {
                "type": "real",
                "Description": "Mandatory limit values in sound absorption."
              }
            }
          },
          "Pset_DiscreteAccessoryTypeTensioningEquipment": {
            "Properties": {
              "HasBreakLineLock": {
                "type": "boolean",
                "Description": "Indicates whether the equipment has the function of brake line lock or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "RatioOfWireTension": {
                "type": "real",
                "Description": "The ratio of wire tension to tensioner weight."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              },
              "TransmissionEfficiency": {
                "type": "real",
                "Description": "Transmission efficiency of the tensioning equipment."
              }
            }
          },
          "Pset_SectioningDevice": {
            "Properties": {
              "SectioningDeviceType": {
                "type": "PEnum_SectioningDeviceType",
                "Description": "Indicates the sectioning device type.",
                "values": [
                  "DIFFERENT_POWER_SUPPLY_SEPARATION",
                  "NOTKNOWN",
                  "OTHER",
                  "PHASE_SEPARATION",
                  "SAME_FEEDING_SECTION_SEPARATION",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_SectionInsulator": {
            "Properties": {
              "ACResistance": {
                "type": "real",
                "Description": "The resistance under AC."
              },
              "IsArcSuppressing": {
                "type": "boolean",
                "Description": "Indicates whether the element has the ability to suppress an arc.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NumberOfWires": {
                "type": "integer",
                "Description": "The number of wires used in the element."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              }
            }
          },
          "Pset_SpringTensioner": {
            "Properties": {
              "NominalWeight": {
                "type": "real",
                "Description": "Nominal weight of the object."
              },
              "TensileStrength": {
                "type": "real",
                "Description": "Indicates the ability to withstand breakage apart under applied force."
              }
            }
          },
          "Pset_DiscreteAccessoryColumnShoe": {
            "Properties": {
              "ColumnShoeBasePlateDepth": {
                "type": "real",
                "Description": "The depth of the column shoe base plate."
              },
              "ColumnShoeBasePlateThickness": {
                "type": "real",
                "Description": "The thickness of the column shoe base plate."
              },
              "ColumnShoeBasePlateWidth": {
                "type": "real",
                "Description": "The width of the column shoe base plate."
              },
              "ColumnShoeCasingDepth": {
                "type": "real",
                "Description": "The depth of the column shoe casing."
              },
              "ColumnShoeCasingHeight": {
                "type": "real",
                "Description": "The height of the column shoe casing."
              },
              "ColumnShoeCasingWidth": {
                "type": "real",
                "Description": "The width of the column shoe casing."
              }
            }
          },
          "Pset_DiscreteAccessoryCornerFixingPlate": {
            "Properties": {
              "CornerFixingPlateFlangeWidthInPlaneX": {
                "type": "real",
                "Description": "The flange width of the L-shaped corner plate in plane X."
              },
              "CornerFixingPlateFlangeWidthInPlaneZ": {
                "type": "real",
                "Description": "The flange width of the L-shaped corner plate in plane Z."
              },
              "CornerFixingPlateLength": {
                "type": "real",
                "Description": "The length of the L-shaped corner plate."
              },
              "CornerFixingPlateThickness": {
                "type": "real",
                "Description": "The thickness of the L-shaped corner plate."
              }
            }
          },
          "Pset_DiscreteAccessoryDiagonalTrussConnector": {
            "Properties": {
              "DiagonalTrussBaseBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the base bar."
              },
              "DiagonalTrussCrossBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the diagonal cross-bars."
              },
              "DiagonalTrussCrossBarSpacing": {
                "type": "real",
                "Description": "The spacing between diagonal cross-bar sections."
              },
              "DiagonalTrussHeight": {
                "type": "real",
                "Description": "The overall height of the truss connector."
              },
              "DiagonalTrussLength": {
                "type": "real",
                "Description": "The overall length of the truss connector."
              },
              "DiagonalTrussSecondaryBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the secondary bar."
              }
            }
          },
          "Pset_DiscreteAccessoryEdgeFixingPlate": {
            "Properties": {
              "EdgeFixingPlateFlangeWidthInPlaneX": {
                "type": "real",
                "Description": "The flange width of the L-shaped edge plate in plane X."
              },
              "EdgeFixingPlateFlangeWidthInPlaneZ": {
                "type": "real",
                "Description": "The flange width of the L-shaped edge plate in plane Z."
              },
              "EdgeFixingPlateLength": {
                "type": "real",
                "Description": "The length of the L-shaped edge plate."
              },
              "EdgeFixingPlateThickness": {
                "type": "real",
                "Description": "The thickness of the L-shaped edge plate."
              }
            }
          },
          "Pset_DiscreteAccessoryFixingSocket": {
            "Properties": {
              "FixingSocketHeight": {
                "type": "real",
                "Description": "The overall height of the fixing socket."
              },
              "FixingSocketThreadDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the thread."
              },
              "FixingSocketThreadLength": {
                "type": "real",
                "Description": "The length of the threaded part of the fixing socket."
              }
            }
          },
          "Pset_DiscreteAccessoryLadderTrussConnector": {
            "Properties": {
              "LadderTrussBaseBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the base bar."
              },
              "LadderTrussCrossBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the straight cross-bars."
              },
              "LadderTrussCrossBarSpacing": {
                "type": "real",
                "Description": "The spacing between the straight cross-bars."
              },
              "LadderTrussHeight": {
                "type": "real",
                "Description": "The overall height of the truss connector."
              },
              "LadderTrussLength": {
                "type": "real",
                "Description": "The overall length of the truss connector."
              },
              "LadderTrussSecondaryBarDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the secondary bar."
              }
            }
          },
          "Pset_DiscreteAccessoryStandardFixingPlate": {
            "Properties": {
              "StandardFixingPlateDepth": {
                "type": "real",
                "Description": "The depth of the standard fixing plate."
              },
              "StandardFixingPlateThickness": {
                "type": "real",
                "Description": "The thickness of the standard fixing plate."
              },
              "StandardFixingPlateWidth": {
                "type": "real",
                "Description": "The width of the standard fixing plate."
              }
            }
          },
          "Pset_DiscreteAccessoryWireLoop": {
            "Properties": {
              "WireDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the wire."
              },
              "WireEmbeddingLength": {
                "type": "real",
                "Description": "The length of the part of wire which is embedded in the precast concrete element."
              },
              "WireLoopBasePlateLength": {
                "type": "real",
                "Description": "The length of the base plate."
              },
              "WireLoopBasePlateThickness": {
                "type": "real",
                "Description": "The thickness of the base plate."
              },
              "WireLoopBasePlateWidth": {
                "type": "real",
                "Description": "The width of the base plate."
              },
              "WireLoopLength": {
                "type": "real",
                "Description": "The length of the fastening loop part of the wire."
              }
            }
          }
        }
      },
      "IfcElementComponent": {
        "Parent": "IfcElement",
        "Description": "An element component is a representation for minor items included in, added to or connecting to or between elements, which usually are not of interest from the overall building structure viewpoint. However, these small parts may have vital and load carrying functions within the construction. These items do not provide any actual space boundaries. Typical examples of _IfcElementComponent_s include different kinds of fasteners and various accessories.One or several instances of subtypes of IfcElementComponent should always be accompanied by a defining instance of a respective subtype of IfcElementComponentType. The type object holds shape and material information.HISTORY  New entity in IFC2x2It is often desirable to model a number of same-shaped element components by means of a single occurrence object, e.g. several bolts within a connection or a row of reinforcement elements. In this IFC release, this is possible by means of multiple mapped representation as documented below.To express the multiplicity of element components also on a higher semantic level, a Qto_ElementComponentPatternQuantities should be provided via IfcRelDefinesByProperties and contain the number of pieces which are placed by a single IfcElementComponent instance.{ .use-head}\nSymbolic RepresentationA symbolic representation is defined for a row of components or several rows of components within a single instance of IfcElementComponent. Such rows or arrays may contain possibly large numbers of individual pieces. The product definition shape consists of an IfcShapeRepresentation with the attribute valuesRepresentationIdentifier : 'Row'\nRepresentationType : 'GeometricCurveSet'and one or several curves as geometric items. The curves represent where reference points of the pieces are located. For example, such reference points may be at the heads of mechanical fasteners or at the starting point of the extrusion axis of reinforcement bars. In case of straight components (bolts, nails, staples, straight reinforcement bars, or similar), the local placement of the IfcElementComponent shall be located and oriented such that the local z axis is parallel with the axes of the components. A Qto_ElementComponentPatternQuantities should denote the count of pieces in the row or array and their spacing.",
        "Psets": {
          "Pset_ElementComponentCommon": {
            "Properties": {
              "CorrosionTreatment": {
                "type": "PEnum_ElementComponentCorrosionTreatment",
                "Description": "Determines corrosion treatment for metal components. This property is provided if the requirement needs to be expressed (a) independently of a material specification and (b) as a mere requirements statement rather than a workshop design/ processing feature.",
                "values": [
                  "EPOXYCOATED",
                  "GALVANISED",
                  "NONE",
                  "NOTDEFINED",
                  "PAINTED",
                  "STAINLESS"
                ]
              },
              "DeliveryType": {
                "type": "PEnum_ElementComponentDeliveryType",
                "Description": "Determines how the accessory will be delivered to the site.",
                "values": [
                  "ATTACHED_FOR_DELIVERY",
                  "CAST_IN_PLACE",
                  "LOOSE",
                  "NOTDEFINED",
                  "PRECAST",
                  "WELDED_TO_STRUCTURE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcElementComponentType": {
        "Parent": "IfcElementType",
        "Description": "The element type IfcElementComponentType defines commonly shared information for occurrences of element components. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a element component type specification indicating the specific product information that is common to all occurrences of that product type. The IfcElementComponentType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcElementComponentType are represented by instances of IfcElementComponent.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_ElementComponentCommon": {
            "Properties": {
              "CorrosionTreatment": {
                "type": "PEnum_ElementComponentCorrosionTreatment",
                "Description": "Determines corrosion treatment for metal components. This property is provided if the requirement needs to be expressed (a) independently of a material specification and (b) as a mere requirements statement rather than a workshop design/ processing feature.",
                "values": [
                  "EPOXYCOATED",
                  "GALVANISED",
                  "NONE",
                  "NOTDEFINED",
                  "PAINTED",
                  "STAINLESS"
                ]
              },
              "DeliveryType": {
                "type": "PEnum_ElementComponentDeliveryType",
                "Description": "Determines how the accessory will be delivered to the site.",
                "values": [
                  "ATTACHED_FOR_DELIVERY",
                  "CAST_IN_PLACE",
                  "LOOSE",
                  "NOTDEFINED",
                  "PRECAST",
                  "WELDED_TO_STRUCTURE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcFastener": {
        "Parent": "IfcElementComponent",
        "Description": "Representations of fixing parts which are used as fasteners to connect or join elements with other elements. Excluded are mechanical fasteners which are modeled by a separate entity (IfcMechanicalFastener).HISTORY  New entity in IFC2x2{ .change-ifc2x4}IFC4 CHANGE  Attribute PredefinedType added."
      },
      "IfcFastenerType": {
        "Parent": "IfcElementComponentType",
        "Description": "The element component type IfcFastenerType defines commonly shared information for occurrences of fasteners. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a fastener type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFastenerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFastenerType are represented by instances of IfcFastener.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_FastenerRailWeld": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "IsLiftingBracket": {
                "type": "boolean",
                "Description": "Indicates whether the connection is done between rail with different height (TRUE) or with same height (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "JointRelativePosition": {
                "type": "PEnum_RelativePosition",
                "Description": "Indicates the relative position of the joint, which lies in the left or right rail or in the middle, or in combination. The left rail is to the left as facing in the direction of increasing stationing values, and the right rail is to the right.",
                "values": [
                  "LEFT",
                  "MIDDLE",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGHT",
                  "UNSET"
                ]
              },
              "TemperatureDuringInstallation": {
                "type": "real",
                "Description": "Normalised working temperature."
              }
            }
          },
          "Pset_FastenerWeld": {
            "Properties": {
              "DeepPenetrationThroatThickness": {
                "type": "real",
                "Description": "Nominal throat thickness or effective throat thickness to which a certain amount of fusion penetration is added.REFERENCE Symbol s according to ISO 2553:2019."
              },
              "Intermittent": {
                "type": "boolean",
                "Description": "If fillet weld, intermittent or not",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalThroatThickness": {
                "type": "real",
                "Description": "Design value of the height of the largest isosceles triangle that can be inscribed in the section of a fillet weld.REFERENCE Symbol a according to ISO 2553:2019."
              },
              "NumberOfWeldElements": {
                "type": "integer",
                "Description": "Number of weld elements.REFERENCE Symbol n according to ISO 2553:2019."
              },
              "Process": {
                "type": "integer",
                "Description": "Reference number of the welding process according to ISO 4063, an up to three digits long code"
              },
              "ProcessName": {
                "type": "string",
                "Description": "Name of the welding process.  Alternative to the numeric Process property."
              },
              "Staggered": {
                "type": "boolean",
                "Description": "If intermittent weld, staggered or not",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Surface1": {
                "type": "string",
                "Description": "Aspect of weld seam surface, i.e. 'plane', 'curved' or 'hollow'.  Combined welds are given by two corresponding symbols analogous to Type1 and Type2."
              },
              "Surface2": {
                "type": "string",
                "Description": "See Surface1."
              },
              "Type1": {
                "type": "string",
                "Description": "Type of weld seam according to ISO 2553.  Note, combined welds are given by two corresponding symbols in the direction of the normal axis of the coordinate system.  For example, an X weld is specified by Type1 = 'V' and Type2 = 'V'."
              },
              "Type2": {
                "type": "string",
                "Description": "See Type1."
              },
              "WeldDiameter": {
                "type": "real",
                "Description": "Dimension of the required hole diameter at the faying surface, or required spot weld diameter at the faying surface, or required stud diameter.REFERENCE Symbol d according to ISO 2553:2019."
              },
              "WeldElementLength": {
                "type": "real",
                "Description": "Length of each weld element.REFERENCE Symbol l according to ISO 2553:2019."
              },
              "WeldElementSpacing": {
                "type": "real",
                "Description": "Spacing between weld elements (centre to centre)REFERENCE Symbol e according to ISO 2553:2019."
              },
              "WeldLegLength": {
                "type": "real",
                "Description": "Distance from the actual or projected intersection of the fusion faces and the toe of a fillet weld, measured across the fusion face.REFERENCE Symbol z according to ISO 2553:2019."
              },
              "WeldWidth": {
                "type": "real",
                "Description": "Required elongated hole width at the faying surface or seam weld width at the faying surface.REFERENCE Symbol c according to ISO 2553:2019."
              }
            }
          }
        }
      },
      "IfcMechanicalFastener": {
        "Parent": "IfcElementComponent",
        "Description": "A mechanical fasteners connecting building elements or parts mechanically. A single instance of this class may represent one or many of actual mechanical fasteners, for example an array of bolts or a row of nails.HISTORY  New entity in IFC2x2{ .change-ifc2x4}IFC4 CHANGE  Supertype changed from IfcFastener to IfcElementComponent. Attribute PredefinedType added. Attributes NominalDiameter and NominalLength deprecated.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "NominalDiameter": {
                "type": "real",
                "Description": null
              },
              "NominalLength": {
                "type": "real",
                "Description": null
              }
            }
          }
        }
      },
      "IfcMechanicalFastenerType": {
        "Parent": "IfcElementComponentType",
        "Description": "The element component type IfcMechanicalFastenerType defines commonly shared information for occurrences of mechanical fasteners. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a mechanical fastener type specification indicating the specific product information that is common to all occurrences of that product type. The IfcMechanicalFastenerType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcMechanicalFastenerType are represented by instances of IfcMechanicalFastener.HISTORY  New entity in IFC2x2{ .change-ifc2x4}IFC4 CHANGE  Supertype changed from IfcFastenerType to IfcElementComponentType. Attributes PredefinedType, NominalDiameter, NominalLength added.{ .use-head}\nClassification Use DefinitionMechanical fasteners, especially bolts, are often standardized. To refer to a formal fastener designation according to a standard (a product norm), IfcRelAssociatesClassification together with IfcClassificationReference should be used.IfcClassificationReference.Identification contains a machine-readable form of the formal fastener designation from the norm. Example: 'M16X80-10.9-HV' for a high-strength structural bolting assembly for preloading with hexagon bolt and nut. (On the other hand, IfcMechanicalFastenerType.Name contains a displayable name which may not necessarily be the same as the formal designation.)\nIfcClassificationReference.Name carries the short name of the fastener norm. Example: 'EN 14399-4' as the respective European standard for high-strength hexagon bolts.\nOptionally, the norm can be further described by IfcClassificationReference.ReferencedSource, including information like publisher and date of issue of the norm.Furthermore, IfcRelAssociatesLibrary together with IfcLibraryReference may be used to refer to a library which contains fastener definitions.",
        "Psets": {
          "Pset_VesselLineCommon": {
            "Properties": {
              "CentreLineToFairlead": {
                "type": "real",
                "Description": "Distance from the vessel centreline to the fairlead for the line"
              },
              "FairleadToTermination": {
                "type": "real",
                "Description": "Distance from the fairlead to the bitt or winch on the vessel where the line terminates"
              },
              "HeightAboveMainDeck": {
                "type": "real",
                "Description": "Height of the fairlead above the main deck of the vessel"
              },
              "LineIdentifier": {
                "type": "string",
                "Description": "Reference ID relative to a design vessel in the project"
              },
              "LineStrength": {
                "type": "real",
                "Description": "Breaking load of the line (note that ultimate stress is not part of any of the material Psets)"
              },
              "LineType": {
                "type": "string",
                "Description": "Mooring line type"
              },
              "MidshipToFairLead": {
                "type": "real",
                "Description": "Distance from the vessel midship to the fairlead for the line"
              },
              "PreTensionAim": {
                "type": "real",
                "Description": "Line force that the winch is set to maintain (minimum load)"
              },
              "TailDiameter": {
                "type": "real",
                "Description": "Diameter of the tail"
              },
              "TailLength": {
                "type": "real",
                "Description": "Length of the tail"
              },
              "TailStrength": {
                "type": "real",
                "Description": "Breaking load of the tail (note that ultimate stress is not part of any of the material Psets)"
              },
              "TailType": {
                "type": "string",
                "Description": "Mooring tail type"
              },
              "WinchBreakLimit": {
                "type": "real",
                "Description": "Line force at which the winch starts to release the line (maximum load)"
              }
            }
          },
          "Pset_MechanicalFastenerOCSFitting": {
            "Properties": {
              "ManufacturingTechnology": {
                "type": "string",
                "Description": "The method / technology used to produce the equipment."
              },
              "OCSFasteningType": {
                "type": "PEnum_OCSFasteningType",
                "Description": "Indicates the type of the overhead contact system (OCS) mechanical fastener.",
                "values": [
                  "EARTHING_FITTING",
                  "JOINT_FITTING",
                  "NOTKNOWN",
                  "OTHER",
                  "REGISTRATION_FITTING",
                  "SUPPORT_FITTING",
                  "SUSPENSION_FITTING",
                  "TENSIONING_FITTING",
                  "TERMINATION_FITTING",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_MechanicalFastenerTypeRailFastening": {
            "Properties": {
              "IsReducedResistanceFastening": {
                "type": "boolean",
                "Description": "Indicates whether the rail fastening is a reduced resistance fastening (YES) or not (NO).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "TrackFasteningElasticityType": {
                "type": "PEnum_TrackFasteningElasticityType",
                "Description": "Track fastening elasticity type.",
                "values": [
                  "ELASTIC_FASTENING",
                  "NOTKNOWN",
                  "OTHER",
                  "RIGID_FASTENING",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_MechanicalFastenerTypeRailJoint": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "IsCWRJoint": {
                "type": "boolean",
                "Description": "Indicates if the rail joint is associated to a continuous welded rail.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsJointControlEquipment": {
                "type": "boolean",
                "Description": "Indicates whether security equipment is checking the mechanical functionality of the rail joint.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsJointInsulated": {
                "type": "boolean",
                "Description": "Indicates if the rail joint is insulated.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsLiftingBracketConnection": {
                "type": "boolean",
                "Description": "Indicates if the connection is between two different heights (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NumberOfScrews": {
                "type": "integer",
                "Description": "Number of screws/bolts/connections."
              },
              "RailGap": {
                "type": "real",
                "Description": "The gap between the rail profiles."
              },
              "SleeperArrangement": {
                "type": "PEnum_SleeperArrangement",
                "Description": "Define the rail joint sleeper method of assembly (\"twin sleeper\" type or \"between sleepers\" type).",
                "values": [
                  "BETWEENSLEEPERS",
                  "NOTKNOWN",
                  "OTHER",
                  "TWINSLEEPER",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_MechanicalFastenerAnchorBolt": {
            "Properties": {
              "AnchorBoltDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the anchor bolt bar(s)."
              },
              "AnchorBoltLength": {
                "type": "real",
                "Description": "The length of the anchor bolt."
              },
              "AnchorBoltProtrusionLength": {
                "type": "real",
                "Description": "The length of the protruding part of the anchor bolt."
              },
              "AnchorBoltThreadLength": {
                "type": "real",
                "Description": "The length of the threaded part of the anchor bolt."
              }
            }
          },
          "Pset_MechanicalFastenerBolt": {
            "Properties": {
              "HeadShape": {
                "type": "string",
                "Description": "Shape of the bolt's head, e.g. 'Hexagon', 'Countersunk', 'Cheese'"
              },
              "KeyShape": {
                "type": "string",
                "Description": "If applicable, shape of the head's slot, e.g. 'Slot', 'Allen'"
              },
              "NutsCount": {
                "type": "integer",
                "Description": "Count of nuts to be mounted on one bolt"
              },
              "NutShape": {
                "type": "string",
                "Description": "Shape of the nut, e.g. 'Hexagon', 'Cap', 'Castle', 'Wing'"
              },
              "ThreadDiameter": {
                "type": "real",
                "Description": "Nominal diameter of the thread, if different from the bolt's overall nominal diameter"
              },
              "ThreadLength": {
                "type": "real",
                "Description": "Nominal length of the thread"
              },
              "WashersCount": {
                "type": "integer",
                "Description": "Count of washers to be mounted on one bolt"
              },
              "WasherShape": {
                "type": "string",
                "Description": "Shape of the washers, e.g. 'Standard', 'Square'"
              }
            }
          }
        }
      },
      "IfcAsset": {
        "Parent": "IfcGroup",
        "Description": "An asset is a uniquely identifiable grouping of elements acting as a single entity that has a financial value or that can be operated on as a single unit.An asset is generally the level of granularity at which maintenance operations are undertaken. An asset is a group that can contain one or more elements. Whilst the financial value of a component or element can be defined, financial value is also defined for accounting purposes at the level of the asset.There are a number of actors that can be associated with an asset, each actor having a role. Actors within the scope of the project are indicated using the IfcRelAssignsToActor relationship in which case roles should be defined through the IfcActorRole class; otherwise principal actors are identified as attributes of the class. In the existence of both, direct attributes take precedence.There are a number of costs that can be associated with an asset, each cost having a role. These are specified through the OriginalValue, CurrentValue, TotalReplacementCost and DepreciatedValue attributes.HISTORY  New entity in IFC2x.{ .change-ifc2x4}IFC4 CHANGE  All attributes made optional and date values changed to use IfcDate.",
        "Psets": {
          "Pset_InstallationOccurrence": {
            "Properties": {
              "AcceptanceDate": {
                "type": "string",
                "Description": "Date on which the element is accepted by the manager or administrator."
              },
              "InstallationDate": {
                "type": "string",
                "Description": "Date on which the element is installed."
              },
              "PutIntoOperationDate": {
                "type": "string",
                "Description": "Date on which the element is put into operation."
              }
            }
          },
          "Pset_RepairOccurrence": {
            "Properties": {
              "MeanTimeToRepair": {
                "type": "real",
                "Description": "Mean time to repair."
              },
              "RepairContent": {
                "type": "string",
                "Description": "Content of repair, reason and nature can be given, e.g. display faults, communication failure, display exchange."
              },
              "RepairDate": {
                "type": "string",
                "Description": "Date on which the last repair is done on the asset."
              }
            }
          },
          "Pset_Asset": {
            "Properties": {
              "AssetAccountingType": {
                "type": "PEnum_AssetAccountingType",
                "Description": "Identifies the predefined types of risk from which the type required may be set.",
                "values": [
                  "FIXED",
                  "NONFIXED",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "AssetInsuranceType": {
                "type": "PEnum_AssetInsuranceType",
                "Description": "Identifies the predefined types of insurance rating from which the type required may be set.",
                "values": [
                  "NOTKNOWN",
                  "OTHER",
                  "PERSONAL",
                  "REAL",
                  "UNSET"
                ]
              },
              "AssetStatus": {
                "type": "string",
                "Description": "Current status or stage in life cycle."
              },
              "AssetTaxType": {
                "type": "PEnum_AssetTaxType",
                "Description": "Identifies the predefined types of taxation group from which the type required may be set.",
                "values": [
                  "CAPITALISED",
                  "EXPENSED",
                  "NOTKNOWN",
                  "OTHER",
                  "UNSET"
                ]
              },
              "AssetUse": {
                "type": "string",
                "Description": "General use category of the asset"
              }
            }
          },
          "Pset_Condition": {
            "Properties": {
              "AssessmentCondition": {
                "type": "string",
                "Description": "The overall condition of a product based on an assessment of the contributions to the overall condition made by the various criteria considered. The meanings given to the values of assessed condition should be agreed and documented by local agreements. For instance, is overall condition measured on a scale of 1 - 10 or by assigning names such as Good, OK, Poor."
              },
              "AssessmentDate": {
                "type": "string",
                "Description": "Date on which the overall condition is assessed"
              },
              "AssessmentDescription": {
                "type": "string",
                "Description": "Qualitative description of the condition."
              },
              "AssessmentFrequency": {
                "type": "real",
                "Description": "Indicates how often the equipment should be assessed, to have a clear estimation on its working state, based on which the maintenance staff can decide whether it requires maintenance or requires to be updated or replaced."
              },
              "AssessmentType": {
                "type": "string",
                "Description": "Category of latest condition assessment report of the asset."
              },
              "LastAssessmentReport": {
                "type": "string",
                "Description": "Reference to latest condition (state of health) report."
              },
              "NextAssessmentDate": {
                "type": "string",
                "Description": "Date of next condition inspection"
              }
            }
          },
          "Pset_MaintenanceStrategy": {
            "Properties": {
              "AccidentResponse": {
                "type": "PEnum_AccidentResponse",
                "Description": "Accident response chosen for the asset",
                "values": [
                  "EMERGENCYINSPECTION",
                  "EMERGENCYPROCEDURE",
                  "REACTIVE",
                  "URGENTINSPECTION",
                  "URGENTPROCEDURE"
                ]
              },
              "AssetCriticality": {
                "type": "PEnum_AssetRating",
                "Description": "Rating of the asset's criticality to the operation of the facility",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "AssetFrailty": {
                "type": "PEnum_AssetRating",
                "Description": "Rating of the asset's frailty to breakage or deterioration",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "AssetPriority": {
                "type": "PEnum_AssetRating",
                "Description": "Combined criticality and frailty rating indicating the operational and maintenance priority of the asset",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "MonitoringType": {
                "type": "PEnum_MonitoringType",
                "Description": "Monitoring strategy chosen for the asset",
                "values": [
                  "FEEDBACK",
                  "INSPECTION",
                  "IOT",
                  "PPM",
                  "SENSORS"
                ]
              }
            }
          },
          "Pset_MaintenanceTriggerCondition": {
            "Properties": {
              "ConditionDisposalLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger a disposal process",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionMaintenanceLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger maintenance",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionReplacementLevel": {
                "type": "PEnum_AssetRating",
                "Description": "Condition that will trigger a replacement process",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              },
              "ConditionTargetPerformance": {
                "type": "PEnum_AssetRating",
                "Description": "Target condition of the asset",
                "values": [
                  "HIGH",
                  "LOW",
                  "MODERATE",
                  "VERYHIGH",
                  "VERYLOW"
                ]
              }
            }
          },
          "Pset_MaintenanceTriggerDuration": {
            "Properties": {
              "DurationDisposalLevel": {
                "type": "string",
                "Description": "Duration interval at which disposal is performed"
              },
              "DurationMaintenanceLevel": {
                "type": "string",
                "Description": "Duration interval at which maintenance is performed"
              },
              "DurationReplacementLevel": {
                "type": "string",
                "Description": "Duration interval at which replacement is performed"
              },
              "DurationTargetPerformance": {
                "type": "string",
                "Description": "Target time to failure of the asset"
              }
            }
          },
          "Pset_MaintenanceTriggerPerformance": {
            "Properties": {
              "DisposalLevel": {
                "type": "real",
                "Description": "Performance level at which disposal takes place"
              },
              "PerformanceMaintenanceLevel": {
                "type": "real",
                "Description": "Performance level at which maintenance takes place"
              },
              "ReplacementLevel": {
                "type": "real",
                "Description": "Performance level at which replacement takes place"
              },
              "TargetPerformance": {
                "type": "real",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Identification": {
                "type": "string",
                "Description": null
              },
              "IncorporationDate": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcFurniture": {
        "Parent": "IfcFurnishingElement",
        "Description": "Furniture defines complete furnishings such as a table, desk, chair, or cabinet, which may or may not be permanently attached to a building structure.Occurrences of furniture that are built in (where the property Pset_FurnitureTypeCommon.IsBuiltIn is asserted to be TRUE) should have their connection relationship with a building element occurrence defined through the IfcRelConnectsElements relationship.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_FurnitureTypeCommon": {
            "Properties": {
              "IsBuiltIn": {
                "type": "boolean",
                "Description": "Indicates whether the furniture type is intended to be 'built in' i.e. physically attached to a building or facility (= TRUE) or not i.e. Loose and movable (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MainColour": {
                "type": "string",
                "Description": ""
              },
              "NominalDepth": {
                "type": "real",
                "Description": "Nominal or quoted depth of the object measured from the inlet drain connection to the base of the unit."
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "Style": {
                "type": "string",
                "Description": "Description of the furniture style."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "AssemblyPlace": {
                "values": [
                  "FACTORY",
                  "SITE",
                  "NOTDEFINED"
                ],
                "type": "IfcAssemblyPlaceEnum",
                "Description": null
              }
            }
          }
        }
      },
      "IfcFurnitureType": {
        "Parent": "IfcFurnishingElementType",
        "Description": "The furnishing element type IfcFurnitureType defines commonly shared information for occurrences of furnitures. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a furniture type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFurnitureType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFurnitureType are represented by instances of IfcFurniture. Refer to the documentation at IfcFurniture for supported property sets, materials, and composition.HISTORY  New entity in IFC2x2{ .note}",
        "Psets": {
          "Pset_FurnitureTypeChair": {
            "Properties": {
              "HighestSeatingHeight": {
                "type": "real",
                "Description": "The value of seating height of high level if the chair height is adjustable."
              },
              "LowestSeatingHeight": {
                "type": "real",
                "Description": "The value of seating height of low level if the chair height is adjustable."
              },
              "SeatingHeight": {
                "type": "real",
                "Description": "The value of seating height if the chair height is not adjustable."
              }
            }
          },
          "Pset_FurnitureTypeCommon": {
            "Properties": {
              "IsBuiltIn": {
                "type": "boolean",
                "Description": "Indicates whether the furniture type is intended to be 'built in' i.e. physically attached to a building or facility (= TRUE) or not i.e. Loose and movable (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MainColour": {
                "type": "string",
                "Description": ""
              },
              "NominalDepth": {
                "type": "real",
                "Description": "Nominal or quoted depth of the object measured from the inlet drain connection to the base of the unit."
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "Style": {
                "type": "string",
                "Description": "Description of the furniture style."
              }
            }
          },
          "Pset_FurnitureTypeDesk": {
            "Properties": {
              "WorksurfaceArea": {
                "type": "real",
                "Description": "The value of the work surface area of the desk."
              }
            }
          },
          "Pset_FurnitureTypeFileCabinet": {
            "Properties": {
              "WithLock": {
                "type": "boolean",
                "Description": "Indicates whether the file cabinet is lockable (= TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_FurnitureTypeTable": {
            "Properties": {
              "NumberOfChairs": {
                "type": "integer",
                "Description": "Maximum number of chairs that can fit with the table for normal use."
              },
              "WorksurfaceArea": {
                "type": "real",
                "Description": "The value of the work surface area of the desk."
              }
            }
          }
        }
      },
      "IfcSystemFurnitureElement": {
        "Parent": "IfcFurnishingElement",
        "Description": "A system furniture element defines components of modular furniture which are not directly placed in a building structure but aggregated inside furniture.HISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_SystemFurnitureElementTypeCommon": {
            "Properties": {
              "Finishing": {
                "type": "string",
                "Description": "The finishing applied to system furniture elements of this type e.g. walnut, fabric."
              },
              "GroupCode": {
                "type": "string",
                "Description": "e.g. panels, worksurfaces, storage, etc."
              },
              "IsUsed": {
                "type": "boolean",
                "Description": "Indicates whether the element is being used in a workstation (= TRUE) or not.(= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          }
        }
      },
      "IfcSystemFurnitureElementType": {
        "Parent": "IfcFurnishingElementType",
        "Description": "The furnishing element type IfcSystemFurnitureElementType defines commonly shared information for occurrences of system furniture elements. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a system furniture element type specification indicating the specific product information that is common to all occurrences of that product type. The IfcSystemFurnitureElementType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcSystemFurnitureElementType are represented by instances of IfcSystemFurnitureElement. Refer to the documentation at IfcSystemFurnitureElement for supported property sets, materials, and composition.HISTORY  New entity in IFC2x2{ .note}",
        "Psets": {
          "Pset_SystemFurnitureElementTypeSubrack": {
            "Properties": {
              "NumberOfOccupiedUnits": {
                "type": "integer",
                "Description": "Indicates the number of vertical units occupied by the equipment."
              },
              "NumberOfSlots": {
                "type": "integer",
                "Description": "Indicates the number of  slots."
              },
              "NumberOfUnits": {
                "type": "integer",
                "Description": "Indicates the number of vertical units."
              }
            }
          },
          "Pset_SystemFurnitureElementTypeCommon": {
            "Properties": {
              "Finishing": {
                "type": "string",
                "Description": "The finishing applied to system furniture elements of this type e.g. walnut, fabric."
              },
              "GroupCode": {
                "type": "string",
                "Description": "e.g. panels, worksurfaces, storage, etc."
              },
              "IsUsed": {
                "type": "boolean",
                "Description": "Indicates whether the element is being used in a workstation (= TRUE) or not.(= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the object."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Pset_SystemFurnitureElementTypePanel": {
            "Properties": {
              "FurniturePanelType": {
                "type": "PEnum_FurniturePanelType",
                "Description": "Available panel types from which that required may be selected.",
                "values": [
                  "ACOUSTICAL",
                  "DOOR",
                  "ENDS",
                  "GLAZED",
                  "HORZ_SEG",
                  "MONOLITHIC",
                  "NOTKNOWN",
                  "OPEN",
                  "OTHER",
                  "SCREEN",
                  "UNSET"
                ]
              },
              "HasOpening": {
                "type": "boolean",
                "Description": "indicates whether the panel has an opening (= TRUE) or not (= FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Pset_SystemFurnitureElementTypeWorkSurface": {
            "Properties": {
              "HangingHeight": {
                "type": "real",
                "Description": "The hanging height of the worksurface."
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "ShapeDescription": {
                "type": "string",
                "Description": "A description of the shape of the work surface e.g. corner square, rectangle, etc."
              },
              "SupportType": {
                "type": "PEnum_FurniturePanelType",
                "Description": "Available support types from which that required may be selected.",
                "values": [
                  "ACOUSTICAL",
                  "DOOR",
                  "ENDS",
                  "GLAZED",
                  "HORZ_SEG",
                  "MONOLITHIC",
                  "NOTKNOWN",
                  "OPEN",
                  "OTHER",
                  "SCREEN",
                  "UNSET"
                ]
              },
              "UsePurpose": {
                "type": "string",
                "Description": "The principal purpose for which the work surface is intended to be used e.g. writing/reading, computer, meeting, printer, reference files, etc."
              }
            }
          }
        }
      },
      "IfcBorehole": {
        "Parent": "IfcGeotechnicalAssembly",
        "Description": "Representation of the concept of a linear geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement\nThe assembly may contain one of more strata and other elements such as capping and lining. The contained subtypes of IfcGeotechnicalStratum will have shape representations made from straight or bent tubes reflecting the bore diameter, or discs if a 'Yabuki' top surface model is being used.",
        "Psets": {
          "Pset_BoreholeCommon": {
            "Properties": {
              "BoreholeState": {
                "type": "PEnum_BoreholeState",
                "Description": "The state the borehole or trial pit has been left in. (boreholeML).",
                "values": [
                  "CAP_REPLACED",
                  "CASING_INSTALLED",
                  "CASING_PARTIALLY_REPLACED",
                  "CASING_REPLACED",
                  "CHAMBER_RECONDITIONED",
                  "DECONSTRUCTED",
                  "INSTALLED",
                  "NOTKNOWN",
                  "OTHER",
                  "PARTIALLY_DECONSTRUCTED",
                  "PARTIALLY_REFILLED",
                  "RECONDITIONED",
                  "REFILLED",
                  "UNSET"
                ]
              },
              "CapDepth": {
                "type": "real",
                "Description": "Depth of cap (boreholeML)."
              },
              "CapMaterial": {
                "type": "string",
                "Description": "Cap material or 'NOT CAPPED' or 'UNKNOWN' (boreholeML)."
              },
              "FillingDepth": {
                "type": "real",
                "Description": "Depth of filling (boreholeML)."
              },
              "FillingMaterial": {
                "type": "string",
                "Description": "Filling material or 'NOT FILLED' or 'UNKNOWN' (boreholeML)."
              },
              "GroundwaterDepth": {
                "type": "real",
                "Description": "Depth groundwater encountered (boreholeML)."
              },
              "LiningMaterial": {
                "type": "string",
                "Description": "Lining material or 'NOT LINED' or 'UNKNOWN' (boreholeML)."
              },
              "LiningThickness": {
                "type": "real",
                "Description": "Lining thickness (boreholeML)."
              }
            }
          }
        }
      },
      "IfcCourse": {
        "Parent": "IfcBuiltElement",
        "Description": "A built element whose length greatly exceeds its thickness and often also its width, usually of a single material laid on site on top of another horizontal or nearly horizontal built element. A course is distinctive from a earthworks element in that a course is a graded granular (which can be bound or unbound) material that is generally processed in some fashion, where as earthworks elements are soil earthen based structure that can be formed by removal and transport of general ground material.\nStructurally a course does not have capacity to carry loads over open span, or to be removed or replaced as a single unit. examples of courses include:\n* Graded aggregate layers\n* Graded sand layers\n* Cement bounded material (CBM)\n* Asphalt layers",
        "Psets": {
          "Pset_BoundedCourseCommon": {
            "Properties": {
              "SpreadingRate": {
                "type": "number",
                "Description": "The nominal overall mass of material per area covered by the course."
              }
            }
          },
          "Pset_CourseApplicationConditions": {
            "Properties": {
              "ApplicationTemperature": {
                "type": "real",
                "Description": "Indicates the ambient temperature at which the course is applied"
              },
              "WeatherConditions": {
                "type": "string",
                "Description": "Indicates the weather conditions during the application of the course"
              }
            }
          },
          "Pset_CourseCommon": {
            "Properties": {
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Qto_CourseBaseQuantities": {
            "Properties": {
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Thickness": {
                "type": "real",
                "Description": "The geometric thickness of the object."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcCourseType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The IfcCourseType provides the type information for IfcCourse occurrences.\nA course is a built element whose length greatly exceeds its thickness and often also its width, usually of a single material laid on site on top of another horizontal or nearly horizontal built element. A course is distinctive from a earthworks element in that a course is a graded granular (which can be bound or unbound) material that is generally processed in some fashion, where as earthworks elements are soil earthen based structure that can be formed by removal and transport of general ground material.\nStructurally a course does not have capacity to carry loads over open span, or to be removed or replaced as a single unit.",
        "Psets": {
          "Pset_BoundedCourseCommon": {
            "Properties": {
              "SpreadingRate": {
                "type": "number",
                "Description": "The nominal overall mass of material per area covered by the course."
              }
            }
          },
          "Pset_CourseApplicationConditions": {
            "Properties": {
              "ApplicationTemperature": {
                "type": "real",
                "Description": "Indicates the ambient temperature at which the course is applied"
              },
              "WeatherConditions": {
                "type": "string",
                "Description": "Indicates the weather conditions during the application of the course"
              }
            }
          },
          "Pset_CourseCommon": {
            "Properties": {
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Qto_CourseBaseQuantities": {
            "Properties": {
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Thickness": {
                "type": "real",
                "Description": "The geometric thickness of the object."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcEarthworksCut": {
        "Parent": "IfcFeatureElementSubtraction",
        "Description": "The resulting void from modification of existing terrain or road structure by excavation or by other means of removing material.\nNOTE Definition from ISO 6707-1: void that results from bulk excavation of material.\nNOTE The material excavated and either used as fill or discarded as waste is not modelled as Cut, but may be handled as a different concept (Resource) in the future.",
        "Psets": {
          "Qto_EarthworksCutBaseQuantities": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "LooseVolume": {
                "type": "real",
                "Description": "Volume of the earthworks when in a loose piled state"
              },
              "UndisturbedVolume": {
                "type": "real",
                "Description": "Undisturbed Volume"
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcEarthworksElement": {
        "Parent": "IfcBuiltElement",
        "Description": "A type of built element created by earthwork activities to build subgrade, to raise the level of the ground in general or reinforce or stabilize soil by some mechanical or chemical method."
      },
      "IfcEarthworksFill": {
        "Parent": "IfcEarthworksElement",
        "Description": "A type of earthworks element created by earthwork activities to build subgrade or to raise the level of the ground in general.",
        "Psets": {
          "Qto_EarthworksFillBaseQuantities": {
            "Properties": {
              "CompactedVolume": {
                "type": "real",
                "Description": "Volume of the earthworks when finished and compacted in place."
              },
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "LooseVolume": {
                "type": "real",
                "Description": "Volume of the earthworks when in a loose piled state"
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcGeomodel": {
        "Parent": "IfcGeotechnicalAssembly",
        "Description": "Representation of the concept of a volumetric geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement.\nThe assembly may contain one of more strata and other anthropic elements. The contained subtypes of IfcGeotechnicalStratum will have shape representations made from polyhedra or surfaces if a 'Yabuki' top surface model is being used."
      },
      "IfcGeoslice": {
        "Parent": "IfcGeotechnicalAssembly",
        "Description": "Representation of the concept of a sectional planar geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement. The assembly may contain one of more strata and anthropic elements. The contained subtypes of IfcGeotechnicalStratum will have shape representations made from polygons reflecting the visible section or poly lines if a 'Yabuki' top surface model is being used."
      },
      "IfcGeotechnicalAssembly": {
        "Parent": "IfcGeotechnicalElement",
        "Description": "Representation of the abstract concept of a geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement.\nUse of an assembly is optional but can carry the methodology and uncertainty information.\nSuch assemblies will include IfcGeotechnicalStratum entity types and may include other entity types such as IfcPile, IfcSlab or IfcSensor to represent the capping, lining or logging equipment present.\nIfcBorehole or IfcGeoSlice  can have a physical reality as a construction hazard alongside being the carrier for the interpreted results. Geological hazards may be associated to any IfcGeotechnicalAssembly or IfcGeotechnicalStratum.",
        "Psets": {
          "Pset_GeotechnicalAssemblyCommon": {
            "Properties": {
              "BoreHolePurpose": {
                "type": "PEnum_StrataAssemblyPurpose",
                "Description": "Purpose for which the borehole, section or volumetric model was created. (EU Inspire, boreholeML)",
                "values": [
                  "DEPOSIT",
                  "ENVIRONMENTAL",
                  "FEEDSTOCK",
                  "GEOLOGICAL",
                  "GEOTHERMAL",
                  "HYDROCARBON",
                  "HYDROGEOLOGICAL",
                  "MINERAL",
                  "NOTDEFINED",
                  "NOTKNOWN",
                  "PEDOLOGICAL",
                  "SITE_INVESTIGATION",
                  "STORAGE",
                  "USERDEFINED"
                ]
              },
              "Limitations": {
                "type": "string",
                "Description": "Limitations on usage."
              },
              "Methodology": {
                "type": "string",
                "Description": "Methodology used to prepare the contents of the geotechnical assembly."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          }
        }
      },
      "IfcGeotechnicalElement": {
        "Parent": "IfcElement",
        "Description": "Abstract supertype for geotechnical entities."
      },
      "IfcGeotechnicalStratum": {
        "Parent": "IfcGeotechnicalElement",
        "Description": "Representation of the concept of an identified discrete almost homogenous geological feature with either an irregular solid or 'Yabuki' top surface shape or a regular voxel cubic shape. A stratum is represented as a discrete entity, specialised (sub typed) from IfcElement. A stratum may be broken down into smaller entities if properties vary across the stratum or alternatively properties may be described with bounded numeric ranges. A stratum may carry information about the physical form and its interpretation as a Geological Item (GML).\nThe shape representations used should correspond to the sub-type of IfcGeotechnicalAssembly in which it occurs",
        "Psets": {
          "Pset_GeotechnicalStratumCommon": {
            "Properties": {
              "IsTopographic": {
                "type": "logical",
                "Description": "Is the stratum ever topmost and so a visible topographic feature",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "PiezometricHead": {
                "type": "real",
                "Description": "Pressure head of water content."
              },
              "PiezometricPressure": {
                "type": "real",
                "Description": "Pressure of water content."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "StratumColour": {
                "type": "string",
                "Description": "Stratum colour"
              },
              "Texture": {
                "type": "string",
                "Description": "Stratum texture"
              }
            }
          },
          "Qto_ArealStratumBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "PlanLength": {
                "type": "real",
                "Description": "Projected plan length of upper edge of slice."
              }
            }
          },
          "Qto_LinearStratumBaseQuantities": {
            "Properties": {
              "Diameter": {
                "type": "real",
                "Description": "The Diameter of the object."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              }
            }
          },
          "Qto_VolumetricStratumBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Mass": {
                "type": "real",
                "Description": "Mass represented, if lower surface of stratum known."
              },
              "PlanArea": {
                "type": "real",
                "Description": "Projected plan area of upper surface of model."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              }
            }
          }
        }
      },
      "IfcPavement": {
        "Parent": "IfcBuiltElement",
        "Description": "Type of built element in a road or other paved area to provide an even surface sustaining loads from vehicles or pedestrians, usually comprising several courses.\nNOTE Definition from ISO 6707-1: road, runway, or similar construction above the subgrade.",
        "Psets": {
          "Pset_PavementCommon": {
            "Properties": {
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalThicknessEnd": {
                "type": "real",
                "Description": "The nominal thickness of the object after a transition from its original value. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "StructuralSlope": {
                "type": "real",
                "Description": "The nominal side slope (allowable steepness) of the pavement structure (not including side slope fill) as a positive ratio measure. The slope  information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters take precedence. Value is typically less than 1.0 (1:1) but may be greater than that for steeper slopes."
              },
              "StructuralSlopeType": {
                "type": "string",
                "Description": "User defined description on the type of slope used for the pavement structure (not including side slope fill) . Examples are \"Even\" or \"Stepped\"."
              }
            }
          },
          "Pset_PavementSurfaceCommon": {
            "Properties": {
              "PavementRoughness": {
                "type": "number",
                "Description": "An assessment of the functional condition of the pavement surface indicated as an index according to the International Roughness Index (IRI)."
              },
              "PavementTexture": {
                "type": "real",
                "Description": "Characterization of pavement texture by mean profile depthNOTE  Definition according to ISO 13473-1:2019"
              }
            }
          },
          "Pset_Tiling": {
            "Properties": {
              "Permeability": {
                "type": "real",
                "Description": "Ratio of the permeability of the ceiling.\nThe ration can be used to indicate an open ceiling (that enables identification of whether ceiling construction should be considered as impeding distribution of sprinkler water, light etc. from installations within the ceiling area)."
              },
              "TileLength": {
                "type": "real",
                "Description": "Length of ceiling tiles. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "TileWidth": {
                "type": "real",
                "Description": "Width of ceiling tiles. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Qto_PavementBaseQuantities": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcPavementType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The IfcPavementType provides the type information for IfcPavement occurrences.\nA pavement is a type of built element in a road or other paved area to provide an even surface sustaining loads from vehicles or pedestrians, usually comprising several courses.",
        "Psets": {
          "Pset_PavementCommon": {
            "Properties": {
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalThicknessEnd": {
                "type": "real",
                "Description": "The nominal thickness of the object after a transition from its original value. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              },
              "StructuralSlope": {
                "type": "real",
                "Description": "The nominal side slope (allowable steepness) of the pavement structure (not including side slope fill) as a positive ratio measure. The slope  information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters take precedence. Value is typically less than 1.0 (1:1) but may be greater than that for steeper slopes."
              },
              "StructuralSlopeType": {
                "type": "string",
                "Description": "User defined description on the type of slope used for the pavement structure (not including side slope fill) . Examples are \"Even\" or \"Stepped\"."
              }
            }
          },
          "Pset_PavementSurfaceCommon": {
            "Properties": {
              "PavementRoughness": {
                "type": "number",
                "Description": "An assessment of the functional condition of the pavement surface indicated as an index according to the International Roughness Index (IRI)."
              },
              "PavementTexture": {
                "type": "real",
                "Description": "Characterization of pavement texture by mean profile depthNOTE  Definition according to ISO 13473-1:2019"
              }
            }
          },
          "Pset_Tiling": {
            "Properties": {
              "Permeability": {
                "type": "real",
                "Description": "Ratio of the permeability of the ceiling.\nThe ration can be used to indicate an open ceiling (that enables identification of whether ceiling construction should be considered as impeding distribution of sprinkler water, light etc. from installations within the ceiling area)."
              },
              "TileLength": {
                "type": "real",
                "Description": "Length of ceiling tiles. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "TileWidth": {
                "type": "real",
                "Description": "Width of ceiling tiles. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              }
            }
          },
          "Qto_PavementBaseQuantities": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "GrossArea": {
                "type": "real",
                "Description": "Gross Area of the object. Openings, recesses, projections and cut-outs are not taken into account."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetArea": {
                "type": "real",
                "Description": "Total net area of the object. Openings, recesses and cut-outs are taken into account by subtraction, projections by addition."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcReinforcedSoil": {
        "Parent": "IfcEarthworksElement",
        "Description": "Soil reinforced or stabilized by some mechanical or chemical method.",
        "Psets": {
          "Qto_ReinforcedSoilBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Depth": {
                "type": "real",
                "Description": "The depth of the object."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Volume": {
                "type": "real",
                "Description": "Volume of the element."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcSign": {
        "Parent": "IfcElementComponent",
        "Description": "A sign is a notice on display that gives information or instructions in a written, symbolic or other form. Signs are passive with the most common form of a pictorial panel. An instance of IfcSign refers to the occurrence of an individual panel which can be applied to a surface such as a wall or be aggregated within a Signal Assembly which can include multiple sign occurrences and the associated supporting structural elements (see Signal Assembly for examples).",
        "Psets": {
          "Pset_RailwaySignalAspect": {
            "Properties": {
              "AppliesToTrainCategory": {
                "type": "PEnum_TrainCategory",
                "Description": "Sign information relative to train category, e.g. freight, passenger.",
                "values": [
                  "FREIGHT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "UNSET"
                ]
              },
              "SignalAspectType": {
                "type": "string",
                "Description": "The type of aspect, e.g. 2-display aspect for distant signal, 3-display aspect for block signal."
              },
              "SignLegend": {
                "type": "string",
                "Description": "Text information written on the signal or sign."
              }
            }
          },
          "Pset_RailwaySignalSighting": {
            "Properties": {
              "SignalSightingAchievableDistance": {
                "type": "real",
                "Description": "Reading distance of the signal, which is achievable with the help of mitigation works."
              },
              "SignalSightingAvailableDistance": {
                "type": "real",
                "Description": "Reading distance of the signal without having any mitigation works."
              },
              "SignalSightingCombinedWithRepeater": {
                "type": "real",
                "Description": "Combined reading distance for the signal and any associated repeaters."
              },
              "SignalSightingMinimum": {
                "type": "real",
                "Description": "Minimal distance in which the signal has to be readable."
              },
              "SignalSightingPreferred": {
                "type": "real",
                "Description": "Preferred distance in which the signal shall be readable."
              },
              "SignalSightingRouteIndicator": {
                "type": "real",
                "Description": "Required reading distance for the route indicator."
              },
              "SignalViewingMinimumInFront": {
                "type": "real",
                "Description": "Smallest distance where the signal has to be readable (for train very close to the signal)."
              }
            }
          },
          "Pset_SignCommon": {
            "Properties": {
              "Category": {
                "type": "string",
                "Description": "Designation of the category into which the actors in the population belong."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "TactileMarking": {
                "type": "boolean",
                "Description": "The kind of Tactile Marking of the element.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Qto_SignBaseQuantities": {
            "Properties": {
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Thickness": {
                "type": "real",
                "Description": "The geometric thickness of the object."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcSignal": {
        "Parent": "IfcFlowTerminal",
        "Description": "A signal is an active device that conveys information or instructions to users, by means of an audio, visual signal or a combination of both.\nThe primary distinction from an IfcSign is that a signal is active and therefore a subtype of IfcFlowTerminal usually requiring power and data connections for its operation.\nAn instance of IfcSignal represents a singular signalling device in a larger assembled unit or connected system, such as an individual frame within a railway signal, a single light unit in a traffic light system or an audio signal or light mounted on a navigational buoy.\nSignals can be physically aggregated together into an assembly which can include multiple signal instances (and also sign instances) and the associated supporting structural elements such as a simple pole or a rigid frame gantry (see Signal Assembly for examples).\nSignals can be logically (functionally) grouped together into a signalling system (a type of distribution system) to represent a connected  group of signals for example a group of traffic lights controlling an road intersection.",
        "Psets": {
          "Pset_RailwaySignalAspect": {
            "Properties": {
              "AppliesToTrainCategory": {
                "type": "PEnum_TrainCategory",
                "Description": "Sign information relative to train category, e.g. freight, passenger.",
                "values": [
                  "FREIGHT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "UNSET"
                ]
              },
              "SignalAspectType": {
                "type": "string",
                "Description": "The type of aspect, e.g. 2-display aspect for distant signal, 3-display aspect for block signal."
              },
              "SignLegend": {
                "type": "string",
                "Description": "Text information written on the signal or sign."
              }
            }
          },
          "Pset_RailwaySignalOccurrence": {
            "Properties": {
              "ApproachSpeed": {
                "type": "real",
                "Description": "The design speed of trains approaching the signal if different from the line speed."
              },
              "DistanceToStopMark": {
                "type": "real",
                "Description": "Distance from the signal to the nearest stop mark at a platform."
              },
              "HandSignallingProhibited": {
                "type": "boolean",
                "Description": "Indicates if hand signalling is prohibited in case of any failure.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HinderingObstaclesDescription": {
                "type": "string",
                "Description": "Description of obstacles that hinder the visibility for the staff in the station."
              },
              "LimitedClearances": {
                "type": "string",
                "Description": "Special conditions for placing the signal post telephone: tunnels, bridges, viaducts."
              },
              "NumberOfLampsNotUsed": {
                "type": "integer",
                "Description": "Number of lamps which are not needed and blanked out (sealed)."
              },
              "RequiresBannerSignal": {
                "type": "boolean",
                "Description": "Indicates whether a banner repeater signal is required.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "RequiresOLEMesh": {
                "type": "boolean",
                "Description": "Indicates whether an OLE mesh is required to protect the signal or maintainer.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "RequiresSafetyHandrail": {
                "type": "boolean",
                "Description": "Indicates whether a safety handrail is required.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SignalPostTelephoneID": {
                "type": "string",
                "Description": "The identifier of the signal post telephone attached to the signal."
              },
              "SignalPostTelephoneType": {
                "type": "string",
                "Description": "Indicates the type of the signal post telephone, e.g. locked, direct line, dial phone."
              },
              "SignalWalkwayLength": {
                "type": "real",
                "Description": "Indicates the length of the walkway from signal to signal post telephone."
              },
              "SpecialPositionArrangement": {
                "type": "string",
                "Description": "Type of special position at which the signal is placed."
              }
            }
          },
          "Pset_RailwaySignalSighting": {
            "Properties": {
              "SignalSightingAchievableDistance": {
                "type": "real",
                "Description": "Reading distance of the signal, which is achievable with the help of mitigation works."
              },
              "SignalSightingAvailableDistance": {
                "type": "real",
                "Description": "Reading distance of the signal without having any mitigation works."
              },
              "SignalSightingCombinedWithRepeater": {
                "type": "real",
                "Description": "Combined reading distance for the signal and any associated repeaters."
              },
              "SignalSightingMinimum": {
                "type": "real",
                "Description": "Minimal distance in which the signal has to be readable."
              },
              "SignalSightingPreferred": {
                "type": "real",
                "Description": "Preferred distance in which the signal shall be readable."
              },
              "SignalSightingRouteIndicator": {
                "type": "real",
                "Description": "Required reading distance for the route indicator."
              },
              "SignalViewingMinimumInFront": {
                "type": "real",
                "Description": "Smallest distance where the signal has to be readable (for train very close to the signal)."
              }
            }
          },
          "Pset_RailwaySignalType": {
            "Properties": {
              "HasConductorRailGuardBoard": {
                "type": "boolean",
                "Description": "Indicates if a guard board is provided.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HotStripOrientation": {
                "type": "string",
                "Description": "Position of the hot strip, which indicates the direction of the focus of the light beam and is given in terms like \"left upper quadrant (LUQ)\" or \"5 o'clock\"."
              },
              "IsHighType": {
                "type": "boolean",
                "Description": "Indicates if the signal is high (TRUE) or dwarf (ground mounted) (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LensDiffuserOrientation": {
                "type": "string",
                "Description": "Orientation the lens diffuser has to have, which indicates the direction of the lens diffuser and is given in terms like \"left upper quadrant (LUQ)\" or \"5 o'clock\"."
              },
              "LensDiffuserType": {
                "type": "string",
                "Description": "Type of the lens diffuser the signal is equipped with."
              },
              "MaximumDisplayDistance": {
                "type": "real",
                "Description": "The maximum distance that can be displayed. The value relates only to the signal type, not to the circumstances at a special position."
              },
              "NumberOfLamps": {
                "type": "integer",
                "Description": "Number of lamps the signal is composed of."
              },
              "RailwaySignalType": {
                "type": "PEnum_RailwaySignalType",
                "Description": "The type of railway signal, e.g. home signal, starting signal, shunting signal, level crossing signal.",
                "values": [
                  "APPROACHSIGNAL",
                  "BLOCKSIGNAL",
                  "DISTANTSIGNAL",
                  "HOMESIGNAL",
                  "HUMPAUXILIARYSIGANL",
                  "HUMPSIGNAL",
                  "LEVELCROSSINGSIGNAL",
                  "NOTKNOWN",
                  "OBSTRUCTIONSIGNAL",
                  "OTHER",
                  "REPEATINGSIGNAL",
                  "SHUNTINGSIGNAL",
                  "STARTINGSIGNAL",
                  "UNSET"
                ]
              },
              "RequiredDisplayDistance": {
                "type": "real",
                "Description": "The required distance that has to be displayed. The value relates only to the signal type, not to the circumstances at a special position."
              },
              "SignalHoodLength": {
                "type": "real",
                "Description": "Nominal length of the signal hood, which is the signal lamp cover against glaring sun."
              },
              "SignalIndicatorType": {
                "type": "PEnum_SignalIndicatorType",
                "Description": "Type of the indicators on a signal, e.g. route indicator, speed restriction indicator etc.",
                "values": [
                  "DEPARTUREINDICATOR",
                  "DEPARTUREROUTEINDICATOR",
                  "DERAILINDICATOR",
                  "NOTKNOWN",
                  "OTHER",
                  "ROLLINGSTOCKSTOPINDICATOR",
                  "ROUTEINDICATOR",
                  "SHUNTINGINDICATOR",
                  "SWITCHINDICATOR",
                  "UNSET"
                ]
              },
              "SignalMessage": {
                "type": "string",
                "Description": "All possible message available at this signal, e.g. \"3/4- display automatic blocking\"."
              }
            }
          },
          "Pset_SignalFrame": {
            "Properties": {
              "BackboardType": {
                "type": "string",
                "Description": "The type of the backboard of the signal frame."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "SignalFrameBackboardDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the signal frame backboard."
              },
              "SignalFrameBackboardHeight": {
                "type": "real",
                "Description": "The nominal height of the signal frame backboard."
              },
              "SignalFrameType": {
                "type": "string",
                "Description": "Type of frame, e.g. main frame, route indicator, speed indicator, direction indicator, etc."
              },
              "SignalIndicatorType": {
                "type": "PEnum_SignalIndicatorType",
                "Description": "Type of the indicators on a signal, e.g. route indicator, speed restriction indicator etc.",
                "values": [
                  "DEPARTUREINDICATOR",
                  "DEPARTUREROUTEINDICATOR",
                  "DERAILINDICATOR",
                  "NOTKNOWN",
                  "OTHER",
                  "ROLLINGSTOCKSTOPINDICATOR",
                  "ROUTEINDICATOR",
                  "SHUNTINGINDICATOR",
                  "SWITCHINDICATOR",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_SignalBaseQuantities": {
            "Properties": {
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          }
        }
      },
      "IfcSignalType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The IfcSignalType  provides the type information for IfcSignal occurrences.\nA signal is an active device that conveys information or instructions to users, by means of an audio, visual signal or a combination of the 2.",
        "Psets": {
          "Pset_RailwaySignalAspect": {
            "Properties": {
              "AppliesToTrainCategory": {
                "type": "PEnum_TrainCategory",
                "Description": "Sign information relative to train category, e.g. freight, passenger.",
                "values": [
                  "FREIGHT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "UNSET"
                ]
              },
              "SignalAspectType": {
                "type": "string",
                "Description": "The type of aspect, e.g. 2-display aspect for distant signal, 3-display aspect for block signal."
              },
              "SignLegend": {
                "type": "string",
                "Description": "Text information written on the signal or sign."
              }
            }
          },
          "Pset_RailwaySignalType": {
            "Properties": {
              "HasConductorRailGuardBoard": {
                "type": "boolean",
                "Description": "Indicates if a guard board is provided.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HotStripOrientation": {
                "type": "string",
                "Description": "Position of the hot strip, which indicates the direction of the focus of the light beam and is given in terms like \"left upper quadrant (LUQ)\" or \"5 o'clock\"."
              },
              "IsHighType": {
                "type": "boolean",
                "Description": "Indicates if the signal is high (TRUE) or dwarf (ground mounted) (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LensDiffuserOrientation": {
                "type": "string",
                "Description": "Orientation the lens diffuser has to have, which indicates the direction of the lens diffuser and is given in terms like \"left upper quadrant (LUQ)\" or \"5 o'clock\"."
              },
              "LensDiffuserType": {
                "type": "string",
                "Description": "Type of the lens diffuser the signal is equipped with."
              },
              "MaximumDisplayDistance": {
                "type": "real",
                "Description": "The maximum distance that can be displayed. The value relates only to the signal type, not to the circumstances at a special position."
              },
              "NumberOfLamps": {
                "type": "integer",
                "Description": "Number of lamps the signal is composed of."
              },
              "RailwaySignalType": {
                "type": "PEnum_RailwaySignalType",
                "Description": "The type of railway signal, e.g. home signal, starting signal, shunting signal, level crossing signal.",
                "values": [
                  "APPROACHSIGNAL",
                  "BLOCKSIGNAL",
                  "DISTANTSIGNAL",
                  "HOMESIGNAL",
                  "HUMPAUXILIARYSIGANL",
                  "HUMPSIGNAL",
                  "LEVELCROSSINGSIGNAL",
                  "NOTKNOWN",
                  "OBSTRUCTIONSIGNAL",
                  "OTHER",
                  "REPEATINGSIGNAL",
                  "SHUNTINGSIGNAL",
                  "STARTINGSIGNAL",
                  "UNSET"
                ]
              },
              "RequiredDisplayDistance": {
                "type": "real",
                "Description": "The required distance that has to be displayed. The value relates only to the signal type, not to the circumstances at a special position."
              },
              "SignalHoodLength": {
                "type": "real",
                "Description": "Nominal length of the signal hood, which is the signal lamp cover against glaring sun."
              },
              "SignalIndicatorType": {
                "type": "PEnum_SignalIndicatorType",
                "Description": "Type of the indicators on a signal, e.g. route indicator, speed restriction indicator etc.",
                "values": [
                  "DEPARTUREINDICATOR",
                  "DEPARTUREROUTEINDICATOR",
                  "DERAILINDICATOR",
                  "NOTKNOWN",
                  "OTHER",
                  "ROLLINGSTOCKSTOPINDICATOR",
                  "ROUTEINDICATOR",
                  "SHUNTINGINDICATOR",
                  "SWITCHINDICATOR",
                  "UNSET"
                ]
              },
              "SignalMessage": {
                "type": "string",
                "Description": "All possible message available at this signal, e.g. \"3/4- display automatic blocking\"."
              }
            }
          },
          "Pset_SignalFrame": {
            "Properties": {
              "BackboardType": {
                "type": "string",
                "Description": "The type of the backboard of the signal frame."
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence."
              },
              "SignalFrameBackboardDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the signal frame backboard."
              },
              "SignalFrameBackboardHeight": {
                "type": "real",
                "Description": "The nominal height of the signal frame backboard."
              },
              "SignalFrameType": {
                "type": "string",
                "Description": "Type of frame, e.g. main frame, route indicator, speed indicator, direction indicator, etc."
              },
              "SignalIndicatorType": {
                "type": "PEnum_SignalIndicatorType",
                "Description": "Type of the indicators on a signal, e.g. route indicator, speed restriction indicator etc.",
                "values": [
                  "DEPARTUREINDICATOR",
                  "DEPARTUREROUTEINDICATOR",
                  "DERAILINDICATOR",
                  "NOTKNOWN",
                  "OTHER",
                  "ROLLINGSTOCKSTOPINDICATOR",
                  "ROUTEINDICATOR",
                  "SHUNTINGINDICATOR",
                  "SWITCHINDICATOR",
                  "UNSET"
                ]
              }
            }
          },
          "Qto_SignalBaseQuantities": {
            "Properties": {
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          }
        }
      },
      "IfcSignType": {
        "Parent": "IfcElementComponentType",
        "Description": "The IfcSignType provides the type information for IfcSign occurrences.\nA sign is a notice on display that gives information or instructions in a written, symbolic or other form. Signs are passive with the most common form of a pictorial panel.",
        "Psets": {
          "Pset_RailwaySignalAspect": {
            "Properties": {
              "AppliesToTrainCategory": {
                "type": "PEnum_TrainCategory",
                "Description": "Sign information relative to train category, e.g. freight, passenger.",
                "values": [
                  "FREIGHT",
                  "NOTKNOWN",
                  "OTHER",
                  "PASSENGER",
                  "UNSET"
                ]
              },
              "SignalAspectType": {
                "type": "string",
                "Description": "The type of aspect, e.g. 2-display aspect for distant signal, 3-display aspect for block signal."
              },
              "SignLegend": {
                "type": "string",
                "Description": "Text information written on the signal or sign."
              }
            }
          },
          "Pset_SignCommon": {
            "Properties": {
              "Category": {
                "type": "string",
                "Description": "Designation of the category into which the actors in the population belong."
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "TactileMarking": {
                "type": "boolean",
                "Description": "The kind of Tactile Marking of the element.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Qto_PictorialSignQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "SignArea": {
                "type": "real",
                "Description": "Sign Area"
              }
            }
          },
          "Qto_SignBaseQuantities": {
            "Properties": {
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Thickness": {
                "type": "real",
                "Description": "The geometric thickness of the object."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcSolidStratum": {
        "Parent": "IfcGeotechnicalStratum",
        "Description": "Representation of the concept of an identified discrete almost homogenous solid geological or surface feature, including discontinuities such as faults, fractures, boundaries and interfaces that are not explicitly modelled.",
        "Psets": {
          "Pset_SolidStratumCapacity": {
            "Properties": {
              "CohesionBehaviour": {
                "type": "real",
                "Description": "Cohesive shear strength of a rock or soil that is independent of interparticle friction."
              },
              "FrictionAngle": {
                "type": "real",
                "Description": "Friction angle is the tested inclination angle from horizontal."
              },
              "FrictionBehaviour": {
                "type": "real",
                "Description": "Friction shear strength of a rock or soil that is dependent on interparticle friction."
              },
              "GrainSize": {
                "type": "real",
                "Description": "Grain size diameter."
              },
              "HydraulicConductivity": {
                "type": "real",
                "Description": "Hydraulic Conductivity (permeability) of soil for water, given with the K or Kf value in m/s"
              },
              "LoadBearingCapacity": {
                "type": "real",
                "Description": "Maximum load bearing capacity of the floor structure throughtout the storey as designed."
              },
              "NValue": {
                "type": "integer",
                "Description": "Blow count from standard penetration testing, to ISO 22476-3, ASTM D1586[1] and Australian Standards AS 1289.6.3.1, which correlates to other engineering properties of soils."
              },
              "PermeabilityBehaviour": {
                "type": "real",
                "Description": "Proportionality constant in Darcy's law which relates flow rate and viscosity to a pressure gradient applied to the porous media."
              },
              "PoisonsRatio": {
                "type": "real",
                "Description": "Ratio of transverse contraction strain to longitudinal extension strain in the direction of stretching force."
              },
              "PwaveVelocity": {
                "type": "real",
                "Description": "P-wave velocity of a rock or soil."
              },
              "Resistivity": {
                "type": "real",
                "Description": "Electrical resistivity of a rock or soil (Ohm-m)."
              },
              "SettlementBehaviour": {
                "type": "real",
                "Description": "Estimate of the settlement/compaction behaviour of the stratum."
              },
              "SwaveVelocity": {
                "type": "real",
                "Description": "S-wave velocity of a rock or soil."
              }
            }
          },
          "Pset_SolidStratumComposition": {
            "Properties": {
              "AirVolume": {
                "type": "real",
                "Description": "Relative volume of air stratum constituents."
              },
              "BouldersVolume": {
                "type": "real",
                "Description": "Relative volume of boulders (typically larger than 200mm) stratum constituents."
              },
              "ClayVolume": {
                "type": "real",
                "Description": "Relative volume of clay (typically smaller than 0.002mm) stratum constituents."
              },
              "CobblesVolume": {
                "type": "real",
                "Description": "Relative volume of cobbles (typically larger than 63mm) stratum constituents."
              },
              "CompositeFractions": {
                "type": "PEnum_SoilCompositeFractions",
                "Description": "Denomination into soil groups by composite fractions",
                "values": [
                  "BOULDERS",
                  "BOULDERS_WITH_COBBLES",
                  "BOULDERS_WITH_FINER_SOILS",
                  "CLAY",
                  "CLAYEY_SILT",
                  "COBBLES",
                  "COBBLES_WITH_BOULDERS",
                  "COBBLES_WITH_FINER_SOILS",
                  "FILL",
                  "GRAVEL",
                  "GRAVEL_WITH_CLAY_OR_SILT",
                  "GRAVEL_WITH_COBBLES",
                  "GRAVELLY_SAND",
                  "NOTKNOWN",
                  "ORGANIC_CLAY",
                  "ORGANIC_SILT",
                  "OTHER",
                  "SAND",
                  "SAND_WITH_CLAY_AND_SILT",
                  "SANDY_CLAYEY_SILT",
                  "SANDY_GRAVEL",
                  "SANDY_GRAVEL_WITH_COBBLES",
                  "SANDY_GRAVELLY_CLAY",
                  "SANDY_GRAVELLY_SILT",
                  "SANDY_PEAT",
                  "SANDY_SILT",
                  "SILT",
                  "SILTY_CLAY",
                  "UNSET"
                ]
              },
              "ContaminantVolume": {
                "type": "real",
                "Description": "Relative volume of contaminant stratum constituents."
              },
              "FillVolume": {
                "type": "real",
                "Description": "Relative volume of fill (controlled placement of anthropogenic soil) stratum constituents."
              },
              "GravelVolume": {
                "type": "real",
                "Description": "Relative volume of gravel (typically larger than 2mm) stratum constituents."
              },
              "OrganicVolume": {
                "type": "real",
                "Description": "Relative volume of organic (peat/humus) stratum constituents especially soil."
              },
              "RockVolume": {
                "type": "real",
                "Description": "Relative volume of rock stratum constituents."
              },
              "SandVolume": {
                "type": "real",
                "Description": "Relative volume of sand (typically smaller than 2mm) stratum constituents."
              },
              "SiltVolume": {
                "type": "real",
                "Description": "Relative volume of silt (typically smaller than 0.063mm) stratum constituents."
              },
              "WaterVolume": {
                "type": "real",
                "Description": "Relative volume of water stratum constituents."
              }
            }
          }
        }
      },
      "IfcVegetation": {
        "Parent": "IfcGeographicElement",
        "Description": "Plant life or plant cover (as of an area).\nFor example trees, shrubs, herbs, grasses, ferns, and mosses.",
        "Psets": {
          "Pset_PlantCommon": {
            "Properties": {
              "BotanicalName": {
                "type": "string",
                "Description": "Formal scientific name conforming to the International Code of Nomenclature for algae, fungi, and plants (ICN)"
              },
              "LocalName": {
                "type": "string",
                "Description": "The local name that the plant is known as."
              }
            }
          }
        }
      },
      "IfcVoidStratum": {
        "Parent": "IfcGeotechnicalStratum",
        "Description": "Representation of the concept of an identified discrete air filled geological feature, including caves and other voids"
      },
      "IfcWaterStratum": {
        "Parent": "IfcGeotechnicalStratum",
        "Description": "Representation of the concept of an identified discrete water filled geological or surface feature including lakes, rivers and seas.",
        "Psets": {
          "Pset_WaterStratumCommon": {
            "Properties": {
              "AnnualRange": {
                "type": "real",
                "Description": "Indicative (95%-100%) annual range in levels."
              },
              "AnnualTrend": {
                "type": "real",
                "Description": "Indicative (95%-100%) annual rise in level."
              },
              "IsFreshwater": {
                "type": "logical",
                "Description": "Indication of freshwater (true,false or unknown)",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "SeicheRange": {
                "type": "real",
                "Description": "Indicative (95%-100%) range between peaks and troughts of seiche (resonant) waves."
              },
              "TidalRange": {
                "type": "real",
                "Description": "Indicative (95%-100%) range between high and low tide levels."
              },
              "WaveRange": {
                "type": "real",
                "Description": "Indicative (95%-100%) range between peaks and troughs of waves"
              }
            }
          }
        }
      },
      "IfcActionRequest": {
        "Parent": "IfcControl",
        "Description": "A request is the act or instance of asking for something, such as a request for information, bid submission, or performance of work.Requests may take many forms depending on the need including fault reports for maintenance, requests for small works, and purchase requests (where these are to be made through a help desk or buying function).HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Attribute RequestID renamed to Identification and promoted to supertype IfcControl, attributes PredefinedType, Status, and LongDescription added.",
        "Psets": {
          "Pset_ActionRequest": {
            "Properties": {
              "RequestComments": {
                "type": "string",
                "Description": "Comments that may be made on the request."
              },
              "RequestSourceLabel": {
                "type": "string",
                "Description": "A specific name or label that further qualifies the identity of a request source. In the event of an email, this may be the email address."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongDescription": {
                "type": "string",
                "Description": null
              },
              "Status": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcPermit": {
        "Parent": "IfcControl",
        "Description": "A permit is a permission to perform work in places and on artifacts where regulatory, security or other access restrictions apply.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Attribute PermitID renamed to Identification and promoted to supertype IfcControl, attributes PredefinedType, Status, and LongDescription added.",
        "Psets": {
          "Pset_Permit": {
            "Properties": {
              "EndDate": {
                "type": "string",
                "Description": "Date and time at which the permit ceases to be valid."
              },
              "EscortRequirement": {
                "type": "boolean",
                "Description": "Indicates whether or not an escort is required to accompany persons carrying out a work order at or to/from the place of work (= TRUE) or not (= FALSE).NOTE - There are many instances where escorting is required, particularly in a facility that has a high security rating. Escorting may require that persons are escorted to and from the place of work. Alternatively, it may involve the escort remaining at the place of work at all times.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SpecialRequirements": {
                "type": "string",
                "Description": "Any additional special requirements that need to be included in the permit to work.NOTE - Additional permit requirements may be imposed according to the nature of the facility at which the work is carried out. For instance, in clean areas, special clothing may be required whilst in corrective institutions, it may be necessary to check in and check out tools that will be used for work as a safety precaution."
              },
              "StartDate": {
                "type": "string",
                "Description": "Date and time from which the permit becomes valid."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongDescription": {
                "type": "string",
                "Description": null
              },
              "Status": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcStructuralAction": {
        "Parent": "IfcStructuralActivity",
        "Description": "A structural action is a structural activity that acts upon a structural item or building element.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Attribute DestabilizingLoad made optional. Attribute CausedBy deleted; use IfcRelAssignsToProduct via ReferencedBy instead.{ .use-head}\nRelationship use definitionStructural actions are grouped into either an IfcStructuralLoadGroup of predefined type LOAD_GROUP or, more often, an IfcStructuralLoadCase. This is accomplished via the inverse relationship HasAssignments and an IfcRelAssignsToGroup relationship object. IfcStructuralLoadGroup.LoadGroupFor or IfcStructuralLoadCase.LoadGroupFor respectively refers to the structural analysis model(s) in which the loads are used.It is furthermore possible to establish relationships between actions in one analysis model and reactions in another analysis model which cause the actions. For example, a support reaction from one structural system may be taken over as a load onto another supporting structural system. This is expressed by means of the inverse relationship ReferencedBy of the action and an IfcRelAssignsToProduct relationship object. IfcRelAssignsToProduct.Name is set to 'Causes' and IfcRelAssignsToProduct.RelatedObjects refers to an instance of a subtype of IfcStructuralReaction.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "DestabilizingLoad": {
                "type": "boolean",
                "Description": null,
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcStructuralActivity": {
        "Parent": "IfcProduct",
        "Description": "The abstract entity IfcStructuralActivity combines the definition of actions (such as forces, displacements, etc.) and reactions (support reactions, internal forces, deflections, etc.) which are specified by using the basic load definitions from the IfcStructuralLoadResource.The differentiation between actions and reactions is realized by instantiating objects either from subclasses of IfcStructuralAction or IfcStructuralReaction respectively. They inherit commonly needed attributes from the abstract superclass IfcStructuralActivity, notably the relationship which connects actions or reactions with connections, analysis members, or elements (subtypes of IfcStructuralItem or IfcElement).NOTE  Instances of IfcStructuralActivity which are connected with an IfcElement are subject to agreements outside the scope of this specification.\nNOTE  The semantics of IfcStructuralActivity are only fully defined if an activity instance is connected with exactly one structural item. The inverse attribute AssignedToStructuralItem can only be empty in incomplete models or in conceptual models which are not yet ready for analysis.\nHISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Cardinality of attribute AssignedToStructuralItem relaxed from 1 to 0..1 in order to allow for schema-compliant incomplete models as well as conceptual models without load\u2014item relationships.*Coordinate Systems*:The following coordinate systems are distinguished:The so-called global coordinate system is the coordinate system shared by all items and activities which are grouped in a common IfcStructuralAnalysisModel. This coordinate system is established by an ObjectPlacement. (This coordinate system is not necessarily the same as the IfcProject's world coordinate system.)\nThe so-called local coordinate system is a coordinate system local to a structural item (connection or member). This coordinate system is established by a Representation in conjunction with further use definitions and attributes of subtypes of IfcStructuralItem.Representation items in topology representations are always given within the ObjectPlacement, i.e. in so-called global coordinates (global with respect to the IfcStructuralAnalysisModel to which this activity belongs).Locations of the load objects in the AppliedLoad attribute (if of type IfcStructuralLoadConfiguration) are always given in local coordinates.Directions of the load objects in the AppliedLoad attribute refer to global or local coordinates according to the GlobalOrLocal attribute.The ObjectPlacement and Representation are sometimes not explicitly instantiated; instead they may be implied as described below. Global and local coordinate systems are then determined in the same way as with explicit placement and representation.*Topology Use Definitions*:Instances of IfcStructuralActivity which are connected with a structural item of same dimensionality, i.e.a point action or reaction connected with a point item (IfcStructuralPointConnection),\na curve action or reaction connected with a curve item (IfcStructuralCurveConnection, IfcStructuralCurveMember), or\na surface action or reaction connected with a surface item (IfcStructuralSurfaceConnection, IfcStructuralSurfaceMember) and which acts on the entire surface of the item and is not specified by isocontoursshall not have an ObjectPlacement nor a Representation. It is implied that the placement and representation of the IfcStructuralActivity is the same as the ones of the IfcStructuralItem.Instances of IfcStructuralActivity which are connected witha curve item (IfcStructuralCurveConnection, IfcStructuralCurveMember) and act on a point of the item\na surface item (IfcStructuralSurfaceConnection, IfcStructuralSurfaceMember) and act on a point or on a curve or on a part of the surface of the itemshall have a topology representation as specified below. It includes a placement and a product representation. The IfcProductRepresentation shall be given by an item in a Representation of type IfcTopologyRepresentation.Instances of IfcStructuralActivity which are connected witha surface item (IfcStructuralSurfaceConnection, IfcStructuralSurfaceMember) and are specified by isocontoursshall have a shape representation as specified below. It includes a placement and a product representation. The IfcProductRepresentation shall be given by items in a Representation of type IfcShapeRepresentation. Shape representation and topology representation may be combined.Local PlacementThe local placement for IfcStructuralActivity is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which establishes a global coordinate system which shall be common to all items and activities in an IfcStructuralAnalysisModel.Topology RepresentationInstances of IfcStructuralActivity which act on parts of a surface item shall have a topology representation given by a face with underlying surface geometry, IfcFaceSurface, which should be the single item of IfcTopologyRepresentation.Items. The surface establishes a local coordinate system of the activity:The origin of surface parameters u,v is the origin of the local coordinate system.\nThe local x and y directions follow the tangents on the surface and are in parallel with and directed like u and v respectively.\nThe local z direction is in parallel with and directed like the surface normal.RepresentationIdentifier: 'Reference'\nRepresentationType: 'Face'Instances of IfcStructuralActivity which act on a curve on a surface item shall have a topology representation given by an edge (IfcEdge or subtype), which should be the single item of IfcTopologyRepresentation.Items. The curve geometry shall be compatible with the surface geometry of the connected item. In conjunction with this surface, the curve establishes a local coordinate system of the activity:The origin of the curve parameter u is the origin of the local coordinate system.\nThe local x direction follows the tangent on the curve and is directed like u.\nThe local z direction is in parallel with and directed like the surface normal of the connected surface item.\nThe local x,y,z directions form a right-handed Cartesian coordinate system.RepresentationIdentifier: 'Reference'\nRepresentationType: 'Edge'\n\nNOTE  While an IfcEdge (or IfcOrientedEdge with underlying IfcEdge) does not provide an explicit underlying curve geometry, it may be used to imply an underlying straight line as reference curve with the origin of the curve parameter at the start vertex point.Instances of IfcStructuralActivity which act on a single point on a curve or surface item shall have a topology representation given by an IfcVertexPoint, which should be the single item of IfcTopologyRepresentation.Items. The point geometry shall be compatible with the curve or surface geometry of the connected item. The local coordinate system of the activity is oriented by the curve or surface geometry of the connected item as described above for activities with edge or face topology.RepresentationIdentifier: 'Reference'\nRepresentationType: 'Vertex'Shape RepresentationInstances of IfcStructuralActivity which act on a surface item and are specified by isocontours (level sets) shall have a shape representation given by a set of curves on a surface, IfcPCurve. The basis surface shall comply with or preferably be identical with the surface of the structural item to which the activity is connected. The representation identifier and type of this geometric representation is:RepresentationIdentifier: 'Level set'\nRepresentationType: 'GeometricCurveSet'",
        "Psets": {
          "Attributes": {
            "Properties": {
              "GlobalOrLocal": {
                "values": [
                  "GLOBAL_COORDS",
                  "LOCAL_COORDS"
                ],
                "type": "IfcGlobalOrLocalEnum",
                "Description": null
              }
            }
          }
        }
      },
      "IfcStructuralConnection": {
        "Parent": "IfcStructuralItem",
        "Description": "An IfcStructuralConnection represents a structural connection object (node connection, edge connection, or surface connection) or supports.HISTORY  New entity in IFC2x2."
      },
      "IfcStructuralCurveAction": {
        "Parent": "IfcStructuralAction",
        "Description": "A structural curve action defines an action which is distributed over a curve. A curve action may be connected with a curve member or curve connection, or surface member or surface connection.HISTORY  New entity in IFC4.{ .change-ifc2x4}IFC4 CHANGE  Former entity IfcStructuralLinearActionVarying from IFC2x2 has been removed and are replaced by this entity.*Coordinate Systems*:See definitions at IfcStructuralActivity.*Topology Use Definitions*:Standard Case:\nIf connected with a curve item, instances of IfcStructuralCurveAction shall not have an ObjectPlacement nor a Representation. It is implied that the placement and representation of the IfcStructuralActivity is the same as the ones of the member or connection.Special Case 1:\nIf connected with a surface item, instances of IfcStructuralCurveAction shall have an ObjectPlacement and Representation, containing an IfcEdgeCurve. See IfcStructuralActivity for further definitions.Special Case 2:\nIf not connected with a structural item (which may happen in an incomplete or conceptual model), a curve action should have an ObjectPlacement and Representation, containing an IfcEdgeCurve. See IfcStructuralActivity for further definitions.{ .spec-head}\nInformal Propositions:If the curve action is of the predefined type CONST, SINUS, or PARABOLA, SELF\\IfcStructuralActivity.AppliedLoad must not be of type IfcStructuralLoadConfiguration. In case of SINUS and PARABOLA, the load item defines the maximum of the load at the centre of the load distribution.\nIf the curve action is of the predefined type LINEAR, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two items.\nIf the curve action is of the predefined type POLYGONAL, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain three or more items.\nIf the curve action is of the predefined type DISCRETE, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two or more items.\nIn case of types LINEAR, POLYGONAL, and DISCRETE, the load items shall have one-dimensional IfcStructuralLoadConfiguration.Locations, defining the location of the load samples in local coordinates of the curve action. The load items shall be provided in ascending order according to their locations. The first and the last load item define the extent of the load distribution.\nPoint actions must be of type DISCRETE, thus contain two or more load points. (Single point loads are modeled by IfcStructuralPointAction.)\nAll items in SELF\\IfcStructuralActivity.AppliedLoad\\IfcStructuralLoadConfiguration.Values shall be of the same entity type.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "ProjectedOrTrue": {
                "values": [
                  "PROJECTED_LENGTH",
                  "TRUE_LENGTH"
                ],
                "type": "IfcProjectedOrTrueLengthEnum",
                "Description": null
              }
            }
          }
        }
      },
      "IfcStructuralCurveConnection": {
        "Parent": "IfcStructuralConnection",
        "Description": "Instances of IfcStructuralCurveConnection describe edge 'nodes', i.e. edges where two or more surface members are joined, or edge supports. Edge curves may be straight or curved.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Attribute Axis added, allowing for skewed supports. Use definitions added.*Coordinate Systems*:See definitions at IfcStructuralItem. The local coordinate system is established by the reference curve given by topology representation and by the attribute Axis. The local x axis is parallel with the tangent on the reference curve. The local z axis is located in the surface which is created by sweeping Axis along the reference curve and is directed according to Axis. The local y axis is directed such that x,y,z form a right-handed Cartesian coordinate system."
      },
      "IfcStructuralCurveMember": {
        "Parent": "IfcStructuralMember",
        "Description": "Instances of IfcStructuralCurveMember describe edge members, i.e. structural analysis idealizations of beams, columns, rods etc.. Curve members may be straight or curved.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Attribute Axis and WHERE rule added. Use definitions changed."
      },
      "IfcStructuralCurveMemberVarying": {
        "Parent": "IfcStructuralCurveMember",
        "Description": "This entity describes edge members with varying profile properties. Each instance of IfcStructuralCurveMemberVarying is composed of two or more instances of IfcStructuralCurveMember with differing profile properties. These subordinate members relate to the instance of IfcStructuralCurveMemberVarying by IfcRelAggregates.NOTE  A curve member whose variation of profile properties can be sufficiently described by a start profile and an end profile (e.g. tapers) shall be modeled as a single direct instance of the supertype IfcStructuralCurveMember.\nNOTE  It is recommended that structural activities (actions or reactions) are not connected with aggregated IfcStructuralCurveMemberVarying but only with the _IfcStructuralCurveMember_s in the aggregation. That way, difficulties in interpretation of local coordinates are avoided.\nHISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Use definition changed.*Coordinate Systems*:See definitions at IfcStructuralItem and IfcStructuralCurveMember. The local coordinates of the aggregate are derived from those of its parts. Length measures in local x direction of the aggregate depend on continuity and lengths of the parts. The Axis of the aggregate shal be the same as the Axis of the part at the start of the aggregate.*Material Use Definition*Only the individual parts (direct instances of IfcStructuralCurveMember) carry material and profile information."
      },
      "IfcStructuralCurveReaction": {
        "Parent": "IfcStructuralReaction",
        "Description": "This entity defines a reaction which occurs distributed over a curve. A curve reaction may be connected with a curve member or curve connection, or surface member or surface connection.HISTORY  New entity in IFC4.*Coordinate Systems*:See definitions at IfcStructuralActivity.*Topology Use Definitions*:Standard Case:\nIf connected with a curve item, instances of IfcStructuralCurveRection shall not have an ObjectPlacement nor a Representation. It is implied that the placement and representation of the IfcStructuralActivity is the same as the ones of the member or connection.Special Case:\nIf connected with a surface item, instances of IfcStructuralCurveReaction shall have an ObjectPlacement and Representation, containing an IfcEdgeCurve. See IfcStructuralActivity for further definitions.{ .spec-head}\nInformal Propositions:If the curve reaction is of the predefined type CONST, SELF\\IfcStructuralActivity.AppliedLoad must not be of type IfcStructuralLoadConfiguration.\nIf the curve reaction is of the predefined type LINEAR, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two items.\nIf the curve reaction is of the predefined type POLYGONAL, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain three or more items.\nIf the curve action is of the predefined type DISCRETE, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two or more items.\nIn case of types LINEAR, POLYGONAL, and DISCRETE, the load items shall have one-dimensional IfcStructuralLoadConfiguration.Locations, defining the location of the result samples in local coordinates of the curve reaction. The load items shall be provided in ascending order according to their locations. The first and the last load item define the extent of the result distribution.\nIf the curve reaction is of the predefined type EQUIDISTANT, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two or more items. IfcStructuralLoadConfiguration.Locations shall be omitted as it is implicit. The load items shall be provided in ascending order. The first and the last load item are located at the beginning and end of the result distribution, respectively.\nAll items in SELF\\IfcStructuralActivity.AppliedLoad\\IfcStructuralLoadConfiguration.Values shall be of the same entity type."
      },
      "IfcStructuralItem": {
        "Parent": "IfcProduct",
        "Description": "The abstract entity IfcStructuralItem is the generalization of structural members and structural connections, that is, analysis idealizations of elements in the building model. It defines the relation between structural members and connections with structural activities (actions and reactions).Relationships between elements in the building model and structural items as their idealizations can be expressed by instances of IfcRelAssignsToProduct.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Use definitions and informal proposition added.*Coordinate Systems*:The following coordinate systems are distinguished:The so-called global coordinate system is the coordinate system shared by all items and activities which are grouped in a common IfcStructuralAnalysisModel. This coordinate system is established by SELF\\IfcProduct.ObjectPlacement. (This coordinate system is not necessarily the same as the IfcProject's world coordinate system.)\nThe so-called local coordinate system is a coordinate system local to a structural item (connection or member). This coordinate system is established by a Representation (attribute inherited from IfcProduct) in conjunction with further use definitions and attributes of subtypes of IfcStructuralItem.Representation items in topology representations are always given within the ObjectPlacement, i.e. in so-called global coordinates (global with respect to the IfcStructuralAnalysisModel to which this item belongs).The usage of local coordinate systems is further defined in subtypes.*Topology Use Definitions*:Instances of IfcStructuralItem shall have a topology representation. It includes a placement and a product representation. The IfcProductRepresentation shall be given by an item in a Representation of type IfcTopologyRepresentation.Local PlacementThe local placement for IfcStructuralItem is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which establishes a global coordinate system which shall be common to all items and activities in an IfcStructuralAnalysisModel.Topology RepresentationInstances of IfcStructuralItem shall have a topology representation given by an instance of a subtype of IfcTopologicalRepresentationItem, which should be the single item of IfcTopologyRepresentation.Items. Depending on the dimensionality of the structural item, one of the following types of toplogical representation items shall be used:Point connections shall be represented by an IfcVertexPoint with an underlying IfcCartesianPoint. The Cartesian point is the reference point of the connection in the so-called global coordinate system. The following labels are used in the IfcTopologyRepresentation:\nRepresentationIdentifier: 'Reference'\nRepresentationType: 'Vertex'\n\n\nCurve members and curve connections shall either be represented by an IfcOrientedEdge, IfcEdgeCurve, or IfcEdge. The curve to which the IfcEdgeCurve (or an IfcOrientedEdge's underlying IfcEdgeCurve) refers to is the reference curve of the structural item in the global coordinate system. Start and end vertex of the edge shall be IfcVertexPoint_s with underlying _IfcCartesianPoint_s. The following labels are used in the _IfcTopologyRepresentation:\nRepresentationIdentifier: 'Reference'\nRepresentationType: 'Edge'\n\nNOTE  While an IfcEdge (or IfcOrientedEdge with underlying IfcEdge) does not provide an explicit underlying curve geometry, it may be used to imply an underlying straight line as reference curve with the origin of the curve parameter at the start vertex point.\n\n\n\n\n\nSurface members and surface connections shall be represented by an IfcFaceSurface. The underlying surface defines the reference surface of the structural surface item in the global coordinate system. All edges in the bounds of the face shall conform to the rules for edge representations of structural curve item. The following labels are used in the IfcTopologyRepresentation:\nRepresentationIdentifier: 'Reference'\nRepresentationType: 'Face'The reference point, reference curve, or reference surface partially or completely defines the local coordinate system of the represented structural item according to the following rules. In all cases, The local x,y,z directions form a right-handed Cartesian coordinate system.Structural point itemsThe reference point in the representation is the origin of the local coordinate system of the structural item.\nThe axes of the local coordinate system are either parallel with and directed like the so-called global coordinate axes, or are oriented according to definitions at the respective subtype of IfcStructuralItem.Structural curve itemsThe u parameter origin of the reference curve in the representation is the origin of the local coordinate system of the structural item.\nThe local x axis is parallel with the tangent on the curve and directed like the u parameter direction.\nThe local y and z axes are oriented according to definitions at the respective subtypes of IfcStructuralItem.Structural surface itemsThe u,v parameter origin of the reference surface in the representation is the origin of the local coordinate system of the structural item.\nThe local x and y directions follow the tangents on the surface and are in parallel with and directed like u and v respectively.\nThe local z direction is in parallel with and directed like the surface normal.{ .spec-head}\nInformal Propositions:The ObjectPlacement_s of all structural items which are grouped into the same instance of _IfcStructuralAnalysisModel shall refer to the same instance of IfcObjectPlacement.NOTE  This rule is necessary to achieve consistent topology representations. The topology representations of structural items in an analysis model are meant to share vertices and edges und must therefore have the same object placement.\nNOTE  A structural item may be grouped into more than one analysis model. In this case, all these models must use the same instance of IfcObjectPlacement."
      },
      "IfcStructuralLinearAction": {
        "Parent": "IfcStructuralCurveAction",
        "Description": "This entity defines an action with constant value which is distributed over a curve.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Intermediate supertype IfcStructuralCurveAction inserted.\nNOTE  Like its supertype IfcStructuralCurveAction, this action type may also act on curved edges."
      },
      "IfcStructuralMember": {
        "Parent": "IfcStructuralItem",
        "Description": "The abstract entity IfcStructuralMember is the superclass of all structural items which represent the idealized structural behavior of building elements.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Use definitions moved to supertype and subtypes."
      },
      "IfcStructuralPlanarAction": {
        "Parent": "IfcStructuralSurfaceAction",
        "Description": "This entity defines an action with constant value which is distributed over a surface.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Intermediate supertype IfcStructuralSurfaceAction inserted.\nNOTE  Like its supertype IfcStructuralSurfaceAction, this action type may also act on curved faces."
      },
      "IfcStructuralPointAction": {
        "Parent": "IfcStructuralAction",
        "Description": "This entity defines an action which acts on a point. A point action is typically connected with a point connection. It may also be connected with a curve member or curve connection, or surface member or surface connection.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Attributes in the supertypes IfcStructuralActivity and IfcStructuralAction changed. Use definitions changed, informal propositions added.*Coordinate Systems*:See definitions at IfcStructuralActivity.*Topology Use Definitions*:Standard Case:\nIf connected with a point item, instances of IfcStructuralPointAction shall not have an ObjectPlacement nor a Representation. It is implied that the placement and representation of the action is the same as the structural item.Special Case 1:\nIf connected with a curve item or surface item, instances of IfcStructuralPointAction shall have an ObjectPlacement and Representation, containing an IfcVertexPoint. See IfcStructuralActivity for further definitions.NOTE  In order to model concentrated actions on a curve or surface item, IfcStructuralCurveAction or IfcStructuralSurfaceAction of type DISCRETE is preferable since they do not require an extra topology representation in this case. An IfcStructuralPointAction should be used for a concentrated action on a curve or surface item only when an explicit vertex point representation is actually desired.Special Case 2:\nIf not connected with a structural item (which may happen in an incomplete or conceptual model), a point action should have an ObjectPlacement and Representation, containing an IfcVertexPoint. See IfcStructuralActivity for further definitions."
      },
      "IfcStructuralPointConnection": {
        "Parent": "IfcStructuralConnection",
        "Description": "Instances of IfcStructuralPointConnection describe structural nodes or point supports.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Attribute ConditionCoordinateSystem added, allowing for skewed supports. Use definitions added.*Coordinate Systems*:See definitions at IfcStructuralItem. The local coordinate system is established by the reference point given by topology representation and by the attribute ConditionCoordinateSystem."
      },
      "IfcStructuralPointReaction": {
        "Parent": "IfcStructuralReaction",
        "Description": "This entity defines a reaction which occurs at a point. A point reaction is typically connected with a point connection. It may also be connected with a curve member or curve connection, or surface member or surface connection.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Attributes in the supertypes IfcStructuralActivity and IfcStructuralReaction changed. Use definitions changed, informal propositions added.*Coordinate Systems*:See definitions at IfcStructuralActivity.*Topology Use Definitions*:Standard Case:\nIf connected with a point item, instances of IfcStructuralPointReaction shall not have an ObjectPlacement nor a Representation. It is implied that the placement and representation of the reaction is the same as the structural item.Special Case 1:\nIf connected with a curve item or surface item, instances of IfcStructuralPointReaction shall have an ObjectPlacement and Representation, containing an IfcVertexPoint. See IfcStructuralActivity for further definitions.NOTE  In order to model concentrated reactions on a curve or surface item, IfcStructuralCurveReaction or IfcStructuralSurfaceAction of type DISCRETE is preferable since they do not require an extra topology representation in this case. An IfcStructuralPointReaction should be used for a concentrated reaction on a curve or surface item only when an explicit vertex point representation is actually desired.Special Case 2:\nIf not connected with a structural item (which may happen in an incomplete or conceptual model), a point action should have an ObjectPlacement and Representation, containing an IfcVertexPoint. See IfcStructuralActivity for further definitions."
      },
      "IfcStructuralReaction": {
        "Parent": "IfcStructuralActivity",
        "Description": "A structural reaction is a structural activity that results from a structural action imposed to a structural item or building element. Examples are support reactions, internal forces, and deflections.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Inverse attribute Causes deleted; use IfcRelAssignsToProduct via HasAssignments instead.Structural reactions are grouped into IfcStructuralResultGroup_s via the inverse relationship _HasAssignments and an IfcRelAssignsToGroup relationship object. IfcStructuralResultGroup.ResultGroupFor finally refers to the structural analysis model in which the results occur.It is furthermore possible to establish relationships between reactions in one analysis model and actions which they cause in another analysis model. For example, a support reaction from one structural system may be taken over as a load onto another supporting structural system. This is expressed by means of the inverse relationship HasAssignments of the reaction and an IfcRelAssignsToProduct relationship object. IfcRelAssignsToProduct.Name is set to 'Causes' and IfcRelAssignsToProduct.RelatingProduct refers to an instance of a subtype of IfcStructuralAction."
      },
      "IfcStructuralSurfaceAction": {
        "Parent": "IfcStructuralAction",
        "Description": "This entity defines an action which is distributed over a surface. A surface action may be connected with a surface member or surface connection.HISTORY  New entity in IFC4.{ .change-ifc2x4}IFC4 CHANGE  Former entity IfcStructuralPlanarActionVarying from IFC2x2 has been removed and are replaced by this entity.*Coordinate Systems*:See definitions at IfcStructuralActivity.*Topology Use Definitions*:Standard Case:\nIf connected with a surface item and acting on its entirety, instances of IfcStructuralCurveAction shall not have an ObjectPlacement nor a Representation. It is implied that the placement and representation of the IfcStructuralActivity is the same as the ones of the member or connection.Special Case 1:\nIf connected with a surface item but acting only on a part of it, instances of IfcStructuralSurfaceAction shall have an ObjectPlacement and Representation, containing an IfcFaceSurface which topologically defines the loaded part of the surface. See IfcStructuralActivity for further definitions.Special Case 2:\nIf not connected with a structural item (which may happen in an incomplete or conceptual model), a surface action should have an ObjectPlacement and Representation, containing an IfcFaceSurface. See IfcStructuralActivity for further definitions.{ .spec-head}\nInformal Propositions:If the surface action is of the predefined type CONST, SELF\\IfcStructuralActivity.AppliedLoad must not be of type IfcStructuralLoadConfiguration.\nIf the surface action is of the predefined type BILINEAR, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain three items with two-dimensional IfcStructuralLoadConfiguration.Locations, defining the location of the load samples in local coordinates of the surface action.\nIf the surface action is of the predefined type DISCRETE, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two or more items with two-dimensional locations.\nPoint loads must be of type DISCRETE, thus contain two or more load points. (Single point loads are modeled by IfcStructuralPointLoad.)\nAll items in SELF\\IfcStructuralActivity.AppliedLoad\\IfcStructuralLoadConfiguration.Values shall be of the same entity type.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "ProjectedOrTrue": {
                "values": [
                  "PROJECTED_LENGTH",
                  "TRUE_LENGTH"
                ],
                "type": "IfcProjectedOrTrueLengthEnum",
                "Description": null
              }
            }
          }
        }
      },
      "IfcStructuralSurfaceConnection": {
        "Parent": "IfcStructuralConnection",
        "Description": "Instances of IfcStructuralSurfaceConnection describe face 'nodes', i.e. faces where two or more surface members are joined, or face supports. Face surfaces may be planar or curved.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Use definitions added.*Coordinate Systems*:See definitions at IfcStructuralItem. The local coordinate system is established by the reference surface given by topology representation.*Topology Use Definitions*:Instances of IfcStructuralSurfaceConnection shall have a topology representation which consists of one IfcFaceSurface, representing the reference surface of the surface connection. See definitions at IfcStructuralItem for further specifications."
      },
      "IfcStructuralSurfaceMember": {
        "Parent": "IfcStructuralMember",
        "Description": "Instances of IfcStructuralSurfaceMember describe face members, that is, structural analysis idealizations of slabs, walls, and shells. Surface members may be planar or curved.HISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Use definitions changed, WHERE rule added.*Coordinate Systems*:See definitions at IfcStructuralItem. The local coordinate system is established by the reference surface given by topology representation.*Material Use Definition*The material of direct instances IfcStructuralSurfaceMember (in contrast to instances of the subtype IfcStructuralSurfaceMemberVarying) is defined by IfcMaterial and attached by the IfcRelAssociatesMaterial.RelatingMaterial. It is accessible by the inverse HasAssociations relationship.The material is specified minimally by a name which corresponds with an agreed upon standardized structural material designation. An external reference to the source which specifies the material designation should be provided. Alternatively, structural material properties may be provided by means of IfcMechanicalMaterialProperties and IfcExtendedMaterialProperties.Direct instances of IfcStructuralSurfaceMember are assumed to be located centrically relative to their reference surface. Their depth is provided in the attribute Thickness.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "Thickness": {
                "type": "real",
                "Description": null
              }
            }
          }
        }
      },
      "IfcStructuralSurfaceMemberVarying": {
        "Parent": "IfcStructuralSurfaceMember",
        "Description": "This entity describes surface members with varying section properties. The properties are provided by means of Pset_StructuralSurfaceMemberVaryingThickness via IfcRelDefinesByProperties, or by means of aggregation: An instance of IfcStructuralSurfaceMemberVarying may be composed of two or more instances of IfcStructuralSurfaceMember with differing section properties. These subordinate members relate to the instance of IfcStructuralSurfaceMemberVarying by IfcRelAggregates.NOTE  It is recommended that structural activities (actions or reactions) are not connected with aggregated IfcStructuralSurfaceMemberVarying but only with the _IfcStructuralSurfaceMember_s in the aggregation. That way, difficulties in interpretation of local coordinates are avoided.\nHISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Use definition changed and attributes deleted.*Coordinate Systems*:See definitions at IfcStructuralItem and IfcStructuralSurfaceMember. The local coordinates of an aggregate are generally undefined since continuity of local coordinates of the parts is not ensured.*Material Use Definition*In case of aggregation, only the individual parts (direct instances of IfcStructuralSurfaceMember) carry material and thickness information. Otherwise, definitions at IfcStructuralSurfaceMember apply.",
        "Psets": {
          "Pset_StructuralSurfaceMemberVaryingThickness": {
            "Properties": {
              "Thickness1": {
                "type": "real",
                "Description": "First thickness parameter of a surface member with varying thickness"
              },
              "Thickness2": {
                "type": "real",
                "Description": "Second thickness parameter of a surface member with varying thickness"
              },
              "Thickness3": {
                "type": "real",
                "Description": "Third thickness parameter of a surface member with varying thickness"
              }
            }
          }
        }
      },
      "IfcStructuralSurfaceReaction": {
        "Parent": "IfcStructuralReaction",
        "Description": "This entity defines a reaction which occurs distributed over a surface. A surface reaction may be connected with a surface member or surface connection.HISTORY  New entity in IFC4.*Coordinate Systems*:See definitions at IfcStructuralActivity.*Topology Use Definitions*:See definitions at IfcStructuralActivity.{ .spec-head}\nInformal Propositions:If the surface reaction is of the predefined type CONST, SELF\\IfcStructuralActivity.AppliedLoad must not be of type IfcStructuralLoadConfiguration.\nIf the surface reaction is of the predefined type BILINEAR, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain three items with two-dimensional IfcStructuralLoadConfiguration.Locations, defining the location of the result samples in local coordinates of the surface reaction.\n  If the surface reaction is of the predefined type DISCRETE, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain two or more items with two-dimensional locations.\n  If the surface reaction is of the predefined type ISOCONTOUR, SELF\\IfcStructuralActivity.AppliedLoad shall be of type IfcStructuralLoadConfiguration and shall contain the same number of items as the set SELF.IfcProduct.Representation.Representations[?].Items.  Each item in the load configuration shall have a two-dimensional location, defining the location of the result samples in local coordinates of the surface reaction.  Each item in SELF\\IfcStructuralActivity.AppliedLoad shall be located at exactly one of the isocontours.\n  NOTE   The set of representation items is unordered, hence result locations are required to correlate result values and isocontours.\nNOTE   Isocontours are represented as IfcPCurves which are defined in terms of surface parameters u,v, while result locations are given in local surface item coordinates x,y.  It is strongly recommended that the surface parameterization u,v is scaled 1:1 in order to avoid different scales of u,v versus x,y.  If u,v are scaled 1:1 and the IfcPCurve's base surface is identical with the surface item's base surface, u,v and local x,y are identical.\n\nAll items in SELF\\IfcStructuralActivity.AppliedLoad\\IfcStructuralLoadConfiguration.Values shall be of the same entity type."
      },
      "IfcCaissonFoundation": {
        "Parent": "IfcDeepFoundation",
        "Description": "CaissonFoundation essentially is a hollow box that can be either open or closed.(NOTE: corresponding predefined type is deprecated from IfcFootingTypeEnum)."
      },
      "IfcDeepFoundation": {
        "Parent": "IfcBuiltElement",
        "Description": "Deep foundation is a type of foundation that transfers loads deeper than shallow foundation below the soft soils not capable of bearing the above structure. Depending on the soil strength it might have to reach down to the rock layer.Deep foundation is a new supertype incorporating the existing IfcPile and the new IfcCaissonFoundation."
      },
      "IfcDeepFoundationType": {
        "Parent": "IfcBuiltElementType",
        "Description": "Types of Deep Foundation."
      },
      "IfcFooting": {
        "Parent": "IfcBuiltElement",
        "Description": "A footing is a part of the foundation of a structure that spreads and transmits the load to the soil. A footing is also characterized as shallow foundation, where the loads are transfered to the ground near the surface.{ .extDef}NOTE  Definition according to ISO 6707-1: stepped construction that spreads the load at the foot of a wall or column.\nHISTORY  New entity in IFC2x2.\nNOTE  Slab foundations, also called slab-on-grade, are not instantiated as IfcFooting but as IfcSlab with a predefined type of IfcSlabTypeEnum.BASESLAB. Deep foundations, which transfer the loads to subsurface layers, are represented by IfcDeepFoundation and its subtypes IfcCaissonFoundation and IfcPile.",
        "Psets": {
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_FootingCommon": {
            "Properties": {
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_ReinforcementBarCountOfIndependentFooting": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "XDirectionLowerBarCount": {
                "type": "integer",
                "Description": "The number of bars with X direction lower bar."
              },
              "XDirectionUpperBarCount": {
                "type": "integer",
                "Description": "The number of bars with X direction upper bar."
              },
              "YDirectionLowerBarCount": {
                "type": "integer",
                "Description": "The number of bars with Y direction lower bar."
              },
              "YDirectionUpperBarCount": {
                "type": "integer",
                "Description": "The number of bars with Y direction upper bar."
              }
            }
          },
          "Pset_ReinforcementBarPitchOfContinuousFooting": {
            "Properties": {
              "CrossingLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the crossing lower bar."
              },
              "CrossingUpperBarPitch": {
                "type": "real",
                "Description": "The pitch length of the crossing upper bar."
              },
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              }
            }
          },
          "Qto_FootingBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcFootingType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The building element type IfcFootingType defines commonly shared information for occurrences of footings. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a footing type specification indicating the specific product information that is common to all occurrences of that product type. The IfcFootingType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcFootingType are represented by instances of IfcFooting. Refer to the documentation at IfcFooting for supported property sets, materials, and composition.HISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_FootingTypePadFooting": {
            "Properties": {
              "IsReinforced": {
                "type": "boolean",
                "Description": "Indicates whether the foundation is reinforced (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearingCapacity": {
                "type": "real",
                "Description": "Maximum load bearing capacity of the floor structure throughtout the storey as designed."
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_FootingCommon": {
            "Properties": {
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_ReinforcementBarCountOfIndependentFooting": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "XDirectionLowerBarCount": {
                "type": "integer",
                "Description": "The number of bars with X direction lower bar."
              },
              "XDirectionUpperBarCount": {
                "type": "integer",
                "Description": "The number of bars with X direction upper bar."
              },
              "YDirectionLowerBarCount": {
                "type": "integer",
                "Description": "The number of bars with Y direction lower bar."
              },
              "YDirectionUpperBarCount": {
                "type": "integer",
                "Description": "The number of bars with Y direction upper bar."
              }
            }
          },
          "Pset_ReinforcementBarPitchOfContinuousFooting": {
            "Properties": {
              "CrossingLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the crossing lower bar."
              },
              "CrossingUpperBarPitch": {
                "type": "real",
                "Description": "The pitch length of the crossing upper bar."
              },
              "Description": {
                "type": "string",
                "Description": "The Description of the object."
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              }
            }
          },
          "Qto_FootingBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Height": {
                "type": "real",
                "Description": "Characteristic height."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              },
              "Width": {
                "type": "real",
                "Description": "The width of the object. Only given, if the object has constant thickness (prismatic)."
              }
            }
          }
        }
      },
      "IfcPile": {
        "Parent": "IfcDeepFoundation",
        "Description": "A pile is a slender timber, concrete, or steel structural element, driven, jetted, or otherwise embedded on end in the ground for the purpose of supporting a load. A pile is also characterized as deep foundation, where the loads are transfered to deeper subsurface layers.{ .extDef}NOTE  Definition according to ISO 6707-1: slender structural member, substantially underground, intended to transmit force(s) into loadbearing strata below the surface of the ground.\nNOTE  Shallow foundations, which transfer the loads to the ground near its surface, are represented by IfcFooting.\nHISTORY  New entity in IFC2x2.",
        "Psets": {
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PileCommon": {
            "Properties": {
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Qto_PileBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          },
          "Attributes": {
            "Properties": {
              "ConstructionType": {
                "values": [
                  "CAST_IN_PLACE",
                  "COMPOSITE",
                  "PRECAST_CONCRETE",
                  "PREFAB_STEEL",
                  "USERDEFINED",
                  "NOTDEFINED"
                ],
                "type": "IfcPileConstructionEnum",
                "Description": null
              }
            }
          }
        }
      },
      "IfcPileType": {
        "Parent": "IfcDeepFoundationType",
        "Description": "The building element type IfcPileType defines commonly shared information for occurrences of piles. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a pile type specification indicating the specific product information that is common to all occurrences of that product type. The IfcPileType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcPileType are represented by instances of IfcPile. Refer to the documentation at IfcPile for supported property sets, materials, and composition.HISTORY  New entity in IFC4.",
        "Psets": {
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "AssemblyPlace": {
                "type": "PEnum_AssemblyPlace",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.",
                "values": [
                  "FACTORY",
                  "NOTKNOWN",
                  "OFFSITE",
                  "OTHER",
                  "SITE",
                  "UNSET"
                ]
              },
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations."
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations."
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations."
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards."
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards."
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project."
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element."
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility."
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element."
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project."
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1')."
              }
            }
          },
          "Pset_PileCommon": {
            "Properties": {
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types and no classification reference to a recognized classification system used.IFC4.3.0.0 DEPRECATION  The Reference property is deprecated and shall no longer be used, use attribute Name on the relating type instead."
              },
              "Status": {
                "type": "PEnum_ElementStatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).",
                "values": [
                  "DEMOLISH",
                  "EXISTING",
                  "NEW",
                  "NOTKNOWN",
                  "OTHER",
                  "TEMPORARY",
                  "UNSET"
                ]
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected."
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form)."
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier."
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number assigned to an occurrence of a product."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing."
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece."
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions."
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed."
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time."
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only."
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only."
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted."
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards."
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length."
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019)."
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only."
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length."
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation."
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only."
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation."
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle."
              },
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc"
              }
            }
          },
          "Qto_PileBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "real",
                "Description": "Total area of the cross section (or profile) of the object."
              },
              "GrossSurfaceArea": {
                "type": "real",
                "Description": "Total gross area of the object, normally generated as perimeter * length + 2 * cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately."
              },
              "GrossVolume": {
                "type": "real",
                "Description": "Total gross volume of the object. Openings, recesses, enclosed objects and projections are not taken into account."
              },
              "GrossWeight": {
                "type": "real",
                "Description": "Total Gross Weight of the object without any add-on parts and not taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "NetVolume": {
                "type": "real",
                "Description": "Total net volume of the object, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "NetWeight": {
                "type": "real",
                "Description": "Total net weight of the object without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses."
              },
              "OuterSurfaceArea": {
                "type": "real",
                "Description": "Total area of the extruded surfaces of the object (not taking into account the end cap areas), normally generated as perimeter * length."
              }
            }
          }
        }
      },
      "IfcReinforcingBar": {
        "Parent": "IfcReinforcingElement",
        "Description": "A reinforcing bar is usually made of steel with manufactured deformations in the surface, and used in concrete and masonry construction to provide additional strength. A single instance of this class may represent one or many of actual rebars, for example a row of rebars.HISTORY  New entity in IFC2x2{ .change-ifc2x4}IFC 2x4 CHANGE  All attributes are optional now. Several attributes are deprecated; their information now provided by IfcReinforcingBarType. Attribute BarRole renamed to PredefinedType.{ .use-head}\nGeometry Use DefinitionPlacement and representation are defined at the supertype IfcElementComponent.The representation map of a mapped 'Body' representation should contain a representation of type 'AdvancedSweptSolid' which holds an IfcSweptDiskSolid (including subtype IfcSweptDiskSolidPolygonal).",
        "Psets": {
          "Attributes": {
            "Properties": {
              "BarLength": {
                "type": "real",
                "Description": null
              },
              "BarSurface": {
                "values": [
                  "PLAIN",
                  "TEXTURED"
                ],
                "type": "IfcReinforcingBarSurfaceEnum",
                "Description": null
              },
              "CrossSectionArea": {
                "type": "real",
                "Description": null
              },
              "NominalDiameter": {
                "type": "real",
                "Description": null
              },
              "BendingShapeCode": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcReinforcingElement": {
        "Parent": "IfcElementComponent",
        "Description": "A reinforcing element represents bars, wires, strands, meshes, tendons, and other components embedded in concrete in such a manner that the reinforcement and the concrete act together in resisting forces.{ .extDef}NOTE  Definition according to ISO 6707-1: rod(s), bar(s), fabric, fibres, wires and cable(s) added to give additional strength or support to a material or component.One or several instances of subtypes of IfcReinforcingElement should always be accompanied by a defining instance of a respective subtype of IfcReinforcingElementType. The type object holds shape and material information.HISTORY  New entity in IFC2x2{ .change-ifc2x4}IFC4 CHANGE  Attribute SteelGrade deprecated.",
        "Psets": {
          "Qto_ReinforcingElementBaseQuantities": {
            "Properties": {
              "Count": {
                "type": "real",
                "Description": "Total count of reinforcing items."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "SteelGrade": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcReinforcingElementType": {
        "Parent": "IfcElementComponentType",
        "Description": "The element component type IfcReinforcingElementType defines commonly shared information for occurrences of reinforcing elements. The set of shared information may include:common properties with shared property sets\ncommon representations\ncommon materials\ncommon composition of elementsIt is used to define a reinforcing element type specification indicating the specific product information that is common to all occurrences of that product type. The IfcReinforcingElementType may be declared within IfcProject or IfcProjectLibrary using IfcRelDeclares and may be exchanged with or without occurrences of the type. Occurrences of IfcReinforcingElementType are represented by instances of IfcReinforcingElement.HISTORY  New entity in IFC2x2.{ .use-head}\nMaterial Use DefinitionAn associated material denotes the steel grade, preferrably using material classification.",
        "Psets": {
          "Qto_ReinforcingElementBaseQuantities": {
            "Properties": {
              "Count": {
                "type": "real",
                "Description": "Total count of reinforcing items."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              },
              "Weight": {
                "type": "real",
                "Description": "Total weight of object"
              }
            }
          }
        }
      },
      "IfcReinforcingMesh": {
        "Parent": "IfcReinforcingElement",
        "Description": "A reinforcing mesh is a series of longitudinal and transverse wires or bars of various gauges, arranged at right angles to each other and welded at all points of intersection; usually used for concrete slab reinforcement. It is also known as welded wire fabric. In scope are plane meshes as well as bent meshes.HISTORY  New entity in IFC2x2{ .change-ifc2x4}IFC4 CHANGE  All attributes are optional now. Several attributes are deprecated; their information is now provided by IfcReinforcingMeshType. Attribute PredefinedType added.{ .use-head}\nGeometry Use DefinitionPlacement and representation are defined at the supertype IfcElementComponent.The representation map of a mapped 'Outline' representation should contain a representation of type 'Curve3D' which holds an IfcPolyline.The representation map of a mapped 'Body' representation should contain a representation of type 'AdvancedSweptSolid' which holds multiple IfcSweptDiskSolid (including subtype IfcSweptDiskSolidPolygonal).",
        "Psets": {
          "Attributes": {
            "Properties": {
              "LongitudinalBarCrossSectionArea": {
                "type": "real",
                "Description": null
              },
              "LongitudinalBarNominalDiameter": {
                "type": "real",
                "Description": null
              },
              "LongitudinalBarSpacing": {
                "type": "real",
                "Description": null
              },
              "MeshLength": {
                "type": "real",
                "Description": null
              },
              "MeshWidth": {
                "type": "real",
                "Description": null
              },
              "TransverseBarCrossSectionArea": {
                "type": "real",
                "Description": null
              },
              "TransverseBarNominalDiameter": {
                "type": "real",
                "Description": null
              },
              "TransverseBarSpacing": {
                "type": "real",
                "Description": null
              },
              "BendingShapeCode": {
                "type": "string",
                "Description": null
              }
            }
          }
        }
      },
      "IfcSurfaceFeature": {
        "Parent": "IfcFeatureElement",
        "Description": "A surface feature is a modification at (onto, or into) of the surface of an element. Parts of the surface of the entire surface may be affected. The volume and mass of the element may be increased, remain unchanged, or be decreased by the surface feature, depending on manufacturing technology. However, any increase or decrease of volume is small compared to the total volume of the element.The part\u2013whole relationship is established by an aggregation relationship object, expressing the decomposition of an element type into one or more additive elements (element parts) and zero or more feature elements.HISTORY  New entity in IFC4.*Containment Use Definition*:Surface features shall have no spatial containment relationship to the spatial structure since they are dependent on element types without spatial containment relationships or on an element occurrence with own spatial containment relationship.The SELF\\IfcElement.ContainedInStructure relationship shall be NIL.*Geometry use definition*:The geometric representation of IfcSurfaceFeatureElement is given by the IfcProductDefinitionShape, allowing multiple geometric representation.Local PlacementThe local placement for IfcSurfaceFeatureElement is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations.In case of features which are part of an element type, absolute placement into the type object's implied coordinate system shall be used.\nIn case of features which are voiding an element occurrence, the PlacementRelTo relationship of IfcLocalPlacement shall point to the local placement of the respective element.Shape representationDifferent shape representations may be used, depending on the nature of the feature and information requirements:Symbolic representation, such as the two-dimensional bounding box of a tag.\nA geometric set representing the geometric items of a mark.\nSurface representations of treated parts of the lement surface by means of IfcShellBasedSurfaceModel. The faces within the surface model may be included into a B-Rep model within a representation map of the parent element type.Higher-level parameters (geometric and non-geometric) may be provided by property sets based on local agreements.",
        "Psets": {
          "Qto_SurfaceFeatureBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "real",
                "Description": "Calculated area for the object."
              },
              "Length": {
                "type": "real",
                "Description": "The length of the object."
              }
            }
          }
        }
      },
      "IfcTendon": {
        "Parent": "IfcReinforcingElement",
        "Description": "A tendon is a steel element such as a wire, cable, bar, rod, or strand used to impart prestress to concrete when the element is tensioned.{ .extDef}NOTE  Definition according to ISO 6707-1: steel bar(s) or groups of bars, strands or wires given a tensile stress that produces a compressive stress in prestressed concrete or masonry.{ .extDef}NOTE  To be efficient, the cable follows the deck alignment and moves vertically up on the top of the piers and down in the middle of the span. Therefore the cable axis is defined relatively towards the deck alignment. The ShapeRepresentation should be 'AdvancedSweptSolid' geometry based on SectionedSolidHorizontal description including DistanceExpression, CircleProfileDef and AlignmentCurve, leading to a polyline describing the cable directrix.{ .extDef}NOTE  Regarding the Structural Analysis model, the cable has to be transformed into loads applied at each CartesianPoint defining the polyline.\nHISTORY  New entity in IFC2x2.{ .change-ifc2x4}IFC4 CHANGE  Attribute PredefinedType made optional. NominalDiameter and CrossSectionArea made optional and deprecated; this information can now be provided by IfcTendonType. Description of FrictionCoefficient corrected.",
        "Psets": {
          "Attributes": {
            "Properties": {
              "AnchorageSlip": {
                "type": "real",
                "Description": null
              },
              "CrossSectionArea": {
                "type": "real",
                "Description": null
              },
              "FrictionCoefficient": {
                "type": "real",
                "Description": null
              },
              "MinCurvatureRadius": {
                "type": "real",
                "Description": null
              },
              "NominalDiameter": {
                "type": "real",
                "Description": null
              },
              "PreStress": {
                "type": "real",
                "Description": null
              },
              "TensionForce": {
                "type": "real",
                "Description": null
              },
              "SheathDiameter": {
                "type": "real",
                "Description": null
              }
            }
          }
        }
      },
      "IfcTendonAnchor": {
        "Parent": "IfcReinforcingElement",
        "Description": "A tendon anchor is the end connection for tendons in prestressed or posttensioned concrete.HISTORY  New entity in IFC2x2.{ .history}IFC4 CHANGE  Attribute PredefinedType added."
      },
      "IfcTendonConduit": {
        "Parent": "IfcReinforcingElement",
        "Description": "A TendonConduit represents the components of the conduit system for tendons embedded in concrete structure."
      },
      "IfcVoidingFeature": {
        "Parent": "IfcFeatureElementSubtraction",
        "Description": "A voiding feature is a modification of an element which reduces its volume. Such a feature may be manufactured in different ways, for example by cutting, drilling, or milling of members made of various materials, or by inlays into the formwork of cast members made of materials such as concrete.The standard use of instances of IfcVoidingFeature is as a part of element type objects (instances of subtypes of IfcElementType). The part\u2013whole relationship is established by an aggregation relationship object, expressing the decomposition of an element type into one or more additive elements (element parts) and zero or more feature elements.HISTORY  New entity in IFC4.{ .use-head}\nContainment Use DefinitionVoiding features shall have no spatial containment relationship to the spatial structure since they are dependent on element types without spatial containment relationships or on an element occurrence with own spatial containment relationship.The SELF\\IfcElement.ContainedInStructure relationship shall be NIL."
      }
    }
  }
}