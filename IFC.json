{
  "Domain": {
    "Name": "IFC",
    "Version": "RESSTYPES",
    "Classifications": {
      "IfcActuator": {
        "Parent": "IfcDistributionControlElement",
        "Description": "An actuator is a mechanical device for moving or controlling a mechanism or system. An actuator takes energy, usually created by air, electricity, or liquid, and converts that into some kind of motion.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n",
        "Psets": {
          "Pset_ActuatorPHistory": {
            "Properties": {
              "Position": {
                "type": "real",
                "Description": "Indicates position of the actuator over time where 0.0 is fully closed and 1.0 is fully open.\n"
              },
              "Quality": {
                "type": "logical",
                "Description": "Indicates the quality of measurement or failure condition, which may be further qualified by the Status.  True: measured values are considered reliable; False: measured values are considered not reliable (i.e. a fault has been detected); Unknown: reliability of values is uncertain.\n",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Pset_ActuatorTypeCommon": {
            "Properties": {
              "Application": {
                "type": "string",
                "Description": "Humidifier application.\n\n\n\nFixed: Humidifier installed in a ducted flow distribution system.\n\nPortable: Humidifier is not installed in a ducted flow distribution system.\n"
              },
              "FailPosition": {
                "type": "PEnum_FailPosition",
                "Description": "Specifies the required fail-safe position of the actuator.\n",
                "values": [
                  "FAILCLOSED",
                  "FAILOPEN"
                ]
              },
              "ManualOverride": {
                "type": "boolean",
                "Description": "Identifies whether hand-operated operation is provided as an override (= TRUE) or not (= FALSE). Note that this value should be set to FALSE by default in the case of a Hand Operated Actuator.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Pset_ActuatorTypeLinearActuation": {
            "Properties": {
              "Force": {
                "type": "real",
                "Description": "Indicates the maximum close-off force for the actuator.\n"
              },
              "Stroke": {
                "type": "real",
                "Description": "Indicates the maximum distance the actuator must traverse.\n"
              }
            }
          },
          "Pset_ActuatorTypeRotationalActuation": {
            "Properties": {
              "RangeAngle": {
                "type": "real",
                "Description": "Indicates the maximum rotation the actuator must traverse.\n"
              },
              "Torque": {
                "type": "real",
                "Description": "Indicates the maximum close-off torque for the actuator.\n"
              }
            }
          },
          "Qto_ActuatorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcActuator.THERMOSTATICACTUATOR": {
        "Parent": "IfcActuator",
        "Description": "A device that thermostatically actuates a control element.\n\n\n"
      },
      "IfcActuator.PNEUMATICACTUATOR": {
        "Parent": "IfcActuator",
        "Description": "A device that pneumatically actuates a control element.\n\n\n",
        "Psets": {
          "Pset_ActuatorTypePneumaticActuator": {
            "Properties": {
              "InputFlowrate": {
                "type": "real",
                "Description": "Maximum input control air flowrate requirement.\n"
              },
              "InputPressure": {
                "type": "real",
                "Description": "Maximum input control air pressure requirement.\n"
              }
            }
          }
        }
      },
      "IfcActuator.HANDOPERATEDACTUATOR": {
        "Parent": "IfcActuator",
        "Description": ""
      },
      "IfcActuator.ELECTRICACTUATOR": {
        "Parent": "IfcActuator",
        "Description": "A device that electrically actuates a control element.\n\n\n",
        "Psets": {
          "Pset_ActuatorTypeElectricActuator": {
            "Properties": {
              "ActuatorInputPower": {
                "type": "real",
                "Description": "Maximum input power requirement.\n"
              },
              "ElectricActuatorType": {
                "type": "PEnum_ElectricActuatorType",
                "Description": "Enumeration that identifies electric actuator as defined by its operational principle.\n",
                "values": [
                  "MAGNETIC",
                  "MOTORDRIVE"
                ]
              }
            }
          }
        }
      },
      "IfcActuator.HYDRAULICACTUATOR": {
        "Parent": "IfcActuator",
        "Description": "A device that electrically actuates a control element.\n\n\n",
        "Psets": {
          "Pset_ActuatorTypeHydraulicActuator": {
            "Properties": {
              "InputFlowrate": {
                "type": "real",
                "Description": "Maximum input control air flowrate requirement.\n"
              },
              "InputPressure": {
                "type": "real",
                "Description": "Maximum input control air pressure requirement.\n"
              }
            }
          }
        }
      },
      "IfcAlarm": {
        "Parent": "IfcDistributionControlElement",
        "Description": "An alarm is a device that signals the existence of a condition or situation that is outside the boundaries of normal expectation or that activates such a device.\n\n\n\nAlarms include the provision of break glass buttons and manual pull boxes that are used to activate alarms.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_AlarmPHistory": {
            "Properties": {
              "Acknowledge": {
                "type": "logical",
                "Description": "Indicates acknowledgement status where False indicates acknowlegement is required and outstanding, True indicates condition has been acknowedged, and Unknown indicates no acknowledgement is required.  Upon resetting the condition, then acknowledgement reverts to Unknown.\n",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "Condition": {
                "type": "string",
                "Description": "Indicates alarm condition over time.  The range of possible values and their meanings is defined by Pset_AlarmTypeCommon.Condition.  An empty value indicates no present alarm condition.\n"
              },
              "Enabled": {
                "type": "boolean",
                "Description": "Indicates whether alarm is enabled or disabled over time.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Severity": {
                "type": "integer",
                "Description": "Indicates alarm severity over time, where the scale of values is determined by the control system configuration.  A zero value indicates no present alarm.\n"
              },
              "User": {
                "type": "string",
                "Description": "Indicates acknowledging user over time by identification corresponding to IfcPerson.Identification on an IfcActor.\n"
              }
            }
          },
          "Pset_AlarmTypeCommon": {
            "Properties": {
              "Condition": {
                "type": "string",
                "Description": "Indicates alarm condition over time.  The range of possible values and their meanings is defined by Pset_AlarmTypeCommon.Condition.  An empty value indicates no present alarm condition.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_AlarmBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcAlarm.BREAKGLASSBUTTON": {
        "Parent": "IfcAlarm",
        "Description": "An alarm activation mechanism in which a protective glass has to be broken to enable a button to be pressed.\n\n\n"
      },
      "IfcAlarm.RAILWAYCROCODILE": {
        "Parent": "IfcAlarm",
        "Description": "An electrical contact placed between the rails (in the four-foot way) to provide warnings in the locomotive cab.\n\n\n"
      },
      "IfcAlarm.MANUALPULLBOX": {
        "Parent": "IfcAlarm",
        "Description": "An alarm activation mechanism in which activation is achieved by a pulling action.\n\n\n"
      },
      "IfcAlarm.SIREN": {
        "Parent": "IfcAlarm",
        "Description": ""
      },
      "IfcAlarm.RAILWAYDETONATOR": {
        "Parent": "IfcAlarm",
        "Description": "A coin-sized device that is used as a loud warning signal to train drivers. It is usually placed on the top of the rail, usually secured with two lead straps, one on each side.\n\n\n"
      },
      "IfcAlarm.LIGHT": {
        "Parent": "IfcAlarm",
        "Description": "A visual alarm.\n\n\n"
      },
      "IfcAlarm.WHISTLE": {
        "Parent": "IfcAlarm",
        "Description": "An audible alarm.\n\n\n"
      },
      "IfcAlarm.BELL": {
        "Parent": "IfcAlarm",
        "Description": "An audible alarm.\n\n\n"
      },
      "IfcController": {
        "Parent": "IfcDistributionControlElement",
        "Description": "A controller is a device that monitors inputs and controls outputs within a building automation system.\n\n\n\nA controller may be physical (having placement within a spatial structure) or logical (a software interface or aggregated within a programmable physical controller).\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_ControllerPHistory": {
            "Properties": {
              "Quality": {
                "type": "logical",
                "Description": "Indicates the quality of measurement or failure condition, which may be further qualified by the Status.  True: measured values are considered reliable; False: measured values are considered not reliable (i.e. a fault has been detected); Unknown: reliability of values is uncertain.\n",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "Value": {
                "type": "real",
                "Description": "The expected range and default value.  While the property data type is IfcReal (to support all cases including when the units are unknown), a unit may optionally be provided to indicate the measure and unit.  The LowerLimitValue and UpperLimitValue must fall within the physical Range and may be used to determine extents when charting Pset_ControllerPHistory.Value.\n"
              }
            }
          },
          "Pset_ControllerTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_ControllerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcController.FLOATING": {
        "Parent": "IfcController",
        "Description": "",
        "Psets": {
          "Pset_ControllerTypeFloating": {
            "Properties": {
              "ControlType": {
                "type": "string",
                "Description": "The type of signal modification effected and applicable ports: \n\n\n\nCONSTANT: No inputs; SignalOffset is written to the output value.\n\nMODIFIER: Single analog input is read, added to SignalOffset, multiplied by SignalFactor, and written to the output value.\n\nABSOLUTE: Single analog input is read and absolute value is written to the output value.\n\nINVERSE: Single analog input is read, 1.0 is divided by the input value and written to the output value.\n\nHYSTERISIS: Single analog input is read, delayed according to SignalTime, and written to the output value.\n\nRUNNINGAVERAGE: Single analog input is read, averaged over SignalTime, and written to the output value.\n\nDERIVATIVE: Single analog input is read and the rate of change during the SignalTime is written to the output value.\n\nINTEGRAL: Single analog input is read and the average value during the SignalTime is written to the output value.\n\nBINARY: Single binary input is read and SignalOffset is written to the output value if True.\n\nACCUMULATOR: Single binary input is read, and for each pulse the SignalOffset is added to the accumulator, and while the accumulator is greater than the SignalFactor, the accumulator is decremented by SignalFactor and the integer result is incremented by one.\n\nPULSECONVERTER: Single integer input is read, and for each increment the SignalMultiplier is added and written to the output value.\n\nSUM: Two analog inputs are read, added, and written to the output value.\n\nSUBTRACT: Two analog inputs are read, subtracted, and written to the output value.\n\nPRODUCT: Two analog inputs are read, multiplied, and written to the output value.\n\nDIVIDE: Two analog inputs are read, divided, and written to the output value.\n\nAVERAGE: Two analog inputs are read and the average is written to the output value.\n\nMAXIMUM: Two analog inputs are read and the maximum is written to the output value.\n\nMINIMUM: Two analog inputs are read and the minimum is written to the output value..\n\nINPUT: Controller element is a dedicated input.\n\nOUTPUT: Controller element is a dedicated output.\n\nVARIABLE: Controller element is an in-memory variable.\n"
              },
              "Labels": {
                "type": "string",
                "Description": "Table mapping values to labels, where such labels indicate the meanings of True and False, such as 'Open' and 'Closed'\n"
              },
              "Range": {
                "type": "real",
                "Description": "The physical range of values supported by the device.\n"
              },
              "SignalFactor": {
                "type": "real",
                "Description": "Factor multiplied onto offset signal.\n"
              },
              "SignalOffset": {
                "type": "real",
                "Description": "Offset constant added to modfied signal.\n"
              },
              "SignalTime": {
                "type": "real",
                "Description": "Time factor used for integral and running average controllers.\n"
              },
              "Value": {
                "type": "real",
                "Description": "The expected range and default value.  While the property data type is IfcReal (to support all cases including when the units are unknown), a unit may optionally be provided to indicate the measure and unit.  The LowerLimitValue and UpperLimitValue must fall within the physical Range and may be used to determine extents when charting Pset_ControllerPHistory.Value.\n"
              }
            }
          }
        }
      },
      "IfcController.PROPORTIONAL": {
        "Parent": "IfcController",
        "Description": "Output is proportional to the control error and optionally time integral and derivative.\n\n\n",
        "Psets": {
          "Pset_ControllerTypeProportional": {
            "Properties": {
              "ControlType": {
                "type": "string",
                "Description": "The type of signal modification effected and applicable ports: \n\n\n\nCONSTANT: No inputs; SignalOffset is written to the output value.\n\nMODIFIER: Single analog input is read, added to SignalOffset, multiplied by SignalFactor, and written to the output value.\n\nABSOLUTE: Single analog input is read and absolute value is written to the output value.\n\nINVERSE: Single analog input is read, 1.0 is divided by the input value and written to the output value.\n\nHYSTERISIS: Single analog input is read, delayed according to SignalTime, and written to the output value.\n\nRUNNINGAVERAGE: Single analog input is read, averaged over SignalTime, and written to the output value.\n\nDERIVATIVE: Single analog input is read and the rate of change during the SignalTime is written to the output value.\n\nINTEGRAL: Single analog input is read and the average value during the SignalTime is written to the output value.\n\nBINARY: Single binary input is read and SignalOffset is written to the output value if True.\n\nACCUMULATOR: Single binary input is read, and for each pulse the SignalOffset is added to the accumulator, and while the accumulator is greater than the SignalFactor, the accumulator is decremented by SignalFactor and the integer result is incremented by one.\n\nPULSECONVERTER: Single integer input is read, and for each increment the SignalMultiplier is added and written to the output value.\n\nSUM: Two analog inputs are read, added, and written to the output value.\n\nSUBTRACT: Two analog inputs are read, subtracted, and written to the output value.\n\nPRODUCT: Two analog inputs are read, multiplied, and written to the output value.\n\nDIVIDE: Two analog inputs are read, divided, and written to the output value.\n\nAVERAGE: Two analog inputs are read and the average is written to the output value.\n\nMAXIMUM: Two analog inputs are read and the maximum is written to the output value.\n\nMINIMUM: Two analog inputs are read and the minimum is written to the output value..\n\nINPUT: Controller element is a dedicated input.\n\nOUTPUT: Controller element is a dedicated output.\n\nVARIABLE: Controller element is an in-memory variable.\n"
              },
              "DerivativeConstant": {
                "type": "real",
                "Description": "The derivative gain factor of the controller (usually referred to as Kd).  Asserted where ControlType is PROPORTIONALINTEGRALDERIVATIVE.\n"
              },
              "IntegralConstant": {
                "type": "real",
                "Description": "The integral gain factor of the controller (usually referred to as Ki).  Asserted where ControlType is PROPORTIONALINTEGRAL or PROPORTIONALINTEGRALDERIVATIVE.\n"
              },
              "Labels": {
                "type": "string",
                "Description": "Table mapping values to labels, where such labels indicate the meanings of True and False, such as 'Open' and 'Closed'\n"
              },
              "ProportionalConstant": {
                "type": "real",
                "Description": "The proportional gain factor of the controller (usually referred to as Kp).\n"
              },
              "Range": {
                "type": "real",
                "Description": "The physical range of values supported by the device.\n"
              },
              "SignalTimeDecrease": {
                "type": "real",
                "Description": "Time factor used for exponential decrease.\n"
              },
              "SignalTimeIncrease": {
                "type": "real",
                "Description": "Time factor used for exponential increase.\n"
              },
              "Value": {
                "type": "real",
                "Description": "The expected range and default value.  While the property data type is IfcReal (to support all cases including when the units are unknown), a unit may optionally be provided to indicate the measure and unit.  The LowerLimitValue and UpperLimitValue must fall within the physical Range and may be used to determine extents when charting Pset_ControllerPHistory.Value.\n"
              }
            }
          }
        }
      },
      "IfcController.PROGRAMMABLE": {
        "Parent": "IfcController",
        "Description": "Output is programmable such as Discrete Digital Control (DDC).\n\n\n",
        "Psets": {
          "Pset_ControllerTypeProgrammable": {
            "Properties": {
              "Application": {
                "type": "string",
                "Description": "Humidifier application.\n\n\n\nFixed: Humidifier installed in a ducted flow distribution system.\n\nPortable: Humidifier is not installed in a ducted flow distribution system.\n"
              },
              "ControlType": {
                "type": "string",
                "Description": "The type of signal modification effected and applicable ports: \n\n\n\nCONSTANT: No inputs; SignalOffset is written to the output value.\n\nMODIFIER: Single analog input is read, added to SignalOffset, multiplied by SignalFactor, and written to the output value.\n\nABSOLUTE: Single analog input is read and absolute value is written to the output value.\n\nINVERSE: Single analog input is read, 1.0 is divided by the input value and written to the output value.\n\nHYSTERISIS: Single analog input is read, delayed according to SignalTime, and written to the output value.\n\nRUNNINGAVERAGE: Single analog input is read, averaged over SignalTime, and written to the output value.\n\nDERIVATIVE: Single analog input is read and the rate of change during the SignalTime is written to the output value.\n\nINTEGRAL: Single analog input is read and the average value during the SignalTime is written to the output value.\n\nBINARY: Single binary input is read and SignalOffset is written to the output value if True.\n\nACCUMULATOR: Single binary input is read, and for each pulse the SignalOffset is added to the accumulator, and while the accumulator is greater than the SignalFactor, the accumulator is decremented by SignalFactor and the integer result is incremented by one.\n\nPULSECONVERTER: Single integer input is read, and for each increment the SignalMultiplier is added and written to the output value.\n\nSUM: Two analog inputs are read, added, and written to the output value.\n\nSUBTRACT: Two analog inputs are read, subtracted, and written to the output value.\n\nPRODUCT: Two analog inputs are read, multiplied, and written to the output value.\n\nDIVIDE: Two analog inputs are read, divided, and written to the output value.\n\nAVERAGE: Two analog inputs are read and the average is written to the output value.\n\nMAXIMUM: Two analog inputs are read and the maximum is written to the output value.\n\nMINIMUM: Two analog inputs are read and the minimum is written to the output value..\n\nINPUT: Controller element is a dedicated input.\n\nOUTPUT: Controller element is a dedicated output.\n\nVARIABLE: Controller element is an in-memory variable.\n"
              },
              "FirmwareVersion": {
                "type": "string",
                "Description": "Indicates version of device firmware according to device manufacturer.\n"
              },
              "SoftwareVersion": {
                "type": "string",
                "Description": "Indicates version of application software according to systems integrator.\n"
              }
            }
          }
        }
      },
      "IfcController.TWOPOSITION": {
        "Parent": "IfcController",
        "Description": "Output can be either on or off.\n\n\n",
        "Psets": {
          "Pset_ControllerTypeTwoPosition": {
            "Properties": {
              "ControlType": {
                "type": "string",
                "Description": "The type of signal modification effected and applicable ports: \n\n\n\nCONSTANT: No inputs; SignalOffset is written to the output value.\n\nMODIFIER: Single analog input is read, added to SignalOffset, multiplied by SignalFactor, and written to the output value.\n\nABSOLUTE: Single analog input is read and absolute value is written to the output value.\n\nINVERSE: Single analog input is read, 1.0 is divided by the input value and written to the output value.\n\nHYSTERISIS: Single analog input is read, delayed according to SignalTime, and written to the output value.\n\nRUNNINGAVERAGE: Single analog input is read, averaged over SignalTime, and written to the output value.\n\nDERIVATIVE: Single analog input is read and the rate of change during the SignalTime is written to the output value.\n\nINTEGRAL: Single analog input is read and the average value during the SignalTime is written to the output value.\n\nBINARY: Single binary input is read and SignalOffset is written to the output value if True.\n\nACCUMULATOR: Single binary input is read, and for each pulse the SignalOffset is added to the accumulator, and while the accumulator is greater than the SignalFactor, the accumulator is decremented by SignalFactor and the integer result is incremented by one.\n\nPULSECONVERTER: Single integer input is read, and for each increment the SignalMultiplier is added and written to the output value.\n\nSUM: Two analog inputs are read, added, and written to the output value.\n\nSUBTRACT: Two analog inputs are read, subtracted, and written to the output value.\n\nPRODUCT: Two analog inputs are read, multiplied, and written to the output value.\n\nDIVIDE: Two analog inputs are read, divided, and written to the output value.\n\nAVERAGE: Two analog inputs are read and the average is written to the output value.\n\nMAXIMUM: Two analog inputs are read and the maximum is written to the output value.\n\nMINIMUM: Two analog inputs are read and the minimum is written to the output value..\n\nINPUT: Controller element is a dedicated input.\n\nOUTPUT: Controller element is a dedicated output.\n\nVARIABLE: Controller element is an in-memory variable.\n"
              },
              "Labels": {
                "type": "string",
                "Description": "Table mapping values to labels, where such labels indicate the meanings of True and False, such as 'Open' and 'Closed'\n"
              },
              "Polarity": {
                "type": "boolean",
                "Description": "True indicates normal polarity; False indicates reverse polarity.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Value": {
                "type": "boolean",
                "Description": "The expected range and default value.  While the property data type is IfcReal (to support all cases including when the units are unknown), a unit may optionally be provided to indicate the measure and unit.  The LowerLimitValue and UpperLimitValue must fall within the physical Range and may be used to determine extents when charting Pset_ControllerPHistory.Value.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcController.MULTIPOSITION": {
        "Parent": "IfcController",
        "Description": "Output is discrete value, can be one of three or more values.\n\n\n",
        "Psets": {
          "Pset_ControllerTypeMultiPosition": {
            "Properties": {
              "ControlType": {
                "type": "string",
                "Description": "The type of signal modification effected and applicable ports: \n\n\n\nCONSTANT: No inputs; SignalOffset is written to the output value.\n\nMODIFIER: Single analog input is read, added to SignalOffset, multiplied by SignalFactor, and written to the output value.\n\nABSOLUTE: Single analog input is read and absolute value is written to the output value.\n\nINVERSE: Single analog input is read, 1.0 is divided by the input value and written to the output value.\n\nHYSTERISIS: Single analog input is read, delayed according to SignalTime, and written to the output value.\n\nRUNNINGAVERAGE: Single analog input is read, averaged over SignalTime, and written to the output value.\n\nDERIVATIVE: Single analog input is read and the rate of change during the SignalTime is written to the output value.\n\nINTEGRAL: Single analog input is read and the average value during the SignalTime is written to the output value.\n\nBINARY: Single binary input is read and SignalOffset is written to the output value if True.\n\nACCUMULATOR: Single binary input is read, and for each pulse the SignalOffset is added to the accumulator, and while the accumulator is greater than the SignalFactor, the accumulator is decremented by SignalFactor and the integer result is incremented by one.\n\nPULSECONVERTER: Single integer input is read, and for each increment the SignalMultiplier is added and written to the output value.\n\nSUM: Two analog inputs are read, added, and written to the output value.\n\nSUBTRACT: Two analog inputs are read, subtracted, and written to the output value.\n\nPRODUCT: Two analog inputs are read, multiplied, and written to the output value.\n\nDIVIDE: Two analog inputs are read, divided, and written to the output value.\n\nAVERAGE: Two analog inputs are read and the average is written to the output value.\n\nMAXIMUM: Two analog inputs are read and the maximum is written to the output value.\n\nMINIMUM: Two analog inputs are read and the minimum is written to the output value..\n\nINPUT: Controller element is a dedicated input.\n\nOUTPUT: Controller element is a dedicated output.\n\nVARIABLE: Controller element is an in-memory variable.\n"
              },
              "Labels": {
                "type": "string",
                "Description": "Table mapping values to labels, where such labels indicate the meanings of True and False, such as 'Open' and 'Closed'\n"
              },
              "Range": {
                "type": "integer",
                "Description": "The physical range of values supported by the device.\n"
              },
              "Value": {
                "type": "integer",
                "Description": "The expected range and default value.  While the property data type is IfcReal (to support all cases including when the units are unknown), a unit may optionally be provided to indicate the measure and unit.  The LowerLimitValue and UpperLimitValue must fall within the physical Range and may be used to determine extents when charting Pset_ControllerPHistory.Value.\n"
              }
            }
          }
        }
      },
      "IfcFlowInstrument": {
        "Parent": "IfcDistributionControlElement",
        "Description": "A flow instrument reads and displays the value of a particular property of a system at a point, or displays the difference in the value of a property between two points.\n\n\n\nInstrumentation is typically for the purpose of determining the value of the property at a point in time. It is not the purpose of an instrument to record or integrate the values over time (although they may be connected to recording devices that do perform such a function). This entity provides for all forms of mechanical flow instrument (thermometers, pressure gauges etc.) and electrical flow instruments (ammeters, voltmeters etc.)\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_FlowInstrumentPHistory": {
            "Properties": {
              "Quality": {
                "type": "logical",
                "Description": "Indicates the quality of measurement or failure condition, which may be further qualified by the Status.  True: measured values are considered reliable; False: measured values are considered not reliable (i.e. a fault has been detected); Unknown: reliability of values is uncertain.\n",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "Value": {
                "type": "real",
                "Description": "The expected range and default value.  While the property data type is IfcReal (to support all cases including when the units are unknown), a unit may optionally be provided to indicate the measure and unit.  The LowerLimitValue and UpperLimitValue must fall within the physical Range and may be used to determine extents when charting Pset_ControllerPHistory.Value.\n"
              }
            }
          },
          "Pset_FlowInstrumentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_FlowInstrumentBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcFlowInstrument.VOLTMETER_PEAK": {
        "Parent": "IfcFlowInstrument",
        "Description": "A device that reads and displays the peak voltage in an electrical circuit.\n\n\n"
      },
      "IfcFlowInstrument.POWERFACTORMETER": {
        "Parent": "IfcFlowInstrument",
        "Description": "A device that reads and displays the power factor of an electrical circuit.\n\n\n"
      },
      "IfcFlowInstrument.AMMETER": {
        "Parent": "IfcFlowInstrument",
        "Description": "A device that reads and displays the current flow in a circuit.\n\n\n"
      },
      "IfcFlowInstrument.PRESSUREGAUGE": {
        "Parent": "IfcFlowInstrument",
        "Description": "A device that reads and displays a pressure value at a point or the pressure difference between two points.\n\n\n",
        "Psets": {
          "Pset_FlowInstrumentTypePressureGauge": {
            "Properties": {
              "DisplaySize": {
                "type": "real",
                "Description": "The physical size of the display. In the case of a stem thermometer, this will be the length of the stem. For a dial thermometer, it will be the diameter of the dial.\n"
              },
              "PressureGaugeType": {
                "type": "PEnum_PressureGaugeType",
                "Description": "Identifies the means by which pressure is displayed.\n",
                "values": [
                  "DIAL",
                  "DIGITAL",
                  "MANOMETER"
                ]
              }
            }
          }
        }
      },
      "IfcFlowInstrument.THERMOMETER": {
        "Parent": "IfcFlowInstrument",
        "Description": "",
        "Psets": {
          "Pset_FlowInstrumentTypeThermometer": {
            "Properties": {
              "DisplaySize": {
                "type": "real",
                "Description": "The physical size of the display. In the case of a stem thermometer, this will be the length of the stem. For a dial thermometer, it will be the diameter of the dial.\n"
              },
              "ThermometerType": {
                "type": "PEnum_ThermometerType",
                "Description": "Identifies the means by which temperature is displayed.\n",
                "values": [
                  "DIAL",
                  "DIGITAL",
                  "STEM"
                ]
              }
            }
          }
        }
      },
      "IfcFlowInstrument.VOLTMETER": {
        "Parent": "IfcFlowInstrument",
        "Description": "A device that measures and displays the voltage in a circuit.\n\n\n"
      },
      "IfcFlowInstrument.PHASEANGLEMETER": {
        "Parent": "IfcFlowInstrument",
        "Description": ""
      },
      "IfcFlowInstrument.VOLTMETER_RMS": {
        "Parent": "IfcFlowInstrument",
        "Description": "A device that reads and displays the RMS (mean) voltage in an electrical circuit.\n\n\n"
      },
      "IfcFlowInstrument.FREQUENCYMETER": {
        "Parent": "IfcFlowInstrument",
        "Description": "A device that reads and displays the electrical frequency of an alternating current circuit.\n\n\n"
      },
      "IfcFlowInstrument.COMBINED": {
        "Parent": "IfcFlowInstrument",
        "Description": "A device that reads and displays the value of multiple properties of a system at a point, or displays the difference in the value of a property between two points.\n\n\n"
      },
      "IfcSensor": {
        "Parent": "IfcDistributionControlElement",
        "Description": "A sensor is a device that measures a physical quantity and converts it into a signal which can be read by an observer or by an instrument.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_SensorPHistory": {
            "Properties": {
              "Direction": {
                "type": "real",
                "Description": "Indicates sensed direction for sensors capturing magnitude and direction measured from True North (0 degrees) in a clockwise direction.\n"
              },
              "Quality": {
                "type": "logical",
                "Description": "Indicates the quality of measurement or failure condition, which may be further qualified by the Status.  True: measured values are considered reliable; False: measured values are considered not reliable (i.e. a fault has been detected); Unknown: reliability of values is uncertain.\n",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "Value": {
                "type": "real",
                "Description": "The expected range and default value.  While the property data type is IfcReal (to support all cases including when the units are unknown), a unit may optionally be provided to indicate the measure and unit.  The LowerLimitValue and UpperLimitValue must fall within the physical Range and may be used to determine extents when charting Pset_ControllerPHistory.Value.\n"
              }
            }
          },
          "Pset_SensorTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_SensorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcSensor.SMOKESENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects smoke.\n\n\n",
        "Psets": {
          "Pset_SensorTypeSmokeSensor": {
            "Properties": {
              "CoverageArea": {
                "type": "real",
                "Description": "The floor area that is covered by the sensor (typically measured as a circle whose center is at the location of the sensor).\n"
              },
              "HasBuiltInAlarm": {
                "type": "boolean",
                "Description": "Indicates whether the smoke sensor is included as an element within a smoke alarm/sensor unit (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SetPointConcentration": {
                "type": "real",
                "Description": "The carbon dioxide concentration to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.MOVEMENTSENSOR": {
        "Parent": "IfcSensor",
        "Description": "",
        "Psets": {
          "Pset_SensorTypeMovementSensor": {
            "Properties": {
              "MovementSensingType": {
                "type": "PEnum_MovementSensingType",
                "Description": "Enumeration that identifies the type of movement sensing mechanism.\n",
                "values": [
                  "PHOTOELECTRICCELL",
                  "PRESSUREPAD"
                ]
              },
              "SetPointMovement": {
                "type": "real",
                "Description": "The movement to be sensed.\n"
              }
            }
          }
        }
      },
      "IfcSensor.PRESSURESENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects pressure.\n\n\n",
        "Psets": {
          "Pset_SensorTypePressureSensor": {
            "Properties": {
              "IsSwitch": {
                "type": "boolean",
                "Description": "Identifies if the sensor also functions as a switch at the set point (=TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SetPointPressure": {
                "type": "real",
                "Description": "The pressure value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.CO2SENSOR": {
        "Parent": "IfcSensor",
        "Description": "",
        "Psets": {
          "Pset_SensorTypeCO2Sensor": {
            "Properties": {
              "SetPointConcentration": {
                "type": "real",
                "Description": "The carbon dioxide concentration to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.OBSTACLESENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects any obstacles. Examples are: detectors sensing objects falling from a bridge, rock-fall detectors, etc.\n\n\n"
      },
      "IfcSensor.RADIOACTIVITYSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects atomic decay.\n\n\n",
        "Psets": {
          "Pset_SensorTypeRadioactivitySensor": {
            "Properties": {
              "SetPointRadioactivity": {
                "type": "real",
                "Description": "The radioactivity value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.SOUNDSENSOR": {
        "Parent": "IfcSensor",
        "Description": "",
        "Psets": {
          "Pset_SensorTypeSoundSensor": {
            "Properties": {
              "SetPointSound": {
                "type": "real",
                "Description": "The sound pressure value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.LIGHTSENSOR": {
        "Parent": "IfcSensor",
        "Description": "",
        "Psets": {
          "Pset_SensorTypeLightSensor": {
            "Properties": {
              "SetPointIlluminance": {
                "type": "real",
                "Description": "The illuminance value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.WHEELSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects the passage of a wheel.\n\n\n"
      },
      "IfcSensor.FROSTSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects frost on a window.\n\n\n",
        "Psets": {
          "Pset_SensorTypeFrostSensor": {
            "Properties": {
              "SetPointFrost": {
                "type": "real",
                "Description": "The detection of frost.\n"
              }
            }
          }
        }
      },
      "IfcSensor.FOREIGNOBJECTDETECTIONSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects foreign objects that shock or break the power network. It may alarm when such accidents happen.\n\n\n"
      },
      "IfcSensor.MOISTURESENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects moisture.\n\n\n",
        "Psets": {
          "Pset_SensorTypeMoistureSensor": {
            "Properties": {
              "SetPointMoisture": {
                "type": "real",
                "Description": "The moisture value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.GASSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects gas concentration (other than CO2)\n\n\n",
        "Psets": {
          "Pset_SensorTypeGasSensor": {
            "Properties": {
              "CoverageArea": {
                "type": "real",
                "Description": "The floor area that is covered by the sensor (typically measured as a circle whose center is at the location of the sensor).\n"
              },
              "GasDetected": {
                "type": "string",
                "Description": "Identification of the gas that is being detected, according to chemical formula.  For example, carbon monoxide is 'CO', carbon dioxide is 'CO2', oxygen is 'O2'.\n"
              },
              "SetPointConcentration": {
                "type": "real",
                "Description": "The carbon dioxide concentration to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.IONCONCENTRATIONSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects ion concentration, such as for water hardness.\n\n\n",
        "Psets": {
          "Pset_SensorTypeIonConcentrationSensor": {
            "Properties": {
              "SetPointConcentration": {
                "type": "real",
                "Description": "The carbon dioxide concentration to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              },
              "SubstanceDetected": {
                "type": "string",
                "Description": "Identification of the substance that is being detected according to chemical formula.  For example, calcium carbonate is 'CaCO3'\n"
              }
            }
          }
        }
      },
      "IfcSensor.LEVELSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects fill level, such as for a tank.\n\n\n"
      },
      "IfcSensor.WINDSENSOR": {
        "Parent": "IfcSensor",
        "Description": "",
        "Psets": {
          "Pset_SensorTypeWindSensor": {
            "Properties": {
              "SetPointSpeed": {
                "type": "real",
                "Description": "The wind speed value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              },
              "WindSensorType": {
                "type": "PEnum_WindSensorType",
                "Description": "Enumeration that Identifies the types of wind sensors that can be specified.\n",
                "values": [
                  "CUP",
                  "HOTWIRE",
                  "LASERDOPPLER",
                  "PLATE",
                  "SONIC",
                  "TUBE",
                  "WINDMILL"
                ]
              }
            }
          }
        }
      },
      "IfcSensor.FIRESENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects fire\n\n\n",
        "Psets": {
          "Pset_SensorTypeFireSensor": {
            "Properties": {
              "AccuracyOfFireSensor": {
                "type": "real",
                "Description": "The accuracy of the sensor.\n"
              },
              "FireSensorSetPoint": {
                "type": "real",
                "Description": "The temperature value to be sensed to indicate the presence of fire.\n"
              },
              "TimeConstant": {
                "type": "real",
                "Description": "The time constant of the sensor.\n"
              }
            }
          }
        }
      },
      "IfcSensor.TRAINSENSOR": {
        "Parent": "IfcSensor",
        "Description": ""
      },
      "IfcSensor.SNOWDEPTHSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or measures the depth of snowfall.\n\n\n"
      },
      "IfcSensor.COSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects carbon monoxide.\n\n\n"
      },
      "IfcSensor.RADIATIONSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects pressure.\n\n\n",
        "Psets": {
          "Pset_SensorTypeRadiationSensor": {
            "Properties": {
              "SetPointRadiation": {
                "type": "real",
                "Description": "The radiation power value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.TEMPERATURESENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects temperature.\n\n\n",
        "Psets": {
          "Pset_SensorTypeTemperatureSensor": {
            "Properties": {
              "SetPointTemperature": {
                "type": "real",
                "Description": "The temperature value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              },
              "TemperatureSensorType": {
                "type": "PEnum_TemperatureSensorType",
                "Description": "Enumeration that Identifies the types of temperature sensor that can be specified.\n",
                "values": [
                  "HIGHLIMIT",
                  "LOWLIMIT",
                  "OPERATINGTEMPERATURE",
                  "OUTSIDETEMPERATURE",
                  "ROOMTEMPERATURE"
                ]
              }
            }
          }
        }
      },
      "IfcSensor.CONDUCTANCESENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects electrical conductance.\n\n\n",
        "Psets": {
          "Pset_SensorTypeConductanceSensor": {
            "Properties": {
              "SetPointConductance": {
                "type": "real",
                "Description": "The fill level value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.TURNOUTCLOSURESENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects the position of a blade of a turnout.\n\n\n"
      },
      "IfcSensor.HEATSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects heat.\n\n\n",
        "Psets": {
          "Pset_SensorTypeHeatSensor": {
            "Properties": {
              "CoverageArea": {
                "type": "real",
                "Description": "The floor area that is covered by the sensor (typically measured as a circle whose center is at the location of the sensor).\n"
              },
              "RateOfTemperatureRise": {
                "type": "real",
                "Description": "The rate of temperature rise that is to be sensed as being hazardous.\n"
              },
              "SetPointTemperature": {
                "type": "real",
                "Description": "The temperature value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.EARTHQUAKESENSOR": {
        "Parent": "IfcSensor",
        "Description": ""
      },
      "IfcSensor.RAINSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or collects rainfall related information.\n\n\n"
      },
      "IfcSensor.PHSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects acidity.\n\n\n",
        "Psets": {
          "Pset_SensorTypePHSensor": {
            "Properties": {
              "SetPointPH": {
                "type": "real",
                "Description": "The fill level value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.HUMIDITYSENSOR": {
        "Parent": "IfcSensor",
        "Description": "",
        "Psets": {
          "Pset_SensorTypeHumiditySensor": {
            "Properties": {
              "SetPointHumidity": {
                "type": "real",
                "Description": "The humidity value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.FLOWSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects flow in a fluid.\n\n\n",
        "Psets": {
          "Pset_SensorTypeFlowSensor": {
            "Properties": {
              "SetPointFlow": {
                "type": "real",
                "Description": "The volumetric flow value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.CONTACTSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that senses or detects contact, such as for detecting if a door is closed.\n\n\n",
        "Psets": {
          "Pset_SensorTypeContactSensor": {
            "Properties": {
              "SetPointContact": {
                "type": "integer",
                "Description": "The contact value to be sensed. Use IfcPropertyBoundedValue.SetPointValue to set the set point value.\n"
              }
            }
          }
        }
      },
      "IfcSensor.IDENTIFIERSENSOR": {
        "Parent": "IfcSensor",
        "Description": "A device that reads a tag, such as for gaining access to a door or elevator\n\n\n",
        "Psets": {
          "Pset_SensorTypeIdentifierSensor": {
            "Properties": {
              "SetPointIdentifier": {
                "type": "string",
                "Description": "The detected tag value.\n"
              }
            }
          }
        }
      },
      "IfcUnitaryControlElement": {
        "Parent": "IfcDistributionControlElement",
        "Description": "A unitary control element combines a number of control components into a single product, such as a thermostat or humidistat.\n\n\n\nA unitary control element provides a housing for an aggregation of control or electrical distribution elements that, in combination, perform a singular (unitary) purpose. Each item in the aggregation may have its own geometric representation and location.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_UnitaryControlElementPHistory": {
            "Properties": {
              "Fan": {
                "type": "logical",
                "Description": "Indicates fan operation where True is on, False is off, and Unknown is automatic.\n",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "Mode": {
                "type": "string",
                "Description": "Table mapping operation mode identifiers to descriptive labels, which may be used for interpreting Pset_UnitaryControlElementPHistory.Mode.\n"
              },
              "SetPoint": {
                "type": "string",
                "Description": "Indicates the setpoint and label.  For toggle switches, there are two positions, 0 for off and 1 for on.  For dimmer switches, the values may indicate the fully-off and full-on positions, where missing integer values in between are interpolated.   For selector switches, the range indicates the available positions.  \n\nAn IfcTable may be attached (using IfcMetric and IfcPropertyConstraintRelationship) containing columns of the specified header names and types:\n\n'Position' (IfcInteger): The discrete setpoint level.\n\n'Sink' (IfcLabel): The Name of the switched input port (IfcDistributionPort with FlowDirection=SINK).\n\n'Source' (IfcLabel): The Name of the switched output port (IfcDistributionPort with FlowDirection=SOURCE).\n\n'Ratio' (IfcNormalizedRatioMeasure): The ratio of power at the setpoint where 0.0 is off and 1.0 is fully on.\n"
              },
              "Temperature": {
                "type": "real",
                "Description": "Temperature of the fluid. For air this value represents the dry bulb temperature.\n"
              }
            }
          },
          "Pset_UnitaryControlElementTypeCommon": {
            "Properties": {
              "Mode": {
                "type": "string",
                "Description": "Table mapping operation mode identifiers to descriptive labels, which may be used for interpreting Pset_UnitaryControlElementPHistory.Mode.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_UnitaryControlElementBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcUnitaryControlElement.HUMIDISTAT": {
        "Parent": "IfcUnitaryControlElement",
        "Description": "A control element that senses and regulates the humidity of a system or space so that the humidity is maintained near a desired setpoint.\n\n\n"
      },
      "IfcUnitaryControlElement.INDICATORPANEL": {
        "Parent": "IfcUnitaryControlElement",
        "Description": "",
        "Psets": {
          "Pset_UnitaryControlElementTypeIndicatorPanel": {
            "Properties": {
              "Application": {
                "type": "string",
                "Description": "Humidifier application.\n\n\n\nFixed: Humidifier installed in a ducted flow distribution system.\n\nPortable: Humidifier is not installed in a ducted flow distribution system.\n"
              }
            }
          }
        }
      },
      "IfcUnitaryControlElement.WEATHERSTATION": {
        "Parent": "IfcUnitaryControlElement",
        "Description": "A control element that senses multiple climate properties such as temperature, humidity, pressure, wind, and rain.\n\n\n"
      },
      "IfcUnitaryControlElement.THERMOSTAT": {
        "Parent": "IfcUnitaryControlElement",
        "Description": "",
        "Psets": {
          "Pset_UnitaryControlElementTypeThermostat": {
            "Properties": {
              "TemperatureSetPoint": {
                "type": "real",
                "Description": "The temperature setpoint range and default setpoint.\n"
              }
            }
          }
        }
      },
      "IfcUnitaryControlElement.CONTROLPANEL": {
        "Parent": "IfcUnitaryControlElement",
        "Description": "A control element at which devices that control or monitor the operation of a site, building or part of a building are located\n\n\n"
      },
      "IfcUnitaryControlElement.MIMICPANEL": {
        "Parent": "IfcUnitaryControlElement",
        "Description": ""
      },
      "IfcUnitaryControlElement.ALARMPANEL": {
        "Parent": "IfcUnitaryControlElement",
        "Description": ""
      },
      "IfcUnitaryControlElement.COMBINED": {
        "Parent": "IfcUnitaryControlElement",
        "Description": "Combination of at least two predefined types of unitary control element.\n\n\n"
      },
      "IfcUnitaryControlElement.GASDETECTIONPANEL": {
        "Parent": "IfcUnitaryControlElement",
        "Description": "A control element at which the detection of gas is annunciated.\n\n\n"
      },
      "IfcConstructionEquipmentResource": {
        "Parent": "IfcConstructionResource",
        "Description": "_IfcConstructionEquipmentResource_ is usage of construction equipment to assist in the performance of construction. Construction Equipment resources are wholly or partially consumed or occupied in the performance of construction.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\nOccurrences of _IfcConstructionEquipmentResource_ are products that are used as resources to assist the process of construction. More specifically, they are products that are standalone items brought to a project to fulfil a particular purpose. Examples might be a tower crane or other mobile crane, a screwing machine, or a lifting hoist.\n\n\n\nInstances of any subtype of _IfcProduct_ may be assigned to the equipment resource using _IfcRelAssignsToResource_ in order to characterize the equipment further, as described at the supertype _IfcResource_. Examples of relevant subtypes of _IfcProduct_ are _IfcTransportElement_, _IfcDiscreteAccessory_, or _IfcProxy_ (for particular cases where more precise usage details are not available)\n\n\n",
        "Psets": {
          "Qto_ConstructionEquipmentResourceBaseQuantities": {
            "Properties": {
              "OperatingTime": {
                "type": "q_time",
                "Description": "Productive time using the equipment including operating time and excluding idle time.\n"
              },
              "UsageTime": {
                "type": "q_time",
                "Description": "Total time using the equipment including operating time and idle time.\n"
              }
            }
          }
        }
      },
      "IfcConstructionMaterialResource": {
        "Parent": "IfcConstructionResource",
        "Description": "_IfcConstructionMaterialResource_ identifies a material resource type in a construction project.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The attribute _Suppliers_ has been deleted; use _IfcRelAssignsToResource_ to assign an _IfcActor_ to fulfill the role as a supplier. The attribute _UsageRatio_ has been deleted; use _BaseQuantityConsumed_ and _BaseQuantityProduced_ to indicate material usage.\n\n\n\nOccurrences of _IfcConstructionMaterialResource_ are consumed (wholly or partially), or occupied during a construction work task (_IfcTask_).\n\n\n\nSimilar to _IfcConstructionProductResource_, sometimes things such as 5000kg of gravel are already instantiated as an instance of an _IfcProduct_ subtype because it is a result of a work task (for example, &#145;transporting gravel&#146;). In this case, the instance of _IfcConstructionMaterialResource_ can be associated with the product instance &#145;5000kg of gravel&#146; to provide more information for resource uses. Nevertheless, _IfcConstructionMaterialResource_ should only be used to represent resource usage, but not product substances.\n\n\n\n> NOTE&nbsp; This entity is not the same as _IfcMaterial_. One one hand, _IfcConstructionMaterialResource_ represents usage of bulk materials such as sand, gravels, nails and so on. Physical manifestations can be instantiated from _IfcProduct_ as well, depending on their uses in the system, and such an _IfcProduct_ object can be assigned to the _IfcConstructionMaterialResource_ object via _IfcRelAssignsToResource_. On the other hand, _IfcMaterial_ is about physical materials that a physical building element consists of, possibly with detailed material layering information.\"\n\n\n",
        "Psets": {
          "Qto_ConstructionMaterialResourceBaseQuantities": {
            "Properties": {
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcConstructionResource": {
        "Parent": "IfcResource",
        "Description": "_IfcConstructionResource_ is an abstract generalization of the different resources used in construction projects, mainly labour, material, equipment and product resources, plus subcontracted resources and aggregations such as a crew resource.\n\n\n\nA resource represents \"use of something\" and does not necessarily correspond to a single item such as a person or vehicle, but represents a pool of items having limited availability such as general labor or an equipment fleet. A resource can represent either a generic resource pool (not having any task assignment) or a task-specific resource allocation (having an _IfcTask_ assignment).\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Modified in to promote _ResourceIdentifer_ and _ResourceGroup_ (renamed to _LongDescription_) to supertype _IfcResource_ and add attributes as described.\n\n\n\n{ .use-head}\n\nDeclaration use definition\n\n\n\nA root-level resource (specifically _IfcCrewResource_ or _IfcSubContractResource_) is declared within the project by _IfcRelDeclares_ where _RelatingContext_ refers to the single _IfcProject_ and _RelatedObjects_ refers to one or more _IfcConstructionResource_, and other root-level objects within the project.\n\n\n\n{ .use-head}\n\nAssignment use definition\n\n\n\nA resource may be assigned to an actor by _IfcRelAssignsToActor_ where _RelatingActor_ refers to an _IfcActor_ and _RelatedObjects_ refers to one or more _IfcConstructionResource_ or other objects. Such relationship indicates the actor responsible for allocating the resource such as partitioning into task-specific allocations, delegating to other actors, and/or scheduling over time. Note that this assignment does not indicate the person or organization performing the work; that is indicated by _IfcRelAssignsToResource_. The actor responsible for the resource may or may not be the same as any actor(s) performing work.\n\n\n\nA resource may be assigned to a control by _IfcRelAssignsToControl_ where _RelatingProduct_ refers to an _IfcControl_ and _RelatedObjects_ refers to one or more _IfcConstructionResource_ or other objects. Most commonly an _IfcWorkCalendar_ is assigned indicating availability of the resource, where such calendar is nested within a base calendar or an _IfcWorkPlan_ which in turn is assigned to the _IfcProject_.\n\n\n\nA resource may be assigned to a group by _IfcRelAssignsToGroup_ where _RelatingGroup_ refers to an _IfcGroup_ and _RelatedObjects_ refers to one or more _IfcConstructionResource_ or other objects. Most commonly an _IfcAsset_ is assigned indicating the asset to be tracked, where such asset is nested within an _IfcInventory_ which in turn is assigned to the _IfcProject_.\n\n\n\nA resource may be assigned to a product by _IfcRelAssignsToProduct_ where _RelatingProduct_ refers to an _IfcProduct_ and _RelatedObjects_ refers to one or more _IfcConstructionResource_ or other objects. Most commonly an _IfcElement_ subtype is assigned indicating the product to be constructed, where such product is connected to a spatial structure which in turn is aggregated within the _IfcProject_.\n\n\n\nA resource may be assigned to a process by _IfcRelAssignsToProcess_ where _RelatingProcess_ refers to an _IfcProcess_ and _RelatedObjects_ refers to one or more _IfcConstructionResource_ or other objects. Most commonly an _IfcTask_ is assigned indicating the task to be performed by the resource, where such task is nested within a summary task which in turn is assigned to the _IfcProject_.\n\n\n\nA resource may have assignments of other objects using _IfcRelAssignsToResource_ where _RelatingResource_ refers to the _IfcConstructionResource_ and _RelatedObjects_ refers to one or more objects such as _IfcActor_ or _IfcProduct_ subtypes. This relationship indicates specific objects assigned to fulfill resource usage.\n\n\n\nFigure 1 illustrates resource assignment.\n\n\n\n![\"Assignment Use Definition\"](../../../../figures/ifcconstructionresource-assignment.png \"Figure 1 &mdash; Construction resource assignment use\")\n\n\n\n{ .use-head}\n\nBaseline use definition\n\n\n\nA resource may have any number of baselines defined using the relationship _IfcRelDefinesByObject_ where _RelatingObject_ is the \"current\" resource and _RelatedObjects_ consists of multiple \"baseline\" resources, each representing a copy of the resource as it existed at an earlier point in time as shown in Figure 185. Each baseline _IfcConstructionResource_ is identified by its nested _IfcRelAssignsToControl_ relationship to an _IfcWorkSchedule_ having _PredefinedType=BASELINE_, _IfcWorkSchedule.CreationDate_ indicating the date of the baseline, and _IfcWorkSchedule.Name_ indicating the name of the baseline.\n\n\n\n![\"Baseline Use Definition\"](../../../../figures/ifcconstructionresource-baseline.png \"Figure 2 &mdash; Construction resource baseline use\")\n\n\n",
        "Psets": {
          "Pset_ConstructionResource": {
            "Properties": {
              "ActualCompletion": {
                "type": "real",
                "Description": "The actual completion percentage of the allocation.\n"
              },
              "ActualCost": {
                "type": "real",
                "Description": "The actual cost on behalf of the resource allocation.\n"
              },
              "ActualWork": {
                "type": "string",
                "Description": "The actual work on behalf of the resource allocation.\n"
              },
              "RemainingCost": {
                "type": "real",
                "Description": "The remaining cost on behalf of the resource allocation.\n"
              },
              "RemainingWork": {
                "type": "string",
                "Description": "The remaining work on behalf of the resource allocation.\n"
              },
              "ScheduleCompletion": {
                "type": "real",
                "Description": "The scheduled completion percentage of the allocation.\n"
              },
              "ScheduleCost": {
                "type": "real",
                "Description": "The budgeted cost on behalf of the resource allocation.\n"
              },
              "ScheduleWork": {
                "type": "string",
                "Description": "The scheduled work on behalf of the resource allocation.\n"
              }
            }
          }
        }
      },
      "IfcLaborResource": {
        "Parent": "IfcConstructionResource",
        "Description": "An _IfcLaborResource_ is used in construction with particular skills or crafts required to perform certain types of construction or management related work.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The attribute _Skillset_ has been deleted; use LongDescription to describe the skillset.\n\n\n\nThe purpose of an _IfcLaborResource_ is to identify a skillset that may be required or used. The skillset identified may be (for instance) charge-hand, foreman, labourer, plumbers mate etc. and provides a designation of a particular level of skill. It can be used to identify the generic type of labour resource that is required for a purpose without having to be specific about the actor (person or organization) providing the resource occurrence. It may be particularly useful when creating an overall plan for a process or processes. For instance, within maintenance or work planning there may be a known task that needs to be done which is planned to require a 'chargehand pipe fitter'. There may be several such labour resources available and so the need to identify which will be used is not necessary at the planning stage.\n\n\n\nAt a later stage, individual actors can be determined for the labour resources. This is achieved through specifying the actor through _IfcActor_. The actor is then identified as the labour resource occurrence through the _IfcRelAssignsToResource.RelatedResource_ attribute. The _IfcLaborResource_ provides the _IfcRelAssignsToResource_._RelatingResource_ attribute.\n\n\n",
        "Psets": {
          "Qto_LaborResourceBaseQuantities": {
            "Properties": {
              "OvertimeWork": {
                "type": "q_time",
                "Description": "Work that is performed after exceeding a particular limit such as hours per day and/or hours per week, after which company or municipal policy requires a different rate to apply.  Note: Policies for when overtime takes effect are the responsibility of the user or application; they are not modelled in IFC.\n"
              },
              "StandardWork": {
                "type": "q_time",
                "Description": "Work that is performed at regular times, up to a particular limit after which overtime rates may apply.\n"
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance": {
        "Parent": "IfcFlowTerminal",
        "Description": "An audio-visual appliance is a device that displays, captures, transmits, or receives audio or video.\n\n\n\nAudio-visual appliances may be fixed in place or may be able to be moved from one space to another. They may require an electrical supply that may be supplied either by an electrical circuit or provided from a local battery source. Audio-visual appliances may be connected to data circuits including specialist circuits for audio visual purposes only.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_AudioVisualAppliancePHistory": {
            "Properties": {
              "AudioVolume": {
                "type": "integer",
                "Description": "Indicates the audio volume level where the integer level corresponds to an entry or interpolation within Pset_AudioVisualApplianceTypeCommon.AudioVolume.\n"
              },
              "MediaContent": {
                "type": "string",
                "Description": "Indicates the media content storage location, such as URLs to camera footage within particular time periods.\n"
              },
              "MediaSource": {
                "type": "string",
                "Description": "Indicates media sources and corresponding names of ports (IfcDistributionPort with FlowDirection=SINK and PredefinedType=AUDIOVISUAL) or aggregated audio/video components (IfcAudioVisualAppliance).\n"
              },
              "PowerState": {
                "type": "boolean",
                "Description": "Indicates the power state of the device where True is on and False is off.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_AudioVisualApplianceTypeCommon": {
            "Properties": {
              "AudioVolume": {
                "type": "real",
                "Description": "Indicates the audio volume level where the integer level corresponds to an entry or interpolation within Pset_AudioVisualApplianceTypeCommon.AudioVolume.\n"
              },
              "MediaSource": {
                "type": "string",
                "Description": "Indicates media sources and corresponding names of ports (IfcDistributionPort with FlowDirection=SINK and PredefinedType=AUDIOVISUAL) or aggregated audio/video components (IfcAudioVisualAppliance).\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_AudioVisualApplianceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance.SPEAKER": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "A loudspeaker, speaker, or speaker system is an electroacoustical transducer that converts an electrical signal to sound.\n\n\n",
        "Psets": {
          "Pset_AudioVisualApplianceTypeSpeaker": {
            "Properties": {
              "FrequencyResponse": {
                "type": "real",
                "Description": "Indicates the output over a specified range of frequencies.\n"
              },
              "Impedence": {
                "type": "real",
                "Description": "Indicates the speaker impedence.\n"
              },
              "SpeakerDriverSize": {
                "type": "real",
                "Description": "Indicates the number of drivers and their sizes.\n"
              },
              "SpeakerMounting": {
                "type": "string",
                "Description": "Indicates how the speaker is designed to be mounted.\n"
              },
              "SpeakerType": {
                "type": "string",
                "Description": "Indicates the type of speaker.\n"
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance.DISPLAY": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "",
        "Psets": {
          "Pset_AudioVisualApplianceTypeDisplay": {
            "Properties": {
              "AudioMode": {
                "type": "string",
                "Description": "Indicates audio sound modes and corresponding labels, if applicable.\n"
              },
              "Brightness": {
                "type": "real",
                "Description": "Indicates the display brightness.\n"
              },
              "ContrastRatio": {
                "type": "real",
                "Description": "Indicates the display contrast ratio.\n"
              },
              "DisplayHeight": {
                "type": "real",
                "Description": "Indicates the physical height of the screen (only the display surface).\n"
              },
              "DisplayType": {
                "type": "string",
                "Description": "Indicates the type of display.\n"
              },
              "DisplayWidth": {
                "type": "real",
                "Description": "Indicates the physical width of the screen (only the display surface).\n"
              },
              "NominalSize": {
                "type": "real",
                "Description": "Indicates the diagonal screen size.\n"
              },
              "RefreshRate": {
                "type": "real",
                "Description": "Indicates the display refresh frequency.\n"
              },
              "TouchScreen": {
                "type": "string",
                "Description": "Indicates touchscreen support.\n"
              },
              "VideoCaptionMode": {
                "type": "string",
                "Description": "Indicates video closed captioning modes.\n"
              },
              "VideoResolutionHeight": {
                "type": "integer",
                "Description": "Indicates the number of vertical pixels (the largest native video resolution height).\n"
              },
              "VideoResolutionMode": {
                "type": "string",
                "Description": "Indicates video resolution modes.\n"
              },
              "VideoResolutionWidth": {
                "type": "integer",
                "Description": "Indicates the number of horizontal pixels (the largest native video resolution width).\n"
              },
              "VideoScaleMode": {
                "type": "string",
                "Description": "Indicates video scaling modes.\n"
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance.TELEPHONE": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "A telecommunications device that is used to transmit and receive sound, and optionally video.\n\n\n",
        "Psets": {
          "Pset_AudioVisualApplianceTypeRailwayCommunicationTerminal": {
            "Properties": {
              "TelephoneType": {
                "type": "penum_communicationterminaltype",
                "Description": ""
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance.AMPLIFIER": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "",
        "Psets": {
          "Pset_AudioVisualApplianceTypeAmplifier": {
            "Properties": {
              "AmplifierType": {
                "type": "string",
                "Description": "Indicates the type of amplifier.\n"
              },
              "AudioAmplification": {
                "type": "real",
                "Description": "Indicates audio amplification frequency ranges.\n"
              },
              "AudioMode": {
                "type": "string",
                "Description": "Indicates audio sound modes and corresponding labels, if applicable.\n"
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance.CAMERA": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "",
        "Psets": {
          "Pset_AudioVisualApplianceTypeCamera": {
            "Properties": {
              "CameraType": {
                "type": "string",
                "Description": "Indicates the type of camera.\n"
              },
              "IsOutdoors": {
                "type": "boolean",
                "Description": "Indicates if camera is designed to be used outdoors.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PanHorizontal": {
                "type": "real",
                "Description": "Indicates horizontal range for panning.\n"
              },
              "PanTiltZoomPreset": {
                "type": "string",
                "Description": "Indicates pan/tilt/zoom position presets.\n"
              },
              "PanVertical": {
                "type": "real",
                "Description": "Indicates vertical range for panning.\n"
              },
              "TiltHorizontal": {
                "type": "real",
                "Description": "Indicates horizontal range for pivoting, where positive values indicate the camera rotating clockwise,\n"
              },
              "TiltVertical": {
                "type": "real",
                "Description": "Indicates vertical range for pivoting, where 0.0 is level, +90 degrees is looking up, -90 degrees is looking down.\n"
              },
              "VideoCaptureInterval": {
                "type": "real",
                "Description": "Indicates video frame capture time intervals.\n"
              },
              "VideoResolutionHeight": {
                "type": "integer",
                "Description": "Indicates the number of vertical pixels (the largest native video resolution height).\n"
              },
              "VideoResolutionMode": {
                "type": "string",
                "Description": "Indicates video resolution modes.\n"
              },
              "VideoResolutionWidth": {
                "type": "integer",
                "Description": "Indicates the number of horizontal pixels (the largest native video resolution width).\n"
              },
              "Zoom": {
                "type": "real",
                "Description": "Indicates the zoom range.\n"
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance.RAILWAY_COMMUNICATION_TERMINAL": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "",
        "Psets": {
          "Pset_AudioVisualApplianceTypeRailwayCommunicationTerminal": {
            "Properties": {
              "TelephoneType": {
                "type": "penum_communicationterminaltype",
                "Description": ""
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance.PROJECTOR": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "An apparatus for projecting a picture on a screen. Whether the device is an overhead, slide projector, or a film projector, it is usually referred to as simply a projector.\n\n\n",
        "Psets": {
          "Pset_AudioVisualApplianceTypeProjector": {
            "Properties": {
              "ProjectorType": {
                "type": "string",
                "Description": "Indicates the type of projector.\n"
              },
              "VideoCaptionMode": {
                "type": "string",
                "Description": "Indicates video closed captioning modes.\n"
              },
              "VideoResolutionHeight": {
                "type": "integer",
                "Description": "Indicates the number of vertical pixels (the largest native video resolution height).\n"
              },
              "VideoResolutionMode": {
                "type": "string",
                "Description": "Indicates video resolution modes.\n"
              },
              "VideoResolutionWidth": {
                "type": "integer",
                "Description": "Indicates the number of horizontal pixels (the largest native video resolution width).\n"
              },
              "VideoScaleMode": {
                "type": "string",
                "Description": "Indicates video scaling modes.\n"
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance.TUNER": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "An electronic receiver that detects, demodulates, and amplifies transmitted signals.\n\n\n",
        "Psets": {
          "Pset_AudioVisualApplianceTypeTuner": {
            "Properties": {
              "TunerChannel": {
                "type": "string",
                "Description": "Indicates the tuner channels, if applicable.\n"
              },
              "TunerFrequency": {
                "type": "real",
                "Description": "Indicates the tuner frequencies, if applicable.\n"
              },
              "TunerMode": {
                "type": "string",
                "Description": "Indicates the tuner modes (or bands).  For example, 'AnalogCable', 'DigitalAir', 'AM', 'FM'.\n"
              },
              "TunerType": {
                "type": "string",
                "Description": "Indicates the tuner type.\n"
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance.RECEIVER": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "A device that receives audio and/or video signals, switches sources, and amplifies signals to play through speakers.\n\n\n",
        "Psets": {
          "Pset_AudioVisualApplianceTypeReceiver": {
            "Properties": {
              "AudioAmplification": {
                "type": "real",
                "Description": "Indicates audio amplification frequency ranges.\n"
              },
              "AudioMode": {
                "type": "string",
                "Description": "Indicates audio sound modes and corresponding labels, if applicable.\n"
              },
              "ReceiverType": {
                "type": "string",
                "Description": "Indicates the type of receiver.\n"
              }
            }
          }
        }
      },
      "IfcAudioVisualAppliance.MICROPHONE": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "An acoustic-to-electric transducer or sensor that converts sound into an electrical signal.  Microphones types in use include electromagnetic induction (dynamic microphones), capacitance change (condenser microphones) or piezoelectric generation to produce the signal from mechanical vibration.\n\n\n"
      },
      "IfcAudioVisualAppliance.SWITCHER": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "A device that receives audio and/or video signals, switches sources, and transmits signals to downstream devices.\n\n\n"
      },
      "IfcAudioVisualAppliance.PLAYER": {
        "Parent": "IfcAudioVisualAppliance",
        "Description": "A device that plays audio and/or video content directly or to another device, having fixed or removable storage media.\n\n\n",
        "Psets": {
          "Pset_AudioVisualApplianceTypePlayer": {
            "Properties": {
              "PlayerMediaEject": {
                "type": "boolean",
                "Description": "Indicates whether the media can be ejected from the player (if physical media).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PlayerMediaFormat": {
                "type": "string",
                "Description": "Indicates supported media formats.\n"
              },
              "PlayerType": {
                "type": "string",
                "Description": "Indicates the type of player.\n"
              }
            }
          }
        }
      },
      "IfcCableCarrierFitting": {
        "Parent": "IfcFlowFitting",
        "Description": "A cable carrier fitting is a fitting that is placed at junction or transition in a cable carrier system.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_CableCarrierFittingTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_CableCarrierFittingBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcCableCarrierFitting.BEND": {
        "Parent": "IfcCableCarrierFitting",
        "Description": "A fitting that changes the route of the cable carrier.\n\n\n"
      },
      "IfcCableCarrierFitting.CROSS": {
        "Parent": "IfcCableCarrierFitting",
        "Description": "A fitting at which two branches are taken from the main route of the cable carrier simultaneously.\n\n\n"
      },
      "IfcCableCarrierFitting.TEE": {
        "Parent": "IfcCableCarrierFitting",
        "Description": "A fitting at which a branch is taken from the main route of the cable carrier.\n\n\n"
      },
      "IfcCableCarrierFitting.REDUCER": {
        "Parent": "IfcCableCarrierFitting",
        "Description": "A fitting that changes the physical size of the main route of the cable carrier.\n\n\n"
      },
      "IfcCableCarrierSegment": {
        "Parent": "IfcFlowSegment",
        "Description": "A cable carrier segment is a flow segment that is specifically used to carry and support cabling.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_CableCarrierSegmentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_CableCarrierSegmentBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the profile. For example measured in mm2. If given, the value of the cross section area shall be greater than zero.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "OuterSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the extruded surfaces of the footing (not taking into account the end cap areas), normally generated as perimeter \\* length.\n"
              }
            }
          }
        }
      },
      "IfcCableCarrierSegment.CABLELADDERSEGMENT": {
        "Parent": "IfcCableCarrierSegment",
        "Description": "",
        "Psets": {
          "Pset_CableCarrierSegmentTypeCableLadderSegment": {
            "Properties": {
              "LadderConfiguration": {
                "type": "string",
                "Description": "Description of the configuration of the ladder structure used.\n"
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcCableCarrierSegment.CABLEBRACKET": {
        "Parent": "IfcCableCarrierSegment",
        "Description": ""
      },
      "IfcCableCarrierSegment.CABLETRAYSEGMENT": {
        "Parent": "IfcCableCarrierSegment",
        "Description": "A (typically) open carrier segment onto which cables are laid.\n\n\n",
        "Psets": {
          "Pset_CableCarrierSegmentTypeCableTraySegment": {
            "Properties": {
              "HasCover": {
                "type": "boolean",
                "Description": "Indication of whether the cable tray has a cover (=TRUE) or not (= FALSE). By default, this value should be set to FALSE..\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcCableCarrierSegment.CONDUITSEGMENT": {
        "Parent": "IfcCableCarrierSegment",
        "Description": "An enclosed tubular carrier segment through which cables are pulled.\n\n\n",
        "Psets": {
          "Pset_CableCarrierSegmentTypeConduitSegment": {
            "Properties": {
              "ConduitShapeType": {
                "type": "PEnum_ConduitShapeType",
                "Description": "The shape of the conduit segment.\n",
                "values": [
                  "CIRCULAR",
                  "OVAL"
                ]
              },
              "IsRigid": {
                "type": "boolean",
                "Description": "Indication of whether the conduit is rigid (= TRUE) or flexible (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "IsUnderground": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_CableConduitGeneral": {
            "Properties": {
              "IsUnderground": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcCableCarrierSegment.CABLETRUNKINGSEGMENT": {
        "Parent": "IfcCableCarrierSegment",
        "Description": "",
        "Psets": {
          "Pset_CableCarrierSegmentTypeCableTrunkingSegment": {
            "Properties": {
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NumberOfCompartments": {
                "type": "integer",
                "Description": "The number of separate internal compartments within the trunking.\n"
              }
            }
          }
        }
      },
      "IfcCableCarrierSegment.DROPPER": {
        "Parent": "IfcCableCarrierSegment",
        "Description": "A dropper is a cable carrier used to suspend cable from another cable. It could also conduct electricity.\n\n\n"
      },
      "IfcCableCarrierSegment.CATENARYWIRE": {
        "Parent": "IfcCableCarrierSegment",
        "Description": "A catenary wire is a longitudinal wire supporting the grooved contact wires either directly or indirectly.\n\nNote: definition from UIC 719-1.\n\n\n"
      },
      "IfcCableFitting": {
        "Parent": "IfcFlowFitting",
        "Description": "A cable fitting is a fitting that is placed at a junction, transition or termination in a cable system.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_CableFittingTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_CableFittingBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcCableFitting.TRANSITION": {
        "Parent": "IfcCableFitting",
        "Description": "A fitting that joins two cable segments of different connector types.\n\n\n"
      },
      "IfcCableFitting.EXIT": {
        "Parent": "IfcCableFitting",
        "Description": ""
      },
      "IfcCableFitting.ENTRY": {
        "Parent": "IfcCableFitting",
        "Description": "A fitting that begins a cable segment at a non-electrical element such as a grounding clamp attached to a pipe.\n\n\n"
      },
      "IfcCableFitting.FANOUT": {
        "Parent": "IfcCableFitting",
        "Description": "A fan out is a special cable fitting that provides a safe transition from multi-fiber cable units to individual fibers.\n\n\n"
      },
      "IfcCableFitting.JUNCTION": {
        "Parent": "IfcCableFitting",
        "Description": ""
      },
      "IfcCableFitting.CONNECTOR": {
        "Parent": "IfcCableFitting",
        "Description": "A fitting that joins two cable segments of the same connector type (though potentially different gender).\n\n\n"
      },
      "IfcCableSegment": {
        "Parent": "IfcFlowSegment",
        "Description": "A cable segment is a flow segment used to carry electrical power, data, or telecommunications signals.\n\n\n\nA cable segment is used to typically join two sections of an electrical network or a network of components carrying the electrical service.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_CableSegmentOccurrence": {
            "Properties": {
              "CarrierStackNumber": {
                "type": "integer",
                "Description": "Number of carrier segments (tray, ladder etc.) that are vertically stacked (vertical is measured as the z-axis of the local coordinate system of the carrier segment).\n"
              },
              "CurrentCarryingCapasity": {
                "type": "real",
                "Description": "Maximum value of electric current which can be carried continuously by a conductor, a device or an apparatus, under specified conditions without its steady-state temperature exceeding a  specified value. Based on IEC60826-11-13. NOTE: The temperature specified value is maximum Design Ambient Temperature.\n"
              },
              "DesignAmbientTemperature": {
                "type": "real",
                "Description": "The highest and lowest local ambient temperature likely to be encountered.\n"
              },
              "DistanceBetweenParallelCircuits": {
                "type": "real",
                "Description": "Distance measured between parallel circuits.\n"
              },
              "InstallationMethod": {
                "type": "string",
                "Description": "Method of installation of cable/conductor. Installation methods are typically defined by reference in standards such as IEC 60364-5-52, table 52A-1 or BS7671 Appendix 4 Table 4A1 etc. Selection of the value to be used should be determined from such a standard according to local usage.\n"
              },
              "InstallationMethodFlagEnum": {
                "type": "PEnum_InstallationMethodFlagEnum",
                "Description": "Special installation conditions relating to particular types of installation based on IEC60364-5-52:2001 reference installation methods C and D.\n",
                "values": [
                  "BELOWCEILING",
                  "INDUCT",
                  "INSOIL",
                  "ONWALL"
                ]
              },
              "IsHorizontalCable": {
                "type": "boolean",
                "Description": "Indication of whether the cable occurrences are mounted horizontally (= TRUE) or vertically (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsMountedFlatCable": {
                "type": "boolean",
                "Description": "Indication of whether the cable occurrences are mounted flat (= TRUE) or in a trefoil pattern (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaximumCableLength": {
                "type": "real",
                "Description": "Maximum cable length based on voltagedrop. NOTE: This value may also be specified as a constraint within an IFC model if required but is included within the property set at this stage pending implementation of the required capabilities within software applications.\n"
              },
              "MountingMethod": {
                "type": "string",
                "Description": "The method of mounting cable segment occurrences on a cable carrier occurrence from which the method required can be selected. This is for the purpose of carrying out 'worst case' cable sizing calculations and may be a conceptual requirement rather than a statement of the physical occurrences of cable and carrier segments.\n"
              },
              "NumberOfParallelCircuits": {
                "type": "integer",
                "Description": "Number of parallel circuits.\n"
              },
              "PowerLoss": {
                "type": "real",
                "Description": "The power loss in [W] per pole of the MCB  when the nominal current is flowing through the MCB.\n"
              },
              "SoilConductivity": {
                "type": "real",
                "Description": "Thermal conductivity of soil. Generally, within standards such as IEC 60364-5-52, table 52A-16, the resistivity of soil is required (measured in [SI] units of degK.m /W). This is the reciprocal of the conductivity value and needs to be calculated accordingly.\n"
              },
              "UserCorrectionFactor": {
                "type": "real",
                "Description": "An arbitrary correction factor that may be applied by the user.\n"
              }
            }
          },
          "Pset_CableSegmentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_CableSegmentBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the profile. For example measured in mm2. If given, the value of the cross section area shall be greater than zero.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "OuterSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the extruded surfaces of the footing (not taking into account the end cap areas), normally generated as perimeter \\* length.\n"
              }
            }
          }
        }
      },
      "IfcCableSegment.CONTACTWIRESEGMENT": {
        "Parent": "IfcCableSegment",
        "Description": "An electric conductor of an overhead contact line with which the current collectors make contact.  \n\nNote: definition from IEC60050 811-33-15.\n\n\n"
      },
      "IfcCableSegment.CORESEGMENT": {
        "Parent": "IfcCableSegment",
        "Description": "A self contained element of a  cable that comprises one or more conductors and sheathing.The core of one lead is normally single wired or multiwired which are intertwined.\n\n\n",
        "Psets": {
          "Pset_CableSegmentTypeCoreSegment": {
            "Properties": {
              "CoreIdentifier": {
                "type": "string",
                "Description": "The core identification used  Identifiers may be used such as by color (Black, Brown, Grey) or by number (1, 2, 3) or by IEC phase reference (L1, L2, L3) etc.\n"
              },
              "FunctionReliable": {
                "type": "boolean",
                "Description": "Cable/bus maintain given properties/functions over a given (tested) time and conditions. According to IEC standard.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HalogenProof": {
                "type": "boolean",
                "Description": "Produces small amount of smoke and irritating Deaerator/Gas.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "OverallDiameter": {
                "type": "real",
                "Description": "The overall diameter of a core (maximun space used).\n"
              },
              "RatedTemperature": {
                "type": "real",
                "Description": "The range of allowed temerature that a device is certified to handle. The upper bound of this value is the maximum.\n"
              },
              "RatedVoltage": {
                "type": "real",
                "Description": "The range of allowed voltage that a device is certified to handle. The upper bound of this value is the maximum.\n"
              },
              "ScreenDiameter": {
                "type": "real",
                "Description": "The diameter of the screen around a cable or bus segment (if present).\n"
              },
              "SelfExtinguishing60332_1": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SelfExtinguishing60332_3": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SheathColors": {
                "type": "string",
                "Description": "Colour of the core (derived from IEC 60757). Note that the combined color 'GreenAndYellow' shall be used only as Protective Earth (PE) conductors according to the requirements of IEC 60446.\n"
              },
              "Standard": {
                "type": "string",
                "Description": "The designation of the standard applicable for the definition of the characteristics of the\n\ntripping_unit.\n"
              },
              "Weight": {
                "type": "real",
                "Description": "The weight of the humidifier.\n"
              }
            }
          }
        }
      },
      "IfcCableSegment.WIREPAIRSEGMENT": {
        "Parent": "IfcCableSegment",
        "Description": ""
      },
      "IfcCableSegment.BUSBARSEGMENT": {
        "Parent": "IfcCableSegment",
        "Description": "Electrical conductor that makes a common connection between several electrical circuits. Properties of a busbar are the same as those of a cable segment and are captured by the cable segment property set.\n\n\n",
        "Psets": {
          "Pset_CableSegmentTypeBusBarSegment": {
            "Properties": {
              "IsHorizontalBusbar": {
                "type": "boolean",
                "Description": "Indication of whether the busbar occurrences are routed horizontally (= TRUE) or vertically (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcCableSegment.CONDUCTORSEGMENT": {
        "Parent": "IfcCableSegment",
        "Description": "A single linear element within a cable or an exposed wire (such as for grounding) with the specific purpose to lead electric current, data, or a telecommunications signal.\n\n\n",
        "Psets": {
          "Pset_CableSegmentTypeConductorSegment": {
            "Properties": {
              "Construction": {
                "type": "string",
                "Description": "Purpose of informing on how the vonductor is constucted (interwined or solid). I.e. Solid (IEV 461-01-06), stranded (IEV 461-01-07), solid-/finestranded(IEV 461-01-11) (not flexible/flexible).\n"
              },
              "CrossSectionalArea": {
                "type": "real",
                "Description": "Cross section area of the phase(s) lead(s).\n"
              },
              "Function": {
                "type": "string",
                "Description": "Type of function for which the conductor is intended.\n"
              },
              "Material": {
                "type": "string",
                "Description": "Type of material from which the conductor is constructed.\n"
              },
              "Shape": {
                "type": "string",
                "Description": "Cross sectional shape. Note that this shape is uniform throughout the length of the segment. For nonuniform shapes, a transition fitting should be used instead.\n"
              }
            }
          }
        }
      },
      "IfcCableSegment.FIBERTUBE": {
        "Parent": "IfcCableSegment",
        "Description": "A fiber tube is semi-rigid hollow plastic tube with a very small radius that houses and protects a certain number of optical fiber segments. An optical cable segment may contain many fiber tubes.\n\n\n"
      },
      "IfcCableSegment.OPTICALCABLESEGMENT": {
        "Parent": "IfcCableSegment",
        "Description": "An optical cable segment is a cable segment that contains a variable number of optical fiber segments.\n\n\n"
      },
      "IfcCableSegment.STITCHWIRE": {
        "Parent": "IfcCableSegment",
        "Description": "A stitch wire consists of auxiliary wires and different components (clamp) used in stitched suspension.\n\n\n"
      },
      "IfcCableSegment.FIBERSEGMENT": {
        "Parent": "IfcCableSegment",
        "Description": "A fiber segment is an individual optical fiber used in telecommunication systems to transmit data by means of optical signals.\n\n\n"
      },
      "IfcCableSegment.CABLESEGMENT": {
        "Parent": "IfcCableSegment",
        "Description": "Cable with a specific purpose to lead electric current within a circuit or any other electric construction. Includes all types of electric cables, mainly several core segments or conductor segments wrapped together.\n\n\n",
        "Psets": {
          "Pset_CableSegmentTypeCableSegment": {
            "Properties": {
              "FunctionReliable": {
                "type": "boolean",
                "Description": "Cable/bus maintain given properties/functions over a given (tested) time and conditions. According to IEC standard.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HalogenProof": {
                "type": "boolean",
                "Description": "Produces small amount of smoke and irritating Deaerator/Gas.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasProtectiveEarth": {
                "type": "boolean",
                "Description": "Indicates whether the electrical device has a protective earth connection (=TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaximumOperatingTemperature": {
                "type": "real",
                "Description": "The maximum temperature at which a cable or bus is certified to operate.\n"
              },
              "MaximumShortCircuitTemperature": {
                "type": "real",
                "Description": "The maximum short circuit temperature at which a cable or bus is certified to operate.\n"
              },
              "NumberOfCores": {
                "type": "integer",
                "Description": "The number of cores in Cable/Bus.\n"
              },
              "OverallDiameter": {
                "type": "real",
                "Description": "The overall diameter of a core (maximun space used).\n"
              },
              "RatedTemperature": {
                "type": "real",
                "Description": "The range of allowed temerature that a device is certified to handle. The upper bound of this value is the maximum.\n"
              },
              "RatedVoltage": {
                "type": "real",
                "Description": "The range of allowed voltage that a device is certified to handle. The upper bound of this value is the maximum.\n"
              },
              "ScreenDiameter": {
                "type": "real",
                "Description": "The diameter of the screen around a cable or bus segment (if present).\n"
              },
              "SelfExtinguishing60332_1": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SelfExtinguishing60332_3": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SpecialConstruction": {
                "type": "string",
                "Description": "Special construction capabilities like self-supporting, flat devidable cable or bus flat non devidable cable or bus supporting elements inside (steal, textile, concentric conductor). Note that materials used should be agreed between exchange participants before use.\n"
              },
              "Standard": {
                "type": "string",
                "Description": "The designation of the standard applicable for the definition of the characteristics of the\n\ntripping_unit.\n"
              },
              "Weight": {
                "type": "real",
                "Description": "The weight of the humidifier.\n"
              }
            }
          }
        }
      },
      "IfcCommunicationsAppliance": {
        "Parent": "IfcFlowTerminal",
        "Description": "A communications appliance transmits and receives electronic or digital information as data or sound.\n\n\n\nCommunication appliances may be fixed in place or may be able to be moved from one space to another. Communication appliances require an electrical supply that may be supplied either by an electrical circuit or provided from a local battery source.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_CommunicationsAppliancePHistory": {
            "Properties": {
              "PowerState": {
                "type": "boolean",
                "Description": "Indicates the power state of the device where True is on and False is off.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_CommunicationsApplianceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_CommunicationsApplianceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcCommunicationsAppliance.TRANSPONDER": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A transponder is a communication, monitoring, or control device that, upon receiving a signal, emits a different signal in response. Transponders can be either passive or active (e.g., electronic beacon, balise).\n\n\n",
        "Psets": {
          "Pset_TransponderGeneral": {
            "Properties": {
              "IsActive": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcCommunicationsAppliance.AUTOMATON": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A self-acting artificial device, the behaviour of which is governed either in a stepwise manner by given decision rules or continuously in time by defined relationships, while the output variables of which are created from its input and state variables.\n\nNote: definition from IEC 60050-351-42-32.\n\n\n"
      },
      "IfcCommunicationsAppliance.ROUTER": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A router is a networking device whose software and hardware are usually tailored to the tasks of routing and forwarding information. For example, on the Internet, information is directed to various paths by routers.\n\n\n"
      },
      "IfcCommunicationsAppliance.NETWORKHUB": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A network hub connects multiple network segments at the physical layer (layer 1) of the OSI model.\n\n\n"
      },
      "IfcCommunicationsAppliance.SCANNER": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A machine that has the primary function of scanning the content of printed matter and converting it to digital format that can be stored in a computer.\n\n\n"
      },
      "IfcCommunicationsAppliance.COMPUTER": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A desktop, laptop, tablet, or other type of computer that can be moved from one place to another and connected to an electrical supply via a plugged outlet.\n\n\n"
      },
      "IfcCommunicationsAppliance.NETWORKBRIDGE": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A network bridge connects multiple network segments at the data link layer (layer 2) of the OSI model, and the term layer 2 switch is very often used interchangeably with bridge.\n\n\n"
      },
      "IfcCommunicationsAppliance.REPEATER": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A repeater is an electronic device that receives a signal and retransmits it at a higher level and/or higher power, or onto the other side of an obstruction, so that the signal can cover longer distances without degradation.\n\n\n"
      },
      "IfcCommunicationsAppliance.NETWORKAPPLIANCE": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": ""
      },
      "IfcCommunicationsAppliance.ANTENNA": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A transducer designed to transmit or receive electromagnetic waves.\n\n\n"
      },
      "IfcCommunicationsAppliance.TRANSPORTEQUIPMENT": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A transport equipment is a network element responsible for providing functionality of transport, multiplexing, switching, management and supervision of transmission channels between different hosts. The data transport service uses three specific metrics: the bandwidth, the jitter, and the packet loss rate.\n\n\n"
      },
      "IfcCommunicationsAppliance.FAX": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": ""
      },
      "IfcCommunicationsAppliance.PRINTER": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A machine that has the primary function of printing text and/or graphics onto paper or other media.\n\n\n"
      },
      "IfcCommunicationsAppliance.TRANSITIONCOMPONENT": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": ""
      },
      "IfcCommunicationsAppliance.IP_NETWORK_EQUIPMENT": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": ""
      },
      "IfcCommunicationsAppliance.TELEPHONYEXCHANGE": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A telephony exchange is a device that ensures the routing of telephone calls and communications.\n\n\n"
      },
      "IfcCommunicationsAppliance.TELECOMMAND": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": ""
      },
      "IfcCommunicationsAppliance.OPTICAL_NETWORK_UNIT": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": ""
      },
      "IfcCommunicationsAppliance.MODEM": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": "A modem (from modulator-demodulator) is a device that modulates an analog carrier signal to encode digital information, and also demodulates such a carrier signal to decode the transmitted information.\n\n\n"
      },
      "IfcCommunicationsAppliance.GATEWAY": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": ""
      },
      "IfcCommunicationsAppliance.INTELLIGENT_PERIPHERAL": {
        "Parent": "IfcCommunicationsAppliance",
        "Description": ""
      },
      "IfcElectricAppliance": {
        "Parent": "IfcFlowTerminal",
        "Description": "An electric appliance is a device intended for consumer usage that is powered by electricity.\n\n\n\nElectric appliances may be fixed in place or may be able to be moved from one space to another. Electric appliances require an electrical supply that may be supplied either by an electrical circuit or provided from a local battery source.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_ElectricAppliancePHistory": {
            "Properties": {
              "PowerState": {
                "type": "boolean",
                "Description": "Indicates the power state of the device where True is on and False is off.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_ElectricApplianceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_ElectricApplianceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcElectricAppliance.MICROWAVE": {
        "Parent": "IfcElectricAppliance",
        "Description": ""
      },
      "IfcElectricAppliance.FREEZER": {
        "Parent": "IfcElectricAppliance",
        "Description": "An electrical appliance that has the primary function of storing food at temperatures below the freezing point of water.\n\n\n"
      },
      "IfcElectricAppliance.FREESTANDINGFAN": {
        "Parent": "IfcElectricAppliance",
        "Description": "An electrical appliance that is used occasionally to provide ventilation. A freestanding fan is a 'plugged' appliance whose load may be removed from an electric circuit.\n\n\n"
      },
      "IfcElectricAppliance.KITCHENMACHINE": {
        "Parent": "IfcElectricAppliance",
        "Description": "A specialized appliance used in commercial kitchens such as a mixer.\n\n\n"
      },
      "IfcElectricAppliance.FREESTANDINGELECTRICHEATER": {
        "Parent": "IfcElectricAppliance",
        "Description": ""
      },
      "IfcElectricAppliance.TUMBLEDRYER": {
        "Parent": "IfcElectricAppliance",
        "Description": "An electrical appliance that has the primary function of drying clothes.\n\n\n"
      },
      "IfcElectricAppliance.FRIDGE_FREEZER": {
        "Parent": "IfcElectricAppliance",
        "Description": "An electrical appliance that combines the functions of a freezer and a refrigerator through the provision of separate compartments.\n\n\n"
      },
      "IfcElectricAppliance.DISHWASHER": {
        "Parent": "IfcElectricAppliance",
        "Description": "An appliance that has the primary function of washing dishes.\n\n\n",
        "Psets": {
          "Pset_ElectricApplianceTypeDishwasher": {
            "Properties": {
              "DishwasherType": {
                "type": "string",
                "Description": "Type of dishwasher.\n"
              }
            }
          }
        }
      },
      "IfcElectricAppliance.PHOTOCOPIER": {
        "Parent": "IfcElectricAppliance",
        "Description": "A machine that has the primary function of reproduction of printed matter.\n\n\n"
      },
      "IfcElectricAppliance.FREESTANDINGWATERHEATER": {
        "Parent": "IfcElectricAppliance",
        "Description": ""
      },
      "IfcElectricAppliance.ELECTRICCOOKER": {
        "Parent": "IfcElectricAppliance",
        "Description": "An electrical appliance that has the primary function of cooking food (including oven, hob, grill).\n\n\n",
        "Psets": {
          "Pset_ElectricApplianceTypeElectricCooker": {
            "Properties": {
              "ElectricCookerType": {
                "type": "string",
                "Description": "Type of electric cooker.\n"
              }
            }
          }
        }
      },
      "IfcElectricAppliance.WASHINGMACHINE": {
        "Parent": "IfcElectricAppliance",
        "Description": "An appliance that has the primary function of washing clothes.\n\n\n"
      },
      "IfcElectricAppliance.HANDDRYER": {
        "Parent": "IfcElectricAppliance",
        "Description": "An electrical appliance that has the primary function of drying hands.\n\n\n"
      },
      "IfcElectricAppliance.FREESTANDINGWATERCOOLER": {
        "Parent": "IfcElectricAppliance",
        "Description": ""
      },
      "IfcElectricAppliance.REFRIGERATOR": {
        "Parent": "IfcElectricAppliance",
        "Description": "An electrical appliance that has the primary function of storing food at low temperature but above the freezing point of water.\n\n\n"
      },
      "IfcElectricAppliance.VENDINGMACHINE": {
        "Parent": "IfcElectricAppliance",
        "Description": "An appliance that stores and vends goods including food, drink, tickets, and goods of various types.\n\n\n"
      },
      "IfcElectricDistributionBoard": {
        "Parent": "IfcFlowController",
        "Description": "A distribution board is a flow controller in which instances of electrical devices are brought together at a single place for a particular purpose.\n\n\n\nA distribution provides a housing for connected electrical distribution elements so that they can be viewed, operated or acted upon from a single place. Each connected item may have its own geometric representation and location.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_DistributionBoardOccurrence": {
            "Properties": {
              "IsMain": {
                "type": "boolean",
                "Description": "Identifies if the current instance is a main distribution point or topmost level in an electrical distribution hierarchy (= TRUE) or a sub-main distribution point (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSkilledOperator": {
                "type": "boolean",
                "Description": "Identifies if the current instance requires a skilled person or instructed person to perform operations on the distribution board (= TRUE) or whether operations may be performed by a person without appropriate skills or instruction (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_DistributionBoardTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_DistributionBoardBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NumberOfCircuits": {
                "type": "q_count",
                "Description": "Number of parallel fluid tube circuits.\n"
              }
            }
          }
        }
      },
      "IfcElectricDistributionBoard.CONSUMERUNIT": {
        "Parent": "IfcElectricDistributionBoard",
        "Description": "A distribution point on the incoming electrical supply, typically in domestic premises, at which protective devices are located.\n\n\n"
      },
      "IfcElectricDistributionBoard.MOTORCONTROLCENTRE": {
        "Parent": "IfcElectricDistributionBoard",
        "Description": "A distribution point at which starting and control devices for major plant items are located.\n\n\n"
      },
      "IfcElectricDistributionBoard.DISTRIBUTIONBOARD": {
        "Parent": "IfcElectricDistributionBoard",
        "Description": ""
      },
      "IfcElectricDistributionBoard.SWITCHBOARD": {
        "Parent": "IfcElectricDistributionBoard",
        "Description": "A distribution point at which switching devices are located.\n\n\n"
      },
      "IfcElectricFlowStorageDevice": {
        "Parent": "IfcFlowStorageDevice",
        "Description": "An electric flow storage device is a device in which electrical energy is stored and from which energy may be progressively released.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_ElectricFlowStorageDeviceTypeCommon": {
            "Properties": {
              "ConnectedConductorFunction": {
                "type": "string",
                "Description": "Function of the conductors to which the load is connected.\n"
              },
              "EarthFault1PoleMaximumState": {
                "type": "real",
                "Description": "Maximum 1 pole earth fault current provided at the point of supply i.e. the fault between 1 phase and PE/PEN.\n"
              },
              "EarthFault1PoleMinimumState": {
                "type": "real",
                "Description": "Minimum 1 pole earth fault current provided at the point of supply i.e. the fault between 1 phase and PE/PEN.\n"
              },
              "EarthFault1PolePowerFactorMaximumState": {
                "type": "real",
                "Description": "Power factor of the maximum 1 pole earth fault  current provided at the point of supply i.e. the fault between 1 phase and PE/PEN.\n"
              },
              "EarthFault1PolePowerFactorMinimumState": {
                "type": "real",
                "Description": "Power factor of the minimum 1 pole earth fault current provided at the point of supply i.e. the fault between 1 phase and PE/PEN.\n"
              },
              "NominalFrequency": {
                "type": "real",
                "Description": "The nominal frequency of the supply.\n"
              },
              "NominalSupplyVoltage": {
                "type": "real",
                "Description": "The nominal voltage of the supply.\n"
              },
              "NominalSupplyVoltageOffset": {
                "type": "real",
                "Description": "The maximum and minimum allowed voltage of the supply e.g. boundaries of 380V/440V may be applied for a nominal voltage of 400V.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "ShortCircuit1PoleMaximumState": {
                "type": "real",
                "Description": "Maximum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N.\n"
              },
              "ShortCircuit1PoleMinimumState": {
                "type": "real",
                "Description": "Minimum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N.\n"
              },
              "ShortCircuit1PolePowerFactorMaximumState": {
                "type": "real",
                "Description": "Power factor of the maximum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N.\n"
              },
              "ShortCircuit1PolePowerFactorMinimumState": {
                "type": "real",
                "Description": "Power factor of the minimum 1 pole short circuit current provided at the point of supply i.e. the fault between 1 phase and N.\n"
              },
              "ShortCircuit2PoleMinimumState": {
                "type": "real",
                "Description": "Minimum 2 pole short circuit current provided at the point of supply.\n"
              },
              "ShortCircuit2PolePowerFactorMinimumState": {
                "type": "real",
                "Description": "Power factor of the minimum 2 pole short circuit current provided at the point of supply.\n"
              },
              "ShortCircuit3PoleMaximumState": {
                "type": "real",
                "Description": "Maximum 3 pole short circuit current provided at the point of supply.\n"
              },
              "ShortCircuit3PolePowerFactorMaximumState": {
                "type": "real",
                "Description": "Power factor of the maximum 3 pole short circuit current provided at the point of supply.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_ElectricFlowStorageDeviceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcElectricFlowStorageDevice.COMPENSATOR": {
        "Parent": "IfcElectricFlowStorageDevice",
        "Description": "A device that is used to fix or adjust the parameter of electric energy, such as voltage loss, power factor and so on.\n\n\n"
      },
      "IfcElectricFlowStorageDevice.CAPACITOR": {
        "Parent": "IfcElectricFlowStorageDevice",
        "Description": "A device that stores electric charge when an external power supply is present using the electrical property of capacitance. Two-terminal device characterized essentially by its capacitance.\n\nNote: definition from IEC 60050 151-13-28.\n\n\n"
      },
      "IfcElectricFlowStorageDevice.INDUCTORBANK": {
        "Parent": "IfcElectricFlowStorageDevice",
        "Description": ""
      },
      "IfcElectricFlowStorageDevice.INDUCTOR": {
        "Parent": "IfcElectricFlowStorageDevice",
        "Description": "A device used in circuits or power systems due to their inductance, acting as a component of electric storage device.\n\n\n"
      },
      "IfcElectricFlowStorageDevice.UPS": {
        "Parent": "IfcElectricFlowStorageDevice",
        "Description": "A device that provides a time limited alternative source of power supply in the event of failure of the main supply.\n\n\n"
      },
      "IfcElectricFlowStorageDevice.HARMONICFILTER": {
        "Parent": "IfcElectricFlowStorageDevice",
        "Description": ""
      },
      "IfcElectricFlowStorageDevice.RECHARGER": {
        "Parent": "IfcElectricFlowStorageDevice",
        "Description": "A recharger or battery charger is a device used to put energy into a secondary cell or rechargeable battery by forcing an electric current through it.\n\n\n"
      },
      "IfcElectricFlowStorageDevice.CAPACITORBANK": {
        "Parent": "IfcElectricFlowStorageDevice",
        "Description": "A device that stores electrical energy when an external power supply is present using the electrical property of capacitance.\n\n\n"
      },
      "IfcElectricFlowStorageDevice.BATTERY": {
        "Parent": "IfcElectricFlowStorageDevice",
        "Description": "A device for storing energy in chemical form so that it can be released as electrical energy.\n\n\n"
      },
      "IfcElectricGenerator": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An electric generator is an engine that is a machine for converting mechanical energy into electrical energy.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_ElectricGeneratorTypeCommon": {
            "Properties": {
              "ElectricGeneratorEfficiency": {
                "type": "real",
                "Description": "The ratio of output capacity to intake capacity.\n"
              },
              "MaximumPowerOutput": {
                "type": "real",
                "Description": "The maximum output power rating of the engine.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "StartCurrentFactor": {
                "type": "real",
                "Description": "IEC. Start current factor defines how large the peak starting current will become on the engine. StartCurrentFactor is multiplied to NominalCurrent and to give the start current.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_ElectricGeneratorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcElectricGenerator.ENGINEGENERATOR": {
        "Parent": "IfcElectricGenerator",
        "Description": ""
      },
      "IfcElectricGenerator.CHP": {
        "Parent": "IfcElectricGenerator",
        "Description": ""
      },
      "IfcElectricGenerator.STANDALONE": {
        "Parent": "IfcElectricGenerator",
        "Description": "Electrical generator which does not include its source of kinetic energy, that is, a motor, engine, or turbine are all modeled separately.\n\n\n"
      },
      "IfcElectricMotor": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An electric motor is an engine that is a machine for converting electrical energy into mechanical energy.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_ElectricMotorTypeCommon": {
            "Properties": {
              "ElectricMotorEfficiency": {
                "type": "real",
                "Description": "The ratio of output capacity to intake capacity.\n"
              },
              "FrameSize": {
                "type": "string",
                "Description": "Designation of the frame size according to the named range of frame sizes designated at the place of use or according to a given standard.\n"
              },
              "HasPartWinding": {
                "type": "boolean",
                "Description": "Indication of whether the motor is single speed, i.e. has a single winding (= FALSE) or multi-speed i.e.has part winding (= TRUE) .\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsGuarded": {
                "type": "boolean",
                "Description": "Indication of whether the motor enclosure is guarded (= TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LockedRotorCurrent": {
                "type": "real",
                "Description": "Input current when a motor armature is energized but not rotating.\n"
              },
              "MaximumPowerOutput": {
                "type": "real",
                "Description": "The maximum output power rating of the engine.\n"
              },
              "MotorEnclosureType": {
                "type": "PEnum_MotorEnclosureType",
                "Description": "A list of the available types of motor enclosure from which that required may be selected.\n",
                "values": [
                  "OPENDRIPPROOF",
                  "TOTALLYENCLOSEDAIROVER",
                  "TOTALLYENCLOSEDFANCOOLED",
                  "TOTALLYENCLOSEDNONVENTILATED"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "StartCurrentFactor": {
                "type": "real",
                "Description": "IEC. Start current factor defines how large the peak starting current will become on the engine. StartCurrentFactor is multiplied to NominalCurrent and to give the start current.\n"
              },
              "StartingTime": {
                "type": "real",
                "Description": "The time (in s) needed for the motor to reach its rated speed with its driven equipment attached, starting from standstill and at the nominal voltage applied at its terminals.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TeTime": {
                "type": "real",
                "Description": "The maximum time (in s) at which the motor could run with locked rotor when the motor is used in an EX-environment. The time indicates that a protective device should trip before this time when the starting current of the motor is slowing through the device.\n"
              }
            }
          },
          "Qto_ElectricMotorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcElectricMotor.RELUCTANCESYNCHRONOUS": {
        "Parent": "IfcElectricMotor",
        "Description": "A synchronous motor with a special rotor design which directly lines the rotor up with the rotating magnetic field of the stator, allowing for no slip under load.\n\n\n"
      },
      "IfcElectricMotor.DC": {
        "Parent": "IfcElectricMotor",
        "Description": "A motor using either generated or rectified Direct Current (DC) power.\n\n\n"
      },
      "IfcElectricMotor.POLYPHASE": {
        "Parent": "IfcElectricMotor",
        "Description": "A two or three-phase induction motor in which the windings, one for each phase, are evenly divided by the same number of electrical degrees.\n\n\n"
      },
      "IfcElectricMotor.SYNCHRONOUS": {
        "Parent": "IfcElectricMotor",
        "Description": "A motor that operates at a constant speed up to full load. The rotor speed is equal to the speed of the rotating magnetic field of the stator; there is no slip.\n\n\n"
      },
      "IfcElectricMotor.INDUCTION": {
        "Parent": "IfcElectricMotor",
        "Description": "An alternating current motor in which the primary winding on one member (usually the stator) is connected to the power source and a secondary winding or a squirrel-cage secondary winding on the other member (usually the rotor) carries the induced current. There is no physical electrical connection to the secondary winding, its current is induced.\n\n\n"
      },
      "IfcElectricTimeControl": {
        "Parent": "IfcFlowController",
        "Description": "An electric time control is a device that applies control to the provision or flow of electrical energy over time.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_ElectricTimeControlTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_ElectricTimeControlBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcElectricTimeControl.TIMECLOCK": {
        "Parent": "IfcElectricTimeControl",
        "Description": "A control that causes action to occur at set times.\n\n\n"
      },
      "IfcElectricTimeControl.TIMEDELAY": {
        "Parent": "IfcElectricTimeControl",
        "Description": "A control that causes action to occur following a set duration.\n\n\n"
      },
      "IfcElectricTimeControl.RELAY": {
        "Parent": "IfcElectricTimeControl",
        "Description": "Electromagnetically operated contactor for making or breaking a control circuit.\n\n\n"
      },
      "IfcJunctionBox": {
        "Parent": "IfcFlowFitting",
        "Description": "A junction box is an enclosure within which cables are connected.\n\n\n\nCables may be members of an electrical circuit (for electrical power systems) or be information carriers (in a telecommunications system). A junction box is typically intended to conceal a cable junction from sight, eliminate tampering or provide a safe place for electrical connection.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_JunctionBoxTypeCommon": {
            "Properties": {
              "ClearDepth": {
                "type": "real",
                "Description": "Clear depth of the object (elevator). It indicates the distance from the inner surface of the elevator door to the opposite surface of the elevator car. \n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              },
              "IP_Code": {
                "type": "string",
                "Description": ""
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MountingType": {
                "type": "string",
                "Description": "The way the air terminal is mounted to the ceiling, wall, etc.\n\n\n\nSurface: mounted to the surface of something (e.g., wall, duct, etc.).\n\nFlat flush: mounted flat and flush with a surface.\n\nLay-in: mounted in a lay-in type ceiling (e.g., a dropped ceiling grid).\n"
              },
              "NumberOfGangs": {
                "type": "integer",
                "Description": "Number of slots available for switches/outlets (most commonly 1, 2, 3, or 4).\n"
              },
              "PlacingType": {
                "type": "string",
                "Description": "Location at which the type of junction box can be located.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "ShapeType": {
                "type": "string",
                "Description": "Shape of the junction box.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_JunctionBoxBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NumberOfGangs": {
                "type": "q_count",
                "Description": "Number of slots available for switches/outlets (most commonly 1, 2, 3, or 4).\n"
              }
            }
          }
        }
      },
      "IfcJunctionBox.POWER": {
        "Parent": "IfcJunctionBox",
        "Description": "Contains cables, outlets, and/or switches for electrical power.\n\n\n"
      },
      "IfcJunctionBox.DATA": {
        "Parent": "IfcJunctionBox",
        "Description": "Contains cables, outlets, and/or switches for communications use.\n\n\n"
      },
      "IfcLamp": {
        "Parent": "IfcFlowTerminal",
        "Description": "A lamp is an artificial light source such as a light bulb or tube.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_LampTypeCommon": {
            "Properties": {
              "ColorAppearance": {
                "type": "string",
                "Description": "In both the DIN and CIE standards, artificial light sources are classified in terms of their color appearance. To the human eye they all appear to be white; the difference can only be detected by direct comparison. Visual performance is not directly affected by differences in color appearance.\n"
              },
              "ColorRenderingIndex": {
                "type": "integer",
                "Description": "The CRI indicates how well a light source renders eight standard colors compared to perfect reference lamp with the same color temperature. The CRI scale ranges from 1 to 100, with 100 representing perfect rendering properties.\n"
              },
              "ColorTemperature": {
                "type": "real",
                "Description": "The color temperature of any source of radiation is defined as the temperature (in Kelvin) of a black-body or Planckian radiator whose radiation has the same chromaticity as the source of radiation. Often the values are only approximate color temperatures as the black-body radiator cannot emit radiation of every chromaticity value. The color temperatures of the commonest artificial light sources range from less than 3000K (warm white) to 4000K (intermediate) and over 5000K (daylight).\n"
              },
              "ContributedLuminousFlux": {
                "type": "real",
                "Description": "Luminous flux is a photometric measure of radiant flux, i.e. the volume of light emitted from a light source. Luminous flux is measured either for the interior as a whole or for a part of the interior (partial luminous flux for a solid angle). All other photometric parameters are derivatives of luminous flux. Luminous flux is measured in lumens (lm). The luminous flux is given as a nominal value for each lamp.\n"
              },
              "LampBallastType": {
                "type": "PEnum_LampBallastType",
                "Description": "The type of ballast used to stabilise gas discharge by limiting the current during operation and to deliver the necessary striking voltage for starting. Ballasts are needed to operate Discharge Lamps such as Fluorescent, Compact Fluorescent, High-pressure Mercury, Metal Halide and High-pressure Sodium Lamps. \n\nMagnetic ballasts are chokes which limit the current passing through a lamp connected in series on the principle of self-induction. The resultant current and power are decisive for the efficient operation of the lamp. A specially designed ballast is required for every type of lamp to comply with lamp rating in terms of Luminous Flux, Color Appearance and service life. The two types of magnetic ballasts for fluorescent lamps are KVG Conventional   (EC-A series) and VVG Low-loss ballasts (EC-B series). Low-loss ballasts have a higher efficiency, which means reduced ballast losses and a lower thermal load. Electronic ballasts are used to run fluorescent lamps at high frequencies (approx. 35 - 40 kHz).\n",
                "values": [
                  "CONVENTIONAL",
                  "ELECTRONIC",
                  "LOWLOSS",
                  "RESISTOR"
                ]
              },
              "LampCompensationType": {
                "type": "PEnum_LampCompensationType",
                "Description": "Identifies the form of compensation used for power factor correction and radio suppression.\n",
                "values": [
                  "CAPACITIVE",
                  "INDUCTIVE"
                ]
              },
              "LampMaintenanceFactor": {
                "type": "real",
                "Description": "Non recoverable losses of luminous flux of a lamp due to lamp depreciation; i.e. the decreasing of light output of a luminaire due to aging and dirt.\n"
              },
              "LightEmitterNominalPower": {
                "type": "real",
                "Description": "Light emitter nominal power.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Spectrum": {
                "type": "number",
                "Description": "The spectrum of radiation describes its composition with regard to wavelength. Light, for example, as the portion of electromagnetic radiation that is visible to the human eye, is radiation with wavelengths in the range of approx. 380 to 780 nm (1 nm = 10 m). The corresponding range of colours varies from violet to indigo, blue, green, yellow, orange, and red. These colours form a continuous spectrum, in which the various spectral sectors merge into each other.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_LampBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcLamp.FLUORESCENT": {
        "Parent": "IfcLamp",
        "Description": "A typically tubular discharge lamp in which most of the light is emitted by one or several layers of phosphors excited by ultraviolet radiation from the discharge.\n\n\n"
      },
      "IfcLamp.OLED": {
        "Parent": "IfcLamp",
        "Description": "A solid state lamp that uses light-emitting diodes as the source of light whose emissive electroluminescent layer is composed of a film of organic compounds.\n\n\n"
      },
      "IfcLamp.LED": {
        "Parent": "IfcLamp",
        "Description": "A solid state lamp that uses light-emitting diodes as the source of light.\n\n\n"
      },
      "IfcLamp.COMPACTFLUORESCENT": {
        "Parent": "IfcLamp",
        "Description": "A fluorescent lamp having a compact form factor produced by shaping the tube.\n\n\n"
      },
      "IfcLamp.TUNGSTENFILAMENT": {
        "Parent": "IfcLamp",
        "Description": "A lamp that emits light by passing an electrical current through a tungsten wire filament in a near vacuum.\n\n\n"
      },
      "IfcLamp.HIGHPRESSUREMERCURY": {
        "Parent": "IfcLamp",
        "Description": ""
      },
      "IfcLamp.METALHALIDE": {
        "Parent": "IfcLamp",
        "Description": "A discharge lamp in which most of the light is emitted by exciting a metal halide.\n\n\n"
      },
      "IfcLamp.HIGHPRESSURESODIUM": {
        "Parent": "IfcLamp",
        "Description": "A discharge lamp in which most of the light is emitted by exciting sodium at high pressure.\n\n\n"
      },
      "IfcLamp.HALOGEN": {
        "Parent": "IfcLamp",
        "Description": "An incandescent lamp in which a tungsten filament is sealed into a compact transport envelope filled with an inert gas and a small amount of halogen such as iodine or bromine.\n\n\n"
      },
      "IfcLightFixture": {
        "Parent": "IfcFlowTerminal",
        "Description": "A light fixture is a container that is designed for the purpose of housing one or more lamps and optionally devices that control, restrict or vary their emission.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_LightFixtureTypeCommon": {
            "Properties": {
              "LightFixtureMountingType": {
                "type": "PEnum_LightFixtureMountingType",
                "Description": "A list of the available types of mounting for light fixtures from which that required may be selected.\n",
                "values": [
                  "CABLESPANNED",
                  "FREESTANDING",
                  "POLE_SIDE",
                  "POLE_TOP",
                  "RECESSED",
                  "SURFACE",
                  "SUSPENDED",
                  "TRACKMOUNTED"
                ]
              },
              "LightFixturePlacingType": {
                "type": "PEnum_LightFixturePlacingType",
                "Description": "A list of the available types of placing specification for light fixtures from which that required may be selected.\n",
                "values": [
                  "CEILING",
                  "FLOOR",
                  "FURNITURE",
                  "POLE",
                  "WALL"
                ]
              },
              "MaintenanceFactor": {
                "type": "real",
                "Description": "The arithmetical allowance made for depreciation of lamps and reflective equipment from their initial values due to dirt, fumes, or age.\n"
              },
              "MaximumPlenumSensibleLoad": {
                "type": "real",
                "Description": "Maximum or Peak sensible thermal load contributed to return air plenum by the light fixture.\n"
              },
              "MaximumSpaceSensibleLoad": {
                "type": "real",
                "Description": "Maximum or Peak sensible thermal load contributed to the conditioned space by the light fixture.\n"
              },
              "NumberOfSources": {
                "type": "integer",
                "Description": "Number of sources .\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SensibleLoadToRadiant": {
                "type": "real",
                "Description": "Percent of sensible thermal load to radiant heat.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TotalWattage": {
                "type": "real",
                "Description": "Wattage on whole lightfitting device with all sources intact.\n"
              }
            }
          },
          "Qto_LightFixtureBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcLightFixture.POINTSOURCE": {
        "Parent": "IfcLightFixture",
        "Description": "A light fixture that is considered to have negligible area and that emit light with approximately equal intensity in all directions.  A light fixture containing a tungsten, halogen or similar bulb is an example of a point source.\n\n\n"
      },
      "IfcLightFixture.SECURITYLIGHTING": {
        "Parent": "IfcLightFixture",
        "Description": "A light fixture having specific purpose of directing occupants in an emergency, such as an illuminated exit sign or emergency flood light.\n\n\n",
        "Psets": {
          "Pset_LightFixtureTypeSecurityLighting": {
            "Properties": {
              "Addressablility": {
                "type": "string",
                "Description": "The type of addressability.\n"
              },
              "BackupSupplySystem": {
                "type": "string",
                "Description": "The type of backup supply system.\n"
              },
              "FixtureHeight": {
                "type": "real",
                "Description": "The height of the fixture, such as the text height of an exit sign.\n"
              },
              "PictogramEscapeDirection": {
                "type": "string",
                "Description": "The direction of escape pictogram.\n"
              },
              "SecurityLightingType": {
                "type": "string",
                "Description": "The type of security lighting.\n"
              },
              "SelfTestFunction": {
                "type": "string",
                "Description": "The type of self test function.\n"
              }
            }
          }
        }
      },
      "IfcLightFixture.DIRECTIONSOURCE": {
        "Parent": "IfcLightFixture",
        "Description": "A light fixture that is considered to have a length or surface area from which it emits light in a direction. A light fixture containing one or more fluorescent lamps is an example of a direction source.\n\n\n"
      },
      "IfcMotorConnection": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A motor connection provides the means for connecting a motor as the driving device to the driven device.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_MotorConnectionTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_MotorConnectionBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcMotorConnection.COUPLING": {
        "Parent": "IfcMotorConnection",
        "Description": "An indirect connection made through the medium of the viscosity of a fluid.\n\n\n"
      },
      "IfcMotorConnection.DIRECTDRIVE": {
        "Parent": "IfcMotorConnection",
        "Description": "A direct, physical connection made between the motor and the driven device.\n\n\n"
      },
      "IfcMotorConnection.BELTDRIVE": {
        "Parent": "IfcMotorConnection",
        "Description": ""
      },
      "IfcOutlet": {
        "Parent": "IfcFlowTerminal",
        "Description": "An outlet is a device installed at a point to receive one or more inserted plugs for electrical power or communications.\n\n\n\nPower outlets are commonly connected within a junction box; data outlets may be directly connected to a wall. For power outlets sharing the same circuit within a junction box, the ports should indicate the logical wiring relationship to the enclosing junction box, even though they may be physically connected to a cable going to another outlet, switch, or fixture.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_OutletTypeCommon": {
            "Properties": {
              "IsPluggableOutlet": {
                "type": "logical",
                "Description": "Indication of whether the outlet accepts a loose plug connection (= TRUE) or whether it is directly connected (= FALSE) or whether the form of connection has not yet been determined (= UNKNOWN).\n",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "NumberOfSockets": {
                "type": "integer",
                "Description": "The number of sockets that may be connected. In case of inconsistency, sockets defined on ports take precedence.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_OutletBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcOutlet.COMMUNICATIONSOUTLET": {
        "Parent": "IfcOutlet",
        "Description": "An outlet used for connecting communications equipment.\n\n\n",
        "Psets": {
          "Pset_OutletTypeCommunication": {
            "Properties": {
              "IsWireLess": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcOutlet.TELEPHONEOUTLET": {
        "Parent": "IfcOutlet",
        "Description": "An outlet used for connecting telephone communications equipment.\n\n\n"
      },
      "IfcOutlet.AUDIOVISUALOUTLET": {
        "Parent": "IfcOutlet",
        "Description": ""
      },
      "IfcOutlet.POWEROUTLET": {
        "Parent": "IfcOutlet",
        "Description": ""
      },
      "IfcOutlet.DATAOUTLET": {
        "Parent": "IfcOutlet",
        "Description": "An outlet used for connecting data communications equipment.\n\n\n"
      },
      "IfcProtectiveDevice": {
        "Parent": "IfcFlowController",
        "Description": "A protective device breaks an electrical circuit when a stated electric current that passes through it is exceeded.\n\n\n\nA protective device provides protection against electrical current only (not as a general protective device). It may be used to represent the complete set of elements including both the tripping unit and the breaking unit that provide the protection. This may be particularly useful at earlier stages of design where the approach to breaking the electrical supply may be determined but the method of tripping may not. Alternatively, this entity may be used to specifically represent the breaking unit alone (in which case the tripping unit will also be specifically identified). This entity is specific to dedicated protective devices and excludes electrical outlets that may have circuit protection.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_ProtectiveDeviceBreakerUnitI2TCurve": {
            "Properties": {
              "BreakerUnitCurve": {
                "type": "real",
                "Description": "A curve that establishes the let through energy of a breaker unit when a particular prospective current is applied.  Note that the breaker unit curve is defined within a Cartesian coordinate system and this fact must be asserted within the property set:\n\n\n\n(1) Defining value: ProspectiveCurrent: A list of minimum 2 and maximum 16 numbers providing the currents in [A] for points in the current/I2t log/log coordinate space. The curve is drawn as a straight line between two consecutive points.\n\n(2) Defined value: LetThroughEnergy: A list of minimum 2 and maximum 16 numbers providing the let-through energy, I2t, in [A2s] for points in the current/I2t log/log coordinate space. The curve is drawn as a straight line between two consecutive points.\n"
              },
              "NominalCurrent": {
                "type": "real",
                "Description": "A set of nominal currents in [A] for which the data of this instance is valid. At least one value shall be provided. Any value in the set shall not exceed the value of the \n\nUltimateRatedCurrent associated with the same breaker unit.\n"
              },
              "VoltageLevel": {
                "type": "string",
                "Description": "The voltage levels of the protective device for which the data of the instance is valid. More than one value may be selected in the enumeration.\n"
              }
            }
          },
          "Pset_ProtectiveDeviceBreakerUnitI2TFuseCurve": {
            "Properties": {
              "BreakerUnitFuseBreakingingCurve": {
                "type": "real",
                "Description": "A curve that establishes the let through breaking energy of a breaker unit when a particular prospective breaking current is applied.  Note that the breaker unit fuse breaking curve is defined within a Cartesian coordinate system and this fact must be:\n\n\n\n(1) Defining value: ProspectiveCurrentBreaking: A list of minimum 2 and maximum 8 numbers providing the currents in [A] for points in the\n\ncurrent/breaking energy log/log coordinate space. The curve is drawn as a straight line between two consecutive points.\n\n(2) Defined value: LetThroughBreakingEnergy: A list of minimum 2 and maximum 8 numbers providing the breaking energy whereby the fuse has provided a break, I2t, in [A2s] for points in the current/breakting_energy log/log coordinate space. The curve is drawn as a straight line between two consecutive.\n"
              },
              "BreakerUnitFuseMeltingCurve": {
                "type": "real",
                "Description": "A curve that establishes the energy required to melt the fuse of a breaker unit when a particular prospective melting current is applied.  Note that the breaker unit fuse melting curve is defined within a Cartesian coordinate system and this fact must be:\n\n\n\n(1) Defining value: ProspectiveCurrentMelting :A list of minimum 2 and maximum 8 numbers providing the currents in [A] for points in the\n\ncurrent/melting_energy log/log coordinate space. The curve is drawn as a straight line between two consecutive points.\n\n(2) Defined value: MeltingEnergy: A list of minimum 2 and maximum 8 numbers providing the energy whereby the fuse is starting to melt, I2t, in [A2s] for points in the current/melting_energy log/log coordinate space. The curve is drawn as a straight line between two consecutive points.\n"
              },
              "VoltageLevel": {
                "type": "string",
                "Description": "The voltage levels of the protective device for which the data of the instance is valid. More than one value may be selected in the enumeration.\n"
              }
            }
          },
          "Pset_ProtectiveDeviceBreakerUnitIPICurve": {
            "Properties": {
              "BreakerUnitIPICurve": {
                "type": "real",
                "Description": "A curve that establishes the let through peak current of a breaker unit when a particular prospective current is applied.  Note that the breaker unit IPI curve is defined within a Cartesian coordinate system and this fact must be asserted within the property set:\n\n\n\n(1) Defining value: A list of minimum 2 and maximum 16 numbers providing the currents in [A] for points in the I/\u00ce log/log coordinate space. The curve is drawn as a straight line between two consecutive points.\n\n(2) Defined value: A list of minimum 2 and maximum 16 numbers providing the let-through peak currents, \u00ce, in [A] for points in the I/\u00ce log/log coordinate space. The curve is drawn as a straight line between two consecutive points.\n"
              },
              "NominalCurrent": {
                "type": "real",
                "Description": "A set of nominal currents in [A] for which the data of this instance is valid. At least one value shall be provided. Any value in the set shall not exceed the value of the \n\nUltimateRatedCurrent associated with the same breaker unit.\n"
              },
              "VoltageLevel": {
                "type": "string",
                "Description": "The voltage levels of the protective device for which the data of the instance is valid. More than one value may be selected in the enumeration.\n"
              }
            }
          },
          "Pset_ProtectiveDeviceBreakerUnitTypeMotorProtection": {
            "Properties": {
              "ICM60947": {
                "type": "real",
                "Description": "The making capacity in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series.\n"
              },
              "ICS60947": {
                "type": "real",
                "Description": "The service breaking capacity in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series.\n"
              },
              "ICU60947": {
                "type": "real",
                "Description": "The ultimate breaking capacity in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series.\n"
              },
              "ICW60947": {
                "type": "real",
                "Description": "The thermal withstand current in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series. The value shall be related to 1 s.\n"
              },
              "PerformanceClasses": {
                "type": "string",
                "Description": "A set of designations of performance classes for the breaker unit for which the data of this instance is valid. A breaker unit being a motor protection device may be\n\nconstructed for different levels of breaking capacities. A maximum of 7 different\n\nperformance classes may be provided. Examples of performance classes that may be specified include B, C, N, S, H, L, V.\n"
              },
              "VoltageLevel": {
                "type": "string",
                "Description": "The voltage levels of the protective device for which the data of the instance is valid. More than one value may be selected in the enumeration.\n"
              }
            }
          },
          "Pset_ProtectiveDeviceOccurrence": {
            "Properties": {
              "GroundFaultCurrentSetValue": {
                "type": "real",
                "Description": "Ground fault current set value. The set value of the ground tripping current if adjustable.\n"
              },
              "GroundFaultFunction": {
                "type": "boolean",
                "Description": "Applying ground fault function. A flag indicating that the ground fault function of the device is used. The value should be set to FALSE for devices not having a ground fault function, or if the ground fault function is not selected to be used.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "GroundFaulti2tFunction": {
                "type": "boolean",
                "Description": "Applying ground fault i2t function. A flag indicating that the I2t ground fault function of the device is used. The value should be set to TRUE only if the I2t function is explicitly selected for the device.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "GroundFaultTrippingTime": {
                "type": "real",
                "Description": "Ground fault tripping time. The set value of the ground fault tripping current if adjustable.\n"
              },
              "InstantaneousCurrentSetValue": {
                "type": "real",
                "Description": "Instantaneous current set value. The set value of the instantaneous tripping current if adjustable.\n"
              },
              "InstantaneousTrippingTime": {
                "type": "real",
                "Description": "Instantaneous tripping time. The set value of the instantaneous tripping time if adjustable.\n"
              },
              "LongTimeCurrentSetValue": {
                "type": "real",
                "Description": "Long time current set value. The set value of the long time tripping current if adjustable.\n"
              },
              "LongTimeDelay": {
                "type": "real",
                "Description": "Long time delay. The set value of the long time time-delay if adjustable.\n"
              },
              "LongTimeFunction": {
                "type": "boolean",
                "Description": "Applying long time function\n\nA flag indicating that the long time function (i.e. the thermal tripping) of the device is used. The value should be set to TRUE for all devices except those that allows the Long time function of the device not to be used.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PoleUsage": {
                "type": "PEnum_PoleUsage",
                "Description": "Pole usage.\n",
                "values": [
                  "1P",
                  "1PN",
                  "2P",
                  "3P",
                  "3PN",
                  "4P"
                ]
              },
              "ShortTimeCurrentSetValue": {
                "type": "real",
                "Description": "Short time current set value. The set value of the long time tripping current if adjustable.\n"
              },
              "ShortTimeFunction": {
                "type": "boolean",
                "Description": "Applying short time function A flag indicating that the short time function of the device is used. The value should be set to FALSE for devices not having a short time function, or if the short time function is not selected to be used.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShortTimei2tFunction": {
                "type": "boolean",
                "Description": "Applying short time i2t function. A flag indicating that the I2t short time function of the device is used. The value should be set to TRUE only if the I2t function \u00a0is explicitly selected for the device.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShortTimeTrippingTime": {
                "type": "real",
                "Description": "Short time tripping time. The set value of the short time tripping time if adjustable.\n"
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingCurve": {
            "Properties": {
              "TrippingCurve": {
                "type": "real",
                "Description": "A curve that establishes the release time of a tripping unit when a particular prospective current is applied.  Note that the tripping curve is defined within a Cartesian coordinate system and this fact must be asserted within the property set: \n\n\n\n(1) Defining value is the Prospective Current which is a list of minimum 2 and maximum 16 numbers providing the currents in [x In] for points in the current/time log/log coordinate space. The curve is drawn as a straight line between two consecutive points.\n\n(2) Defined value is a list of minimum 2 and maximum 16 numbers providing the release_time in [s] for points in the current/time log/log coordinate space. The curve is drawn as a straight line between two consecutive points. Note that a defined interpolation.\n"
              },
              "TrippingCurveType": {
                "type": "PEnum_TrippingCurveType",
                "Description": "The type of tripping curve that is represented by the property set.\n",
                "values": [
                  "LOWER",
                  "UPPER"
                ]
              }
            }
          },
          "Pset_ProtectiveDeviceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_ProtectiveDeviceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcProtectiveDeviceTrippingUnit": {
        "Parent": "IfcDistributionControlElement",
        "Description": "A protective device tripping unit breaks an electrical circuit at a separate breaking unit when a stated electric current that passes through the unit is exceeded.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_ProtectiveDeviceTrippingFunctionGCurve": {
            "Properties": {
              "CurrentTolerance1": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%].\n"
              },
              "CurrentTolerance2": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%] valid for times above CurrentTolereanceLimit1.\n"
              },
              "CurrentToleranceLimit1": {
                "type": "real",
                "Description": "The time limit in [s] limiting the application of CurrentTolerance1, if any. If the value is set to 0, the value of the CurrentTolerance1 is valid for the whole time/current-curve.\n"
              },
              "ExternalAdjusted": {
                "type": "boolean",
                "Description": "An indication if the ground fault protection may be adjusted according to an external current coil or not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsCurrentTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  CurrentTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether the L-function can be switched off or not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTimeTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  TimeTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalCurrentAdjusted": {
                "type": "boolean",
                "Description": "An indication if the tripping currents of the short time protection is related to the nominal current multiplied with the actual setting of the current adjustment, if any, of the long time protection part of the protective device, or not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ReleaseCurrent": {
                "type": "real",
                "Description": "The release current in [x In] for the initial tripping of the S-function.\n"
              },
              "ReleaseCurrentI2tEnd": {
                "type": "real",
                "Description": "The release current in [x In] for the end point of the I2t tripping curve of the S-function, if any. The value of ReleaseCurrentI2tEnd shall be larger than ReleaseCurrentI2tStart.\n"
              },
              "ReleaseCurrentI2tStart": {
                "type": "real",
                "Description": "The release current in [x In] for the start point of the I2t tripping curve of the S-function, if any.\n"
              },
              "ReleaseTime": {
                "type": "real",
                "Description": "The release time in [s] for the initial tripping of the relevant part. This time indicates that for current lower than the indicated release current, the tripping time will be longer than the indicated release time. The value is given as a mean value.\n"
              },
              "ReleaseTimeI2tEnd": {
                "type": "real",
                "Description": "The release time in [s] for the end point of the I2 tripping curve of the S-function, if any. The value of ReleaseTimeI2tEnd shall be lower than ReleaseTimeI2tStart.\n"
              },
              "ReleaseTimeI2tStart": {
                "type": "real",
                "Description": "The release time in [s] for the start point of the I2t tripping curve of the G-function, if any.\n"
              },
              "TimeTolerance1": {
                "type": "real",
                "Description": "The tolerance for the time of time/current-curve in [%].\n"
              },
              "TimeTolerance2": {
                "type": "real",
                "Description": "The tolerance for the time of the time/current-curve in [%] valid for currents above TimeToleranceLimit1.\n"
              },
              "TimeToleranceLimit1": {
                "type": "real",
                "Description": "The current limit in [x In] limiting the application of TimeTolerance1, if any. If the value is set to 0, the value of the TimeTolerance1 is valid for the whole time/current-curve.\n"
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingFunctionICurve": {
            "Properties": {
              "CurrentTolerance1": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%].\n"
              },
              "CurrentTolerance2": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%] valid for times above CurrentTolereanceLimit1.\n"
              },
              "CurrentToleranceLimit1": {
                "type": "real",
                "Description": "The time limit in [s] limiting the application of CurrentTolerance1, if any. If the value is set to 0, the value of the CurrentTolerance1 is valid for the whole time/current-curve.\n"
              },
              "IsCurrentTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  CurrentTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsOffWhenSFunctionOn": {
                "type": "boolean",
                "Description": "Indication whether the I-function is automatically switched off when the S-function is switched on.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether the L-function can be switched off or not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTimeTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  TimeTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaxAdjustmentX_ICS": {
                "type": "real",
                "Description": ""
              },
              "NominalCurrentAdjusted": {
                "type": "boolean",
                "Description": "An indication if the tripping currents of the short time protection is related to the nominal current multiplied with the actual setting of the current adjustment, if any, of the long time protection part of the protective device, or not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ReleaseCurrent": {
                "type": "real",
                "Description": "The release current in [x In] for the initial tripping of the S-function.\n"
              },
              "ReleaseTime": {
                "type": "real",
                "Description": "The release time in [s] for the initial tripping of the relevant part. This time indicates that for current lower than the indicated release current, the tripping time will be longer than the indicated release time. The value is given as a mean value.\n"
              },
              "TimeTolerance1": {
                "type": "real",
                "Description": "The tolerance for the time of time/current-curve in [%].\n"
              },
              "TimeTolerance2": {
                "type": "real",
                "Description": "The tolerance for the time of the time/current-curve in [%] valid for currents above TimeToleranceLimit1.\n"
              },
              "TimeToleranceLimit1": {
                "type": "real",
                "Description": "The current limit in [x In] limiting the application of TimeTolerance1, if any. If the value is set to 0, the value of the TimeTolerance1 is valid for the whole time/current-curve.\n"
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingFunctionLCurve": {
            "Properties": {
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether the L-function can be switched off or not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LowerCurrent1": {
                "type": "real",
                "Description": "The current in [x In], indicating that for currents smaller than LowerCurrent1 the I2t part of the L-function will not trip the current,\n"
              },
              "LowerCurrent2": {
                "type": "real",
                "Description": "The current in [x In], indicating the upper current limit of the lower time/current curve of the I2t part of the L-function.\n"
              },
              "LowerTime1": {
                "type": "real",
                "Description": "The time in [s], indicating that tripping times of the lower time/current curve lower than LowerTime1 is determined by the I2t part of the L-function.\n"
              },
              "LowerTime2": {
                "type": "real",
                "Description": "The time in [s], indicating the tripping times of the upper time/current curve at the LowerCurrent2.\n"
              },
              "UpperCurrent1": {
                "type": "real",
                "Description": "The current in [x In], indicating that for currents larger than UpperCurrent1 the I2t part of the L-function will trip the current.\n"
              },
              "UpperCurrent2": {
                "type": "real",
                "Description": "The current in [x In], indicating the upper current limit of the upper time/current curve of the I2t part of the L-function.\n"
              },
              "UpperTime1": {
                "type": "real",
                "Description": "The time in [s], indicating that tripping times of the upper time/current curve lower than UpperTime1 is determined by the I2t part of the L-function.\n"
              },
              "UpperTime2": {
                "type": "real",
                "Description": "The time in [s], indicating the tripping times of the upper time/current curve at the UpperCurrent2.\n"
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingFunctionSCurve": {
            "Properties": {
              "CurrentTolerance1": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%].\n"
              },
              "CurrentTolerance2": {
                "type": "real",
                "Description": "The tolerance for the current of time/current-curve in [%] valid for times above CurrentTolereanceLimit1.\n"
              },
              "CurrentToleranceLimit1": {
                "type": "real",
                "Description": "The time limit in [s] limiting the application of CurrentTolerance1, if any. If the value is set to 0, the value of the CurrentTolerance1 is valid for the whole time/current-curve.\n"
              },
              "IsCurrentTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  CurrentTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsOffWhenLfunctionOn": {
                "type": "boolean",
                "Description": "Indication whether the S-function is automatically switched off when the I-function is switched on.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSelectable": {
                "type": "boolean",
                "Description": "Indication whether the L-function can be switched off or not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTimeTolerancePositiveOnly": {
                "type": "boolean",
                "Description": "Indication whether the value of  TimeTolerance1 is provided as a positive tolereance only  or not. If not, the value is proved as a pluss/minus tolerance.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalCurrentAdjusted": {
                "type": "boolean",
                "Description": "An indication if the tripping currents of the short time protection is related to the nominal current multiplied with the actual setting of the current adjustment, if any, of the long time protection part of the protective device, or not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ReleaseCurrent": {
                "type": "real",
                "Description": "The release current in [x In] for the initial tripping of the S-function.\n"
              },
              "ReleaseCurrentI2tEnd": {
                "type": "real",
                "Description": "The release current in [x In] for the end point of the I2t tripping curve of the S-function, if any. The value of ReleaseCurrentI2tEnd shall be larger than ReleaseCurrentI2tStart.\n"
              },
              "ReleaseCurrentI2tStart": {
                "type": "real",
                "Description": "The release current in [x In] for the start point of the I2t tripping curve of the S-function, if any.\n"
              },
              "ReleaseTime": {
                "type": "real",
                "Description": "The release time in [s] for the initial tripping of the relevant part. This time indicates that for current lower than the indicated release current, the tripping time will be longer than the indicated release time. The value is given as a mean value.\n"
              },
              "ReleaseTimeI2tEnd": {
                "type": "real",
                "Description": "The release time in [s] for the end point of the I2 tripping curve of the S-function, if any. The value of ReleaseTimeI2tEnd shall be lower than ReleaseTimeI2tStart.\n"
              },
              "ReleaseTimeI2tStart": {
                "type": "real",
                "Description": "The release time in [s] for the start point of the I2t tripping curve of the G-function, if any.\n"
              },
              "TimeTolerance1": {
                "type": "real",
                "Description": "The tolerance for the time of time/current-curve in [%].\n"
              },
              "TimeTolerance2": {
                "type": "real",
                "Description": "The tolerance for the time of the time/current-curve in [%] valid for currents above TimeToleranceLimit1.\n"
              },
              "TimeToleranceLimit1": {
                "type": "real",
                "Description": "The current limit in [x In] limiting the application of TimeTolerance1, if any. If the value is set to 0, the value of the TimeTolerance1 is valid for the whole time/current-curve.\n"
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitCurrentAdjustment": {
            "Properties": {
              "AdjustmentDesignation": {
                "type": "string",
                "Description": "The desgnation on the device for the adjustment.\n"
              },
              "AdjustmentRange": {
                "type": "real",
                "Description": "Upper and lower current adjustment limits for an AdjustmentValueType = RANGE. Note that this property should not have a value for an  AdjustmentValueType = LIST.\n"
              },
              "AdjustmentRangeStepValue": {
                "type": "real",
                "Description": "Step value of current adjustment for an AdjustmentValueType = RANGE. Note that this property should not have a value for an  AdjustmentValueType = LIST.\n"
              },
              "AdjustmentValues": {
                "type": "real",
                "Description": "A list of current adjustment values that may be applied to a tripping unit for an AdjustmentValueType = LIST. A minimum of 1 and a maximum of 16 adjustment values may be specified. Note that this property should not have a value for an  AdjustmentValueType = RANGE.\n"
              },
              "AdjustmentValueType": {
                "type": "string",
                "Description": "The type of adjustment value that is applied through the property set. This determines the properties that should be asserted (see below).\n"
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitTimeAdjustment": {
            "Properties": {
              "AdjustmentDesignation": {
                "type": "string",
                "Description": "The desgnation on the device for the adjustment.\n"
              },
              "AdjustmentRange": {
                "type": "real",
                "Description": "Upper and lower current adjustment limits for an AdjustmentValueType = RANGE. Note that this property should not have a value for an  AdjustmentValueType = LIST.\n"
              },
              "AdjustmentRangeStepValue": {
                "type": "real",
                "Description": "Step value of current adjustment for an AdjustmentValueType = RANGE. Note that this property should not have a value for an  AdjustmentValueType = LIST.\n"
              },
              "AdjustmentValues": {
                "type": "real",
                "Description": "A list of current adjustment values that may be applied to a tripping unit for an AdjustmentValueType = LIST. A minimum of 1 and a maximum of 16 adjustment values may be specified. Note that this property should not have a value for an  AdjustmentValueType = RANGE.\n"
              },
              "AdjustmentValueType": {
                "type": "string",
                "Description": "The type of adjustment value that is applied through the property set. This determines the properties that should be asserted (see below).\n"
              },
              "CurrentForTimeDelay": {
                "type": "real",
                "Description": "The tripping current in [x In] at which the time delay is specified. A value for this property should only be asserted for time delay of L-function, and for I2t of the S and G function.\n"
              },
              "I2TApplicability": {
                "type": "string",
                "Description": "The applicability of the time adjustment related to the tripping function.\n"
              }
            }
          },
          "Pset_ProtectiveDeviceTrippingUnitTypeCommon": {
            "Properties": {
              "AtexVerified": {
                "type": "boolean",
                "Description": "An indication whether the tripping_unit is verified to be applied in EX-environment or not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LimitingTerminalSize": {
                "type": "real",
                "Description": "The maximum terminal size capacity of the device.\n"
              },
              "OldDevice": {
                "type": "boolean",
                "Description": "Indication whether the protection_ unit is out-dated or not. If not out-dated, the device is still for sale.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Standard": {
                "type": "string",
                "Description": "The designation of the standard applicable for the definition of the characteristics of the\n\ntripping_unit.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "UseInDiscrimination": {
                "type": "boolean",
                "Description": "An indication whether the time/current tripping information can be applied in a discrimination\n\nanalysis or not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Qto_ProtectiveDeviceTrippingUnitBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcProtectiveDeviceTrippingUnit.THERMAL": {
        "Parent": "IfcProtectiveDeviceTrippingUnit",
        "Description": "A tripping unit activated by thermal action.\n\n\n",
        "Psets": {
          "Pset_ProtectiveDeviceTrippingUnitTypeThermal": {
            "Properties": {
              "CurveDesignation": {
                "type": "string",
                "Description": "The designation of the trippingcurve given by the manufacturer. For a MCB the designation should be in accordance with the designations given in IEC 60898.\n"
              },
              "DefinedTemperature": {
                "type": "real",
                "Description": "The ambient temperature at which the thermal current/time-curve associated with this protection device is defined.\n"
              },
              "I1": {
                "type": "real",
                "Description": "The (thermal) lower testing current limit in [x In], indicating that for currents lower than I1, the tripping time shall be longer than the associated tripping time, T2.\n"
              },
              "I2": {
                "type": "real",
                "Description": "The (thermal) upper testing current limit in [x In], indicating that for currents larger than I2, the tripping time shall be shorter than the associated tripping time, T2.\n"
              },
              "T2": {
                "type": "real",
                "Description": "The (thermal) testing time in [s] associated with the testing currents I1 and I2.\n"
              },
              "TemperatureFactor": {
                "type": "real",
                "Description": "The correction factor (typically measured as %/deg K) for adjusting the thermal current/time to an ambient temperature different from the value given by the defined temperature.\n"
              },
              "ThermalTrippingUnitType": {
                "type": "PEnum_ThermalTrippingUnitType",
                "Description": "A list of the available types of thermal tripping unit  from which that required may be selected.\n",
                "values": [
                  "DIAZED",
                  "MINIZED",
                  "NEOZED",
                  "NH_FUSE"
                ]
              }
            }
          }
        }
      },
      "IfcProtectiveDeviceTrippingUnit.RESIDUALCURRENT": {
        "Parent": "IfcProtectiveDeviceTrippingUnit",
        "Description": "A tripping unit activated by residual current detection.\n\n\n",
        "Psets": {
          "Pset_ProtectiveDeviceTrippingUnitTypeResidualCurrent": {
            "Properties": {
              "TrippingUnitReleaseCurrent": {
                "type": "PEnum_TrippingUnitReleaseCurrent",
                "Description": "The value of tripping or residual current for which the device has the possibility to be equipped. The values are given in mA.\n",
                "values": [
                  "10",
                  "100",
                  "1000",
                  "30",
                  "300",
                  "500"
                ]
              }
            }
          }
        }
      },
      "IfcProtectiveDeviceTrippingUnit.ELECTRONIC": {
        "Parent": "IfcProtectiveDeviceTrippingUnit",
        "Description": "A tripping unit activated by electronic action.\n\n\n",
        "Psets": {
          "Pset_ProtectiveDeviceTrippingUnitTypeElectronic": {
            "Properties": {
              "ElectronicTrippingUnitType": {
                "type": "PEnum_ElectronicTrippingUnitType",
                "Description": "A list of the available types of electronic tripping unit  from which that required may be selected.\n",
                "values": [
                  "EP_BM",
                  "EP_MP",
                  "EP_SC",
                  "EP_STD",
                  "EP_TIMEDELAYED"
                ]
              },
              "NominalCurrents": {
                "type": "real",
                "Description": "A set of nominal currents in [A] for which the data of this instance is valid. At least one value shall be provided. Any value in the set shall not exceed the value of the \n\nUltimateRatedCurrent associated with the same breaker unit.\n"
              },
              "N_Protection": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "N_Protection_100": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "N_Protection_50": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "N_Protection_Select": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcProtectiveDeviceTrippingUnit.ELECTROMAGNETIC": {
        "Parent": "IfcProtectiveDeviceTrippingUnit",
        "Description": "",
        "Psets": {
          "Pset_ProtectiveDeviceTrippingUnitTypeElectroMagnetic": {
            "Properties": {
              "CurveDesignation": {
                "type": "string",
                "Description": "The designation of the trippingcurve given by the manufacturer. For a MCB the designation should be in accordance with the designations given in IEC 60898.\n"
              },
              "DefinedTemperature": {
                "type": "real",
                "Description": "The ambient temperature at which the thermal current/time-curve associated with this protection device is defined.\n"
              },
              "ElectroMagneticTrippingUnitType": {
                "type": "PEnum_ElectroMagneticTrippingUnitType",
                "Description": "A list of the available types of electric magnetic tripping unit  from which that required may be selected. These cover overload, none special, short circuit, motor protection and bi-metal tripping.\n",
                "values": [
                  "OL",
                  "TMP_BM",
                  "TMP_MP",
                  "TMP_SC",
                  "TMP_STD"
                ]
              },
              "I1": {
                "type": "real",
                "Description": "The (thermal) lower testing current limit in [x In], indicating that for currents lower than I1, the tripping time shall be longer than the associated tripping time, T2.\n"
              },
              "I2": {
                "type": "real",
                "Description": "The (thermal) upper testing current limit in [x In], indicating that for currents larger than I2, the tripping time shall be shorter than the associated tripping time, T2.\n"
              },
              "I4": {
                "type": "real",
                "Description": "The lower electromagnetic testing current limit in [x In], indicating that for currents lower than I4, the tripping time shall be longer than the associated tripping time, T5, i.e. the device shall not trip instantaneous.\n"
              },
              "I5": {
                "type": "real",
                "Description": "The upper electromagnetic testing current limit in [x In], indicating that for currents larger than I5, the tripping time shall be shorter than or equal to the associated tripping time, T5, i.e. the device shall trip instantaneous.\n"
              },
              "T2": {
                "type": "real",
                "Description": "The (thermal) testing time in [s] associated with the testing currents I1 and I2.\n"
              },
              "T5": {
                "type": "real",
                "Description": "The electromagnetic testing time in [s] associated with the testing currents I4 and I5, i.e. electromagnetic tripping time\n"
              },
              "TemperatureFactor": {
                "type": "real",
                "Description": "The correction factor (typically measured as %/deg K) for adjusting the thermal current/time to an ambient temperature different from the value given by the defined temperature.\n"
              }
            }
          }
        }
      },
      "IfcProtectiveDevice.SPARKGAP": {
        "Parent": "IfcProtectiveDevice",
        "Description": ""
      },
      "IfcProtectiveDevice.ANTI_ARCING_DEVICE": {
        "Parent": "IfcProtectiveDevice",
        "Description": ""
      },
      "IfcProtectiveDevice.EARTHINGSWITCH": {
        "Parent": "IfcProtectiveDevice",
        "Description": ""
      },
      "IfcProtectiveDevice.EARTHLEAKAGECIRCUITBREAKER": {
        "Parent": "IfcProtectiveDevice",
        "Description": "A device that opens, closes, or isolates a circuit and has short circuit protection but no overload protection.  It attempts to break the circuit when there is a leakage of current from phase to earth, by measuring voltage on the earth conductor.\n\n\n",
        "Psets": {
          "Pset_ProtectiveDeviceTypeEarthLeakageCircuitBreaker": {
            "Properties": {
              "EarthFailureDeviceType": {
                "type": "PEnum_EarthFailureDeviceType",
                "Description": "A list of the available types of circuit breaker from which that required may be selected where:\n\n\n\nStandard: Device that operates without a time delay.\n\nTimeDelayed: Device that operates after a time delay.\n",
                "values": [
                  "STANDARD",
                  "TIMEDELAYED"
                ]
              },
              "Sensitivity": {
                "type": "real",
                "Description": "The rated rms value of the vector sum of the instantaneous currents flowing in the main circuits of the device which causes the device to operate under specified conditions. (IEC 61008-1).\n"
              }
            }
          }
        }
      },
      "IfcProtectiveDevice.VARISTOR": {
        "Parent": "IfcProtectiveDevice",
        "Description": "A high voltage surge protection device.\n\n\n",
        "Psets": {
          "Pset_ProtectiveDeviceTypeVaristor": {
            "Properties": {
              "VaristorType": {
                "type": "PEnum_VaristorType",
                "Description": "A list of the available types of varistor  from which that required may be selected.\n",
                "values": [
                  "METALOXIDE",
                  "ZINCOXIDE"
                ]
              }
            }
          }
        }
      },
      "IfcProtectiveDevice.FUSEDISCONNECTOR": {
        "Parent": "IfcProtectiveDevice",
        "Description": "A device that will electrically open the circuit after a period of prolonged, abnormal current flow.\n\n\n",
        "Psets": {
          "Pset_ProtectiveDeviceTypeFuseDisconnector": {
            "Properties": {
              "FuseDisconnectorType": {
                "type": "PEnum_FuseDisconnectorType",
                "Description": "A list of the available types of fuse disconnector from which that required may be selected where:\n\n\n\nEngineProtectionDevice: A fuse whose characteristic is specifically designed for the protection of a motor or generator.\n\nFuseSwitchDisconnector: A switch disconnector in which a fuse link or a fuse carrier with fuse link forms the moving contact,\n\nHRC: A standard fuse (High Rupturing Capacity)\n\nOverloadProtectionDevice: A device that disconnects the supply when the operating conditions in an electrically undamaged circuit causes an overcurrent,\n\nSemiconductorFuse: A fuse whose characteristic is specifically designed for the protection of sem-conductor devices.\n\nSwitchDisconnectorFuse: A switch disconnector in which one or more poles have a fuse in series in a composite unit.\n",
                "values": [
                  "ENGINEPROTECTIONDEVICE",
                  "FUSEDSWITCH",
                  "HRC",
                  "OVERLOADPROTECTIONDEVICE",
                  "SWITCHDISCONNECTORFUSE"
                ]
              },
              "IC60269": {
                "type": "real",
                "Description": "The breaking capacity in [A] for fuses in accordance with the IEC 60269 series.\n"
              },
              "PowerLoss": {
                "type": "real",
                "Description": "The power loss in [W] per pole of the MCB  when the nominal current is flowing through the MCB.\n"
              },
              "VoltageLevel": {
                "type": "string",
                "Description": "The voltage levels of the protective device for which the data of the instance is valid. More than one value may be selected in the enumeration.\n"
              }
            }
          }
        }
      },
      "IfcProtectiveDevice.CIRCUITBREAKER": {
        "Parent": "IfcProtectiveDevice",
        "Description": "",
        "Psets": {
          "Pset_ProtectiveDeviceBreakerUnitTypeMCB": {
            "Properties": {
              "ICN60898": {
                "type": "real",
                "Description": "The nominal breaking capacity in [A] for an MCB tested in accordance with the IEC 60898 series.\n"
              },
              "ICS60898": {
                "type": "real",
                "Description": "The service breaking capacity in [A] for an MCB tested in accordance with the IEC 60898 series.\n"
              },
              "ICS60947": {
                "type": "real",
                "Description": "The service breaking capacity in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series.\n"
              },
              "ICU60947": {
                "type": "real",
                "Description": "The ultimate breaking capacity in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series.\n"
              },
              "NominalCurrents": {
                "type": "real",
                "Description": "A set of nominal currents in [A] for which the data of this instance is valid. At least one value shall be provided. Any value in the set shall not exceed the value of the \n\nUltimateRatedCurrent associated with the same breaker unit.\n"
              },
              "PowerLoss": {
                "type": "real",
                "Description": "The power loss in [W] per pole of the MCB  when the nominal current is flowing through the MCB.\n"
              },
              "VoltageLevel": {
                "type": "string",
                "Description": "The voltage levels of the protective device for which the data of the instance is valid. More than one value may be selected in the enumeration.\n"
              }
            }
          },
          "Pset_ProtectiveDeviceTypeCircuitBreaker": {
            "Properties": {
              "ICM60947": {
                "type": "real",
                "Description": "The making capacity in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series.\n"
              },
              "ICS60947": {
                "type": "real",
                "Description": "The service breaking capacity in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series.\n"
              },
              "ICU60947": {
                "type": "real",
                "Description": "The ultimate breaking capacity in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series.\n"
              },
              "ICW60947": {
                "type": "real",
                "Description": "The thermal withstand current in [A] for a circuit breaker or motor protection device tested in accordance with the IEC 60947 series. The value shall be related to 1 s.\n"
              },
              "PerformanceClasses": {
                "type": "string",
                "Description": "A set of designations of performance classes for the breaker unit for which the data of this instance is valid. A breaker unit being a motor protection device may be\n\nconstructed for different levels of breaking capacities. A maximum of 7 different\n\nperformance classes may be provided. Examples of performance classes that may be specified include B, C, N, S, H, L, V.\n"
              },
              "VoltageLevel": {
                "type": "string",
                "Description": "The voltage levels of the protective device for which the data of the instance is valid. More than one value may be selected in the enumeration.\n"
              }
            }
          }
        }
      },
      "IfcProtectiveDevice.VOLTAGELIMITER": {
        "Parent": "IfcProtectiveDevice",
        "Description": ""
      },
      "IfcProtectiveDevice.RESIDUALCURRENTSWITCH": {
        "Parent": "IfcProtectiveDevice",
        "Description": "A device that opens, closes or isolates a circuit and has no short circuit or overload protection.  May also be identified as a 'ground fault switch'.\n\n\n",
        "Psets": {
          "Pset_ProtectiveDeviceTypeResidualCurrentSwitch": {
            "Properties": {
              "Sensitivity": {
                "type": "real",
                "Description": "The rated rms value of the vector sum of the instantaneous currents flowing in the main circuits of the device which causes the device to operate under specified conditions. (IEC 61008-1).\n"
              }
            }
          }
        }
      },
      "IfcProtectiveDevice.RESIDUALCURRENTCIRCUITBREAKER": {
        "Parent": "IfcProtectiveDevice",
        "Description": "A device that opens, closes, or isolates a circuit and has short circuit and overload protection.  It attempts to break the circuit when there is a difference in current between any two phases.  May also be referred to as 'Ground Fault Interupter (GFI)' or 'Ground Fault Circuit Interuptor (GFCI)'\n\n\n",
        "Psets": {
          "Pset_ProtectiveDeviceTypeResidualCurrentCircuitBreaker": {
            "Properties": {
              "Sensitivity": {
                "type": "real",
                "Description": "The rated rms value of the vector sum of the instantaneous currents flowing in the main circuits of the device which causes the device to operate under specified conditions. (IEC 61008-1).\n"
              }
            }
          }
        }
      },
      "IfcSolarDevice": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A solar device converts solar radiation into other energy such as electric current or thermal energy.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_SolarDeviceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_SolarDeviceBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "q_area",
                "Description": "Total gross area of the outer surface of the roof. It is the sum of all roof slab gross areas. Roof openings, like sky windows and other openings and cut-outs are not taken into account.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcSolarDevice.SOLARPANEL": {
        "Parent": "IfcSolarDevice",
        "Description": ""
      },
      "IfcSolarDevice.SOLARCOLLECTOR": {
        "Parent": "IfcSolarDevice",
        "Description": "A device that converts solar radiation into thermal energy (heating water, etc.).\n\n\n"
      },
      "IfcSwitchingDevice": {
        "Parent": "IfcFlowController",
        "Description": "A switch is used in a cable distribution system (electrical circuit) to control or modulate the flow of electricity.\n\n\n\nSwitches include those used for electrical power, communications, audio-visual, or other distribution system types as determined by the available ports.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_SwitchingDeviceTypeCommon": {
            "Properties": {
              "HasLock": {
                "type": "boolean",
                "Description": "Indication of whether a switching device has a key operated lock (=TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsIlluminated": {
                "type": "boolean",
                "Description": "An indication of whether there is an illuminated indicator to show that the switch is on (=TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Legend": {
                "type": "string",
                "Description": "A text inscribed or applied to the switch as a legend to indicate purpose or function.\n"
              },
              "NumberOfGangs": {
                "type": "integer",
                "Description": "Number of slots available for switches/outlets (most commonly 1, 2, 3, or 4).\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SetPoint": {
                "type": "string",
                "Description": "Indicates the setpoint and label.  For toggle switches, there are two positions, 0 for off and 1 for on.  For dimmer switches, the values may indicate the fully-off and full-on positions, where missing integer values in between are interpolated.   For selector switches, the range indicates the available positions.  \n\nAn IfcTable may be attached (using IfcMetric and IfcPropertyConstraintRelationship) containing columns of the specified header names and types:\n\n'Position' (IfcInteger): The discrete setpoint level.\n\n'Sink' (IfcLabel): The Name of the switched input port (IfcDistributionPort with FlowDirection=SINK).\n\n'Source' (IfcLabel): The Name of the switched output port (IfcDistributionPort with FlowDirection=SOURCE).\n\n'Ratio' (IfcNormalizedRatioMeasure): The ratio of power at the setpoint where 0.0 is off and 1.0 is fully on.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "SwitchFunction": {
                "type": "string",
                "Description": "Indicates types of switches which differs in functionality.\n"
              }
            }
          },
          "Pset_SwitchingDeviceTypePHistory": {
            "Properties": {
              "SetPoint": {
                "type": "integer",
                "Description": "Indicates the setpoint and label.  For toggle switches, there are two positions, 0 for off and 1 for on.  For dimmer switches, the values may indicate the fully-off and full-on positions, where missing integer values in between are interpolated.   For selector switches, the range indicates the available positions.  \n\nAn IfcTable may be attached (using IfcMetric and IfcPropertyConstraintRelationship) containing columns of the specified header names and types:\n\n'Position' (IfcInteger): The discrete setpoint level.\n\n'Sink' (IfcLabel): The Name of the switched input port (IfcDistributionPort with FlowDirection=SINK).\n\n'Source' (IfcLabel): The Name of the switched output port (IfcDistributionPort with FlowDirection=SOURCE).\n\n'Ratio' (IfcNormalizedRatioMeasure): The ratio of power at the setpoint where 0.0 is off and 1.0 is fully on.\n"
              }
            }
          },
          "Qto_SwitchingDeviceBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcSwitchingDevice.START_AND_STOP_EQUIPMENT": {
        "Parent": "IfcSwitchingDevice",
        "Description": "A switch for alternatively closing and opening one or more electric circuits.\n\n\n"
      },
      "IfcSwitchingDevice.DIMMERSWITCH": {
        "Parent": "IfcSwitchingDevice",
        "Description": "A dimmer switch has variable positions, and may adjust electrical power or other setting (according to the switched port type).\n\n\n",
        "Psets": {
          "Pset_SwitchingDeviceTypeDimmerSwitch": {
            "Properties": {
              "DimmerType": {
                "type": "string",
                "Description": "A list of the available types of dimmer switch from which that required may be selected.\n"
              }
            }
          }
        }
      },
      "IfcSwitchingDevice.KEYPAD": {
        "Parent": "IfcSwitchingDevice",
        "Description": "A set of buttons or switches, each potentially applicable to a different device.\n\n\n",
        "Psets": {
          "Pset_SwitchingDeviceTypeKeypad": {
            "Properties": {
              "KeypadType": {
                "type": "string",
                "Description": "A list of the available types of keypad switch from which that required may be selected.\n"
              }
            }
          }
        }
      },
      "IfcSwitchingDevice.MOMENTARYSWITCH": {
        "Parent": "IfcSwitchingDevice",
        "Description": "",
        "Psets": {
          "Pset_SwitchingDeviceTypeMomentarySwitch": {
            "Properties": {
              "MomentaryType": {
                "type": "string",
                "Description": "A list of the available types of momentary switch from which that required may be selected.\n"
              }
            }
          }
        }
      },
      "IfcSwitchingDevice.TOGGLESWITCH": {
        "Parent": "IfcSwitchingDevice",
        "Description": "",
        "Psets": {
          "Pset_SwitchingDeviceTypeToggleSwitch": {
            "Properties": {
              "SwitchActivation": {
                "type": "string",
                "Description": "A list of the available activations for selector switches from which that required may be selected.\n"
              },
              "SwitchUsage": {
                "type": "string",
                "Description": "A list of the available usages for selector switches from which that required may be selected.\n"
              },
              "ToggleSwitchType": {
                "type": "string",
                "Description": "A list of the available types of toggle switch from which that required may be selected.\n"
              }
            }
          }
        }
      },
      "IfcSwitchingDevice.SELECTORSWITCH": {
        "Parent": "IfcSwitchingDevice",
        "Description": "A selector switch has multiple positions, and may change the source or level of power or other setting (according to the switched port type).\n\n\n",
        "Psets": {
          "Pset_SwitchingDeviceTypeSelectorSwitch": {
            "Properties": {
              "SelectorType": {
                "type": "string",
                "Description": "A list of the available types of selector switch from which that required may be selected.\n"
              },
              "SwitchActivation": {
                "type": "string",
                "Description": "A list of the available activations for selector switches from which that required may be selected.\n"
              },
              "SwitchUsage": {
                "type": "string",
                "Description": "A list of the available usages for selector switches from which that required may be selected.\n"
              }
            }
          }
        }
      },
      "IfcSwitchingDevice.STARTER": {
        "Parent": "IfcSwitchingDevice",
        "Description": "A starter is a switch which in the closed position controls the application of power to an electrical device.\n\n\n",
        "Psets": {
          "Pset_SwitchingDeviceTypeStarter": {
            "Properties": {
              "StarterType": {
                "type": "PEnum_StarterType",
                "Description": "A list of the available types of starter from which that required may be selected where:\n\n\n\nAutoTransformer: A starter for an induction motor which uses for starting one or more reduced voltages derived from an auto transformer. (IEC 441-14-45)\n\nManual: A starter in which the force for closing the main contacts is provided exclusively by manual energy. (IEC 441-14-39)\n\nDirectOnLine: A starter which connects the line voltage across the motor terminals in one step. (IEC 441-14-40)\n\nFrequency: A starter in which the frequency of the power supply is progressively increased until the normal operation frequency is attained.\n\nnStep: A starter in which there are (n-1) intermediate accelerating positions between the off and full on positions. (IEC 441-14-41)\n\nRheostatic: A starter using one or several resistors for obtaining, during starting, stated motor torque characteristics and for limiting the current. (IEC 441-14-425)\n\nStarDelta: A starter for a 3 phase induction motor such that in the starting position the stator windings are connected in star and in the final running position they are connected in delta. (IEC 441-14-44)\n",
                "values": [
                  "AUTOTRANSFORMER",
                  "DIRECTONLINE",
                  "FREQUENCY",
                  "MANUAL",
                  "NSTEP",
                  "RHEOSTATIC",
                  "STARDELTA"
                ]
              }
            }
          }
        }
      },
      "IfcSwitchingDevice.RELAY": {
        "Parent": "IfcSwitchingDevice",
        "Description": "A device designed to produce sudden predetermined changes in one or more electric output circuits, when certain conditions are fulfilled in the electric input circuits controlling the device.\n\nNote: definition from IEC 60050 151-13-31.\n\n\n"
      },
      "IfcSwitchingDevice.SWITCHDISCONNECTOR": {
        "Parent": "IfcSwitchingDevice",
        "Description": "A switch disconnector is a switch which in the open position satisfies the isolating requirements specified for a disconnector.\n\n\n",
        "Psets": {
          "Pset_SwitchingDeviceTypeSwitchDisconnector": {
            "Properties": {
              "LoadDisconnectionType": {
                "type": "PEnum_LoadDisconnectionType",
                "Description": "A list of the available types of load disconnection from which that required may be selected.\n",
                "values": [
                  "OFFLOAD",
                  "ONLOAD"
                ]
              },
              "SwitchDisconnectorType": {
                "type": "PEnum_SwitchDisconnectorType",
                "Description": "A list of the available types of switch disconnector from which that required may be selected where:\n\n\n\nCenterBreak: A disconnector in which both contacts of each pole are movable and engage at a point substantially midway between their supports. (IEC 441-14-08)\n\nDividedSupport: A disconnector in which the fixed and moving contacts of each pole are not supported by a common base or frame. (IEC 441-14-06)\n\nDoubleBreak: A disconnector that opens a circuit at two points. (IEC 441-14-09)\n\nEarthingSwitch: A disconnector in which the fixed and moving contacts of each pole are not supported by a common base or frame. (IEC 441-14-07)\n\nIsolator: A disconnector which in the open position satisfies isolating requirements. (IEC 441-14-12)\n",
                "values": [
                  "CENTERBREAK",
                  "DIVIDEDSUPPORT",
                  "DOUBLEBREAK",
                  "EARTHINGSWITCH",
                  "ISOLATOR"
                ]
              }
            }
          }
        }
      },
      "IfcSwitchingDevice.CONTACTOR": {
        "Parent": "IfcSwitchingDevice",
        "Description": "",
        "Psets": {
          "Pset_SwitchingDeviceTypeContactor": {
            "Properties": {
              "ContactorType": {
                "type": "PEnum_ContactorType",
                "Description": "A list of the available types of contactor from which that required may be selected where:\n\n\n\nCapacitorSwitching: for switching 3 phase single or multi-step capacitor banks.\n\nLowCurrent: requires the use of low resistance contacts.\n\nMagneticLatching: enables the contactor to remain in the on position when the coil is no longer energized.\n\nMechanicalLatching: requires that the contactor is mechanically retained in the on position.\n\nModular: are totally enclosed and self contained.\n\nReversing: has a double set of contactors that are prewired.\n\nStandard: is a generic device that controls the flow of power in a circuit on or off.\n",
                "values": [
                  "CAPACITORSWITCHING",
                  "LOWCURRENT",
                  "MAGNETICLATCHING",
                  "MECHANICALLATCHING",
                  "MODULAR",
                  "REVERSING",
                  "STANDARD"
                ]
              }
            }
          }
        }
      },
      "IfcSwitchingDevice.EMERGENCYSTOP": {
        "Parent": "IfcSwitchingDevice",
        "Description": "An emergency stop device acts to remove as quickly as possible any danger that may have arisen unexpectedly.\n\n\n",
        "Psets": {
          "Pset_SwitchingDeviceTypeEmergencyStop": {
            "Properties": {
              "SwitchOperation": {
                "type": "string",
                "Description": "Indicates operation of emergency stop switch.\n"
              }
            }
          }
        }
      },
      "IfcTransformer": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A transformer is an inductive stationary device that transfers electrical energy from one circuit to another.\n\n\n\n_IfcTransformer_ is used to transform electric power; conversion of electric signals for other purposes is handled at other entities: _IfcController_ converts arbitrary signals, _IfcAudioVisualAppliance_ converts signals for audio or video streams, and _IfcCommunicationsAppliance_ converts signals for data or other communications usage.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_TransformerTypeCommon": {
            "Properties": {
              "ImaginaryImpedanceRatio": {
                "type": "real",
                "Description": "The ratio between the imaginary part of the zero sequence impedance and the imaginary part of the positive impedance (i.e. imaginary part of the short-circuit voltage) of the transformer.\n\nUsed for three-phase transformer which includes a N-conductor.\n"
              },
              "IsNeutralPrimaryTerminalAvailable": {
                "type": "boolean",
                "Description": "An indication of whether the neutral point of the primary winding is available as a terminal (=TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsNeutralSecondaryTerminalAvailable": {
                "type": "boolean",
                "Description": "An indication of whether the neutral point of the secondary winding is available as a terminal (=TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaximumApparentPower": {
                "type": "real",
                "Description": "Maximum apparent power/capacity in VA (volt ampere).\n"
              },
              "PrimaryApparentPower": {
                "type": "real",
                "Description": "The power in VA (volt ampere) that has been transformed and that runs into the transformer on the primary side.\n"
              },
              "PrimaryCurrent": {
                "type": "real",
                "Description": "The current that is going to be transformed and that runs into the transformer on the primary side.\n"
              },
              "PrimaryFrequency": {
                "type": "real",
                "Description": "The frequency that is going to be transformed and that runs into the transformer on the primary side.\n"
              },
              "PrimaryVoltage": {
                "type": "real",
                "Description": "The voltage that is going to be transformed and that runs into the transformer on the primary side.\n"
              },
              "RealImpedanceRatio": {
                "type": "real",
                "Description": "The ratio between the real part of the zero sequence impedance and the real part of the positive impedance (i.e. real part of the short-circuit voltage) of the transformer.\n\nUsed for three-phase transformer which includes a N-conductor.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SecondaryApparentPower": {
                "type": "real",
                "Description": "The power in VA (volt ampere) that has been transformed and is running out of the transformer on the secondary side.\n"
              },
              "SecondaryCurrent": {
                "type": "real",
                "Description": "The current that has been transformed and is running out of the transformer on the secondary side.\n"
              },
              "SecondaryCurrentType": {
                "type": "PEnum_SecondaryCurrentType",
                "Description": "A list of the secondary current types that can result from transformer output.\n",
                "values": [
                  "AC",
                  "DC"
                ]
              },
              "SecondaryFrequency": {
                "type": "real",
                "Description": "The frequency that has been transformed and is running out of the transformer on the secondary side.\n"
              },
              "SecondaryVoltage": {
                "type": "real",
                "Description": "The voltage that has been transformed and is running out of the transformer on the secondary side.\n"
              },
              "ShortCircuitVoltage": {
                "type": "real",
                "Description": "A complex number that specifies the real and imaginary parts of the short-circuit voltage at rated current of a transformer given in %.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TransformerVectorGroup": {
                "type": "PEnum_TransformerVectorGroup",
                "Description": "List of the possible vector groups for the transformer from which that required may be set. Values in the enumeration list follow a standard international code where the first letter  describes how the primary windings are connected,\n\nthe second letter describes how the secondary windings are connected, and the numbers describe the rotation of voltages and currents from the primary to the secondary side in multiples of 30 degrees.\n\n\n\nD: means that the windings are delta-connected.\n\nY: means that the windings are star-connected. \n\nZ: means that the windings are zig-zag connected (a special start-connected providing low reactance of the transformer); \n\nThe connectivity is only relevant for three-phase transformers.\n",
                "values": [
                  "DD0",
                  "DD6",
                  "DY11",
                  "DY5",
                  "DZ0",
                  "DZ6",
                  "YD11",
                  "YD5",
                  "YY0",
                  "YY6",
                  "YZ11",
                  "YZ5"
                ]
              }
            }
          },
          "Qto_TransformerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcTransformer.COMBINED": {
        "Parent": "IfcTransformer",
        "Description": "",
        "Psets": {
          "Pset_VoltageAndCurrentTransformer": {
            "Properties": {
              "TransformerType": {
                "type": "penum_volategandcurrenttransformertype",
                "Description": ""
              }
            }
          }
        }
      },
      "IfcTransformer.CURRENT": {
        "Parent": "IfcTransformer",
        "Description": "A transformer that changes the current between circuits.\n\n\n"
      },
      "IfcTransformer.VOLTAGE": {
        "Parent": "IfcTransformer",
        "Description": "A transformer that changes the voltage between circuits.\n\n\n"
      },
      "IfcTransformer.RECTIFIER": {
        "Parent": "IfcTransformer",
        "Description": "A transformer that converts from alternating current (AC) to direct current (DC).\n\n\n"
      },
      "IfcTransformer.CHOPPER": {
        "Parent": "IfcTransformer",
        "Description": "A chopper is an electronic power DC convertor without an intermediate AC link giving a variable output voltage by varying the periods of conduction and non-conduction in an adjustable ratio.\n\n\n"
      },
      "IfcTransformer.FREQUENCY": {
        "Parent": "IfcTransformer",
        "Description": "A transformer that changes the frequency between circuits.\n\n\n"
      },
      "IfcTransformer.INVERTER": {
        "Parent": "IfcTransformer",
        "Description": "A transformer that converts from direct current (DC) to alternating current (AC).\n\n\n"
      },
      "IfcAlignmentHorizontal": {
        "Parent": "IfcLinearElement",
        "Description": "",
        "Psets": {
          "Attributes": {
            "Properties": {
              "StartDistAlong": {
                "type": "real",
                "Description": "The value of the distance along at the start of the horizontal alignment. If omited (standard) it is set to zero."
              }
            }
          }
        }
      },
      "IfcAlignmentSegment": {
        "Parent": "IfcLinearElement",
        "Description": ""
      },
      "IfcAlignmentVertical": {
        "Parent": "IfcLinearElement",
        "Description": ""
      },
      "IfcAirTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": "An air terminal is a terminating or origination point for the transfer of air between distribution system(s) and one or more spaces. It can also be used for the transfer of air between adjacent spaces.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_AirTerminalOccurrence": {
            "Properties": {
              "AirFlowRate": {
                "type": "real",
                "Description": "The actual airflow rate as designed.\n"
              },
              "Location": {
                "type": "string",
                "Description": "Location  (a single type of diffuser can be used for multiple locations); high means close to ceiling.\n"
              }
            }
          },
          "Pset_AirTerminalPHistory": {
            "Properties": {
              "AirFlowRate": {
                "type": "real",
                "Description": "The actual airflow rate as designed.\n"
              },
              "CenterlineAirVelocity": {
                "type": "real",
                "Description": "Centerline air velocity versus distance from the diffuser and temperature differential; a function of distance from diffuser and temperature difference between supply air and room air.\n"
              },
              "InductionRatio": {
                "type": "real",
                "Description": "Induction ratio versus distance from the diffuser and its discharge direction; induction ratio (or entrainment ratio) is the ratio of the volumetric flow rate in the jet to the volumetric flow rate at the air terminal.\n"
              },
              "NeckAirVelocity": {
                "type": "real",
                "Description": "Air velocity at the neck.\n"
              },
              "PressureDrop": {
                "type": "real",
                "Description": "Drop in total pressure between inlet and outlet at nominal air-flow rate.\n"
              },
              "SupplyAirTemperatureCooling": {
                "type": "real",
                "Description": "Supply air temperature in cooling mode.\n"
              },
              "SupplyAirTemperatureHeating": {
                "type": "real",
                "Description": "Supply air temperature in heating mode.\n"
              }
            }
          },
          "Pset_AirTerminalTypeCommon": {
            "Properties": {
              "AirDiffusionPerformanceIndex": {
                "type": "real",
                "Description": "The Air Diffusion Performance Index (ADPI) is used for cooling mode conditions. If several measurements of air velocity and air temperature are made throughout the occupied zone of a space, the ADPI is the percentage of locations where measurements were taken that meet the specifications for effective draft temperature and air velocity.\n"
              },
              "AirFlowrateRange": {
                "type": "real",
                "Description": ""
              },
              "AirFlowrateVersusFlowControlElement": {
                "type": "real",
                "Description": "Air flowrate versus flow control element position at nominal pressure drop.\n"
              },
              "CoreSetHorizontal": {
                "type": "real",
                "Description": "Degree of horizontal (in the X-axis of the LocalPlacement) blade set from the centerline.\n"
              },
              "CoreSetVertical": {
                "type": "real",
                "Description": "Degree of vertical (in the Y-axis of the LocalPlacement) blade set from the centerline.\n"
              },
              "CoreType": {
                "type": "string",
                "Description": "Identifies the way the core of the AirTerminal is constructed.\n"
              },
              "DischargeDirection": {
                "type": "string",
                "Description": "Discharge direction of the air terminal.\n\n\n\nParallel: discharges parallel to mounting surface designed so that flow attaches to the surface.\n\nPerpendicular:  discharges away from mounting surface.\n\nAdjustable: both parallel and perpendicular discharge.\n"
              },
              "EffectiveArea": {
                "type": "real",
                "Description": "Effective discharge area of the air terminal.\n"
              },
              "FaceType": {
                "type": "string",
                "Description": "Identifies how the terminal face of an AirTerminal is constructed.\n"
              },
              "FinishColor": {
                "type": "string",
                "Description": "The finish color for the air terminal.\n"
              },
              "FinishType": {
                "type": "string",
                "Description": "The type of finish for the air terminal.\n"
              },
              "FlowControlType": {
                "type": "string",
                "Description": "Type of flow control element that may be included as a part of the construction of the air terminal.\n"
              },
              "FlowPattern": {
                "type": "string",
                "Description": "Flow pattern.\n"
              },
              "HasIntegralControl": {
                "type": "boolean",
                "Description": "If TRUE, a self powered temperature control is included in the AirTerminal.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSoundAttenuator": {
                "type": "boolean",
                "Description": "If TRUE, the air terminal has sound attenuation.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasThermalInsulation": {
                "type": "boolean",
                "Description": "If TRUE, the air terminal has thermal insulation.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MountingType": {
                "type": "string",
                "Description": "The way the air terminal is mounted to the ceiling, wall, etc.\n\n\n\nSurface: mounted to the surface of something (e.g., wall, duct, etc.).\n\nFlat flush: mounted flat and flush with a surface.\n\nLay-in: mounted in a lay-in type ceiling (e.g., a dropped ceiling grid).\n"
              },
              "NeckArea": {
                "type": "real",
                "Description": "Neck area of the air terminal.\n"
              },
              "NumberOfSlots": {
                "type": "integer",
                "Description": "Number of slots.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Shape": {
                "type": "string",
                "Description": "Cross sectional shape. Note that this shape is uniform throughout the length of the segment. For nonuniform shapes, a transition fitting should be used instead.\n"
              },
              "SlotLength": {
                "type": "real",
                "Description": "Slot length.\n"
              },
              "SlotWidth": {
                "type": "real",
                "Description": "Slot width.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TemperatureRange": {
                "type": "real",
                "Description": "Temperature range within which the air terminal is designed to operate.\n"
              },
              "ThrowLength": {
                "type": "real",
                "Description": "The horizontal or vertical axial distance an airstream travels after leaving an AirTerminal before the maximum stream velocity is reduced to a specified terminal velocity under isothermal conditions at the upper value of the AirFlowrateRange.\n"
              }
            }
          },
          "Qto_AirTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Perimeter": {
                "type": "q_length",
                "Description": "Perimeter of the profile for calculating the surface area. For example measured in mm.\n"
              },
              "TotalSurfaceArea": {
                "type": "q_area",
                "Description": "Gross area of the air terminal face plate.\n"
              }
            }
          }
        }
      },
      "IfcAirTerminalBox": {
        "Parent": "IfcFlowController",
        "Description": "An air terminal box typically participates in an HVAC duct distribution system and is used to control or modulate the amount of air delivered to its downstream ductwork. An air terminal box type is often referred to as an \"air flow regulator\".\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_AirTerminalBoxPHistory": {
            "Properties": {
              "AirflowCurve": {
                "type": "real",
                "Description": "Air flowrate versus damper position relationship;airflow = f ( valve position).\n"
              },
              "AtmosphericPressure": {
                "type": "real",
                "Description": "Ambient atmospheric pressure.\n"
              },
              "DamperPosition": {
                "type": "real",
                "Description": "Damper position (0-1); damper position ( 0=closed=90deg position angle, 1=open=0deg position angle.\n"
              },
              "Sound": {
                "type": "real",
                "Description": "Sound performance.\n"
              }
            }
          },
          "Pset_AirTerminalBoxTypeCommon": {
            "Properties": {
              "AirflowRateRange": {
                "type": "real",
                "Description": "Air flowrate range within which the air terminal is designed to operate.\n"
              },
              "AirPressureRange": {
                "type": "real",
                "Description": "Allowable air static pressure range at the entrance of the air terminal box.\n"
              },
              "ArrangementType": {
                "type": "string",
                "Description": "Terminal box arrangement.\n\nSingleDuct: Terminal box receives warm or cold air from a single air supply duct.\n\nDualDuct: Terminal box receives warm and cold air from separate air supply ducts.\n"
              },
              "HasFan": {
                "type": "boolean",
                "Description": "Terminal box has a fan inside (fan powered box).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasReturnAir": {
                "type": "boolean",
                "Description": "Terminal box has return air mixed with supply air from duct work.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSoundAttenuator": {
                "type": "boolean",
                "Description": "If TRUE, the air terminal has sound attenuation.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HousingThickness": {
                "type": "real",
                "Description": "Air terminal box housing material thickness.\n"
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal rate of air flow into which water vapor is added.\n"
              },
              "NominalDamperDiameter": {
                "type": "real",
                "Description": "Nominal damper diameter.\n"
              },
              "NominalInletAirPressure": {
                "type": "real",
                "Description": "Nominal airflow inlet static pressure.\n"
              },
              "OperationTemperatureRange": {
                "type": "real",
                "Description": "Allowable operational range of the ambient air temperature.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "ReheatType": {
                "type": "string",
                "Description": "Terminal box reheat type.\n"
              },
              "ReturnAirFractionRange": {
                "type": "real",
                "Description": "Allowable return air fraction range as a fraction of discharge airflow.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_AirTerminalBoxTypeBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcAirTerminalBox.CONSTANTFLOW": {
        "Parent": "IfcAirTerminalBox",
        "Description": "Terminal box does not include a means to reset the volume automatically to an outside signal such as thermostat.\n\n\n"
      },
      "IfcAirTerminalBox.VARIABLEFLOWPRESSUREDEPENDANT": {
        "Parent": "IfcAirTerminalBox",
        "Description": "Terminal box includes a means to reset the volume automatically to a different control point in response to an outside signal such as thermostat: air-flow rate depends on supply pressure.\n\n\n"
      },
      "IfcAirTerminalBox.VARIABLEFLOWPRESSUREINDEPENDANT": {
        "Parent": "IfcAirTerminalBox",
        "Description": "Terminal box includes a means to reset the volume automatically to a different control point in response to an outside signal such as thermostat: air-flow rate is independant of supply pressure.\n\n\n"
      },
      "IfcAirTerminal.REGISTER": {
        "Parent": "IfcAirTerminal",
        "Description": "A grille typically equipped with a damper or control valve.\n\n\n"
      },
      "IfcAirTerminal.LOUVRE": {
        "Parent": "IfcAirTerminal",
        "Description": ""
      },
      "IfcAirTerminal.DIFFUSER": {
        "Parent": "IfcAirTerminal",
        "Description": ""
      },
      "IfcAirTerminal.GRILLE": {
        "Parent": "IfcAirTerminal",
        "Description": "A covering for any area through which air passes.\n\n\n"
      },
      "IfcAirToAirHeatRecovery": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An air-to-air heat recovery device employs a counter-flow heat exchanger between inbound and outbound air flow. It is typically used to transfer heat from warmer air in one chamber to cooler air in the second chamber (i.e., typically used to recover heat from the conditioned air being exhausted and the outside air being supplied to a building), resulting in energy savings from reduced heating (or cooling) requirements.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_AirToAirHeatRecoveryPHistory": {
            "Properties": {
              "DefrostTemperatureEffectiveness": {
                "type": "real",
                "Description": "Temperature heat transfer effectiveness when defrosting is active.\n"
              },
              "HumidityEffectiveness": {
                "type": "real",
                "Description": "Humidity heat transfer effectiveness: The ratio of primary airflow absolute humidity changes to maximum possible absolute humidity changes.\n"
              },
              "LatentHeatTransferRate": {
                "type": "real",
                "Description": "Latent heat transfer rate to primary air flow.\n"
              },
              "SensibleEffectiveness": {
                "type": "real",
                "Description": "Sensible heat transfer effectiveness, where effectiveness is defined as the ratio of heat transfer to maximum possible heat transfer.\n"
              },
              "SensibleHeatTransferRate": {
                "type": "real",
                "Description": "Sensible heat transfer rate to primary air flow.\n"
              },
              "TemperatureEffectiveness": {
                "type": "real",
                "Description": "Temperature heat transfer effectiveness: The ratio of primary airflow temperature changes to maximum possible temperature changes.\n"
              },
              "TotalEffectiveness": {
                "type": "real",
                "Description": "Total heat transfer effectiveness: The ratio of heat transfer to the maximum possible heat transfer.\n"
              },
              "TotalHeatTransferRate": {
                "type": "real",
                "Description": "Total heat transfer rate to primary air flow.\n"
              }
            }
          },
          "Pset_AirToAirHeatRecoveryTypeCommon": {
            "Properties": {
              "HasDefrost": {
                "type": "boolean",
                "Description": "has the heat exchanger has defrost function or not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HeatTransferTypeEnum": {
                "type": "string",
                "Description": "Type of heat transfer between the two air streams.\n"
              },
              "OperationalTemperatureRange": {
                "type": "real",
                "Description": "Allowable operation ambient air temperature range.\n"
              },
              "PrimaryAirflowRateRange": {
                "type": "real",
                "Description": "possible range of primary airflow that can be delivered..\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SecondaryAirflowRateRange": {
                "type": "real",
                "Description": "possible range of secondary airflow that can be delivered.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_AirToAirHeatRecoveryBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcAirToAirHeatRecovery.FIXEDPLATECROSSFLOWEXCHANGER": {
        "Parent": "IfcAirToAirHeatRecovery",
        "Description": "Heat exchanger with moving parts and alternate layers of plates, separated and sealed from the exhaust and supply air stream passages with secondary air flow in the direction perpendicular to primary air flow.\n\n\n"
      },
      "IfcAirToAirHeatRecovery.THERMOSIPHONSEALEDTUBEHEATEXCHANGERS": {
        "Parent": "IfcAirToAirHeatRecovery",
        "Description": "Sealed systems that consist of an evaporator, a condenser, interconnecting piping, and an intermediate working fluid that is present in both liquid and vapor phases where the evaporator and the condenser are usually at opposite ends of a bundle of straight, individual thermosiphon tubes and the exhaust and supply ducts are adjacent to each other.\n\n\n"
      },
      "IfcAirToAirHeatRecovery.TWINTOWERENTHALPYRECOVERYLOOPS": {
        "Parent": "IfcAirToAirHeatRecovery",
        "Description": "An air-to-liquid, liquid-to-air enthalpy recovery system with a sorbent liquid circulates continuously between supply and exhaust airstreams, alternately contacting both airstreams directly in contactor towers.\n\n\n"
      },
      "IfcAirToAirHeatRecovery.FIXEDPLATEPARALLELFLOWEXCHANGER": {
        "Parent": "IfcAirToAirHeatRecovery",
        "Description": "Heat exchanger with moving parts and alternate layers of plates, separated and sealed from the exhaust and supply air stream passages with primary air entering at secondary air inlet location and exiting at secondary air outlet location.\n\n\n"
      },
      "IfcAirToAirHeatRecovery.FIXEDPLATECOUNTERFLOWEXCHANGER": {
        "Parent": "IfcAirToAirHeatRecovery",
        "Description": ""
      },
      "IfcAirToAirHeatRecovery.HEATPIPE": {
        "Parent": "IfcAirToAirHeatRecovery",
        "Description": "A passive energy recovery device with a heat pipe divided into evaporator and condenser sections.\n\n\n"
      },
      "IfcAirToAirHeatRecovery.THERMOSIPHONCOILTYPEHEATEXCHANGERS": {
        "Parent": "IfcAirToAirHeatRecovery",
        "Description": ""
      },
      "IfcAirToAirHeatRecovery.RUNAROUNDCOILLOOP": {
        "Parent": "IfcAirToAirHeatRecovery",
        "Description": "A typical coil energy recovery loop places extended surface, finned tube water coils in the supply and exhaust airstreams of a building.\n\n\n"
      },
      "IfcAirToAirHeatRecovery.ROTARYWHEEL": {
        "Parent": "IfcAirToAirHeatRecovery",
        "Description": ""
      },
      "IfcBoiler": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A boiler is a closed, pressure-rated vessel in which water or other fluid is heated using an energy source such as natural gas, heating oil, or electricity. The fluid in the vessel is then circulated out of the boiler for use in various processes or heating applications.\n\n\n\n_IfcBoiler_ is a vessel solely used for heating of water or other fluids. Storage vessels, such as for drinking water storage are considered as tanks and use the _IfcTank_ entity.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_BoilerPHistory": {
            "Properties": {
              "AuxiliaryEnergyConsumption": {
                "type": "real",
                "Description": "Boiler secondary energy source consumption (i.e., the electricity consumed by electrical devices such as fans and pumps).\n"
              },
              "CombustionEfficiency": {
                "type": "real",
                "Description": "Combustion efficiency under nominal condition.\n"
              },
              "CombustionTemperature": {
                "type": "real",
                "Description": "Combustion temperature of the material when air is at 298 K and 100 kPa.\n"
              },
              "EnergySourceConsumption": {
                "type": "real",
                "Description": "Energy consumption.\n"
              },
              "Load": {
                "type": "real",
                "Description": "Boiler real load.\n"
              },
              "OperationalEfficiency": {
                "type": "real",
                "Description": "Operational efficiency: boiler output divided by total energy input (electrical and fuel).\n"
              },
              "PartLoadRatio": {
                "type": "real",
                "Description": "Ratio of the real to the nominal capacity.\n"
              },
              "PrimaryEnergyConsumption": {
                "type": "real",
                "Description": "Boiler primary energy source consumption (i.e., the fuel consumed for changing the thermodynamic state of the fluid).\n"
              },
              "WorkingPressure": {
                "type": "real",
                "Description": "Pressure classification as defined by the authority having jurisdiction (e.g., SMACNA, etc.).\n"
              }
            }
          },
          "Pset_BoilerTypeCommon": {
            "Properties": {
              "EnergySource": {
                "type": "string",
                "Description": "Enumeration defining the energy source or fuel combusted to generate heat if applicable.  Note: hydronic heaters shall use UNSET; dual-use hydronic/electric heaters shall use ELECTRICITY.\n"
              },
              "HeatTransferSurfaceArea": {
                "type": "real",
                "Description": "Total heat transfer area of the vessel.\n"
              },
              "IsWaterStorageHeater": {
                "type": "boolean",
                "Description": "This is used to identify if the boiler has storage capacity (TRUE). If FALSE, then there is no storage capacity built into the boiler, such as an instantaneous hot water heater.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalEnergyConsumption": {
                "type": "real",
                "Description": "Nominal fuel consumption rate required to produce the total boiler heat output.\n"
              },
              "NominalPartLoadRatio": {
                "type": "real",
                "Description": "Allowable part load ratio range.\n"
              },
              "OperatingMode": {
                "type": "string",
                "Description": "Identifies the operating mode of the boiler.\n"
              },
              "OutletTemperatureRange": {
                "type": "real",
                "Description": "Allowable outlet temperature of either the water or the steam.\n"
              },
              "PartialLoadEfficiencyCurves": {
                "type": "real",
                "Description": "Boiler efficiency as a function of the partial load factor; E = f (partialLaodfactor).\n"
              },
              "PressureRating": {
                "type": "real",
                "Description": "Nominal pressure rating of the boiler as rated by the agency having jurisdiction.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "WaterInletTemperatureRange": {
                "type": "real",
                "Description": "Allowable water inlet temperature range.\n"
              },
              "WaterStorageCapacity": {
                "type": "real",
                "Description": "Water storage capacity.\n"
              }
            }
          },
          "Qto_BoilerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "TotalSurfaceArea": {
                "type": "q_area",
                "Description": "Gross area of the air terminal face plate.\n"
              }
            }
          }
        }
      },
      "IfcBoiler.WATER": {
        "Parent": "IfcBoiler",
        "Description": "Water boiler.\n\n\n",
        "Psets": {
          "Pset_BoilerTypeWater": {
            "Properties": {
              "HeatOutput": {
                "type": "real",
                "Description": "Total nominal heat output as listed by the Boiler manufacturer. For steam boilers, it is a function of inlet temperature versus steam pressure.  Note: as two variables are used, DefiningValues and DefinedValues are null, and values are stored in IfcTable in the following order: InletTemperature(IfcThermodynamicTemperatureMeasure) and OutletTemperature(IfcThermodynamicTemperatureMeasure) in DefiningValues, and HeatOutput(IfcEnergyMeasure) in DefinedValues. For example, DefiningValues(InletTemp, OutletTemp), DefinedValues(null, HeatOutput). The IfcTable is related to IfcPropertyTableValue using IfcMetric and IfcPropertyConstraintRelationship.\n"
              },
              "NominalEfficiency": {
                "type": "real",
                "Description": "The nominal efficiency of the boiler as defined by the manufacturer. For steam boilers, a function of inlet temperature versus steam pressure.  Note: as two variables are used, DefiningValues and DefinedValues are null, and values are stored in IfcTable in the following order: InletTemperature(IfcThermodynamicTemperatureMeasure) and OutletTemperature(IfcThermodynamicTemperatureMeasure) in DefiningValues, and NominalEfficiency(IfcNormalisedRatioMeasure) in DefinedValues. For example, DefininfValues(InletTemp, OutletTemp), DefinedValues(null, NominalEfficiency).  The IfcTable is related to IfcPropertyTableValue using IfcMetric and IfcPropertyConstraintRelationship.\n"
              }
            }
          }
        }
      },
      "IfcBoiler.STEAM": {
        "Parent": "IfcBoiler",
        "Description": "Steam boiler.\n\n\n",
        "Psets": {
          "Pset_BoilerTypeSteam": {
            "Properties": {
              "HeatOutput": {
                "type": "real",
                "Description": "Total nominal heat output as listed by the Boiler manufacturer. For steam boilers, it is a function of inlet temperature versus steam pressure.  Note: as two variables are used, DefiningValues and DefinedValues are null, and values are stored in IfcTable in the following order: InletTemperature(IfcThermodynamicTemperatureMeasure) and OutletTemperature(IfcThermodynamicTemperatureMeasure) in DefiningValues, and HeatOutput(IfcEnergyMeasure) in DefinedValues. For example, DefiningValues(InletTemp, OutletTemp), DefinedValues(null, HeatOutput). The IfcTable is related to IfcPropertyTableValue using IfcMetric and IfcPropertyConstraintRelationship.\n"
              },
              "MaximumOutletPressure": {
                "type": "string",
                "Description": "Maximum steam outlet pressure.\n"
              },
              "NominalEfficiency": {
                "type": "real",
                "Description": "The nominal efficiency of the boiler as defined by the manufacturer. For steam boilers, a function of inlet temperature versus steam pressure.  Note: as two variables are used, DefiningValues and DefinedValues are null, and values are stored in IfcTable in the following order: InletTemperature(IfcThermodynamicTemperatureMeasure) and OutletTemperature(IfcThermodynamicTemperatureMeasure) in DefiningValues, and NominalEfficiency(IfcNormalisedRatioMeasure) in DefinedValues. For example, DefininfValues(InletTemp, OutletTemp), DefinedValues(null, NominalEfficiency).  The IfcTable is related to IfcPropertyTableValue using IfcMetric and IfcPropertyConstraintRelationship.\n"
              }
            }
          }
        }
      },
      "IfcBurner": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A burner is a device that converts fuel into heat through combustion. It includes gas, oil, and wood burners.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_BurnerTypeCommon": {
            "Properties": {
              "EnergySource": {
                "type": "string",
                "Description": "Enumeration defining the energy source or fuel combusted to generate heat if applicable.  Note: hydronic heaters shall use UNSET; dual-use hydronic/electric heaters shall use ELECTRICITY.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_BurnerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcChiller": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A chiller is a device used to remove heat from a liquid via a vapor-compression or absorption refrigeration cycle to cool a fluid, typically water or a mixture of water and glycol. The chilled fluid is then used to cool and dehumidify air in a building.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_ChillerPHistory": {
            "Properties": {
              "Capacity": {
                "type": "real",
                "Description": "Cooling tower capacity in terms of heat transfer rate of the cooling tower between air stream and water stream.\n"
              },
              "CoefficientOfPerformance": {
                "type": "real",
                "Description": "The Coefficient of performance (COP) is the ratio of heat removed to energy input. \n\nThe energy input may be obtained by multiplying \n\nPset_DistributionPortPHistoryGas.FlowRate on the 'Fuel' port of the IfcChiller by Pset_MaterialFuel.LowerHeatingValue.  \n\nThe IfcDistributionPort for fuel has an associated IfcMaterial with fuel properties and is assigned to an IfcPerformanceHistory object nested within this IfcPerformanceHistory object.\n"
              },
              "EnergyEfficiencyRatio": {
                "type": "real",
                "Description": "The Energy efficiency ratio (EER) is the ratio of net cooling capacity to the total input rate of electric power applied.  By definition, the units are BTU/hour per Watt.\n\nThe input electric power may be obtained from Pset_DistributionPortPHistoryElectrical.RealPower on the 'Power' port of the IfcChiller.\n"
              }
            }
          },
          "Pset_ChillerTypeCommon": {
            "Properties": {
              "CapacityCurve": {
                "type": "real",
                "Description": "Chiller cooling capacity is a function of condensing temperature and evaporating temperature, data is in table form, Capacity = f (TempCon, TempEvp), capacity = a1+b1\\*Tei+c1\\*Tei\\^2+d1\\*Tci+e1\\*Tci\\^2+f1\\*Tei\\*Tci. \n\nThis table uses multiple input variables; to represent, both DefiningValues and DefinedValues lists are null and IfcTable is attached using IfcPropertyConstraintRelationship and IfcMetric.  Columns are specified in the following order: \n\n1.IfcPowerMeasure:Capacity\n\n2.IfcThermodynamicTemperatureMeasure:CondensingTemperature\n\n3.IfcThermodynamicTemperatureMeasure:EvaporatingTemperature\n"
              },
              "CoefficientOfPerformanceCurve": {
                "type": "real",
                "Description": "Chiller coefficient of performance (COP) is function of condensing temperature and evaporating temperature, data is in table form, COP= f (TempCon, TempEvp), COP = a2+b2\\*Tei+c2\\*Tei\\^2+d2\\*Tci+e2\\*Tci\\^2+f2\\*Tei\\*Tci. \n\nThis table uses multiple input variables; to represent, both DefiningValues and DefinedValues lists are null and IfcTable is attached using IfcPropertyConstraintRelationship and IfcMetric.  Columns are specified in the following order: \n\n1.IfcPositiveRatioMeasure:CoefficientOfPerformance\n\n2.IfcThermodynamicTemperatureMeasure:CondensingTemperature\n\n3.IfcThermodynamicTemperatureMeasure:EvaporatingTemperature\n"
              },
              "FullLoadRatioCurve": {
                "type": "real",
                "Description": "Ratio of actual power to full load power as a quadratic function of part load, at certain condensing and evaporating temperature, FracFullLoadPower = f ( PartLoadRatio).\n"
              },
              "NominalCapacity": {
                "type": "real",
                "Description": "Nominal cooling tower capacity in terms of heat transfer rate of the cooling tower between air stream and water stream at nominal conditions.\n"
              },
              "NominalCondensingTemperature": {
                "type": "real",
                "Description": "Chiller condensing temperature.\n"
              },
              "NominalEfficiency": {
                "type": "real",
                "Description": "The nominal efficiency of the boiler as defined by the manufacturer. For steam boilers, a function of inlet temperature versus steam pressure.  Note: as two variables are used, DefiningValues and DefinedValues are null, and values are stored in IfcTable in the following order: InletTemperature(IfcThermodynamicTemperatureMeasure) and OutletTemperature(IfcThermodynamicTemperatureMeasure) in DefiningValues, and NominalEfficiency(IfcNormalisedRatioMeasure) in DefinedValues. For example, DefininfValues(InletTemp, OutletTemp), DefinedValues(null, NominalEfficiency).  The IfcTable is related to IfcPropertyTableValue using IfcMetric and IfcPropertyConstraintRelationship.\n"
              },
              "NominalEvaporatingTemperature": {
                "type": "real",
                "Description": "Chiller evaporating temperature.\n"
              },
              "NominalHeatRejectionRate": {
                "type": "real",
                "Description": "Sum of the refrigeration effect and the heat equivalent of the power input to the compressor.\n"
              },
              "NominalPowerConsumption": {
                "type": "real",
                "Description": "Nominal total power consumption.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_ChillerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcChiller.WATERCOOLED": {
        "Parent": "IfcChiller",
        "Description": ""
      },
      "IfcChiller.AIRCOOLED": {
        "Parent": "IfcChiller",
        "Description": "Air cooled chiller.\n\n\n"
      },
      "IfcChiller.HEATRECOVERY": {
        "Parent": "IfcChiller",
        "Description": ""
      },
      "IfcCoil": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A coil is a device used to provide heat transfer between non-mixing media. A common example is a cooling coil, which utilizes a finned coil in which circulates chilled water, antifreeze, or refrigerant that is used to remove heat from air moving across the surface of the coil. A coil may be used either for heating or cooling purposes by placing a series of tubes (the coil) carrying a heating or cooling fluid into an airstream. The coil may be constructed from tubes bundled in a serpentine form or from finned tubes that give a extended heat transfer surface.\n\n\n\nCoils may also be used for non-airflow cases such as embedded in a floor slab.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_CoilOccurrence": {
            "Properties": {
              "HasSoundAttenuation": {
                "type": "boolean",
                "Description": "TRUE if the coil has sound attenuation, FALSE if it does not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_CoilPHistory": {
            "Properties": {
              "AtmosphericPressure": {
                "type": "real",
                "Description": "Ambient atmospheric pressure.\n"
              },
              "FaceVelocity": {
                "type": "real",
                "Description": "Air velocity through the coil.\n"
              }
            }
          },
          "Pset_CoilTypeCommon": {
            "Properties": {
              "AirflowRateRange": {
                "type": "real",
                "Description": "Air flowrate range within which the air terminal is designed to operate.\n"
              },
              "NominalLatentCapacity": {
                "type": "real",
                "Description": "Nominal latent capacity.\n"
              },
              "NominalSensibleCapacity": {
                "type": "real",
                "Description": "Nominal sensible capacity.\n"
              },
              "NominalUA": {
                "type": "real",
                "Description": "Nominal UA value.\n"
              },
              "OperationalTemperatureRange": {
                "type": "real",
                "Description": "Allowable operation ambient air temperature range.\n"
              },
              "PlacementType": {
                "type": "string",
                "Description": "Indicates the placement of the coil.  \n\nFLOOR indicates an under floor heater (if coil type is WATERHEATINGCOIL or ELECTRICHEATINGCOIL); \n\nCEILING indicates a cooling ceiling (if coil type is WATERCOOLINGCOIL);\n\nUNIT indicates that the coil is part of a cooling or heating unit, like cooled beam, etc.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Pset_CoilTypeHydronic": {
            "Properties": {
              "BypassFactor": {
                "type": "real",
                "Description": "Fraction of air that is bypassed by the coil (0-1).\n"
              },
              "CoilConnectionDirection": {
                "type": "PEnum_CoilConnectionDirection",
                "Description": "Coil connection direction (facing into the air stream).\n",
                "values": [
                  "LEFT",
                  "RIGHT"
                ]
              },
              "CoilCoolant": {
                "type": "PEnum_CoilCoolant",
                "Description": "The fluid used for heating or cooling used by the hydronic coil.\n",
                "values": [
                  "BRINE",
                  "GLYCOL",
                  "WATER"
                ]
              },
              "CoilFaceArea": {
                "type": "real",
                "Description": "Coil face area in the direction against air the flow.\n"
              },
              "CoilFluidArrangement": {
                "type": "PEnum_CoilFluidArrangement",
                "Description": "Fluid flow arrangement of the coil.\n\n\n\nCrossCounterFlow: Air and water flow enter in different directions.\n\nCrossFlow: Air and water flow are perpendicular.\n\nCrossParallelFlow: Air and water flow enter in same directions.\n",
                "values": [
                  "CROSSCOUNTERFLOW",
                  "CROSSFLOW",
                  "CROSSPARALLELFLOW"
                ]
              },
              "FluidPressureRange": {
                "type": "real",
                "Description": "Allowable water working pressure range inside the tube.\n"
              },
              "HeatExchangeSurfaceArea": {
                "type": "real",
                "Description": "Heat exchange surface area associated with U-value.\n"
              },
              "PrimarySurfaceArea": {
                "type": "real",
                "Description": "Primary heat transfer surface area of the tubes and headers.\n"
              },
              "SecondarySurfaceArea": {
                "type": "real",
                "Description": "Secondary heat transfer surface area created by fins.\n"
              },
              "SensibleHeatRatio": {
                "type": "real",
                "Description": "Air-side sensible heat ratio, or fraction of sensible heat transfer to the total heat transfer.\n"
              },
              "TotalUACurves": {
                "type": "real",
                "Description": "Total UA curves, UA - air and water velocities, UA = [(C1 \\* AirFlowRate\\^0.8)\\^-1 + (C2 \\* WaterFlowRate\\^0.8)\\^-1]\\^-1.  Note: as two variables are used, DefiningValues and DefinedValues are null, and values are stored in IfcTable in the following order: AirFlowRate,WaterFlowRate,UA.  The IfcTable is related to IfcPropertyTableValue using IfcMetric and IfcPropertyConstraintRelationship.\n"
              },
              "WaterPressureDropCurve": {
                "type": "real",
                "Description": "Water pressure drop curve, pressure drop \u2013 flow rate curve, WaterPressureDrop = f(WaterflowRate).\n"
              },
              "WetCoilFraction": {
                "type": "real",
                "Description": "Fraction of coil surface area that is wet (0-1).\n"
              }
            }
          },
          "Qto_CoilBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcCoil.WATERHEATINGCOIL": {
        "Parent": "IfcCoil",
        "Description": "Heating coil using hot water as a heating source. HYDRONICCOIL supercedes this enumerator.\n\n\n"
      },
      "IfcCoil.DXCOOLINGCOIL": {
        "Parent": "IfcCoil",
        "Description": "Cooling coil using a refrigerant to cool the air stream directly.\n\n\n"
      },
      "IfcCoil.HYDRONICCOIL": {
        "Parent": "IfcCoil",
        "Description": "Cooling or Heating coil that uses a hydronic fluid as a cooling or heating source.\n\n\n"
      },
      "IfcCoil.GASHEATINGCOIL": {
        "Parent": "IfcCoil",
        "Description": "Heating coil using gas as a heating source.\n\n\n"
      },
      "IfcCoil.ELECTRICHEATINGCOIL": {
        "Parent": "IfcCoil",
        "Description": ""
      },
      "IfcCoil.WATERCOOLINGCOIL": {
        "Parent": "IfcCoil",
        "Description": "Cooling coil using chilled water. HYDRONICCOIL supercedes this enumerator.\n\n\n"
      },
      "IfcCoil.STEAMHEATINGCOIL": {
        "Parent": "IfcCoil",
        "Description": "Heating coil using steam as heating source.\n\n\n"
      },
      "IfcCompressor": {
        "Parent": "IfcFlowMovingDevice",
        "Description": "A compressor is a device that compresses a fluid typically used in a refrigeration circuit.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_CompressorPHistory": {
            "Properties": {
              "CoefficientOfPerformance": {
                "type": "real",
                "Description": "The Coefficient of performance (COP) is the ratio of heat removed to energy input. \n\nThe energy input may be obtained by multiplying \n\nPset_DistributionPortPHistoryGas.FlowRate on the 'Fuel' port of the IfcChiller by Pset_MaterialFuel.LowerHeatingValue.  \n\nThe IfcDistributionPort for fuel has an associated IfcMaterial with fuel properties and is assigned to an IfcPerformanceHistory object nested within this IfcPerformanceHistory object.\n"
              },
              "CompressionEfficiency": {
                "type": "real",
                "Description": "Ratio of the work required for isentropic compression of the gas to the work delivered to the gas within the compression volume (as obtained by measurement).\n"
              },
              "CompressorCapacity": {
                "type": "real",
                "Description": "The product of the  ideal capacity and the overall volumetric efficiency of the compressor.\n"
              },
              "CompressorTotalEfficiency": {
                "type": "real",
                "Description": "Ratio of the thermal cooling capacity to electrical input.\n"
              },
              "CompressorTotalHeatGain": {
                "type": "real",
                "Description": "Compressor total heat gain.\n"
              },
              "EnergyEfficiencyRatio": {
                "type": "real",
                "Description": "The Energy efficiency ratio (EER) is the ratio of net cooling capacity to the total input rate of electric power applied.  By definition, the units are BTU/hour per Watt.\n\nThe input electric power may be obtained from Pset_DistributionPortPHistoryElectrical.RealPower on the 'Power' port of the IfcChiller.\n"
              },
              "FrictionHeatGain": {
                "type": "real",
                "Description": "Friction heat gain.\n"
              },
              "FullLoadRatio": {
                "type": "real",
                "Description": "Ratio of actual power to full load power as a quadratic function of part load, at certain condensing and evaporating temperature, FracFullLoadPower = f ( PartLoadRatio).\n"
              },
              "InputPower": {
                "type": "real",
                "Description": "Input power to the compressor motor.\n"
              },
              "IsentropicEfficiency": {
                "type": "real",
                "Description": "Ratio of the work required for isentropic compression of the gas to work input to the compressor shaft.\n"
              },
              "LubricantPumpHeatGain": {
                "type": "real",
                "Description": "Lubricant pump heat gain.\n"
              },
              "MechanicalEfficiency": {
                "type": "real",
                "Description": "Ratio of the work (as measured) delivered to the gas to the work input to the compressor shaft.\n"
              },
              "ShaftPower": {
                "type": "real",
                "Description": "The actual shaft power input to the compressor.\n"
              },
              "VolumetricEfficiency": {
                "type": "real",
                "Description": "Ratio of the actual volume of gas entering the compressor to the theoretical displacement of the compressor.\n"
              }
            }
          },
          "Pset_CompressorTypeCommon": {
            "Properties": {
              "CompressorSpeed": {
                "type": "real",
                "Description": "Compressor speed.\n"
              },
              "HasHotGasBypass": {
                "type": "boolean",
                "Description": "Whether or not hot gas bypass is provided for the compressor. TRUE = Yes, FALSE = No.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IdealCapacity": {
                "type": "real",
                "Description": "Compressor capacity under ideal conditions.\n"
              },
              "IdealShaftPower": {
                "type": "real",
                "Description": "Compressor shaft power under ideal conditions.\n"
              },
              "ImpellerDiameter": {
                "type": "real",
                "Description": "Diameter of compressor impeller - used to scale performance of geometrically similar compressors.\n"
              },
              "MaximumPartLoadRatio": {
                "type": "real",
                "Description": "Maximum part load ratio as a fraction of nominal capacity.\n"
              },
              "MinimumPartLoadRatio": {
                "type": "real",
                "Description": "Minimum part load ratio as a fraction of nominal capacity.\n"
              },
              "NominalCapacity": {
                "type": "real",
                "Description": "Nominal cooling tower capacity in terms of heat transfer rate of the cooling tower between air stream and water stream at nominal conditions.\n"
              },
              "PowerSource": {
                "type": "string",
                "Description": "Type of power driving the compressor.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "RefrigerantClass": {
                "type": "string",
                "Description": "Refrigerant class used by the compressor.\n\n\n\nCFC: Chlorofluorocarbons.\n\nHCFC: Hydrochlorofluorocarbons.\n\nHFC: Hydrofluorocarbons.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_CompressorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcCompressor.DYNAMIC": {
        "Parent": "IfcCompressor",
        "Description": "The pressure of refrigerant vapor is increased by a continuous transfer of angular momentum from a rotating member to the vapor followed by conversion of this momentum into static pressure.\n\n\n"
      },
      "IfcCompressor.SCROLL": {
        "Parent": "IfcCompressor",
        "Description": "Positive-displacement compressor using two inter-fitting, spiral-shaped scroll members.\n\n\n"
      },
      "IfcCompressor.RECIPROCATING": {
        "Parent": "IfcCompressor",
        "Description": "Positive-displacement compressor using a piston driven by a connecting rod from a crankshaft.\n\n\n"
      },
      "IfcCompressor.HERMETIC": {
        "Parent": "IfcCompressor",
        "Description": "Positive-displacement reciprocating compressor where the motor and compressor are contained within the same housing, with the motor shaft integral with the compressor crankshaft and the motor in contact with refrigerant.\n\n\n"
      },
      "IfcCompressor.SEMIHERMETIC": {
        "Parent": "IfcCompressor",
        "Description": ""
      },
      "IfcCompressor.OPENTYPE": {
        "Parent": "IfcCompressor",
        "Description": "Positive-displacement reciprocating compressor where the shaft extends through a seal in the crankcase for an external drive.\n\n\n"
      },
      "IfcCompressor.TROCHOIDAL": {
        "Parent": "IfcCompressor",
        "Description": ""
      },
      "IfcCompressor.BOOSTER": {
        "Parent": "IfcCompressor",
        "Description": "Positive-displacement reciprocating compressor where pressure is increased by a booster.\n\n\n"
      },
      "IfcCompressor.SINGLESTAGE": {
        "Parent": "IfcCompressor",
        "Description": "Positive-displacement reciprocating compressor where vapor is compressed in a single stage.\n\n\n"
      },
      "IfcCompressor.TWINSCREW": {
        "Parent": "IfcCompressor",
        "Description": "Positive-displacement rotary compressor using two mating helically grooved rotors, male (lobes) and female (flutes) in a stationary housing with inlet and outlet gas ports.\n\n\n"
      },
      "IfcCompressor.ROTARY": {
        "Parent": "IfcCompressor",
        "Description": ""
      },
      "IfcCompressor.ROTARYVANE": {
        "Parent": "IfcCompressor",
        "Description": "Positive-displacement rotary compressor using a roller mounted on the eccentric of a shaft with multiple vanes in the nontotating cylindrical housing.\n\n\n"
      },
      "IfcCompressor.WELDEDSHELLHERMETIC": {
        "Parent": "IfcCompressor",
        "Description": ""
      },
      "IfcCompressor.ROLLINGPISTON": {
        "Parent": "IfcCompressor",
        "Description": "Positive-displacement rotary compressor using a roller mounted on the eccentric of a shaft with a single vane in the nonrotating cylindrical housing.\n\n\n"
      },
      "IfcCompressor.SINGLESCREW": {
        "Parent": "IfcCompressor",
        "Description": ""
      },
      "IfcCondenser": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A condenser is a device that is used to dissipate heat, typically by condensing a substance such as a refrigerant from its gaseous to its liquid state.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_CondenserPHistory": {
            "Properties": {
              "CompressorCondenserHeatGain": {
                "type": "real",
                "Description": "Heat gain between condenser inlet to compressor outlet.\n"
              },
              "CompressorCondenserPressureDrop": {
                "type": "real",
                "Description": "Pressure drop between condenser inlet and compressor outlet.\n"
              },
              "CondenserMeanVoidFraction": {
                "type": "real",
                "Description": "Mean void fraction in condenser.\n"
              },
              "CondensingTemperature": {
                "type": "real",
                "Description": "Refrigerant condensing temperature.\n"
              },
              "ExteriorHeatTransferCoefficient": {
                "type": "real",
                "Description": "Exterior heat transfer coefficient associated with exterior surface area.\n"
              },
              "HeatRejectionRate": {
                "type": "real",
                "Description": "Sum of the refrigeration effect and the heat equivalent of the power input to the compressor.\n"
              },
              "InteriorHeatTransferCoefficient": {
                "type": "real",
                "Description": "Interior heat transfer coefficient associated with interior surface area.\n"
              },
              "LogarithmicMeanTemperatureDifference": {
                "type": "real",
                "Description": "Logarithmic mean temperature difference between refrigerant and water or air.\n"
              },
              "RefrigerantFoulingResistance": {
                "type": "real",
                "Description": "Fouling resistance on the refrigerant side.\n"
              },
              "WaterFoulingResistance": {
                "type": "real",
                "Description": "Fouling resistance on water/air side.\n"
              }
            }
          },
          "Pset_CondenserTypeCommon": {
            "Properties": {
              "ExternalSurfaceArea": {
                "type": "real",
                "Description": "External surface area (both primary and secondary area).\n"
              },
              "InternalRefrigerantVolume": {
                "type": "real",
                "Description": "Internal volume of evaporator (refrigerant side).\n"
              },
              "InternalSurfaceArea": {
                "type": "real",
                "Description": "Internal surface area.\n"
              },
              "InternalWaterVolume": {
                "type": "real",
                "Description": "Internal volume of evaporator (water side).\n"
              },
              "NominalHeatTransferArea": {
                "type": "real",
                "Description": "Nominal heat transfer surface area associated with nominal overall heat transfer coefficient.\n"
              },
              "NominalHeatTransferCoefficient": {
                "type": "real",
                "Description": "Nominal overall heat transfer coefficient associated with nominal heat transfer area.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "RefrigerantClass": {
                "type": "string",
                "Description": "Refrigerant class used by the compressor.\n\n\n\nCFC: Chlorofluorocarbons.\n\nHCFC: Hydrochlorofluorocarbons.\n\nHFC: Hydrofluorocarbons.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_CondenserBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcCondenser.AIRCOOLED": {
        "Parent": "IfcCondenser",
        "Description": "A condenser in which heat is transferred to an air-stream.\n\n\n"
      },
      "IfcCondenser.EVAPORATIVECOOLED": {
        "Parent": "IfcCondenser",
        "Description": "A condenser that is cooled evaporatively.\n\n\n"
      },
      "IfcCondenser.WATERCOOLEDSHELLTUBE": {
        "Parent": "IfcCondenser",
        "Description": "Water-cooled condenser with cooling water circulated through one or more tubes contained within the shell.\n\n\n"
      },
      "IfcCondenser.WATERCOOLED": {
        "Parent": "IfcCondenser",
        "Description": "Water-cooled condenser with unspecified operation.\n\n\n"
      },
      "IfcCondenser.WATERCOOLEDBRAZEDPLATE": {
        "Parent": "IfcCondenser",
        "Description": "Water-cooled condenser with plates brazed together to form an assembly of separate channels.\n\n\n"
      },
      "IfcCondenser.WATERCOOLEDSHELLCOIL": {
        "Parent": "IfcCondenser",
        "Description": "Water-cooled condenser with cooling water circulated through one or more continuous or assembled coils contained within the shell.\n\n\n"
      },
      "IfcCondenser.WATERCOOLEDTUBEINTUBE": {
        "Parent": "IfcCondenser",
        "Description": "Water-cooled condenser consisting of one or more assemblies of two tubes, one within the other.\n\n\n"
      },
      "IfcCooledBeam": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A cooled beam (or chilled beam) is a device typically used to cool air by circulating a fluid such as chilled water through exposed finned tubes above a space. Typically mounted overhead near or within a ceiling, the cooled beam uses convection to cool the space below it by acting as a heat sink for the naturally rising warm air of the space. Once cooled, the air naturally drops back to the floor where the cycle begins again.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_CooledBeamPHistory": {
            "Properties": {
              "BeamCoolingCapacity": {
                "type": "real",
                "Description": "Cooling capacity of beam. This excludes cooling capacity of supply air.\n"
              },
              "BeamHeatingCapacity": {
                "type": "real",
                "Description": "Heating capacity of beam. This excludes heating capacity of supply air.\n"
              },
              "CoolingWaterFlowRate": {
                "type": "real",
                "Description": "Water flow rate for cooling.\n"
              },
              "CorrectionFactorForCooling": {
                "type": "real",
                "Description": "Correction factor k as a function of water flow rate (used to calculate cooling capacity).\n"
              },
              "CorrectionFactorForHeating": {
                "type": "real",
                "Description": "Correction factor k as a function of water flow rate (used to calculate heating capacity).\n"
              },
              "HeatingWaterFlowRate": {
                "type": "real",
                "Description": "Water flow rate for heating.\n"
              },
              "ReturnWaterTemperatureCooling": {
                "type": "real",
                "Description": "Return water temperature in cooling mode.\n"
              },
              "ReturnWaterTemperatureHeating": {
                "type": "real",
                "Description": "Return water temperature in heating mode.\n"
              },
              "SupplyWaterTemperatureCooling": {
                "type": "real",
                "Description": "Supply water temperature in cooling mode.\n"
              },
              "SupplyWaterTemperatureHeating": {
                "type": "real",
                "Description": "Supply water temperature in heating mode.\n"
              },
              "TotalCoolingCapacity": {
                "type": "real",
                "Description": "Total cooling capacity. This includes cooling capacity of beam and cooling capacity of supply air.\n"
              },
              "TotalHeatingCapacity": {
                "type": "real",
                "Description": "Total heating capacity. This includes heating capacity of beam and heating capacity of supply air.\n"
              },
              "WaterPressureDropCurves": {
                "type": "real",
                "Description": "Water pressure drop as function of water flow rate.\n"
              }
            }
          },
          "Pset_CooledBeamTypeCommon": {
            "Properties": {
              "CoilLength": {
                "type": "real",
                "Description": "Length of coil.\n"
              },
              "CoilWidth": {
                "type": "real",
                "Description": "Width of coil.\n"
              },
              "FinishColor": {
                "type": "string",
                "Description": "The finish color for the air terminal.\n"
              },
              "IntegratedLightingType": {
                "type": "string",
                "Description": "Integrated lighting in cooled beam.\n"
              },
              "IsFreeHanging": {
                "type": "boolean",
                "Description": "Is it free hanging type (not mounted in a false ceiling)?\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalCoolingCapacity": {
                "type": "real",
                "Description": "Nominal cooling capacity.\n"
              },
              "NominalHeatingCapacity": {
                "type": "real",
                "Description": "Nominal heating capacity.\n"
              },
              "NominalReturnWaterTemperatureCooling": {
                "type": "real",
                "Description": "Nominal return water temperature (refers to nominal cooling capacity).\n"
              },
              "NominalReturnWaterTemperatureHeating": {
                "type": "real",
                "Description": "Nominal return water temperature (refers to nominal heating capacity).\n"
              },
              "NominalSupplyWaterTemperatureCooling": {
                "type": "real",
                "Description": "Nominal supply water temperature (refers to nominal cooling capacity).\n"
              },
              "NominalSupplyWaterTemperatureHeating": {
                "type": "real",
                "Description": "Nominal supply water temperature (refers to nominal heating capacity).\n"
              },
              "NominalSurroundingHumidityCooling": {
                "type": "real",
                "Description": "Nominal surrounding humidity (refers to nominal cooling capacity).\n"
              },
              "NominalSurroundingTemperatureCooling": {
                "type": "real",
                "Description": "Nominal surrounding temperature (refers to nominal cooling capacity).\n"
              },
              "NominalSurroundingTemperatureHeating": {
                "type": "real",
                "Description": "Nominal surrounding temperature (refers to nominal heating capacity).\n"
              },
              "NominalWaterFlowCooling": {
                "type": "real",
                "Description": "Nominal water flow (refers to nominal cooling capacity).\n"
              },
              "NominalWaterFlowHeating": {
                "type": "real",
                "Description": "Nominal water flow (refers to nominal heating capacity).\n"
              },
              "PipeConnection": {
                "type": "string",
                "Description": "The manner in which the pipe connection is made to the cooled beam.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "WaterFlowControlSystemType": {
                "type": "string",
                "Description": "Factory fitted waterflow control system.\n"
              },
              "WaterPressureRange": {
                "type": "real",
                "Description": "Allowable water circuit working pressure range.\n"
              }
            }
          },
          "Qto_CooledBeamBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcCooledBeam.ACTIVE": {
        "Parent": "IfcCooledBeam",
        "Description": "An active or ventilated cooled beam provides cooling (and heating) but can also function as an air terminal in a ventilation system.\n\n\n",
        "Psets": {
          "Pset_CooledBeamPHistoryActive": {
            "Properties": {
              "AirFlowRate": {
                "type": "real",
                "Description": "The actual airflow rate as designed.\n"
              },
              "AirPressureDropCurves": {
                "type": "real",
                "Description": "Air pressure drop as function of air flow rate.\n"
              },
              "Throw": {
                "type": "real",
                "Description": "Distance cooled beam throws the air.\n"
              }
            }
          },
          "Pset_CooledBeamTypeActive": {
            "Properties": {
              "AirFlowConfiguration": {
                "type": "string",
                "Description": "Air flow configuration type of cooled beam.\n"
              },
              "AirflowRateRange": {
                "type": "real",
                "Description": "Air flowrate range within which the air terminal is designed to operate.\n"
              },
              "ConnectionSize": {
                "type": "real",
                "Description": "Defines the size of inlet and outlet pipe connections to the meter.\n"
              },
              "SupplyAirConnectionType": {
                "type": "string",
                "Description": "The manner in which the pipe connection is made to the cooled beam.\n"
              }
            }
          }
        }
      },
      "IfcCooledBeam.PASSIVE": {
        "Parent": "IfcCooledBeam",
        "Description": "A passive or static cooled beam provides cooling (and heating) to a room or zone.\n\n\n"
      },
      "IfcCoolingTower": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A cooling tower is a device which rejects heat to ambient air by circulating a fluid such as water through it to reduce its temperature by partial evaporation.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_CoolingTowerPHistory": {
            "Properties": {
              "Capacity": {
                "type": "real",
                "Description": "Cooling tower capacity in terms of heat transfer rate of the cooling tower between air stream and water stream.\n"
              },
              "SumpHeaterPower": {
                "type": "real",
                "Description": "Electrical heat power of sump heater.\n"
              }
            }
          },
          "Pset_CoolingTowerTypeCommon": {
            "Properties": {
              "AmbientDesignDryBulbTemperature": {
                "type": "real",
                "Description": "Ambient design dry bulb temperature used for selecting the cooling tower.\n"
              },
              "AmbientDesignWetBulbTemperature": {
                "type": "real",
                "Description": "Ambient design wet bulb temperature used for selecting the cooling tower.\n"
              },
              "BasinReserveVolume": {
                "type": "real",
                "Description": "Volume between operating and overflow levels in cooling tower basin.\n"
              },
              "CapacityControl": {
                "type": "string",
                "Description": "FanCycling: Fan is cycled on and off to control duty.\n\nTwoSpeedFan: Fan is switched between low and high speed to control duty.\n\nVariableSpeedFan: Fan speed is varied to control duty.\n\nDampersControl: Dampers modulate the air flow to control duty.\n\nBypassValveControl: Bypass valve modulates the water flow to control duty.\n\nMultipleSeriesPumps: Turn on/off multiple series pump to control duty.\n\nTwoSpeedPump: Switch between high/low pump speed to control duty.\n\nVariableSpeedPump: vary pump speed to control duty.\n"
              },
              "CircuitType": {
                "type": "string",
                "Description": "OpenCircuit: Exposes water directly to the cooling atmosphere.\n\nCloseCircuit: The fluid is separated from the atmosphere by a heat exchanger.\n\nWet: The air stream or the heat exchange surface is evaporatively cooled.\n\nDry: No evaporation into the air stream.\n\nDryWet: A combination of a dry tower and a wet tower.\n"
              },
              "ControlStrategy": {
                "type": "string",
                "Description": "FixedExitingWaterTemp: The capacity is controlled to maintain a fixed exiting water temperature.\n\nWetBulbTempReset: The set-point is reset based on the wet-bulb temperature.\n"
              },
              "FlowArrangement": {
                "type": "string",
                "Description": "CounterFlow: Air and water flow enter in different directions.\n\n\n\nCrossFlow: Air and water flow are perpendicular.\n\nParallelFlow: Air and water flow enter in same directions.\n"
              },
              "LiftElevationDifference": {
                "type": "real",
                "Description": "Elevation difference between cooling tower sump and the top of the tower.\n"
              },
              "NominalCapacity": {
                "type": "real",
                "Description": "Nominal cooling tower capacity in terms of heat transfer rate of the cooling tower between air stream and water stream at nominal conditions.\n"
              },
              "NumberOfCells": {
                "type": "integer",
                "Description": "Number of cells in one cooling tower unit.\n"
              },
              "OperationTemperatureRange": {
                "type": "real",
                "Description": "Allowable operational range of the ambient air temperature.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SprayType": {
                "type": "string",
                "Description": "SprayFilled: Water is sprayed into airflow.\n\nSplashTypeFill: water cascades over successive rows of splash bars.\n\nFilmTypeFill: water flows in a thin layer over closely spaced sheets.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "WaterRequirement": {
                "type": "real",
                "Description": "Make-up water requirements.\n"
              }
            }
          },
          "Qto_CoolingTowerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcCoolingTower.MECHANICALFORCEDDRAFT": {
        "Parent": "IfcCoolingTower",
        "Description": "Air flow is produced by a mechanical device, typically one or more fans, located on the inlet air side of the cooling tower.\n\n\n"
      },
      "IfcCoolingTower.NATURALDRAFT": {
        "Parent": "IfcCoolingTower",
        "Description": "Air flow is produced naturally.\n\n\n"
      },
      "IfcCoolingTower.MECHANICALINDUCEDDRAFT": {
        "Parent": "IfcCoolingTower",
        "Description": "Air flow is produced by a mechanical device, typically one or more fans, located on the air outlet side of the cooling tower.\n\n\n"
      },
      "IfcDamper": {
        "Parent": "IfcFlowController",
        "Description": "A damper typically participates in an HVAC duct distribution system and is used to control or modulate the flow of air.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_DamperOccurrence": {
            "Properties": {
              "SizingMethod": {
                "type": "string",
                "Description": "Identifies whether the damper is sized nominally or with exact measurements:\n\n\n\nNOMINAL: Nominal sizing method. \n\nEXACT: Exact sizing method.\n"
              }
            }
          },
          "Pset_DamperPHistory": {
            "Properties": {
              "AirFlowRate": {
                "type": "real",
                "Description": "The actual airflow rate as designed.\n"
              },
              "BladePositionAngle": {
                "type": "real",
                "Description": "Blade position angle; angle between the blade and flow direction ( 0 - 90).\n"
              },
              "DamperPosition": {
                "type": "real",
                "Description": "Damper position (0-1); damper position ( 0=closed=90deg position angle, 1=open=0deg position angle.\n"
              },
              "Leakage": {
                "type": "real",
                "Description": "Air leakage rate.\n"
              },
              "PressureDrop": {
                "type": "real",
                "Description": "Drop in total pressure between inlet and outlet at nominal air-flow rate.\n"
              },
              "PressureLossCoefficient": {
                "type": "real",
                "Description": "Pressure loss coefficient.\n"
              }
            }
          },
          "Pset_DamperTypeCommon": {
            "Properties": {
              "BladeAction": {
                "type": "string",
                "Description": "Blade action.\n"
              },
              "BladeEdge": {
                "type": "string",
                "Description": "Blade edge.\n"
              },
              "BladeShape": {
                "type": "string",
                "Description": "Blade shape. Flat means triple V-groove.\n"
              },
              "BladeThickness": {
                "type": "real",
                "Description": "The thickness of the damper blade.\n"
              },
              "CloseOffRating": {
                "type": "real",
                "Description": "Close off rating.\n"
              },
              "FaceArea": {
                "type": "real",
                "Description": "Face area open to the airstream.\n"
              },
              "FrameDepth": {
                "type": "real",
                "Description": "The length (or depth) of the damper frame.\n"
              },
              "FrameThickness": {
                "type": "real",
                "Description": "The thickness of the damper frame material.\n"
              },
              "FrameType": {
                "type": "string",
                "Description": "The type of frame used by the damper (e.g., Standard, Single Flange, Single Reversed Flange, Double Flange, etc.).\n"
              },
              "LeakageCurve": {
                "type": "real",
                "Description": "Leakage per unit length curve versus working pressure. If a scalar is expressed then it represents LeakageClass which is flowrate per unit area at a specified pressure rating (e.g., ASHRAE Fundamentals 2001 34.16.).\n"
              },
              "LeakageFullyClosed": {
                "type": "real",
                "Description": "Leakage when fully closed.\n"
              },
              "LossCoefficentCurve": {
                "type": "real",
                "Description": "Loss coefficient \u2013 blade position angle curve; ratio of pressure drop to velocity pressure versus blade angle; C = f (blade angle position).\n"
              },
              "MaximumAirFlowRate": {
                "type": "real",
                "Description": "Maximum allowable air flow rate.\n"
              },
              "MaximumWorkingPressure": {
                "type": "real",
                "Description": "Maximum pressure that the object is manufactured to withstand.\n"
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal rate of air flow into which water vapor is added.\n"
              },
              "NumberofBlades": {
                "type": "integer",
                "Description": "Number of blades.\n"
              },
              "OpenPressureDrop": {
                "type": "real",
                "Description": "Total pressure drop across damper.\n"
              },
              "Operation": {
                "type": "string",
                "Description": "The operational mechanism for the damper operation.\n"
              },
              "Orientation": {
                "type": "string",
                "Description": "The intended orientation for the damper as specified by the manufacturer.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "RegeneratedSoundCurve": {
                "type": "real",
                "Description": "Regenerated sound versus air flow rate.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TemperatureRange": {
                "type": "real",
                "Description": "Temperature range within which the air terminal is designed to operate.\n"
              },
              "TemperatureRating": {
                "type": "real",
                "Description": "Temperature rating.\n"
              }
            }
          },
          "Qto_DamperBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcDamper.FUMEHOODEXHAUST": {
        "Parent": "IfcDamper",
        "Description": "Fume hood exhaust damper.  Commonly operated by actuator.\n\n\n"
      },
      "IfcDamper.GRAVITYRELIEFDAMPER": {
        "Parent": "IfcDamper",
        "Description": ""
      },
      "IfcDamper.BLASTDAMPER": {
        "Parent": "IfcDamper",
        "Description": "Blast damper used to prevent protect occupants and equipment against overpressures resultant of an explosion.  Commonly operated by mechanical spring.\n\n\n"
      },
      "IfcDamper.CONTROLDAMPER": {
        "Parent": "IfcDamper",
        "Description": "Control damper used to modulate the flow of air by adjusting the position of the blades.  Commonly operated by an actuator of a building automation system.\n\n\n",
        "Psets": {
          "Pset_DamperTypeControlDamper": {
            "Properties": {
              "ControlDamperOperation": {
                "type": "PEnum_ControlDamperOperation",
                "Description": "The inherent characteristic of the control damper operation.\n",
                "values": [
                  "EXPONENTIAL",
                  "LINEAR"
                ]
              },
              "TorqueRange": {
                "type": "real",
                "Description": "Torque range: minimum operational torque to maximum allowable torque.\n"
              }
            }
          }
        }
      },
      "IfcDamper.FIRESMOKEDAMPER": {
        "Parent": "IfcDamper",
        "Description": "",
        "Psets": {
          "Pset_DamperTypeFireSmokeDamper": {
            "Properties": {
              "ActuationType": {
                "type": "string",
                "Description": "Enumeration that identifies the different types of dampers.\n"
              },
              "ClosureRatingEnum": {
                "type": "string",
                "Description": "Enumeration that identifies the closure rating for the damper.\n"
              },
              "ControlType": {
                "type": "string",
                "Description": "The type of signal modification effected and applicable ports: \n\n\n\nCONSTANT: No inputs; SignalOffset is written to the output value.\n\nMODIFIER: Single analog input is read, added to SignalOffset, multiplied by SignalFactor, and written to the output value.\n\nABSOLUTE: Single analog input is read and absolute value is written to the output value.\n\nINVERSE: Single analog input is read, 1.0 is divided by the input value and written to the output value.\n\nHYSTERISIS: Single analog input is read, delayed according to SignalTime, and written to the output value.\n\nRUNNINGAVERAGE: Single analog input is read, averaged over SignalTime, and written to the output value.\n\nDERIVATIVE: Single analog input is read and the rate of change during the SignalTime is written to the output value.\n\nINTEGRAL: Single analog input is read and the average value during the SignalTime is written to the output value.\n\nBINARY: Single binary input is read and SignalOffset is written to the output value if True.\n\nACCUMULATOR: Single binary input is read, and for each pulse the SignalOffset is added to the accumulator, and while the accumulator is greater than the SignalFactor, the accumulator is decremented by SignalFactor and the integer result is incremented by one.\n\nPULSECONVERTER: Single integer input is read, and for each increment the SignalMultiplier is added and written to the output value.\n\nSUM: Two analog inputs are read, added, and written to the output value.\n\nSUBTRACT: Two analog inputs are read, subtracted, and written to the output value.\n\nPRODUCT: Two analog inputs are read, multiplied, and written to the output value.\n\nDIVIDE: Two analog inputs are read, divided, and written to the output value.\n\nAVERAGE: Two analog inputs are read and the average is written to the output value.\n\nMAXIMUM: Two analog inputs are read and the maximum is written to the output value.\n\nMINIMUM: Two analog inputs are read and the minimum is written to the output value..\n\nINPUT: Controller element is a dedicated input.\n\nOUTPUT: Controller element is a dedicated output.\n\nVARIABLE: Controller element is an in-memory variable.\n"
              },
              "FireResistanceRating": {
                "type": "string",
                "Description": "Measure of the fire resistance rating in hours (e.g., 1.5 hours, 2 hours, etc.).\n"
              },
              "FusibleLinkTemperature": {
                "type": "real",
                "Description": "The temperature that the fusible link melts.\n"
              }
            }
          }
        }
      },
      "IfcDamper.RELIEFDAMPER": {
        "Parent": "IfcDamper",
        "Description": "Relief damper used to allow air to move upon a buildup of a specified pressure differential.  Commonly operated by mechanical spring.\n\n\n"
      },
      "IfcDamper.FIREDAMPER": {
        "Parent": "IfcDamper",
        "Description": "Fire damper used to prevent the spread of fire for a specified duration.  Commonly operated by fusable link that melts above a certain temperature.\n\n\n",
        "Psets": {
          "Pset_DamperTypeFireDamper": {
            "Properties": {
              "ActuationType": {
                "type": "string",
                "Description": "Enumeration that identifies the different types of dampers.\n"
              },
              "ClosureRatingEnum": {
                "type": "string",
                "Description": "Enumeration that identifies the closure rating for the damper.\n"
              },
              "FireResistanceRating": {
                "type": "string",
                "Description": "Measure of the fire resistance rating in hours (e.g., 1.5 hours, 2 hours, etc.).\n"
              },
              "FusibleLinkTemperature": {
                "type": "real",
                "Description": "The temperature that the fusible link melts.\n"
              }
            }
          }
        }
      },
      "IfcDamper.SMOKEDAMPER": {
        "Parent": "IfcDamper",
        "Description": "Smoke damper used to prevent the spread of smoke.  Commonly operated by a smoke detector of a building automation system.\n\n\n",
        "Psets": {
          "Pset_DamperTypeSmokeDamper": {
            "Properties": {
              "ControlType": {
                "type": "string",
                "Description": "The type of signal modification effected and applicable ports: \n\n\n\nCONSTANT: No inputs; SignalOffset is written to the output value.\n\nMODIFIER: Single analog input is read, added to SignalOffset, multiplied by SignalFactor, and written to the output value.\n\nABSOLUTE: Single analog input is read and absolute value is written to the output value.\n\nINVERSE: Single analog input is read, 1.0 is divided by the input value and written to the output value.\n\nHYSTERISIS: Single analog input is read, delayed according to SignalTime, and written to the output value.\n\nRUNNINGAVERAGE: Single analog input is read, averaged over SignalTime, and written to the output value.\n\nDERIVATIVE: Single analog input is read and the rate of change during the SignalTime is written to the output value.\n\nINTEGRAL: Single analog input is read and the average value during the SignalTime is written to the output value.\n\nBINARY: Single binary input is read and SignalOffset is written to the output value if True.\n\nACCUMULATOR: Single binary input is read, and for each pulse the SignalOffset is added to the accumulator, and while the accumulator is greater than the SignalFactor, the accumulator is decremented by SignalFactor and the integer result is incremented by one.\n\nPULSECONVERTER: Single integer input is read, and for each increment the SignalMultiplier is added and written to the output value.\n\nSUM: Two analog inputs are read, added, and written to the output value.\n\nSUBTRACT: Two analog inputs are read, subtracted, and written to the output value.\n\nPRODUCT: Two analog inputs are read, multiplied, and written to the output value.\n\nDIVIDE: Two analog inputs are read, divided, and written to the output value.\n\nAVERAGE: Two analog inputs are read and the average is written to the output value.\n\nMAXIMUM: Two analog inputs are read and the maximum is written to the output value.\n\nMINIMUM: Two analog inputs are read and the minimum is written to the output value..\n\nINPUT: Controller element is a dedicated input.\n\nOUTPUT: Controller element is a dedicated output.\n\nVARIABLE: Controller element is an in-memory variable.\n"
              }
            }
          }
        }
      },
      "IfcDamper.BALANCINGDAMPER": {
        "Parent": "IfcDamper",
        "Description": "Backdraft damper used to restrict the movement of air in one direction.  Commonly operated by mechanical spring.\n\n\n"
      },
      "IfcDamper.GRAVITYDAMPER": {
        "Parent": "IfcDamper",
        "Description": "Gravity damper closes from the force of gravity.  Commonly operated by gravitational weight.\n\n\n"
      },
      "IfcDamper.BACKDRAFTDAMPER": {
        "Parent": "IfcDamper",
        "Description": ""
      },
      "IfcDuctFitting": {
        "Parent": "IfcFlowFitting",
        "Description": "A duct fitting is a junction or transition in a ducted flow distribution system or used to connect duct segments, resulting in changes in flow characteristics to the fluid such as direction and flow rate.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_DuctFittingOccurrence": {
            "Properties": {
              "Color": {
                "type": "string",
                "Description": "The color of the pipe segment.\n\n\n\nNote: This is typically used only for plastic pipe segments. However, it may be used for any pipe segments with a painted surface which is not otherwise specified as a covering.\n"
              },
              "HasLiner": {
                "type": "boolean",
                "Description": "TRUE if the fitting has interior duct insulating lining, FALSE if it does not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InteriorRoughnessCoefficient": {
                "type": "real",
                "Description": "The interior roughness coefficient of the pipe segment.\n"
              }
            }
          },
          "Pset_DuctFittingPHistory": {
            "Properties": {
              "AirFlowLeakage": {
                "type": "real",
                "Description": "Volumetric leakage flow rate.\n"
              },
              "AtmosphericPressure": {
                "type": "real",
                "Description": "Ambient atmospheric pressure.\n"
              },
              "LossCoefficient": {
                "type": "real",
                "Description": "Dimensionless loss coefficient used for calculating fluid resistance representing the ratio of total pressure loss to velocity pressure at a referenced cross-section.\n"
              }
            }
          },
          "Pset_DuctFittingTypeCommon": {
            "Properties": {
              "PressureClass": {
                "type": "real",
                "Description": "Pressure classification as defined by the authority having jurisdiction (e.g., SMACNA, etc.).\n"
              },
              "PressureRange": {
                "type": "real",
                "Description": "Allowable maximum and minimum working pressure (relative to ambient pressure).\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TemperatureRange": {
                "type": "real",
                "Description": "Temperature range within which the air terminal is designed to operate.\n"
              }
            }
          },
          "Qto_DuctFittingBaseQuantities": {
            "Properties": {
              "GrossCrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the cross section at the inlet, including the pipe fitting itself and the interior flow space.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetCrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the cross section at the inlet, including the pipe fitting and excluding the interior flow space.\n"
              },
              "OuterSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the extruded surfaces of the footing (not taking into account the end cap areas), normally generated as perimeter \\* length.\n"
              }
            }
          }
        }
      },
      "IfcDuctFitting.CONNECTOR": {
        "Parent": "IfcDuctFitting",
        "Description": "Connector fitting, typically used to join two ports together within a flow distribution system (e.g., a coupling used to join two duct segments).\n\n\n"
      },
      "IfcDuctFitting.TRANSITION": {
        "Parent": "IfcDuctFitting",
        "Description": "A fitting with typically two ports having different shapes or sizes. Can also be used to change the direction of flow between connected elements.\n\n\n"
      },
      "IfcDuctFitting.EXIT": {
        "Parent": "IfcDuctFitting",
        "Description": ""
      },
      "IfcDuctFitting.OBSTRUCTION": {
        "Parent": "IfcDuctFitting",
        "Description": "A fitting with typically two ports used to obstruct or restrict flow between the connected elements (e.g., screen, perforated plate, etc.).\n\n\n"
      },
      "IfcDuctFitting.JUNCTION": {
        "Parent": "IfcDuctFitting",
        "Description": "A fitting with typically more than two ports used to redistribute flow among the ports and/or to change the direction of flow between connected elements (e.g, tee, cross, wye, etc.).\n\n\n"
      },
      "IfcDuctFitting.BEND": {
        "Parent": "IfcDuctFitting",
        "Description": "A fitting with typically two ports used to change the direction of flow between connected elements.\n\n\n"
      },
      "IfcDuctFitting.ENTRY": {
        "Parent": "IfcDuctFitting",
        "Description": "Entry fitting, typically unconnected at one port and connected to a flow distribution system at the other (e.g., an outside air duct system intake opening).\n\n\n"
      },
      "IfcDuctSegment": {
        "Parent": "IfcFlowSegment",
        "Description": "A duct segment is used to typically join two sections of duct network.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_DuctSegmentOccurrence": {
            "Properties": {
              "Color": {
                "type": "string",
                "Description": "The color of the pipe segment.\n\n\n\nNote: This is typically used only for plastic pipe segments. However, it may be used for any pipe segments with a painted surface which is not otherwise specified as a covering.\n"
              },
              "HasLiner": {
                "type": "boolean",
                "Description": "TRUE if the fitting has interior duct insulating lining, FALSE if it does not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InteriorRoughnessCoefficient": {
                "type": "real",
                "Description": "The interior roughness coefficient of the pipe segment.\n"
              }
            }
          },
          "Pset_DuctSegmentPHistory": {
            "Properties": {
              "AtmosphericPressure": {
                "type": "real",
                "Description": "Ambient atmospheric pressure.\n"
              },
              "FluidFlowLeakage": {
                "type": "real",
                "Description": "Volumetric leakage flow rate.\n"
              },
              "LossCoefficient": {
                "type": "real",
                "Description": "Dimensionless loss coefficient used for calculating fluid resistance representing the ratio of total pressure loss to velocity pressure at a referenced cross-section.\n"
              }
            }
          },
          "Pset_DuctSegmentTypeCommon": {
            "Properties": {
              "LongitudinalSeam": {
                "type": "string",
                "Description": "The type of seam to be used along the longitudinal axis of the duct segment.\n"
              },
              "NominalDiameterOrWidth": {
                "type": "real",
                "Description": "The nominal diameter or width of the duct segment.\n"
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "PressureRange": {
                "type": "real",
                "Description": "Allowable maximum and minimum working pressure (relative to ambient pressure).\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Reinforcement": {
                "type": "string",
                "Description": "The type of reinforcement, if any, used for the duct segment.\n"
              },
              "ReinforcementSpacing": {
                "type": "real",
                "Description": "The spacing between reinforcing elements.\n"
              },
              "Shape": {
                "type": "string",
                "Description": "Cross sectional shape. Note that this shape is uniform throughout the length of the segment. For nonuniform shapes, a transition fitting should be used instead.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TemperatureRange": {
                "type": "real",
                "Description": "Temperature range within which the air terminal is designed to operate.\n"
              },
              "WorkingPressure": {
                "type": "real",
                "Description": "Pressure classification as defined by the authority having jurisdiction (e.g., SMACNA, etc.).\n"
              }
            }
          },
          "Qto_DuctSegmentBaseQuantities": {
            "Properties": {
              "GrossCrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the cross section at the inlet, including the pipe fitting itself and the interior flow space.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetCrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the cross section at the inlet, including the pipe fitting and excluding the interior flow space.\n"
              },
              "OuterSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the extruded surfaces of the footing (not taking into account the end cap areas), normally generated as perimeter \\* length.\n"
              }
            }
          }
        }
      },
      "IfcDuctSegment.FLEXIBLESEGMENT": {
        "Parent": "IfcDuctSegment",
        "Description": "A flexible segment is a continuous non-linear segment of duct that can be deformed and change the direction of flow.\n\n\n"
      },
      "IfcDuctSegment.RIGIDSEGMENT": {
        "Parent": "IfcDuctSegment",
        "Description": "A rigid segment is a continuous linear segment of duct that cannot be deformed.\n\n\n"
      },
      "IfcDuctSilencer": {
        "Parent": "IfcFlowTreatmentDevice",
        "Description": "A duct silencer is a device that is typically installed inside a duct distribution system for the purpose of reducing the noise levels from air movement, fan noise, etc. in the adjacent space or downstream of the duct silencer device.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_DuctSilencerPHistory": {
            "Properties": {
              "AirFlowRate": {
                "type": "real",
                "Description": "The actual airflow rate as designed.\n"
              },
              "AirPressureDropCurve": {
                "type": "real",
                "Description": "Air pressure drop curve, pressure drop \u2013 flow rate curve, AirPressureDrop = f (AirflowRate).\n"
              }
            }
          },
          "Pset_DuctSilencerTypeCommon": {
            "Properties": {
              "AirFlowrateRange": {
                "type": "real",
                "Description": ""
              },
              "HasExteriorInsulation": {
                "type": "boolean",
                "Description": "TRUE if the silencer has exterior insulation. FALSE if it does not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HydraulicDiameter": {
                "type": "real",
                "Description": "Hydraulic diameter.\n"
              },
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TemperatureRange": {
                "type": "real",
                "Description": "Temperature range within which the air terminal is designed to operate.\n"
              },
              "Weight": {
                "type": "real",
                "Description": "The weight of the humidifier.\n"
              },
              "WorkingPressureRange": {
                "type": "real",
                "Description": "Allowable minimum and maximum  working pressure (relative to ambient pressure).\n"
              }
            }
          },
          "Qto_DuctSilencerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcDuctSilencer.ROUND": {
        "Parent": "IfcDuctSilencer",
        "Description": "Round duct silencer type.\n\n\n"
      },
      "IfcDuctSilencer.RECTANGULAR": {
        "Parent": "IfcDuctSilencer",
        "Description": "Rectangular shaped duct silencer type.\n\n\n"
      },
      "IfcDuctSilencer.FLATOVAL": {
        "Parent": "IfcDuctSilencer",
        "Description": "Flat-oval shaped duct silencer type.\n\n\n"
      },
      "IfcEngine": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An engine is a device that converts fuel into mechanical energy through combustion.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_EngineTypeCommon": {
            "Properties": {
              "EnergySource": {
                "type": "string",
                "Description": "Enumeration defining the energy source or fuel combusted to generate heat if applicable.  Note: hydronic heaters shall use UNSET; dual-use hydronic/electric heaters shall use ELECTRICITY.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          }
        }
      },
      "IfcEngine.EXTERNALCOMBUSTION": {
        "Parent": "IfcEngine",
        "Description": "Combustion is external.\n\n\n"
      },
      "IfcEngine.INTERNALCOMBUSTION": {
        "Parent": "IfcEngine",
        "Description": ""
      },
      "IfcEvaporativeCooler": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An evaporative cooler is a device that cools air by saturating it with water vapor.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_EvaporativeCoolerPHistory": {
            "Properties": {
              "Effectiveness": {
                "type": "real",
                "Description": "Ratio of the change in dry bulb temperature of the (primary) air stream to the difference between the entering dry bulb temperature of the (primary) air and the wet-bulb temperature of the (secondary) air.\n"
              },
              "LatentHeatTransferRate": {
                "type": "real",
                "Description": "Latent heat transfer rate to primary air flow.\n"
              },
              "SensibleHeatTransferRate": {
                "type": "real",
                "Description": "Sensible heat transfer rate to primary air flow.\n"
              },
              "TotalHeatTransferRate": {
                "type": "real",
                "Description": "Total heat transfer rate to primary air flow.\n"
              },
              "WaterSumpTemperature": {
                "type": "real",
                "Description": "Water sump temperature.\n"
              }
            }
          },
          "Pset_EvaporativeCoolerTypeCommon": {
            "Properties": {
              "AirPressureDropCurve": {
                "type": "real",
                "Description": "Air pressure drop curve, pressure drop \u2013 flow rate curve, AirPressureDrop = f (AirflowRate).\n"
              },
              "EffectivenessTable": {
                "type": "real",
                "Description": "Total heat transfer effectiveness curve as a function of the primary air flow rate.\n"
              },
              "FlowArrangement": {
                "type": "string",
                "Description": "CounterFlow: Air and water flow enter in different directions.\n\n\n\nCrossFlow: Air and water flow are perpendicular.\n\nParallelFlow: Air and water flow enter in same directions.\n"
              },
              "HeatExchangeArea": {
                "type": "real",
                "Description": "Heat exchange area.\n"
              },
              "OperationTemperatureRange": {
                "type": "real",
                "Description": "Allowable operational range of the ambient air temperature.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "WaterPressDropCurve": {
                "type": "real",
                "Description": "Water pressure drop as function of water flow rate.\n"
              },
              "WaterRequirement": {
                "type": "real",
                "Description": "Make-up water requirements.\n"
              }
            }
          },
          "Qto_EvaporativeCoolerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcEvaporativeCooler.DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER": {
        "Parent": "IfcEvaporativeCooler",
        "Description": ""
      },
      "IfcEvaporativeCooler.INDIRECTEVAPORATIVEWETCOIL": {
        "Parent": "IfcEvaporativeCooler",
        "Description": "Indirect evaporative wet coil: Cools the air stream by evaporating water indirectly and without adding moisture into the air stream. Water is sprayed directly on the tubes of the heat exchanger where latent cooling takes place and the vaporization of the water on the outside of the heat exchanger tubes allows the simultaneous heat and mass transfer which removes heat from the supply air on the tube side.\n\n\n"
      },
      "IfcEvaporativeCooler.DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER": {
        "Parent": "IfcEvaporativeCooler",
        "Description": "Direct evaporative packaged rotary air cooler: Cools the air stream by evaporating water dircectly into the air stream using coolers that wet and wash the evaporative pad by rotating it through a water bath.\n\n\n"
      },
      "IfcEvaporativeCooler.INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER": {
        "Parent": "IfcEvaporativeCooler",
        "Description": "Indirect evaporative cooling tower or coil cooler: Cools the air stream by evaporating water indirectly and without adding moisture into the air stream using a combination of a cooling tower or other evaporative water cooler with a water-to-air heat exchanger coil and water circulating pump.\n\n\n"
      },
      "IfcEvaporativeCooler.INDIRECTDIRECTCOMBINATION": {
        "Parent": "IfcEvaporativeCooler",
        "Description": "Indirect/Direct combination: Cools the air stream by evaporating water indirectly and without adding moisture into the air stream using a two-stage cooler with a first-stage indirect evaporative cooler and second-stage direct evaporative cooler.\n\n\n"
      },
      "IfcEvaporativeCooler.DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER": {
        "Parent": "IfcEvaporativeCooler",
        "Description": "Direct evaporative random media air cooler: Cools the air stream by evaporating water dircectly into the air stream using coolers with evaporative pads, usually of aspen wood or plastic fiber/foam.\n\n\n"
      },
      "IfcEvaporativeCooler.DIRECTEVAPORATIVEAIRWASHER": {
        "Parent": "IfcEvaporativeCooler",
        "Description": "Direct evaporative air washer: Cools the air stream by evaporating water dircectly into the air stream using coolers with spray-type air washer consist of a chamber or casing containing spray nozzles, and tank for collecting spray water, and an eliminator section for removing entrained drops of water from the air.\n\n\n"
      },
      "IfcEvaporativeCooler.DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER": {
        "Parent": "IfcEvaporativeCooler",
        "Description": "Direct evaporative slingers packaged air cooler: Cools the air stream by evaporating water dircectly into the air stream using coolers with a water slinger in an evaporative cooling section and a fan section.\n\n\n"
      },
      "IfcEvaporativeCooler.INDIRECTEVAPORATIVEPACKAGEAIRCOOLER": {
        "Parent": "IfcEvaporativeCooler",
        "Description": "Indirect evaporative package air cooler: Cools the air stream by evaporating water indirectly and without adding moisture into the air stream. On one side of the heat exchanger, the secondary air stream is cooled by evaporation, while on the other side of heat exchanger, the primary air stream (conditioned air to be supplied to the room) is sensibly cooled by the heat exchanger surfaces.\n\n\n"
      },
      "IfcEvaporator": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "An evaporator is a device in which a liquid refrigerent is vaporized and absorbs heat from the surrounding fluid.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_EvaporatorPHistory": {
            "Properties": {
              "CompressorEvaporatorHeatGain": {
                "type": "real",
                "Description": "Heat gain between the evaporator outlet and the compressor inlet.\n"
              },
              "CompressorEvaporatorPressureDrop": {
                "type": "real",
                "Description": "Pressure drop between the evaporator outlet and the compressor inlet.\n"
              },
              "EvaporatingTemperature": {
                "type": "real",
                "Description": "Refrigerant evaporating temperature.\n"
              },
              "EvaporatorMeanVoidFraction": {
                "type": "real",
                "Description": "Mean void fraction in evaporator.\n"
              },
              "ExteriorHeatTransferCoefficient": {
                "type": "real",
                "Description": "Exterior heat transfer coefficient associated with exterior surface area.\n"
              },
              "HeatRejectionRate": {
                "type": "real",
                "Description": "Sum of the refrigeration effect and the heat equivalent of the power input to the compressor.\n"
              },
              "InteriorHeatTransferCoefficient": {
                "type": "real",
                "Description": "Interior heat transfer coefficient associated with interior surface area.\n"
              },
              "LogarithmicMeanTemperatureDifference": {
                "type": "real",
                "Description": "Logarithmic mean temperature difference between refrigerant and water or air.\n"
              },
              "RefrigerantFoulingResistance": {
                "type": "real",
                "Description": "Fouling resistance on the refrigerant side.\n"
              },
              "WaterFoulingResistance": {
                "type": "real",
                "Description": "Fouling resistance on water/air side.\n"
              }
            }
          },
          "Pset_EvaporatorTypeCommon": {
            "Properties": {
              "EvaporatorCoolant": {
                "type": "PEnum_EvaporatorCoolant",
                "Description": "The fluid used for the coolant in the evaporator.\n",
                "values": [
                  "BRINE",
                  "GLYCOL",
                  "WATER"
                ]
              },
              "EvaporatorMediumType": {
                "type": "PEnum_EvaporatorMediumType",
                "Description": "ColdLiquid: Evaporator is using liquid type of fluid to exchange heat with refrigerant.\n\nColdAir: Evaporator is using air to exchange heat with refrigerant.\n",
                "values": [
                  "COLDAIR",
                  "COLDLIQUID"
                ]
              },
              "ExternalSurfaceArea": {
                "type": "real",
                "Description": "External surface area (both primary and secondary area).\n"
              },
              "InternalRefrigerantVolume": {
                "type": "real",
                "Description": "Internal volume of evaporator (refrigerant side).\n"
              },
              "InternalSurfaceArea": {
                "type": "real",
                "Description": "Internal surface area.\n"
              },
              "InternalWaterVolume": {
                "type": "real",
                "Description": "Internal volume of evaporator (water side).\n"
              },
              "NominalHeatTransferArea": {
                "type": "real",
                "Description": "Nominal heat transfer surface area associated with nominal overall heat transfer coefficient.\n"
              },
              "NominalHeatTransferCoefficient": {
                "type": "real",
                "Description": "Nominal overall heat transfer coefficient associated with nominal heat transfer area.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "RefrigerantClass": {
                "type": "string",
                "Description": "Refrigerant class used by the compressor.\n\n\n\nCFC: Chlorofluorocarbons.\n\nHCFC: Hydrochlorofluorocarbons.\n\nHFC: Hydrofluorocarbons.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_EvaporatorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcEvaporator.SHELLANDCOIL": {
        "Parent": "IfcEvaporator",
        "Description": "Evaporator in which refrigerant evaporates inside a simple coiled tube immersed in the fluid to be cooled.\n\n\n"
      },
      "IfcEvaporator.FLOODEDSHELLANDTUBE": {
        "Parent": "IfcEvaporator",
        "Description": ""
      },
      "IfcEvaporator.DIRECTEXPANSION": {
        "Parent": "IfcEvaporator",
        "Description": "Direct-expansion evaporator.\n\n\n"
      },
      "IfcEvaporator.DIRECTEXPANSIONBRAZEDPLATE": {
        "Parent": "IfcEvaporator",
        "Description": "Direct-expansion evaporator where a refrigerant evaporates inside plates brazed or welded together to make up an assembly of separate channels.\n\n\n"
      },
      "IfcEvaporator.DIRECTEXPANSIONSHELLANDTUBE": {
        "Parent": "IfcEvaporator",
        "Description": "Direct-expansion evaporator where a refrigerant evaporates inside a series of baffles that channel the fluid throughout the shell side.\n\n\n"
      },
      "IfcEvaporator.DIRECTEXPANSIONTUBEINTUBE": {
        "Parent": "IfcEvaporator",
        "Description": "Direct-expansion evaporator where a refrigerant evaporates inside one or more pairs of coaxial tubes.\n\n\n"
      },
      "IfcFan": {
        "Parent": "IfcFlowMovingDevice",
        "Description": "A fan is a device which imparts mechanical work on a gas. A typical usage of a fan is to induce airflow in a building services air distribution system.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_FanOccurrence": {
            "Properties": {
              "ApplicationOfFan": {
                "type": "string",
                "Description": "The functional application of the fan.\n\n\n\nSupplyAir: Supply air fan. \n\nReturnAir: Return air fan. \n\nExhaustAir: Exhaust air fan. \n\nOther: Other type of application not defined above.\n"
              },
              "CoilPosition": {
                "type": "string",
                "Description": "Defines the relationship between a fan and a coil.\n\n\n\nDrawThrough: Fan located downstream of the coil.\n\nBlowThrough: Fan located upstream of the coil.\n"
              },
              "DischargeType": {
                "type": "string",
                "Description": "Defines the type of connection at the fan discharge.\n\n\n\nDuct: Discharge into ductwork.\n\nScreen: Discharge into screen outlet.\n\nLouver: Discharge into a louver.\n\nDamper: Discharge into a damper.\n"
              },
              "FanMountingType": {
                "type": "PEnum_FanMountingType",
                "Description": "Defines the method of mounting the fan in the building.\n",
                "values": [
                  "CONCRETEPAD",
                  "DUCTMOUNTED",
                  "FIELDERECTEDCURB",
                  "MANUFACTUREDCURB",
                  "SUSPENDED",
                  "WALLMOUNTED"
                ]
              },
              "FractionOfMotorHeatToAirStream": {
                "type": "real",
                "Description": "Fraction of the motor heat released into the fluid flow.\n"
              },
              "ImpellerDiameter": {
                "type": "real",
                "Description": "Diameter of compressor impeller - used to scale performance of geometrically similar compressors.\n"
              },
              "MotorPosition": {
                "type": "string",
                "Description": "Defines the location of the motor relative to the air stream.\n\n\n\nInAirStream: Fan motor is in the air stream.\n\nOutOfAirStream: Fan motor is out of the air stream.\n"
              }
            }
          },
          "Pset_FanPHistory": {
            "Properties": {
              "DischargePressureLoss": {
                "type": "real",
                "Description": "Fan discharge pressure loss associated with the discharge arrangement.\n"
              },
              "DischargeVelocity": {
                "type": "real",
                "Description": "The speed at which air discharges from the fan through the fan housing discharge opening.\n"
              },
              "DrivePowerLoss": {
                "type": "real",
                "Description": "Fan drive power losses associated with the type of connection between the motor and the fan wheel.\n"
              },
              "FanEfficiency": {
                "type": "real",
                "Description": "Fan mechanical efficiency.\n"
              },
              "FanPowerRate": {
                "type": "real",
                "Description": "Fan power consumption.\n"
              },
              "FanRotationSpeed": {
                "type": "real",
                "Description": "Fan rotation speed.\n"
              },
              "OverallEfficiency": {
                "type": "real",
                "Description": "The pump and motor overall operational efficiency.\n"
              },
              "ShaftPowerRate": {
                "type": "real",
                "Description": "Fan shaft power.\n"
              },
              "WheelTipSpeed": {
                "type": "real",
                "Description": "Fan blade tip speed, typically defined as the linear speed of the tip of the fan blade furthest from the shaft.\n"
              }
            }
          },
          "Pset_FanTypeCommon": {
            "Properties": {
              "CapacityControlType": {
                "type": "string",
                "Description": "InletVane: Control by adjusting inlet vane.\n\nVariableSpeedDrive: Control by variable speed drive. \n\nBladePitchAngle: Control by adjusting blade pitch angle.\n\nTwoSpeed: Control by switch between high and low speed.\n\nDischargeDamper: Control by modulating discharge damper.\n"
              },
              "EfficiencyCurve": {
                "type": "real",
                "Description": "Fan efficiency =f (flow rate).\n"
              },
              "MotorDriveType": {
                "type": "string",
                "Description": "Motor drive type:\n\nDIRECTDRIVE: Direct drive. \n\nBELTDRIVE: Belt drive. \n\nCOUPLING: Coupling. \n\nOTHER: Other type of motor drive. \n\nUNKNOWN: Unknown motor drive type.\n"
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal rate of air flow into which water vapor is added.\n"
              },
              "NominalPowerRate": {
                "type": "real",
                "Description": "Nominal fan power rate.\n"
              },
              "NominalRotationSpeed": {
                "type": "real",
                "Description": "Pump rotational speed under nominal conditions.\n"
              },
              "NominalStaticPressure": {
                "type": "real",
                "Description": "The static pressure within the air stream that the fan must overcome to insure designed circulation of air.\n"
              },
              "NominalTotalPressure": {
                "type": "real",
                "Description": "Nominal total pressure rise across the fan.\n"
              },
              "OperationalCriteria": {
                "type": "real",
                "Description": "Time of operation at maximum operational ambient air temperature.\n"
              },
              "OperationTemperatureRange": {
                "type": "real",
                "Description": "Allowable operational range of the ambient air temperature.\n"
              },
              "PressureCurve": {
                "type": "real",
                "Description": "Pressure rise = f (flow rate).\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_FanBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcFan.TUBEAXIAL": {
        "Parent": "IfcFan",
        "Description": "Air flows through the impeller axially with guide vanes and reduced running blade tip clearance.\n\n\n"
      },
      "IfcFan.CENTRIFUGALAIRFOIL": {
        "Parent": "IfcFan",
        "Description": "Air flows through the impeller radially using blades that are airfoil shaped.\n\n\n"
      },
      "IfcFan.CENTRIFUGALFORWARDCURVED": {
        "Parent": "IfcFan",
        "Description": ""
      },
      "IfcFan.VANEAXIAL": {
        "Parent": "IfcFan",
        "Description": ""
      },
      "IfcFan.CENTRIFUGALRADIAL": {
        "Parent": "IfcFan",
        "Description": "Air flows through the impeller radially using blades that are uncurved or slightly forward curved.\n\n\n"
      },
      "IfcFan.CENTRIFUGALBACKWARDINCLINEDCURVED": {
        "Parent": "IfcFan",
        "Description": "Air flows through the impeller radially using blades that are backward curved.\n\n\n"
      },
      "IfcFan.PROPELLORAXIAL": {
        "Parent": "IfcFan",
        "Description": "Air flows through the impeller axially and small hub-to-tip ratio impeller mounted in an orifice plate or inlet ring.\n\n\n"
      },
      "IfcFilter": {
        "Parent": "IfcFlowTreatmentDevice",
        "Description": "A filter is an apparatus used to remove particulate or gaseous matter from fluids and gases.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_FilterPHistory": {
            "Properties": {
              "CountedEfficiency": {
                "type": "real",
                "Description": "Filter efficiency based the particle counts concentration before and after filter against particles with certain size distribution.\n"
              },
              "ParticleMassHolding": {
                "type": "real",
                "Description": "Mass of particle holding in the filter.\n"
              },
              "WeightedEfficiency": {
                "type": "real",
                "Description": "Filter efficiency based the particle weight concentration before and after filter against particles with certain size distribution.\n"
              }
            }
          },
          "Pset_FilterTypeCommon": {
            "Properties": {
              "FinalResistance": {
                "type": "real",
                "Description": "Filter fluid resistance when replacement is required (i.e., Pressure drop at the maximum air flowrate across the filter when the filter needs replacement per ASHRAE Standard 52.1).\n"
              },
              "FlowRateRange": {
                "type": "real",
                "Description": "Allowable range of volume of fluid being pumped against the resistance specified.\n"
              },
              "InitialResistance": {
                "type": "real",
                "Description": "Initial new filter fluid resistance (i.e., pressure drop at the maximum air flowrate across the filter when the filter is new per ASHRAE Standard 52.1).\n"
              },
              "NominalFilterFaceVelocity": {
                "type": "real",
                "Description": "Filter face velocity.\n"
              },
              "NominalFlowrate": {
                "type": "real",
                "Description": "Nominal fluid flow rate through the filter.\n"
              },
              "NominalMediaSurfaceVelocity": {
                "type": "real",
                "Description": "Average fluid velocity at the media surface.\n"
              },
              "NominalParticleGeometricMeanDiameter": {
                "type": "real",
                "Description": "Particle geometric mean diameter associated with nominal efficiency.\n"
              },
              "NominalParticleGeometricStandardDeviation": {
                "type": "real",
                "Description": "Particle geometric standard deviation associated with nominal efficiency.\n"
              },
              "NominalPressureDrop": {
                "type": "real",
                "Description": "Total pressure drop across the filter.\n"
              },
              "OperationTemperatureRange": {
                "type": "real",
                "Description": "Allowable operational range of the ambient air temperature.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "Weight": {
                "type": "real",
                "Description": "The weight of the humidifier.\n"
              }
            }
          },
          "Qto_FilterBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcFilter.ODORFILTER": {
        "Parent": "IfcFilter",
        "Description": "A filter used to remove odors from air.\n\n\n"
      },
      "IfcFilter.WATERFILTER": {
        "Parent": "IfcFilter",
        "Description": "A filter used to remove particulates from water.\n\n\n",
        "Psets": {
          "Pset_FilterTypeWaterFilter": {
            "Properties": {
              "WaterFilterType": {
                "type": "string",
                "Description": "Further qualifies the type of water filter.  Filtration removes undissolved matter; Purification removes dissolved matter; Softening replaces dissolved matter.\n"
              }
            }
          }
        }
      },
      "IfcFilter.OILFILTER": {
        "Parent": "IfcFilter",
        "Description": "A filter used to remove particulates from oil.\n\n\n"
      },
      "IfcFilter.AIRPARTICLEFILTER": {
        "Parent": "IfcFilter",
        "Description": "A filter used to remove particulates from air.\n\n\n",
        "Psets": {
          "Pset_FilterTypeAirParticleFilter": {
            "Properties": {
              "AirParticleFilterType": {
                "type": "string",
                "Description": "A panel dry type extended surface filter is a dry-type air filter with random fiber mats or blankets in the forms of pockets, V-shaped or radial pleats, and include the following:\n\n\n\nCoarseFilter: Filter with a efficiency lower than 30% for atmosphere dust-spot.\n\nCoarseMetalScreen: Filter made of metal screen.\n\nCoarseCellFoams: Filter made of cell foams.\n\nCoarseSpunGlass: Filter made of spun glass.\n\nMediumFilter: Filter with an efficiency between 30-98% for atmosphere dust-spot.\n\nMediumElectretFilter: Filter with fine electret synthetic fibers.\n\nMediumNaturalFiberFilter: Filter with natural fibers.\n\nHEPAFilter: High efficiency particulate air filter.\n\nULPAFilter: Ultra low penetration air filter.\n\nMembraneFilters: Filter made of membrane for certain pore diameters in flat sheet and pleated form.\n\nA renewable media with a moving curtain viscous filter are random-fiber media coated with viscous substance in roll form or curtain where fresh media is fed across the face of the filter and the dirty media is rewound onto a roll at the bottom or to into a reservoir:\n\nRollForm: Viscous filter used in roll form.\n\nAdhesiveReservoir: Viscous filter used in moving curtain form.\n\nA renewable moving curtain dry media filter is a random-fiber dry media of relatively high porosity used in moving-curtain(roll) filters.\n\nAn electrical filter uses electrostatic precipitation to remove and collect particulate contaminants.\n"
              },
              "CountedEfficiencyCurve": {
                "type": "real",
                "Description": "Counted efficiency curve as a function of dust holding weight, efficiency = f (dust holding weight).\n"
              },
              "DustHoldingCapacity": {
                "type": "real",
                "Description": "Maximum filter dust holding capacity.\n"
              },
              "FaceSurfaceArea": {
                "type": "real",
                "Description": "Face area of filter frame.\n"
              },
              "MediaExtendedArea": {
                "type": "real",
                "Description": "Total extended media area.\n"
              },
              "NominalCountedEfficiency": {
                "type": "real",
                "Description": "Nominal filter efficiency based the particle count concentration before and after the filter against particles with a certain size distribution.\n"
              },
              "NominalWeightedEfficiency": {
                "type": "real",
                "Description": "Nominal filter efficiency based the particle weight concentration before and after the filter against particles with a certain size distribution.\n"
              },
              "PressureDropCurve": {
                "type": "real",
                "Description": "Under certain dust holding weight, DelPressure = f (fluidflowRate)\n"
              },
              "SeparationType": {
                "type": "string",
                "Description": "Air particulate filter media separation type.\n"
              },
              "WeightedEfficiencyCurve": {
                "type": "real",
                "Description": "Weighted efficiency curve as a function of dust holding weight, efficiency = f (dust holding weight).\n"
              }
            }
          }
        }
      },
      "IfcFilter.STRAINER": {
        "Parent": "IfcFilter",
        "Description": "A filter used to remove particulates from a fluid.\n\n\n"
      },
      "IfcFilter.COMPRESSEDAIRFILTER": {
        "Parent": "IfcFilter",
        "Description": "",
        "Psets": {
          "Pset_FilterTypeCompressedAirFilter": {
            "Properties": {
              "AutomaticCondensateDischarge": {
                "type": "boolean",
                "Description": "Whether or not the condensing water or oil is discharged automatically from the filter.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "CloggingIndicator": {
                "type": "boolean",
                "Description": "Whether the filter has an indicator to display the degree of clogging of the filter.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "CompressedAirFilterType": {
                "type": "PEnum_CompressedAirFilterType",
                "Description": "ACTIVATEDCARBON: absorbs oil vapor and odor; PARTICLE_FILTER: used to absorb solid particles of medium size; COALESCENSE_FILTER: used to absorb fine solid, oil, and water particles, also called micro filter\n",
                "values": [
                  "ACTIVATEDCARBON",
                  "COALESCENSE_FILTER",
                  "PARTICLE_FILTER"
                ]
              },
              "OperationPressureMax": {
                "type": "real",
                "Description": "Maximum pressure under normal operating conditions.\n"
              },
              "ParticleAbsorptionCurve": {
                "type": "real",
                "Description": "Ratio of particles that are removed by the filter.  Each entry describes the ratio of particles absorbed greater than equal to the specified size and less than the next specified size.  For example,  given for 3 significant particle sizes >= 0,1 micro m, >= 1 micro m, >= 5 micro m\n"
              }
            }
          }
        }
      },
      "IfcFlowMeter": {
        "Parent": "IfcFlowController",
        "Description": "A flow meter is a device that is used to measure the flow rate in a system.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_FlowMeterOccurrence": {
            "Properties": {
              "Purpose": {
                "type": "string",
                "Description": "Purpose for which the borehole, section or volumetric model was created. (EU Inspire, boreholeML)\n"
              }
            }
          },
          "Pset_FlowMeterTypeCommon": {
            "Properties": {
              "ReadOutType": {
                "type": "string",
                "Description": "Indication of the form that readout from the meter takes. In the case of a dial read out, this may comprise multiple dials that give a cumulative reading and/or a mechanical odometer.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "RemoteReading": {
                "type": "boolean",
                "Description": "Indicates whether the meter has a connection for remote reading through connection of a communication device (set TRUE) or not (set FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_FlowMeterBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcFlowMeter.GASMETER": {
        "Parent": "IfcFlowMeter",
        "Description": "A device that measures the quantity of a gas or fuel.\n\n\n",
        "Psets": {
          "Pset_FlowMeterTypeGasMeter": {
            "Properties": {
              "ConnectionSize": {
                "type": "real",
                "Description": "Defines the size of inlet and outlet pipe connections to the meter.\n"
              },
              "GasType": {
                "type": "PEnum_GasType",
                "Description": "Defines the types of gas that may be specified.\n",
                "values": [
                  "COMMERCIALBUTANE",
                  "COMMERCIALPROPANE",
                  "LIQUEFIEDPETROLEUMGAS",
                  "NATURALGAS"
                ]
              },
              "MaximumFlowRate": {
                "type": "real",
                "Description": "Maximum rate of flow which the meter is expected to pass.\n"
              },
              "MaximumPressureLoss": {
                "type": "real",
                "Description": "Pressure loss expected across the meter under conditions of maximum flow.\n"
              }
            }
          }
        }
      },
      "IfcFlowMeter.OILMETER": {
        "Parent": "IfcFlowMeter",
        "Description": "A device that measures the quantity of oil.\n\n\n",
        "Psets": {
          "Pset_FlowMeterTypeOilMeter": {
            "Properties": {
              "ConnectionSize": {
                "type": "real",
                "Description": "Defines the size of inlet and outlet pipe connections to the meter.\n"
              },
              "MaximumFlowRate": {
                "type": "real",
                "Description": "Maximum rate of flow which the meter is expected to pass.\n"
              }
            }
          }
        }
      },
      "IfcFlowMeter.ENERGYMETER": {
        "Parent": "IfcFlowMeter",
        "Description": "",
        "Psets": {
          "Pset_FlowMeterTypeEnergyMeter": {
            "Properties": {
              "MaximumCurrent": {
                "type": "real",
                "Description": "The maximum allowed current that a device is certified to handle.\n"
              },
              "MultipleTarriff": {
                "type": "boolean",
                "Description": "Indicates whether meter has built-in support for multiple tarriffs (variable energy cost rates).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalCurrent": {
                "type": "real",
                "Description": "A set of nominal currents in [A] for which the data of this instance is valid. At least one value shall be provided. Any value in the set shall not exceed the value of the \n\nUltimateRatedCurrent associated with the same breaker unit.\n"
              }
            }
          }
        }
      },
      "IfcFlowMeter.WATERMETER": {
        "Parent": "IfcFlowMeter",
        "Description": "",
        "Psets": {
          "Pset_FlowMeterTypeWaterMeter": {
            "Properties": {
              "BackflowPreventerType": {
                "type": "PEnum_BackflowPreventerType",
                "Description": "Identifies the type of backflow preventer installed to prevent the backflow of contaminated or polluted water from an irrigation/reticulation system to a potable water supply.\n",
                "values": [
                  "ANTISIPHONVALVE",
                  "ATMOSPHERICVACUUMBREAKER",
                  "DOUBLECHECKBACKFLOWPREVENTER",
                  "PRESSUREVACUUMBREAKER",
                  "REDUCEDPRESSUREBACKFLOWPREVENTER"
                ]
              },
              "ConnectionSize": {
                "type": "real",
                "Description": "Defines the size of inlet and outlet pipe connections to the meter.\n"
              },
              "MaximumFlowRate": {
                "type": "real",
                "Description": "Maximum rate of flow which the meter is expected to pass.\n"
              },
              "MaximumPressureLoss": {
                "type": "real",
                "Description": "Pressure loss expected across the meter under conditions of maximum flow.\n"
              },
              "Type": {
                "type": "string",
                "Description": "A symbol designator with content according to local standards, e.g.  'BycycleCrossing', 'RoadStuds', 'SpeedBump', 'TransverseBar', 'BusStop', 'Chevron', 'Hatched', 'KeepClear', 'BoxJunction', 'EmergencyExit', 'Intersection', 'Junction'\n"
              }
            }
          }
        }
      },
      "IfcHeatExchanger": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A heat exchanger is a device used to provide heat transfer between non-mixing media such as plate and shell and tube heat exchangers.\n\n\n\n_IfcHeatExchanger_ is commonly used on water-side distribution systems to recover energy from a liquid to another liquid (typically water-based), whereas _IfcAirToAirHeatRecovery_ is commonly used on air-side distribution systems to recover energy from a gas to a gas (usually air).\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_HeatExchangerTypeCommon": {
            "Properties": {
              "Arrangement": {
                "type": "string",
                "Description": "Defines the fan and motor drive arrangement as defined by AMCA.\n\n\n\nARRANGEMENT1: Arrangement 1. \n\nARRANGEMENT2: Arrangement 2. \n\nARRANGEMENT3: Arrangement 3. \n\nARRANGEMENT4: Arrangement 4. \n\nARRANGEMENT7: Arrangement 7. \n\nARRANGEMENT8: Arrangement 8. \n\nARRANGEMENT9: Arrangement 9. \n\nARRANGEMENT10: Arrangement 10. \n\nOTHER: Other type of fan drive arrangement.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_HeatExchangerBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcHeatExchanger.TURNOUTHEATING": {
        "Parent": "IfcHeatExchanger",
        "Description": "A device used to remove snow from railways. E.g. electric heating device, gas heater\n\n\n"
      },
      "IfcHeatExchanger.PLATE": {
        "Parent": "IfcHeatExchanger",
        "Description": "Plate heat exchanger.\n\n\n",
        "Psets": {
          "Pset_HeatExchangerTypePlate": {
            "Properties": {
              "NumberOfPlates": {
                "type": "integer",
                "Description": "Number of plates used by the plate heat exchanger.\n"
              }
            }
          }
        }
      },
      "IfcHeatExchanger.SHELLANDTUBE": {
        "Parent": "IfcHeatExchanger",
        "Description": "Shell and Tube heat exchanger.\n\n\n"
      },
      "IfcHumidifier": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A humidifier is a device that adds moisture into the air.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_HumidifierPHistory": {
            "Properties": {
              "AtmosphericPressure": {
                "type": "real",
                "Description": "Ambient atmospheric pressure.\n"
              },
              "SaturationEfficiency": {
                "type": "real",
                "Description": "Saturation efficiency: Ratio of leaving air absolute humidity to the maximum absolute humidity.\n"
              }
            }
          },
          "Pset_HumidifierTypeCommon": {
            "Properties": {
              "AirPressureDropCurve": {
                "type": "real",
                "Description": "Air pressure drop curve, pressure drop \u2013 flow rate curve, AirPressureDrop = f (AirflowRate).\n"
              },
              "Application": {
                "type": "string",
                "Description": "Humidifier application.\n\n\n\nFixed: Humidifier installed in a ducted flow distribution system.\n\nPortable: Humidifier is not installed in a ducted flow distribution system.\n"
              },
              "InternalControl": {
                "type": "string",
                "Description": "Internal modulation control.\n"
              },
              "NominalAirFlowRate": {
                "type": "real",
                "Description": "Nominal rate of air flow into which water vapor is added.\n"
              },
              "NominalMoistureGain": {
                "type": "real",
                "Description": "Nominal rate of water vapor added into the airstream.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SaturationEfficiencyCurve": {
                "type": "real",
                "Description": "Saturation efficiency as a function of the air flow rate.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "WaterRequirement": {
                "type": "real",
                "Description": "Make-up water requirements.\n"
              },
              "Weight": {
                "type": "real",
                "Description": "The weight of the humidifier.\n"
              }
            }
          },
          "Qto_HumidifierBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcHumidifier.ASSISTEDSTEAM": {
        "Parent": "IfcHumidifier",
        "Description": ""
      },
      "IfcHumidifier.ASSISTEDELECTRIC": {
        "Parent": "IfcHumidifier",
        "Description": "Water vapor is added into the airstream through water heated evaporation using an electric heater.\n\n\n"
      },
      "IfcHumidifier.ASSISTEDNATURALGAS": {
        "Parent": "IfcHumidifier",
        "Description": "Water vapor is added into the airstream through water heated evaporation using a natural gas heater.\n\n\n"
      },
      "IfcHumidifier.ADIABATICATOMIZING": {
        "Parent": "IfcHumidifier",
        "Description": "Water vapor is added into the airstream through adiabatic evaporation using an atomizing element.\n\n\n"
      },
      "IfcHumidifier.ADIABATICWETTEDELEMENT": {
        "Parent": "IfcHumidifier",
        "Description": "Water vapor is added into the airstream through adiabatic evaporation using a wetted element.\n\n\n"
      },
      "IfcHumidifier.ADIABATICULTRASONIC": {
        "Parent": "IfcHumidifier",
        "Description": ""
      },
      "IfcHumidifier.ASSISTEDPROPANE": {
        "Parent": "IfcHumidifier",
        "Description": "Water vapor is added into the airstream through water heated evaporation using a propane heater.\n\n\n"
      },
      "IfcHumidifier.ADIABATICCOMPRESSEDAIRNOZZLE": {
        "Parent": "IfcHumidifier",
        "Description": "Water vapor is added into the airstream through adiabatic evaporation using a compressed air nozzle.\n\n\n"
      },
      "IfcHumidifier.ADIABATICPAN": {
        "Parent": "IfcHumidifier",
        "Description": "Water vapor is added into the airstream through adiabatic evaporation using a pan.\n\n\n"
      },
      "IfcHumidifier.ASSISTEDBUTANE": {
        "Parent": "IfcHumidifier",
        "Description": "Water vapor is added into the airstream through water heated evaporation using a butane heater.\n\n\n"
      },
      "IfcHumidifier.ADIABATICAIRWASHER": {
        "Parent": "IfcHumidifier",
        "Description": "Water vapor is added into the airstream through adiabatic evaporation using an air washing element.\n\n\n"
      },
      "IfcHumidifier.STEAMINJECTION": {
        "Parent": "IfcHumidifier",
        "Description": ""
      },
      "IfcHumidifier.ADIABATICRIGIDMEDIA": {
        "Parent": "IfcHumidifier",
        "Description": ""
      },
      "IfcMedicalDevice": {
        "Parent": "IfcFlowTerminal",
        "Description": "A medical device is attached to a medical piping system and operates upon medical gases to perform a specific function. Medical gases include medical air, medical vacuum, oxygen, carbon dioxide, nitrogen, and nitrous oxide.\n\n\n\nOutlets for medical gasses should use _IfcValve_ with PredefinedType equal to GASTAP, containing an _IfcDistributionPort_ with FlowDirection=SINK and PredefinedType equal to COMPRESSEDAIR, VACUUM, or CHEMICAL, and having property sets on the port further indicating the gas type and pressure. Tanks for medical gasses should use _IfcTank_ with PredefinedType equal to PRESSUREVESSEL, containing an _IfcDistributionPort_ with FlowDirection=SOURCE and PredefinedType=CHEMICAL, and having property sets on the port further indicating the gas type and pressure range.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_MedicalDeviceTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          }
        }
      },
      "IfcMedicalDevice.FEEDAIRUNIT": {
        "Parent": "IfcMedicalDevice",
        "Description": "Device that feeds air to an oxygen generator, composed of an air compressor, air treatment line, and an air receiver.\n\n\n"
      },
      "IfcMedicalDevice.OXYGENPLANT": {
        "Parent": "IfcMedicalDevice",
        "Description": "Device that combines a feed air unit, oxygen generator, and backup oxygen cylinders.\n\n\n"
      },
      "IfcMedicalDevice.AIRSTATION": {
        "Parent": "IfcMedicalDevice",
        "Description": "Device that provides purified medical air, composed of an air compressor and air treatment line.\n\n\n"
      },
      "IfcMedicalDevice.VACUUMSTATION": {
        "Parent": "IfcMedicalDevice",
        "Description": ""
      },
      "IfcMedicalDevice.OXYGENGENERATOR": {
        "Parent": "IfcMedicalDevice",
        "Description": "Device that generates oxygen from air.\n\n\n"
      },
      "IfcPipeFitting": {
        "Parent": "IfcFlowFitting",
        "Description": "A pipe fitting is a junction or transition in a piping flow distribution system used to connect pipe segments, resulting in changes in flow characteristics to the fluid such as direction or flow rate.\n\n\n\nPipe fittings include elbows, junctions, manifolds, and plumbing boxes.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_PipeFittingOccurrence": {
            "Properties": {
              "Color": {
                "type": "string",
                "Description": "The color of the pipe segment.\n\n\n\nNote: This is typically used only for plastic pipe segments. However, it may be used for any pipe segments with a painted surface which is not otherwise specified as a covering.\n"
              },
              "InteriorRoughnessCoefficient": {
                "type": "real",
                "Description": "The interior roughness coefficient of the pipe segment.\n"
              }
            }
          },
          "Pset_PipeFittingPHistory": {
            "Properties": {
              "FlowrateLeakage": {
                "type": "real",
                "Description": "Leakage flowrate versus pressure difference.\n"
              },
              "LossCoefficient": {
                "type": "real",
                "Description": "Dimensionless loss coefficient used for calculating fluid resistance representing the ratio of total pressure loss to velocity pressure at a referenced cross-section.\n"
              }
            }
          },
          "Pset_PipeFittingTypeCommon": {
            "Properties": {
              "FittingLossFactor": {
                "type": "real",
                "Description": "A factor that determines the pressure loss due to friction through the fitting.\n"
              },
              "PressureClass": {
                "type": "real",
                "Description": "Pressure classification as defined by the authority having jurisdiction (e.g., SMACNA, etc.).\n"
              },
              "PressureRange": {
                "type": "real",
                "Description": "Allowable maximum and minimum working pressure (relative to ambient pressure).\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TemperatureRange": {
                "type": "real",
                "Description": "Temperature range within which the air terminal is designed to operate.\n"
              }
            }
          },
          "Qto_PipeFittingBaseQuantities": {
            "Properties": {
              "GrossCrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the cross section at the inlet, including the pipe fitting itself and the interior flow space.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetCrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the cross section at the inlet, including the pipe fitting and excluding the interior flow space.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "OuterSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the extruded surfaces of the footing (not taking into account the end cap areas), normally generated as perimeter \\* length.\n"
              }
            }
          }
        }
      },
      "IfcPipeFitting.CONNECTOR": {
        "Parent": "IfcPipeFitting",
        "Description": "Connector fitting, typically used to join two ports together within a flow distribution system (e.g., a coupling used to join two pipe segments).\n\n\n"
      },
      "IfcPipeFitting.OBSTRUCTION": {
        "Parent": "IfcPipeFitting",
        "Description": "A fitting with typically two ports used to obstruct or restrict flow between the connected elements (e.g., screen, perforated plate, etc.).\n\n\n"
      },
      "IfcPipeFitting.EXIT": {
        "Parent": "IfcPipeFitting",
        "Description": "Exit fitting, typically unconnected at one port and connected to a flow distribution system at the other (e.g., a hose bibb).\n\n\n"
      },
      "IfcPipeFitting.BEND": {
        "Parent": "IfcPipeFitting",
        "Description": "A fitting with typically two ports used to change the direction of flow between connected elements.\n\n\n",
        "Psets": {
          "Pset_PipeFittingTypeBend": {
            "Properties": {
              "BendAngle": {
                "type": "real",
                "Description": "The change of direction of flow.\n"
              },
              "BendRadius": {
                "type": "real",
                "Description": "The radius of bending if circular arc or zero if sharp bend.\n"
              }
            }
          }
        }
      },
      "IfcPipeFitting.ENTRY": {
        "Parent": "IfcPipeFitting",
        "Description": "Entry fitting, typically unconnected at one port and connected to a flow distribution system at the other (e.g., a breeching inlet).\n\n\n"
      },
      "IfcPipeFitting.JUNCTION": {
        "Parent": "IfcPipeFitting",
        "Description": "A fitting with typically more than two ports used to redistribute flow among the ports and/or to change the direction of flow between connected elements (e.g, tee, cross, wye, etc.).\n\n\n",
        "Psets": {
          "Pset_PipeFittingTypeJunction": {
            "Properties": {
              "JunctionLeftAngle": {
                "type": "real",
                "Description": "The change of direction of flow for the left junction.\n"
              },
              "JunctionLeftRadius": {
                "type": "real",
                "Description": "The radius of bending for the left junction.\n"
              },
              "JunctionRightAngle": {
                "type": "real",
                "Description": "The change of direction of flow for the right junction where 0 indicates straight segment.\n"
              },
              "JunctionRightRadius": {
                "type": "real",
                "Description": "The radius of bending for the right junction where 0 indicates sharp bend.\n"
              },
              "JunctionType": {
                "type": "string",
                "Description": "The type of junction. TEE=3 ports, CROSS = 4 ports.\n"
              }
            }
          }
        }
      },
      "IfcPipeFitting.TRANSITION": {
        "Parent": "IfcPipeFitting",
        "Description": "A fitting with typically two ports having different shapes or sizes. Can also be used to change the direction of flow between connected elements.\n\n\n"
      },
      "IfcPipeSegment": {
        "Parent": "IfcFlowSegment",
        "Description": "A pipe segment is used to typically join two sections of a piping network.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_PipeConnectionFlanged": {
            "Properties": {
              "BoltholePitch": {
                "type": "real",
                "Description": "Diameter of the circle along which the boltholes are placed.\n"
              },
              "BoltSize": {
                "type": "real",
                "Description": "Size of the bolts securing the flange.\n"
              },
              "BoreSize": {
                "type": "real",
                "Description": "The nominal bore of the pipe flange.\n"
              },
              "FlangeDiameter": {
                "type": "real",
                "Description": "Overall diameter of the flange.\n"
              },
              "FlangeStandard": {
                "type": "string",
                "Description": "Designation of the standard describing the flange table.\n"
              },
              "FlangeTable": {
                "type": "string",
                "Description": "Designation of the standard table to which the flange conforms.\n"
              },
              "FlangeThickness": {
                "type": "real",
                "Description": "Thickness of the material from which the pipe bend is constructed.\n"
              },
              "NumberOfBoltholes": {
                "type": "integer",
                "Description": "Number of boltholes in the flange.\n"
              }
            }
          },
          "Pset_PipeSegmentOccurrence": {
            "Properties": {
              "Color": {
                "type": "string",
                "Description": "The color of the pipe segment.\n\n\n\nNote: This is typically used only for plastic pipe segments. However, it may be used for any pipe segments with a painted surface which is not otherwise specified as a covering.\n"
              },
              "Gradient": {
                "type": "real",
                "Description": "The gradient of the pipe segment.\n"
              },
              "InteriorRoughnessCoefficient": {
                "type": "real",
                "Description": "The interior roughness coefficient of the pipe segment.\n"
              },
              "InvertElevation": {
                "type": "real",
                "Description": "The invert elevation relative to the datum established for the project.\n"
              }
            }
          },
          "Pset_PipeSegmentPHistory": {
            "Properties": {
              "FluidFlowLeakage": {
                "type": "real",
                "Description": "Volumetric leakage flow rate.\n"
              }
            }
          },
          "Pset_PipeSegmentTypeCommon": {
            "Properties": {
              "InnerDiameter": {
                "type": "real",
                "Description": "The actual inner diameter of the pipe.\n"
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the tubes in the tube bundle.\n"
              },
              "OuterDiameter": {
                "type": "real",
                "Description": "The actual outer diameter of the pipe.\n"
              },
              "PressureRange": {
                "type": "real",
                "Description": "Allowable maximum and minimum working pressure (relative to ambient pressure).\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TemperatureRange": {
                "type": "real",
                "Description": "Temperature range within which the air terminal is designed to operate.\n"
              },
              "WorkingPressure": {
                "type": "real",
                "Description": "Pressure classification as defined by the authority having jurisdiction (e.g., SMACNA, etc.).\n"
              }
            }
          },
          "Qto_PipeSegmentBaseQuantities": {
            "Properties": {
              "GrossCrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the cross section at the inlet, including the pipe fitting itself and the interior flow space.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetCrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the cross section at the inlet, including the pipe fitting and excluding the interior flow space.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "OuterSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the extruded surfaces of the footing (not taking into account the end cap areas), normally generated as perimeter \\* length.\n"
              }
            }
          }
        }
      },
      "IfcPipeSegment.FLEXIBLESEGMENT": {
        "Parent": "IfcPipeSegment",
        "Description": ""
      },
      "IfcPipeSegment.RIGIDSEGMENT": {
        "Parent": "IfcPipeSegment",
        "Description": "A rigid segment is continuous linear segment of pipe that cannot be deformed.\n\n\n"
      },
      "IfcPipeSegment.SPOOL": {
        "Parent": "IfcPipeSegment",
        "Description": "A type of rigid segment that is typically shorter and used for providing connectivity within a piping network.\n\n\n"
      },
      "IfcPipeSegment.GUTTER": {
        "Parent": "IfcPipeSegment",
        "Description": "A gutter segment is a continuous open-channel segment of pipe.\n\n\n",
        "Psets": {
          "Pset_PipeSegmentTypeGutter": {
            "Properties": {
              "FlowRating": {
                "type": "real",
                "Description": "Actual flow capacity for the gutter. Value of 0.00 means this value has not been set.\n"
              },
              "Slope": {
                "type": "real",
                "Description": "Sloping angle of the object  - relative to horizontal (0.0 degrees). \n\nActual maximum slope for the passageway according to the current design.\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcPipeSegment.CULVERT": {
        "Parent": "IfcPipeSegment",
        "Description": "",
        "Psets": {
          "Pset_PipeSegmentTypeCulvert": {
            "Properties": {
              "ClearDepth": {
                "type": "real",
                "Description": "Clear depth of the object (elevator). It indicates the distance from the inner surface of the elevator door to the opposite surface of the elevator car. \n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              },
              "InternalWidth": {
                "type": "real",
                "Description": "The internal width of the culvert.\n"
              }
            }
          }
        }
      },
      "IfcPump": {
        "Parent": "IfcFlowMovingDevice",
        "Description": "A pump is a device which imparts mechanical work on fluids or slurries to move them through a channel or pipeline. A typical use of a pump is to circulate chilled water or heating hot water in a building services distribution system.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_PumpOccurrence": {
            "Properties": {
              "BaseType": {
                "type": "string",
                "Description": "Defines general types of pump bases.\n\n\n\nFRAME: Frame. \n\nBASE: Base. \n\nNONE: There is no pump base, such as an inline pump. \n\nOTHER: Other type of pump base.\n"
              },
              "DriveConnectionType": {
                "type": "string",
                "Description": "The way the pump drive mechanism is connected to the pump.\n\n\n\nDIRECTDRIVE: Direct drive. \n\nBELTDRIVE: Belt drive. \n\nCOUPLING: Coupling. \n\nOTHER: Other type of drive connection.\n"
              },
              "ImpellerDiameter": {
                "type": "real",
                "Description": "Diameter of compressor impeller - used to scale performance of geometrically similar compressors.\n"
              }
            }
          },
          "Pset_PumpPHistory": {
            "Properties": {
              "Flowrate": {
                "type": "real",
                "Description": "The actual operational fluid flowrate.\n"
              },
              "MechanicalEfficiency": {
                "type": "real",
                "Description": "Ratio of the work (as measured) delivered to the gas to the work input to the compressor shaft.\n"
              },
              "OverallEfficiency": {
                "type": "real",
                "Description": "The pump and motor overall operational efficiency.\n"
              },
              "Power": {
                "type": "real",
                "Description": "The actual power consumption of the pump.\n"
              },
              "PressureRise": {
                "type": "real",
                "Description": "The developed pressure.\n"
              },
              "RotationSpeed": {
                "type": "real",
                "Description": "Pump rotational speed.\n"
              }
            }
          },
          "Pset_PumpTypeCommon": {
            "Properties": {
              "ConnectionSize": {
                "type": "real",
                "Description": "Defines the size of inlet and outlet pipe connections to the meter.\n"
              },
              "FlowRateRange": {
                "type": "real",
                "Description": "Allowable range of volume of fluid being pumped against the resistance specified.\n"
              },
              "FlowResistanceRange": {
                "type": "real",
                "Description": "Allowable range of frictional resistance against which the fluid is being pumped.\n"
              },
              "NetPositiveSuctionHead": {
                "type": "real",
                "Description": "Minimum liquid pressure at the pump inlet to prevent cavitation.\n"
              },
              "NominalRotationSpeed": {
                "type": "real",
                "Description": "Pump rotational speed under nominal conditions.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TemperatureRange": {
                "type": "real",
                "Description": "Temperature range within which the air terminal is designed to operate.\n"
              }
            }
          },
          "Qto_PumpBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcPump.VERTICALTURBINE": {
        "Parent": "IfcPump",
        "Description": "A Vertical Turbine pump has a motor mounted vertically on the pump casing for either\n\n                wet-pit sump mounting or dry-well mounting.\n\n\n"
      },
      "IfcPump.SUMPPUMP": {
        "Parent": "IfcPump",
        "Description": "A pump designed to sit above a collection tank with a suction inlet extending into the tank.\n\n\n"
      },
      "IfcPump.CIRCULATOR": {
        "Parent": "IfcPump",
        "Description": ""
      },
      "IfcPump.SPLITCASE": {
        "Parent": "IfcPump",
        "Description": ""
      },
      "IfcPump.ENDSUCTION": {
        "Parent": "IfcPump",
        "Description": ""
      },
      "IfcPump.SUBMERSIBLEPUMP": {
        "Parent": "IfcPump",
        "Description": "A pump designed to be immersed in a fluid, typically a collection tank.\n\n\n"
      },
      "IfcPump.VERTICALINLINE": {
        "Parent": "IfcPump",
        "Description": ""
      },
      "IfcSpaceHeater": {
        "Parent": "IfcFlowTerminal",
        "Description": "Space heaters utilize a combination of radiation and/or natural convection using a heating source such as electricity, steam or hot water to heat a limited space or area. Examples of space heaters include radiators, convectors, baseboard and finned-tube heaters.\n\n\n\n_IfcUnitaryEquipment_ should be used for packaged units supporting a combination of heating, cooling, and/or dehumidification; _IfcCoil_ should be used for coil-based floor heating.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n> \n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Electric heaters formerly defined by _IfcElectricHeaterType_ are now represented by this entity with _PredefinedType_ set to _CONVECTOR_ and _Pset_SpaceHeaterCommon_._HeatTransferDimension_ reflecting _IfcElectricHeaterTypeEnum_ as follows: _ELECTRICPOINTHEATER_ = _POINT_, _ELECTRICCABLEHEATER_ = _CURVE_, _ELECTRICMATHEATER_ = _SURFACE_.\n\n\n",
        "Psets": {
          "Pset_SpaceHeaterPHistory": {
            "Properties": {
              "Effectiveness": {
                "type": "real",
                "Description": "Ratio of the change in dry bulb temperature of the (primary) air stream to the difference between the entering dry bulb temperature of the (primary) air and the wet-bulb temperature of the (secondary) air.\n"
              },
              "Exponent": {
                "type": "real",
                "Description": "Characteristic exponent, slope of log(heat output) vs log (surface temperature minus environmental temperature).\n"
              },
              "FractionConvectiveHeatTransfer": {
                "type": "real",
                "Description": "Fraction of the total heat transfer rate as the convective heat transfer.\n"
              },
              "FractionRadiantHeatTransfer": {
                "type": "real",
                "Description": "Fraction of the total heat transfer rate as the radiant heat transfer.\n"
              },
              "HeatOutputRate": {
                "type": "real",
                "Description": "Overall heat transfer rate.\n"
              },
              "SpaceAirTemperature": {
                "type": "real",
                "Description": "Dry bulb temperature in the space.\n"
              },
              "SpaceMeanRadiantTemperature": {
                "type": "real",
                "Description": "Mean radiant temperature in the space.\n"
              },
              "SurfaceTemperature": {
                "type": "real",
                "Description": "Average surface temperature of the component.\n"
              }
            }
          },
          "Pset_SpaceHeaterTypeCommon": {
            "Properties": {
              "BodyMass": {
                "type": "real",
                "Description": "Overall body mass of the heater.\n"
              },
              "EnergySource": {
                "type": "string",
                "Description": "Enumeration defining the energy source or fuel combusted to generate heat if applicable.  Note: hydronic heaters shall use UNSET; dual-use hydronic/electric heaters shall use ELECTRICITY.\n"
              },
              "HeatTransferDimension": {
                "type": "string",
                "Description": "Indicates how heat is transmitted according to the shape of the space heater.\n"
              },
              "HeatTransferMedium": {
                "type": "PEnum_HeatTransferMedium",
                "Description": "Enumeration defining the heat transfer medium if applicable.\n",
                "values": [
                  "STEAM",
                  "WATER"
                ]
              },
              "NumberOfPanels": {
                "type": "integer",
                "Description": "Number of panels.\n"
              },
              "NumberOfSections": {
                "type": "integer",
                "Description": "Number of sections used in the construction of the tank. Default is 1.\n\n\n\nNote: All sections assumed to be the same size.\n"
              },
              "OutputCapacity": {
                "type": "real",
                "Description": "Total nominal heat output as listed by the manufacturer.\n"
              },
              "PlacementType": {
                "type": "string",
                "Description": "Indicates the placement of the coil.  \n\nFLOOR indicates an under floor heater (if coil type is WATERHEATINGCOIL or ELECTRICHEATINGCOIL); \n\nCEILING indicates a cooling ceiling (if coil type is WATERCOOLINGCOIL);\n\nUNIT indicates that the coil is part of a cooling or heating unit, like cooled beam, etc.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TemperatureClassification": {
                "type": "string",
                "Description": "Enumeration defining the temperature classification of the space heater surface temperature.\n\nlow temperature - surface temperature is relatively low, usually heated by hot water or electricity.\n\nhigh temperature - surface temperature is relatively high, usually heated by gas or steam.\n"
              },
              "ThermalEfficiency": {
                "type": "real",
                "Description": "Overall Thermal Efficiency is defined as gross energy output of the heat transfer device divided by the energy input.\n"
              },
              "ThermalMassHeatCapacity": {
                "type": "real",
                "Description": "Product of component mass and specific heat.\n"
              }
            }
          },
          "Qto_SpaceHeaterBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcSpaceHeater.RADIATOR": {
        "Parent": "IfcSpaceHeater",
        "Description": "",
        "Psets": {
          "Pset_SpaceHeaterTypeRadiator": {
            "Properties": {
              "RadiatorType": {
                "type": "string",
                "Description": "Indicates the type of radiator.\n"
              },
              "TubingLength": {
                "type": "real",
                "Description": "Water tube length inside the component.\n"
              },
              "WaterContent": {
                "type": "real",
                "Description": "Weight of water content within the heater.\n"
              }
            }
          }
        }
      },
      "IfcSpaceHeater.CONVECTOR": {
        "Parent": "IfcSpaceHeater",
        "Description": "A heat-distributing unit that operates with gravity-circulated air.\n\n\n",
        "Psets": {
          "Pset_SpaceHeaterTypeConvector": {
            "Properties": {
              "ConvectorType": {
                "type": "string",
                "Description": "Indicates the type of convector, whether forced air (mechanically driven) or natural (gravity).\n"
              }
            }
          }
        }
      },
      "IfcTank": {
        "Parent": "IfcFlowStorageDevice",
        "Description": "A tank is a vessel or container in which a fluid or gas is stored for later use.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_TankOccurrence": {
            "Properties": {
              "HasLadder": {
                "type": "boolean",
                "Description": "Indication of whether the tank is provided with a ladder (set TRUE) for access to the top. If no ladder is provided then value is set FALSE.\n\n\n\nNote: No indication is given of the type of ladder (gooseneck etc.)\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasVisualIndicator": {
                "type": "boolean",
                "Description": "Indication of whether the tank is provided with a visual indicator (set TRUE) that shows the water level in the tank. If no visual indicator is provided then value is set FALSE.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "TankComposition": {
                "type": "PEnum_TankComposition",
                "Description": "Defines the level of element composition where.\n\n\n\nCOMPLEX: A set of elementary units aggregated together to fulfill the overall  required purpose.\n\nELEMENT: A single elementary unit that may exist of itself or as an aggregation of partial units..\n\nPARTIAL: A partial elementary unit.\n",
                "values": [
                  "COMPLEX",
                  "ELEMENT",
                  "PARTIAL"
                ]
              }
            }
          },
          "Pset_TankTypeCommon": {
            "Properties": {
              "AccessType": {
                "type": "string",
                "Description": "Defines the types of access (or cover) to a tank that may be specified.\n\n\n\nNote that covers are generally specified for rectangular tanks. For cylindrical tanks, access will normally be via a manhole.\n"
              },
              "EffectiveCapacity": {
                "type": "real",
                "Description": "The total effective or actual volumetric capacity of the tank.\n"
              },
              "EndShapeType": {
                "type": "string",
                "Description": "Defines the types of end shapes that can be used for preformed tanks. The convention for reading these enumerated values is that for a vertical cylinder, the first value is the base and the second is the top; for a horizontal cylinder, the order of reading should be left to right. For a speherical tank, the value UNSET should be used.\n"
              },
              "FirstCurvatureRadius": {
                "type": "real",
                "Description": "FirstCurvatureRadius should be defined as the base or left side radius of curvature value.\n"
              },
              "NominalCapacity": {
                "type": "real",
                "Description": "Nominal cooling tower capacity in terms of heat transfer rate of the cooling tower between air stream and water stream at nominal conditions.\n"
              },
              "NominalDepth": {
                "type": "real",
                "Description": "Nominal or quoted depth of the object measured from the inlet drain connection to the base of the unit.\n"
              },
              "NominalLengthOrDiameter": {
                "type": "real",
                "Description": "The nominal length or, in the case of a vertical cylindrical tank, the nominal diameter of the tank.\n"
              },
              "NominalWidthOrDiameter": {
                "type": "real",
                "Description": "The nominal width or, in the case of a horizontal cylindrical tank, the nominal diameter of the tank.\n\n\n\nNote: Not required for a vertical cylindrical tank.\n"
              },
              "NumberOfSections": {
                "type": "integer",
                "Description": "Number of sections used in the construction of the tank. Default is 1.\n\n\n\nNote: All sections assumed to be the same size.\n"
              },
              "OperatingWeight": {
                "type": "real",
                "Description": "Operating weight of the tank including all of its contents.\n"
              },
              "PatternType": {
                "type": "string",
                "Description": "Defines the types of pattern (or shape of a tank that may be specified.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SecondCurvatureRadius": {
                "type": "real",
                "Description": "SecondCurvatureRadius should be defined as the top or right side radius of curvature value.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "StorageType": {
                "type": "string",
                "Description": "Defines the general material category intended to be stored.\n"
              }
            }
          },
          "Qto_TankBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "TotalSurfaceArea": {
                "type": "q_area",
                "Description": "Gross area of the air terminal face plate.\n"
              }
            }
          }
        }
      },
      "IfcTank.PRESSUREVESSEL": {
        "Parent": "IfcTank",
        "Description": "",
        "Psets": {
          "Pset_TankTypePressureVessel": {
            "Properties": {
              "ChargePressure": {
                "type": "real",
                "Description": "Nominal or design operating pressure of the tank.\n"
              },
              "PressureRegulatorSetting": {
                "type": "real",
                "Description": "Pressure that is automatically maintained in the tank.\n"
              },
              "ReliefValveSetting": {
                "type": "real",
                "Description": "Pressure at which the relief valve activates.\n"
              }
            }
          }
        }
      },
      "IfcTank.EXPANSION": {
        "Parent": "IfcTank",
        "Description": "A closed container used in a closed fluid distribution system to mitigate the effects of thermal expansion or water hammer. The tank is typically constructed with a diaphragm dividing the tank into two sections, with fluid on one side of the diaphragm and air on the other. One example application is when connected to the primary circuit of a hot water system to accommodate the increase in volume of the water when it is heated.\n\n\n",
        "Psets": {
          "Pset_TankTypeExpansion": {
            "Properties": {
              "ChargePressure": {
                "type": "real",
                "Description": "Nominal or design operating pressure of the tank.\n"
              },
              "PressureRegulatorSetting": {
                "type": "real",
                "Description": "Pressure that is automatically maintained in the tank.\n"
              },
              "ReliefValveSetting": {
                "type": "real",
                "Description": "Pressure at which the relief valve activates.\n"
              }
            }
          }
        }
      },
      "IfcTank.OILRETENTIONTRAY": {
        "Parent": "IfcTank",
        "Description": "An open container for environmental protection and storage of chemical products.\n\n\n"
      },
      "IfcTank.FEEDANDEXPANSION": {
        "Parent": "IfcTank",
        "Description": "An open tank that is used for both storage and thermal expansion. A typical example is a tank used to store make-up water at ambient pressure for supply to a hot water system, simultaneously accommodating increases in volume of the water when heated.\n\n\n"
      },
      "IfcTank.VESSEL": {
        "Parent": "IfcTank",
        "Description": "An arbitrary closed tank type.\n\n\n"
      },
      "IfcTank.BASIN": {
        "Parent": "IfcTank",
        "Description": "An arbitrary open tank type.\n\n\n"
      },
      "IfcTank.BREAKPRESSURE": {
        "Parent": "IfcTank",
        "Description": ""
      },
      "IfcTank.STORAGE": {
        "Parent": "IfcTank",
        "Description": "An open or closed containter used for storing a fluid at ambient pressure and from which it can be supplied to the fluid distribution system. There are many examples of storage tanks, such as potable water storage tanks, fuel storage tanks, etc.\n\n\n"
      },
      "IfcTubeBundle": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "A tube bundle is a device consisting of tubes and bundles of tubes used for heat transfer and contained typically within other energy conversion devices, such as a chiller or coil.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_TubeBundleTypeCommon": {
            "Properties": {
              "FoulingFactor": {
                "type": "real",
                "Description": "Fouling factor of the tubes in the tube bundle.\n"
              },
              "HasTurbulator": {
                "type": "boolean",
                "Description": "TRUE if the tube has a turbulator, FALSE if it does not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HorizontalSpacing": {
                "type": "real",
                "Description": "Horizontal spacing between tubes in the tube bundle.\n"
              },
              "InLineRowSpacing": {
                "type": "real",
                "Description": "In-line tube row spacing.\n"
              },
              "InsideDiameter": {
                "type": "real",
                "Description": "Actual inner diameter of the tube in the tube bundle.\n"
              },
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the tubes in the tube bundle.\n"
              },
              "NumberOfCircuits": {
                "type": "integer",
                "Description": "Number of parallel fluid tube circuits.\n"
              },
              "NumberOfRows": {
                "type": "integer",
                "Description": "Number of tube rows in the tube bundle assembly.\n"
              },
              "OutsideDiameter": {
                "type": "real",
                "Description": "Actual outside diameter of the tube in the tube bundle.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "StaggeredRowSpacing": {
                "type": "real",
                "Description": "Staggered tube row spacing.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "ThermalConductivity": {
                "type": "real",
                "Description": "The rate at which thermal energy is transmitted through the material.\n"
              },
              "VerticalSpacing": {
                "type": "real",
                "Description": "Vertical spacing between tubes in the tube bundle.\n"
              },
              "Volume": {
                "type": "real",
                "Description": "Total volume of fluid in the tubes and their headers.\n"
              }
            }
          },
          "Qto_TubeBundleBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcTubeBundle.FINNED": {
        "Parent": "IfcTubeBundle",
        "Description": "",
        "Psets": {
          "Pset_TubeBundleTypeFinned": {
            "Properties": {
              "Diameter": {
                "type": "real",
                "Description": "Diameter of the object. It is the diameter of the handrail of the railing.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n\nHere the diameter of the hand or guardrail within the railing.\n"
              },
              "FinCorrugatedType": {
                "type": "string",
                "Description": "Description of a fin corrugated type.\n"
              },
              "HasCoating": {
                "type": "boolean",
                "Description": "TRUE if the fin has a coating, FALSE if it does not.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Height": {
                "type": "real",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Spacing": {
                "type": "real",
                "Description": "Distance between fins on a tube in the tube bundle.\n"
              },
              "ThermalConductivity": {
                "type": "real",
                "Description": "The rate at which thermal energy is transmitted through the material.\n"
              },
              "Thickness": {
                "type": "real",
                "Description": "The nominal overall thickness of the course. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size...?\n"
              }
            }
          }
        }
      },
      "IfcUnitaryEquipment": {
        "Parent": "IfcEnergyConversionDevice",
        "Description": "Unitary equipment typically combine a number of components into a single product, such as air handlers, pre-packaged rooftop air-conditioning units, heat pumps, and split systems.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_UnitaryEquipmentTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_UnitaryEquipmentBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcUnitaryEquipment.DEHUMIDIFIER": {
        "Parent": "IfcUnitaryEquipment",
        "Description": "A unitary packaged dehumidification unit.  Note: units supporting multiple modes (dehumidification, cooling, and/or heating) should use AIRCONDITIONINGUNIT.\n\n\n"
      },
      "IfcUnitaryEquipment.SPLITSYSTEM": {
        "Parent": "IfcUnitaryEquipment",
        "Description": ""
      },
      "IfcUnitaryEquipment.AIRCONDITIONINGUNIT": {
        "Parent": "IfcUnitaryEquipment",
        "Description": "A unitary packaged air-conditioning unit typically used in residential or light commercial applications.\n\n\n",
        "Psets": {
          "Pset_UnitaryEquipmentTypeAirConditioningUnit": {
            "Properties": {
              "CondenserEnteringTemperature": {
                "type": "real",
                "Description": "Temperature of fluid entering condenser.\n"
              },
              "CondenserFlowrate": {
                "type": "real",
                "Description": "Flow rate of fluid through the condenser.\n"
              },
              "CondenserLeavingTemperature": {
                "type": "real",
                "Description": "Termperature of fluid leaving condenser.\n"
              },
              "CoolingEfficiency": {
                "type": "real",
                "Description": "Coefficient of Performance: Ratio of cooling energy output to energy input under full load operating conditions.\n"
              },
              "HeatingCapacity": {
                "type": "real",
                "Description": "Heating capacity.\n"
              },
              "HeatingEfficiency": {
                "type": "real",
                "Description": "Heating efficiency under full load heating conditions.\n"
              },
              "LatentCoolingCapacity": {
                "type": "real",
                "Description": "Latent cooling capacity.\n"
              },
              "OutsideAirFlowrate": {
                "type": "real",
                "Description": "Flow rate of outside air entering the unit.\n"
              },
              "SensibleCoolingCapacity": {
                "type": "real",
                "Description": "Sensible cooling capacity.\n"
              }
            }
          }
        }
      },
      "IfcUnitaryEquipment.ROOFTOPUNIT": {
        "Parent": "IfcUnitaryEquipment",
        "Description": ""
      },
      "IfcUnitaryEquipment.AIRHANDLER": {
        "Parent": "IfcUnitaryEquipment",
        "Description": "",
        "Psets": {
          "Pset_UnitaryEquipmentTypeAirHandler": {
            "Properties": {
              "AirHandlerConstruction": {
                "type": "PEnum_AirHandlerConstruction",
                "Description": "Enumeration defining how the air handler might be fabricated.\n",
                "values": [
                  "CONSTRUCTEDONSITE",
                  "MANUFACTUREDITEM"
                ]
              },
              "AirHandlerFanCoilArrangement": {
                "type": "PEnum_AirHandlerFanCoilArrangement",
                "Description": "Enumeration defining the arrangement of the supply air fan and the cooling coil.\n",
                "values": [
                  "BLOWTHROUGH",
                  "DRAWTHROUGH"
                ]
              },
              "DualDeck": {
                "type": "boolean",
                "Description": "Does the AirHandler have a dual deck? TRUE = Yes, FALSE = No.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcValve": {
        "Parent": "IfcFlowController",
        "Description": "A valve is used in a building services piping distribution system to control or modulate the flow of the fluid.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_ValvePHistory": {
            "Properties": {
              "MeasuredFlowRate": {
                "type": "real",
                "Description": "The rate of flow of a fluid measured across the valve.\n"
              },
              "MeasuredPressureDrop": {
                "type": "real",
                "Description": "The actual pressure drop in the fluid measured across the valve.\n"
              },
              "PercentageOpen": {
                "type": "real",
                "Description": "The ratio between the amount that the valve is open to the full open position of the valve.\n"
              }
            }
          },
          "Pset_ValveTypeCommon": {
            "Properties": {
              "CloseOffRating": {
                "type": "real",
                "Description": "Close off rating.\n"
              },
              "FlowCoefficient": {
                "type": "real",
                "Description": "Flow coefficient (the quantity of fluid that passes through a fully open valve at unit pressure drop), typically expressed as the Kv or Cv value for the valve.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Size": {
                "type": "real",
                "Description": "The size of the connection to the valve (or to each connection for faucets, mixing valves, etc.).\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TestPressure": {
                "type": "real",
                "Description": "The maximum pressure to which the valve has been subjected under test.\n"
              },
              "ValveMechanism": {
                "type": "PEnum_ValveMechanism",
                "Description": "The mechanism by which the valve function is achieved where:\n\n\n\nBALL: Valve that has a ported ball that can be turned relative to the body seat ports.\n\nBUTTERFLY: Valve in which a streamlined disc pivots about a diametric axis.\n\nCONFIGUREDGATE: Screwdown valve in which the closing gate is shaped in a configured manner to have a more precise control of pressure and flow change across the valve.\n\nGLAND: Valve with a tapered seating, in which a rotatable plug is retained by means of a gland and gland packing.\n\nGLOBE: Screwdown valve that has a spherical body.\n\nLUBRICATEDPLUG: Plug valve in which a lubricant is injected under pressure between the plug face and the body.\n\nNEEDLE: Valve for regulating the flow in or from a pipe, in which a slender cone moves along the axis of flow to close against a fixed conical seat.\n\nPARALLELSLIDE: Screwdown valve that has a machined plate that slides in formed grooves to form a seal.\n\nPLUG: Valve that has a ported plug that can be turned relative to the body seat ports.\n\nWEDGEGATE: Screwdown valve that has a wedge shaped plate fitting into tapered guides to form a seal.\n",
                "values": [
                  "BALL",
                  "BUTTERFLY",
                  "CONFIGUREDGATE",
                  "GLAND",
                  "GLOBE",
                  "LUBRICATEDPLUG",
                  "NEEDLE",
                  "PARALLELSLIDE",
                  "PLUG",
                  "WEDGEGATE"
                ]
              },
              "ValveOperation": {
                "type": "PEnum_ValveOperation",
                "Description": "The method of valve operation where:\n\n\n\nDROPWEIGHT: A valve that is closed by the action of a weighted lever being released, the weight normally being prevented from dropping by being held by a wire, the closure normally being made by the action of heat on a fusible link in the wire\n\nFLOAT: A valve that is opened and closed by the action of a float that rises and falls with water level. The float may be a ball attached to a lever or other mechanism\n\nHYDRAULIC: A valve that is opened and closed by hydraulic actuation\n\nLEVER: A valve that is opened and closed by the action of a lever rotating the gate within the valve.\n\nLOCKSHIELD: A valve that requires the use of a special lockshield key for opening and closing, the operating mechanism being protected by a shroud during normal operation.\n\nMOTORIZED: A valve that is opened and closed by the action of an electric motor on an actuator\n\nPNEUMATIC: A valve that is opened and closed by pneumatic actuation\n\nSOLENOID: A valve that is normally held open by a magnetic field in a coil acting on the gate but that is closed immediately if the electrical current generating the magnetic field is removed. \n\nSPRING: A valve that is normally held in position by the pressure of a spring on a plate but that may be caused to open if the pressure of the fluid is sufficient to overcome the spring pressure. \n\nTHERMOSTATIC: A valve in which the ports are opened or closed to maintain a required predetermined temperature.\n\nWHEEL: A valve that is opened and closed by the action of a wheel moving the gate within the valve.\n",
                "values": [
                  "DROPWEIGHT",
                  "FLOAT",
                  "HYDRAULIC",
                  "LEVER",
                  "LOCKSHIELD",
                  "MOTORIZED",
                  "PNEUMATIC",
                  "SOLENOID",
                  "SPRING",
                  "THERMOSTATIC",
                  "WHEEL"
                ]
              },
              "ValvePattern": {
                "type": "PEnum_ValvePattern",
                "Description": "The configuration of the ports of a valve according to either the linear route taken by a fluid flowing through the valve or by the number of ports where:\n\n\n\nSINGLEPORT: Valve that has a single entry port from the system that it serves, the exit port being to the surrounding environment.\n\nANGLED_2_PORT: Valve in which the direction of flow is changed through 90 degrees.\n\nSTRAIGHT_2_PORT: Valve in which the flow is straight through.\n\nSTRAIGHT_3_PORT: Valve with three separate ports.\n\nCROSSOVER_4_PORT: Valve with 4 separate ports.\n",
                "values": [
                  "ANGLED_2_PORT",
                  "CROSSOVER_4_PORT",
                  "SINGLEPORT",
                  "STRAIGHT_2_PORT",
                  "STRAIGHT_3_PORT"
                ]
              },
              "WorkingPressure": {
                "type": "real",
                "Description": "Pressure classification as defined by the authority having jurisdiction (e.g., SMACNA, etc.).\n"
              }
            }
          },
          "Qto_ValveBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcValve.SAFETYCUTOFF": {
        "Parent": "IfcValve",
        "Description": "Valve that closes under the action of a safety mechanism such as a drop weight, solenoid etc.\n\n\n"
      },
      "IfcValve.GASTAP": {
        "Parent": "IfcValve",
        "Description": "Gas tap typically used for venting or discharging gas from a system.\n\n\n",
        "Psets": {
          "Pset_ValveTypeGasTap": {
            "Properties": {
              "HasHoseUnion": {
                "type": "boolean",
                "Description": "Indicates whether the drawoff cock is fitted with a hose union connection (= TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcValve.ANTIVACUUM": {
        "Parent": "IfcValve",
        "Description": "Valve that opens to admit air if the pressure falls below atmospheric pressure.\n\n\n"
      },
      "IfcValve.DOUBLECHECK": {
        "Parent": "IfcValve",
        "Description": "An assembly that incorporates two valves used to prevent backflow.\n\n\n"
      },
      "IfcValve.ISOLATING": {
        "Parent": "IfcValve",
        "Description": "Valve that closes off flow in a pipeline.\n\n\n",
        "Psets": {
          "Pset_ValveTypeIsolating": {
            "Properties": {
              "IsNormallyOpen": {
                "type": "boolean",
                "Description": "If TRUE, the valve is normally open. If FALSE is is normally closed.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsolatingPurpose": {
                "type": "PEnum_IsolatingPurpose",
                "Description": "Defines the purpose for which the isolating valve is used since the way in which the valve is identified as an isolating valve may be in the context of its use. Note that unless there is a contextual name for the isolating valve (as in the case of a Landing Valve on a rising fire main), then the value assigned shoulkd be UNSET.\n",
                "values": [
                  "LANDING",
                  "LANDINGWITHPRESSUREREGULATION"
                ]
              }
            }
          }
        }
      },
      "IfcValve.DOUBLEREGULATING": {
        "Parent": "IfcValve",
        "Description": "Valve used to facilitate regulation of fluid flow in a system.\n\n\n"
      },
      "IfcValve.PRESSURERELIEF": {
        "Parent": "IfcValve",
        "Description": "Spring or weight loaded valve that automatically discharges to a safe place fluid that has built up to excessive pressure in pipes or fittings.\n\n\n",
        "Psets": {
          "Pset_ValveTypePressureRelief": {
            "Properties": {
              "ReliefPressure": {
                "type": "real",
                "Description": "The pressure at which the spring or weight in the valve is set to discharge fluid.\n"
              }
            }
          }
        }
      },
      "IfcValve.CHECK": {
        "Parent": "IfcValve",
        "Description": "Valve that permits water to flow in one direction only and is enclosed when there is no flow (2 port).\n\n\n"
      },
      "IfcValve.REGULATING": {
        "Parent": "IfcValve",
        "Description": ""
      },
      "IfcValve.GASCOCK": {
        "Parent": "IfcValve",
        "Description": ""
      },
      "IfcValve.COMMISSIONING": {
        "Parent": "IfcValve",
        "Description": "Valve used to facilitate commissioning of a system (2 port).\n\n\n"
      },
      "IfcValve.STOPCOCK": {
        "Parent": "IfcValve",
        "Description": "An isolating valve used on a domestic water service.\n\n\n"
      },
      "IfcValve.DIVERTING": {
        "Parent": "IfcValve",
        "Description": "Valve that enables flow to be diverted from one branch of a pipeline to another (3 port).\n\n\n"
      },
      "IfcValve.STEAMTRAP": {
        "Parent": "IfcValve",
        "Description": ""
      },
      "IfcValve.CHANGEOVER": {
        "Parent": "IfcValve",
        "Description": "Valve that enables flow to be switched between pipelines (3 or 4 port).\n\n\n"
      },
      "IfcValve.DRAWOFFCOCK": {
        "Parent": "IfcValve",
        "Description": "A valve used to remove fluid from a piping system.\n\n\n",
        "Psets": {
          "Pset_ValveTypeDrawOffCock": {
            "Properties": {
              "HasHoseUnion": {
                "type": "boolean",
                "Description": "Indicates whether the drawoff cock is fitted with a hose union connection (= TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcValve.FLUSHING": {
        "Parent": "IfcValve",
        "Description": "",
        "Psets": {
          "Pset_ValveTypeFlushing": {
            "Properties": {
              "FlushingRate": {
                "type": "real",
                "Description": "The predetermined quantity of water to be flushed.\n"
              },
              "HasIntegralShutOffDevice": {
                "type": "boolean",
                "Description": "Indication of whether the flushing valve has an integral shut off device fitted (set TRUE) or not (set FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsHighPressure": {
                "type": "boolean",
                "Description": "Indication of whether the flushing valve is suitable for use on a high pressure water main (set TRUE) or not (set FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcValve.AIRRELEASE": {
        "Parent": "IfcValve",
        "Description": "Valve used to release air from a pipe or fitting.\n\n\n",
        "Psets": {
          "Pset_ValveTypeAirRelease": {
            "Properties": {
              "IsAutomatic": {
                "type": "boolean",
                "Description": "Indication of whether the valve is automatically operated (TRUE) or manually operated (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcValve.FAUCET": {
        "Parent": "IfcValve",
        "Description": "Faucet valve typically used as a flow discharge.\n\n\n",
        "Psets": {
          "Pset_ValveTypeFaucet": {
            "Properties": {
              "FaucetFunction": {
                "type": "PEnum_FaucetFunction",
                "Description": "Defines the operating temperature of a faucet that may be specified.\n",
                "values": [
                  "COLD",
                  "HOT",
                  "MIXED"
                ]
              },
              "FaucetOperation": {
                "type": "PEnum_FaucetOperation",
                "Description": "Defines the range of ways in which a faucet can be operated that may be specified where:\n\n\n\nCeramicDisc: Quick action faucet with a ceramic seal to open or close the orifice\n\n.\n\nLeverHandle: Quick action faucet that is operated by a lever handle\n\n.\n\nNonConcussiveSelfClosing:\t Self closing faucet that does not induce surge pressure\n\n.\n\nQuarterTurn: Quick action faucet that can be fully opened or shut by turning the operating mechanism through 90 degrees.\n\nQuickAction: Faucet that can be opened or closed fully with a single small movement of the operating mechanism\n\n.\n\nScrewDown: Faucet in which a plate or disc is moved, by the rotation of a screwed spindle, to close or open the orifice.\n\nSelfClosing: Faucet that is opened by pressure of the top of an operating spindle and is closed under the action of a spring or weight when the pressure is released.\n\nTimedSelfClosing: \tSelf closing faucet that discharges for a predetermined period of time\n\n.\n",
                "values": [
                  "CERAMICDISC",
                  "LEVERHANDLE",
                  "NONCONCUSSIVESELFCLOSING",
                  "QUARTERTURN",
                  "QUICKACTION",
                  "SCREWDOWN",
                  "SELFCLOSING",
                  "TIMEDSELFCLOSING"
                ]
              },
              "FaucetTopDescription": {
                "type": "string",
                "Description": "Description of the operating mechanism/top of the faucet.\n"
              },
              "FaucetType": {
                "type": "PEnum_FaucetType",
                "Description": "Defines the range of faucet types that may be specified where:\n\n\n\nBib:\t Faucet with a horizontal inlet and a nozzle that discharges downwards.\n\nGlobe:\t Faucet fitted through the end of a bath, with a horizontal inlet, a partially spherical body and a vertical nozzle.\n\nDiverter: \tCombination faucet assembly with a valve to enable the flow of mixed water to be transferred to a showerhead.\n\nDividedFlowCombination:\t Combination faucet assembly in which hot and cold water are kept separate until emerging from a common nozzle\n\n.\n\nPillar:\t Faucet that has a vertical inlet and a nozzle that discharges downwards\n\n.\n\nSingleOutletCombination =\t Combination faucet assembly in which hot and cold water mix before emerging from a common nozzle\n\n.\n\nSpray:\t Faucet with a spray outlet\n\n.\n\nSprayMixing:\t Spray faucet connected to hot and cold water supplies that delivers water at a temperature determined during use.\n",
                "values": [
                  "BIB",
                  "DIVERTER",
                  "DIVIDEDFLOWCOMBINATION",
                  "GLOBE",
                  "PILLAR",
                  "SINGLEOUTLETCOMBINATION",
                  "SPRAY",
                  "SPRAYMIXING"
                ]
              },
              "Finish": {
                "type": "string",
                "Description": "Finish selection for this object.\n\nHere specification of the surface finish for informational purposes.\n"
              }
            }
          }
        }
      },
      "IfcValve.PRESSUREREDUCING": {
        "Parent": "IfcValve",
        "Description": "Valve that reduces the pressure of a fluid immediately downstream of its position in a pipeline to a preselected value or by a predetermined ratio.\n\n\n",
        "Psets": {
          "Pset_ValveTypePressureReducing": {
            "Properties": {
              "DownstreamPressure": {
                "type": "real",
                "Description": "The operating pressure of the fluid downstream of the pressure reducing valve.\n"
              },
              "UpstreamPressure": {
                "type": "real",
                "Description": "The operating pressure of the fluid upstream of the pressure reducing valve.\n"
              }
            }
          }
        }
      },
      "IfcValve.MIXING": {
        "Parent": "IfcValve",
        "Description": "Valve that enables flow from two branches of a pipeline to be mixed together (3 port).\n\n\n",
        "Psets": {
          "Pset_ValveTypeMixing": {
            "Properties": {
              "MixerControl": {
                "type": "string",
                "Description": "Defines the form of control of the mixing valve.\n"
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the waste disposal unit.\n"
              }
            }
          }
        }
      },
      "IfcVibrationIsolator": {
        "Parent": "IfcElementComponent",
        "Description": "A vibration isolator is a device used to minimize the effects of vibration transmissibility in a structure.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Qto_VibrationIsolatorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcVibrationIsolator.SPRING": {
        "Parent": "IfcVibrationIsolator",
        "Description": "Spring type vibration isolator.\n\n\n",
        "Psets": {
          "Pset_VibrationIsolatorTypeCommon": {
            "Properties": {
              "IsolatorCompressibility": {
                "type": "real",
                "Description": "The compressibility of the vibration isolator.\n"
              },
              "IsolatorStaticDeflection": {
                "type": "real",
                "Description": "Static deflection of the vibration isolator.\n"
              },
              "MaximumSupportedWeight": {
                "type": "real",
                "Description": "The maximum weight that can be carried by the vibration isolator.\n"
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "VibrationTransmissibility": {
                "type": "real",
                "Description": "The vibration transmissibility percentage.\n"
              }
            }
          }
        }
      },
      "IfcVibrationIsolator.COMPRESSION": {
        "Parent": "IfcVibrationIsolator",
        "Description": "Compression type vibration isolator.\n\n\n",
        "Psets": {
          "Pset_VibrationIsolatorTypeCommon": {
            "Properties": {
              "IsolatorCompressibility": {
                "type": "real",
                "Description": "The compressibility of the vibration isolator.\n"
              },
              "IsolatorStaticDeflection": {
                "type": "real",
                "Description": "Static deflection of the vibration isolator.\n"
              },
              "MaximumSupportedWeight": {
                "type": "real",
                "Description": "The maximum weight that can be carried by the vibration isolator.\n"
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "VibrationTransmissibility": {
                "type": "real",
                "Description": "The vibration transmissibility percentage.\n"
              }
            }
          }
        }
      },
      "IfcVibrationIsolator.BASE": {
        "Parent": "IfcVibrationIsolator",
        "Description": "Base isolator preventing transfer of energy from the ground to the structure.\n\n\n",
        "Psets": {
          "Pset_VibrationIsolatorTypeCommon": {
            "Properties": {
              "IsolatorCompressibility": {
                "type": "real",
                "Description": "The compressibility of the vibration isolator.\n"
              },
              "IsolatorStaticDeflection": {
                "type": "real",
                "Description": "Static deflection of the vibration isolator.\n"
              },
              "MaximumSupportedWeight": {
                "type": "real",
                "Description": "The maximum weight that can be carried by the vibration isolator.\n"
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "VibrationTransmissibility": {
                "type": "real",
                "Description": "The vibration transmissibility percentage.\n"
              }
            }
          }
        }
      },
      "IfcActor": {
        "Parent": "IfcObject",
        "Description": "The _IfcActor_ defines all actors or human agents involved in a project during its full life cycle. It facilitates the use of person and organization definitions in the resource part of the IFC object model. This includes name, address, telecommunication addresses, and roles.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0\n\n\n",
        "Psets": {
          "Pset_ActorCommon": {
            "Properties": {
              "Category": {
                "type": "string",
                "Description": "Designation of the category into which the actors in the population belong.\n"
              },
              "NumberOfActors": {
                "type": "number",
                "Description": "The number of actors that are to be dealt with together in the population.\n"
              },
              "SkillLevel": {
                "type": "string",
                "Description": "Skill level exhibited by the actor and which indicates an extent of their capability to perform actions on the artefacts upon which they can act.\n"
              }
            }
          }
        }
      },
      "IfcControl": {
        "Parent": "IfcObject",
        "Description": "_IfcControl_ is the abstract generalization of all concepts that control or constrain the utilization of products, processes, or resources in general. It can be seen as a regulation, cost schedule, request or order, or other requirements applied to a product, process or resource whose requirements and provisions must be fulfilled.\n\n\n\n> EXAMPLE&nbsp; Controls include action requests, cost schedules, project orders, work plans, and work calendars.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _Identification_ added.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "Identification": {
                "type": "string",
                "Description": "An identifying designation given to a control\\X\\0D\n    It is the identifier at the occurrence level. \\X\\0D\n    \\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE Attribute unified by promoting from various subtypes of _IfcControl_."
              }
            }
          }
        }
      },
      "IfcGroup": {
        "Parent": "IfcObject",
        "Description": "_IfcGroup_ is an generalization of any arbitrary group. A group is a logical collection of objects. It does not have its own position, nor can it hold its own shape representation. Therefore a group is an aggregation under some non-geometrical / topological grouping aspects.\n\n\n\n> EXAMPLE&nbsp; An example for a group is a system, since it groups elements under the aspect of their role, regardless of their position in a building. One of the most important usage of a group representing a system is the _IfcDistributionSystem_, that groups distribution components, such as space heaters and valves into a heating system.\n\n\n\nA group can hold any collection of objects, the relationship _IfcRelAssignsToGroup_ is used to establish the group collection. Objects within a group are\u00a0products, processes, controls, resources, actors or other groups, thus groups can be nested. An object can be part of zero, one, or many groups. Grouping relationships are not required to be hierarchical nor do they imply a dependency.\n\n\n\nGroups are assigned to other objects (such as a process or a resource) by the relationship object that refers to the corresponding object:\n\n\n\n* Process: assigned using _IfcRelAssignsToProcess_\n\n* Resource: assigned using _IfcRelAssignsToResource_\n\n* Controls: affecting the group using _IfcRelAssignsToControl_\n\n\n\nA group can be exchanged without having already objects within the group collection.\n\n\n\n_IfcGroup_ does not define an own object coordinate system, nor does it have an independent shape representation.\n\n\n\n> NOTE&nbsp; Use _IfcRelAggregates_ together with the appropriate subtypes of _IfcProduct_ to define an aggregation of products that may have its own position and shape representation. This relationship shall be used to create a product breakdown structure.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The inverse _IsGroupedBy_ relationship is set to 0..n\n\n\n"
      },
      "IfcObject": {
        "Parent": "IfcObjectDefinition",
        "Description": "An _IfcObject_ is the generalization of any semantically treated thing or process. Objects are things as they appear - i.e. occurrences.\n\n\n\n> NOTE&nbsp; Examples of _IfcObject_ include physically tangible items such as wall, beam or covering, physically existing items such as spaces, or conceptual items such as grids or virtual boundaries. It also stands for processes such as work tasks, for controls such as cost items, or for actors such as persons involved in the design process.\n\n\n\nObjects can be named, using the inherited _Name_ attribute, which should be a user recognizable label for the object occurrance. Further explanations to the object can be given using the inherited _Description_ attribute. The _ObjectType_ attribute is used:\n\n\n\n* to store the user defined value for all subtypes of _IfcObject_, where a _PredefinedType_ attribute is given, and its value is set to USERDEFINED.\n\n* to provide a type information (could be seen as a very lightweight classifier) of the subtype of _IfcObject_, if no _PredefinedType_ attribute is given. This is often the case, if no comprehensive list of predefined types is available.\n\n\n\nObjects are independent pieces of information that might contain or reference other pieces of information. There are several relationships in which objects can be involved:\n\n\n\n* **Association to external/internal resource information** - an association relationship that refers to external/internal sources of information. See supertype _IfcObjectDefinition_ for more information.\n\n* **Assignment of other objects** - an assignment relationship that refers to other types of objects. See supertype _IfcObjectDefinition_ for more information.\n\n* **Aggregation of other objects** - an aggregation relationship that establishes a whole/part relation. Objects can either be a whole, or a part, or both. See supertype _IfcObjectDefinition_ for more information.\n\n* **Assignment of a type** : _IsTypedBy_ - a definition relationship _IfcRelDefinesByType_ that uses a type definition to define the common characteristics of this occurrences, potentially including the common shape representation and common properties of all object occurrences assigned to this type. It is a specific - occurrence relationship with implied dependencies (as the occurrence properties depend on the properties of the type, but may override them).\n\n* **Assignment of a partial type** : _IsDeclaredBy_, _Declares_ - a definition relationship _IfcRelDefinesByObject_ that uses a component of a type definition (a part of a type, called the \"declaring part\") to define a component of an occurence (part of occurrence, called the \"reflected part\"). This is also refered to as a \"deep copy\". The common characteristics of all parts in the occurrence are defined by parts in the type. It is a specific - occurrence relationship with implied dependencies (as the occurrence properties depend on the properties of the type, but may override them).  \n\n* **Assignment of property sets** : _IsDefinedBy_ - a definition relationship _IfcRelDefinesByProperties_ that assignes property set definitions to the object occurrence.\n\n\n\n> NOTE&nbsp; See _IfcRelDefinesByType_ for an explanatory figure. Also see there for how to override type properties by occurrence properties. See _IfcRelDefinesByObject_ for an explanatory figure for the assignment of a partial type.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The inverse relationships _Declares_, _IsDeclaredBy_, and _IsTypedBy_ have been added, types are not longer included in the _IsDefinesBy_ relationship. _IfcProject_ has been promoted to be a subtype of _IfcObjectDefinition_ -&gt; _IfcContext_.\n\n\n\n{ .spec-head}\n\nInformal Propositions:\n\n\n\n1. A partial type assignment, i.e. the inverse attribute _IsDeclaredBy_, or _Declares_ shall only be used, if the object is part of a decomposition, i.e. if either _IsDecomposedBy_, or _Decomposes_ is exerted.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "ObjectType": {
                "type": "string",
                "Description": "The type denotes a particular type that indicates the object further. The use has to be established at the level of instantiable subtypes. In particular it holds the user defined type, if the enumeration of the attribute _PredefinedType_ is set to USERDEFINED."
              }
            }
          }
        }
      },
      "IfcObjectDefinition": {
        "Parent": "IfcRoot",
        "Description": "An _IfcObjectDefinition_ is the generalization of any semantically treated thing or process, either being a type or an occurrences. Object defintions can be named, using the inherited _Name_ attribute, which should be a user recognizable label for the object occurrance. Further explanations to the object can be given using the inherited _Description_ attribute. A context is a specific kind of object definition as it provides the project or library context in which object types and object occurrences are defined.\n\n\n\nObjects are independent pieces of information that might contain or reference other pieces of information. There are four essential kinds of relationships in which object definitons (by their instantiable subtypes) can be involved:\n\n\n\n* **Assignment of other objects** - an assignment relationship (_IfcRelAssigns_) that refers to other types of objects and creates a bi-directional association. The semantic of the assignment is established at the level of the subtypes of the general _IfcRelAssigns_ relationship. There is no dependency implied a priori by the assignment.\n\n* **Association to external resources** - an association relationship (_IfcRelAssociates_) that refers to external sources of information (most notably a classification or document) and creates a uni-directional association. There is no dependency implied by the association.\n\n* **Aggregation of other objects** - an aggregation relationship (_IfcRelAggregates_) that establishes an unordered, spatial whole/part relation and creates a bi-directional relation. There is an implied dependency established.\n\n* **Nesting of other objects** - a nesting relationship (_IfcRelNests_) that establishes an ordered, non-spatial whole/part relation and creates a bi-directional relation. There is an implied dependency established.\n\n* **Declaration within a context** - a relationship (_IfcRelDeclares_) of the uppermost object definition within the object definition tree (e.g. the summary object within an object nesting tree) to the context (a project or project library). It applies the units, representation context and other context information to this object definition and all dependent ones.\n\n\n\n> NOTE&nbsp; The link between the uppermost object in the spatial structure tree, that is _IfcSite_ or _ifcBuilding_, and the context provided by _IfcProject_ is created using the _IfcRelAggregates_ relationship. See _IfcProject_ for more information.\n\n\n\n> HISTORY&nbsp; New abstract entity in IFC2x3.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE The new subtype _IfcContext_ and the relationship to context _HasContext_ has been added . The decomposition relationship is split into ordered nesting (_Nests_, _IsNestedBy_) and un-ordered aggregating (_Decomposes_, _IsDecomposedBy_).\n\n\n"
      },
      "IfcProcess": {
        "Parent": "IfcObject",
        "Description": "_IfcProcess_ is defined as one individual activity or event, that is ordered in time, that has sequence relationships with other processes, which transforms input in output, and may connect to other other processes through input output relationships. An _IfcProcess_ can be an activity (or task), or an event. It takes usually place in building construction with the intent of designing, costing, acquiring, constructing, or maintaining products or other and similar tasks or procedures. Figure 1 illustrates process relationships.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO9000:  \n\n> A process is a set of activities that are interrelated or that interact with one another. Processes use resources to transform inputs into outputs. Processes are interconnected because the output from one process becomes the input for another process. In effect, processes are \"glued\" together by means of such input output relationships.\n\n\n\n![\"icon diagram\"](../../../../figures/ifcprocess_icon_fig.png \"Figure 1 &mdash; Process relationships and the ICON process diagram.\")\n\n\n\nProcess information relates to other objects by establishing the following relationships:\n\n\n\n* **Nesting of processes** : _IfcRelNests_ - A process can contain sub processes and thereby be nested.\n\n* **Sequencing of processes** : _IfcRelSequence_ - Processes can be placed in sequence (including overlapping for parallel tasks), and have predecessors and successors.\n\n* **Assigning process to schedules** : _IfcRelAssignsToControl_ - Activities such as tasks, and predominately summary tasks, are assigned to a work schedule.\n\n* **Having a product assigned to the process as input** : _IfcRelAssignsToProcess_ - Products can be assigned as input to a process, such as for construction process planning.\n\n* **Having a product assigned to the process as output** : _IfcRelAssignsToProduct_ - Products can be assigned as output to a process, such as for construction process planning.\n\n* **Having a control assigned to the process as process control** : _IfcRelAssignsToProcess_ - Items that act as a control onto the process can be assigned to a process, such as for cost management (a cost item assigned to a work task).\n\n* **Having a resource assigned to the process as consumed by the process** : _IfcRelAssignsToProcess_ - Items that act as a mechanism to a process, such as labor, material and equipment in cost calculations.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0.\n\n\n\n{ .change-ifc2x}\n\n> IFC2x CHANGE&nbsp; The attribute _Productivity_ has been removed.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The attribute _Identification_ has been promoted from subtypes _IfcTask_ and others.\n\n\n",
        "Psets": {
          "Pset_Risk": {
            "Properties": {
              "RiskName": {
                "type": "string",
                "Description": "A locally unique identifier for the risk entry that can be used to track the development and mitiagtion of the risk throughout the project life cycle\n"
              },
              "RiskType": {
                "type": "PEnum_RiskType",
                "Description": "Identifies the predefined types of risk from which the type required may be set.\n",
                "values": [
                  "BUSINESS",
                  "HAZARD",
                  "HEALTHANDSAFETY",
                  "INSURANCE"
                ]
              },
              "NatureOfRisk": {
                "type": "string",
                "Description": "A description of the generic nature of the context or hazard that might be encountered.\n"
              },
              "AssociatedProduct": {
                "type": "string",
                "Description": "An indication or link to any associated product or material that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encording template\n"
              },
              "AssociatedActivity": {
                "type": "string",
                "Description": "An indication or link to any associated activity or process that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encording template\n"
              },
              "AssociatedLocation": {
                "type": "string",
                "Description": "An indication or link to any associated location or space that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encording template\n"
              },
              "RiskAssessmentMethodology": {
                "type": "string",
                "Description": "An indication or link to the chosen risk assessment methodology, for example PAS1192-6 or a chosen ISO13100 annex.\n"
              },
              "UnmitigatedRiskLikelihood": {
                "type": "penum_riskrating",
                "Description": "Identifies the likelihood of the hazard prior to any specific mitigation.\n"
              },
              "UnmitigatedRiskConsequence": {
                "type": "penum_riskrating",
                "Description": "Identifies the consequence of the hazard prior to any specific mitigation.\n"
              },
              "UnmitigatedRiskSignificance": {
                "type": "penum_riskrating",
                "Description": "Identifies the signifiance of the risk given the likelihood and consequence prior to any specific mitigation.\n"
              },
              "MitigationPlanned": {
                "type": "string",
                "Description": "The planned (agreed and irrevocable) mitigation of the likelhood and consequences of the hazard.\n"
              },
              "MitigatedRiskLikelihood": {
                "type": "penum_riskrating",
                "Description": "Identifies the likelihood of the hazard given the planned mitigation.\n"
              },
              "MitigatedRiskConsequence": {
                "type": "penum_riskrating",
                "Description": "Identifies the consequence of the hazard given the planned mitigation.\n"
              },
              "MitigatedRiskSignificance": {
                "type": "penum_riskrating",
                "Description": "Identifies the signifiance of the risk given the mitigation of likelihood and consequence.\n"
              },
              "MitigationProposed": {
                "type": "string",
                "Description": "Any proposed, but not yet agreed and irrevocable, mitigation of the likelhood and consequences of the hazard.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Identification": {
                "type": "string",
                "Description": "An identifying designation given to a process or activity.\\X\\0D\n    It is the identifier at the occurrence level. \\X\\0D\n    \\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE Attribute promoted from subtypes."
              },
              "LongDescription": {
                "type": "string",
                "Description": "An extended description or narrative that may be provided.\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE&nbsp; New attribute."
              }
            }
          }
        }
      },
      "IfcProduct": {
        "Parent": "IfcObject",
        "Description": "The _IfcProduct_ is an abstract representation of any object that relates to a geometric or spatial context. An _IfcProduct_ occurs at a specific location in space if it has a geometric representation assigned. It can be placed relatively to other products, but ultimately relative to the project coordinate system. The _ObjectPlacement_ attribute establishes the coordinate system in which all points and directions used by the geometric representation items under _Representation_ are founded. The _Representation_ is provided by an _IfcProductDefinitionShape_ being either a geometric shape representation, or a topology representation (with or without underlying geometry of the topological items).\n\n\n\nProducts include manufactured, supplied or created objects (referred to as elements) for incorporation into an AEC/FM project. This also includes objects that are created indirectly by other products, as spaces are defined by bounding elements. Products can be designated for permanent use or temporary use, an example for the latter is formwork. Products are defined by their properties and representations.\n\n\n\nIn addition to physical products (covered by the subtype _IfcElement_) and spatial items (covered by the subtype _IfcSpatialElement_) the _IfcProduct_ also includes non-physical items, that relate to a geometric or spatial contexts, such as grid, port, annotation, structural actions, etc.\n\n\n\nAny instance of _IfcProduct_ defines a particular occurrence of a product, the common type information, that relates to many similar (or identical) occurrences of _IfcProduct_, is handled by the _IfcTypeProduct_ (and its subtypes), assigned to one or many occurrences of _IfcProduct_ by using the objectified relationship _IfcRelDefinesByType_. The _IfcTypeProduct_ may provide, in addition to common properties, also a common geometric representation for all occurrences.\n\n\n\n> NOTE&nbsp; See _IfcTypeProduct_ for how to use a common geometric representation and _IfcRelDefinesByType_ for using and overriding common properties.\n\n\n\nOn a generic level products can be assigned to processes, controls, resources, project by using the relationship objects that refer to the corresponding object:\n\n\n\n* **Having a control applied**: assigned using _IfcRelAssignsToControl_ linking the _IfcProduct_ to an _IfcControl_\n\n* **Being assigned to a process**: assigned using _IfcRelAssignsToProcess_ linking the _IfcProduct_ to an _IfcProcess_\n\n* **Being assigned to a resource**: assigned using _IfcRelAssignsToResource_ linking the _IfcProduct_ to an _IfcResource_\n\n\n\n> EXAMPLE&nbsp; An example of the control relationship is the assignment of a performance history to a distribution element. An example of process assignment relationship is the assignment of products like wall, slab, column to a contruction task for construction planning. And an example of resource assignment relationship is the assignment of products to a construction resource that consumes the product.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n",
        "Psets": {
          "Pset_Risk": {
            "Properties": {
              "RiskName": {
                "type": "string",
                "Description": "A locally unique identifier for the risk entry that can be used to track the development and mitiagtion of the risk throughout the project life cycle\n"
              },
              "RiskType": {
                "type": "PEnum_RiskType",
                "Description": "Identifies the predefined types of risk from which the type required may be set.\n",
                "values": [
                  "BUSINESS",
                  "HAZARD",
                  "HEALTHANDSAFETY",
                  "INSURANCE"
                ]
              },
              "NatureOfRisk": {
                "type": "string",
                "Description": "A description of the generic nature of the context or hazard that might be encountered.\n"
              },
              "AssociatedProduct": {
                "type": "string",
                "Description": "An indication or link to any associated product or material that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encording template\n"
              },
              "AssociatedActivity": {
                "type": "string",
                "Description": "An indication or link to any associated activity or process that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encording template\n"
              },
              "AssociatedLocation": {
                "type": "string",
                "Description": "An indication or link to any associated location or space that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encording template\n"
              },
              "RiskAssessmentMethodology": {
                "type": "string",
                "Description": "An indication or link to the chosen risk assessment methodology, for example PAS1192-6 or a chosen ISO13100 annex.\n"
              },
              "UnmitigatedRiskLikelihood": {
                "type": "penum_riskrating",
                "Description": "Identifies the likelihood of the hazard prior to any specific mitigation.\n"
              },
              "UnmitigatedRiskConsequence": {
                "type": "penum_riskrating",
                "Description": "Identifies the consequence of the hazard prior to any specific mitigation.\n"
              },
              "UnmitigatedRiskSignificance": {
                "type": "penum_riskrating",
                "Description": "Identifies the signifiance of the risk given the likelihood and consequence prior to any specific mitigation.\n"
              },
              "MitigationPlanned": {
                "type": "string",
                "Description": "The planned (agreed and irrevocable) mitigation of the likelhood and consequences of the hazard.\n"
              },
              "MitigatedRiskLikelihood": {
                "type": "penum_riskrating",
                "Description": "Identifies the likelihood of the hazard given the planned mitigation.\n"
              },
              "MitigatedRiskConsequence": {
                "type": "penum_riskrating",
                "Description": "Identifies the consequence of the hazard given the planned mitigation.\n"
              },
              "MitigatedRiskSignificance": {
                "type": "penum_riskrating",
                "Description": "Identifies the signifiance of the risk given the mitigation of likelihood and consequence.\n"
              },
              "MitigationProposed": {
                "type": "string",
                "Description": "Any proposed, but not yet agreed and irrevocable, mitigation of the likelhood and consequences of the hazard.\n"
              }
            }
          }
        }
      },
      "IfcProxy": {
        "Parent": "IfcProduct",
        "Description": "_IfcProxy_ is intended to be a kind of a container for wrapping objects which are defined by associated properties, which may or may not have a geometric representation and placement in space. A proxy may have a semantic meaning, defined by the _Name_ attribute, and property definitions, attached through the property assignment relationship, which definition may be outside of the definitions given by the current release of IFC.\n\n\n\nThe _ProxyType_ may give an indication to which high level semantic breakdown of object the semantic definition of the proxy relates to. the _Tag_ attribute may be used to assign a human or system interpretable identifier (such as a serial number or bar code).\n\n\n\n> NOTE&nbsp; Given that only a limited number of semantic constructs can be formally defined within IFC (and it will never be possible to define all), there has to be a mechanism for capturing those constructs that are not (yet) defined by IFC.\n\n\n\n> NOTE&nbsp; Product proxies are a mechanism that allows to exchange data that is part of the project but not necessarily part of the IFC model. Those proxies may have geometric representations assigned.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.5.\n\n\n\n{ .deprecated}\n\n> DEPRECATION&nbsp; The entity is deprecated and shall not be used.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "ProxyType": {
                "values": [
                  "PRODUCT",
                  "PROCESS",
                  "CONTROL",
                  "RESOURCE",
                  "ACTOR",
                  "GROUP",
                  "PROJECT",
                  "NOTDEFINED"
                ],
                "type": "IfcObjectTypeEnum",
                "Description": "High level (and only) semantic meaning attached to the IfcProxy, defining the basic construct type behind the Proxy, e.g. Product or Process."
              },
              "Tag": {
                "type": "string",
                "Description": "The tag (or label) identifier at the particular instance of a product, e.g. the serial number, or the position number. It is the identifier at the occurrence level."
              }
            }
          }
        }
      },
      "IfcResource": {
        "Parent": "IfcObject",
        "Description": "_IfcResource_ contains the information needed to represent the costs, schedule, and other impacts from the use of a thing in a process. It is not intended to use _IfcResource_ to model the general properties of the things themselves, while an optional linkage from _IfcResource_ to the things to be used can be specified (specifically, the relationship from subtypes of _IfcResource_ to _IfcProduct_ through the _IfcRelAssignsToResource_ relationship).\n\n\n\nThere are two basic intended uses of _IfcResource_. First, if the attributes of the thing are not needed for the purpose of the use of _IfcResource_, or the types of things are not explicitly modeled in IFC yet, then the linkage between the resource and the thing doesn't have to be instantiated in the system. That is, the attributes of _IfcResource_ (or its subtypes) alone are sufficient to represent the use of the thing as a resource for the purpose of the project.\n\n\n\n> EXAMPLE&nbsp; construction equipment such as earth-moving vehicles or tools are not currently modeled within the IFC. For the purpose of estimating and scheduling, these can be represented using subtypes of _IfcResource_ alone.\n\n\n\nSecond, if the attributes of the thing are needed for the use of _IfcResource_ objects, and they are modeled explicitly as objects, then the _IfcResource_ instances can be linked to the instances of the type of the things being referenced. Things that might be used as resources and that are already modeled in the IFC include physical products, people and organizations, and materials. The relationship object _IfcRelAssignsToResource_ is provided for this approach.\n\n\n\nThe inherited attribute _ObjectType_ is used as a textual code that identifies the resource type.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n\n{ .change-ifc2x}\n\n> IFC2x CHANGE&nbsp; The attributes BaseUnit and ResourceConsumption have been removed from the abstract entity; they are reintroduced at a lower level in the hierarchy.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "Identification": {
                "type": "string",
                "Description": "An identifying designation given to a resource.\\X\\0D\n    It is the identifier at the occurrence level. \\X\\0D\n    \\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE Attribute promoted from subtype _IfcConstructionResource_."
              },
              "LongDescription": {
                "type": "string",
                "Description": "A detailed description of the resource (e.g. the skillset for a labor resource).  \\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE&nbsp; The attribute _LongDescription_ is added replacing the _ResourceGroup_ attribute at subtype _IfcConstructionResource_."
              }
            }
          }
        }
      },
      "IfcRoot": {
        "Description": "_IfcRoot_ is the most abstract and root class for all entity definitions that roots in the kernel or in subsequent layers of the IFC specification. It is therefore the common supertype of all IFC entities, beside those defined in an IFC resource schema. All entities that are subtypes of _IfcRoot_ can be used independently, whereas resource schema entities, that are not subtypes of _IfcRoot_, are not supposed to be independent entities.\n\n\n\n> NOTE&nbsp; View definitions and implementation agreement may impose additional restrictions on the use of the _OwnerHistory_ to handle object versioning.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The attribute _OwnerHistory_ has been made OPTIONAL.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "GlobalId": {
                "type": "string",
                "Description": "Assignment of a globally unique identifier within the entire software world."
              },
              "Name": {
                "type": "string",
                "Description": "Optional name for use by the participating software systems or users. For some subtypes of IfcRoot the insertion of the Name attribute may be required. This would be enforced by a where rule."
              },
              "Description": {
                "type": "string",
                "Description": "Optional description, provided for exchanging informative comments."
              }
            }
          }
        }
      },
      "IfcTypeObject": {
        "Parent": "IfcObjectDefinition",
        "Description": "The object type defines the specific information about a type, being common to all occurrences of this type. It refers to the specific level of the well recognized _generic - specific - occurrance_ modeling paradigm. The _IfcTypeObject_ gets assigned to the individual object instances (the occurrences) via the _IfcRelDefinesByType_ relationship.\n\n\n\n> NOTE&nbsp; The terms 'Type' and 'Style' are often used interchangeably.\n\n\n\nThe object type is represented by a set of property set definitions. The attached property sets describe the available alpha-numeric information about the object type. and are used to define all common properties that apply to all object occurrences of that type.\n\n\n\n> NOTE&nbsp; If a property having having the same name is used within the _IfcPropertySet_ assigned to an _IfcTypeObject_ (and subtypes) and to an occurrence of that type, then the occurrence property overrides the type property. See _IfcRelDefinesByType_ for an explanatory figure.\n\n\n\nObject types may be exchanged without being already assigned to objects. An object type may have an indication of the library (or catalogue) from which its definition originates. This association is handled by the inherited _HasAssociations_ relationship pointing to _IfcRelAssociatesLibrary_.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x\n\n\n\n{ .change-ifc2x3}\n\n> IFC2x3 CHANGE&nbsp; The _IfcTypeObject_ is now subtyped from the new supertype _IfcObjectDefinition_, and the attribute _HasPropertySets_ has been changed from a LIST into a SET.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The entity _IfcTypeObject_ shall not be instantiated from IFC4 onwards. It will be changed into an ABSTRACT supertype in future releases of IFC. The inverse attribute _Types_ has been renamed from _ObjectTypeOf_.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "ApplicableOccurrence": {
                "type": "string",
                "Description": "The attribute optionally defines the data type of the occurrence object, to which the assigned type object can relate. If not present, no instruction is given to which occurrence object the type object is applicable. The following conventions are used:\\X\\0D\n* The IFC entity name of the applicable occurrence using the IFC naming convention, CamelCase with IFC prefix\\X\\0D\n* It can be optionally followed by the predefined type after the separator \"/\" (forward slash), using uppercase\\X\\0D\n* If one type object is applicable to many occurrence objects, then those occurrence object names should be separate by comma \",\" forming a comma separated string. \\X\\0D\n\\X\\0D\n> EXAMPLE Refering to a furniture as applicable occurrence entity would be expressed as ''IfcFurnishingElement'', refering to a brace as applicable entity would be expressed as ''IfcMember/BRACE'', refering to a wall and wall standard case would be expressed as ''IfcWall, IfcWallStandardCase''."
              }
            }
          }
        }
      },
      "IfcTypeProduct": {
        "Parent": "IfcTypeObject",
        "Description": "_IfcTypeProduct_ defines a type definition of a product without being already inserted into a project structure (without having a placement), and not being included in the geometric representation context of the project.\u00a0It is used to define a product specification, that is, the specific product information that is common to all occurrences of that product type.\n\n\n\nAn _IfcTypeProduct_ may have a list of property set attached and an optional set of product representations. Values of these properties and the representation maps are common to all occurrences\u00a0of that product type.\u00a0The type-occurrence relationship is realized using the objectified relationship _IfcRelDefinesByType_.\n\n\n\n> NOTE&nbsp; The product representations are defined as representation maps, which may be assigned by a product instance through the representation item(s) being an _IfcShapeRepresentation_ and having _Items_ of type\u00a0_IfcMappedItem_.\n\n\n\nThe representations at the occurrence level (represented by subtypes of _IfcProduct_) can override the specific representations at the type level:\n\n\n\n* for geometric representations, a Cartesian transformation operator can be applied at the occurrence level.\n\n* for property sets, a property within an occurrence property set, assigned at the product occurrence, overrides the same property assigned to the product type.\n\n\n\nAn _IfcTypeProduct_ may be exchanged without being already assigned to subtypes of _IfcProduct_.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The entity _IfcTypeProduct_ shall not be instantiated from IFC4 onwards. It will be changed into an ABSTRACT supertype in future releases of IFC.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "Tag": {
                "type": "string",
                "Description": "The tag (or label) identifier at the particular type of a product, e.g. the article number (like the EAN). It is the identifier at the specific level."
              }
            }
          }
        }
      },
      "IfcMaterial": {
        "Parent": "IfcMaterialDefinition",
        "Description": "_IfcMaterial_ is a homogeneous or inhomogeneous substance that can be used to form elements (physical products or their components).\n\n\n\n_IfcMaterial_ is the basic entity for material designation and definition; this includes identification by name and classification (via reference to an external classification), as well as association of material properties (isotropic or anisotropic) defined by (subtypes of) _IfcMaterialProperties_. An instance of _IfcMaterial_ may be associated to an element or element type using the _IfcRelAssociatesMaterial_ relationship. The assignment might either be direct as a single material information, or via\n\n\n\n* a material layer set\n\n* a material profile set\n\n* a material constituent set\n\n\n\nAn _IfcMaterial_ may also have presentation information associated. Such presentation information is provided by _IfcMaterialDefinitionRepresentation_, associating curve styles, hatching definitions or surface colouring/rendering information to a material.\n\n\n\n> HISTORY\u00a0New entity in IFC4\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE\u00a0 The attributes _Description_ and _Category_ have been added.\n\n\n",
        "Psets": {
          "Pset_MaterialCombustion": {
            "Properties": {
              "CO2Content": {
                "type": "real",
                "Description": "Carbon dioxide (CO2) content of the products of combustion. This is measured in weight of CO2 per unit weight and is therefore unitless.\n"
              },
              "COContent": {
                "type": "real",
                "Description": "Carbon monoxide (CO) content of the products of combustion. This is measured in weight of CO per unit weight and is therefore unitless.\n"
              },
              "N20Content": {
                "type": "real",
                "Description": "Nitrous oxide (N2O) content of the products of combustion. This is measured in weight of N2O per unit weight and is therefore unitless.\n"
              },
              "SpecificHeatCapacity": {
                "type": "real",
                "Description": "Specific heat of the products of combustion: heat energy absorbed per temperature unit.\n"
              }
            }
          },
          "Pset_MaterialCommon": {
            "Properties": {
              "MassDensity": {
                "type": "real",
                "Description": "Material mass density.\n"
              },
              "MolecularWeight": {
                "type": "real",
                "Description": "Molecular weight of material (typically gas).\n"
              },
              "Porosity": {
                "type": "real",
                "Description": "The void fraction of the total volume occupied by material (Vbr - Vnet)/Vbr.\n"
              }
            }
          },
          "Pset_MaterialEnergy": {
            "Properties": {
              "GasPressure": {
                "type": "real",
                "Description": "Fill pressure (e.g. for between-pane gas fills): the pressure exerted by a mass of gas confined in a constant volume.\n"
              },
              "MoistureCapacityThermalGradient": {
                "type": "real",
                "Description": "Thermal gradient coefficient for moisture capacity. Based on water vapor density.\n"
              },
              "SolarRefractionIndex": {
                "type": "real",
                "Description": "Index of refraction (solar) defines the \"bending\" of the solar ray when it passes from one medium into another.\n"
              },
              "SpecificHeatTemperatureDerivative": {
                "type": "real",
                "Description": "Specific heat temperature derivative.\n"
              },
              "ThermalConductivityTemperatureDerivative": {
                "type": "real",
                "Description": "Thermal conductivity temperature derivative.\n"
              },
              "ViscosityTemperatureDerivative": {
                "type": "real",
                "Description": "Viscosity temperature derivative.\n"
              },
              "VisibleRefractionIndex": {
                "type": "real",
                "Description": "Index of refraction (visible) defines the \"bending\" of the sola! r ray in the visible spectrum when it passes from one medium into another.\n"
              }
            }
          },
          "Pset_MaterialFuel": {
            "Properties": {
              "CarbonContent": {
                "type": "real",
                "Description": "The carbon content in the fuel. This is measured in weight of carbon per unit weight of fuel and is therefore unitless.\n"
              },
              "CombustionTemperature": {
                "type": "real",
                "Description": "Combustion temperature of the material when air is at 298 K and 100 kPa.\n"
              },
              "HigherHeatingValue": {
                "type": "real",
                "Description": "Higher Heating Value is defined as the amount of energy released (MJ/kg) when a fuel is burned completely, and H2O is in liquid form in the combustion products.\n"
              },
              "LowerHeatingValue": {
                "type": "real",
                "Description": "Lower Heating Value is defined as the amount of energy released (MJ/kg) when a fuel is burned completely, and H2O is in vapor form in the combustion products.\n"
              }
            }
          },
          "Pset_MaterialHygroscopic": {
            "Properties": {
              "IsothermalMoistureCapacity": {
                "type": "real",
                "Description": "Based on water vapor density.\n"
              },
              "LowerVaporResistanceFactor": {
                "type": "real",
                "Description": "The vapor permeability relationship of air/material (typically value > 1), measured in low relative humidity (typically in 0/50 % RH).\n"
              },
              "MoistureDiffusivity": {
                "type": "real",
                "Description": "Moisture diffusivity is a transport property that is frequently used in the hygrothermal analysis of building envelope components.\n"
              },
              "UpperVaporResistanceFactor": {
                "type": "real",
                "Description": "The vapor permeability relationship of air/material (typically value > 1), measured in high relative humidity (typically in 95/50 % RH).\n"
              },
              "VaporPermeability": {
                "type": "real",
                "Description": "The rate of water vapor transmission per unit area per unit of vapor pressure differential under test conditions.\n"
              }
            }
          },
          "Pset_MaterialMechanical": {
            "Properties": {
              "DynamicViscosity": {
                "type": "real",
                "Description": "A measure of the viscous resistance of the material.\n"
              },
              "PoissonRatio": {
                "type": "real",
                "Description": "A measure of the lateral deformations in the elastic range.\n"
              },
              "ShearModulus": {
                "type": "real",
                "Description": "A measure of the shear modulus of elasticity of the material.\n"
              },
              "ThermalExpansionCoefficient": {
                "type": "real",
                "Description": "A measure of the expansion coefficient for warming up the material about one Kelvin.\n"
              },
              "YoungModulus": {
                "type": "real",
                "Description": "A measure of the Young's modulus of elasticity of the material.\n"
              }
            }
          },
          "Pset_MaterialOptical": {
            "Properties": {
              "SolarReflectanceBack": {
                "type": "real",
                "Description": "Reflectance at normal incidence (solar): back side. Defines the fraction of the solar ray that is reflected and not transmitted when the ray passes from one medium into another, at the \"back\" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics.\n"
              },
              "SolarReflectanceFront": {
                "type": "real",
                "Description": "Reflectance at normal incidence (solar): front side. Defines the fraction of the solar ray that is reflected and not transmitted when the ray passes from one medium into another, at the \"front\" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics.\n"
              },
              "SolarTransmittance": {
                "type": "real",
                "Description": "(Tsol): The ratio of incident solar radiation that directly passes through a shading system (also named \u03c4e). Note the following equation Asol + Rsol + Tsol = 1\n"
              },
              "ThermalIrEmissivityBack": {
                "type": "real",
                "Description": "Thermal IR emissivity: back side. Defines the fraction of thermal energy emitted per unit area to \"blackbody\" at the same temperature, through the \"back\" side of the material.\n"
              },
              "ThermalIrEmissivityFront": {
                "type": "real",
                "Description": "Thermal IR emissivity: front side. Defines the fraction of thermal energy emitted per unit area to \"blackbody\" at the same temperature, through the \"front\" side of the material.\n"
              },
              "ThermalIrTransmittance": {
                "type": "real",
                "Description": "Thermal IR transmittance at normal incidence. Defines the fraction of thermal energy that passes through per unit area, perpendicular to the surface.\n"
              },
              "VisibleReflectanceBack": {
                "type": "real",
                "Description": "Reflectance at normal incidence (visible): back side. Defines the fraction of the solar ray in the visible spectrum that is reflected and not transmitted when the ray passes from one medium into another, at the \"back\" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics.\n"
              },
              "VisibleReflectanceFront": {
                "type": "real",
                "Description": "Reflectance at normal incidence (visible): front side. Defines the fraction of the solar ray in the visible spectrum that is reflected and not transmitted when the ray passes from one medium into another, at the \"front\" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics.\n"
              },
              "VisibleTransmittance": {
                "type": "real",
                "Description": "Transmittance at normal incidence (visible). Defines the fraction of the visible spectrum of solar radiation that passes through per unit area, perpendicular to the surface.\n"
              }
            }
          },
          "Pset_MaterialThermal": {
            "Properties": {
              "BoilingPoint": {
                "type": "real",
                "Description": "The boiling point of the material (fluid).\n"
              },
              "FreezingPoint": {
                "type": "real",
                "Description": "The freezing point of the material (fluid).\n"
              },
              "SpecificHeatCapacity": {
                "type": "real",
                "Description": "Specific heat of the products of combustion: heat energy absorbed per temperature unit.\n"
              },
              "ThermalConductivity": {
                "type": "real",
                "Description": "The rate at which thermal energy is transmitted through the material.\n"
              }
            }
          },
          "Pset_MaterialWater": {
            "Properties": {
              "AcidityConcentration": {
                "type": "real",
                "Description": "Maximum CaCO3 equivalent that would neutralize the acid.\n"
              },
              "AlkalinityConcentration": {
                "type": "real",
                "Description": "Maximum alkalinity concentration (maximum sum of concentrations of each of the negative ions substances measured as CaCO3).\n"
              },
              "DissolvedSolidsContent": {
                "type": "real",
                "Description": "Fraction of the dissolved solids to the total amount of water. This is measured in weight of dissolved solids per weight of water and is therefore unitless.\n"
              },
              "Hardness": {
                "type": "real",
                "Description": "Water hardness as positive, multivalent ion concentration in the water (usually concentrations of calcium and magnesium ions in terms of calcium carbonate).\n"
              },
              "ImpuritiesContent": {
                "type": "real",
                "Description": "Fraction of impurities such as dust to the total amount of water. This is measured in weight of impurities per weight of water and is therefore unitless.\n"
              },
              "IsPotable": {
                "type": "boolean",
                "Description": "If TRUE, then the water is considered potable.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PHLevel": {
                "type": "real",
                "Description": "Maximum water PH in a range from 0-14.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Name": {
                "type": "string",
                "Description": "Name of the material. \\X\\0D\n> EXAMPLE A view definition may require _Material.Name_ to uniquely specify e.g. concrete or steel grade, in which case the attribute Material.Category could take the value ''Concrete'' or ''Steel''.\\X\\0D\n\\X\\0D\n> NOTE&nbsp; Material grade may have different meaning in different view definitions, e.g. strength grade for structural design and analysis, or visible appearance grade in architectural application. Also, more elaborate material grade definition may be associated as classification via inverse attribute _HasExternalReferences_."
              },
              "Description": {
                "type": "string",
                "Description": "Definition of the material in more descriptive terms than given by attributes _Name_ or _Category_.\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE&nbsp; The attribute has been added at the end of attribute list."
              },
              "Category": {
                "type": "string",
                "Description": "Definition of the category (group or type) of material, in more general terms than given by attribute _Name_.  \\X\\0D\n> EXAMPLE A view definition may require each _Material.Name_ to be unique, e.g. for each concrete or steel grade used in a project, in which case _Material.Category_ could take the values ''Concrete'' or ''Steel''.\\X\\0D\n\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE&nbsp; The attribute has been added at the end of attribute list."
              }
            }
          }
        }
      },
      "IfcMaterialDefinition": {
        "Description": "_IfcMaterialDefinition_ is a general supertype for all material related information items in IFC that have common material related properties that may include association of material with some shape parameters or assignments to identified parts of a component.\n\n\n\nThere are three ways of assigning materials to a single component or multiple components; they are characterized as:\n\n\n\n* by layer - assigning a material to a layer with constant thickness\n\n* by profile - assigning a material to a profile with a constant of varying shape along an extrusion\n\n* by constituents - assigning a material to an identified part of a component shape; the identification is by a keyword rather than by a shape parameter\n\n\n\nEach instantiable subtype of _IfcMaterialDefinition_ may have material properties assigned, or have an external classification of its definition. It can be assigned to either a subtype of _IfcElement_, or a subtype of _IfcElementType_ by using the objectified relationship _IfcRelAssociatesMaterial_.\n\n\n\n> HISTORY\u00a0 New entity in IFC4\n\n\n"
      },
      "IfcFireSuppressionTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": "A fire suppression terminal has the purpose of delivering a fluid (gas or liquid) that will suppress a fire.\n\n\n\nA fire suppression terminal provides for all forms of sprinkler, spreader and other form of terminal that is connected to a pipework system and intended to act in the role of suppressing a fire.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_FireSuppressionTerminalTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_FireSuppressionTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcFireSuppressionTerminal.BREECHINGINLET": {
        "Parent": "IfcFireSuppressionTerminal",
        "Description": "",
        "Psets": {
          "Pset_FireSuppressionTerminalTypeBreechingInlet": {
            "Properties": {
              "BreechingInletType": {
                "type": "PEnum_BreechingInletType",
                "Description": "Defines the type of breeching inlet.\n",
                "values": [
                  "FOURWAY",
                  "TWOWAY"
                ]
              },
              "CouplingType": {
                "type": "string",
                "Description": "Defines the type coupling on the inlet of the breeching inlet.\n"
              },
              "HasCaps": {
                "type": "boolean",
                "Description": "Does the inlet connection have protective caps.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InletDiameter": {
                "type": "real",
                "Description": "The inlet diameter of the breeching inlet.\n"
              },
              "OutletDiameter": {
                "type": "real",
                "Description": "The outlet diameter of the breeching inlet.\n"
              }
            }
          }
        }
      },
      "IfcFireSuppressionTerminal.SPRINKLERDEFLECTOR": {
        "Parent": "IfcFireSuppressionTerminal",
        "Description": ""
      },
      "IfcFireSuppressionTerminal.FIREMONITOR": {
        "Parent": "IfcFireSuppressionTerminal",
        "Description": ""
      },
      "IfcFireSuppressionTerminal.FIREHYDRANT": {
        "Parent": "IfcFireSuppressionTerminal",
        "Description": "Device, fitted to a pipe, through which a temporary supply of water may be provided.  May also be termed a stand pipe.\n\n\n",
        "Psets": {
          "Pset_FireSuppressionTerminalTypeFireHydrant": {
            "Properties": {
              "BodyColor": {
                "type": "string",
                "Description": "Color of the body of the hydrant.\n\n\n\nNote: Consult local fire regulations for statutory colors that may be required for hydrant bodies in particular circumstances.\n"
              },
              "CapColor": {
                "type": "string",
                "Description": "Color of the caps of the hydrant.\n\n\n\nNote: Consult local fire regulations for statutory colors that may be required for hydrant caps in particular circumstances.\n"
              },
              "DischargeFlowRate": {
                "type": "real",
                "Description": "The volumetric rate of fluid discharge.\n"
              },
              "FireHydrantType": {
                "type": "PEnum_FireHydrantType",
                "Description": "Defines the range of hydrant types from which the required type can be selected where.\n\n\n\nDryBarrel:\t A hydrant that has isolating valves fitted below ground and that may be used where the possibility of water freezing is a consideration.\n\nWetBarrel:\t A hydrant that has isolating valves fitted above ground and that may be used where there is no possibility of water freezing.\n",
                "values": [
                  "DRYBARREL",
                  "WETBARREL"
                ]
              },
              "FlowClass": {
                "type": "string",
                "Description": "Alphanumeric indication of the flow class of a hydrant (may be used in connection with or instead of the FlowRate property).\n"
              },
              "HoseConnectionSize": {
                "type": "real",
                "Description": "The size of connections to which a hose may be connected (other than that to be linked to a pumping unit).\n"
              },
              "NumberOfHoseConnections": {
                "type": "integer",
                "Description": "The number of hose connections on the hydrant (excluding the pumper connection).\n"
              },
              "PressureRating": {
                "type": "real",
                "Description": "Nominal pressure rating of the boiler as rated by the agency having jurisdiction.\n"
              },
              "PumperConnectionSize": {
                "type": "real",
                "Description": "The size of a connection to which a fire hose may be connected that is then linked to a pumping unit.\n"
              },
              "WaterIsPotable": {
                "type": "boolean",
                "Description": "Indication of whether the water flow from the hydrant is potable (set TRUE) or non potable (set FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcFireSuppressionTerminal.HOSEREEL": {
        "Parent": "IfcFireSuppressionTerminal",
        "Description": "A supporting framework on which a hose may be wound.\n\n\n",
        "Psets": {
          "Pset_FireSuppressionTerminalTypeHoseReel": {
            "Properties": {
              "ClassificationAuthority": {
                "type": "string",
                "Description": "The name of the authority that applies the classification of service to the hose reel (e.g. NFPA/FEMA).\n"
              },
              "ClassOfService": {
                "type": "string",
                "Description": "A classification of usage of the hose reel that may be applied.\n"
              },
              "HoseDiameter": {
                "type": "real",
                "Description": "Notional diameter (bore) of the hose.\n"
              },
              "HoseLength": {
                "type": "real",
                "Description": "Notional length of the hose fitted to the hose reel when fully extended.\n"
              },
              "HoseNozzleType": {
                "type": "PEnum_HoseNozzleType",
                "Description": "Identifies the predefined types of nozzle (in terms of spray pattern) fitted to the end of the hose from which the type required may be set.\n",
                "values": [
                  "FOG",
                  "STRAIGHTSTREAM"
                ]
              },
              "HoseReelMountingType": {
                "type": "PEnum_HoseReelMountingType",
                "Description": "Identifies the predefined types of hose reel mounting from which the type required may be set.\n",
                "values": [
                  "CABINET_RECESSED",
                  "CABINET_SEMIRECESSED",
                  "SURFACE"
                ]
              },
              "HoseReelType": {
                "type": "PEnum_HoseReelType",
                "Description": "Identifies the predefined types of hose arrangement from which the type required may be set.\n",
                "values": [
                  "RACK",
                  "REEL"
                ]
              },
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection(s), where used, of the inlet connections.\n\n\n\nNote that all inlet connections are assumed to be the same size.\n"
              }
            }
          }
        }
      },
      "IfcFireSuppressionTerminal.SPRINKLER": {
        "Parent": "IfcFireSuppressionTerminal",
        "Description": "Device for sprinkling water from a pipe under pressure over an area.\n\n\n",
        "Psets": {
          "Pset_FireSuppressionTerminalTypeSprinkler": {
            "Properties": {
              "Activation": {
                "type": "string",
                "Description": "Identifies the predefined methods of sprinkler activation from which that required may be set.\n"
              },
              "ActivationTemperature": {
                "type": "real",
                "Description": "The temperature at which the object is designed to activate.\n"
              },
              "BulbLiquidColor": {
                "type": "string",
                "Description": "The color of the liquid in the bulb for a bulb activated sprinkler. Note that the liquid color varies according to the activation temperature requirement of the sprinkler head. Note also that this property does not need to be asserted for quick response activated sprinklers.\n"
              },
              "ConnectionSize": {
                "type": "real",
                "Description": "Defines the size of inlet and outlet pipe connections to the meter.\n"
              },
              "CoverageArea": {
                "type": "real",
                "Description": "The floor area that is covered by the sensor (typically measured as a circle whose center is at the location of the sensor).\n"
              },
              "DischargeCoefficient": {
                "type": "real",
                "Description": "The coefficient of flow at the sprinkler.\n"
              },
              "DischargeFlowRate": {
                "type": "real",
                "Description": "The volumetric rate of fluid discharge.\n"
              },
              "HasDeflector": {
                "type": "boolean",
                "Description": "Indication of whether the sprinkler has a deflector (baffle) fitted to diffuse the discharge on activation (= TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MaximumWorkingPressure": {
                "type": "real",
                "Description": "Maximum pressure that the object is manufactured to withstand.\n"
              },
              "ResidualFlowingPressure": {
                "type": "real",
                "Description": "The residual flowing pressure in the pipeline at which the discharge flow rate is determined.\n"
              },
              "Response": {
                "type": "string",
                "Description": "Identifies the predefined methods of sprinkler response from which that required may be set.\n"
              },
              "SprinklerType": {
                "type": "PEnum_SprinklerType",
                "Description": "Identifies the predefined types of sprinkler  from which the type required may be set.\n",
                "values": [
                  "CEILING",
                  "CONCEALED",
                  "CUTOFF",
                  "PENDANT",
                  "RECESSEDPENDANT",
                  "SIDEWALL",
                  "UPRIGHT"
                ]
              }
            }
          }
        }
      },
      "IfcInterceptor": {
        "Parent": "IfcFlowTreatmentDevice",
        "Description": "An interceptor is a device designed and installed in order to separate and retain deleterious, hazardous or undesirable matter while permitting normal sewage or liquids to discharge into a collection system by gravity.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_InterceptorTypeCommon": {
            "Properties": {
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the oil interceptor.\n"
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system of the cover of the oil interceptor.\n"
              },
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection(s), where used, of the inlet connections.\n\n\n\nNote that all inlet connections are assumed to be the same size.\n"
              },
              "NominalBodyDepth": {
                "type": "real",
                "Description": "Nominal or quoted =length, measured along the z-axis of the local coordinate system of the object, of the body of the object.\n"
              },
              "NominalBodyLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the chamber of the gully trap.\n"
              },
              "NominalBodyWidth": {
                "type": "real",
                "Description": "Nominal or quoted length, measured along the y-axis of the local coordinate system of the object, of the body of the object.\n"
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the waste disposal unit.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "VentilatingPipeSize": {
                "type": "real",
                "Description": "Size of the ventilating pipe(s).\n"
              }
            }
          },
          "Qto_InterceptorBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcInterceptor.CYCLONIC": {
        "Parent": "IfcInterceptor",
        "Description": "Removes larger liquid drops or larger solid particles.\n\n\n"
      },
      "IfcInterceptor.OIL": {
        "Parent": "IfcInterceptor",
        "Description": ""
      },
      "IfcInterceptor.GREASE": {
        "Parent": "IfcInterceptor",
        "Description": "Chamber, on the line of a drain or discharge pipe, that prevents grease passing into a drainage system.\n\n\n"
      },
      "IfcInterceptor.PETROL": {
        "Parent": "IfcInterceptor",
        "Description": "Two or more chambers with inlet and outlet pipes arranged to allow petrol/gasoline collected on the surface of water drained into them to evaporate through ventilating pipes.\n\n\n"
      },
      "IfcLiquidTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": ""
      },
      "IfcSanitaryTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": "A sanitary terminal is a fixed appliance or terminal usually supplied with water and used for drinking, cleaning or foul water disposal or that is an item of equipment directly used with such an appliance or terminal.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_SanitaryTerminalTypeCommon": {
            "Properties": {
              "Color": {
                "type": "string",
                "Description": "The color of the pipe segment.\n\n\n\nNote: This is typically used only for plastic pipe segments. However, it may be used for any pipe segments with a painted surface which is not otherwise specified as a covering.\n"
              },
              "NominalDepth": {
                "type": "real",
                "Description": "Nominal or quoted depth of the object measured from the inlet drain connection to the base of the unit.\n"
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_SanitaryTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcSanitaryTerminal.TOILETPAN": {
        "Parent": "IfcSanitaryTerminal",
        "Description": "Soil appliance for the disposal of excrement.\n\n\n",
        "Psets": {
          "Pset_SanitaryTerminalTypeToiletPan": {
            "Properties": {
              "PanMounting": {
                "type": "string",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-\n\n\n\nBackToWall: \tA pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections.\n\nPedestal: \tA floor mounted sanitary terminal that has an integral base.\n\nCounterTop: \tA sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\n\nWallHung: \tA sanitary terminal cantilevered clear of the floor.\n"
              },
              "SpilloverLevel": {
                "type": "real",
                "Description": "The level at which water spills out of the terminal.\n"
              },
              "ToiletPanType": {
                "type": "PEnum_ToiletPanType",
                "Description": "The property enumeration Pset_ToiletPanTypeEnum defines the types of toilet pan that may be specified within the property set Pset_Toilet:-\n\n\n\nSiphonic: \tToilet pan in which excrement is removed by siphonage induced by the flushing water.\n\nSquat: \tToilet pan with an elongated bowl installed with its top edge at or near floor level, so that the user has to squat.\n\nWashDown: \tToilet pan in which excrement is removed by the momentum of the flushing water.\n\nWashOut: \tA washdown toilet pan in which excrement falls first into a shallow water filled bowl.\n",
                "values": [
                  "SIPHONIC",
                  "SQUAT",
                  "WASHDOWN",
                  "WASHOUT"
                ]
              },
              "ToiletType": {
                "type": "PEnum_ToiletType",
                "Description": "Enumeration that defines the types of toilet (water closet) arrangements that may be specified where:-\n\n\n\nBedPanWasher: Enclosed soil appliance in which bedpans and urinal bottles are emptied and cleansed.\n\nChemical: Portable receptacle or soil appliance that receives and retains excrement in either an integral or a separate container, in which it is chemically treated and from which it has to be emptied periodically.\n\nCloseCoupled: \tToilet suite in which a flushing cistern is connected directly to the water closet pan.\n\nLooseCoupled: \tToilet arrangement in which a flushing cistern is connected to the water closet pan through a flushing pipe.\n\nSlopHopper: \tHopper shaped soil appliance with a flushing rim and outlet similar to those of a toilet pan, into which human excrement is emptied for disposal.\n",
                "values": [
                  "BEDPANWASHER",
                  "CHEMICAL",
                  "CLOSECOUPLED",
                  "LOOSECOUPLED",
                  "SLOPHOPPER"
                ]
              }
            }
          }
        }
      },
      "IfcSanitaryTerminal.BATH": {
        "Parent": "IfcSanitaryTerminal",
        "Description": "",
        "Psets": {
          "Pset_SanitaryTerminalTypeBath": {
            "Properties": {
              "BathType": {
                "type": "PEnum_BathType",
                "Description": "The property enumeration defines the types of bath that may be specified within the property set.\n",
                "values": [
                  "DOMESTIC",
                  "FOOT",
                  "PLUNGE",
                  "POOL",
                  "SITZ",
                  "SPA",
                  "TREATMENT"
                ]
              },
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object.\n"
              },
              "HasGrabHandles": {
                "type": "boolean",
                "Description": "Indicates whether the bath is fitted with handles that provide assistance to a bather in entering or leaving the bath.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcSanitaryTerminal.SHOWER": {
        "Parent": "IfcSanitaryTerminal",
        "Description": "Installation or waste water appliance that emits a spray of water to wash the human body.\n\n\n",
        "Psets": {
          "Pset_SanitaryTerminalTypeShower": {
            "Properties": {
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object.\n"
              },
              "HasTray": {
                "type": "boolean",
                "Description": "Indicates whether the shower has a separate receptacle that catches the water in a shower and directs it to a waste outlet.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShowerHeadDescription": {
                "type": "string",
                "Description": "A description of the shower head(s) that emit the spray of water.\n"
              },
              "ShowerType": {
                "type": "PEnum_ShowerType",
                "Description": "Selection of the type of shower from the enumerated list of types where:-\n\n\n\nDrench:  \tShower that rapidly gives a thorough soaking in an emergency.\n\nIndividual: \tShower unit that is typically enclosed and is for the use of one person at a time.\n\nTunnel: \tShower that has a succession of shower heads or spreaders that operate simultaneously along its length.\n",
                "values": [
                  "DRENCH",
                  "INDIVIDUAL",
                  "TUNNEL"
                ]
              }
            }
          }
        }
      },
      "IfcSanitaryTerminal.WCSEAT": {
        "Parent": "IfcSanitaryTerminal",
        "Description": ""
      },
      "IfcSanitaryTerminal.SANITARYFOUNTAIN": {
        "Parent": "IfcSanitaryTerminal",
        "Description": "",
        "Psets": {
          "Pset_SanitaryTerminalTypeSanitaryFountain": {
            "Properties": {
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object.\n"
              },
              "FountainType": {
                "type": "PEnum_FountainType",
                "Description": "Selection of the type of fountain from the enumerated list of types where:-\n\n\n\nDrinkingWater: \tSanitary appliance that provides a low pressure jet of drinking water.\n\nEyewash: \tWaste water appliance, usually installed in work places where there is a risk of injury to eyes by solid particles or dangerous liquids, with which the user can wash the eyes without touching them.\n",
                "values": [
                  "DRINKINGWATER",
                  "EYEWASH"
                ]
              },
              "Mounting": {
                "type": "string",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-\n\n\n\nBackToWall: \tA pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections\n\n.\n\nPedestal: \tA floor mounted sanitary terminal that has an integral base\n\n.\n\nCounterTop: \tA sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\n\nWallHung: \tA sanitary terminal cantilevered clear of the floor.\n\n\n\nNote that BackToWall, Pedestal and WallHung are allowable values for a bidet.\n"
              }
            }
          }
        }
      },
      "IfcSanitaryTerminal.WASHHANDBASIN": {
        "Parent": "IfcSanitaryTerminal",
        "Description": "Waste water appliance for washing the upper parts of the body.\n\n\n",
        "Psets": {
          "Pset_SanitaryTerminalTypeWashHandBasin": {
            "Properties": {
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object.\n"
              },
              "Mounting": {
                "type": "string",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-\n\n\n\nBackToWall: \tA pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections\n\n.\n\nPedestal: \tA floor mounted sanitary terminal that has an integral base\n\n.\n\nCounterTop: \tA sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\n\nWallHung: \tA sanitary terminal cantilevered clear of the floor.\n\n\n\nNote that BackToWall, Pedestal and WallHung are allowable values for a bidet.\n"
              },
              "MountingOffset": {
                "type": "real",
                "Description": "For cunter top maounted sinks, the vertical offset between the top of the sink and the counter top.\n"
              },
              "WashHandBasinType": {
                "type": "PEnum_WashHandBasinType",
                "Description": "Defines the types of wash hand basin that may be specified where:\n\n\n\n\n\nDentalCuspidor: Waste water appliance that receives and flushes away mouth washings\n\n.\n\nHandRinse: Wall mounted wash hand basin that has an overall width of 500mm or less\n\n.\n\nHospital: Wash hand basin that has a smooth easy clean surface without tapholes or overflow slot for use where hygiene is of prime importance. \n\n\n\nTipup: Wash hand basin mounted on pivots so that it can be emptied by tilting.\n\n\n\nVanity: Wash hand basin for installation into a horizontal surface.\n\n\n\nWashfountain: Wash hand basin that is circular, semi-circular or polygonal on plan, at which more than one person can wash at the same time.\n\nWashingTrough: Wash hand basin of elongated rectangular shape in plan, at which more than one person can wash at the same time.\n",
                "values": [
                  "DENTALCUSPIDOR",
                  "HANDRINSE",
                  "HOSPITAL",
                  "TIPUP",
                  "WASHFOUNTAIN",
                  "WASHINGTROUGH"
                ]
              }
            }
          }
        }
      },
      "IfcSanitaryTerminal.BIDET": {
        "Parent": "IfcSanitaryTerminal",
        "Description": "Waste water appliance for washing the excretory organs while sitting astride the bowl.\n\n\n",
        "Psets": {
          "Pset_SanitaryTerminalTypeBidet": {
            "Properties": {
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object.\n"
              },
              "Mounting": {
                "type": "string",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-\n\n\n\nBackToWall: \tA pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections\n\n.\n\nPedestal: \tA floor mounted sanitary terminal that has an integral base\n\n.\n\nCounterTop: \tA sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\n\nWallHung: \tA sanitary terminal cantilevered clear of the floor.\n\n\n\nNote that BackToWall, Pedestal and WallHung are allowable values for a bidet.\n"
              },
              "SpilloverLevel": {
                "type": "real",
                "Description": "The level at which water spills out of the terminal.\n"
              }
            }
          }
        }
      },
      "IfcSanitaryTerminal.CISTERN": {
        "Parent": "IfcSanitaryTerminal",
        "Description": "A water storage unit attached to a sanitary terminal that is fitted with a device, operated automatically or by the user, that discharges water to cleanse a water closet (toilet) pan, urinal or slop hopper.\n\n\n",
        "Psets": {
          "Pset_SanitaryTerminalTypeCistern": {
            "Properties": {
              "CisternCapacity": {
                "type": "real",
                "Description": "Volumetric capacity of the cistern\n"
              },
              "CisternHeight": {
                "type": "PEnum_CisternHeight",
                "Description": "Enumeration that identifies the height of the cistern or, if set to 'None' if the urinal has no cistern and is flushed using mains or high pressure water through a flushing valve.\n",
                "values": [
                  "HIGHLEVEL",
                  "LOWLEVEL"
                ]
              },
              "FlushRate": {
                "type": "real",
                "Description": "The minimum and maximum volume of water used at each flush. Where a single flush is used, the value of upper bound and lower bound should be equal. For a dual flush toilet, the lower bound should be used for the lesser flush rate and the upper bound for the greater flush rate. Where flush is achieved using mains pressure water through a flush valve, the value of upper and lower bound should be equal and should be the same as the flush rate property of the flush valve (see relevant valve property set). Alternatively, in this case, do not assert the flush rate property; refer to the flush rate of the flush valve.\n"
              },
              "FlushType": {
                "type": "PEnum_FlushType",
                "Description": "The property enumeration Pset_FlushTypeEnum defines the types of flushing mechanism that may be specified for cisterns and sanitary terminals where:-\n\n\n\nLever: \tFlushing is achieved by twisting a lever that causes a predetermined flow of water to be passed from a cistern to the sanitary terminal.\n\nPull: \tFlushing is achieved by pulling a handle or knob vertically upwards that causes a predetermined flow of water to be passed from a cistern to the sanitary terminal.\n\nPush: \tFlushing is achieved by pushing a button or plate that causes a predetermined flow of water to be passed from a cistern to the sanitary terminal.\n\nSensor: Flush is activated through an automatic sensing mechanism.\n",
                "values": [
                  "LEVER",
                  "PULL",
                  "PUSH",
                  "SENSOR"
                ]
              },
              "IsAutomaticFlush": {
                "type": "boolean",
                "Description": "Boolean value that determines if the cistern is flushed automatically either after each use or periodically (TRUE) or whether manual flushing is required (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSingleFlush": {
                "type": "boolean",
                "Description": "Indicates whether the cistern is single flush = TRUE (i.e. the same amount of water is used for each and every flush) or dual flush = FALSE (i.e. the amount of water used for a flush may be selected by the user to be high or low depending on the waste material to be removed).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcSanitaryTerminal.SINK": {
        "Parent": "IfcSanitaryTerminal",
        "Description": "",
        "Psets": {
          "Pset_SanitaryTerminalTypeSink": {
            "Properties": {
              "Color": {
                "type": "string",
                "Description": "The color of the pipe segment.\n\n\n\nNote: This is typically used only for plastic pipe segments. However, it may be used for any pipe segments with a painted surface which is not otherwise specified as a covering.\n"
              },
              "DrainSize": {
                "type": "real",
                "Description": "The size of the drain outlet connection from the object.\n"
              },
              "Mounting": {
                "type": "string",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-\n\n\n\nBackToWall: \tA pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections\n\n.\n\nPedestal: \tA floor mounted sanitary terminal that has an integral base\n\n.\n\nCounterTop: \tA sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\n\nWallHung: \tA sanitary terminal cantilevered clear of the floor.\n\n\n\nNote that BackToWall, Pedestal and WallHung are allowable values for a bidet.\n"
              },
              "MountingOffset": {
                "type": "real",
                "Description": "For cunter top maounted sinks, the vertical offset between the top of the sink and the counter top.\n"
              },
              "SinkType": {
                "type": "PEnum_SinkType",
                "Description": "Selection of the type of sink from the enumerated list of types where:-\n\n\n\nBelfast: \tDeep sink that has a plain edge and a weir overflow\n\n.\n\nBucket: \tSink at low level, with protected front edge, that facilitates filling and emptying buckets, usually with a hinged grid on which to stand them.\n\nCleaners:\t Sink, usually fixed at normal height (900mm), with protected front edge.\n\nCombination_Left:\t Sink with integral drainer on left hand side\n\n.\n\nCombination_Right: Sink with integral drainer on right hand side\n\n.\n\nCombination_Double: \tSink with integral drainer on both sides\n\n.\n\nDrip: Small sink that catches drips or flow from a faucet\n\n.\n\nLaboratory: Sink, of acid resisting material, with a top edge shaped to facilitate fixing to the underside of a desktop\n\n.\n\nLondon: Deep sink that has a plain edge and no overflow\n\n.\n\nPlaster: Sink with sediment receiver to prevent waste plaster passing into drains\n\n.\n\nPot: Large metal sink, with a standing waste, for washing cooking utensils\n\n.\n\nRinsing: Metal sink in which water can be heated and culinary utensils and tableware immersed at high temperature that destroys most harmful bacteria and allows subsequent self drying.\n\n.\n\nShelf: Ceramic sink with an integral back shelf through which water fittings are mounted\n\n.\n\nVegetablePreparation: \tLarge metal sink, with a standing waste, for washing and preparing vegetables\n\n.\n",
                "values": [
                  "BELFAST",
                  "BUCKET",
                  "CLEANERS",
                  "COMBINATION_DOUBLE",
                  "COMBINATION_LEFT",
                  "COMBINATION_RIGHT",
                  "DRIP",
                  "LABORATORY",
                  "LONDON",
                  "PLASTER",
                  "POT",
                  "RINSING",
                  "SHELF",
                  "VEGETABLEPREPARATION"
                ]
              }
            }
          }
        }
      },
      "IfcSanitaryTerminal.URINAL": {
        "Parent": "IfcSanitaryTerminal",
        "Description": "Soil appliance that receives urine and directs it to a waste outlet.\n\n\n",
        "Psets": {
          "Pset_SanitaryTerminalTypeUrinal": {
            "Properties": {
              "Mounting": {
                "type": "string",
                "Description": "The property enumeration Pset_SanitaryMountingEnum defines the forms of mounting or fixing of the sanitary terminal that may be specified within property sets used to define sanitary terminals (WC\u2019s, basins, sinks, etc.) where:-\n\n\n\nBackToWall: \tA pedestal mounted sanitary terminal that fits flush to the wall at the rear to cover its service connections\n\n.\n\nPedestal: \tA floor mounted sanitary terminal that has an integral base\n\n.\n\nCounterTop: \tA sanitary terminal that is installed into a horizontal surface that is installed into a horizontal surface. Note: When applied to a wash hand basin, the term more normally used is \u2018vanity\u2019. See also Wash Hand Basin Type specification.\n\nWallHung: \tA sanitary terminal cantilevered clear of the floor.\n\n\n\nNote that BackToWall, Pedestal and WallHung are allowable values for a bidet.\n"
              },
              "SpilloverLevel": {
                "type": "real",
                "Description": "The level at which water spills out of the terminal.\n"
              },
              "UrinalType": {
                "type": "PEnum_UrinalType",
                "Description": "Selection of the type of urinal from the enumerated list of types where:-\n\n\n\nBowl: Individual wall mounted urinal.\n\nSlab: Urinal that consists of a slab or sheet fixed to a wall and down which urinal flows into a floor channel.\n\nStall: Floor mounted urinal that consists of an elliptically shaped sanitary stall fixed to a wall and down which urine flows into a floor channel.\n\nTrough: Wall mounted urinal of elongated rectangular shape on plan, that can be used by more than one person at a time.\n",
                "values": [
                  "BOWL",
                  "SLAB",
                  "STALL",
                  "TROUGH"
                ]
              }
            }
          }
        }
      },
      "IfcStackTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": "A stack terminal is placed at the top of a ventilating stack (such as to prevent ingress by birds or rainwater) or rainwater pipe (to act as a collector or hopper for discharge from guttering).\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_StackTerminalTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_StackTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcStackTerminal.BIRDCAGE": {
        "Parent": "IfcStackTerminal",
        "Description": "Guard cage, typically wire mesh, at the top of the stack preventing access by birds.\n\n\n"
      },
      "IfcStackTerminal.COWL": {
        "Parent": "IfcStackTerminal",
        "Description": ""
      },
      "IfcStackTerminal.RAINWATERHOPPER": {
        "Parent": "IfcStackTerminal",
        "Description": "A box placed at the top of a rainwater downpipe to catch rainwater from guttering.\n\n\n"
      },
      "IfcWasteTerminal": {
        "Parent": "IfcFlowTerminal",
        "Description": "A waste terminal has the purpose of collecting or intercepting waste from one or more sanitary terminals or other fluid waste generating equipment and discharging it into a single waste/drainage system.\n\n\n\nA waste terminal provides for all forms of trap and waste point that collects discharge from a sanitary terminal and discharges it into a waste/drainage subsystem or that collects waste from several terminals and passes it into a single waste/drainage subsystem. This includes the P and S traps from soil sanitary terminals, sinks, and basins as well as floor wastes and gully traps that provide collection points.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n\n{ .note}\n\n>\n\n\n",
        "Psets": {
          "Pset_WasteTerminalTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_WasteTerminalBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              }
            }
          }
        }
      },
      "IfcWasteTerminal.FLOORWASTE": {
        "Parent": "IfcWasteTerminal",
        "Description": "Pipe fitting, set into the floor, that collects waste water and discharges it to a separate trap.\n\n\n",
        "Psets": {
          "Pset_WasteTerminalTypeFloorWaste": {
            "Properties": {
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the oil interceptor.\n"
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system of the cover of the oil interceptor.\n"
              },
              "NominalBodyDepth": {
                "type": "real",
                "Description": "Nominal or quoted =length, measured along the z-axis of the local coordinate system of the object, of the body of the object.\n"
              },
              "NominalBodyLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the chamber of the gully trap.\n"
              },
              "NominalBodyWidth": {
                "type": "real",
                "Description": "Nominal or quoted length, measured along the y-axis of the local coordinate system of the object, of the body of the object.\n"
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the waste disposal unit.\n"
              }
            }
          }
        }
      },
      "IfcWasteTerminal.WASTETRAP": {
        "Parent": "IfcWasteTerminal",
        "Description": "Pipe fitting, set adjacent to a sanitary terminal, that retains liquid to prevent the passage of foul air.\n\n\n",
        "Psets": {
          "Pset_WasteTerminalTypeWasteTrap": {
            "Properties": {
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection(s), where used, of the inlet connections.\n\n\n\nNote that all inlet connections are assumed to be the same size.\n"
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the waste disposal unit.\n"
              },
              "WasteTrapType": {
                "type": "string",
                "Description": "Identifies the predefined types of trap from which the type required may be set.\n"
              }
            }
          }
        }
      },
      "IfcWasteTerminal.WASTEDISPOSALUNIT": {
        "Parent": "IfcWasteTerminal",
        "Description": "Electrically operated device that reduces kitchen or other waste into fragments small enough to be flushed into a drainage system.\n\n\n",
        "Psets": {
          "Pset_WasteTerminalTypeWasteDisposalUnit": {
            "Properties": {
              "DrainConnectionSize": {
                "type": "real",
                "Description": "Size of the drain connection inlet to the waste disposal unit.\n"
              },
              "NominalDepth": {
                "type": "real",
                "Description": "Nominal or quoted depth of the object measured from the inlet drain connection to the base of the unit.\n"
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the waste disposal unit.\n"
              }
            }
          }
        }
      },
      "IfcWasteTerminal.ROOFDRAIN": {
        "Parent": "IfcWasteTerminal",
        "Description": "Pipe fitting, set into the roof, that collects rainwater for discharge into the rainwater system.\n\n\n",
        "Psets": {
          "Pset_WasteTerminalTypeRoofDrain": {
            "Properties": {
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the oil interceptor.\n"
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system of the cover of the oil interceptor.\n"
              },
              "NominalBodyDepth": {
                "type": "real",
                "Description": "Nominal or quoted =length, measured along the z-axis of the local coordinate system of the object, of the body of the object.\n"
              },
              "NominalBodyLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the chamber of the gully trap.\n"
              },
              "NominalBodyWidth": {
                "type": "real",
                "Description": "Nominal or quoted length, measured along the y-axis of the local coordinate system of the object, of the body of the object.\n"
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the waste disposal unit.\n"
              }
            }
          }
        }
      },
      "IfcWasteTerminal.FLOORTRAP": {
        "Parent": "IfcWasteTerminal",
        "Description": "Pipe fitting, set into the floor, that retains liquid to prevent the passage of foul air\n\n\n",
        "Psets": {
          "Pset_WasteTerminalTypeFloorTrap": {
            "Properties": {
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the oil interceptor.\n"
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system of the cover of the oil interceptor.\n"
              },
              "HasStrainer": {
                "type": "boolean",
                "Description": "Indicates whether the gully trap has a strainer (= TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection(s), where used, of the inlet connections.\n\n\n\nNote that all inlet connections are assumed to be the same size.\n"
              },
              "InletPatternType": {
                "type": "PEnum_InletPatternType",
                "Description": "Identifies the pattern of inlet connections to a trap.\n\n\n\nA trap may have 0,1,2,3 or 4 inlet connections and the pattern of their arrangement may vary. The enumeration makes the convention that an outlet is either vertical or is placed at the bottom (south side) of the trap (when viewed in plan). Position 1 is to the left (west), position 2 is to the top (north), position 3 is to the right (east) and position 4 is to the bottom (south).\n",
                "values": [
                  "1",
                  "12",
                  "123",
                  "1234",
                  "124",
                  "13",
                  "134",
                  "14",
                  "2",
                  "23",
                  "234",
                  "24",
                  "3",
                  "34",
                  "4"
                ]
              },
              "IsForSullageWater": {
                "type": "boolean",
                "Description": "Indicates if the purpose of the floor trap is to receive sullage water, or if that is amongst its purposes (= TRUE), or not (= FALSE). Note that if TRUE, it is expected that an upstand or kerb will be placed around the floor trap to prevent the ingress of surface water runoff; the provision of the upstand or kerb is not dealt with in this property set.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalBodyDepth": {
                "type": "real",
                "Description": "Nominal or quoted =length, measured along the z-axis of the local coordinate system of the object, of the body of the object.\n"
              },
              "NominalBodyLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the chamber of the gully trap.\n"
              },
              "NominalBodyWidth": {
                "type": "real",
                "Description": "Nominal or quoted length, measured along the y-axis of the local coordinate system of the object, of the body of the object.\n"
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the waste disposal unit.\n"
              },
              "SpilloverLevel": {
                "type": "real",
                "Description": "The level at which water spills out of the terminal.\n"
              },
              "TrapType": {
                "type": "string",
                "Description": "Identifies the predefined types of waste trap used in combination with the floor trap from which the type required may be set.\n"
              }
            }
          }
        }
      },
      "IfcWasteTerminal.GULLYTRAP": {
        "Parent": "IfcWasteTerminal",
        "Description": "Pipe fitting or assembly of fittings that receives surface water or waste water; fitted with a grating or sealed cover that discharges water through a trap.\n\n\n",
        "Psets": {
          "Pset_WasteTerminalTypeGullyTrap": {
            "Properties": {
              "BackInletPatternType": {
                "type": "string",
                "Description": "Identifies the pattern of inlet connections to a gully trap.\n\n\n\nA gulley trap may have 0,1,2,3 or 4 inlet connections and the pattern of their arrangement may vary. The enumeration makes the convention that an outlet is either vertical or is placed at the bottom (south side) of the gully trap (when viewed in plan). Position 1 is to the left (west), position 2 is to the top (north), position 3 is to the right (east) and position 4 is to the bottom (south).\n\n\n\n               2\n\n               |\n\n   ----------------\n\n   !                       |\n\n1-|                       |-3\n\n   !                       |\n\n   ----------------\n\n               |\n\n              4\n"
              },
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the oil interceptor.\n"
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system of the cover of the oil interceptor.\n"
              },
              "GullyType": {
                "type": "string",
                "Description": "Identifies the predefined types of gully from which the type required may be set.\n"
              },
              "HasStrainer": {
                "type": "boolean",
                "Description": "Indicates whether the gully trap has a strainer (= TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection(s), where used, of the inlet connections.\n\n\n\nNote that all inlet connections are assumed to be the same size.\n"
              },
              "NominalBodyDepth": {
                "type": "real",
                "Description": "Nominal or quoted =length, measured along the z-axis of the local coordinate system of the object, of the body of the object.\n"
              },
              "NominalBodyLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the chamber of the gully trap.\n"
              },
              "NominalBodyWidth": {
                "type": "real",
                "Description": "Nominal or quoted length, measured along the y-axis of the local coordinate system of the object, of the body of the object.\n"
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the waste disposal unit.\n"
              },
              "TrapType": {
                "type": "string",
                "Description": "Identifies the predefined types of waste trap used in combination with the floor trap from which the type required may be set.\n"
              }
            }
          }
        }
      },
      "IfcWasteTerminal.GULLYSUMP": {
        "Parent": "IfcWasteTerminal",
        "Description": "",
        "Psets": {
          "Pset_WasteTerminalTypeGullySump": {
            "Properties": {
              "BackInletPatternType": {
                "type": "string",
                "Description": "Identifies the pattern of inlet connections to a gully trap.\n\n\n\nA gulley trap may have 0,1,2,3 or 4 inlet connections and the pattern of their arrangement may vary. The enumeration makes the convention that an outlet is either vertical or is placed at the bottom (south side) of the gully trap (when viewed in plan). Position 1 is to the left (west), position 2 is to the top (north), position 3 is to the right (east) and position 4 is to the bottom (south).\n\n\n\n               2\n\n               |\n\n   ----------------\n\n   !                       |\n\n1-|                       |-3\n\n   !                       |\n\n   ----------------\n\n               |\n\n              4\n"
              },
              "CoverLength": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the cover of the oil interceptor.\n"
              },
              "CoverWidth": {
                "type": "real",
                "Description": "The length measured along the x-axis in the local coordinate system of the cover of the oil interceptor.\n"
              },
              "GullyType": {
                "type": "string",
                "Description": "Identifies the predefined types of gully from which the type required may be set.\n"
              },
              "InletConnectionSize": {
                "type": "real",
                "Description": "Size of the inlet connection(s), where used, of the inlet connections.\n\n\n\nNote that all inlet connections are assumed to be the same size.\n"
              },
              "NominalSumpDepth": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the z-axis in the local coordinate system of the sump.\n"
              },
              "NominalSumpLength": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the x-axis in the local coordinate system or the radius (in the case of a circular shape in plan) of the sump.\n"
              },
              "NominalSumpWidth": {
                "type": "real",
                "Description": "Nominal or quoted length measured along the y-axis in the local coordinate system of the sump.\n"
              },
              "OutletConnectionSize": {
                "type": "real",
                "Description": "Size of the outlet connection from the waste disposal unit.\n"
              },
              "TrapType": {
                "type": "string",
                "Description": "Identifies the predefined types of waste trap used in combination with the floor trap from which the type required may be set.\n"
              }
            }
          }
        }
      },
      "IfcMarineFacility": {
        "Parent": "IfcFacility",
        "Description": "",
        "Psets": {
          "Qto_MarineFacilityBaseQuantities": {
            "Properties": {
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Height": {
                "type": "real",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Area": {
                "type": "real",
                "Description": "Area of the projection as viewed by an elevation view (for wall projections or as viewed by a ground floor view (for slab projections).\n"
              },
              "Volume": {
                "type": "real",
                "Description": "Total volume of fluid in the tubes and their headers.\n"
              }
            }
          },
          "Qto_MarineFacilityTransportationQuantities": {
            "Properties": {
              "BerthGrade": {
                "type": "number",
                "Description": "Berth grade\n"
              },
              "Berth": {
                "type": "number",
                "Description": ""
              },
              "BerthTonnage": {
                "type": "real",
                "Description": ""
              }
            }
          }
        }
      },
      "IfcMarineFacility.CANAL": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.WATERWAYSHIPLIFT": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.REVETMENT": {
        "Parent": "IfcMarineFacility",
        "Description": "",
        "Psets": {
          "PSet_RevetmentCommon": {
            "Properties": {
              "StructuralType": {
                "type": "string",
                "Description": "Structural type of the object\n"
              },
              "Elevation": {
                "type": "real",
                "Description": "Elevation of the entity\n"
              }
            }
          }
        }
      },
      "IfcMarineFacility.LAUNCHRECOVERY": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.MARINEDEFENCE": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.HYDROLIFT": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.SHIPYARD": {
        "Parent": "IfcMarineFacility",
        "Description": "",
        "Psets": {
          "PSet_ShipyardCommon": {
            "Properties": {
              "PrimaryProductionType": {
                "type": "string",
                "Description": "Primary type of ship production of the facility\n"
              }
            }
          }
        }
      },
      "IfcMarineFacility.SHIPLIFT": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.PORT": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.QUAY": {
        "Parent": "IfcMarineFacility",
        "Description": "",
        "Psets": {
          "PSet_QuayCommon": {
            "Properties": {
              "StructuralType": {
                "type": "string",
                "Description": "Structural type of the object\n"
              },
              "Elevation": {
                "type": "real",
                "Description": "Elevation of the entity\n"
              },
              "BentSpacing": {
                "type": "real",
                "Description": "Bent (upright) spacing\n"
              },
              "QuaySectionType": {
                "type": "penum_sectiontype",
                "Description": "Whether the structure presents a solid/closed barrier to the passage of water or is open.\n"
              }
            }
          },
          "Pset_QuayDesignCriteria": {
            "Properties": {
              "LowWaterLevel": {
                "type": "real",
                "Description": "Low water level\n"
              },
              "HighWaterLevel": {
                "type": "real",
                "Description": "High water level\n"
              },
              "ExtremeHighWaterLevel": {
                "type": "real",
                "Description": "Extreme high water level\n"
              },
              "ShipLoading": {
                "type": "real",
                "Description": "Ship loading force\n"
              },
              "ExtremeLowWaterLevel": {
                "type": "real",
                "Description": "Extreme low water level\n"
              },
              "WaveLoading": {
                "type": "real",
                "Description": "Wave loading force\n"
              },
              "FlowLoading": {
                "type": "real",
                "Description": "Flow loading force\n"
              },
              "UniformlyDistributedLoad": {
                "type": "real",
                "Description": "Uniformly Distributed Load\n"
              },
              "EquipmentLoading": {
                "type": "real",
                "Description": "Loading from equipment\n"
              }
            }
          }
        }
      },
      "IfcMarineFacility.FLOATINGDOCK": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.NAVIGATIONALCHANNEL": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.BREAKWATER": {
        "Parent": "IfcMarineFacility",
        "Description": "",
        "Psets": {
          "Pset_BreakwaterCommon": {
            "Properties": {
              "Structural Style": {
                "type": "string",
                "Description": ""
              },
              "Elevation": {
                "type": "real",
                "Description": "Elevation of the entity\n"
              }
            }
          }
        }
      },
      "IfcMarineFacility.DRYDOCK": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.JETTY": {
        "Parent": "IfcMarineFacility",
        "Description": "",
        "Psets": {
          "Pset_JettyCommon": {
            "Properties": {
              "StructuralType": {
                "type": "string",
                "Description": "Structural type of the object\n"
              },
              "Elevation": {
                "type": "real",
                "Description": "Elevation of the entity\n"
              },
              "BentSpacing": {
                "type": "real",
                "Description": "Bent (upright) spacing\n"
              },
              "PierSectionType": {
                "type": "penum_sectiontype",
                "Description": "Whether the structure presents a solid/closed barrier to the passage of water or is open.\n"
              }
            }
          },
          "Pset_JettyDesignCriteria": {
            "Properties": {
              "LowWaterLevel": {
                "type": "real",
                "Description": "Low water level\n"
              },
              "HighWaterLevel": {
                "type": "real",
                "Description": "High water level\n"
              },
              "ExtremeHighWaterLevel": {
                "type": "real",
                "Description": "Extreme high water level\n"
              },
              "ShipLoading": {
                "type": "real",
                "Description": "Ship loading force\n"
              },
              "ExtremeLowWaterLevel": {
                "type": "real",
                "Description": "Extreme low water level\n"
              },
              "WaveLoading": {
                "type": "real",
                "Description": "Wave loading force\n"
              },
              "FlowLoading": {
                "type": "real",
                "Description": "Flow loading force\n"
              },
              "UniformlyDistributedLoad": {
                "type": "real",
                "Description": "Uniformly Distributed Load\n"
              },
              "EquipmentLoading": {
                "type": "real",
                "Description": "Loading from equipment\n"
              }
            }
          }
        }
      },
      "IfcMarineFacility.SHIPLOCK": {
        "Parent": "IfcMarineFacility",
        "Description": "",
        "Psets": {
          "PSet_ShiplockCommon": {
            "Properties": {
              "WaterDeliverySystemType": {
                "type": "string",
                "Description": "Type of water delivery system\n"
              },
              "CillLevelLowerHead": {
                "type": "real",
                "Description": "Height of the lower head cill level\n"
              },
              "CillLevelUpperHead": {
                "type": "real",
                "Description": "Height of the upper head cill level\n"
              },
              "WaterDeliveryValveType": {
                "type": "string",
                "Description": "Type of water delivery valve\n"
              }
            }
          },
          "PSet_ShiplockComplex": {
            "Properties": {
              "LockMode": {
                "type": "string",
                "Description": "Type of lock system used.\n"
              },
              "LockLines": {
                "type": "number",
                "Description": "Number of Parallel lock series\n"
              },
              "LockGrade": {
                "type": "string",
                "Description": "Operational grading of the ship lock complex\n"
              },
              "LockChamberLevels": {
                "type": "number",
                "Description": "Number of steps (chambers) in a lock line\n"
              }
            }
          },
          "PSet_ShiplockDesignCriteria": {
            "Properties": {
              "MaximumUpstreamNavigableWaterLevel": {
                "type": "real",
                "Description": "Design maximum upstream water level for the lock complex\n"
              },
              "MaximumDownstreamNavigableWaterLevel": {
                "type": "real",
                "Description": "Design maximum downstream water level for the lock complex\n"
              },
              "MinimumUpstreamNavigableWaterLevel": {
                "type": "real",
                "Description": "Design minimum upstream water level for the lock complex\n"
              },
              "MinimumDownstreamNavigableWaterLevel": {
                "type": "real",
                "Description": "Design minimum downstream water level for the lock complex\n"
              },
              "DownstreamMaintenanceWaterLevel": {
                "type": "real",
                "Description": "Design minimum upstream water level for the lock complex\n"
              },
              "UpstreamMaintenanceWaterLevel": {
                "type": "real",
                "Description": "Design maximum upstream water level for the lock complex\n"
              },
              "UpstreamFloodWaterLevel": {
                "type": "real",
                "Description": "Design maximum upstream water level for the lock complex\n"
              },
              "DownstreamFloodWaterLevel": {
                "type": "real",
                "Description": "the design minimum upstream water level for the lock complex\n"
              }
            }
          }
        }
      },
      "IfcMarineFacility.BARRIERBEACH": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.SLIPWAY": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMarineFacility.WATERWAY": {
        "Parent": "IfcMarineFacility",
        "Description": ""
      },
      "IfcMooringDevice": {
        "Parent": "IfcBuiltElement",
        "Description": "",
        "Psets": {
          "Pset_MooringDeviceCommon": {
            "Properties": {
              "DeviceType": {
                "type": "penum_mooringdevicetype",
                "Description": "Mooring device type\n"
              },
              "DeviceCapacity": {
                "type": "real",
                "Description": "Mooring device force capacity\n"
              },
              "AnchorageType": {
                "type": "penum_anchoragetype",
                "Description": "Mooring device anchorage type\n"
              },
              "MinimumLineSlope": {
                "type": "real",
                "Description": ""
              },
              "MaximumLineSlope": {
                "type": "real",
                "Description": "Maximum allowable line angle in degrees (negative if below horizontal from quay)\n"
              },
              "MaximumLineCount": {
                "type": "number",
                "Description": "Maximum number of lines that may be secured to the mooring device.\n"
              }
            }
          }
        }
      },
      "IfcMooringDeviceType": {
        "Parent": "IfcBuiltElementType",
        "Description": "",
        "Psets": {
          "Pset_MooringDeviceCommon": {
            "Properties": {
              "DeviceType": {
                "type": "penum_mooringdevicetype",
                "Description": "Mooring device type\n"
              },
              "DeviceCapacity": {
                "type": "real",
                "Description": "Mooring device force capacity\n"
              },
              "AnchorageType": {
                "type": "penum_anchoragetype",
                "Description": "Mooring device anchorage type\n"
              },
              "MinimumLineSlope": {
                "type": "real",
                "Description": ""
              },
              "MaximumLineSlope": {
                "type": "real",
                "Description": "Maximum allowable line angle in degrees (negative if below horizontal from quay)\n"
              },
              "MaximumLineCount": {
                "type": "number",
                "Description": "Maximum number of lines that may be secured to the mooring device.\n"
              }
            }
          }
        }
      },
      "IfcMooringDevice.LINETENSIONER": {
        "Parent": "IfcMooringDevice",
        "Description": ""
      },
      "IfcMooringDevice.MAGNETICDEVICE": {
        "Parent": "IfcMooringDevice",
        "Description": ""
      },
      "IfcMooringDevice.MOORINGHOOKS": {
        "Parent": "IfcMooringDevice",
        "Description": ""
      },
      "IfcMooringDevice.VACUUMDEVICE": {
        "Parent": "IfcMooringDevice",
        "Description": ""
      },
      "IfcMooringDevice.BOLLARD": {
        "Parent": "IfcMooringDevice",
        "Description": ""
      },
      "IfcNavigationElement": {
        "Parent": "IfcBuiltElement",
        "Description": ""
      },
      "IfcNavigationElement.BEACON": {
        "Parent": "IfcNavigationElement",
        "Description": ""
      },
      "IfcNavigationElement.BUOY": {
        "Parent": "IfcNavigationElement",
        "Description": ""
      },
      "IfcTask": {
        "Parent": "IfcProcess",
        "Description": "An _IfcTask_ is an identifiable unit of work to be carried out in a construction project.\n\n\n\nA task is typically used to describe an activity for the construction or installation of products, but is not limited to these types. For example it might be used to describe design processes, move operations and other design, construction and operation related activities as well.\n\n\n\nQuantities of resources consumed by the task are dealt with by defining the _IfcElementQuantity_ for the resource and not at the instance of _IfcTask_.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0. Renamed from _IfcWorkTask_ in IFC2x.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attributes _TaskTime_ and _PredefinedType_ added. IfcMove and IfcOrderRequest has been removed in IFC4 and are now represented by _IfcTask_. IfcRelAssignsTasks relationship has been removed as well.\n\n\n\n{ .use-head}\n\nAttribute use definition\n\n\n\nEach occurrence of _IfcTask_ is given a name that is indicative of its content (_IfcRoot.Name_). A textual description of the task may be provided and this may be further elaborated by a narrative long description (_IfcProcess.LongDescription_). A work method may be declared for the method of work used in carrying out a task. A task is identified as being either a milestone task or not. A milestone task is defined by the marker _IsMilestone_. and has no duration. A status and priority for each task may also be set.\n\n\n\n{ .use-head}\n\nTime and duration use definition\n\n\n\nCompared to previous IFC releases, basic task time information (scheduled start time, scheduled finish time, duration) is now directly attached to _IfcTask_ through the _TaskTime_ attribute. Regular tasks are defined through _IfcTaskTime_. Recurring tasks are defined through _IfcTaskTimeRecurring_. In case a regular task is derived from a recurring task both tasks should be linked together through a _IfcRelNests_ relationship, where _IfcRelNests.IsNestedBy_ points to the recurring task and _IfcRelNests.Nests_ points to all regular tasks that have been derived from the recurring task.\n\n\n\n{ .use-head}\n\nRepresentation of other activities\n\n\n\nThe use definitions for _IfcTask_ have been generalised to represent other activities as well, including activities that had been defined by own entities in previous IFC releases. This includes\n\n\n\n* Order actions\n\n* Move operations\n\n\n\n_IfcTask_ represents an order that might be carried out by a Helpdesk acting the role of interface for the organization between the facility user and the functional requirement of fulfilling their needs. The actual task represented by the _IfcTask_ entity is turning a request into an order and initiating the action that will enable the order to be completed. The _IfcProjectOrder_ or one of its subtypes including maintenance work order, is related to the _IfcTask_ using _IfcRelAssignsToControl_.\n\n\n\n_IfcTask_ can also be used to describe an activity that moves people, groups within an organization or complete organizations together with their associated furniture and equipment from one place to another. It thus replaces the previous IFC entity IfcMove. The functionality is represented in _IfcTask_ as follows:\n\n\n\n* Move from: The place from which actors and their associated equipment are moving.   Use _IfcRelAssignsToProcess_ where _RelatingProcess_ points to the task and _RelatedObjects_ holds the location(s) from which to move.\n\n* Move to: The place to which actors and their associated equipment are moving.   Use _IfcRelAssignsToProduct_ where _RelatedObjects_ points to the task(s) and _RelatingProduct_ points to the location to which to move.\n\n* Punch list: A list of points concerning a move that require attention.   Use _LongDescription_ or else identify sub-tasks to track punch list items individually via _IfcRelNests_.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "Status": {
                "type": "string",
                "Description": "Current status of the task.\\X\\0D\n    \\X\\0D\n> NOTE&nbsp; Particular values for status are not specified, these should be determined and agreed by local usage. Examples of possible status values include ''Not Yet Started'', ''Started'', ''Completed''."
              },
              "WorkMethod": {
                "type": "string",
                "Description": "The method of work used in carrying out a task."
              },
              "IsMilestone": {
                "type": "boolean",
                "Description": "Identifies whether a task is a milestone task (=TRUE) or not\\X\\0D\n    (= FALSE).\\X\\0D\n    \\X\\0D\n> NOTE&nbsp; In small project planning applications, a milestone task may be understood to be a task having no duration. As such, it represents a singular point in time.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Priority": {
                "type": "integer",
                "Description": "A value that indicates the relative priority of the task (in\\X\\0D\n    comparison to the priorities of other tasks)."
              }
            }
          }
        }
      },
      "IfcTask.MOVE": {
        "Parent": "IfcTask",
        "Description": "Moving things from one place to another.\n\n\n",
        "Psets": {
          "Pset_PackingInstructions": {
            "Properties": {
              "PackingCareType": {
                "type": "PEnum_PackingCareType",
                "Description": "Identifies the predefined types of care that may be required when handling the artefact during a move where:\n\n\n\nFragile: artefact may be broken during a move through careless handling.\n\nHandleWithCare: artefact may be damaged during a move through careless handling.\n",
                "values": [
                  "FRAGILE",
                  "HANDLEWITHCARE"
                ]
              },
              "SpecialInstructions": {
                "type": "string",
                "Description": "Special instructions that affect the move.\n"
              }
            }
          }
        }
      },
      "IfcWorkControl": {
        "Parent": "IfcControl",
        "Description": "An _IfcWorkControl_ is an abstract supertype which captures information that is common to both _IfcWorkPlan_ and _IfcWorkSchedule_.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x\n\n\n\n{ .change-ifc2x4}\n\n> CHANGE IFC4&nbsp; Corrected assignment of resources to work control in documentation. Assignment of tasks to work control updated based on changes of task time definitions and the introduction of a summary task. Identifier has been renamed (now Identification) and promoted to supertype _IfcControl_\n\n\n\nA work control may have resources assigned to it. This is handled by the _IfcRelAssignsToControl_ relationship. A work control should also define a context that gives further information about its usage. If no special context information is required then the _IfcProject_ instance as a global context should be used instead. An explicit link between the work control and the _IfcProject_ via _IfcRelDeclares_ should then be provided.\n\n\n\nThe attribute _IfcWorkControl.Purpose_ is used to define the purpose of either a work schedule or a work plan. In the case of _IfcWorkPlan_, the purpose attribute can be used to determine if the work plan is for cost estimating, task scheduling or some other defined purpose.\n\n\n",
        "Psets": {
          "Pset_WorkControlCommon": {
            "Properties": {
              "WorkDayDuration": {
                "type": "string",
                "Description": "The elapsed time within a worktime-based day. For presentation purposes, applications may choose to display IfcTask durations in work days where IfcTaskTime.DurationType=WORKTIME. This value must be less than or equal to 24 hours (an elapsed day); if omitted then 8 hours is assumed.\n"
              },
              "WorkFinishTime": {
                "type": "string",
                "Description": "The default time of day a task is scheduled to finish. For presentation purposes, if the finish time of a task matches the WorkFinishTime, then applications may choose to display the date only. Conversely when entering dates without specifying time, applications may automatically append the WorkFinishTime.\n"
              },
              "WorkMonthDuration": {
                "type": "string",
                "Description": "The elapsed time within a worktime-based month. For presentation purposes, applications may choose to display IfcTask durations in work months where IfcTaskTime.DurationType=WORKTIME. This value must be less than or equal to 744 hours (an elapsed month of 31 days); if omitted then 160 hours is assumed.\n"
              },
              "WorkStartTime": {
                "type": "string",
                "Description": "The default time of day a task is scheduled to start. For presentation purposes, if the start time of a task matches the WorkStartTime, then applications may choose to display the date only. Conversely when entering dates without specifying time, applications may automatically append the WorkStartTime.\n"
              },
              "WorkWeekDuration": {
                "type": "string",
                "Description": "The elapsed time within a worktime-based week. For presentation purposes, applications may choose to display IfcTask durations in work weeks where IfcTaskTime.DurationType=WORKTIME. This value must be less than or equal to 168 hours (an elapsed week); if omitted then 40 hours is assumed.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "CreationDate": {
                "type": "string",
                "Description": "The date that the plan is created."
              },
              "Purpose": {
                "type": "string",
                "Description": "A description of the purpose of the work schedule."
              },
              "Duration": {
                "type": "string",
                "Description": "The total duration of the entire work schedule."
              },
              "TotalFloat": {
                "type": "string",
                "Description": "The total time float of the entire work schedule."
              },
              "StartTime": {
                "type": "string",
                "Description": "The start time of the schedule."
              },
              "FinishTime": {
                "type": "string",
                "Description": "The finish time of the schedule."
              }
            }
          }
        }
      },
      "IfcLinearElement": {
        "Parent": "IfcProduct",
        "Description": "A generalization of all linear elements that are parts of an alignment.\n"
      },
      "IfcAlignment": {
        "Parent": "IfcLinearPositioningElement",
        "Description": "For the purposes of IFC the English term \"alignment\" defines three essentially separate but closely interconnected concepts.\n\n\n\n1. defintion of a reference system for linear positioning\n\n2. safeguarding and optimization of the movement of vehicles - kinematic perspective\n\n3. geometric construction of roads, railway tracks or other linear infrastructure\n\n\n\n**Reference system for linear positioning**\n\n\n\nAn alignment is used to define a reference system to position elements mainly for linear construction works, such as roads, rails, bridges, and others. The relative positioning along the alignment is defined by the linear referencing methodology.  \n\n\n\n> NOTE&nbsp; See ISO 19148 Geographic information &ndash; Linear referencing for general definitions about linear referencing.  \n\n\n\n**Kinematic perspective**\n\n\n\nIn the kinematic perspective focus is on the safe and optimized movement of a vehicle under the constraints induced by changes in the direction of the horizontal and the vertical layout.\n\n\n\n**Geometric perspective**\n\n\n\nIn the geometric perspective the focus is on the proper placement of horizontal and vertical segments to connect certain points along a proposed path. A huge body of knowledge has been developed over a long period of time, in many aspects predating the availability of modern computers and their software.\n\n\n\n\n\n\n\n**State of the art in contemporary engineering**\n\n\n\n1. Contemporary engineering usually establishes first a horizontal layout in a properly projected plane.\n\n\n\n2. In a second step the vertical profile (i.e. sequence of segments with constant gradients  together with smoothing segments showing a variation in gradient) is added.\n\n\n\n3. In the rail domain in most cases a cant layout is added to the horizontal layout to compensate a part of the unwanted lateral acceleration.\n\n\n\n4. In a final step the proposed layout is checked against a defined set of rules, formulas and thresholds to guarantee the conformance against the regulation.\n\n\n\nThe sequence of steps might change from case to case and might be repeated one or more times to achieve the economic objectives and fulfill regulatory safety requirements. \n\n\n\n\n\nContemporary alignment design almost always implements a 2.5 dimension approach. \n\n\n\nThe resulting and documented geometry might be very precise or just good enough to meet safety thresholds. This depends on factors like priorities of the management, date of the design - existing alignments might have been designed more then 50 years ago - or software tools used. Working with legacy data in a high precision BIM model requires a good understanding of these factors.\n\n\n\n**Distinction between business modeling and IFC core geometry**\n\n\n\nAccording to IFC modeling principles alignment entities are organised in two large parts. The two parts work together, but they can also be used independently from each other\n\n\n\n1. Business aspects of alignment\n\n2. Representation with the IFC geometry resources\n\n\n\n**Business aspects of alignment:** Here the focus is a on a schema structure as close to business terminology as possible. It is possible to have a very detailed segment structure with many domain specific properties attached. Examples for domain specific properties are design speed or cant deficiency.\n\n\n\n**Representation with IFC geometry resources:** Here the focus is on using as much of the established IFC geometry entities as possible. A mapping between Business aspects and IFC geometry is proposed.\n\n\n\n**IFC modelling**\n\n\n\nIn IFC a single alignment must have:  \n\n\n\n* a horizontal alignment defined in the x/y plane of the engineering coordinate system  \n\n\n\nA single alignment may have: \n\n\n\n* an accompanying vertical alignment, defined along the horizontal alignment in the distance along / z coordinate space  \n\n* a relative alignment, defined as a span within another alignment and/or at constant or variable offsets  \n\n* a 3D alignment, either computed from the horizontal and vertical alignment, or extracted from geospatial data.  \n\n\n\nAlignments may be aggregated into referents (_IfcReferent_) or derivative alignments. Derivative alignments may be used to indicate dependent alignments, such as an alignment for a bridge that is relative to a parent alignment for a road, where the child _IfcAlignment_ may have its shape representation set to _IfcOffsetCurveByDistances_ that starts and ends at a span within the extent of the shape representation of the parent _IfcAlignment_.  \n\n\n\nAlignments may be assigned to groups using _IfcRelAssignsToGroup_, where _IfcGroup_ or subtypes may capture information common to multiple alignments.  \n\n\n\nSupported shape representations of <span class=\"self-ref\">IfcAlignment</span> are:  \n\n\n\n* _IfcGradientCurve_ as a 3D horizontal and vertical alignment (represented by their alignment segments)  \n\n* _IfcCompositeCurve_ as a 2D horizontal alignment (represented by its horizontal alignment segments) without a vertical alignment  \n\n* _IfcOffsetCurveByDistances_ as a 2D or 3D curve defined relative to an _IfcAlignmentCurve_ or another _IfcOffsetCurveByDistances_  \n\n* _IfcSegmentedReferenceCurve_ as a 3D curve defined relative to an _IfcGradientCurve_ to incorporate the application of cant \n\n* _IfcPolyline_ as a 3D alignment by a 3D polyline representation (such as coming from a survey)  \n\n* _IfcPolyline_ as a 2D horizontal alignment by a 2D polyline representation (such as in very early planning phases or as a map representation)  \n\n\n\nThe _RepresentationIdentifier_ shall always be set to 'Axis' and the _RepresentationType_ shall be set to either 'Curve2D' or 'Curve3D' depending on if the referenced curve is 2- or 3-dimensional\n\n\n\n> NOTE&nbsp; Derivative specifications (Model View Definitions) may expand the above set to include additional supported curve types.\n\n\n",
        "Psets": {
          "Pset_DiscretizedPointListCommon": {
            "Properties": {
              "StandardDeviationHorizontal": {
                "type": "length",
                "Description": ""
              },
              "StandardDeviationVertical": {
                "type": "length",
                "Description": ""
              },
              "DiscretizedPoint": {
                "type": "cp_discretizedpoint",
                "Description": ""
              }
            }
          },
          "Pset_RailwayAlignmentCommon": {
            "Properties": {
              "VerticalReferenceAxis": {
                "type": "penum_alignmentverreferenceaxis",
                "Description": ""
              },
              "CantRotationAxis": {
                "type": "penum_alignmentcantrotationaxis",
                "Description": ""
              }
            }
          }
        }
      },
      "IfcAnnotation": {
        "Parent": "IfcProduct",
        "Description": "An annotation is an information element within the geometric (and spatial) context of a project, that adds a note or meaning to the objects which constitutes the project model. Annotations include additional points, curves, text, dimensioning, hatching and other forms of graphical notes. It also includes virtual or symbolic representations of additional model components, not representing products or spatial structures, such as event elements, survey points, contour lines or similar.\n\n\n\n> NOTE&nbsp; Additional presentation information (often 2D) such as tag number or hatching, that is directly related to a particular product representation is included within the _IfcProductDefinitionShape_ having various _IfcShapeRepresentation_'s of the _IfcElement_ (and its subtypes). Only those presentation information, that cannot be directly related to a single product, have to be wrapped within the _IfcAnnotation_.\n\n\n\nIf available, the annotation should be related to the spatial context of the project, by containing the annotation within the appropriate level of the building structure (site, facility, facility part or building, storey, or space). This is handled by the _IfcRelContainedInSpatialStructure_ relationship.\n\n\n\nThe _IfcAnnotation_ can provide specific 0D, 1D, and 2D geometric items as representation of the annotation, offering annotation point, curves, and surfaces. In addition to the predefined type values in _IfcAnnotationTypeEnum_, the following values can be used for the _ObjectType_ (with _PredefinedType_ attribute value USERDEFINED).  \n\n\n\n*  **'Annotation point'** is an annotation provided by a point that has additional semantic. The inherited attribute _ObjectType_ should be used to capture the type of point annotation, some suggested values are:  \n\n    *  **'SurveyPoint'**: A single survey point represented by a Cartesian point. A property set may add the conditions (method, accuracy, etc. to the survey point).\n\n    *  **'SurveyArea'**: A set of survey points represented by Cartesian point. These coordinates are determined relative to the coordinates of a reference point, which acts as the datum for the survey. Properties attached apply equally to all points. The difference in elevation of the survey points enables terrain to be determined.\n\n\n\n*  **'Annotation curve'** is an annotation provided by a curve that has additional semantic. The inherited attribute _ObjectType_ should be used to capture the type of curve annotation, some suggested values are:   \n\n    *  **'ContourLine'**: A line of constant elevation typically used on geographic maps where the spacing of lines at constant intervals of elevation may be used as an indication of slope.\n\n    *  **'IsoBar'**: A line of constant pressure typically used on weather maps or to show pressure gradient in spaces, chambers or externally.\n\n    *  **'IsoLux'**: A line of constant illumination typically used to show the distribution of illumination levels and/or day lighting in a space or externally.\n\n    *  **'IsoTherm'**: A line of constant temperature typically used to show the distribution and effect of heating or cooling within a space or to show temperature distribution on a geographic map.\n\n    \n\n*  **'Annotation surface'**: is an annotation provided by a surface that has additional semantic. The inherited attribute _ObjectType_ should be used to capture the type of surface annotation, some suggested values are:   \n\n     * **'SurveyArea'**: A surface patch based on survey points.\n\n  \n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n"
      },
      "IfcBridge": {
        "Parent": "IfcFacility",
        "Description": "A Bridge is civil engineering works that affords passage to pedestrians, animals, vehicles, and services above obstacles or between two points at a height above ground.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition from [ISO 6707-1:2014:  \n\n> Civil engineering works that affords passage to pedestrians, animals, vehicles, and services above obstacles or between two points at a height above ground.\n\n\n",
        "Psets": {
          "Pset_BridgeCommon": {
            "Properties": {
              "StructureIndicator": {
                "type": "PEnum_StructureIndicator",
                "Description": "",
                "values": [
                  "COATED",
                  "COMPOSITE",
                  "HOMOGENEOUS"
                ]
              }
            }
          }
        }
      },
      "IfcBridge.SUSPENSION": {
        "Parent": "IfcBridge",
        "Description": ""
      },
      "IfcBridge.ARCHED": {
        "Parent": "IfcBridge",
        "Description": ""
      },
      "IfcBridge.FRAMEWORK": {
        "Parent": "IfcBridge",
        "Description": ""
      },
      "IfcBridge.CANTILEVER": {
        "Parent": "IfcBridge",
        "Description": ""
      },
      "IfcBridge.GIRDER": {
        "Parent": "IfcBridge",
        "Description": ""
      },
      "IfcBridge.TRUSS": {
        "Parent": "IfcBridge",
        "Description": ""
      },
      "IfcBridge.CABLE_STAYED": {
        "Parent": "IfcBridge",
        "Description": ""
      },
      "IfcBridge.CULVERT": {
        "Parent": "IfcBridge",
        "Description": ""
      },
      "IfcBuilding": {
        "Parent": "IfcFacility",
        "Description": "A building represents a structure that provides shelter for its occupants or contents and stands in one place. The building is also used to provide a basic element within the spatial structure hierarchy for the components of a building project (together with site, storey, and space).\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition from ISO 6707-1:  \n\n> Construction work that has the provision of shelter for its occupants or contents as one of its main purpose and is normally designed to stand permanently in one place.\n\n\n\nA building is (if specified) associated to a site. A building may span over several connected or disconnected buildings. Therefore building complex provides for a collection of buildings included in a site. A building can also be decomposed in (vertical) parts, where each part defines a building section. This is defined by the composition type attribute of the supertype _IfcSpatialStructureElements_ which is interpreted as follow:\n\n\n\n* **COMPLEX**: building complex\n\n* **ELEMENT**: building\n\n* **PARTIAL**: building section\n\n\n\nThe _IfcBuilding_ is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical). The spatial structure elements are linked together by using the objectified relationship _IfcRelAggregates_. Figure 1 shows the _IfcBuilding_ as part of the spatial structure. It also serves as the spatial container for building and other elements.\n\n\n\n> NOTE&nbsp; Detailed requirements on mandatory element containment and placement structure relationships are given in view definitions and implementer agreements.\n\n\n\n![\"IfcBuildingStorey as part of a spatial structure\"](../../../../figures/ifcbuilding-spatialstructure.png \"Figure 1 &mdash; Building composition\")\n\n\n\nSystems, such as building service or electrical distribution systems, zonal systems, or structural analysis systems, relate to _IfcBuilding_ by using the objectified relationship _IfcRelServicesBuildings_.\n\n\n\nFigure 2 describes the heights and elevations of the _IfcBuilding_. It is used to provide the height above sea level of the project height datum for this building, that is, the internal height 0.00. The height 0.00 is often used as a building internal reference height and equal to the floor finish level of the ground floor.\n\n\n\n* base elevation of building provided by: _IfcBuilding.ElevationOfRefHeight_, it is usually the top of construction slab \n\n* base elevation of terrain at the perimeter of the building provided by: _IfcBuilding.ElevationOfTerrain_, it is usually the minimum elevation is sloped terrain \n\n* total height of building, also referred to as ridge height (top of roof structure, e.g the ridge against terrain): provided by BaseQuantity with Name=\"TotalHeight\" \n\n* eaves height of building (base of roof structure, e.g the eaves against terrain): provided by BaseQuantity with Name=\"EavesHeight\" \n\n\n\n<table border=\"0\" cellpadding=\"2\" cellspacing=\"2\">\n\n      <tbody>\n\n        <tr valign=\"top\">\n\n          <td align=\"left\" valign=\"top\">\n\n            <img src=\"../../../../figures/ifcbuilding_heights.png\" alt=\"building heights\" border=\"0\" height=\"420\" width=\"800\">&nbsp;\n\n          </td>\n\n        </tr>\n\n        <tr>\n\n          <td>\n\n            <p class=\"figure\">Figure 2 &mdash; Building elevations\n\n            </p>\n\n          </td>\n\n        </tr>\n\n      </tbody>\n\n    </table>\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0.\n\n\n",
        "Psets": {
          "Pset_BuildingCommon": {
            "Properties": {
              "BuildingID": {
                "type": "string",
                "Description": "A unique identifier assigned to a building. A temporary identifier is initially assigned at the time of making a planning application. This temporary identifier is changed to a permanent identifier when the building is registered into a statutory buildings and properties database.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "FireProtectionClass": {
                "type": "string",
                "Description": "Main fire protection class for the building which is assigned from the fire protection classification table as given by the relevant national building code.\n"
              },
              "GrossPlannedArea": {
                "type": "real",
                "Description": "Total planned area for the building storey. Used for programming the building storey.\n"
              },
              "IsLandmarked": {
                "type": "logical",
                "Description": "This builing is listed as a historic building (TRUE), or not (FALSE), or unknown.\n",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "IsPermanentID": {
                "type": "boolean",
                "Description": "Indicates whether the identity assigned to a land parcel is permanent (= TRUE) or temporary (=FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NetPlannedArea": {
                "type": "real",
                "Description": "Total planned net area for the building storey. Used for programming the building storey.\n"
              },
              "NumberOfStoreys": {
                "type": "integer",
                "Description": "The number of storeys within a building.\n\nCaptured for those cases where the IfcBuildingStorey entity is not used. Note that if IfcBuilingStorey is asserted and the number of storeys in a building can be determined from it, then this approach should be used in preference to setting a property for the number of storeys.\n"
              },
              "OccupancyType": {
                "type": "string",
                "Description": "Occupancy type for this object.\n\nIt is defined according to the presiding national building code.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SprinklerProtection": {
                "type": "boolean",
                "Description": "Indication whether this object is sprinkler protected (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtectionAutomatic": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic sprinkler protection (TRUE) or not (FALSE).\n\nIt should only be given, if the property \"SprinklerProtection\" is set to TRUE.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "YearOfConstruction": {
                "type": "string",
                "Description": "Year of construction of this building, including expected year of completion.\n"
              },
              "YearOfLastRefurbishment": {
                "type": "string",
                "Description": "Year of last major refurbishment, or reconstruction, of the building (applies to reconstruction works).\n"
              }
            }
          },
          "Pset_BuildingUse": {
            "Properties": {
              "MarketCategory": {
                "type": "string",
                "Description": "Category of use e.g. residential, commercial, recreation etc.\n"
              },
              "MarketSubCategoriesAvailableFuture": {
                "type": "string",
                "Description": "A list of the sub categories of property that are expected to be available in the future expressed in terms of IfcLabel.\n"
              },
              "MarketSubCategoriesAvailableNow": {
                "type": "string",
                "Description": "A list of the sub categories of property that are currently available expressed in terms of IfcLabel.\n"
              },
              "MarketSubCategory": {
                "type": "string",
                "Description": "Subset of category of use e.g. multi-family, 2 bedroom, low rise.\n"
              },
              "NarrativeText": {
                "type": "string",
                "Description": "Added information relating to the adjacent building use that is not appropriate to the general descriptive text associated with an entity through the inherited IfcRoot.Description.\n"
              },
              "PlanningControlStatus": {
                "type": "string",
                "Description": "Label of zoning category or class, or planning control category for the site or facility.\n"
              },
              "RentalRatesInCategoryFuture": {
                "type": "real",
                "Description": "Range of the cost rates for property expected to be available in the future in the required category.\n"
              },
              "RentalRatesInCategoryNow": {
                "type": "real",
                "Description": "Range of the cost rates for property currently available in the required category.\n"
              },
              "TenureModesAvailableFuture": {
                "type": "string",
                "Description": "A list of the tenure modes that are expected to be available in the future expressed in terms of IfcLabel.\n"
              },
              "TenureModesAvailableNow": {
                "type": "string",
                "Description": "A list of the tenure modes that are currently available expressed in terms of IfcLabel.\n"
              },
              "VacancyRateInCategoryFuture": {
                "type": "real",
                "Description": "Percentage of vacancy found in the particular category expected in the future.\n"
              },
              "VacancyRateInCategoryNow": {
                "type": "real",
                "Description": "Percentage of vacancy found in the particular category currently.\n"
              }
            }
          },
          "Pset_BuildingUseAdjacent": {
            "Properties": {
              "MarketCategory": {
                "type": "string",
                "Description": "Category of use e.g. residential, commercial, recreation etc.\n"
              },
              "MarketSubCategory": {
                "type": "string",
                "Description": "Subset of category of use e.g. multi-family, 2 bedroom, low rise.\n"
              },
              "NarrativeText": {
                "type": "string",
                "Description": "Added information relating to the adjacent building use that is not appropriate to the general descriptive text associated with an entity through the inherited IfcRoot.Description.\n"
              },
              "PlanningControlStatus": {
                "type": "string",
                "Description": "Label of zoning category or class, or planning control category for the site or facility.\n"
              }
            }
          },
          "Qto_BuildingBaseQuantities": {
            "Properties": {
              "EavesHeight": {
                "type": "q_length",
                "Description": "Standard net height of this storey, from the top surface of the construction floor, to the bottom surface of the construction floor or roof above. Only provided is there is a constant height.\n"
              },
              "FootprintArea": {
                "type": "q_area",
                "Description": "Gross area of the site covered by the building(s).\n"
              },
              "GrossFloorArea": {
                "type": "q_area",
                "Description": "Sum of all gross areas of spaces within the building storey. It includes the area of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "Height": {
                "type": "q_length",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetFloorArea": {
                "type": "q_area",
                "Description": "Sum of all net areas of spaces within the building storey. It excludes the area of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              }
            }
          },
          "Pset_OutsideDesignCriteria": {
            "Properties": {
              "BuildingThermalExposure": {
                "type": "PEnum_BuildingThermalExposure",
                "Description": "The thermal exposure expected by the building based on surrounding site conditions.\n",
                "values": [
                  "HEAVY",
                  "LIGHT",
                  "MEDIUM"
                ]
              },
              "CoolingDesignDay": {
                "type": "string",
                "Description": "The month, day  and time that has been selected for the cooling design calculations.\n"
              },
              "CoolingDryBulb": {
                "type": "real",
                "Description": "Outside dry bulb temperature for cooling design.\n"
              },
              "CoolingWetBulb": {
                "type": "real",
                "Description": "Outside wet bulb temperature for cooling design.\n"
              },
              "HeatingDesignDay": {
                "type": "string",
                "Description": "The month, day and time that has been selected for the heating design calculations.\n"
              },
              "HeatingDryBulb": {
                "type": "real",
                "Description": "Outside dry bulb temperature for heating design.\n"
              },
              "HeatingWetBulb": {
                "type": "real",
                "Description": "Outside wet bulb temperature for heating design.\n"
              },
              "PrevailingWindDirection": {
                "type": "real",
                "Description": "The prevailing wind angle direction measured from True North (0 degrees) in a clockwise direction.\n"
              },
              "PrevailingWindVelocity": {
                "type": "real",
                "Description": "The design wind velocity coming from the direction specified by the PrevailingWindDirection attribute.\n"
              },
              "WeatherDataDate": {
                "type": "string",
                "Description": "The date for which the weather data was gathered.\n"
              },
              "WeatherDataStation": {
                "type": "string",
                "Description": "The site weather data station description or reference to the data source from which weather data was obtained for use in calculations.\n"
              }
            }
          },
          "Pset_UtilityConsumptionPHistory": {
            "Properties": {
              "Electricity": {
                "type": "real",
                "Description": "The amount of electricity consumed during the period specified in the time series.\n"
              },
              "Fuel": {
                "type": "real",
                "Description": "The amount of fuel consumed during the period specified in the time series.\n"
              },
              "Heat": {
                "type": "real",
                "Description": "The amount of heat energy consumed during the period specified in the time series.\n"
              },
              "Steam": {
                "type": "real",
                "Description": "The amount of steam consumed during the period specified in the time series.\n"
              },
              "Water": {
                "type": "real",
                "Description": "The amount of water consumed during the period specified in the time series.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "ElevationOfRefHeight": {
                "type": "real",
                "Description": "Elevation above sea level of the reference height used for all storey elevation measures, equals to height 0.0. It is usually the ground floor level."
              },
              "ElevationOfTerrain": {
                "type": "real",
                "Description": "Elevation above the minimal terrain level around the foot print of the building, given in elevation above sea level."
              }
            }
          }
        }
      },
      "IfcBuildingStorey": {
        "Parent": "IfcSpatialStructureElement",
        "Description": "The building storey has an elevation and typically represents a (nearly) horizontal aggregation of spaces that are vertically bound.\n\n\n\nA storey is (if specified) associated to a building. A storey may span over several connected storeys. Therefore storey complex provides for a collection of storeys included in a building. A storey can also be decomposed in (horizontical) parts, where each part defines a partial storey. This is defined by the composition type attribute of the supertype _IfcSpatialStructureElements_ which is interpreted as follow:\n\n\n\n* **COMPLEX**: building storey complex\n\n* **ELEMENT**: building storey\n\n* **PARTIAL**: partial building storey\n\n\n\n> EXAMPLE&nbsp; In split level houses, a storey is split into two or more partial storeys, each with a different elevation. It can be handled by defining a storey, which includes two or more partial storeys with the individual elevations.\n\n\n\nThe _IfcBuildingStorey_ is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical). The spatial structure elements are linked together by using the objectified relationship _IfcRelAggregates_.\n\n\n\nFigure 1 shows the _IfcBuildingStorey_ as part of the s patial structure. It also serves as the spatial container for building and other elements.\n\n\n\n> NOTE&nbsp; Detailed requirements on mandatory element containment and placement structure relationships are given in view definitions and implementer agreements.\n\n\n\n![\"IfcBuildingStorey as part of a spatial structure\"](../../../../figures/ifcbuildingstorey-spatialstructure.png \"Figure 1 &mdash; Building storey composition\")\n\n\n\nFigure 2 describes the heights and elevations of the _IfcBuildingStorey_.\n\n\n\n* elevation of storey provided by: _IfcBuildingStorey.Elevation_ as a local height value relative to _IfcBuilding.ElevationOfRefHeight_, it is usually the top of construction slab\n\n* net height of storey, also referred to as total height or system height (top of construction slab to top of construction slab above): provided by BaseQuantity with Name=\"GrossHeight\"\n\n* net height of storey (top of construction slab to bottom of construction slab above): provided by BaseQuantity with Name=\"NetHeight\"\n\n\n\n![\"space heights\"](../../../../figures/ifcbuildingstorey_heights.png \"Figure 2 &mdash; Building storey elevations\")\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n",
        "Psets": {
          "Pset_BuildingStoreyCommon": {
            "Properties": {
              "AboveGround": {
                "type": "logical",
                "Description": "Indication whether this building storey is fully above ground (TRUE), or below ground (FALSE), or partially above and below ground (UNKNOWN) - as in sloped terrain.\n",
                "values": [
                  "TRUE",
                  "FALSE",
                  "UNKNOWN"
                ]
              },
              "EntranceLevel": {
                "type": "boolean",
                "Description": "Indication whether this building storey is an entrance level to the building (TRUE), or (FALSE) if otherwise.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "GrossPlannedArea": {
                "type": "real",
                "Description": "Total planned area for the building storey. Used for programming the building storey.\n"
              },
              "LoadBearingCapacity": {
                "type": "real",
                "Description": "Maximum load bearing capacity of the floor structure throughtout the storey as designed.\n"
              },
              "NetPlannedArea": {
                "type": "real",
                "Description": "Total planned net area for the building storey. Used for programming the building storey.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SprinklerProtection": {
                "type": "boolean",
                "Description": "Indication whether this object is sprinkler protected (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtectionAutomatic": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic sprinkler protection (TRUE) or not (FALSE).\n\nIt should only be given, if the property \"SprinklerProtection\" is set to TRUE.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Qto_BuildingStoreyBaseQuantities": {
            "Properties": {
              "GrossFloorArea": {
                "type": "q_area",
                "Description": "Sum of all gross areas of spaces within the building storey. It includes the area of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossHeight": {
                "type": "q_length",
                "Description": "Standard gross height of this storey, from the top surface of the construction floor, to the top surface of the construction floor or roof above. Only provided is there is a constant height.\n"
              },
              "GrossPerimeter": {
                "type": "q_length",
                "Description": "Gross perimeter at the floor level of this space. It all sides of the space, including those parts of the perimeter that are created by virtual boundaries and openings (like doors).\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "NetFloorArea": {
                "type": "q_area",
                "Description": "Sum of all net areas of spaces within the building storey. It excludes the area of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetHeigtht": {
                "type": "q_length",
                "Description": "Standard net height of this storey, from the top surface of the construction floor, to the bottom surface of the construction floor or roof above. Only provided is there is a constant height.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Elevation": {
                "type": "real",
                "Description": "Elevation of the base of this storey, relative to the 0,00 internal reference height of the building. The 0.00 level is given by the absolute above sea level height by the _ElevationOfRefHeight_ attribute given at _IfcBuilding_.\\X\\0D\n\\X\\0D\n> NOTE&nbsp; If the geometric data is provided (_ObjectPlacement_ is specified), the _Elevation_ value shall either not be included, or be equal to the local placement Z value."
              }
            }
          }
        }
      },
      "IfcBuiltElement": {
        "Parent": "IfcElement",
        "Description": "The built element comprises all elements that are primarily part of the construction of a built facility, i.e., its structural and space separating system. Built elements are all physically existent and tangible things  \n\n\n\n{ .extDef}\n\n> NOTE Definition from ISO 6707-1:  \n\n> Major functional part of a building, examples are foundation, floor, roof, wall. \n\n\n\nThis _IfcBuiltElement_ is a generalization of all elements that participate in a building system. Typical examples of _IfcBuiltElement_'s are (among others):  \n\n\n\n* built elements within a space separation systems\n\n* built elements within an enclosure system (such as a facade)\n\n* built elements within a fenestration system\n\n* built elements within a load bearing system\n\n* built elements within a foundation system\n\n\n\n  \n\n> EXAMPLE&nbsp; built elements are walls, curtain wall, doors, columns, pile, and others.  \n\n \n\nThe IfcBuiltElement can be instantiated in the case when arbitrary built elements cannot be expressed by a subtype of IfcBuiltElement.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n\n## Formal Propositions\n\n\n\n### MaxOneMaterialAssociation\n\nThere should be only a maximum of one material association assigned to an building element.\n\n> NOTE&nbsp; The material association can assign a single material, a set of materials, a set of material layers, or a set of material profiles by a single association relationship.\n\n\n\n{ .change-ifc2x4}\n\n> FC2x4 CHANGE The where rule has been promoted from the subtype _IfcWall_.\n",
        "Psets": {
          "Pset_BuiltElementCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          }
        }
      },
      "IfcBuiltElementType": {
        "Parent": "IfcElementType",
        "Description": "The _IfcBuiltElementType_ provides the type information for _IfcBuiltElement_ occurrences.  \n\n> NOTE&nbsp; The product representations are defined as representation maps (at the level of the supertype _IfcTypeProduct_, which gets assigned by an element occurrence instance through the _IfcShapeRepresentation.Item[1]_ being an _IfcMappedItem_.\n\n\n\nA built element type is used to define the common properties of a certain type of built element that are applied to all occurrences of that type. It is used to define a built element specification (i.e. the specific product information, that is common to all occurrences of that product type). Built element types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.  \n\n\n\nThe _IfcBuiltElementType_ can be instantiated in the case when arbitrary built element types cannot be expressed by a subtype of _IfcBuiltElementType_.\n\n\n\nOccurrences of subtypes of the _IfcBuiltElementType_ are represented by instances of the appropriate subtypes of _IfcBuiltElement_.  \n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n"
      },
      "IfcCivilElement": {
        "Parent": "IfcElement",
        "Description": "An _IfcCivilElement_ is a generalization of all elements within a civil engineering works that cannot be represented as BuildingElements, DistributionElements or GeographicElements. Depending on the context of the construction project, included building work, such as buildings or factories, are represented as a collection of _IfcBuildingElement_'s, distribution systems, such as piping or drainage, are represented as a collection of _IfcDistributionElement_'s, and other geographic elements, such as trees, light posts, traffic signs etc. are represented as _IfcGeographicElement_'s.\n\n\n\n> NOTE&nbsp; The _IfcCivilElement_ has been intruduced as a stub for future extensions of this specification to include an object model for civil engineering works.\n\n\n\nCivil elements are typically horizontally organized using a spatial structure expressed by spatial zones, therefore _IfcCivilElement_ is spatially contained by default within an _IfcSpatialZone_.\n\n\n\n> HISTORY &nbsp;New entity in IFC4.\n",
        "Psets": {
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          }
        }
      },
      "IfcDistributionElement": {
        "Parent": "IfcElement",
        "Description": "This _IfcDistributionElement_ is a generalization of all elements that participate in a distribution system. Typical examples of _IfcDistributionElement_'s are (among others):\n\n\n\n* building service elements within a heating systems \n\n* building service elements within a cooling system \n\n* building service elements within a ventilation system \n\n* building service elements within a plumbing system \n\n* building service elements within a drainage system \n\n* electrical elements \n\n* elements within a communication network \n\n* within a sensor (monitoring) network\n\n\n\nThe _IfcDistributionElement_ is further specialized in the IFC specification. Direct instantiation of _IfcDistributionElement_ without an assigned subtype of _IfcDistributionElementType_ provides the meaning of an distribution element proxy.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.5.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE The entity is marked as deprecated for instantiation - will be made ABSTRACT in future releases.\n\n\n",
        "Psets": {
          "Pset_ElectricalDeviceCommon": {
            "Properties": {
              "ConductorFunction": {
                "type": "string",
                "Description": "Function of a line conductor to which a device  is intended to be connected where L1, L2 and L3 represent the phase lines according to IEC 60446 notation (sometimes phase lines may be referenced by color [Red, Blue, Yellow] or by number [1, 2, 3] etc). Protective Earth is sometimes also known as CPC or common protective conductor. Note that for an electrical device, a set of line conductor functions may be applied.\n"
              },
              "HasProtectiveEarth": {
                "type": "boolean",
                "Description": "Indicates whether the electrical device has a protective earth connection (=TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InsulationStandardClass": {
                "type": "PEnum_InsulationStandardClass",
                "Description": "Insulation standard classes provides basic protection information against electric shock. Defines levels of insulation required in terms of constructional requirements (creepage and clearance distances) and electrical requirements (compliance with electric strength tests). Basic insulation is considered to be shorted under single fault conditions. The actual values required depend on the working voltage to which the insulation is subjected, as well as other factors. Also indicates whether the electrical device has a protective earth connection.\n",
                "values": [
                  "CLASS0APPLIANCE",
                  "CLASS0IAPPLIANCE",
                  "CLASSIAPPLIANCE",
                  "CLASSIIAPPLIANCE",
                  "CLASSIIIAPPLIANCE"
                ]
              },
              "IP_Code": {
                "type": "string",
                "Description": ""
              },
              "NominalFrequencyRange": {
                "type": "real",
                "Description": "The upper and lower limits of frequency for which the operation of the device is certified.\n"
              },
              "NumberOfPoles": {
                "type": "integer",
                "Description": "The number of live lines that is intended to be handled by the device.\n"
              },
              "PowerFactor": {
                "type": "real",
                "Description": "The ratio between the rated electrical power and the product of the rated current and rated voltage\n"
              },
              "RatedCurrent": {
                "type": "real",
                "Description": "The current that a device is designed to handle.\n"
              },
              "RatedVoltage": {
                "type": "real",
                "Description": "The range of allowed voltage that a device is certified to handle. The upper bound of this value is the maximum.\n"
              }
            }
          }
        }
      },
      "IfcDistributionElementType": {
        "Parent": "IfcElementType",
        "Description": "The _IfcDistributionElementType_ defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is common to all occurrences of that product type).\n\n\n\n> NOTE&nbsp; The product representations are defined as representation maps (at the level of the supertype _IfcTypeProduct_, which gets assigned by an element occurrence instance through the _IfcShapeRepresentation.Item[1]_ being an _IfcMappedItem_.\n\n\n\nA distribution element type is used to define the common properties of a certain type of a distribution element that may be applied to many instances of that feature type to assign a specific style. Distribution element types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.\n\n\n\nThe occurrences of the _IfcDistributionElementType_ are represented by instances of _IfcDistributionElement_ (or its subtypes).\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x3}\n\n> IFC2x3 CHANGE&nbsp; The entity has been made non-abstract\n\n\n\n{ .change-ifc2x3}\n\n> IFC4 CHANGE&nbsp; The entity is marked as deprecated for instantiation - will be made ABSTRACT in future releases.\n"
      },
      "IfcElement": {
        "Parent": "IfcProduct",
        "Description": "An element is a generalization of all components that make up an AEC product.\n\n\n\nElements are physically existent objects, although they might be void elements, such as holes. Elements either remain permanently in the AEC product, or only temporarily, as formwork does. Elements can be either assembled on site or pre-manufactured and built in on site.\n\n\n\n> EXAMPLE&nbsp; Examples of elements in a building construction context are walls, floors, windows and recesses.\n\n\n\nThe elements can be logically contained by a spatial structure element that constitutes a certain level within a project structure hierarchy (site, building, storey or space). This is done by using the _IfcRelContainedInSpatialStructure_ relationship. An element can have material and quantity information assigned through the _IfcRelAssociatesMaterial_ and _IfcRelDefinesByProperties_ relationship.\n\n\n\nIn addition an element can be declared to be a specific occurrence of an element type (and thereby be defined by the element type properties) using the _IfcRelDefinesByType_ relationship. An element can also be defined as an element assembly that is a group of semantically and topologically related elements that form a higher level part of the AEC product. Those element assemblies are defined by virtue of the _IfcRelAggregates_ relationship.\n\n\n\n> EXAMPLE&nbsp; Examples for element assembly are complete Roof Structures, made by several Roof Areas, or a Stair, composed by Flights and Landings.\n\n\n\nElements that performs the same function may be grouped by an \"Element Group By Function\". It is realized by an instance of _IfcGroup_ with the _ObjectType_ ='ElementGroupByFunction'.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n",
        "Psets": {
          "Pset_EnvironmentalImpactIndicators": {
            "Properties": {
              "AtmosphericAcidificationPerUnit": {
                "type": "real",
                "Description": "Quantity of gases responsible for the atmospheric acidification calculated in equivalent SO2\n"
              },
              "ClimateChangePerUnit": {
                "type": "real",
                "Description": "Quantity of greenhouse gases emitted calculated in equivalent CO2\n"
              },
              "EutrophicationPerUnit": {
                "type": "real",
                "Description": "Quantity of eutrophicating compounds calculated in equivalent PO4\n"
              },
              "ExpectedServiceLife": {
                "type": "real",
                "Description": "Expected service life in years.\n"
              },
              "FunctionalUnitReference": {
                "type": "string",
                "Description": "Reference to a database or a classification\n"
              },
              "HazardousWastePerUnit": {
                "type": "real",
                "Description": "Quantity of hazardous waste generated\n"
              },
              "InertWastePerUnit": {
                "type": "real",
                "Description": "Quantity of inert waste generated\n"
              },
              "LifeCyclePhase": {
                "type": "PEnum_LifeCyclePhase",
                "Description": "The whole life cycle or only a given phase  from which environmental data are valid.\n",
                "values": [
                  "ACQUISITION",
                  "CRADLETOSITE",
                  "DECONSTRUCTION",
                  "DISPOSAL",
                  "DISPOSALTRANSPORT",
                  "GROWTH",
                  "INSTALLATION",
                  "MAINTENANCE",
                  "MANUFACTURE",
                  "OCCUPANCY",
                  "OPERATION",
                  "PROCUREMENT",
                  "PRODUCTION",
                  "PRODUCTIONTRANSPORT",
                  "RECOVERY",
                  "REFURBISHMENT",
                  "REPAIR",
                  "REPLACEMENT",
                  "TRANSPORT",
                  "USAGE",
                  "WASTE",
                  "WHOLELIFECYCLE"
                ]
              },
              "NonHazardousWastePerUnit": {
                "type": "real",
                "Description": "Quantity of non hazardous waste generated\n"
              },
              "NonRenewableEnergyConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of non-renewable energy used as defined in ISO21930:2007\n"
              },
              "PhotochemicalOzoneFormationPerUnit": {
                "type": "real",
                "Description": "Quantity of gases creating the photochemical ozone calculated in equivalent ethylene\n"
              },
              "RadioactiveWastePerUnit": {
                "type": "real",
                "Description": "Quantity of radioactive waste generated\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "RenewableEnergyConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of renewable energy used as defined in ISO21930:2007\n"
              },
              "ResourceDepletionPerUnit": {
                "type": "real",
                "Description": "Quantity of resources used calculated in equivalent antimony\n"
              },
              "StratosphericOzoneLayerDestructionPerUnit": {
                "type": "real",
                "Description": "Quantity of gases destroying the stratospheric ozone layer calculated in equivalent CFC-R11\n"
              },
              "TotalPrimaryEnergyConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of energy used as defined in ISO21930:2007.\n"
              },
              "Unit": {
                "type": "string",
                "Description": "The unit of the quantity the environmental indicators values are related with.\n"
              },
              "WaterConsumptionPerUnit": {
                "type": "real",
                "Description": "Quantity of water used.\n"
              }
            }
          },
          "Pset_EnvironmentalImpactValues": {
            "Properties": {
              "AtmosphericAcidification": {
                "type": "real",
                "Description": "Quantity of gases responsible for the atmospheric acidification calculated in equivalent SO2.\n"
              },
              "ClimateChange": {
                "type": "real",
                "Description": "Quantity of greenhouse gases emitted calculated in equivalent CO2.\n"
              },
              "Duration": {
                "type": "string",
                "Description": "The period of time for the lease.\n"
              },
              "Eutrophication": {
                "type": "real",
                "Description": "Quantity of eutrophicating compounds calculated in equivalent PO4.\n"
              },
              "HazardousWaste": {
                "type": "real",
                "Description": "Quantity of hazardous waste generated.\n"
              },
              "InertWaste": {
                "type": "real",
                "Description": "Quantity of inert waste generated .\n"
              },
              "LeadInTime": {
                "type": "string",
                "Description": "Lead in time before start of process.\n"
              },
              "LeadOutTime": {
                "type": "string",
                "Description": "Lead out time after end of process.\n"
              },
              "NonHazardousWaste": {
                "type": "real",
                "Description": "Quantity of non hazardous waste generated.\n"
              },
              "NonRenewableEnergyConsumption": {
                "type": "real",
                "Description": "Quantity of non-renewable energy used as defined in ISO21930:2007\n"
              },
              "PhotochemicalOzoneFormation": {
                "type": "real",
                "Description": "Quantity of gases creating the photochemical ozone calculated in equivalent ethylene.\n"
              },
              "RadioactiveWaste": {
                "type": "real",
                "Description": "Quantity of radioactive waste generated.\n"
              },
              "RenewableEnergyConsumption": {
                "type": "real",
                "Description": "Quantity of renewable energy used as defined in ISO21930:2007\n"
              },
              "ResourceDepletion": {
                "type": "real",
                "Description": "Quantity of resources used calculated in equivalent antimony.\n"
              },
              "StratosphericOzoneLayerDestruction": {
                "type": "real",
                "Description": "Quantity of gases destroying the stratospheric ozone layer calculated in equivalent CFC-R11.\n"
              },
              "TotalPrimaryEnergyConsumption": {
                "type": "real",
                "Description": "Quantity of energy used as defined in ISO21930:2007.\n"
              },
              "WaterConsumption": {
                "type": "real",
                "Description": "Quantity of water used.\n"
              }
            }
          },
          "Pset_Condition": {
            "Properties": {
              "AssessmentCondition": {
                "type": "string",
                "Description": "The overall condition of a product based on an assessment of the contributions to the overall condition made by the various criteria considered. The meanings given to the values of assessed condition should be agreed and documented by local agreements. For instance, is overall condition measured on a scale of 1 - 10 or by assigning names such as Good, OK, Poor.\n"
              },
              "AssessmentDate": {
                "type": "string",
                "Description": "Date on which the overall condition is assessed\n"
              },
              "AssessmentDescription": {
                "type": "string",
                "Description": "Qualitative description of the condition.\n"
              },
              "AssessmentType": {
                "type": "string",
                "Description": "Category of latest condition assessment report of the asset.\n"
              },
              "AssessmentMethod": {
                "type": "ifcexternalreference",
                "Description": "External reference to assessment method or application used to perform the assessment.\n"
              },
              "LastAssessmentReport": {
                "type": "string",
                "Description": "Reference to latest condition (state of health) report.\n"
              },
              "NextAssessmentDate": {
                "type": "string",
                "Description": "Date of next condition inspection\n"
              }
            }
          },
          "Pset_ManufacturerOccurrence": {
            "Properties": {
              "AcquisitionDate": {
                "type": "string",
                "Description": "The date that the manufactured item was purchased.\n"
              },
              "AssemblyPlace": {
                "type": "string",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.\n"
              },
              "BarCode": {
                "type": "string",
                "Description": "The identity of the bar code given to an occurrence of the product.\n"
              },
              "BatchReference": {
                "type": "string",
                "Description": "The identity of the batch reference from which an occurrence of a product is taken.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              }
            }
          },
          "Pset_ManufacturerTypeInformation": {
            "Properties": {
              "ArticleNumber": {
                "type": "string",
                "Description": "Article number or reference that is be applied to a configured product according to a standard scheme for article number definition as defined by the manufacturer. It is often used as the purchasing number.\n"
              },
              "AssemblyPlace": {
                "type": "string",
                "Description": "Enumeration defining where the assembly is intended to take place, either in a factory, other offsite location or on the building site.\n"
              },
              "GlobalTradeItemNumber": {
                "type": "string",
                "Description": "The Global Trade Item Number (GTIN) is an identifier for trade items developed by GS1 (www.gs1.org).\n"
              },
              "Manufacturer": {
                "type": "string",
                "Description": "The organization that manufactured and/or assembled the item.\n"
              },
              "ModelLabel": {
                "type": "string",
                "Description": "The descriptive model name of the product model (or product line) as assigned by the manufacturer of the manufactured item.\n"
              },
              "ModelReference": {
                "type": "string",
                "Description": "The model number or designator of the product model (or product line) as assigned by the manufacturer of the manufactured item.\n"
              },
              "ProductionYear": {
                "type": "string",
                "Description": "The year of production of the manufactured item.\n"
              },
              "OperationalDocument": {
                "type": "ifcexternalreference",
                "Description": "Manufacturer's operational document\n"
              },
              "SafetyDocument": {
                "type": "ifcexternalreference",
                "Description": "Manufacturer's safety document\n"
              },
              "PerformanceCertificate": {
                "type": "ifcexternalreference",
                "Description": "Manufacturer's performance certificate\n"
              }
            }
          },
          "Pset_ServiceLife": {
            "Properties": {
              "MeanTimeBetweenFailure": {
                "type": "string",
                "Description": "The average time duration between instances of failure of a product.\n"
              },
              "ServiceLifeDuration": {
                "type": "string",
                "Description": "The length or duration of a service life.  \n\n\n\nThe lower bound indicates pessimistic service life, the upper bound indicates optimistic service life, and the setpoint indicates the typical service life.\n"
              }
            }
          },
          "Pset_Warranty": {
            "Properties": {
              "Exclusions": {
                "type": "string",
                "Description": "Items, conditions or actions that may be excluded from the warranty or that may cause the warranty to become void.\n"
              },
              "IsExtendedWarranty": {
                "type": "boolean",
                "Description": "Indication of whether this is an extended warranty whose duration is greater than that normally assigned to an artefact (=TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PointOfContact": {
                "type": "string",
                "Description": "The organization that should be contacted for action under the terms of the warranty. Note that the role of the organization (manufacturer, supplier, installer etc.) is determined by the IfcActorRole attribute of IfcOrganization.\n"
              },
              "WarrantyContent": {
                "type": "string",
                "Description": "The content of the warranty.\n"
              },
              "WarrantyEndDate": {
                "type": "string",
                "Description": "The date on which the warranty expires.\n"
              },
              "WarrantyIdentifier": {
                "type": "string",
                "Description": "The identifier assigned to a warranty.\n"
              },
              "WarrantyPeriod": {
                "type": "string",
                "Description": "The time duration during which a manufacturer or supplier guarantees or warrants the performance of an artefact.\n"
              },
              "WarrantyStartDate": {
                "type": "string",
                "Description": "The date on which the warranty commences.\n"
              }
            }
          },
          "Pset_EnergyRequirements": {
            "Properties": {
              "EnergyConsumption": {
                "type": "string",
                "Description": "Annual energy consumption requirement\n"
              },
              "PowerDemand": {
                "type": "real",
                "Description": "Power demand of the element\n"
              },
              "EnergySource": {
                "type": "string",
                "Description": "Enumeration defining the energy source or fuel combusted to generate heat if applicable.  Note: hydronic heaters shall use UNSET; dual-use hydronic/electric heaters shall use ELECTRICITY.\n"
              },
              "EnergyConversionEfficiency": {
                "type": "real",
                "Description": "Measure of the efficiency of conversion of fuel energy to mechanical energy\n"
              }
            }
          },
          "Pset_EnvironmentalEmissions": {
            "Properties": {
              "CarbonDioxideEmissions": {
                "type": "real",
                "Description": "Rate of emission of carbon dioxide\n"
              },
              "SulphurDioxideEmissions": {
                "type": "real",
                "Description": "Rate of emission of sulphur dioxide\n"
              },
              "NitrogenOxidesEmissions": {
                "type": "real",
                "Description": "Rate of emission of nitrogen oxides\n"
              },
              "ParticulateMatterEmissions": {
                "type": "real",
                "Description": "Rate of emission of particulate matter\n"
              },
              "NoiseEmissions": {
                "type": "real",
                "Description": "Level of sound emission\n"
              }
            }
          },
          "Pset_MaintenanceStrategy": {
            "Properties": {
              "AssetCriticality": {
                "type": "penum_assetrating",
                "Description": "Rating of the asset's criticality to the operation of the facility\n"
              },
              "AssetFailty": {
                "type": "penum_assetrating",
                "Description": ""
              },
              "AssetPriority": {
                "type": "penum_assetrating",
                "Description": "Combined criticality and frailty rating indicating the operational and maintenance priority of the asset\n"
              },
              "MonitoringType": {
                "type": "penum_monitoringtype",
                "Description": "Monitoring strategy chosen for the asset\n"
              },
              "AccidentResponse": {
                "type": "penum_accidentresponse",
                "Description": "Accident response chosen for the asset\n"
              }
            }
          },
          "Pset_MaintenanceTriggerCondition": {
            "Properties": {
              "MaintenanceLevel": {
                "type": "penum_assetrating",
                "Description": "Adjustment of the service life resulting from the effect of the level or degree of maintenance applied to dcomponents.\n"
              },
              "TargetPerformance": {
                "type": "penum_assetrating",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute.\n"
              },
              "ReplacementLevel": {
                "type": "penum_assetrating",
                "Description": "Performance level at which replacement takes place\n"
              },
              "DisposalLevel": {
                "type": "penum_assetrating",
                "Description": "Performance level at which disposal takes place\n"
              }
            }
          },
          "Pset_MaintenanceTriggerDuration": {
            "Properties": {
              "MaintenanceLevel": {
                "type": "string",
                "Description": "Adjustment of the service life resulting from the effect of the level or degree of maintenance applied to dcomponents.\n"
              },
              "TargetPerformance": {
                "type": "string",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute.\n"
              },
              "ReplacementLevel": {
                "type": "string",
                "Description": "Performance level at which replacement takes place\n"
              },
              "DisposalLevel": {
                "type": "string",
                "Description": "Performance level at which disposal takes place\n"
              }
            }
          },
          "Pset_MaintenanceTriggerPerformance": {
            "Properties": {
              "MaintenanceLevel": {
                "type": "real",
                "Description": "Adjustment of the service life resulting from the effect of the level or degree of maintenance applied to dcomponents.\n"
              },
              "TargetPerformance": {
                "type": "number",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute.\n"
              },
              "ReplacementLevel": {
                "type": "real",
                "Description": "Performance level at which replacement takes place\n"
              },
              "DisposalLevel": {
                "type": "real",
                "Description": "Performance level at which disposal takes place\n"
              },
              "PerformanceUnit": {
                "type": "string",
                "Description": "Unit that quantifies the Target Performance value\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Tag": {
                "type": "string",
                "Description": null
              },
              "ElementType": {
                "type": "string",
                "Description": "The type denotes a particular type that indicates the object further. The use has to be established at the level of instantiable subtypes. In particular it holds the user defined type, if the enumeration of the attribute ''PredefinedType'' is set to USERDEFINED."
              }
            }
          }
        }
      },
      "IfcElementAssembly": {
        "Parent": "IfcElement",
        "Description": "The _IfcElementAssembly_ represents complex element assemblies aggregated from several elements, such as discrete elements, building elements, or other elements.  \n\n\n\n> EXAMPLE Steel construction assemblies, such as trusses and different kinds of frames, can be represented by the _IfcElementAssembly_ entity. Other examples include slab fields aggregated from a number of precast concrete slabs or reinforcement units made from several reinforcement bars. Also bathroom units, staircase sections and other premanufactured or precast elements are examples of the general _IfcElementAssembly_ entity \n\n\n\n> NOTE&nbsp; The _IfcElementAssembly_ is a general purpose entity that is required to be decomposed. Also other subtypes of _IfcElement_ can be decomposed.    \n\nThe assembly structure can be nested, i.e. an _IfcElementAssembly_ could be an aggregated part within another _IfcElementAssembly_.  \n\n\n\n> NOTE&nbsp; View definitions and/or implementer agreements may restrict the number of allowed levels of nesting.  \n\n\n\nThe geometry of an _IfcElementAssembly_ is generally formed from its components, in which case it does not need to have an explicit geometric representation. In some cases it may be useful to also expose an own explicit representation of the aggregate.  \n\n\n\n> NOTE&nbsp; View definitions or implementer agreements may further constrain the applicability of certain shape representations at the _IfcElementAssembly_ in respect of the shape representations of its parts.  \n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.  \n\n\n\n{ .spec-head}\n\nInformal Propositions:\n\n\n\n1. The _IfcElementAssembly_ shall have an aggregation relationship to the contained parts, i.e. the (INV) _IsDecomposedBy_ relationship shall be utilized.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "AssemblyPlace": {
                "values": [
                  "SITE",
                  "FACTORY",
                  "NOTDEFINED"
                ],
                "type": "IfcAssemblyPlaceEnum",
                "Description": "A designation of where the assembly is intended to take place defined by an Enum."
              }
            }
          }
        }
      },
      "IfcElementAssembly.GIRDER": {
        "Parent": "IfcElementAssembly",
        "Description": "A beam-like superstructure, such as bridge main girder extending between abutments and piers built up of beams, braces (as Members) etc. - may also be an aggregation of girder segments.\n\n\n"
      },
      "IfcElementAssembly.SIGNALASSEMBLY": {
        "Parent": "IfcElementAssembly",
        "Description": "An assembly to physically aggregate together one or more signal instances (and also sign instances) including any supporting structural elements such as a simple pole or a rigid frame gantry.\n\n\n"
      },
      "IfcElementAssembly.RIGID_FRAME": {
        "Parent": "IfcElementAssembly",
        "Description": "A structure built up of beams, columns, etc. with moment-resisting joints, such as gantry\n\n\n"
      },
      "IfcElementAssembly.PIER": {
        "Parent": "IfcElementAssembly",
        "Description": "An intermediate support e.g. in a bridge, built up of walls, columns, beams etc.\n\n\n"
      },
      "IfcElementAssembly.GRID": {
        "Parent": "IfcElementAssembly",
        "Description": "A framework of spaced cables or bars that are parallel to or cross each other.\n\n\n"
      },
      "IfcElementAssembly.TRAFFIC_CALMING_DEVICE": {
        "Parent": "IfcElementAssembly",
        "Description": "A structure on the carriageway to control the speed of vehicles.\n\n\n\nNOTE Definition from ISO 6707-1: Encouragement of restrained and considerate behaviour by means such as road humps and reductions in width of the travelled way (US:traffic restraint, UK:speed bump).\n\nNOTE Definition from PIARC: Local carriageway layout (staggered section, choker) or physical device (central island, round- or flat-top road hump, speed bump, rumble strips, etc.) to control the speed of road vehicles.\n\n\n",
        "Psets": {
          "Pset_TrafficCalmingDeviceCommon": {
            "Properties": {
              "Type": {
                "type": "string",
                "Description": "A symbol designator with content according to local standards, e.g.  'BycycleCrossing', 'RoadStuds', 'SpeedBump', 'TransverseBar', 'BusStop', 'Chevron', 'Hatched', 'KeepClear', 'BoxJunction', 'EmergencyExit', 'Intersection', 'Junction'\n"
              }
            }
          }
        }
      },
      "IfcElementAssembly.SLAB_FIELD": {
        "Parent": "IfcElementAssembly",
        "Description": ""
      },
      "IfcElementAssembly.ARCH": {
        "Parent": "IfcElementAssembly",
        "Description": ""
      },
      "IfcElementAssembly.TURNOUTPANEL": {
        "Parent": "IfcElementAssembly",
        "Description": "Trackwork ensuring the support and guidance of a vehicle along any given route among various diverging or intersecting tracks.\n\nNote: definition from NF EN 13232-1-2004.\n\n\n"
      },
      "IfcElementAssembly.BEAM_GRID": {
        "Parent": "IfcElementAssembly",
        "Description": ""
      },
      "IfcElementAssembly.REINFORCEMENT_UNIT": {
        "Parent": "IfcElementAssembly",
        "Description": "Assembled reinforcement elements.\n\n\n"
      },
      "IfcElementAssembly.CROSS_BRACING": {
        "Parent": "IfcElementAssembly",
        "Description": "A Structural linear member or assembly of memebrs inside a box girder or between girders, typically on a pier, to resist lateral forces and transfer them to the support.\n\n\n"
      },
      "IfcElementAssembly.SHELTER": {
        "Parent": "IfcElementAssembly",
        "Description": ""
      },
      "IfcElementAssembly.SUSPENSIONASSEMBLY": {
        "Parent": "IfcElementAssembly",
        "Description": "A complex assembly of components used to suspend elements or cable segments.\n\n\n"
      },
      "IfcElementAssembly.TRACTION_SWITCHING_ASSEMBLY": {
        "Parent": "IfcElementAssembly",
        "Description": "A common assembly used to insure the switching function. It is composed of switches, control instruments and other components.\n\n\n"
      },
      "IfcElementAssembly.MAST": {
        "Parent": "IfcElementAssembly",
        "Description": "An assembly of plates, members, cables or fasteners that form a vertical structure for the support or mounting of other equipment such as lights, sonar or wireless transmitters.\n\n\n"
      },
      "IfcElementAssembly.BRACED_FRAME": {
        "Parent": "IfcElementAssembly",
        "Description": "A rigid frame with additional bracing members.\n\n\n"
      },
      "IfcElementAssembly.RAIL_MECHANICAL_EQUIPMENT_ASSEMBLY": {
        "Parent": "IfcElementAssembly",
        "Description": "A complex assembly made up of several components like blocking device, speed regulator, bias loaded inspector, track scale or controllable retarder.\n\n\n"
      },
      "IfcElementAssembly.SUMPBUSTER": {
        "Parent": "IfcElementAssembly",
        "Description": "An obstacle (with oil catchment basin) installed typically in a bus lane to prevent other traffic with lower ground clearance from using it. Also Sump breaker or Sump trap.\n\n\n",
        "Psets": {
          "Pset_SumpBusterCommon": {
            "Properties": {
              "Type": {
                "type": "string",
                "Description": "A symbol designator with content according to local standards, e.g.  'BycycleCrossing', 'RoadStuds', 'SpeedBump', 'TransverseBar', 'BusStop', 'Chevron', 'Hatched', 'KeepClear', 'BoxJunction', 'EmergencyExit', 'Intersection', 'Junction'\n"
              }
            }
          }
        }
      },
      "IfcElementAssembly.SUPPORTINGASSEMBLY": {
        "Parent": "IfcElementAssembly",
        "Description": ""
      },
      "IfcElementAssembly.ENTRANCEWORKS": {
        "Parent": "IfcElementAssembly",
        "Description": "An assembly forming the support structure of a chamber (lock, dock) gate and associated elements, plus the containment of operational equipment.\n\n\n"
      },
      "IfcElementAssembly.TRUSS": {
        "Parent": "IfcElementAssembly",
        "Description": "A structure built up of members with (quasi) pinned joint.\n\n\n"
      },
      "IfcElementAssembly.ACCESSORY_ASSEMBLY": {
        "Parent": "IfcElementAssembly",
        "Description": "Assembled accessories or components.\n\n\n"
      },
      "IfcElementAssembly.DILATATIONPANEL": {
        "Parent": "IfcElementAssembly",
        "Description": ""
      },
      "IfcElementAssembly.PYLON": {
        "Parent": "IfcElementAssembly",
        "Description": "A vertical structure supporting cables in suspended or stayed structure.\n\n\n"
      },
      "IfcElementAssembly.DECK": {
        "Parent": "IfcElementAssembly",
        "Description": "A platform (such as floor or bridge deck) built up of beams, slabs.\n\n\n"
      },
      "IfcElementAssembly.TRACKPANEL": {
        "Parent": "IfcElementAssembly",
        "Description": "Trackwork ensuring the support and guidance of a vehicle along a route. It consists of assembly of rail, sleepers and fastenings.\n\n\n"
      },
      "IfcElementAssembly.ABUTMENT": {
        "Parent": "IfcElementAssembly",
        "Description": "A bridge abutment built up of walls, beams, slabs etc.\n\n\n"
      },
      "IfcElementType": {
        "Parent": "IfcTypeProduct",
        "Description": "_IfcElementType_ defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is common to all occurrences of that product type).\n\n\n\n> NOTE&nbsp; The product representations are defined as representation maps (at the level of the supertype _IfcTypeProduct_, which gets assigned by an element instance through the _IfcShapeRepresentation.Item[1]_ being an _IfcMappedItem_.\n\n\n\nAn element type is used to define the common properties of a certain type or style of an element that may be applied to instances of that element type to assign a specific style. Element types (the instantiable subtypes) may be exchanged without being already assigned to occurrences.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2\n\n\n"
      },
      "IfcExternalSpatialElement": {
        "Parent": "IfcExternalSpatialStructureElement",
        "Description": "The external spatial element defines external regions at the building site. Those regions can be defined:\n\n\n\n* logically - for example, an instance of _IfcExternalSpatialElement_ could represent the air space around the building without having an own shape representation, or\n\n* physically - for example, an instance of _IfcExternalSpatialElement_ could represent the sloping ground around the building to identify the part of the external building envelop that is below ground.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n"
      },
      "IfcExternalSpatialElement.EXTERNAL_EARTH": {
        "Parent": "IfcExternalSpatialElement",
        "Description": "External volume covered by earth around the building.\n\n\n"
      },
      "IfcExternalSpatialElement.EXTERNAL": {
        "Parent": "IfcExternalSpatialElement",
        "Description": ""
      },
      "IfcExternalSpatialElement.EXTERNAL_WATER": {
        "Parent": "IfcExternalSpatialElement",
        "Description": ""
      },
      "IfcExternalSpatialElement.EXTERNAL_FIRE": {
        "Parent": "IfcExternalSpatialElement",
        "Description": "Space occupied by a neightboring building.\n\n\n"
      },
      "IfcExternalSpatialStructureElement": {
        "Parent": "IfcSpatialElement",
        "Description": "The external spatial structure element is an abstract entity provided for different kind of external spaces, regions, and volumes.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n"
      },
      "IfcFacility": {
        "Parent": "IfcSpatialStructureElement",
        "Description": "A Facility (derived from _IfcSpatialStructureElement_) may be an _IfcBuilding_, an _IfcBridge_, an _IfcRailway_, an _IfcRoad_, an _IfcMarineFacility_ (or any other type of built facility defined in the future, such as IfcTunnel).\n"
      },
      "IfcFacilityPart": {
        "Parent": "IfcSpatialStructureElement",
        "Description": "_IfcFacilityPart_ provides for spatial breakdown of built facilities. It may be further specialised according to the type of facility being broken down.\n\n\n",
        "Psets": {
          "Qto_FacilityPartBaseQuantities": {
            "Properties": {
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Height": {
                "type": "real",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Area": {
                "type": "real",
                "Description": "Area of the projection as viewed by an elevation view (for wall projections or as viewed by a ground floor view (for slab projections).\n"
              },
              "Volume": {
                "type": "real",
                "Description": "Total volume of fluid in the tubes and their headers.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "UsageType": {
                "values": [
                  "LATERAL",
                  "REGION",
                  "VERTICAL",
                  "LONGITUDINAL",
                  "USERDEFINED",
                  "NOTDEFINED"
                ],
                "type": "IfcFacilityUsageEnum",
                "Description": null
              }
            }
          }
        }
      },
      "IfcFeatureElement": {
        "Parent": "IfcElement",
        "Description": "A feature element is a generalization of all existence dependent elements which modify the shape and appearance of the associated master element. The _IfcFeatureElement_ offers the ability to handle shape modifiers as semantic objects within the IFC object model.\n\n\n\n> NOTE&nbsp; The term \"feature\" has a predefined meaning in a context of \"feature-based modeling\" and within steel construction work. It is introduced here in a broader sense to cover all existence dependent, but semantically described, modifiers of an element's shape and appearance. It is envisioned that future releases enhance the feature-based capabilities of the IFC model.\n\n\n\nIn contrary to the aggregation, as used in _IfcElementAssembly_, that defines the aggregate as a container element, that has equally treated parts, the feature concept introduced by _IfcFeatureElement_ defines the master element with subordinate parts as additions, or with voids or cut-outs as subtractions.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x2}\n\n> IFC2x2 CHANGE&nbsp; The entity is introduced as an upward compatible extension of the IFC2x platform. It is an intermediate abstract supertype without defining its own explicit attributes.\n\n\n\n## Formal Propositions\n\n\n\n### NotContained\n\nElement is not contained in spatial structure.\n"
      },
      "IfcFeatureElementAddition": {
        "Parent": "IfcFeatureElement",
        "Description": "A feature element addition is a specialization of the general feature element, that represents an existence dependent element which modifies the shape and appearance of the associated master element. The _IfcFeatureElementAddition_ offers the ability to handle shape modifiers as semantic objects within the IFC object model that add to the shape of the master element.\n\n\n\nThe _IfcFeatureElementAddition_ is associated to its master element by virtue of the objectified relationship _IfcRelProjectsElement_. This relationship implies a Boolean 'union' operation between the shape of the master element and the shape of the addition feature.\n\n\n\nThe local placement for _IfcFeatureElementAddition_ is defined in its supertype _IfcProduct_. It is defined by the _IfcLocalPlacement_, which defines the local coordinate system that is referenced by all geometric representations. The local placement is always defined in relation to the local placement of the element to which the feature element is added:\n\n\n\n* The _PlacementRelTo_ attribute of _IfcObjectPlacement_ shall point (if given) to the object placement of the _IfcElement_, which is used in the _ProjectsElements.RelatingElement_ inverse attribute (the parent element of the feature).\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x2}\n\n> IFC2x2 CHANGE&nbsp; The entity is introduced as an upward compatible extension of the IFC2x platform. It is an intermediate abstract supertype without defining its own explicit attributes.\n\n\n"
      },
      "IfcFeatureElementSubtraction": {
        "Parent": "IfcFeatureElement",
        "Description": "The _IfcFeatureElementSubtraction_ is specialization of the general feature element, that represents an existence dependent elements which modifies the shape and appearance of the associated master element. The _IfcFeatureElementSubtraction_ offers the ability to handle shape modifiers as semantic objects within the IFC object model that subtract from the shape of the master element.\n\n\n\n> NOTE&nbsp; A single subtraction feature such as the subtype _IfcOpeningElement_ is assigned by a single subtraction relationship _IfcRelVoidsElement_ to one occurrences of _IfcElement_. It establishes a 1:1 relationship between the opening and the element. An element may have several _IfcRelVoidsElement_ relationships, enabling several voids.\n\n\n\nThe voiding relationship between a master element and a subtraction feature is geometrically resolved by a Boolean difference operation.\n\n\n\nThe local placement for _IfcFeatureElementSubtraction_ is defined in its supertype _IfcProduct_. It is defined by the _IfcLocalPlacement_, which defines the local coordinate system that is referenced by all geometric representations. The local placement is always defined in relation to the local placement of the building element from which the feature element substration is substracted:\n\n\n\n* The _PlacementRelTo_ attribute of _IfcObjectPlacement_ shall point (if given) to the object placement of the _IfcElement_, which is used in the _VoidsElements.RelatingElement_ inverse attribute (the parent element of the feature).\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x2}\n\n> IFC2x2 CHANGE&nbsp; The entity is introduced as an upward compatible extension of the IFC2x platform. It is an intermediate abstract supertype without defining its own explicit attributes.\n\n\n"
      },
      "IfcFurnishingElement": {
        "Parent": "IfcElement",
        "Description": "A furnishing element is a generalization of all furniture related objects. Furnishing objects are characterized as being\n\n\n\n* pre-manufactured and assembled on-site, or\n\n* manufactured on-site (built-in)\n\n\n\nThus furnishing elements can either be movable, or not (as the built-ins).\n\n\n\n> HISTORY&nbsp; New entity in IFC2x.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The entity is marked as deprecated for instantiation - will be made ABSTRACT after IFC4.\n"
      },
      "IfcGeographicElement": {
        "Parent": "IfcElement",
        "Description": "An _IfcGeographicElement_ is a generalization of all elements within a geographical landscape. It includes occurrences of typical geographical elements, often referred to as features, such as trees or terrain. Common type information behind several occurrences of _IfcGeographicElement_ is provided by the _IfcGeographicElementType_. \n\n\n\n> HISTORY New entity in IFC4.\n\n\n"
      },
      "IfcGeographicElement.SOIL_BORING_POINT": {
        "Parent": "IfcGeographicElement",
        "Description": ""
      },
      "IfcGeographicElement.TERRAIN": {
        "Parent": "IfcGeographicElement",
        "Description": ""
      },
      "IfcGrid": {
        "Parent": "IfcPositioningElement",
        "Description": "_IfcGrid_ ia a planar design grid defined in 3D space used as an aid in locating structural and design elements. The position of the grid (_ObjectPlacement_) is defined by a 3D coordinate system (and thereby the design grid can be used in plan, section or in any position relative to the world coordinate system). The position can be relative to the object placement of other products or grids. The XY plane of the 3D coordinate system is used to place the grid axes, which are 2D curves (for example, line, circle, arc, polyline).\n\n\n\nThe inherited attributes _Name_ and _Description_ can be used to define a descriptive name of the grid and to indicate the grid's purpose. A grid is defined by (normally) two, or (in case of a triangular grid) three lists of grid axes. The following figures shows some examples.\n\n\n\nA grid may support a rectangular layout as shown in Figure 1, a radial layout as shown in Figure 2, or a triangular layout as shown in Figure 3.\n\n\n\n> NOTE&nbsp; The _PredefinedType_ denotes the type of grid that is represented by _IfcGrid_. The instantiation of _IfcGridAxis_'s has to agree to the _PredefinedType_, if provided.\n\n\n\n> NOTE&nbsp; The grid axes, defined within the design grid, are those elements to which project objects will be placed relatively using the _IfcGridPlacement_.\n\n\n\n<table cellpadding=\"2\" cellspacing=\"2\">\n\n      <tbody>\n\n        <tr>\n\n          <td width=\"320\">\n\n            <img src=\"../../../../figures/ifcdesigngrid-type1.gif\" alt=\"1\" border=\"0\" height=\"211\" width=\"306\">\n\n          </td>\n\n          <td width=\"320\">\n\n            <img src=\"../../../../figures/ifcdesigngrid-type2.gif\" alt=\"2\" border=\"0\" height=\"211\" width=\"306\">\n\n          </td>\n\n          <td width=\"320\">\n\n            <img src=\"../../../../figures/ifcdesigngrid-type3.gif\" alt=\"3\" border=\"0\" height=\"211\" width=\"306\">\n\n          </td>\n\n        </tr>\n\n        <tr>\n\n          <td width=\"320\">\n\n            <p class=\"figure\">Figure 1 &mdash; Grid rectangular layout</p>\n\n          </td>\n\n          <td width=\"320\">\n\n            <p class=\"figure\">Figure 2 &mdash; Grid radial layout</p>\n\n          </td>\n\n          <td width=\"320\">\n\n            <p class=\"figure\">Figure 3 &mdash; Grid triangular layout</p>\n\n          </td>\n\n        </tr>\n\n      </tbody>\n\n    </table>\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The attribute _PredefinedType_ has been added at the end of the attribute list.\n\n\n\n&nbsp;\n\n\n\n{ .spec-head}\n\nInformal Propositions:\n\n\n\n<table summary=\"IP\">\n\n      <tr>\n\n        <td width=\"640\">\n\n          <ol>\n\n            <li>Grid axes, which are referenced in different lists\n\n            of axes (UAxes, VAxes, WAxes) shall not be parallel.\n\n            </li>\n\n            <li>Grid axes should be defined such as there are no\n\n            two grid axes which intersect twice (see Figure 189).\n\n            </li>\n\n          </ol>\n\n          <blockquote class=\"note\">\n\n            NOTE&nbsp; Left side: ambiguous intersections A1 and\n\n            A2, a grid containing such grid axes is not a valid\n\n            design grid;&nbsp; Right side: the conflict can be\n\n            resolved by splitting one grid axis in a way, such as\n\n            no ambiguous intersections exist.\n\n          </blockquote>\n\n        </td>\n\n        <td align=\"right\" valign=\"top\" width=\"320\">\n\n          <img src=\"../../../../figures/ifcdesigngrid-ip2.gif\" alt=\"IP2\" border=\"0\" height=\"97\" width=\"306\">\n\n          <p class=\"figure\">Figure 4 &mdash; Grid intersections</p>\n\n        </td>\n\n      </tr>\n\n    </table>\n\n\n"
      },
      "IfcGrid.IRREGULAR": {
        "Parent": "IfcGrid",
        "Description": ""
      },
      "IfcGrid.TRIANGULAR": {
        "Parent": "IfcGrid",
        "Description": ""
      },
      "IfcGrid.RADIAL": {
        "Parent": "IfcGrid",
        "Description": ""
      },
      "IfcGrid.RECTANGULAR": {
        "Parent": "IfcGrid",
        "Description": "An _IfcGrid_ with straight u-axes and straight v-axes being perpendicular to each other. All grid axes being part of u-axes can be described by one axis line and all other axes being 2D offsets from this axis line. The same applies to all grid axes being part of V-axes.\n\n\n"
      },
      "IfcLinearPositioningElement": {
        "Parent": "IfcPositioningElement",
        "Description": "An _IfcLinearPositioningElement_ is an abstract entity describing positioning according to a curve.\n"
      },
      "IfcOpeningElement": {
        "Parent": "IfcFeatureElementSubtraction",
        "Description": "The opening element stands for opening, recess or chase, all reflecting voids. It represents a void within any element that has physical manifestation. Openings can be inserted into walls, slabs, beams, columns, or other elements.\n\n\n\nThe IFC specification provides two entities for opening elements:\n\n\n\n* _IfcOpeningStandardCase_ is used for all openings that have a constant profile along a linear extrusion. They are placed relative to the voided elements and the extrusion direction is perpendicular to the plane of the element (horizontally for walls, vertically for slabs). Only a single extrusion body is allowed. It cuts through the whole thickness of the voided element, i.e. it reflects a true opening.\n\n* _IfcOpeningElement_ is used for all other occurrences of openings and in particular also for niches or recesses.\n\n\n\n> NOTE&nbsp; View definitions or implementer agreements may restrict the types of elements which can be voided by an _IfcOpeningElement_ or _IfcOpeningStandardCase_\n\n\n\nThere are two different types of opening elements:\n\n\n\n* an opening, where the thickness of the opening is greater or equal to the thickness of the element;\n\n* a recess or niche, where the thickness of the recess is smaller than the thickness of the element.\n\n\n\nThe attribute _PredefinedType_ should be used to capture the differences,\n\n\n\n* the attribute is set to OPENING for an opening or\n\n* the attribute is set to RECESS for a recess or niche.\n\n* If the value for _PredefinedType_ is omitted, or the value is set to NOTDEFINED, no specific information of whether it is an opening or recess shall be assumed.\n\n\n\nAn _IfcOpeningElement_ has to be inserted into an _IfcElement_ by using the _IfcRelVoidsElement_ relationship. It may be filled by an _IfcDoor_, _IfcWindow_, or another filling element by using the relationship _IfcRelFillsElements_. Depending on the type of the _IfcShapeRepresentation_ of the _IfcOpeningElement_ the voiding relationship implies:\n\n\n\n*  if the _IfcShapeRepresentation_.<emRepresentationIdentifier = 'Body', then the Body shape represntation of the opening has to be subtracted from the body shape representation of the voided element - implicit Boolean difference operation.\n\n*  if the _IfcShapeRepresentation_.<emRepresentationIdentifier = 'Reference', then the Reference shape representation of the opening is not subtracted, it is provided in addition to the hole in the Body shape representation of the voided element.\n\n\n\nThe _IfcOpeningElement_ shall not participate in the containment relationship, i.e. it is not linked directly to the spatial structure of the project. It has a mandatory _VoidsElements_ inverse relationship pointing to the _IfcElement_ that is contained in the spatial structure.\n\n\n\n* The inverse relationship _ContainedInStructure_ shall be NIL.\n\n\n\n> NOTE&nbsp; See _IfcRelVoidsElement_ for a diagram on how to apply spatial containment and the voiding relationship.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n\n{ .change-ifc2x}\n\n> IFC2x CHANGE&nbsp; The intermediate ABSTRACT supertypes _IfcFeatureElement_ and _IfcFeatureSubtraction_ have been added.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The attribute _PredefinedType_ has been added at the end of attribute list. It should be used instead of the inherited attribute _ObjectType_ from now on.\n\n\n",
        "Psets": {
          "Pset_OpeningElementCommon": {
            "Properties": {
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).\n\nHere whether the transport element (in case of e.g., a lift) is designed to serve as a fire exit, e.g., for fire escape purposes.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ProtectedOpening": {
                "type": "boolean",
                "Description": "Indication whether the opening is considered to be protected under fire safety considerations. If (TRUE) it counts as a protected opening under the applicable building code, (FALSE) otherwise.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Purpose": {
                "type": "string",
                "Description": "Purpose for which the borehole, section or volumetric model was created. (EU Inspire, boreholeML)\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_OpeningElementBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "q_area",
                "Description": "Area of the projection as viewed by an elevation view (for wall projections or as viewed by a ground floor view (for slab projections).\n"
              },
              "Depth": {
                "type": "q_length",
                "Description": "The nominal depth of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Height": {
                "type": "q_length",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Volume": {
                "type": "q_volume",
                "Description": "Total volume of fluid in the tubes and their headers.\n"
              },
              "Width": {
                "type": "q_length",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcOpeningElement.OPENING": {
        "Parent": "IfcOpeningElement",
        "Description": "An opening as subtraction feature that cuts through the element it voids. It thereby creates a hole. An opening in addiion have a particular meaning for either providing a void for doors or windows, or an opening to permit flow of air and passing of light.\n\n\n"
      },
      "IfcOpeningElement.RECESS": {
        "Parent": "IfcOpeningElement",
        "Description": "An opening as subtraction feature that does not cut through the element it voids. It creates a niche or similar voiding pattern.\n\n\n"
      },
      "IfcOpeningStandardCase": {
        "Parent": "IfcOpeningElement",
        "Description": "The standard opening, _IfcOpeningStandardCase_, defines an opening with certain constraints for the dimension parameters, position within the voided element, and with certain constraints for the geometric representation. The _IfcOpeningStandardCase_ handles all cases of openings, that:\n\n\n\n* are true openings where the opening depth is greather than or equal to the thickness of the element, and the _Predefinedtype_ is set correctly to .OPENING.\n\n* are true recesses where the opening depth is lower than the thickness of the element, and the _Predefinedtype_ is set correctly to .RECESS.\n\n* are extruded perpendicular to the wall plane in case of openings in a wall\n\n* are extruded perpendicular to the slab plane in case of openings in a slab\n\n* have a local placement relative to the local placement of the voided element\n\n* have a 'Body' shape representation with 'SweptSolid' representation type\n\n* have only a single extrusion body within the 'Body' shape representation\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n"
      },
      "IfcPort": {
        "Parent": "IfcProduct",
        "Description": "A port provides the means for an element to connect to other elements.\n\n\n\nAn _IfcPort_ is associated with an _IfcElement_, it belongs to through the objectified relationship _IfcRelNests_ if such port is fixed, or _IfcRelConnectsPortToElement_ if such port is dynamically attached. Exactly two ports, belonging to two different elements, are connected with each other through the objectified relationship _IfcRelConnectsPorts_.\n\n\n\nAn instance of _IfcElement_ may have one or more points at which it connects to other instances of _IfcElement_. An instance of em>IfcPort is located at a point where a connection can occur. The location of the port is determined in the context of the local coordinate system of the element to which it belongs. As a subordinate part being fully dependent on the master element the _IfcPort_ shall have no independent containment relationship to the spatial structure.\n\n\n\nThe local placement for _IfcPort_ is defined in its supertype _IfcProduct_. It is defined by the _IfcLocalPlacement_, which defines the local coordinate system that is referenced by all geometric representations. The _PlacementRelTo_ relationship of _IfcLocalPlacement_ shall point to the local placement of the master _IfcElement_ or _IfcElementType_ (relevant subtypes), which is related to the _IfcPort_ by the relationship object _IfcRelNests_ for fixed ports, or _IfcRelConnectsPortToElement_ for dynamic ports.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n"
      },
      "IfcPositioningElement": {
        "Parent": "IfcProduct",
        "Description": "New and abstract entity definition for positioning and annotating elements that are used to position other elements relatively.\n\n\n\n> EXAMPLE&nbsp; A grid is a positioning element to position building components mainly in vertical structures, an alignment is a linear positioning element to position geographic and civil elements mainly in infrastructure works.\n\n\n\n> EXAMPLE&nbsp; An alignment is a linear positioning element for using a linear referencing method to position other items. See ISO 19148 \u201cLinear referencing\u201d for general information about linear referencing methods and expressions.\n\n\n"
      },
      "IfcProjectionElement": {
        "Parent": "IfcFeatureElementAddition",
        "Description": "The projection element is a specialization of the general feature element to represent projections applied to building elements. It represents a solid attached to any element that has physical manifestation.\n\n\n\n> EXAMPLE&nbsp; A wall projection such as a pilaster strip is handled by _IfcProjectionElement_\n\n\n\n> NOTE&nbsp; View definitions or implementer agreements may restrict the types of elements to which _IfcProjectionElement_ can be applied.\n\n\n\nAn _IfcProjectionElement_ has to be linked to a element (all subtypes of _IfcElement_) by using the _IfcRelProjectsElement_ relationship. Its existence depends on the existence of the master element. The relationship implies a Boolean union operation between the volume of the projection element and the volume of the element.\n\n\n\nThe _IfcProjectionElement_ shall not participate in the containment relationship, i.e. it is not linked directly to the spatial structure of the project. It has a mandatory _ProjectsElements_ inverse relationship pointing to the _IfcElement_ that is contained in the spatial structure.\n\n\n\n* The inverse relationship _ContainedInStructure_ shall be NIL.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The attribute _PredefinedType_ has been added at the end of attribute list.\n\n\n",
        "Psets": {
          "Qto_ProjectionElementBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "q_area",
                "Description": "Area of the projection as viewed by an elevation view (for wall projections or as viewed by a ground floor view (for slab projections).\n"
              },
              "Volume": {
                "type": "q_volume",
                "Description": "Total volume of fluid in the tubes and their headers.\n"
              }
            }
          }
        }
      },
      "IfcProjectionElement.BLISTER": {
        "Parent": "IfcProjectionElement",
        "Description": "Part of concrete where the anchor for pre-stressing tendon can be embedded.\n\n\n"
      },
      "IfcProjectionElement.DEVIATOR": {
        "Parent": "IfcProjectionElement",
        "Description": "Part of concrete where re-direction of an external pre-stressed tendon can be embedded.\n\n\n"
      },
      "IfcReferent": {
        "Parent": "IfcPositioningElement",
        "Description": "_IfcReferent_ defines a position at a particular offset along an alignment curve.\n\n\n\nReferents may be used for several scenarios:\n\n\n\n* positioning physical elements at common locations along an alignment curve (e.g. bridge piers)\n\n* indicating transitions for cross-sections (e.g. beginning of curvature where road is relatively flat, maximum curvature having super-elevated cross-slope to accomodate design speed)\n\n* indicating broken chainage where distance measurements reset or reverse directions\n\n* indicating domain-specific design parameters (via property sets) at locations along an alignment curve\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "RestartDistance": {
                "type": "real",
                "Description": "Optional value in case of broken linear referencing required to keep stationing further down the alignment unchanged."
              }
            }
          }
        }
      },
      "IfcReferent.KILOPOINT": {
        "Parent": "IfcReferent",
        "Description": ""
      },
      "IfcReferent.STATION": {
        "Parent": "IfcReferent",
        "Description": ""
      },
      "IfcReferent.MILEPOINT": {
        "Parent": "IfcReferent",
        "Description": ""
      },
      "IfcReferent.REFERENCEMARKER": {
        "Parent": "IfcReferent",
        "Description": "The reference marker is a notation referent, typically located in the right of way of the road, rail or other transportation system. Usually reference markers are initially spaced at a uniform distance along the linear element being measured, though subsequent re-alignments can result in uneven spacing between the markers.\n\n\n\n>NOTE&nbsp;definition from ISO 19148:2021\n\n\n\n>NOTE&nbsp;The physical manifestation of the IfcReferent.REFERENCEMARKER can be an IfcSign.MARKER (e.g., a bolt fixed on a post)\n\n\n"
      },
      "IfcSite": {
        "Parent": "IfcSpatialStructureElement",
        "Description": "A site is a defined area of land, possibly covered with water, on which the project construction is to be completed. A site may be used to erect, retrofit or turn down building(s), or for other construction related developments.\n\n\n\n> NOTE&nbsp; Term according to ISO6707-1 vocabulary \"area of land or water where construction work or other development is undertaken\".\n\n\n\nA site may include a definition of the single geographic reference point for this site (global position using WGS84 with _Longitude_, _Latitude_ and _Elevation_). The precision is provided up to millionth of a second and it provides an absolute placement in relation to the real world as used in exchange with geospational information systems. If asserted, the _Longitude_, _Latitude_ and _Elevation_ establish the point in WGS84 where the point 0.,0.,0. of the _LocalPlacement_ of _IfcSite_ is situated.\n\n\n\nThe geometrical placement of the site, defined by the _IfcLocalPlacement_, shall be always relative to the spatial structure element, in which this site is included, or absolute, i.e. to the world coordinate system, as established by the geometric representation context of the project. The world coordinate system, established at the _IfcProject.RepresentationContexts_, may include a definition of the true north within the XY plane of the world coordinate system, if provided, it can be obtained at _IfcGeometricRepresentationContext.TrueNorth_.\n\n\n\nA project may span over several connected or disconnected sites. Therefore site complex provides for a collection of sites included in a project. A site can also be decomposed in parts, where each part defines a site section. This is defined by the composition type attribute of the supertype _IfcSpatialStructureElements_ which is interpreted as follow:\n\n\n\n* COMPLEX = site complex\n\n* ELEMENT = site\n\n* PARTIAL = site section\n\n\n\nThe _IfcSite_ is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical).\n\n\n\nFigure 1 shows the _IfcSite_ as part of the spatial structure. In addition to the logical spatial structure, also the placement hierarchy is shown. In this example the spatial structure hierarchy and the placement hierarchy are identical.\n\n\n\n> NOTE&nbsp; Detailed requirements on mandatory element containment and placement structure relationships are given in view definitions and implementer agreements.\n\n\n\n![\"IfcSite as part of a spatial structure\"](../../../../figures/ifcsite-spatialstructure.png \"Figure 1 &mdash; Site composition\")\n\n\n\nFigure 2 describes the heights and elevations of the _IfcSite_. It is used to provide the geographic longitude, latitude, and height above sea level for the origin of the site. The origin of the site is the local placement.\n\n\n\nThe provision of longitude, latitude, height at the _IfcSite_ for georeferencing is provided for upward compatibility reasons. It requires a single instance of _IfcSite_ and WGS84 as coordinate reference system.\n\n\n\nFor exact georeferencing (or referencing to any other geographic coordinate system other than WSG84) the entities _IfcCoordinateReferenceSystem_ and _IfcMapConversion_ have to be used to define an exact mapping of the project engineering coordinate system to the geographic (or map) coordinate system.\n\n\n\n* <small>reference height of site is provided by: <em>IfcSite.RefElevation</em>, it is given according to the height datum used at this location.</small>\n\n* <small>the reference height of each building situated at the site is given againt the same height datum used at this location.</small>\n\n* <small>the elevations of each storey belonging to each building are given as local height relative to the reference height of the building.</small>\n\n\n\n<table border=\"0\" cellpadding=\"2\" cellspacing=\"2\" summary=\"attribute use\">\n\n<tbody>\n\n<tr valign=\"top\">\n\n<td align=\"left\" valign=\"top\"><img src=\"../../../../figures/ifcsite_heights.png\" alt=\"building heights\" border=\"0\" height=\"400\" width=\"500\">&nbsp;</td>\n\n</tr>\n\n<tr>\n\n<td>\n\n<p class=\"figure\">Figure 2 &mdash; Site elevations</p>\n\n</td>\n\n</tr>\n\n</tbody>\n\n</table>\n\n\n\n> HISTORY &nbsp;New entity in IFC1.0.\n\n\n",
        "Psets": {
          "Pset_LandRegistration": {
            "Properties": {
              "IsPermanentID": {
                "type": "boolean",
                "Description": "Indicates whether the identity assigned to a land parcel is permanent (= TRUE) or temporary (=FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LandID": {
                "type": "string",
                "Description": "Identification number assigned by the statutory registration authority to a land parcel.\n"
              },
              "LandTitleID": {
                "type": "string",
                "Description": "Identification number assigned by the statutory registration authority to the title to a land parcel.\n"
              }
            }
          },
          "Pset_SiteCommon": {
            "Properties": {
              "BuildableArea": {
                "type": "real",
                "Description": "The area of site utilization expressed as a maximum value according to local building codes.\n"
              },
              "BuildingHeightLimit": {
                "type": "real",
                "Description": "Allowed maximum height of buildings on this site - according to local building codes.\n"
              },
              "FloorAreaRatio": {
                "type": "real",
                "Description": "The ratio of all floor areas to the buildable area as the maximum floor area utilization of the site as a maximum value according to local building codes.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SiteCoverageRatio": {
                "type": "real",
                "Description": "The ratio of the utilization,  TotalArea / BuildableArea, expressed as a maximum value. The ratio value may be used to derive BuildableArea.\n"
              },
              "TotalArea": {
                "type": "real",
                "Description": "Total planned area for the site. Used for programming the site space.\n"
              }
            }
          },
          "Qto_SiteBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "q_area",
                "Description": "Total gross area of the outer surface of the roof. It is the sum of all roof slab gross areas. Roof openings, like sky windows and other openings and cut-outs are not taken into account.\n"
              },
              "GrossPerimeter": {
                "type": "q_length",
                "Description": "Gross perimeter at the floor level of this space. It all sides of the space, including those parts of the perimeter that are created by virtual boundaries and openings (like doors).\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "RefElevation": {
                "type": "real",
                "Description": "Datum elevation relative to sea level."
              },
              "LandTitleNumber": {
                "type": "string",
                "Description": "The land title number (designation of the site within a regional system)."
              }
            }
          }
        }
      },
      "IfcSpace": {
        "Parent": "IfcSpatialStructureElement",
        "Description": "A space represents an area or volume bounded actually or theoretically. Spaces are areas or volumes that provide for certain functions within a building.\n\n\n\nA space is associated to a building storey (or in case of exterior spaces to a site). A space may span over several connected spaces. Therefore a space group provides for a collection of spaces included in a storey. A space can also be decomposed in parts, where each part defines a partial space. This is defined by the _CompositionType_ attribute of the supertype _IfcSpatialStructureElement_ which is interpreted as follow:\n\n\n\n* COMPLEX = space group\n\n* ELEMENT = space\n\n* PARTIAL = partial space\n\n\n\n> NOTE&nbsp; View definitions and implementation agreements may restrict spaces with _CompositionType_=ELEMENT to be non-overlapping.\n\n\n\nThe _IfcSpace_ is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical). The spatial structure elements are linked together by using the objectified relationship _IfcRelAggregates_.\n\n\n\nFigure 1 shows the _IfcSpace_ as part of the spatial structure. It also serves as the spatial container for space related elements.\n\n\n\n> NOTE&nbsp; Detailed requirements on mandatory element containment and placement structure relationships are given in view definitions and implementer agreements.\n\n\n\n![\"spatial structure\"](../../../../figures/ifcspace-spatialstructure.png \"Figure 1 &mdash; Space composition\")\n\n\n\nThe following guidelines should apply for using the _Name_, _Description_, _LongName_ and _ObjectType_ attributes.\n\n\n\n* _Name_ holds the unique name (or space number) from the plan.\n\n* _Description_ holds any additional information field the user may have specified, there are no further recommendations.\n\n* _LongName_ holds the full name of the space, it is often used in addition to the _Name_, if a number is assigned to the room, then the descriptive name is exchanged as _LongName_.\n\n* _ObjectType_ holds the space type, i.e. usually the functional category of the space .\n\n\n\n> NOTE&nbsp; In cases of inconsistency between the geometric representation of the _IfcSpace_ and the combined geometric representations of the surrounding _IfcRelSpaceBoundary_, the geometric representation of the space should take priority over the geometric representation of the surrounding space boundaries.\n\n\n\nFigure 2 describes the heights and elevations of the _IfcSpace_.\n\n\n\n* elevation of the space (top of construction slab) equals elevation of storey: provided by _IfcBuildingStorey.Elevation_ relative to em>IfcBuilding.ElevationOfRefHeight\n\n* elevation of the space flooring (top of flooring on top of slab): provided by _IfcSpace.ElevationWithFlooring_ relative to _IfcBuilding.ElevationOfRefHeight_\n\n* height of space (top of slab below to bottom of slab above): provided by BaseQuantity with Name=\"Height\"\n\n* floor height of space (top of slab below to top of flooring): provided by BaseQuantity with Name=\"FinishFloorHeight\"\n\n* net height of space (top of flooring to bottom of suspended ceiling): provided by BaseQuantity with Name=\"FinishCeilingHeight\"\n\n\n\n![\"space heights\"](../../../../figures/ifcspace_heights.png \"Figure 2 &mdash; Space elevations\")\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n",
        "Psets": {
          "Pset_SpaceThermalPHistory": {
            "Properties": {
              "CoolingAirFlowRate": {
                "type": "real",
                "Description": "Cooling air flow rate in the space.\n"
              },
              "ExhaustAirFlowRate": {
                "type": "real",
                "Description": "Design exhaust air flow rate for the space.\n"
              },
              "HeatingAirFlowRate": {
                "type": "real",
                "Description": "Heating air flow rate in the space.\n"
              },
              "SpaceRelativeHumidity": {
                "type": "real",
                "Description": "The relative humidity of the space.\n"
              },
              "SpaceTemperature": {
                "type": "real",
                "Description": "Temperature of the space or zone, that is required from user/designer view point.  If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period. Provide this value, if no temperatur range (Min-Max) is available.\n"
              },
              "VentilationAirFlowRate": {
                "type": "real",
                "Description": "Ventilation outside air requirement for the space.\n"
              }
            }
          },
          "Pset_SpaceCommon": {
            "Properties": {
              "GrossPlannedArea": {
                "type": "real",
                "Description": "Total planned area for the building storey. Used for programming the building storey.\n"
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication whether this space (in case of e.g., a toilet) is designed to serve as an accessible space for handicapped people, e.g., for a public toilet (TRUE) or not (FALSE). This information is often used to declare the need for access for the disabled and for special design requirements of this space.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NetPlannedArea": {
                "type": "real",
                "Description": "Total planned net area for the building storey. Used for programming the building storey.\n"
              },
              "PubliclyAccessible": {
                "type": "boolean",
                "Description": "Indication whether this space (in case of e.g., a toilet) is designed to serve as a publicly accessible space, e.g., for a public toilet (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              }
            }
          },
          "Pset_SpaceCoveringRequirements": {
            "Properties": {
              "CeilingCovering": {
                "type": "string",
                "Description": "Label to indicate the material or finish of the space flooring. The label is used for room book information and often displayed in room stamp.\n\n\n\nThe material information is provided in absence of an IfcCovering (type=CEILING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence.\n"
              },
              "CeilingCoveringThickness": {
                "type": "real",
                "Description": "Thickness of the material layer(s) for the space ceiling.  \n\n\n\nThe thickness information is provided in absence of an IfcCovering (type=CEILING) object with own shape representation. In cases of inconsistency between the geometric parameters of an assigned IfcCovering and this attached property, the geometric parameters take precedence.\n"
              },
              "ConcealedCeiling": {
                "type": "boolean",
                "Description": "Indication whether this space is designed to have a concealed flooring space (TRUE) or not (FALSE). A concealed ceiling space is normally meant to be the space between a slab and a ceiling.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ConcealedCeilingOffset": {
                "type": "real",
                "Description": "Distance between the upper floor slab and the suspended ceiling, often used for distribution systems. Often referred to as plenum.\n"
              },
              "ConcealedFlooring": {
                "type": "boolean",
                "Description": "Indication whether this space is designed to have a concealed flooring space (TRUE) or not (FALSE). A concealed flooring space is normally meant to be the space beneath a raised floor.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ConcealedFlooringOffset": {
                "type": "real",
                "Description": "Distance between the floor slab and the floor covering, often used for cables and other installations. Often referred to as raised flooring.\n"
              },
              "FloorCovering": {
                "type": "string",
                "Description": "Label to indicate the material or finish of the space flooring. The label is used for room book information and often displayed in room stamp.\n\n\n\nThe material information is provided in absence of an IfcCovering (type=FLOORING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence.\n"
              },
              "FloorCoveringThickness": {
                "type": "real",
                "Description": "Thickness of the material layer(s) for the space flooring.  \n\n\n\nThe thickness information is provided in absence of an IfcCovering (type=FLOORING) object with own shape representation. In cases of inconsistency between the geometric parameters of an assigned IfcCovering and this attached property, the geometric parameters take precedence.\n"
              },
              "Molding": {
                "type": "string",
                "Description": "Label to indicate the material or construction of the molding around the space ceiling. The label is used for room book information.\n\n\n\nThe material information is provided in absence of an IfcCovering (type=MOLDING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence.\n"
              },
              "MoldingHeight": {
                "type": "real",
                "Description": "Height of the molding.\n\n\n\nThe height information is provided in absence of an IfcCovering (type=MOLDING) object with own shape representation and material assignment. In case of inconsistency the height assigned to IfcCovering elements takes precedence.\n"
              },
              "SkirtingBoard": {
                "type": "string",
                "Description": "Label to indicate the material or construction of the skirting board around the space flooring. The label is used for room book information.\n\n\n\nThe material information is provided in absence of an IfcCovering (type=SKIRTINGBOARD) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence.\n"
              },
              "SkirtingBoardHeight": {
                "type": "real",
                "Description": "Height of the skirting board.\n\n\n\nThe height information is provided in absence of an IfcCovering (type=SKIRTINGBOARD) object with own shape representation and material assignment. In case of inconsistency the height assigned to IfcCovering elements takes precedence.\n"
              },
              "WallCovering": {
                "type": "string",
                "Description": "Label to indicate the material or finish of the space flooring. The label is used for room book information and often displayed in room stamp.\n\n\n\nThe material information is provided in absence of an IfcCovering (type=CLADDING) object with own shape representation and material assignment. In case of inconsistency the material assigned to IfcCovering elements takes precedence.\n"
              },
              "WallCoveringThickness": {
                "type": "real",
                "Description": "Thickness of the material layer(s) for the space cladding.  \n\n\n\nThe thickness information is provided in absence of an IfcCovering (type=CLADDING) object with own shape representation. In cases of inconsistency between the geometric parameters of an assigned IfcCovering and this attached property, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_SpaceFireSafetyRequirements": {
            "Properties": {
              "AirPressurization": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have pressurized air (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).\n\nHere whether the transport element (in case of e.g., a lift) is designed to serve as a fire exit, e.g., for fire escape purposes.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRiskFactor": {
                "type": "string",
                "Description": "Fire Risk factor assigned to the space according to local building regulations. It defines the fire risk of the space at several levels of fire hazard.\n"
              },
              "FlammableStorage": {
                "type": "boolean",
                "Description": "Indication whether the space is intended to serve as a storage of flammable material (which is regarded as such by the presiding building code. (TRUE) indicates yes, (FALSE) otherwise.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtection": {
                "type": "boolean",
                "Description": "Indication whether this object is sprinkler protected (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SprinklerProtectionAutomatic": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic sprinkler protection (TRUE) or not (FALSE).\n\nIt should only be given, if the property \"SprinklerProtection\" is set to TRUE.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_SpaceLightingRequirements": {
            "Properties": {
              "ArtificialLighting": {
                "type": "boolean",
                "Description": "Indication whether this space  requires artificial lighting (as natural lighting would be not sufficient). (TRUE) indicates yes (FALSE) otherwise.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Illuminance": {
                "type": "real",
                "Description": "Required average illuminance value for this space.\n"
              }
            }
          },
          "Pset_SpaceOccupancyRequirements": {
            "Properties": {
              "AreaPerOccupant": {
                "type": "real",
                "Description": "Design occupancy loading for this type of usage assigned to this space.\n"
              },
              "IsOutlookDesirable": {
                "type": "boolean",
                "Description": "An indication of whether the outlook is desirable (set TRUE) or not (set FALSE)\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MinimumHeadroom": {
                "type": "real",
                "Description": "Headroom required for the activity assigned to this space.\n"
              },
              "OccupancyNumber": {
                "type": "number",
                "Description": "Number of people required for the activity assigned to this space.\n"
              },
              "OccupancyNumberPeak": {
                "type": "number",
                "Description": "Maximal number of people required for the activity assigned to this space in peak time.\n"
              },
              "OccupancyTimePerDay": {
                "type": "real",
                "Description": "The amount of time during the day that the activity is required within this space.\n"
              },
              "OccupancyType": {
                "type": "string",
                "Description": "Occupancy type for this object.\n\nIt is defined according to the presiding national building code.\n"
              }
            }
          },
          "Pset_SpaceThermalRequirements": {
            "Properties": {
              "AirConditioning": {
                "type": "boolean",
                "Description": "Indication whether this space requires air conditioning provided (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "AirConditioningCentral": {
                "type": "boolean",
                "Description": "Indication whether the space  requires a central air conditioning provided (TRUE) or not (FALSE).\n\nIt should only be given, if the property \"AirConditioning\" is set to TRUE.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "DiscontinuedHeating": {
                "type": "boolean",
                "Description": "Indication whether discontinued heating is required/desirable from user/designer view point. (TRUE) if yes, (FALSE) otherwise.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalVentilationRate": {
                "type": "number",
                "Description": "Indication of the requirement of a particular mechanical air ventilation rate, given in air changes per hour.\n"
              },
              "NaturalVentilation": {
                "type": "boolean",
                "Description": "Indication whether the space is required to have natural ventilation (TRUE) or mechanical ventilation (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NaturalVentilationRate": {
                "type": "number",
                "Description": "Indication of the requirement of a particular natural air ventilation rate, given in air changes per hour.\n"
              },
              "SpaceHumidity": {
                "type": "real",
                "Description": "Humidity of the space or zone that is required from user/designer view point.  If no summer or winter space humidity requirements are given, it applies all year, otherwise for the intermediate period. Provide this property, if no humidity range (Min-Max) is available.\n"
              },
              "SpaceHumidityMax": {
                "type": "real",
                "Description": "Maximal permitted humidity of the space or zone that is required from user/designer view point.  If no summer or winter space humidity requirements are given, it applies all year, otherwise for the intermediate period.\n"
              },
              "SpaceHumidityMin": {
                "type": "real",
                "Description": "Minimal permitted humidity of the space or zone that is required from user/designer view point.  If no summer or winter space humidity requirements are given, it applies all year, otherwise for the intermediate period.\n"
              },
              "SpaceHumiditySummer": {
                "type": "real",
                "Description": "Humidity of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling.\n"
              },
              "SpaceHumidityWinter": {
                "type": "real",
                "Description": "Humidity of the space or zone for the cold (winter) period that is required from user/designer view point and provided as requirement for heating.\n"
              },
              "SpaceTemperature": {
                "type": "real",
                "Description": "Temperature of the space or zone, that is required from user/designer view point.  If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period. Provide this value, if no temperatur range (Min-Max) is available.\n"
              },
              "SpaceTemperatureMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone, that is required from user/designer view point.  If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period.\n"
              },
              "SpaceTemperatureMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone, that is required from user/designer view point. If no summer or winter space temperature requirements are given, it applies all year, otherwise for the intermediate period.\n"
              },
              "SpaceTemperatureSummerMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling.\n"
              },
              "SpaceTemperatureSummerMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the hot (summer) period, that is required from user/designer view point and provided as requirement for cooling.\n"
              },
              "SpaceTemperatureWinterMax": {
                "type": "real",
                "Description": "Maximal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating.\n"
              },
              "SpaceTemperatureWinterMin": {
                "type": "real",
                "Description": "Minimal temperature of the space or zone for the cold (winter) period, that is required from user/designer view point and provided as requirement for heating.\n"
              }
            }
          },
          "Qto_SpaceBaseQuantities": {
            "Properties": {
              "FinishCeilingHeight": {
                "type": "q_length",
                "Description": "Height of the suspended ceiling (from top of flooring to the bottom of the suspended ceiling). To be provided only if the space has a suspended ceiling with constant height.\n"
              },
              "FinishFloorHeight": {
                "type": "q_length",
                "Description": "Height of the flooring (from base slab without flooring to the flooring height). To be provided only if the space has a constant flooring height.\n"
              },
              "GrossCeilingArea": {
                "type": "q_area",
                "Description": "Sum of all ceiling areas of the space. It includes the area covered by elementsinside the space (columns, inner walls, etc.). The ceiling area is the real (and not the projected) area (e.g. in case of sloped ceilings).\n"
              },
              "GrossFloorArea": {
                "type": "q_area",
                "Description": "Sum of all gross areas of spaces within the building storey. It includes the area of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossPerimeter": {
                "type": "q_length",
                "Description": "Gross perimeter at the floor level of this space. It all sides of the space, including those parts of the perimeter that are created by virtual boundaries and openings (like doors).\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossWallArea": {
                "type": "q_area",
                "Description": "Sum of all wall (and other vertically bounding elements, like columns) areas bounded by the space. It includes the area covered by elements inside the wall area (doors, windows, other openings, etc.).\n"
              },
              "Height": {
                "type": "q_length",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetCeilingArea": {
                "type": "q_area",
                "Description": "Sum of all ceiling areas of the space. It excludes the area covered by elementsinside the space (columns, inner walls, etc.). The ceiling area is the real (and not the projected) area (e.g. in case of sloped ceilings).\n"
              },
              "NetFloorArea": {
                "type": "q_area",
                "Description": "Sum of all net areas of spaces within the building storey. It excludes the area of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetPerimeter": {
                "type": "q_length",
                "Description": "Net perimeter at the floor level of this space. It excludes those parts of the perimeter that are created by by virtual boundaries and openings (like doors). It is the measurement used for skirting boards and may includes the perimeter of internal fixed objects like columns.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetWallArea": {
                "type": "q_area",
                "Description": "Sum of all wall (and other vertically bounding elements, like columns) areas bounded by the space. It excludes the area covered by elements inside the wall area (doors, windows, other openings, etc.).\n"
              }
            }
          },
          "Pset_AirSideSystemInformation": {
            "Properties": {
              "AirflowSensible": {
                "type": "real",
                "Description": "The air flowrate required to satisfy the sensible peak loads.\n"
              },
              "AirSideSystemDistributionType": {
                "type": "PEnum_AirSideSystemDistributionType",
                "Description": "This enumeration defines the basic types of air side systems (e.g., SingleDuct, DualDuct, Multizone, etc.).\n",
                "values": [
                  "DUALDUCT",
                  "MULTIZONE",
                  "SINGLEDUCT"
                ]
              },
              "AirSideSystemType": {
                "type": "PEnum_AirSideSystemType",
                "Description": "This enumeration specifies the basic types of possible air side systems (e.g., Constant Volume, Variable Volume, etc.).\n",
                "values": [
                  "CONSTANTVOLUME",
                  "CONSTANTVOLUMEBYPASS",
                  "CONSTANTVOLUMEMULTIPLEZONEREHEAT",
                  "CONSTANTVOLUMESINGLEZONE",
                  "VARIABLEAIRVOLUME",
                  "VARIABLEAIRVOLUMEDUALCONDUIT",
                  "VARIABLEAIRVOLUMEFANPOWERED",
                  "VARIABLEAIRVOLUMEINDUCTION",
                  "VARIABLEAIRVOLUMEREHEAT",
                  "VARIABLEAIRVOLUMEVARIABLEDIFFUSERS",
                  "VARIABLEAIRVOLUMEVARIABLETEMPERATURE"
                ]
              },
              "ApplianceDiversity": {
                "type": "real",
                "Description": "Diversity of appliance load.\n"
              },
              "CoolingTemperatureDelta": {
                "type": "real",
                "Description": "Cooling temperature difference for calculating space air flow rates.\n"
              },
              "Description": {
                "type": "string",
                "Description": "The description of the air side system.\n"
              },
              "EnergyGainSensible": {
                "type": "real",
                "Description": "The sum of total energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level sensible energy gains.\n"
              },
              "EnergyGainTotal": {
                "type": "real",
                "Description": "The total amount of energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level total energy gains.\n"
              },
              "EnergyLoss": {
                "type": "real",
                "Description": "The sum of energy losses for the spaces served by the system during the peak heating conditions.\n"
              },
              "FanPower": {
                "type": "real",
                "Description": "Fan motor loads contributing to the cooling load.\n"
              },
              "HeatingTemperatureDelta": {
                "type": "real",
                "Description": "Heating temperature difference for calculating space air flow rates.\n"
              },
              "InfiltrationDiversitySummer": {
                "type": "real",
                "Description": "Diversity factor for Summer infiltration.\n"
              },
              "InfiltrationDiversityWinter": {
                "type": "real",
                "Description": "Diversity factor for Winter infiltration.\n"
              },
              "LightingDiversity": {
                "type": "real",
                "Description": "Lighting diversity.\n"
              },
              "LoadSafetyFactor": {
                "type": "real",
                "Description": "Load safety factor.\n"
              },
              "Name": {
                "type": "string",
                "Description": "The name of the air side system.\n"
              },
              "TotalAirflow": {
                "type": "real",
                "Description": "The total design supply air flowrate required for the system for either heating or cooling conditions, whichever is greater.\n"
              },
              "Ventilation": {
                "type": "real",
                "Description": "Required outside air ventilation.\n"
              }
            }
          },
          "Pset_SpaceThermalDesign": {
            "Properties": {
              "BoundaryAreaHeatLoss": {
                "type": "real",
                "Description": "Heat loss per unit area for the boundary object. This is a design input value for use in the absence of calculated load data.\n"
              },
              "CeilingRAPlenum": {
                "type": "boolean",
                "Description": "Ceiling plenum used for return air or not. TRUE = Yes, FALSE = No.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "CoolingDesignAirflow": {
                "type": "real",
                "Description": "The air flowrate required during the peak cooling conditions.\n"
              },
              "CoolingDryBulb": {
                "type": "real",
                "Description": "Outside dry bulb temperature for cooling design.\n"
              },
              "CoolingRelativeHumidity": {
                "type": "real",
                "Description": "Inside relative humidity for cooling design.\n"
              },
              "ExhaustAirFlowrate": {
                "type": "real",
                "Description": ""
              },
              "HeatingDesignAirflow": {
                "type": "real",
                "Description": "The air flowrate required during the peak heating conditions, but could also be determined by minimum ventilation requirement or minimum air change requirements.\n"
              },
              "HeatingDryBulb": {
                "type": "real",
                "Description": "Outside dry bulb temperature for heating design.\n"
              },
              "HeatingRelativeHumidity": {
                "type": "real",
                "Description": "Inside relative humidity for heating design.\n"
              },
              "TotalHeatGain": {
                "type": "real",
                "Description": "The total amount of heat or energy gained by the space at the time of the space's peak cooling conditions.\n"
              },
              "TotalHeatLoss": {
                "type": "real",
                "Description": "The total amount of heat or energy lost by the space at the time of the space's peak heating conditions.\n"
              },
              "TotalSensibleHeatGain": {
                "type": "real",
                "Description": "The total sensible heat or energy gained by the space during the peak cooling conditions.\n"
              },
              "VentilationAirFlowrate": {
                "type": "real",
                "Description": ""
              }
            }
          },
          "Pset_SpaceThermalLoad": {
            "Properties": {
              "AirExchangeRate": {
                "type": "real",
                "Description": "Loads from the air exchange rate.\n"
              },
              "DryBulbTemperature": {
                "type": "real",
                "Description": "Loads from the dry bulb temperature.\n"
              },
              "EquipmentSensible": {
                "type": "real",
                "Description": "Heat gains and losses from equipment.\n"
              },
              "ExhaustAir": {
                "type": "real",
                "Description": "Loads from exhaust air.\n"
              },
              "InfiltrationSensible": {
                "type": "real",
                "Description": "Heat gains and losses from infiltration.\n"
              },
              "Lighting": {
                "type": "real",
                "Description": "Lighting loads.\n"
              },
              "People": {
                "type": "real",
                "Description": "Heat gains and losses from people.\n"
              },
              "RecirculatedAir": {
                "type": "real",
                "Description": "Loads from recirculated air.\n"
              },
              "RelativeHumidity": {
                "type": "real",
                "Description": "Loads from the relative humidity.\n"
              },
              "TotalLatentLoad": {
                "type": "real",
                "Description": "Total energy added or removed from air that affects its humidity or concentration of water vapor.  If a value is less than zero (negative), then the thermal load is lost from the space. If a value is greater than zero (positive), then the thermal load is a gain to the space.\n"
              },
              "TotalRadiantLoad": {
                "type": "real",
                "Description": "Total electromagnetic energy added or removed by emission or absorption.  If a value is less than zero (negative), then the thermal load is lost from the space. If a value is greater than zero (positive), then the thermal load is a gain to the space.\n"
              },
              "TotalSensibleLoad": {
                "type": "real",
                "Description": "Total energy added or removed from air that affects its temperature.  If a value is less than zero (negative), then the thermal load is lost from the space. If a value is greater than zero (positive), then the thermal load is a gain to the space.\n"
              },
              "VentilationIndoorAir": {
                "type": "real",
                "Description": "Ventilation loads from indoor air.\n"
              },
              "VentilationOutdoorAir": {
                "type": "real",
                "Description": "Ventilation loads from outdoor air.\n"
              }
            }
          },
          "Pset_SpaceThermalLoadPHistory": {
            "Properties": {
              "AirExchangeRate": {
                "type": "real",
                "Description": "Loads from the air exchange rate.\n"
              },
              "DryBulbTemperature": {
                "type": "real",
                "Description": "Loads from the dry bulb temperature.\n"
              },
              "EquipmentSensible": {
                "type": "real",
                "Description": "Heat gains and losses from equipment.\n"
              },
              "ExhaustAir": {
                "type": "real",
                "Description": "Loads from exhaust air.\n"
              },
              "InfiltrationSensible": {
                "type": "real",
                "Description": "Heat gains and losses from infiltration.\n"
              },
              "Lighting": {
                "type": "real",
                "Description": "Lighting loads.\n"
              },
              "People": {
                "type": "real",
                "Description": "Heat gains and losses from people.\n"
              },
              "RecirculatedAir": {
                "type": "real",
                "Description": "Loads from recirculated air.\n"
              },
              "RelativeHumidity": {
                "type": "real",
                "Description": "Loads from the relative humidity.\n"
              },
              "TotalLatentLoad": {
                "type": "real",
                "Description": "Total energy added or removed from air that affects its humidity or concentration of water vapor.  If a value is less than zero (negative), then the thermal load is lost from the space. If a value is greater than zero (positive), then the thermal load is a gain to the space.\n"
              },
              "TotalRadiantLoad": {
                "type": "real",
                "Description": "Total electromagnetic energy added or removed by emission or absorption.  If a value is less than zero (negative), then the thermal load is lost from the space. If a value is greater than zero (positive), then the thermal load is a gain to the space.\n"
              },
              "TotalSensibleLoad": {
                "type": "real",
                "Description": "Total energy added or removed from air that affects its temperature.  If a value is less than zero (negative), then the thermal load is lost from the space. If a value is greater than zero (positive), then the thermal load is a gain to the space.\n"
              },
              "VentilationIndoorAir": {
                "type": "real",
                "Description": "Ventilation loads from indoor air.\n"
              },
              "VentilationOutdoorAir": {
                "type": "real",
                "Description": "Ventilation loads from outdoor air.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "ElevationWithFlooring": {
                "type": "real",
                "Description": "Level of flooring of this space; the average shall be taken, if the space ground surface is sloping or if there are level differences within this space."
              },
              "LongName": {
                "type": "string",
                "Description": "Long name for a space type, used for informal purposes. It should be used, if available, in conjunction with the inherited _Name_ attribute.\\X\\0D\n> NOTE&nbsp; In many scenarios the _Name_ attribute refers to the short name or number of a space type, and the _LongName_ refers to the full descriptive name.\\X\\0D\n\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE&nbsp; New attribute added at the end of entity definition."
              }
            }
          }
        }
      },
      "IfcSpace.PARKING": {
        "Parent": "IfcSpace",
        "Description": "A space dedication for use as a parking spot for vehicles, including access, such as a parking aisle.\n\n\n",
        "Psets": {
          "Pset_SpaceParking": {
            "Properties": {
              "IsAisle": {
                "type": "boolean",
                "Description": "Indicates that this parking zone is for accessing the parking units, i.e. an aisle (TRUE) and not a parking unit itself (FALSE)\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsOneWay": {
                "type": "boolean",
                "Description": "Indicates whether the parking aisle is designed for oneway traffic (TRUE) or twoway traffic (FALSE). Should only be provided if the property IsAisle is set to TRUE.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ParkingUnits": {
                "type": "number",
                "Description": "Indicates the number of transporation units of the type specified by the property ParkingUse that may be accommodated within the space. Generally, this value should default to 1 unit. However, where the parking space is for motorcycles or bicycles, provision may be made for more than one unit in the space.\n"
              },
              "ParkingUse": {
                "type": "string",
                "Description": "Identifies the type of transporation for which the parking space is designed. Values are not predefined but might include car, compact car, motorcycle, bicycle, truck, bus etc.\n"
              }
            }
          }
        }
      },
      "IfcSpace.GFA": {
        "Parent": "IfcSpace",
        "Description": "Gross Floor Area - a specific kind of space for each building story that includes all net area and construction area (also the external envelop). Provision of such a specific space is often required by regulations.\n\n\n"
      },
      "IfcSpace.BERTH": {
        "Parent": "IfcSpace",
        "Description": "A Space deidicated to the Berthing of vessels within a port or managed area\n\n\n",
        "Psets": {
          "Pset_BerthCommon": {
            "Properties": {
              "BerthApproach": {
                "type": "penum_berthapproach",
                "Description": "How the vessel approaches the berth\n"
              },
              "BerthMode": {
                "type": "penum_berthmode",
                "Description": "Orientation of vessel as it approaches berth\n"
              },
              "BerthingVelocity": {
                "type": "real",
                "Description": "Velocity of the vessel as it berths\n"
              },
              "AbnormalBerthingFactor": {
                "type": "real",
                "Description": "Risk assessed safety factor\n"
              }
            }
          },
          "Pset_FenderDesignCriteria": {
            "Properties": {
              "CoefficientOfFriction": {
                "type": "real",
                "Description": "Coefficient of friction value for the fender\n"
              },
              "EnergyAbsorptionTolerance": {
                "type": "real",
                "Description": "Manufacturing tolerance on energy absorption\n"
              },
              "MaxReactionTolerance": {
                "type": "real",
                "Description": "Manufacturing tolerance on maximum reaction at fender support.\n"
              },
              "MaximumTemperatureFactor": {
                "type": "real",
                "Description": "Deviation in performance due to maximum design temperature\n"
              },
              "MinimumTemperatureFactor": {
                "type": "real",
                "Description": "Deviation in performance due to minimum design temperature\n"
              },
              "VelocityFactorEnergy": {
                "type": "real",
                "Description": "Deviation in energy absorption performance due to strain rate\n"
              },
              "VelocityFactorReaction": {
                "type": "real",
                "Description": "Deviation in reaction due to strain rate\n"
              },
              "EnergyAbsorption": {
                "type": "real",
                "Description": ""
              },
              "MaxReaction": {
                "type": "real",
                "Description": "Maximum reaction from the element\n"
              },
              "MinCompressedFenderHeight": {
                "type": "real",
                "Description": "Minimum height required for a compressed fender to prevent vessels striking the structure\n"
              },
              "AddedMassCoefficientMethod": {
                "type": "penum_addedmasscoefficientmethod",
                "Description": "Method used to determine the Added Mass Coefficient used for design\n"
              }
            }
          }
        }
      },
      "IfcSpace.SPACE": {
        "Parent": "IfcSpace",
        "Description": "Any space not falling into another category.\n\n\n"
      },
      "IfcSpace.INTERNAL": {
        "Parent": "IfcSpace",
        "Description": ""
      },
      "IfcSpace.EXTERNAL": {
        "Parent": "IfcSpace",
        "Description": ""
      },
      "IfcSpatialElement": {
        "Parent": "IfcProduct",
        "Description": "A spatial element is the generalization of all spatial elements that might be used to define a spatial structure or to define spatial zones.\n\n\n\n* a hierarchical spatial structure element as _IfcSpatialStructureElement_ \n\n    * a spatial structure is a hiearchical decomposition of the project. That spatial structure is often used to provide a project structure to organize a building project.\n\n    * A spatial project structure might define as many levels of decomposition as necessary for the building project. Elements within the spatial project structure are site, building, storey, and space or alternatively, site, bridge and bridge part \n\n* a spatial zone as _IfcSpatialZone_ \n\n    * a spatial zone is a non-hierarchical and potentially overlapping decomposition of the project under some functional consideration.\n\n    * a spatial zone might be used to represent a thermal zone, a lighting zone, a usable area zone.\n\n    * a spatial zone might be used to represent a horizontal spatial structure as used in civil works.\n\n    * a spatial zone might have its independent placement and shape representation. \n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n",
        "Psets": {
          "Pset_ThermalLoadAggregate": {
            "Properties": {
              "ApplianceDiversity": {
                "type": "real",
                "Description": "Diversity of appliance load.\n"
              },
              "InfiltrationDiversitySummer": {
                "type": "real",
                "Description": "Diversity factor for Summer infiltration.\n"
              },
              "InfiltrationDiversityWinter": {
                "type": "real",
                "Description": "Diversity factor for Winter infiltration.\n"
              },
              "LightingDiversity": {
                "type": "real",
                "Description": "Lighting diversity.\n"
              },
              "LoadSafetyFactor": {
                "type": "real",
                "Description": "Load safety factor.\n"
              },
              "TotalCoolingLoad": {
                "type": "real",
                "Description": "The peak total cooling load for the building, zone or space.\n"
              },
              "TotalHeatingLoad": {
                "type": "real",
                "Description": "The peak total heating load for the building, zone or space.\n"
              }
            }
          },
          "Pset_ThermalLoadDesignCriteria": {
            "Properties": {
              "AppliancePercentLoadToRadiant": {
                "type": "real",
                "Description": "Percent of sensible load to radiant heat.\n"
              },
              "LightingLoadIntensity": {
                "type": "real",
                "Description": "Average lighting load intensity in the space per unit area (PowerMeasure/IfcAreaMeasure).\n"
              },
              "LightingPercentLoadToReturnAir": {
                "type": "real",
                "Description": "Percent of lighting load to the return air plenum.\n"
              },
              "OccupancyDiversity": {
                "type": "real",
                "Description": "Diversity factor that may be applied to the number of people in the space.\n"
              },
              "OutsideAirPerPerson": {
                "type": "real",
                "Description": "Design quantity of outside air to be provided per person in the space.\n"
              },
              "ReceptacleLoadIntensity": {
                "type": "real",
                "Description": "Average power use intensity of appliances and other non-HVAC equipment in the space per unit area.(PowerMeasure/IfcAreaMeasure).\n"
              }
            }
          },
          "PSet_ProcessCapacity": {
            "Properties": {
              "ProcessItem": {
                "type": "penum_processitem",
                "Description": "The type of cargo (and its measurement method) being modelled within a process.\n"
              },
              "ProcessCapacity": {
                "type": "number",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance\n"
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity.\n"
              },
              "DownstreamConnections": {
                "type": "string",
                "Description": "Names of downstream connected equipment and spaces (comma-separated), if not otherwise represented\n"
              },
              "UpstreamConnections": {
                "type": "string",
                "Description": "Names of upstream connected equipment and spaces (comma-separated), if not otherwise represented\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": "Long name for a spatial structure element, used for informal purposes. It should be used, if available, in conjunction with the inherited _Name_ attribute.\\X\\0D\n> NOTE&nbsp; In many scenarios the _Name_ attribute refers to the short name or number of a spacial element, and the _LongName_ refers to the full descriptive name."
              },
              "ElementType": {
                "type": "string",
                "Description": "The type denotes a particular type that indicates the object further. The use has to be established at the level of instantiable subtypes. In particular it holds the user defined type, if the enumeration of the attribute ''PredefinedType'' is set to USERDEFINED."
              }
            }
          }
        }
      },
      "IfcSpatialElementType": {
        "Parent": "IfcTypeProduct",
        "Description": "_IfcSpatialElementType_ defines a list of commonly shared property set definitions of a spatial structure element and an optional set of product representations. It is used to define a spatial element specification (the specific element information, that is common to all occurrences of that element type).\n\n\n\n> NOTE&nbsp;\u00a0The product representations are defined as representation maps (at the level of the supertype _IfcTypeProduct_, which gets assigned by an element occurrence instance through the _IfcShapeRepresentation.Item[1]_ being an _IfcMappedItem_.\n\n\n\nA spatial element type is used to define the common properties of a certain type of a spatial structure element that may be applied to many instances of that\u00a0type to assign a specific style. Spatial element types (i.e. the instantiable subtypes) may be exchanged without being already assigned to occurrences.\n\n\n\n> NOTE&nbsp;\u00a0The spatial element types are often used to represent catalogues of predefined spatial types for shared attributes, less so for sharing a common representation map.\n\n\n\nThe occurrences of subtypes of the abstract _IfcSpatialElementType_ are represented by instances of subtypes of the abstract _IfcSpatialElement_.\n\n\n\n> HISTORY&nbsp;\u00a0New entity in IFC4.\n\n\n",
        "Psets": {
          "PSet_ProcessCapacity": {
            "Properties": {
              "ProcessItem": {
                "type": "penum_processitem",
                "Description": "The type of cargo (and its measurement method) being modelled within a process.\n"
              },
              "ProcessCapacity": {
                "type": "number",
                "Description": "The number of units that can be processed in the time defined in ProcessPerformance\n"
              },
              "ProcessPerformance": {
                "type": "string",
                "Description": "Minimum time to accept or dispatch the entire item capacity.\n"
              },
              "DownstreamConnections": {
                "type": "string",
                "Description": "Names of downstream connected equipment and spaces (comma-separated), if not otherwise represented\n"
              },
              "UpstreamConnections": {
                "type": "string",
                "Description": "Names of upstream connected equipment and spaces (comma-separated), if not otherwise represented\n"
              }
            }
          }
        }
      },
      "IfcSpatialStructureElement": {
        "Parent": "IfcSpatialElement",
        "Description": "A spatial structure element is the generalization of all spatial elements that might be used to define a spatial structure. That spatial structure is often used to provide a project structure to organize a building project.\n\n\n\nA spatial project structure might define as many levels of decomposition as necessary for the building project. Elements within the spatial project structure are:\n\n\n\n* site as _IfcSite_\n\n* facility as _IfcFacility_, or specifically\n\n    * building as _IfcBuilding_\n\n    * bridge as _IfcBridge_\n\n    * marine facility as _IfcMarineFacility_\n\n    * railway as _IfcRailway_\n\n    * road as _IfcRoad_\n\n\n\n* facility part as _IfcFacilityPart_, or specifically\n\n    * storey as _IfcBuildingStorey_\n\n    * facility part as _IfcFacilityPart_\n\n\n\n* space as _IfcSpace_\n\n\n\nor aggregations or parts thereof. The composition type declares an element to be either an element itself, or an aggregation (complex) or a decomposition (part). The interpretation of these types is given at each subtype of _IfcSpatialStructureElement_.\n\n\n\nThe _IfcRelAggregates_ is defined as an 1-to-many relationship and used to establish the relationship between exactly two levels within the spatial project structure. Finally the highest level of the spatial structure is assigned to _IfcProject_ using the _IfcRelAggregates_.\n\n\n\nThe subtypes of _IfcSpatialStructureElement_ relate to other elements and systems by establishing the following relationships:\n\n\n\n* **Containment of elements** : _IfcRelContainedInSpatialStructure_ by inverse attribute _ContainsElements_, used to assign any element, like building elements, MEP elements, etc. to the spatial structure element in which they are primarily contained.\n\n* **Reference of elements** : _IfcRelReferencedInSpatialStructure_ by inverse attribute _ReferencesElements_, used to reference any element, like building elements, MEP elements, etc. in spatial structure elements, other then the one, where it is contained.\n\n* **Reference of systems** : _IfcRelServicesBuildings_ by inverse attribute _ServicedBySystems_, used to reference a sytem, like a building service or electrical distribution system, a zonal system, or a structural analysis system, that is assigned to this spatial structure element.\n\n\n\nThe subtypes of _IfcSpatialStructureElement_ relate to each other by using the _IfcRelAggregates_ relationship to build the project spatial structure. Figure 1 shows the use of _IfcRelAggregates_ to establish a spatial structure including site, building, building section and storey. More information is provided at the level of the subtypes.\n\n\n\n![\"fig1\"](../../../../figures/ifcspatialstructureelement-spatialstructure.png \"Figure 1 &mdash; Spatial structure element composition\")\n\n\n\n> HISTORY&nbsp; New entity in IFC2x.\n\n\n\n{ .spec-head}\n\nInformal Propositions:\n\n\n\n1. The spatial project structure, established by the _IfcRelAggregates_, shall be acyclic.\n\n2. A site should not be (directly or indirectly) associated to a building, storey or space.\n\n3. A building should not be (directly or indirectly) associated to a storey or space.\n\n4. A storey should not be (directly or indirectly) associated to a space.\n\n\n",
        "Psets": {
          "Pset_PropertyAgreement": {
            "Properties": {
              "AgreementType": {
                "type": "string",
                "Description": "Identifies the predefined types of property agreement from which the type required may be set.\n"
              },
              "CommencementDate": {
                "type": "string",
                "Description": "Date on which the agreement commences.\n"
              },
              "ConditionCommencement": {
                "type": "string",
                "Description": "Condition of property provided on commencement of the agreement e.g. cold shell, warm lit shell, broom clean, turn-key.\n"
              },
              "ConditionTermination": {
                "type": "string",
                "Description": "Condition of property required on termination of the agreement e.g. cold shell, warm lit shell, broom clean, turn-key.\n"
              },
              "Duration": {
                "type": "string",
                "Description": "The period of time for the lease.\n"
              },
              "Identifier": {
                "type": "string",
                "Description": "The identifier assigned to the agreement for the purposes of tracking.\n"
              },
              "Options": {
                "type": "string",
                "Description": "A statement of the options available in the agreement.\n"
              },
              "PropertyName": {
                "type": "string",
                "Description": "Addressing details of the property as stated within the agreement.\n"
              },
              "Restrictions": {
                "type": "string",
                "Description": "Restrictions that may be placed by a  competent authority.\n"
              },
              "TerminationDate": {
                "type": "string",
                "Description": "Date on which the agreement terminates.\n"
              },
              "Version": {
                "type": "string",
                "Description": "The version number of the agreement that is identified.\n"
              },
              "VersionDate": {
                "type": "string",
                "Description": "The date on which the version of the agreement became applicable.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "CompositionType": {
                "values": [
                  "COMPLEX",
                  "ELEMENT",
                  "PARTIAL"
                ],
                "type": "IfcElementCompositionEnum",
                "Description": "Denotes, whether the predefined spatial structure element represents itself, or an aggregate (complex) or a part (part). The interpretation is given separately for each subtype of spatial structure element. If no _CompositionType_ is asserted, the dafault value ''ELEMENT'' applies.\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE&nbsp; Attribute made optional."
              }
            }
          }
        }
      },
      "IfcSpatialZone": {
        "Parent": "IfcSpatialElement",
        "Description": "A spatial zone is a non-hierarchical and potentially overlapping decomposition of the project under some functional consideration. A spatial zone might be used to represent a thermal zone, a construction zone, a lighting zone, a usable area zone. A spatial zone might have its independent placement and shape representation.\n\n\n\nThe _IfcSpatialZone_ inherits and declares these attributes that shall have the following meaning:\n\n\n\n* _Name_: A number or designator provided by the user or system for the spatial element, e.g. a space number \"1-003\", could also be a running number provided by default by the application\n\n* _LongName_: Name of the spatial element provided by the user, e.g. a space name \"Office\".\n\n* _Description_: Any additional description provided by the user, e.g. a space description \"Corner office with habour view\".\n\n* _ObjectType_: reserved for typing of spatial elements in case of _PredefinedType_ = .USERDEFINED., restrictions on applicable values might be published in view definitions or implementer agreements.\n\n\n\nPhysical elements that are referenced by this spatial zone are related using the _IfcRelReferencedInSpatialStructure_ relationship as it is a non-hierarchical assignment in addition to the hierarchical spatial containment within a subtype of _IfcSpatialStructureElement_. Also spaces, that referenced by this spatial zone are related using the _IfcRelReferencedInSpatialStructure_ relationship. The _IfcSpatialZone_ itself can also be referenced by another spatial element using _IfcRelReferencedInSpatialStructure_.\n\n\n\n> NOTE&nbsp; The _IfcSpatialZone_ is different to the _IfcZone_ entity by allowing an own placement and shape representation, whereas _IfcZone_ is only a grouping of _IfcSpace_'s.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n",
        "Psets": {
          "Pset_AirSideSystemInformation": {
            "Properties": {
              "AirflowSensible": {
                "type": "real",
                "Description": "The air flowrate required to satisfy the sensible peak loads.\n"
              },
              "AirSideSystemDistributionType": {
                "type": "PEnum_AirSideSystemDistributionType",
                "Description": "This enumeration defines the basic types of air side systems (e.g., SingleDuct, DualDuct, Multizone, etc.).\n",
                "values": [
                  "DUALDUCT",
                  "MULTIZONE",
                  "SINGLEDUCT"
                ]
              },
              "AirSideSystemType": {
                "type": "PEnum_AirSideSystemType",
                "Description": "This enumeration specifies the basic types of possible air side systems (e.g., Constant Volume, Variable Volume, etc.).\n",
                "values": [
                  "CONSTANTVOLUME",
                  "CONSTANTVOLUMEBYPASS",
                  "CONSTANTVOLUMEMULTIPLEZONEREHEAT",
                  "CONSTANTVOLUMESINGLEZONE",
                  "VARIABLEAIRVOLUME",
                  "VARIABLEAIRVOLUMEDUALCONDUIT",
                  "VARIABLEAIRVOLUMEFANPOWERED",
                  "VARIABLEAIRVOLUMEINDUCTION",
                  "VARIABLEAIRVOLUMEREHEAT",
                  "VARIABLEAIRVOLUMEVARIABLEDIFFUSERS",
                  "VARIABLEAIRVOLUMEVARIABLETEMPERATURE"
                ]
              },
              "ApplianceDiversity": {
                "type": "real",
                "Description": "Diversity of appliance load.\n"
              },
              "CoolingTemperatureDelta": {
                "type": "real",
                "Description": "Cooling temperature difference for calculating space air flow rates.\n"
              },
              "Description": {
                "type": "string",
                "Description": "The description of the air side system.\n"
              },
              "EnergyGainSensible": {
                "type": "real",
                "Description": "The sum of total energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level sensible energy gains.\n"
              },
              "EnergyGainTotal": {
                "type": "real",
                "Description": "The total amount of energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level total energy gains.\n"
              },
              "EnergyLoss": {
                "type": "real",
                "Description": "The sum of energy losses for the spaces served by the system during the peak heating conditions.\n"
              },
              "FanPower": {
                "type": "real",
                "Description": "Fan motor loads contributing to the cooling load.\n"
              },
              "HeatingTemperatureDelta": {
                "type": "real",
                "Description": "Heating temperature difference for calculating space air flow rates.\n"
              },
              "InfiltrationDiversitySummer": {
                "type": "real",
                "Description": "Diversity factor for Summer infiltration.\n"
              },
              "InfiltrationDiversityWinter": {
                "type": "real",
                "Description": "Diversity factor for Winter infiltration.\n"
              },
              "LightingDiversity": {
                "type": "real",
                "Description": "Lighting diversity.\n"
              },
              "LoadSafetyFactor": {
                "type": "real",
                "Description": "Load safety factor.\n"
              },
              "Name": {
                "type": "string",
                "Description": "The name of the air side system.\n"
              },
              "TotalAirflow": {
                "type": "real",
                "Description": "The total design supply air flowrate required for the system for either heating or cooling conditions, whichever is greater.\n"
              },
              "Ventilation": {
                "type": "real",
                "Description": "Required outside air ventilation.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": "Long name for a spatial zone type, used for informal purposes. It should be used, if available, in conjunction with the inherited _Name_ attribute.\\X\\0D\n> NOTE&nbsp; In many scenarios the _Name_ attribute refers to the short name or number of a spatial zone, and the _LongName_ refers to the full descriptive name."
              }
            }
          }
        }
      },
      "IfcSpatialZone.THERMAL": {
        "Parent": "IfcSpatialZone",
        "Description": "The spatial zone is used to represent a thermal zone.\n\n\n"
      },
      "IfcSpatialZone.RESERVATION": {
        "Parent": "IfcSpatialZone",
        "Description": "A spatial zone that marks some sort of reservation within the project extent.\n\n\n",
        "Psets": {
          "Pset_RailwayEnergyReservation": {
            "Properties": {
              "ReservationZoneType": {
                "type": "penum_energyreservationzone",
                "Description": ""
              }
            }
          },
          "Pset_RailwayReservation": {
            "Properties": {
              "Domain": {
                "type": "penum_energyreservationzone",
                "Description": ""
              },
              "IsOutdoor": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcSpatialZone.OCCUPANCY": {
        "Parent": "IfcSpatialZone",
        "Description": "The spatial zone is used to represent a zone of particular occupancy.\n\n\n"
      },
      "IfcSpatialZone.TRANSPORT": {
        "Parent": "IfcSpatialZone",
        "Description": ""
      },
      "IfcSpatialZone.FIRESAFETY": {
        "Parent": "IfcSpatialZone",
        "Description": "The spatial zone is used to represent a fire safety zone, or fire compartment.\n\n\n"
      },
      "IfcSpatialZone.CONSTRUCTION": {
        "Parent": "IfcSpatialZone",
        "Description": "The spatial zone is used to represent a construction zone for the production process.\n\n\n"
      },
      "IfcSpatialZone.SECURITY": {
        "Parent": "IfcSpatialZone",
        "Description": "The spatial zone is used to represent a zone for security planning and maintainance work.\n\n\n"
      },
      "IfcSpatialZone.VENTILATION": {
        "Parent": "IfcSpatialZone",
        "Description": "The spatial zone is used to represent a ventilation zone.\n\n\n"
      },
      "IfcSpatialZone.LIGHTING": {
        "Parent": "IfcSpatialZone",
        "Description": ""
      },
      "IfcSystem": {
        "Parent": "IfcGroup",
        "Description": "A system is an organized combination of related parts within an AEC product, composed for a common purpose or function or to provide a service. A system is essentially a functionally related aggregation of products. The grouping relationship to one or several instances of _IfcProduct_ (the system members) is handled by _IfcRelAssignsToGroup_.\n\n\n\n> NOTE&nbsp; The use of _IfcSystem_ often applies to the representation of building services related systems, such as the piping system, cold water system, etc. Members within such a system may or may not be connected using the connectivity related entities (through _IfcDistributionPort_).\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n",
        "Psets": {
          "Pset_Condition": {
            "Properties": {
              "AssessmentCondition": {
                "type": "string",
                "Description": "The overall condition of a product based on an assessment of the contributions to the overall condition made by the various criteria considered. The meanings given to the values of assessed condition should be agreed and documented by local agreements. For instance, is overall condition measured on a scale of 1 - 10 or by assigning names such as Good, OK, Poor.\n"
              },
              "AssessmentDate": {
                "type": "string",
                "Description": "Date on which the overall condition is assessed\n"
              },
              "AssessmentDescription": {
                "type": "string",
                "Description": "Qualitative description of the condition.\n"
              },
              "AssessmentType": {
                "type": "string",
                "Description": "Category of latest condition assessment report of the asset.\n"
              },
              "AssessmentMethod": {
                "type": "ifcexternalreference",
                "Description": "External reference to assessment method or application used to perform the assessment.\n"
              },
              "LastAssessmentReport": {
                "type": "string",
                "Description": "Reference to latest condition (state of health) report.\n"
              },
              "NextAssessmentDate": {
                "type": "string",
                "Description": "Date of next condition inspection\n"
              }
            }
          },
          "Pset_ServiceLifeFactors": {
            "Properties": {
              "DesignLevel": {
                "type": "real",
                "Description": "Adjustment of the service life resulting from the effect of design level employed.\n"
              },
              "IndoorEnvironment": {
                "type": "real",
                "Description": "Adjustment of the service life resulting from the effect of the indoor environment (where appropriate).\n"
              },
              "InUseConditions": {
                "type": "real",
                "Description": "Adjustment of the service life resulting from the effect of the conditions in which components are operating.\n"
              },
              "MaintenanceLevel": {
                "type": "real",
                "Description": "Adjustment of the service life resulting from the effect of the level or degree of maintenance applied to dcomponents.\n"
              },
              "OutdoorEnvironment": {
                "type": "real",
                "Description": "Adjustment of the service life resulting from the effect of the outdoor environment (where appropriate)\n"
              },
              "QualityOfComponents": {
                "type": "real",
                "Description": "Adjustment of the service life resulting from the effect of the quality of components used.\n"
              },
              "WorkExecutionLevel": {
                "type": "real",
                "Description": "Adjustment of the service life resulting from the effect of the quality of work executed.\n"
              }
            }
          },
          "Pset_MaintenanceStrategy": {
            "Properties": {
              "AssetCriticality": {
                "type": "penum_assetrating",
                "Description": "Rating of the asset's criticality to the operation of the facility\n"
              },
              "AssetFailty": {
                "type": "penum_assetrating",
                "Description": ""
              },
              "AssetPriority": {
                "type": "penum_assetrating",
                "Description": "Combined criticality and frailty rating indicating the operational and maintenance priority of the asset\n"
              },
              "MonitoringType": {
                "type": "penum_monitoringtype",
                "Description": "Monitoring strategy chosen for the asset\n"
              },
              "AccidentResponse": {
                "type": "penum_accidentresponse",
                "Description": "Accident response chosen for the asset\n"
              }
            }
          },
          "Pset_MaintenanceTriggerCondition": {
            "Properties": {
              "MaintenanceLevel": {
                "type": "penum_assetrating",
                "Description": "Adjustment of the service life resulting from the effect of the level or degree of maintenance applied to dcomponents.\n"
              },
              "TargetPerformance": {
                "type": "penum_assetrating",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute.\n"
              },
              "ReplacementLevel": {
                "type": "penum_assetrating",
                "Description": "Performance level at which replacement takes place\n"
              },
              "DisposalLevel": {
                "type": "penum_assetrating",
                "Description": "Performance level at which disposal takes place\n"
              }
            }
          },
          "Pset_MaintenanceTriggerDuration": {
            "Properties": {
              "MaintenanceLevel": {
                "type": "string",
                "Description": "Adjustment of the service life resulting from the effect of the level or degree of maintenance applied to dcomponents.\n"
              },
              "TargetPerformance": {
                "type": "string",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute.\n"
              },
              "ReplacementLevel": {
                "type": "string",
                "Description": "Performance level at which replacement takes place\n"
              },
              "DisposalLevel": {
                "type": "string",
                "Description": "Performance level at which disposal takes place\n"
              }
            }
          },
          "Pset_MaintenanceTriggerPerformance": {
            "Properties": {
              "MaintenanceLevel": {
                "type": "real",
                "Description": "Adjustment of the service life resulting from the effect of the level or degree of maintenance applied to dcomponents.\n"
              },
              "TargetPerformance": {
                "type": "number",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute.\n"
              },
              "ReplacementLevel": {
                "type": "real",
                "Description": "Performance level at which replacement takes place\n"
              },
              "DisposalLevel": {
                "type": "real",
                "Description": "Performance level at which disposal takes place\n"
              },
              "PerformanceUnit": {
                "type": "string",
                "Description": "Unit that quantifies the Target Performance value\n"
              }
            }
          }
        }
      },
      "IfcTransportElement": {
        "Parent": "IfcElement",
        "Description": "A transport element is a generalization of all transport related objects that move people, animals or goods within a Facility. The _IfcTransportElement_ defines the occurrence of a transport element, that (if given), is expressed by the _IfcTransportElementType_.\n\n\n\n> EXAMPLE Transportation elements include elevator (lift), escalator, moving walkway, etc.  \n\n\n\n> NOTE&nbsp; More detailed equipment that may be a part of a transportation device, like a lifting hook, is defined as _IfcDiscreteAccessory_. It maybe included as a part of the _IfcTransportElement_ by virtue of the objectified relationship _IfcRelAggregates_.  \n\n\n\nTransport element can describe fixed or non fixed elements, which can either be identified as specified operational assets within a facility or vehicles that interact with the facility as a user or customer. \n\nIn the case of operational assets, instances of _IfcTransportElement_ can represent individual identifiable vehicles or structures with properties such as serial numbers, registration numbers etc. and be typed accordingly by instances of _IfcTransportElementType_.  \n\n\n\nIn the case transport elements that interact as users or customers, such as cars on a road or vessels at a port, _IfcTransportElementType_ is used to define element specifications which are used to design, analyse and provide operational constraints to the facility. \n\n\n\nDepending on local classification systems transport elements and transportation systems in buildings are either considered as part of a built system, or as part of a built service system. Within IFC they are considered as part of a built system and may have to be mapped appropriately.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x.\n\n\n\n{ .change-ifc2x}\n\n> IFC2x CHANGE&nbsp; The attribute _PredefinedType_ (previously OperationType) is made optional.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The last attributes CapacityByWeight and CapacityByNumber are removed, use Pset_TransportElementCommon instead.\n\n\n",
        "Psets": {
          "Pset_TransportElementCommon": {
            "Properties": {
              "CapacityPeople": {
                "type": "number",
                "Description": "Capacity of the transportation element measured in numbers of person.\n"
              },
              "CapacityWeight": {
                "type": "real",
                "Description": "Capacity of the transport element measured by weight.\n"
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).\n\nHere whether the transport element (in case of e.g., a lift) is designed to serve as a fire exit, e.g., for fire escape purposes.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "PSet_ElementKinematics": {
            "Properties": {
              "CyclicRange": {
                "type": "ifcplanaranglemeasure",
                "Description": "Identifies the angular range of the kinematic behaviour\n"
              },
              "LinearRange": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Identifies the linear range of the kinematic behaviour.\n"
              },
              "MinimumTime": {
                "type": "ifctimemeasure",
                "Description": "Identifies the minimum time for the kinematic behaviour.\n"
              },
              "MaximumConstantSpeed": {
                "type": "ifcvelocitymeasure",
                "Description": "Identifies the maximum constant speed over the kinematic path.\n"
              },
              "MaximumAngularVelocity": {
                "type": "ifcangularvelocitymeasure",
                "Description": "Identifies the maximum angular velocity of the kinematic behaviour.\n"
              },
              "CyclicPath": {
                "type": "ifcpropertytablevalue",
                "Description": "Represents the time:angle table of the kinematic behaviour.\n"
              },
              "LinearPath": {
                "type": "ifcpropertytablevalue",
                "Description": "Represents the time:distance table of the kinematic behaviour.\n"
              }
            }
          }
        }
      },
      "IfcTransportElementType": {
        "Parent": "IfcElementType",
        "Description": "The element type _IfcTransportElementType_ defines commonly shared information for occurrences of transport elements. The set of shared information may include: \n\n \n\n* common properties within shared property sets\n\n* common material information\n\n* common shape representations\n\n\n\n  \n\nIt is used to define a transport element specification (i.e. the specific product information that is common to all occurrences of that beam type). Transport element types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.  \n\nThe occurrences of the _IfcTransportElementType_ are represented by instances of _IfcTransportElement_  (or its subtypes).\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n",
        "Psets": {
          "PSet_ElementKinematics": {
            "Properties": {
              "CyclicRange": {
                "type": "ifcplanaranglemeasure",
                "Description": "Identifies the angular range of the kinematic behaviour\n"
              },
              "LinearRange": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Identifies the linear range of the kinematic behaviour.\n"
              },
              "MinimumTime": {
                "type": "ifctimemeasure",
                "Description": "Identifies the minimum time for the kinematic behaviour.\n"
              },
              "MaximumConstantSpeed": {
                "type": "ifcvelocitymeasure",
                "Description": "Identifies the maximum constant speed over the kinematic path.\n"
              },
              "MaximumAngularVelocity": {
                "type": "ifcangularvelocitymeasure",
                "Description": "Identifies the maximum angular velocity of the kinematic behaviour.\n"
              },
              "CyclicPath": {
                "type": "ifcpropertytablevalue",
                "Description": "Represents the time:angle table of the kinematic behaviour.\n"
              },
              "LinearPath": {
                "type": "ifcpropertytablevalue",
                "Description": "Represents the time:distance table of the kinematic behaviour.\n"
              }
            }
          }
        }
      },
      "IfcVirtualElement": {
        "Parent": "IfcElement",
        "Description": "A virtual element is a special element used to provide imaginary boundaries, such as between two adjacent, but not separated, spaces. Virtual elements are usually not displayed and does not have quantities and other measures. Therefore _IfcVirtualElement_ does not have material information and quantities attached.\n\n\n\n> NOTE&nbsp; The main purpose of _IfcVirtualElement_ is the provision of a virtual space boundary. The _IfcVirtualElement_ may provide the 2D curve or 3D surface representation of the virtual space connection and is referenced by two instances of _IfcRelSpaceBoundary_, each pointing to one of the two adjacent _IfcSpaces_.\n\n\n\nThe _IfcVirtualElement_ is mainly used to define a virtual boundary between two spaces. Figure 1 describes how to use _IfcRelSpaceBoundary_ in conjunction with _IfcVirtualElement_ to define space boundaries.\n\n\n\n![\"space boundary\"](../../../../figures/ifcvirtualelement_spaceboundaries.png \"Figure 1 &mdash; Virtual element space boundaries\")\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2 Addendum.\n\n\n\n{ .change-ifc2x3}\n\n> IFC2x2 CHANGE&nbsp; The entity _IfcVirtualElement_ has been added. Upward compatibility for file based exchange is guaranteed.\n"
      },
      "IfcZone": {
        "Parent": "IfcSystem",
        "Description": "A zone is\u00a0a group of spaces, partial spaces or other zones. Zone structures may not be hierarchical (in contrary to the spatial structure of a project - see _IfcSpatialStructureElement_), i.e. one individual _IfcSpace_ may be associated with zero, one, or several _IfcZone_'s. _IfcSpace_'s are grouped into an _IfcZone_ by using the objectified relationship _IfcRelAssignsToGroup_ as specified at the supertype _IfcGroup_.\n\n\n\n> NOTE&nbsp;\u00a0Certain use cases may restrict the freedom of non hierarchical relationships. In some building service use cases the zone denotes a\u00a0view based delimited volume for the purpose of analysis and calculation. This type of zone cannot overlap with respect to that analysis, but may overlap otherwise.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The entity is now subtyped from _IfcSystem_ (not its supertype _IfcGroup_) with upward compatibility for file based exchange.\n\n\n",
        "Psets": {
          "Pset_ZoneCommon": {
            "Properties": {
              "GrossPlannedArea": {
                "type": "real",
                "Description": "Total planned area for the building storey. Used for programming the building storey.\n"
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication whether this space (in case of e.g., a toilet) is designed to serve as an accessible space for handicapped people, e.g., for a public toilet (TRUE) or not (FALSE). This information is often used to declare the need for access for the disabled and for special design requirements of this space.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NetPlannedArea": {
                "type": "real",
                "Description": "Total planned net area for the building storey. Used for programming the building storey.\n"
              },
              "PubliclyAccessible": {
                "type": "boolean",
                "Description": "Indication whether this space (in case of e.g., a toilet) is designed to serve as a publicly accessible space, e.g., for a public toilet (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              }
            }
          },
          "Pset_AirSideSystemInformation": {
            "Properties": {
              "AirflowSensible": {
                "type": "real",
                "Description": "The air flowrate required to satisfy the sensible peak loads.\n"
              },
              "AirSideSystemDistributionType": {
                "type": "PEnum_AirSideSystemDistributionType",
                "Description": "This enumeration defines the basic types of air side systems (e.g., SingleDuct, DualDuct, Multizone, etc.).\n",
                "values": [
                  "DUALDUCT",
                  "MULTIZONE",
                  "SINGLEDUCT"
                ]
              },
              "AirSideSystemType": {
                "type": "PEnum_AirSideSystemType",
                "Description": "This enumeration specifies the basic types of possible air side systems (e.g., Constant Volume, Variable Volume, etc.).\n",
                "values": [
                  "CONSTANTVOLUME",
                  "CONSTANTVOLUMEBYPASS",
                  "CONSTANTVOLUMEMULTIPLEZONEREHEAT",
                  "CONSTANTVOLUMESINGLEZONE",
                  "VARIABLEAIRVOLUME",
                  "VARIABLEAIRVOLUMEDUALCONDUIT",
                  "VARIABLEAIRVOLUMEFANPOWERED",
                  "VARIABLEAIRVOLUMEINDUCTION",
                  "VARIABLEAIRVOLUMEREHEAT",
                  "VARIABLEAIRVOLUMEVARIABLEDIFFUSERS",
                  "VARIABLEAIRVOLUMEVARIABLETEMPERATURE"
                ]
              },
              "ApplianceDiversity": {
                "type": "real",
                "Description": "Diversity of appliance load.\n"
              },
              "CoolingTemperatureDelta": {
                "type": "real",
                "Description": "Cooling temperature difference for calculating space air flow rates.\n"
              },
              "Description": {
                "type": "string",
                "Description": "The description of the air side system.\n"
              },
              "EnergyGainSensible": {
                "type": "real",
                "Description": "The sum of total energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level sensible energy gains.\n"
              },
              "EnergyGainTotal": {
                "type": "real",
                "Description": "The total amount of energy gains for the spaces served by the system during the peak cooling conditions, plus any system-level total energy gains.\n"
              },
              "EnergyLoss": {
                "type": "real",
                "Description": "The sum of energy losses for the spaces served by the system during the peak heating conditions.\n"
              },
              "FanPower": {
                "type": "real",
                "Description": "Fan motor loads contributing to the cooling load.\n"
              },
              "HeatingTemperatureDelta": {
                "type": "real",
                "Description": "Heating temperature difference for calculating space air flow rates.\n"
              },
              "InfiltrationDiversitySummer": {
                "type": "real",
                "Description": "Diversity factor for Summer infiltration.\n"
              },
              "InfiltrationDiversityWinter": {
                "type": "real",
                "Description": "Diversity factor for Winter infiltration.\n"
              },
              "LightingDiversity": {
                "type": "real",
                "Description": "Lighting diversity.\n"
              },
              "LoadSafetyFactor": {
                "type": "real",
                "Description": "Load safety factor.\n"
              },
              "Name": {
                "type": "string",
                "Description": "The name of the air side system.\n"
              },
              "TotalAirflow": {
                "type": "real",
                "Description": "The total design supply air flowrate required for the system for either heating or cooling conditions, whichever is greater.\n"
              },
              "Ventilation": {
                "type": "real",
                "Description": "Required outside air ventilation.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": "Long name for a zone, used for informal purposes. It should be used, if available, in conjunction with the inherited _Name_ attribute.\\X\\0D\n> NOTE&nbsp; In many scenarios the _Name_ attribute refers to the short name or number of a zone, and the _LongName_ refers to the full name.\\X\\0D\n\\X\\0D\n  \\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE The attribute has been added at the end of the entity definition."
              }
            }
          }
        }
      },
      "IfcArbitraryClosedProfileDef": {
        "Parent": "IfcProfileDef",
        "Description": "The closed profile _IfcArbitraryClosedProfileDef_ defines an arbitrary two-dimensional profile for the use within the swept surface geometry, the swept area solid or a sectioned spine. It is given by an outer boundary from which the surface or solid can be constructed.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.5. Entity has been renamed from _IfcArbitraryProfileDef_ in IFC2x.\n\n\n\n{ .spec-head}\n\nInformal Propositions:\n\n\n\n1. The _OuterCurve_ has to be a closed curve.\n\n2. The _OuterCurve_ shall not intersect.\n\n\n\nFigure 1 illustrates the arbitrary closed profile definition. The _OuterCurve_ is defined in the underlying coordinate system. The underlying coordinate system is defined by the swept surface or swept area solid that uses the profile definition. It is the xy plane of either:\n\n\n\n* IfcSweptSurface.Position\n\n* IfcSweptAreaSolid.Position\n\n\n\nor in case of sectioned spines the xy plane of each list member of _IfcSectionedSpine.CrossSectionPositions_. The _OuterCurve_ attribute defines a two dimensional closed bounded curve.\n\n\n\n![\"arbitrary profile without boundaries\"](../../../../figures/ifcarbitraryprofiledef-layout1.gif \"Figure 1 &mdash; Arbitrary closed profile\")\n\n\n",
        "Psets": {
          "Pset_ProfileArbitraryDoubleT": {
            "Properties": {
              "FlangeBaseFillet": {
                "type": "real",
                "Description": "Flange base fillet of the profile.\n"
              },
              "FlangeChamfer": {
                "type": "real",
                "Description": "Flange chamfer of the profile.\n"
              },
              "FlangeDepth": {
                "type": "real",
                "Description": "Flange depth of the profile.\n"
              },
              "FlangeDraft": {
                "type": "real",
                "Description": "Flange draft of the profile.\n"
              },
              "FlangeTopFillet": {
                "type": "real",
                "Description": "Flange top fillet of the profile.\n"
              },
              "LeftFlangeWidth": {
                "type": "real",
                "Description": "Left flange width of the profile.\n"
              },
              "OverallDepth": {
                "type": "real",
                "Description": "Overall depth of the profile.\n"
              },
              "OverallWidth": {
                "type": "real",
                "Description": "Overall width of the profile.\n"
              },
              "RightFlangeWidth": {
                "type": "real",
                "Description": "Right flange width of the profile.\n"
              },
              "StemBaseChamfer": {
                "type": "real",
                "Description": "Stem base chamfer of the profile.\n"
              },
              "StemBaseFillet": {
                "type": "real",
                "Description": "Stem base fillet of the profile.\n"
              },
              "StemBaseWidth": {
                "type": "real",
                "Description": "Stem base width of the profile.\n"
              },
              "StemTopChamfer": {
                "type": "real",
                "Description": "Stem top chamfer of the profile.\n"
              },
              "StemTopFillet": {
                "type": "real",
                "Description": "Stem top fillet of the profile.\n"
              },
              "StemTopWidth": {
                "type": "real",
                "Description": "Stem top width of the profile.\n"
              }
            }
          }
        }
      },
      "IfcArbitraryProfileDefWithVoids": {
        "Parent": "IfcArbitraryClosedProfileDef",
        "Description": "The _IfcArbitraryProfileDefWithVoids_ defines an arbitrary closed two-dimensional profile with holes. It is given by an outer boundary and inner boundaries. A common usage of _IfcArbitraryProfileDefWithVoids_ is as the cross section for the creation of swept surfaces or swept solids.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x.\n\n\n\n{ .spec-head}\n\nInformal Propositions:\n\n\n\n1. The outer curve and all inner curves shall be closed curves.\n\n2. The outer curve shall enclose all inner curves.\n\n3. No inner curve shall intersect with the outer curve or any other inner curve. That is, no two curves of the profile definition shall have a point or segment in common, taken into account the geometric precision factor of the geometric representation context. In other words, curves must neither cross nor touch each other.\n\n4. No inner curve may enclose another inner curve.\n\n\n\nFigure 1 illustrates the arbitrary closed profile definition with voids. The _OuterCurve_, defined at the supertype _IfcArbitraryClosedProfileDef_ and the inner curves are defined in the same underlying coordinate system. The common underlying coordinate system is defined by the swept area solid that uses the profile definition. It is the xy plane of:\n\n\n\n* _IfcSweptAreaSolid.Position_\n\n\n\nor in case of sectioned spines the xy plane of each list member of _IfcSectionedSpine.CrossSectionPositions_. The _OuterCurve_ attribute defines a two dimensional closed bounded curve, the _InnerCurves_ define a set of two dimensional closed bounded curves.\n\n\n\n![\"arbitrary profile with inner boundaries\"](../../../../figures/ifcarbitraryprofiledef-layout2.gif \"Figure 1 &mdash; Arbitrary profile with voids\")\n\n\n",
        "Psets": {
          "Pset_ProfileArbitraryHollowCore": {
            "Properties": {
              "BaseChamfer": {
                "type": "real",
                "Description": "Base chamfer of the profile.\n"
              },
              "BottomCover": {
                "type": "real",
                "Description": "Bottom cover of the profile.\n"
              },
              "CenterCoreBaseHeight": {
                "type": "real",
                "Description": "Center core base height of the profile.\n"
              },
              "CenterCoreBaseWidth": {
                "type": "real",
                "Description": "Center core base width of the profile.\n"
              },
              "CenterCoreMiddleHeight": {
                "type": "real",
                "Description": "Center core middle height of the profile.\n"
              },
              "CenterCoreSpacing": {
                "type": "real",
                "Description": "Center core spacing of the profile.\n"
              },
              "CenterCoreTopHeight": {
                "type": "real",
                "Description": "Center core top height of the profile.\n"
              },
              "CenterCoreTopWidth": {
                "type": "real",
                "Description": "Center core top width of the profile.\n"
              },
              "CoreBaseHeight": {
                "type": "real",
                "Description": "Core base height of the profile.\n"
              },
              "CoreBaseWidth": {
                "type": "real",
                "Description": "Core base width of the profile.\n"
              },
              "CoreMiddleHeight": {
                "type": "real",
                "Description": "Core middle height of the profile.\n"
              },
              "CoreSpacing": {
                "type": "real",
                "Description": "Core spacing of the profile.\n"
              },
              "CoreTopHeight": {
                "type": "real",
                "Description": "Core top height of the profile.\n"
              },
              "CoreTopWidth": {
                "type": "real",
                "Description": "Core top width of the profile.\n"
              },
              "DraftBaseOffset": {
                "type": "real",
                "Description": "Draft base offset of the profile.\n"
              },
              "DraftSideOffset": {
                "type": "real",
                "Description": "Draft side offset of the profile.\n"
              },
              "EdgeDraft": {
                "type": "real",
                "Description": "Edge draft of the profile.\n"
              },
              "KeyDepth": {
                "type": "real",
                "Description": "Key depth of the profile.\n"
              },
              "KeyHeight": {
                "type": "real",
                "Description": "Key height of the profile.\n"
              },
              "KeyOffset": {
                "type": "real",
                "Description": "Key offset of the profile.\n"
              },
              "NumberOfCores": {
                "type": "number",
                "Description": "The number of cores in Cable/Bus.\n"
              },
              "OverallDepth": {
                "type": "real",
                "Description": "Overall depth of the profile.\n"
              },
              "OverallWidth": {
                "type": "real",
                "Description": "Overall width of the profile.\n"
              }
            }
          }
        }
      },
      "IfcProfileDef": {
        "Description": "_IfcProfileDef_ is the supertype of all definitions of standard and arbitrary profiles within IFC. It is used to define a standard set of commonly used section profiles by their parameters or by their explicit curve geometry.\n\n\n\n* Parameterized profiles are 2D primitives, which are used within the industry to describe cross sections by a description of its parameters.\n\n* Arbitrary profiles are cross sections defined by an outer boundary as bounded curve, which may also include holes, defined by inner boundaries.\n\n* Derived profiles, based on a transformation of a parent profile, are also part of the profile definitions available.\n\n* In addition composite profiles can be defined, which include two or more profile definitions to define the resulting profile.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.5, the capabilities have been extended in IFC2x. Profiles can now support swept surfaces and swept area solids with inner boundaries. It had been renamed from IfcAttDrivenProfileDef.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Changed from ABSTRACT to non-abstract for uses which do not require an explicitly defined geometry. Added inverse attributes _HasProperties_ and _HasExternalReference_.\n\n\n\n**Use in material association**\n\n\n\nBeams, columns, and similarly shaped building elements and their type objects may be associated with a section profile definition, combined with material definition, by means of _IfcRelAssociatesMaterial_ together with _IfcMaterialProfileSet_ and _IfcMaterialProfileSetUsage_. This way, building elements and element types with same section and material can share a common section profile definition and association.\n\n\n\nThe profile definition in material association is required to be consistent with shape representations of the respective building elements.\n\n\n\nA higher-level description of spatial aligment of the section profile of a member (such as centered, bottom-left, in the geometric centroid, and more) can be provided within _IfcMaterialProfileSetUsage_ by means of a cardinal point reference. This can be used redundant to geometric data in order to convey design intent.\n\n\n\n**Use in shape models**\n\n\n\nProfile definitions are used within the geometry and geometric model resource to create either swept surfaces, swept area solids, or sectioned spines.\n\n\n\nThe purpose of the profile definition within the swept surfaces or swept area solids is to define a uniform cross section being swept:\n\n\n\n* along a line (extrusion) using _IfcSurfaceOfLinearExtrusion_ or _IfcExtrudedAreaSolid_\n\n* along a circular arc (revolution) using _IfcSurfaceOfRevolution_ or _IfcRevolvedAreaSolid_\n\n* along a directrix lying on a reference surface using _IfcSurfaceCurveSweptAreaSolid_\n\n\n\nThe purpose of the profile definition within the sectioned spine is to define a varying cross sections at several positions along a spine curve. The subtype _IfcDerivedProfileDef_ is particularly suited to provide the consecutive profiles to be based on transformations of the start profile and thus maintaining the identity of vertices and edges.\n\n\n\n> NOTE&nbsp; Subtypes of the _IfcProfileDef_ contain parameterized profiles (as subtypes of _IfcParameterizedProfileDef_) which establish their own 2D position coordinate system, profiles given by explicit curve geometry (either open or closed profiles) and two special types for composite profiles and derived profiles, based on a 2D Cartesian transformation.\n\n\n\nAn _IfcProfileDef_ is treated as bounded area if it is used within swept area solids. In this case, the inside of the profile is part of the profile. The attribute _ProfileType_ is set to AREA. An _IfcProfileDef_ is treated as a curve if it is used within swept surfaces. In this case, the inside of the profile (if the curve is closed) is not part of the profile. The attribute _ProfileType_ is set to CURVE.\n\n\n\nFigure 1 illustrates use of parameterized profiles within a swept area solid.\n\n\n\n<table><tr><td>\n\n<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\" frame=\"border\" width=\"100%\">\n\n  <tbody>\n\n    <tr valign=\"top\">\n\n      <td align=\"left\" valign=\"top\" width=\"420\">\n\n\n\n<img src=\"../../../../figures/ifcprofiledef-layout1.gif\" alt=\"Example of standard profile definition\" border=\"0\" height=\"300\" width=\"400\">\n\n\n\n      </td>\n\n      <td align=\"left\" valign=\"top\">\n\n\n\n<p><u>Position</u><br>\n\nThe <em>IfcProfileDef</em> is defined within the underlying\n\ncoordinate system which is defined by the swept surface or swept area solid\n\nthat uses the profile definition. It is the xy plane</p>\n\n\n\n      <ul>\n\n        <li>of <em>IfcSweptSurface.Position</em> or</li>\n\n        <li>of <em>IfcSweptAreaSolid.Position</em> or</li>\n\n        <li>of each list member of <em>IfcSectionedSpine.CrossSectionPositions</em>.</li>\n\n      </ul>\n\n\n\n<p>In the figure to the left, the z axis of the position coordinate system points outwards of the drawing plane.</p>\n\n\n\n<p><font size=\"-1\">Note: The subtype <em>IfcParameterizedProfileDef</em> optionally provides an additional 2D position coordinate system relative to the underlying coordinate system of the <em>IfcProfileDef</em>.</font></p>\n\n\n\n      </td>\n\n    </tr>\n\n    <tr>\n\n      <td width=\"420\">\n\n\n\n<img src=\"../../../../figures/ifcprofiledef-layout5.gif\" alt=\"use within swept area solids\" border=\"0\" height=\"300\" width=\"400\">\n\n\n\n      </td>\n\n      <td align=\"left\" valign=\"top\">\n\n\n\n<p><u>Sweeping</u></p>\n\n\n\n<p>In the later use of the <em>IfcProfileDef</em>\n\nwithin the swept surface or swept area solid,&nbsp; e.g. the <em>IfcExtrudedAreaSolid</em>\n\n(here used as an example), the profile boundaries (here based on the 2D\n\nposition coordinate system of <em>IfcParameterizedProfileDef</em>)\n\nare placed within the xy plane of the 3D position coordinate system of\n\nthe swept surface or swept area solid.</p>\n\n\n\n<p>The profile is inserted into the underlying coordinate system either:</p>\n\n\n\n      <ul>\n\n        <li>directly in case of using <em>IfcArbitraryClosedProfileDef</em>\n\n        and <em>IfcArbitraryOpenProfileDef</em>,</li>\n\n\n\n        <li>through an intermediate position coordinate system in case of\n\n        using <em>IfcParameterizedProfileDef</em>.</li>\n\n\n\n        <li>through an 2D Cartesian transformation operator (applied directly\n\n        to the curve position when using arbitrary profile definitions,\n\n        or applied to the position coordinate system when using parameterized\n\n        profile definitions) in case of using <em>IfcDerivedProfileDef</em>.</li>\n\n\n\n        <li>when using <em>IfcCompositeProfileDef</em> the insertion depends on\n\n        the subtype of the included sub-profiles.</li>\n\n      </ul>\n\n\n\n      </td>\n\n    </tr>\n\n  </tbody>\n\n</table>\n\n</td></tr>\n\n<tr><td><p class=\"figure\">Figure 1 &mdash; Profile sweeping</p></td></tr>\n\n</table>\n\n\n\n**Profile types**\n\n\n\nResults of the different usage of the _ProfileType_ attribute are demonstrated here. The _ProfileType_ defines whether the inside (the bounded area) is part of the profile definition (Area) or not (Curve). Figure 2 illustrates the resulting area or curve depending on _ProfileType_.\n\n\n\n<table><tr><td>\n\n<table border=\"1\" cellpadding=\"2\" cellspacing=\"2\" frame=\"border\" width=\"100%\">\n\n  <tbody>\n\n    <tr>\n\n      <td width=\"420\">\n\n\n\n<img src=\"../../../../figures/ifcprofiledef-layout3.gif\" alt=\"area without thickness\" height=\"225\" width=\"300\"><br>\n\nProfileType = AREA\n\n\n\n      </td>\n\n      <td align=\"left\" valign=\"top\">\n\n\n\n<img src=\"../../../../figures/ifcprofiledef-layout4.gif\" alt=\"closed curve\" height=\"225\" width=\"300\"><br>\n\nProfileType = CURVE\n\n\n\n      </td>\n\n    </tr>\n\n  </tbody>\n\n</table>\n\n</td></tr>\n\n<tr><td><p class=\"figure\">Figure 2 &mdash; Profile types</p></td></tr>\n\n</table>\n\n\n\n**Profile specification by external reference**\n\n\n\nIf the profile is standardized by a norm or a catalogue, a reference to this norm or catalogue should be provided by means of _HasExternalReference_. This inverse relationship is used to associate an _IfcExternalReference_ (notably _IfcClassificationReference_ or _IfcLibraryReference_) with the profile.\n\n\n\n_IfcClassificationReference_ is used to refer to a profile norm (a common standard or manufacturer's standard). In this case,\n\n\n\n* _IfcClassificationReference.ItemReference_ contains the formal profile designation from the norm. (On the other hand, _IfcProfileDef.ProfileName_ contains a displayable name which may not necessarily be the same as the formal designation.)\n\n* _IfcClassificationReference.Name_ carries the short name of the profile norm.\n\n* Optionally, the norm can be further described by _IfcClassificationReference.ReferencedSource_.\n\n\n\n_IfcLibraryReference_ is used to refer to a library which contains profile definitions. In this case,\n\n\n\n* _IfcLibraryReference.ItemReference_ contains the identifier of the profile within the library and is meant to be machine-readable (in contrast to _IfcProfileDef.ProfileName_ which should be human-readable).\n\n* _IfcLibraryReference.Location_ and ._Name_ or ._ReferencedLibrary_ further describe the library.\n\n\n\nIf an external reference is provided, sending systems shall ensure that the shape of the profile definition object agrees with the definitions in the referenced classification or library.\n\n\n\n**Direct instances of _IfcProfileDef_**\n\n\n\nUsually, only subtypes of _IfcProfileDef_ should be instantiated. In some special cases, e.g. if the profile object is used for purposes other than geometric models (e.g. for structural analysis models), it may be possible to directly instantiate _IfcProfileDef_ and further specify the profile only by external reference or by profile properties. The latter are tracked by the inverse attribute _HasProperties_.\n\n\n",
        "Psets": {
          "Pset_ProfileMechanical": {
            "Properties": {
              "CentreOfGravityInX": {
                "type": "real",
                "Description": "Location of the profile's centre of gravity (geometric centroid), measured along xp.\n"
              },
              "CentreOfGravityInY": {
                "type": "real",
                "Description": "Location of the profile's centre of gravity (geometric centroid), measured along yp.\n"
              },
              "CrossSectionArea": {
                "type": "real",
                "Description": "Area of the profile. For example measured in mm2. If given, the value of the cross section area shall be greater than zero.\n"
              },
              "MassPerLength": {
                "type": "real",
                "Description": "Mass per length, i.e. mass of a beam with a unit length of extrusion. For example measured in kg/m.\n"
              },
              "MaximumPlateThickness": {
                "type": "real",
                "Description": "This value may be needed for stress analysis and to handle buckling problems. It can also be derived from the given profile geometry or classification and therefore it is only an optional feature allowing for an explicit description. For example measured in mm.\n"
              },
              "MaximumSectionModulusY": {
                "type": "real",
                "Description": "Bending resistance about the ys axis at the point with maximum zs ordinate. For example measured in mm\u00b3.\n"
              },
              "MaximumSectionModulusZ": {
                "type": "real",
                "Description": "Bending resistance about the zs axis at the point with maximum ys ordinate. For example measured in mm\u00b3.\n"
              },
              "MinimumPlateThickness": {
                "type": "real",
                "Description": "This value may be needed for stress analysis and to handle buckling problems. It can also be derived from the given profile geometry or classification and therefore it is only an optional feature allowing for an explicit description. For example measured in mm.\n"
              },
              "MinimumSectionModulusY": {
                "type": "real",
                "Description": "Bending resistance about the ys axis at the point with minimum zs ordinate. For example measured in mm\u00b3.\n"
              },
              "MinimumSectionModulusZ": {
                "type": "real",
                "Description": "Bending resistance about the zs axis at the point with minimum ys ordinate. For example measured in mm\u00b3.\n"
              },
              "MomentOfInertiaY": {
                "type": "real",
                "Description": "Moment of inertia about ys (second moment of area, about ys). For example measured in mm4.\n"
              },
              "MomentOfInertiaYZ": {
                "type": "real",
                "Description": "Moment of inertia about ys and zs (product moment of area). For example measured in mm4.\n"
              },
              "MomentOfInertiaZ": {
                "type": "real",
                "Description": "Moment of inertia about zs (second moment of area, about zs). For example measured in mm4\n"
              },
              "Perimeter": {
                "type": "real",
                "Description": "Perimeter of the profile for calculating the surface area. For example measured in mm.\n"
              },
              "PlasticShapeFactorY": {
                "type": "real",
                "Description": "Ratio of plastic versus elastic bending moment capacity about the section analysis axis ys. A dimensionless value.\n"
              },
              "PlasticShapeFactorZ": {
                "type": "real",
                "Description": "Ratio of plastic versus elastic bending moment capacity about the section analysis axis zs. A dimensionless value.\n"
              },
              "ShearAreaY": {
                "type": "real",
                "Description": "Area of the profile for calculating the shear stress due to shear force parallel to the section analysis axis ys. For example measured in mm\u00b2. If given, the shear area ys shall be non-negative.\n"
              },
              "ShearAreaZ": {
                "type": "real",
                "Description": "Area of the profile for calculating the shear stress due to shear force parallel to the section analysis axis zs. For example measured in mm\u00b2. If given, the shear area zs shall be non-negative.\n"
              },
              "ShearCentreY": {
                "type": "real",
                "Description": "Location of the profile's shear centre, measured along ys.\n"
              },
              "ShearCentreZ": {
                "type": "real",
                "Description": "Location of the profile's shear centre, measured along zs.\n"
              },
              "ShearDeformationAreaY": {
                "type": "real",
                "Description": "Area of the profile for calculating the shear deformation due to a shear force parallel to ys. For example measured in mm\u00b2. If given, the shear deformation area ys shall be non-negative.\n"
              },
              "ShearDeformationAreaZ": {
                "type": "real",
                "Description": "Area of the profile for calculating the shear deformation due to a shear force parallel to zs. For example measured in mm\u00b2. If given, the shear deformation area zs shall be non-negative.\n"
              },
              "TorsionalConstantX": {
                "type": "real",
                "Description": "Torsional constant about xs. For example measured in mm4.\n"
              },
              "TorsionalSectionModulus": {
                "type": "real",
                "Description": "Torsional resistance (about xs). For example measured in mm\u00b3.\n"
              },
              "WarpingConstant": {
                "type": "real",
                "Description": "Warping constant of the profile for torsional action. For example measured in mm6.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "ProfileType": {
                "values": [
                  "CURVE",
                  "AREA"
                ],
                "type": "IfcProfileTypeEnum",
                "Description": "Defines the type of geometry into which this profile definition shall be resolved, either a curve or a surface area. In case of curve the profile should be referenced by a swept surface, in case of area the profile should be referenced by a swept area solid."
              },
              "ProfileName": {
                "type": "string",
                "Description": "Human-readable name of the profile, for example according to a standard profile table. As noted above, machine-readable standardized profile designations should be provided in _IfcExternalReference.ItemReference_."
              }
            }
          }
        }
      },
      "IfcAlignmentCant": {
        "Parent": "IfcLinearElement",
        "Description": "",
        "Psets": {
          "Attributes": {
            "Properties": {
              "RailHeadDistance": {
                "type": "real",
                "Description": "Length measured as distance between the nominal centre points of the two contact patches of a wheelset and rails.\n"
              }
            }
          }
        }
      },
      "IfcDistributionBoard": {
        "Parent": "IfcFlowController",
        "Description": "",
        "Psets": {
          "Pset_DistributionBoardOccurrence": {
            "Properties": {
              "IsMain": {
                "type": "boolean",
                "Description": "Identifies if the current instance is a main distribution point or topmost level in an electrical distribution hierarchy (= TRUE) or a sub-main distribution point (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsSkilledOperator": {
                "type": "boolean",
                "Description": "Identifies if the current instance requires a skilled person or instructed person to perform operations on the distribution board (= TRUE) or whether operations may be performed by a person without appropriate skills or instruction (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_DistributionBoardTypeCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_DistributionBoardBaseQuantities": {
            "Properties": {
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NumberOfCircuits": {
                "type": "q_count",
                "Description": "Number of parallel fluid tube circuits.\n"
              }
            }
          }
        }
      },
      "IfcDistributionBoard.SWITCHBOARD": {
        "Parent": "IfcDistributionBoard",
        "Description": ""
      },
      "IfcDistributionBoard.CONSUMERUNIT": {
        "Parent": "IfcDistributionBoard",
        "Description": ""
      },
      "IfcDistributionBoard.MOTORCONTROLCENTRE": {
        "Parent": "IfcDistributionBoard",
        "Description": ""
      },
      "IfcDistributionBoard.DISTRIBUTIONFRAME": {
        "Parent": "IfcDistributionBoard",
        "Description": ""
      },
      "IfcDistributionBoard.DISTRIBUTIONBOARD": {
        "Parent": "IfcDistributionBoard",
        "Description": ""
      },
      "IfcElectricFlowTreatmentDevice": {
        "Parent": "IfcFlowTreatmentDevice",
        "Description": ""
      },
      "IfcElectricFlowTreatmentDevice.ELECTRONICFILTER": {
        "Parent": "IfcElectricFlowTreatmentDevice",
        "Description": ""
      },
      "IfcMobileTelecommunicationsAppliance": {
        "Parent": "IfcFlowTerminal",
        "Description": ""
      },
      "IfcMobileTelecommunicationsAppliance.E_UTRAN_NODE_B": {
        "Parent": "IfcMobileTelecommunicationsAppliance",
        "Description": ""
      },
      "IfcMobileTelecommunicationsAppliance.REMOTE_RADIO_UNIT": {
        "Parent": "IfcMobileTelecommunicationsAppliance",
        "Description": ""
      },
      "IfcMobileTelecommunicationsAppliance.ACCESSPOINT": {
        "Parent": "IfcMobileTelecommunicationsAppliance",
        "Description": ""
      },
      "IfcMobileTelecommunicationsAppliance.BASETRANSCEIVERSTATION": {
        "Parent": "IfcMobileTelecommunicationsAppliance",
        "Description": ""
      },
      "IfcMobileTelecommunicationsAppliance.REMOTEUNIT": {
        "Parent": "IfcMobileTelecommunicationsAppliance",
        "Description": ""
      },
      "IfcMobileTelecommunicationsAppliance.BASEBANDUNIT": {
        "Parent": "IfcMobileTelecommunicationsAppliance",
        "Description": ""
      },
      "IfcMobileTelecommunicationsAppliance.MASTERUNIT": {
        "Parent": "IfcMobileTelecommunicationsAppliance",
        "Description": ""
      },
      "IfcRail.RACKRAIL": {
        "Parent": "IfcRail",
        "Description": ""
      },
      "IfcRail.BLADE": {
        "Parent": "IfcRail",
        "Description": ""
      },
      "IfcRail.GUARDRAIL": {
        "Parent": "IfcRail",
        "Description": ""
      },
      "IfcRail.STOCKRAIL": {
        "Parent": "IfcRail",
        "Description": ""
      },
      "IfcRail.CHECKRAIL": {
        "Parent": "IfcRail",
        "Description": ""
      },
      "IfcRail.RAIL": {
        "Parent": "IfcRail",
        "Description": ""
      },
      "IfcRailway": {
        "Parent": "IfcFacility",
        "Description": "",
        "Psets": {
          "Pset_RailwayPowerSupplyFacility": {
            "Properties": {
              "RailwayPowerSupplyFacilityType": {
                "type": "penum_railwaypowersupplyfacilitytype",
                "Description": ""
              }
            }
          }
        }
      },
      "IfcTrackElement.TRACKENDOFALIGNMENT": {
        "Parent": "IfcTrackElement",
        "Description": ""
      },
      "IfcTrackElement.BLOCKINGDEVICE": {
        "Parent": "IfcTrackElement",
        "Description": ""
      },
      "IfcTrackElement.VEHICLESTOP": {
        "Parent": "IfcTrackElement",
        "Description": ""
      },
      "IfcTrackElement.SLEEPER": {
        "Parent": "IfcTrackElement",
        "Description": "",
        "Psets": {
          "Pset_Sleeper": {
            "Properties": {
              "IsHollow": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcTrackElement.HALF_SET_OF_BLADES": {
        "Parent": "IfcTrackElement",
        "Description": ""
      },
      "IfcTrackElement.SPEEDREGULATOR": {
        "Parent": "IfcTrackElement",
        "Description": ""
      },
      "IfcTrackElement.DERAILER": {
        "Parent": "IfcTrackElement",
        "Description": ""
      },
      "IfcTrackElement.FROG": {
        "Parent": "IfcTrackElement",
        "Description": ""
      },
      "IfcRail": {
        "Parent": "IfcBuiltElement",
        "Description": ""
      },
      "IfcTrackElement": {
        "Parent": "IfcBuiltElement",
        "Description": ""
      },
      "IfcKerbType": {
        "Parent": "IfcBuiltElementType",
        "Description": "",
        "Psets": {
          "Pset_KerbCommon": {
            "Properties": {
              "Upstand": {
                "type": "real",
                "Description": "The height difference between the two separated surfaces.\n"
              },
              "CombinedKerbGutter": {
                "type": "boolean",
                "Description": "Indicating  the use of a combined kerb and gutter.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_KerbStone": {
            "Properties": {
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc\n"
              },
              "StoneFinishes": {
                "type": "string",
                "Description": "Eg. 'Polished', 'Bush Hammered', 'Split', 'Sawn', 'Flamed'\n"
              },
              "Height": {
                "type": "real",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_OnSiteCastKerb": {
            "Properties": {
              "Height": {
                "type": "real",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_PrecastKerbStone": {
            "Properties": {
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc\n"
              },
              "Height": {
                "type": "real",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_RadiiKerbStone": {
            "Properties": {
              "CurveShape": {
                "type": "penum_curveshapeenum",
                "Description": "Shape according to CurveShapeEnum\n"
              },
              "Radius": {
                "type": "real",
                "Description": "The radius of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcRoad": {
        "Parent": "IfcFacility",
        "Description": ""
      },
      "IfcKerb": {
        "Parent": "IfcBuiltElement",
        "Description": "",
        "Psets": {
          "Pset_KerbCommon": {
            "Properties": {
              "Upstand": {
                "type": "real",
                "Description": "The height difference between the two separated surfaces.\n"
              },
              "CombinedKerbGutter": {
                "type": "boolean",
                "Description": "Indicating  the use of a combined kerb and gutter.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Pset_KerbStone": {
            "Properties": {
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc\n"
              },
              "StoneFinishes": {
                "type": "string",
                "Description": "Eg. 'Polished', 'Bush Hammered', 'Split', 'Sawn', 'Flamed'\n"
              },
              "Height": {
                "type": "real",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_OnSiteCastKerb": {
            "Properties": {
              "Height": {
                "type": "real",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_PrecastKerbStone": {
            "Properties": {
              "TypeDesignation": {
                "type": "string",
                "Description": "Type designator for the element. The content depends on local standards. Eg. 'Bull nose', 'Half batter', 'Dropper', 'Chamfer' etc\n"
              },
              "Height": {
                "type": "real",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_RadiiKerbStone": {
            "Properties": {
              "CurveShape": {
                "type": "penum_curveshapeenum",
                "Description": "Shape according to CurveShapeEnum\n"
              },
              "Radius": {
                "type": "real",
                "Description": "The radius of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Mountable": {
                "type": "boolean",
                "Description": "Specifies whether the kerb can be readily climbed by a vehicle or not.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcBeam": {
        "Parent": "IfcBuiltElement",
        "Description": "An _IfcBeam_ is a horizontal, or nearly horizontal, structural member that is capable of withstanding load primarily by resisting bending. It represents such a member from an architectural point of view. It is not required to be load bearing.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: structural member for carrying load(s) between or beyond points of support, usually narrow in relation to its length and horizontal or nearly so.\n\n\n\n> NOTE&nbsp; The representation of load-bearing beams in a structural analysis model is provided by subtypes of _IfcStructuralMember_ (with _IfcStructuralCurveMember_ being mostly applicable) as part of an _IfcStructuralAnalysisModel_.\n\n\n\n> NOTE&nbsp; For any other longitudinal structural member, not constrained to be predominately horizontal nor vertical, or where this semantic information is irrelevant, the entity _IfcMember_ should be used.\n\n\n\nThe camber of a beam may be defined by assigning a StructuralCurveMember with displacement coordinates. Multiple sets of camber ordinates may be provided that are qualified by the particular load case, where full dead load would typically be used for fabrication, and other scenarios used for other loading conditions such as during construction.\n\n\n\nThere are two entities for beam occurrences:\n\n\n\n* _IfcBeamStandardCase_ used for all occurrences of beams, that have a profile defined that is swept along a directrix. The profile might be changed uniformly by a taper definition along the directrix. The profile parameter and its cardinal point of insertion can be fully described by the _IfcMaterialProfileSetUsage_. These beams are always represented geometricly by an 'Axis' and a 'SweptSolid' or 'AdvancedSweptSolid' shape representation (or by a 'Clipping' geometry based on the swept solid), if a 3D geometric representation is assigned. In addition they have to have a corresponding _IfcMaterialProfileSetUsage_ assigned. \n\n>> NOTE&nbsp; Model view definitions and implementer agreements may further constrain the applicable geometry types, for example, by excluding tapering from an _IfcBeamStandardCase_ implementation.* _IfcBeam_ used for all other occurrences of beams, particularly for beams with non-uniformly changing profile sizes along the sweep, or beams having only 'AdvancedBrep', 'Brep', 'SurfaceModel', or 'Tessellation' geometry. \n\n>> NOTE&nbsp; Model view definitions and implementer agreements may impose the use of _IfcBeam_ in all cases by excluding _IfcBeamStandardCase_ from scope of the model view.\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n",
        "Psets": {
          "Pset_BeamCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Roll": {
                "type": "real",
                "Description": "Rotation against the longitudinal axis - relative to the global  X direction for all columns that are vertical in regard to the global coordinate system (Profile direction equals global X is Roll = 0.). For all non-vertical columns the following applies:  Roll is relative to the global Z direction f(Profile direction of non-vertical columns that equals global Z is Roll = 0.)\n\n\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only.\n\n\n\nNote: new property in IFC4\n"
              },
              "Slope": {
                "type": "real",
                "Description": "Sloping angle of the object  - relative to horizontal (0.0 degrees). \n\nActual maximum slope for the passageway according to the current design.\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              },
              "Span": {
                "type": "real",
                "Description": "Clear span for this object.\n\n\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence. For geometry editing applications, like CAD: this value should be write-only.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          },
          "Qto_BeamBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the profile. For example measured in mm2. If given, the value of the cross section area shall be greater than zero.\n"
              },
              "GrossSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the footing, normally generated as perimeter \\* length + 2 \\* cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately.\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetSurfaceArea": {
                "type": "q_area",
                "Description": "Net surface area of the column, normally generated as perimeter \\* length + 2 \\* cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "OuterSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the extruded surfaces of the footing (not taking into account the end cap areas), normally generated as perimeter \\* length.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfBeam": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The description of the air side system.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SpacingBarPitch": {
                "type": "real",
                "Description": "The pitch length of the spacing bar.\n"
              },
              "StirrupBarPitch": {
                "type": "real",
                "Description": "The pitch length of the stirrup bar.\n"
              }
            }
          }
        }
      },
      "IfcBeamStandardCase": {
        "Parent": "IfcBeam",
        "Description": "The standard beam, _IfcBeamStandardCase_, defines a beam with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The _IfcBeamStandardCase_ handles all cases of beams, that:\n\n\n\n* have a reference to the _IfcMaterialProfileSetUsage_ defining the material profile association of the beam with the cardinal point of its insertion relative to the local placement.\n\n* are consistent in using the correct cardinal point offset of the profile as compared to the 'Axis' and 'Body' shape representation\n\n* are based on a sweep of a planar profile, or set of profiles, as defined by the _IfcMaterialProfileSet_\n\n* have an 'Axis' shape representation with constraints provided below in the geometry use definition\n\n* have a 'Body' shape representation with constraints provided below in the geometry use definition \n\n    * are extruded perpendicular to the profile definition plane\n\n    * have a start profile, or set of profiles, that is swept\n\n    * the sweeping operation can be linear extrusion, circular rotation, or a sweep along a directrix\n\n    * the start profile, or set of profiles can be swept unchanged, or might be changed uniformly by a taper definition \n\n*  \n\n>> NOTE&nbsp; View definitions and implementer agreements may further constrain the applicable geometry types, e.g. by excluding tapering from an _IfcBeamStandardCase_ implementation. \n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n**_Geometric Representations_**\n\n\n\nThe geometric representation of _IfcBeamStandardCase_ is defined using the following multiple shape representations for its definition:\n\n\n\n* **Axis**: A three dimensional open curve (subtype of _IfcBoundedCurve_) defining the axis for the standard beam. The cardinal point is determined by the beam axis.\n\n* **Body**: A Swept Solid Representation or a CSG clipping representation defining the 3D shape of the standard beam.\n\n\n\n> NOTE&nbsp; It is invalid to exchange a 'SurfaceModel', 'Brep', or 'MappedRepresentation' representation for the 'Body' shape representation of an _IfcBeamStandardCase_.\n\n\n\n## Formal Propositions\n\n\n\n### HasMaterialProfileSetUsage\n\nA valid instance of _IfcBeamStandardCase_ relies on the provision of an _IfcMaterialProfileSetUsage_.\n"
      },
      "IfcBeam.BEAM": {
        "Parent": "IfcBeam",
        "Description": "A standard beam usually used horizontally.\n\n\n"
      },
      "IfcBeam.HATSTONE": {
        "Parent": "IfcBeam",
        "Description": ""
      },
      "IfcBeam.T_BEAM": {
        "Parent": "IfcBeam",
        "Description": ""
      },
      "IfcBeam.EDGEBEAM": {
        "Parent": "IfcBeam",
        "Description": ""
      },
      "IfcBeam.LINTEL": {
        "Parent": "IfcBeam",
        "Description": "A beam or horizontal piece of material over an opening (e.g. door, window).\n\n\n"
      },
      "IfcBeam.GIRDER_SEGMENT": {
        "Parent": "IfcBeam",
        "Description": "A segment of a girder (e.g. each span of a continuous girder).\n\n\n"
      },
      "IfcBeam.DIAPHRAGM": {
        "Parent": "IfcBeam",
        "Description": ""
      },
      "IfcBeam.JOIST": {
        "Parent": "IfcBeam",
        "Description": "A beam used to support a floor or ceiling.\n\n\n"
      },
      "IfcBeam.CORNICE": {
        "Parent": "IfcBeam",
        "Description": "A non-loadbearing beam on the longitudinal edge of bridge slab, usually encasing installations.\n\n\n"
      },
      "IfcBeam.SPANDREL": {
        "Parent": "IfcBeam",
        "Description": "A tall beam placed on the facade of a building. One tall side is usually finished to provide the exterior of the building. Can be used to support joists or slab elements on its interior side.\n\n\n"
      },
      "IfcBeam.PIERCAP": {
        "Parent": "IfcBeam",
        "Description": "A transversal beam on top of a pier (on a single column or extending from one column of a pier to another column of the same pier).\n\n\n"
      },
      "IfcBeam.HOLLOWCORE": {
        "Parent": "IfcBeam",
        "Description": "A wide often prestressed beam with a hollow-core profile that usually serves as a slab component.\n\n\n"
      },
      "IfcBearing": {
        "Parent": "IfcBuiltElement",
        "Description": "Type of building element that is usually used to transmit loads from superstructure to substructure, and usually allowing movement (displacement or rotation) in one or more degrees of freedom. It is typically a mechanical component procured as a whole and installed on site, but in simple cases it may be built on site (composed of other building elements, element components, etc.).\n\n\n\n> NOTE&nbsp; The sliding and roller materials are to be assigned to the bearing with the _Material Constituent Set_ concept.\n\n\n\n> NOTE&nbsp; The displacements and rotations accommodated can be defined in the _Pset_BearingCommon_ property set.\n\n\n",
        "Psets": {
          "Pset_BearingCommon": {
            "Properties": {
              "DisplacementAccomodated": {
                "type": "boolean",
                "Description": "A list of exactly three boelean values representing an accomodated displacement (value TRUE or 1) or no displacement (value FALSE or 0) on the corresponding axis where the first value represents axis X, second value axis Y and third value axis Z.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "RotationAccomodated": {
                "type": "boolean",
                "Description": "A list of exactly three boelean values representing an accomodated rotation (value TRUE or 1) or no rotation (value FALSE or 0) about the corresponding axis where the first value represents axis X, second value axis Y and third value axis Z.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcBearing.DISK": {
        "Parent": "IfcBearing",
        "Description": "A disk bearing consist of an elastomeric disc between two metal plates.\n\n\n"
      },
      "IfcBearing.POT": {
        "Parent": "IfcBearing",
        "Description": "A bearing which carries vertical load by compression of an (elastomeric) disc confined in a (steel) cylinder and which accommodates rotations by deformations of the disc.\n\n\n"
      },
      "IfcBearing.ELASTOMERIC": {
        "Parent": "IfcBearing",
        "Description": "A pad bearing which carries vertical load by contact stresses between a sheet of sliding material and a mating surface that permits movements by sliding and accommodates rotation by deformation of the elastomer.\n\n\n"
      },
      "IfcBearing.GUIDE": {
        "Parent": "IfcBearing",
        "Description": ""
      },
      "IfcBearing.CYLINDRICAL": {
        "Parent": "IfcBearing",
        "Description": "The bearing functionality is provided by cylinder in a concave cylinder.\n\n\n"
      },
      "IfcBearing.ROCKER": {
        "Parent": "IfcBearing",
        "Description": "The bearing functionality is provided by a rocker construction. Includes line rocker and point rocker bearings.\n\n\n"
      },
      "IfcBearing.SPHERICAL": {
        "Parent": "IfcBearing",
        "Description": ""
      },
      "IfcBearing.ROLLER": {
        "Parent": "IfcBearing",
        "Description": "The bearing functionality is provided by one or more rollers that are placed between two plates.\n\n\n"
      },
      "IfcBuildingElementProxy": {
        "Parent": "IfcBuiltElement",
        "Description": "The _IfcBuildingElementProxy_ is a proxy definition that provides the same functionality as subtypes of _IfcBuildingElement_, but without having a predefined meaning of the special type of building element, it represents.\n\n\n\nProxies can also be used as spatial place holders or provisions, that are later replaced by special types of elements.\n\n\n\nOne use of the proxy object is a provision for voids, i.e. where a particular volume of space is requested by an engineering function that might later be accepted or rejected. If accepted it is transformed into a void within a building element, like a wall opening, or a slab opening. The provision for voids is exchanged as an _IfcBuildingElementProxy_ with the _PredefinedType_ = ProvisionForVoid. Such proxy shall have a swept solid geometry, where the profile of the swept solid lies on/near the surface of the referred building element and the extrusion depths is equal to or bigger then (in case of round or otherwise irregular element shape) the thickness of the building element. The appropriate property set should be attached.\n\n\n\nIn addition to the provision for voids, the building element proxy can also represent a provision for space, often the necessary space allocation for mechanical equipment that will be determined in a later design phase. The provision for space is exchanged as an _IfcBuildingElementProxy_ with the _PredefinedType_ = ProvisionForSpace.\n\n\n\nOther usages of _IfcBuildingElementProxy_ include:\n\n\n\n* The _IfcBuildingElementProxy_ can be used to exchange special types of building elements for which the current specification does not yet provide a semantic definition.\n\n* The _IfcBuildingElementProxy_ can also be used to represent building elements for which the participating applications can not provide a semantic definition.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x.\n\n\n",
        "Psets": {
          "Pset_BuildingElementProxyCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          },
          "Qto_BuildingElementProxyQuantities": {
            "Properties": {
              "NetSurfaceArea": {
                "type": "q_count",
                "Description": "Net surface area of the column, normally generated as perimeter \\* length + 2 \\* cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NetVolume": {
                "type": "q_count",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          }
        }
      },
      "IfcBuildingElementProxy.PARTIAL": {
        "Parent": "IfcBuildingElementProxy",
        "Description": ""
      },
      "IfcBuildingElementProxy.PROVISIONFORVOID": {
        "Parent": "IfcBuildingElementProxy",
        "Description": "",
        "Psets": {
          "Pset_BuildingElementProxyProvisionForVoid": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The nominal depth of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Diameter": {
                "type": "real",
                "Description": "Diameter of the object. It is the diameter of the handrail of the railing.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n\nHere the diameter of the hand or guardrail within the railing.\n"
              },
              "Height": {
                "type": "real",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Shape": {
                "type": "string",
                "Description": "Cross sectional shape. Note that this shape is uniform throughout the length of the segment. For nonuniform shapes, a transition fitting should be used instead.\n"
              },
              "System": {
                "type": "string",
                "Description": "he building service system that requires the provision for voids, e.g. 'Air Conditioning', 'Plumbing', 'Electro', etc.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcBuildingElementProxy.COMPLEX": {
        "Parent": "IfcBuildingElementProxy",
        "Description": "Not used - kept for upward compatibility.\n\n\n"
      },
      "IfcBuildingElementProxy.PROVISIONFORSPACE": {
        "Parent": "IfcBuildingElementProxy",
        "Description": "The proxy denotes a provision for space (e.g. the space allocated as a provision for mechanical equipment or furniture).\n\n\n"
      },
      "IfcBuildingElementProxy.ELEMENT": {
        "Parent": "IfcBuildingElementProxy",
        "Description": ""
      },
      "IfcBuildingSystem": {
        "Parent": "IfcSystem",
        "Description": "A building system is a group by which building elements are grouped according to a common function within the facility.\n\n\n\nThe group _IfcBuildingSystem_ defines the occurrence of a specialized system for use within the context of a building and finishing fabric. Important functionalities for the description of a building system are derived from supertypes:\n\n\n\n* From _IfcSystem_ it inherits the ability to couple the building system via _IfcRelServicesBuildings_ to one or more _IfcSpatialElement_ subtypes as necessary.\n\n* From _IfcGroup_ it inherits the inverse attribute _IsGroupedBy_, pointing to the relationship class _IfcRelAssignsToGroup_. This allows to group building elements (instances of _IfcBuildingElement_ subtypes, _IfcFurnishingElement_ subtype, _IfcElementAssembly_ and _IfcTransportElement_).\n\n* From _IfcObjectDefinition_ it inherits the inverse attribute _IsDecomposedBy_ pointing to the relationship class _IfcRelAggregates_. It provides the hierarchy between the separate (partial) building systems.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n",
        "Psets": {
          "Pset_BuiltSystemCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": "Long name for a building system, used for informal purposes. It should be used, if available, in conjunction with the inherited _Name_ attribute.\\X\\0D\n> NOTE&nbsp; In many scenarios the _Name_ attribute refers to the short name or number of a building system, and the _LongName_ refers to a descriptive name."
              }
            }
          }
        }
      },
      "IfcCaissonFoundation": {
        "Parent": "IfcDeepFoundation",
        "Description": "CaissonFoundation essentially is a hollow box that can be either open or closed.\n\n\n\n(NOTE: corresponding predefined type is deprecated from IfcFootingTypeEnum).\n\n\n"
      },
      "IfcCaissonFoundation.WELL": {
        "Parent": "IfcCaissonFoundation",
        "Description": "Open box.\n\n\n"
      },
      "IfcCaissonFoundation.CAISSON": {
        "Parent": "IfcCaissonFoundation",
        "Description": "Closed box.\n\n\n"
      },
      "IfcChimney": {
        "Parent": "IfcBuiltElement",
        "Description": "Chimneys are typically vertical, or as near as vertical, parts of the construction of a building and part of the building fabric. Often constructed by pre-cast or insitu concrete, today seldom by bricks.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: construction containing one or more flues.  \n\n> Flue: Duct designed to convey the products of combustion to the open air.  \n\n> Chimney stack: Part of the chimney that projects above a roof.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n",
        "Psets": {
          "Pset_ChimneyCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NumberOfDrafts": {
                "type": "number",
                "Description": "Number of the chimney drafts, continuous holes in the chimney through which the air passes, within the single chimney.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          },
          "Qto_ChimneyBaseQuantities": {
            "Properties": {
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          }
        }
      },
      "IfcColumn": {
        "Parent": "IfcBuiltElement",
        "Description": "<An _IfcColumn_ is a vertical structural member which often is aligned with a structural grid intersection. It represents a vertical, or nearly vertical, structural member that transmits, through compression, the weight of the structure above to other structural elements below. It represents such a member from an architectural point of view. It is not required to be load bearing.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1  \n\n> structural member of slender form, usually vertical, that transmits to its base the forces, primarily in compression, that are applied to it.\n\n\n\n> NOTE&nbsp; The representation of a column in a structural analysis model is provided by _IfcStructuralCurveMember_ being part of an _IfcStructuralAnalysisModel_.\n\n\n\n> NOTE&nbsp; For any longitudial structural member, not constrained to be predominately horizontal nor vertical, or where this semantic information is irrelevant, the entity _IfcMember_ exists.\n\n\n\nThe IFC specification provides two entities for column occurrences:\n\n\n\n* _IfcColumnStandardCase_ used for all occurrences of columns, tthat have a profile defined that is swept along a directrix. The profile might be changed uniformly by a taper definition along the directrix. The profile parameter and its cardinal point of insertion can be fully described by the _IfcMaterialProfileSetUsage_. These beams are always represented geometricly by an 'Axis' and a 'SweptSolid' or 'AdvancedSweptSolid' shape representation (or by a 'Clipping' geometry based on the swept solid), if a 3D geometric representation is assigned. In addition they have to have a corresponding _IfcMaterialProfileSetUsage_ assigned. \n\n>> NOTE&nbsp; View definitions and implementer agreements may further constrain the applicable geometry types, for example by excluding tapering from an _IfcColumnStandardCase_ implementation. \n\n* _IfcColumn_ used for all other occurrences of columns, particularly for columns with changing profile sizes along the extrusion, or columns defined by non-linear extrusion, or columns having only 'Brep', or 'SurfaceModel' geometry.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n",
        "Psets": {
          "Pset_ColumnCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Roll": {
                "type": "real",
                "Description": "Rotation against the longitudinal axis - relative to the global  X direction for all columns that are vertical in regard to the global coordinate system (Profile direction equals global X is Roll = 0.). For all non-vertical columns the following applies:  Roll is relative to the global Z direction f(Profile direction of non-vertical columns that equals global Z is Roll = 0.)\n\n\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only.\n\n\n\nNote: new property in IFC4\n"
              },
              "Slope": {
                "type": "real",
                "Description": "Sloping angle of the object  - relative to horizontal (0.0 degrees). \n\nActual maximum slope for the passageway according to the current design.\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          },
          "Qto_ColumnBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the profile. For example measured in mm2. If given, the value of the cross section area shall be greater than zero.\n"
              },
              "GrossSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the footing, normally generated as perimeter \\* length + 2 \\* cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately.\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetSurfaceArea": {
                "type": "q_area",
                "Description": "Net surface area of the column, normally generated as perimeter \\* length + 2 \\* cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "OuterSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the extruded surfaces of the footing (not taking into account the end cap areas), normally generated as perimeter \\* length.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfColumn": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The description of the air side system.\n"
              },
              "HoopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the hoop bar.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "ReinforcementBarType": {
                "type": "PEnum_ReinforcementBarType",
                "Description": "Defines the type of the reinforcement bar.\n",
                "values": [
                  "RING",
                  "SPIRAL"
                ]
              },
              "XDirectionTieHoopBarPitch": {
                "type": "real",
                "Description": "The X direction pitch length of the tie hoop.\n"
              },
              "XDirectionTieHoopCount": {
                "type": "integer",
                "Description": "The number of bars with X direction tie hoop bars.\n"
              },
              "YDirectionTieHoopBarPitch": {
                "type": "real",
                "Description": "The Y direction pitch length of the tie hoop.\n"
              },
              "YDirectionTieHoopCount": {
                "type": "integer",
                "Description": "The number of bars with Y direction tie hoop bars.\n"
              }
            }
          }
        }
      },
      "IfcColumnStandardCase": {
        "Parent": "IfcColumn",
        "Description": "The standard column, _IfcColumnStandardCase_, defines a column with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The _IfcColumnStandardCase_ handles all cases of columns, that:\n\n\n\n<ul>\n\n<li>have a reference to the <em>IfcMaterialProfileSetUsage</em>\n\ndefining the material profile association of the column with the\n\ncardinal point of its insertion relative to the local\n\nplacement.</li>\n\n<li>are based on a sweep of a planar profile, or set of profiles,\n\nas defined by the <em>IfcMaterialProfileSet</em></li>\n\n<li>have an 'Axis' shape representation with constraints provided\n\nbelow in the geometry use definition</li>\n\n<li>have a 'Body' shape representation with constraints provided\n\nbelow in the geometry use definition</li>\n\n<li>have a start profile, or set of profiles, that is swept along\n\nthe directrix and might be changed uniformly by a taper\n\ndefinition</li>\n\n<li>are consistent in using the correct cardinal point offset of\n\nthe profile as compared to the 'Axis' and 'Body' shape\n\nrepresentation</li>\n\n<li>are extruded perpendicular to the profile definition\n\nplane</li>\n\n<li style=\"list-style-type:none\">\n\n<blockquote class=\"note\"><small>NOTE&nbsp; View definitions and implementer\n\nagreements may further constrain the applicable geometry types,\n\ne.g. by excluding tapering from an <em>IfcBeamStandardCase</em>\n\nimplementation.</small></blockquote>\n\n</li>\n\n</ul>\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n**_Geometric Representations_**\n\n\n\nThe geometric representation of _IfcColumnStandardCase_ is defined using the following multiple shape representations for its definition:\n\n\n\n* **Axis**: A three-dimensional open curve (subtype of _IfcBoundedCurve_) defining the axis for the standard column. The cardinal point is determined by the column axis.\n\n* **Body**: A Swept Solid Representation or a CSG representation defining the 3D shape of the standard column.\n\n\n\n> NOTE&nbsp; It is invalid to exchange a 'SurfaceModel', 'Brep', or 'MappedRepresentation' representation for the 'Body' shape representation of an _IfcColumnStandardCase_.\n\n\n\n## Formal Propositions\n\n\n\n### HasMaterialProfileSetUsage\n\nA valid instance of _IfcColumnStandardCase_ relies on the provision of an _IfcMaterialProfileSetUsage_.\n"
      },
      "IfcColumn.PIERSTEM": {
        "Parent": "IfcColumn",
        "Description": "An individual vertical part of a pier, may be a simple column, i.e. no breakdown into segments or separate structural parts such as flanges and web(s), or may be an aggregation of segments and/or parts.\n\n\n"
      },
      "IfcColumn.PIERSTEM_SEGMENT": {
        "Parent": "IfcColumn",
        "Description": "A vertical segment of a pier column.\n\n\n"
      },
      "IfcColumn.PILASTER": {
        "Parent": "IfcColumn",
        "Description": "A column element embedded within a wall that can be required to be load bearing but may also only be used for decorative purposes.\n\n\n"
      },
      "IfcColumn.COLUMN": {
        "Parent": "IfcColumn",
        "Description": ""
      },
      "IfcColumn.STANDCOLUMN": {
        "Parent": "IfcColumn",
        "Description": "A column transmitting vertical loads from superstructure to an arch below it.\n\n\n"
      },
      "IfcCovering": {
        "Parent": "IfcBuiltElement",
        "Description": "A covering is an element which covers some part of another element and is fully dependent on that other element. The _IfcCovering_ defines the occurrence of a covering type, that (if given) is expressed by the _IfcCoveringType_.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO ISO 6707-1: final coverings and treatments of surfaces and their intersections.\n\n\n\nCoverings are elements with relationships to the covered element and the space on the other side, they may contain openings, assigned by _IfcRelVoidsElement_, material information, assigned by _IfcRelAssociatesMaterial_, and others.\n\n\n\n> EXAMPLE&nbsp; Coverings include wall claddings, floorings, suspended ceilings, moldings and skirting boards.\n\n\n\n> NOTE&nbsp; A more basic information about claddings, floorings, and ceilings of a space can be attached to _IfcSpace_'s using the Pset_SpaceCommon properties. Then only a name can be provided and the covering quantities would be interpreted from the space quantities.\n\n\n\nCoverings can be assigned to\n\n\n\n* a space represented by _IfcSpace_ \n\n    * using the inverse relationship _CoversSpaces_ pointing to _IfcRelCoversSpaces_. The space is then accessible via _IfcRelCoversSpaces.RelatedSpace_. It defines to which space a covering is facing towards. \n\n* a space boundary represented by _IfcRelSpaceBoundary_ \n\n    * using the inverse relationship _ProvidesBoundaries_ pointing to _IfcRelSpaceBoundary._ The space is then accessible via _IfcRelSpaceBoundary.RelatingSpace_. \n\n* a building element represented by _IfcBuildingElement_ \n\n    * using the inverse relationship _Covers_ pointing to _IfcRelCoversBldgElements_. The building element is then accessible via _IfcRelCoversBldgElements.RelatingBuildingElement_. \n\n\n\n> NOTE&nbsp; The mere containment relationship between an _IfcCovering_ and an _IfcSpace_ is created by using _IfcRelContainedInSpatialStructure_\n\n\n\nThe following guideline shall apply:\n\n\n\n* (default) if the space has coverings that may not have their own shape representation and no defined relationships to the building elements they cover, then the _IfcCovering_ shall be assigned to _IfcSpace_ using the _IfcRelCoversSpaces_ relationship,\n\n* if the space has coverings that have an own shape representation and the space has defined space boundaries, then the covering, which relates to that space, shall be contained in the space using _IfcRelContainedInSpatialStructure_. It may be assigned to the space boundaries using the _IfcRelSpaceBoundary_.\n\n* if the covering does not relate to a space, then the covering should be assigned to the building element or a distribution element using the _IfcRelCoversBldgElements_ relationship.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0.\n\n\n\n{ .change-ifc2x}\n\n> IFC2x CHANGE&nbsp; The attribute _PredefinedType_ is now optional and should only be inserted when no type information, given by _IfcCoveringType_, is assigned to the _IfcCovering_ occurrence by _IfcRelDefinesByType_.\n\n\n",
        "Psets": {
          "Pset_CoveringCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\n\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorbtion values).\n"
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Finish": {
                "type": "string",
                "Description": "Finish selection for this object.\n\nHere specification of the surface finish for informational purposes.\n"
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "FlammabilityRating": {
                "type": "string",
                "Description": "Flammability Rating for this object.\n\nIt is given according to the national building code that governs the rating of flammability for materials.\n"
              },
              "FragilityRating": {
                "type": "string",
                "Description": "Indication on the fragility of the covering (e.g., under fire conditions).  It is given according to the national building code that might provide a classification for fragility.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\n\nIt is given according to the national building code that governs the fire behaviour for materials.\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          },
          "Qto_CoveringBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "q_area",
                "Description": "Total gross area of the outer surface of the roof. It is the sum of all roof slab gross areas. Roof openings, like sky windows and other openings and cut-outs are not taken into account.\n"
              },
              "NetArea": {
                "type": "q_area",
                "Description": "Total area of the ramp flight (not the projected area). Openings and recesses are taken into account by subtraction, projections by addition. Only given, if the ramp flight is prismatic.\n"
              },
              "Width": {
                "type": "q_length",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcCovering.ROOFING": {
        "Parent": "IfcCovering",
        "Description": "The covering is used to represent a roof covering.\n\n\n"
      },
      "IfcCovering.MEMBRANE": {
        "Parent": "IfcCovering",
        "Description": "An impervious layer that could be used for e.g. roof covering (below tiling - that may be known as sarking etc.) or as a damp proof course membrane; also, waterproofing material on a bridge structure (typically on top of bridge slab).\n\n\n"
      },
      "IfcCovering.SKIRTINGBOARD": {
        "Parent": "IfcCovering",
        "Description": "The covering is used to represent a skirting board being a strip of material to cover the transition between the wall cladding and the flooring.\n\n\n"
      },
      "IfcCovering.CEILING": {
        "Parent": "IfcCovering",
        "Description": "The covering is used torepresent a ceiling.\n\n\n",
        "Psets": {
          "Pset_CoveringCeiling": {
            "Properties": {
              "Permeability": {
                "type": "real",
                "Description": "Ratio of the permeability of the ceiling.\n\nThe ration can be used to indicate an open ceiling (that enables identification of whether ceiling construction should be considered as impeding distribution of sprinkler water, light etc. from installations within the ceiling area).\n"
              },
              "TileLength": {
                "type": "real",
                "Description": "Length of ceiling tiles. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "TileWidth": {
                "type": "real",
                "Description": "Width of ceiling tiles. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcCovering.COPING": {
        "Parent": "IfcCovering",
        "Description": "A protective capping or covering of a wall or a parapet.\n\n\n"
      },
      "IfcCovering.CLADDING": {
        "Parent": "IfcCovering",
        "Description": "The covering is used to represent a cladding.\n\n\n"
      },
      "IfcCovering.WRAPPING": {
        "Parent": "IfcCovering",
        "Description": "The covering is used for wrapping particularly of distribution elements using tape.\n\n\n"
      },
      "IfcCovering.MOLDING": {
        "Parent": "IfcCovering",
        "Description": "The covering is used to represent a molding being a strip of material to cover the transition of surfaces (often between wall cladding and ceiling).\n\n\n"
      },
      "IfcCovering.SLEEVING": {
        "Parent": "IfcCovering",
        "Description": "The covering is used to isolate a distribution element from a space in which it is contained.\n\n\n"
      },
      "IfcCovering.FLOORING": {
        "Parent": "IfcCovering",
        "Description": "The covering is used to represent a flooring.\n\n\n",
        "Psets": {
          "Pset_CoveringFlooring": {
            "Properties": {
              "HasAntiStaticSurface": {
                "type": "boolean",
                "Description": "Indication whether the surface finish is designed to prevent electrostatic charge (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasNonSkidSurface": {
                "type": "boolean",
                "Description": "Indication whether the surface finish is designed to prevent slippery (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcCovering.INSULATION": {
        "Parent": "IfcCovering",
        "Description": "The covering is used to insulate an element for thermal or acoustic purposes.\n\n\n"
      },
      "IfcCurtainWall": {
        "Parent": "IfcBuiltElement",
        "Description": "A curtain wall is an exterior wall of a building which is an assembly of components, hung from the edge of the floor/roof structure rather than bearing on a floor. Curtain wall is represented as a building element assembly and implemented as a subtype of _IfcBuildingElement_ that uses an _IfcRelAggregates_ relationship.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: non load bearing wall positioned on the outside of a building and enclosing it.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0\n\n\n\nThe geometric representation of _IfcCurtainWall_ is given by the _IfcProductDefinitionShape_, allowing multiple geometric representations. Independent 'Body' geometric representation, as described below, should only be used when the _IfcCurtainWall_ is not defined as an aggregate. If defined as an aggregate, the geometric representation is the sum of the representations of the components within the aggregate.\n\n\n\nThe geometric representation of _IfcCurtainWall_ is defined using the following multiple shape representations for its definition:\n\n\n\n* Axis: A two-dimensional open curve (for restrictions see below) defining the axis for the curtain wall. \n\n    * This is an optional representation for curtain walls. \n\n* Body: A surface model or boundary representation model representation defining the 3D shape of the curtain wall. \n\n    * If the _IfcCurtainWall_ has components (referenced by _SELF\\IfcObject.IsDecomposedBy_) then no independent shape representation with _RepresentationType_ = 'Body' shall be defined. The body of _IfcCurtainWall_ is then geometrically represented by the shape representation of its components. The components are accessed via _SELF\\IfcObject.IsDecomposedBy[1].RelatedObjects_. \n\n    * If the _IfcCurtainWall_ has no components defined (empty set of _SELF\\IfcObject.IsDecomposedBy_) then the _IfcCurtainWall_ may be represented by an shape representation with the _RepresentationIdentifier_ ='Body'.\n\n\n",
        "Psets": {
          "Pset_CurtainWallCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\n\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorbtion values).\n"
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\n\nIt is given according to the national building code that governs the fire behaviour for materials.\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          },
          "Qto_CurtainWallQuantities": {
            "Properties": {
              "GrossSideArea": {
                "type": "q_area",
                "Description": "Area of the curtain wall as viewed by an elevation view of the middle plane of the curtain wall.  It does not take into account any curtain wall modifications.\n"
              },
              "Height": {
                "type": "q_length",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetSideArea": {
                "type": "q_area",
                "Description": "Area of the curtain wall as viewed by an elevation view of the middle plane of the curtain wall. It does take into account all curtain wall modifications.\n"
              },
              "Width": {
                "type": "q_length",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcDeepFoundation": {
        "Parent": "IfcBuiltElement",
        "Description": "Deep foundation is a type of foundation that transfers loads deeper than shallow foundation below the soft soils not capable of bearing the above structure. Depending on the soil strength it might have to reach down to the rock layer.\n\n\n\nDeep foundation is a new supertype incorporating the existing _IfcPile_ and the new _IfcCaissonFoundation_.\n\n\n\n## Formal Propositions\n\n\n\n### CorrectTypeAssigned\n\nEither there is no deep foundation type object associated, i.e. the _IsTypedBy_ inverse relationship is not provided, or the associated type object has to be of type _IfcDeepFoundationType_.\n"
      },
      "IfcDoor": {
        "Parent": "IfcBuiltElement",
        "Description": "The door is a built element that is predominately used to provide controlled access for people, goods, animals and vehicles. It includes constructions with hinged, pivoted, sliding, and additionally revolving and folding operations.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: construction for closing an opening, intended primarily for access with hinged, pivoted or sliding operation.  \n\n\n\nThe _IfcDoor_ defines a particular occurrence of a door inserted in the spatial context of a project. A door can:  \n\n* be inserted as a filler in an opening using the _IfcRelFillsElement_ relationship, then the _IfcDoor_ has an inverse attribute _FillsVoids_ provided;\n\n>NOTE&nbsp; View definitions or implementer agreements may restrict the relationship to only include one door into one opening.\n\n\n\n* be part of an element assembly, in general an _IfcCurtainWall_, using the _IfcRelAggregates_ relationship, then the _IfcDoor_ has an inverse attribute _Decomposes_ is provided;\n\n* be a \"free standing\" door, then the _IfcDoor_ has no inverse attributes _FillsVoids_ or _Decomposes_ provided.\n\n\n\nThis specification provides two main representations for door occurrences:  \n\n\n\n* _IfcDoor_ used for all occurrences of doors, that have a 'Profile' shape representation defined to which a set of shape parameters for lining and framing properties apply. Additionally it requires the provision of an _IfcDoorType_ that references one _IfcDoorLiningProperties_ and on to many _IfcDoorPanelProperties_;\n\n> NOTE&nbsp; The entity _IfcDoorStandardCase_ has been deprecated.\n\n* _IfcDoor_ used for all other occurrences of doors, particularly for doors having only 'Brep', or 'SurfaceModel' geometry without applying shape parameters.\n\n\n\n  \n\nThe actual parameters of the door and/or its shape are defined by the _IfcDoor_ as the occurrence definition (or project instance), or by the _IfcDoorType_ as the specific definition (or project type). The following parameters are given: \n\n\n\n* at the _IfcDoor_ or _IfcDoorStandardCase_ for occurrence specific parameters. The _IfcDoor_ specifies:\n\n    * the door width and height\n\n    * the door opening direction (by the y-axis of the _ObjectPlacement_)\n\n* at the _IfcDoorType_, to which the _IfcDoor_ is related by the inverse relationship _IsTypedBy_ pointing to _IfcRelDefinesByType_, for type parameters common to all occurrences of the same type.\n\n    * the operation type (single swing, double swing, revolving, etc.)\n\n    * the door hinge side (by using two different styles for right and left opening doors)\n\n    * the construction material type\n\n    * the particular attributes for the lining by the _IfcDoorLiningProperties_\n\n    * the particular attributes for the panels by the _IfcDoorPanelProperties_ \n\n\n\n> HISTORY&nbsp; New entity in IFC1.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The attributes _PredefinedType_ and _OperationType_ are added, the applicable type object has been changed to _IfcDoorType_.\n\n  \n\nThe geometric representation of _IfcDoor_ is given by the _IfcProductDefinitionShape_, allowing multiple geometric representations. The _IfcDoor_ may get its parameter and shape from the _IfcDoorType_. If an _IfcRepresentationMap_ (a block definition) is defined for the _IfcDoorType_, then the _IfcDoor_ inserts it through the _IfcMappedItem_.  \n\n\n\nThe geometric representation of _IfcDoor_ is defined using the following (potentially multiple) _IfcShapeRepresentation_'s for its _IfcProductDefinitionShape_:  \n\n\n\n* **Profile**: A 'Curve3D' consisting of a single losed curve defining the outer boundary of the door (lining). The door parametric representation uses this profile in order to apply the door lining and panel parameter. If not provided, the profile of the _IfcOpeningElement_ is taken.\n\n* **FootPrint**: A 'GeometricCurveSet', or 'Annotation2D' representation defining the 2D shape of the door \n\n* **Body**: A 'SweptSolid', 'SurfaceModel', or 'Brep' representation defining the 3D shape of the door.\n\n\n\nIn addition the parametric representation of a (limited) door shape is available by applying the parameters from _IfcDoorType_ referencing _IfcDoorLiningProperties_ and _IfcDoorPanelProperties_. The purpose of the parameter is described at those entities and below (door opening operation by door type).  \n\nThe overall size of the _IfcDoor_ to be used to apply the lining or panel parameter provided by the _IfcDoorType_ is determined by the IfcShapeRepresentation with the RepresentationIdentifier = 'Profile'.\n\n\n",
        "Psets": {
          "Pset_DoorCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\n\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorbtion values).\n"
              },
              "DurabilityRating": {
                "type": "string",
                "Description": "Durability against mechanical stress. It is given according to the national code or regulation.\n"
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).\n\nHere whether the transport element (in case of e.g., a lift) is designed to serve as a fire exit, e.g., for fire escape purposes.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "GlazingAreaFraction": {
                "type": "real",
                "Description": "Fraction of the glazing area relative to the total area of the filling element. \n\nIt shall be used, if the glazing area is not given separately for all panels within the filling element.\n"
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication whether this space (in case of e.g., a toilet) is designed to serve as an accessible space for handicapped people, e.g., for a public toilet (TRUE) or not (FALSE). This information is often used to declare the need for access for the disabled and for special design requirements of this space.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasDrive": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic drive to operate it (TRUE) or no drive (FALSE)\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HygrothermalRating": {
                "type": "string",
                "Description": "Resistence against hygrothermal impact from different temperatures and humidities inside and outside. It is given according to the national code or regulation.\n"
              },
              "Infiltration": {
                "type": "real",
                "Description": "Infiltration flowrate of outside air for the filler object based on the area of the filler object at a pressure level of 50 Pascals. It shall be used, if the length of all joints is unknown.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalLoadRating": {
                "type": "string",
                "Description": "Mechanical load rating for this object.\n\nIt is provided according to the national building code.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SecurityRating": {
                "type": "string",
                "Description": "Index based rating system indicating security level.\n\nIt is giving according to the national building code.\n"
              },
              "SelfClosing": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to close automatically after use (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SmokeStop": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to provide a smoke stop (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              },
              "WaterTightnessRating": {
                "type": "string",
                "Description": "Water tightness rating for this object.\n\nIt is provided according to the national building code.\n"
              },
              "WindLoadRating": {
                "type": "string",
                "Description": "Wind load resistance rating for this object.\n\nIt is provided according to the national building code.\n"
              }
            }
          },
          "Pset_DoorWindowGlazingType": {
            "Properties": {
              "FillGas": {
                "type": "string",
                "Description": "Name of the gas by which the gap between two glass layers is filled. It is given for information purposes only.\n"
              },
              "GlassColor": {
                "type": "string",
                "Description": "Color (tint) selection for this glazing. It is given for information purposes only.\n"
              },
              "GlassLayers": {
                "type": "number",
                "Description": "Number of glass layers within the frame. E.g. \"2\" for double glazing.\n"
              },
              "GlassThickness1": {
                "type": "real",
                "Description": "Thickness of the first (inner) glass layer.\n"
              },
              "GlassThickness2": {
                "type": "real",
                "Description": "Thickness of the second (intermediate or outer) glass layer.\n"
              },
              "GlassThickness3": {
                "type": "real",
                "Description": "Thickness of the third (outer) glass layer.\n"
              },
              "IsCoated": {
                "type": "boolean",
                "Description": "Indication whether the glass is coated with a material (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsLaminated": {
                "type": "boolean",
                "Description": "Indication whether the glass is layered with other materials (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTempered": {
                "type": "boolean",
                "Description": "Indication whether the glass is tempered (TRUE) or not (FALSE) .\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsWired": {
                "type": "boolean",
                "Description": "Indication whether the glass includes a contained wire mesh to prevent break-in (TRUE) or not (FALSE)\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShadingCoefficient": {
                "type": "real",
                "Description": "(SC): The measure of the ability of a glazing to transmit solar heat, relative to that ability for 3 mm (1/8-inch) clear, double-strength, single glass. Shading coefficient is being phased out in favor of the solar heat gain coefficient (SHGC), and is approximately equal to the SHGC multiplied by 1.15. The shading coefficient is expressed as a number without units between 0 and 1.\n"
              },
              "SolarAbsorption": {
                "type": "real",
                "Description": "(Asol) The ratio of incident solar radiation that is absorbed by a glazing system. It is the sum of the absorption distributed to the exterior (a) and to the interior (qi). Note the following equation Asol + Rsol + Tsol = 1\n"
              },
              "SolarHeatGainTransmittance": {
                "type": "real",
                "Description": "(SHGC): The ratio of incident solar radiation that contributes to the heat gain of the interior, it is the solar radiation that directly passes (Tsol or \u03c4e) plus the part of the absorbed radiation that is distributed to the interior (qi). The SHGC is refered to also as g-value (g = \u03c4e + qi).\n"
              },
              "SolarReflectance": {
                "type": "real",
                "Description": "(Rsol): The ratio of incident solar radiation that is reflected by a shading system (also named \u03c1e). Note the following equation Asol + Rsol + Tsol = 1\n"
              },
              "SolarTransmittance": {
                "type": "real",
                "Description": "(Tsol): The ratio of incident solar radiation that directly passes through a shading system (also named \u03c4e). Note the following equation Asol + Rsol + Tsol = 1\n"
              },
              "ThermalTransmittanceSummer": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of a material.\n\nSummer thermal transmittance coefficient of the glazing only, often referred to as (U-value).\n"
              },
              "ThermalTransmittanceWinter": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of a material.\n\nWinter thermal transmittance coefficient of the glazing only, often referred to as (U-value).\n"
              },
              "VisibleLightReflectance": {
                "type": "real",
                "Description": "Fraction of the visible light that is reflected by the glazing at normal incidence. It is a value without unit.\n"
              },
              "VisibleLightTransmittance": {
                "type": "real",
                "Description": "Fraction of the visible light that passes the shading system  at normal incidence. It is a value without unit.\n"
              }
            }
          },
          "Qto_DoorBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "q_area",
                "Description": "Area of the projection as viewed by an elevation view (for wall projections or as viewed by a ground floor view (for slab projections).\n"
              },
              "Height": {
                "type": "q_length",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Perimeter": {
                "type": "q_length",
                "Description": "Perimeter of the profile for calculating the surface area. For example measured in mm.\n"
              },
              "Width": {
                "type": "q_length",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "OverallHeight": {
                "type": "real",
                "Description": "Overall measure of the height, it reflects the Z Dimension of a bounding box, enclosing the body of the door opening. If omitted, the _OverallHeight_ should be taken from the geometric representation of the _IfcOpening_ in which the door is inserted.\n NOTE The body of the door might be taller then the door opening (e.g. in cases where the door lining includes a casing). In these cases the _OverallHeight_ shall still be given as the door opening height, and not as the total height of the door lining."
              },
              "OverallWidth": {
                "type": "real",
                "Description": "Overall measure of the width, it reflects the X Dimension of a bounding box, enclosing the body of theE door opening. If omitted, the _OverallWidth_ should be taken from the geometric representation of the _IfcOpening_ in which the door is inserted.\n NOTE The body of the door might be wider then the door opening (e.g. in cases where the door lining includes a casing). In these cases the _OverallWidth_ shall still be given as the door opening width, and not as the total width of the door lining."
              },
              "OperationType": {
                "values": [
                  "SINGLE_SWING_LEFT",
                  "SINGLE_SWING_RIGHT",
                  "DOUBLE_PANEL_SINGLE_SWING",
                  "DOUBLE_SWING_LEFT",
                  "DOUBLE_SWING_RIGHT",
                  "DOUBLE_PANEL_DOUBLE_SWING",
                  "DOUBLE_PANEL_SINGLE_SWING_OPPOSITE_LEFT",
                  "DOUBLE_PANEL_SINGLE_SWING_OPPOSITE_RIGHT",
                  "SLIDING_TO_LEFT",
                  "SLIDING_TO_RIGHT",
                  "DOUBLE_PANEL_SLIDING",
                  "FOLDING_TO_LEFT",
                  "FOLDING_TO_RIGHT",
                  "DOUBLE_PANEL_FOLDING",
                  "REVOLVING_VERTICAL",
                  "REVOLVING_HORIZONTAL",
                  "ROLLINGUP",
                  "SWING_FIXED_LEFT",
                  "SWING_FIXED_RIGHT",
                  "LIFTING_VERTICAL_LEFT",
                  "LIFTING_VERTICAL_RIGHT",
                  "DOUBLE_PANEL_LIFTING_VERTICAL",
                  "LIFTING_HORIZONTAL",
                  "USERDEFINED",
                  "NOTDEFINED"
                ],
                "type": "IfcDoorTypeOperationEnum",
                "Description": "Type defining the general layout and operation of the door type in terms of the partitioning of panels and panel operations."
              },
              "UserDefinedOperationType": {
                "type": "string",
                "Description": "Designator for the user defined operation type, shall only be provided, if the value of _OperationType_ is set to USERDEFINED."
              },
              "ParameterTakesPrecedence": {
                "type": "boolean",
                "Description": "The Boolean value reflects, whether the parameter given in the attached lining and panel properties exactly define the geometry (TRUE), or whether the attached style shape take precedence (FALSE). In the last case the parameter have only informative value. If not provided, no such information can be infered.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcDoorStandardCase": {
        "Parent": "IfcDoor",
        "Description": "The standard door, _IfcDoorStandardCase_, defines a door with certain constraints for the provision of operation types, opening directions, frame and lining parameters, and with certain constraints for the geometric representation. The _IfcDoorStandardCase_ handles all cases of doors, that:\n\n\n\n* are inserted into an opening, represented by _IfcOpeningElement_, using the _IfcRelFillsElement_ relationship;\n\n* have a local placement relative to this opening, and with the y-axis of the placement pointing into the opening direction;\n\n* have a profile geometry, represented by _IfcShapeRepresentation.RepresentationIdentifier_=\"Profile\" as a closed curve to which the door parameters apply;\n\n* have a reference to an _IfcDoorType_ to define the opening direction and the operation type (swinging, sliding, folding, etc.) of the door. The attribute _OperationType_ shall be provided and not being UNDEFINED, and the attribute _ParameterTakesPrecedence_ shall be \"TRUE\";\n\n* have an _IfcDoorLiningProperties_ and _IfcDoorPanelProperties_ instances included in the set of _HasPropertySets_ at _IfcDoorType_.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n**_Geometric Representations_**\n\n\n\nThe geometric representation of _IfcDoorStandardCase_ is defined using the following multiple shape representations for its definition:\n\n\n\n* **Profile**: a three-dimensional closed curve within a particular shape representation. The profile is used to apply the parameter of the parametric door representation. The profile around the edges of the opening is used to apply the door lining and door panel shape parameter.\n\n* **MappedRepresentation**: A SweptSolid, SurfaceModel, Brep or a CSG representation additionally defining the 3D shape of the standard door in addition to the parametric representation by applying the _IfcDoorLiningProperties_ and an the _IfcDoorPanelProperties_ to the 'Profile' representation.\n"
      },
      "IfcDoor.TRAPDOOR": {
        "Parent": "IfcDoor",
        "Description": "A special door that lies horizonally in a slab opening. Often used for accessing cellar or attic.\n\n\n"
      },
      "IfcDoor.DOOR": {
        "Parent": "IfcDoor",
        "Description": "A standard door usually within a wall opening, as a door panel in a curtain wall, or as a \"free standing\" door.\n\n\n"
      },
      "IfcDoor.BOOM_BARRIER": {
        "Parent": "IfcDoor",
        "Description": "A boom barrier (also known as a boom gate) is a bar, or pole pivoted to allow the boom to block vehicular or pedestrian access through a controlled point.\n\n\n"
      },
      "IfcDoor.GATE": {
        "Parent": "IfcDoor",
        "Description": "A gate is a point of entry into a space usually within an opening in a fence. Or as a \"free standing\" gate.\n\n\n"
      },
      "IfcDoor.TURNSTILE": {
        "Parent": "IfcDoor",
        "Description": "A mechanical gate consisting of revolving arms, allowing only one person at a time to pass through.\n\n\n",
        "Psets": {
          "Pset_DoorTypeTurnstile": {
            "Properties": {
              "SensorMode": {
                "type": "string",
                "Description": ""
              }
            }
          }
        }
      },
      "IfcMember": {
        "Parent": "IfcBuiltElement",
        "Description": "An _IfcMember_ is a structural member designed to carry loads between or beyond points of support. It is not required to be load bearing. The orientation of the member (being horizontal, vertical or sloped) is not relevant to its definition (in contrary to _IfcBeam_ and _IfcColumn_). An _IfcMember_ represents a linear structural element from an architectural or structural modeling point of view and shall be used if it cannot be expressed more specifically as either an _IfcBeam_ or an _IfcColumn_.\n\n\n\n> NOTE&nbsp; The representation of a member in a structural analysis model is provided by _IfcStructuralCurveMember_ being part of an _IfcStructuralAnalysisModel_.\n\n\n\nThe IFC specification provides two entities for member occurrences:\n\n\n\n* _IfcMemberStandardCase_ used for all occurrences of members, that have a profile defined that is swept along a directrix. The profile might be changed uniformly by a taper definition along the directrix. The profile parameter and its cardinal point of insertion can be fully described by the _IfcMaterialProfileSetUsage_. These beams are always represented geometricly by an 'Axis' and a 'SweptSolid' or 'AdvancedSweptSolid' shape representation (or by a 'Clipping' geometry based on the swept solid), if a 3D geometric representation is assigned. In addition they have to have a corresponding _IfcMaterialProfileSetUsage_ assigned. \n\n>> NOTE&nbsp; View definitions and implementer agreements may further constrain the applicable geometry types, such as by excluding tapering from an _IfcMemberStandardCase_ implementation. \n\n* _IfcMember_ used for all other occurrences of members, particularly for members with changing profile sizes along the extrusion, or members defined by non-linear extrusion, or members having only 'Brep', or 'SurfaceModel' geometry.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2 Addendum 1.\n\n\n",
        "Psets": {
          "Pset_MemberCommon": {
            "Properties": {
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Roll": {
                "type": "real",
                "Description": "Rotation against the longitudinal axis - relative to the global  X direction for all columns that are vertical in regard to the global coordinate system (Profile direction equals global X is Roll = 0.). For all non-vertical columns the following applies:  Roll is relative to the global Z direction f(Profile direction of non-vertical columns that equals global Z is Roll = 0.)\n\n\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only.\n\n\n\nNote: new property in IFC4\n"
              },
              "Slope": {
                "type": "real",
                "Description": "Sloping angle of the object  - relative to horizontal (0.0 degrees). \n\nActual maximum slope for the passageway according to the current design.\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              },
              "Span": {
                "type": "real",
                "Description": "Clear span for this object.\n\n\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence. For geometry editing applications, like CAD: this value should be write-only.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          },
          "Qto_MemberBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the profile. For example measured in mm2. If given, the value of the cross section area shall be greater than zero.\n"
              },
              "GrossSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the footing, normally generated as perimeter \\* length + 2 \\* cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately.\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetSurfaceArea": {
                "type": "q_area",
                "Description": "Net surface area of the column, normally generated as perimeter \\* length + 2 \\* cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "OuterSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the extruded surfaces of the footing (not taking into account the end cap areas), normally generated as perimeter \\* length.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          }
        }
      },
      "IfcMemberStandardCase": {
        "Parent": "IfcMember",
        "Description": "The standard member, _IfcMemberStandardCase_, defines a member with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The _IfcMemberStandardCase_ handles all cases of members, that:\n\n\n\n* have a reference to the _IfcMaterialProfileSetUsage_ defining the material profile association of the member with the cardinal point of its insertion relative to the local placement.\n\n* are based on a sweep of a planar profile, or set of profiles, as defined by the _IfcMaterialProfileSet_\n\n* have an 'Axis' shape representation with constraints provided below in the geometry use definition\n\n* have a 'Body' shape representation with constraints provided below in the geometry use definition\n\n* have a start profile, or set of profiles, that is swept along the directrix and might be changed uniformly by a taper definition\n\n* are consistent in using the correct cardinal point offset of the profile as compared to the 'Axis' and 'Body' shape representation\n\n* are extruded perpendicular to the profile definition plane\n\n\n\n> NOTE&nbsp; View definitions and implementer agreements may further constrain the applicable geometry types, such as by excluding tapering from an _IfcMemberStandardCase_ implementation.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n## Formal Propositions\n\n\n\n### HasMaterialProfileSetUsage\n\nA valid instance of _IfcMemberStandardCase_ relies on the provision of an _IfcMaterialProfileSetUsage_.\n"
      },
      "IfcMember.STRUT": {
        "Parent": "IfcMember",
        "Description": ""
      },
      "IfcMember.STAY_CABLE": {
        "Parent": "IfcMember",
        "Description": "A sloped element suspending a structure (such as bridge deck) from a pylon.\n\n\n"
      },
      "IfcMember.POST": {
        "Parent": "IfcMember",
        "Description": ""
      },
      "IfcMember.ARCH_SEGMENT": {
        "Parent": "IfcMember",
        "Description": "Individual segment of an arch structure.\n\n\n"
      },
      "IfcMember.STIFFENING_RIB": {
        "Parent": "IfcMember",
        "Description": "A linear element added to a flange or a web plate of a girder for local stiffening.\n\n\n"
      },
      "IfcMember.STRUCTURALCABLE": {
        "Parent": "IfcMember",
        "Description": "A linear cable element used to secure or stabilise a structure by resisting lateral and longitudinal loading  through tension only, but cannot resist compression. usually formed of a flexible cable or wire.\n\n\n"
      },
      "IfcMember.STUD": {
        "Parent": "IfcMember",
        "Description": "Vertical element in wall framing.\n\n\n"
      },
      "IfcMember.RAFTER": {
        "Parent": "IfcMember",
        "Description": ""
      },
      "IfcMember.BRACE": {
        "Parent": "IfcMember",
        "Description": "A linear element (usually sloped) often used for bracing of a girder or truss.\n\n\n"
      },
      "IfcMember.PLATE": {
        "Parent": "IfcMember",
        "Description": "A&nbsp;linear continuous horizontal element in wall framing, such as a head piece or a sole plate.\n\n\n"
      },
      "IfcMember.TIEBAR": {
        "Parent": "IfcMember",
        "Description": "A linear bar element used to secure or stabilise a structure by resisting lateral and longitudinal loading through tension and or compression. usually formed by a solid bar.\n\n\n"
      },
      "IfcMember.MEMBER": {
        "Parent": "IfcMember",
        "Description": "A linear element within a girder or truss with no further meaning.\n\n\n"
      },
      "IfcMember.COLLAR": {
        "Parent": "IfcMember",
        "Description": "A linear element (usually used horizontally) within a roof structure to connect rafters and posts.\n\n\n"
      },
      "IfcMember.STRINGER": {
        "Parent": "IfcMember",
        "Description": "A linear element used to support stair or ramp flights, usually used with slope.\n\n\n"
      },
      "IfcMember.SUSPENSION_CABLE": {
        "Parent": "IfcMember",
        "Description": "A suspended element, typically comprising steel wire, sheath, etc.\n\n\n"
      },
      "IfcMember.CHORD": {
        "Parent": "IfcMember",
        "Description": "Upper or lower longitudinal member of a truss, used horizontally or sloped.\n\n\n"
      },
      "IfcMember.PURLIN": {
        "Parent": "IfcMember",
        "Description": "A linear element (usually used horizontally) within a roof structure to support rafters.\n\n\n"
      },
      "IfcMember.MULLION": {
        "Parent": "IfcMember",
        "Description": "A linear element within a curtain wall system to connect two (or more) panels.\n\n\n"
      },
      "IfcMember.SUSPENDER": {
        "Parent": "IfcMember",
        "Description": "A vertical element suspending a structure (such as bridge deck) from a suspension cable or an arch.\n\n\n"
      },
      "IfcPlate": {
        "Parent": "IfcBuiltElement",
        "Description": "An _IfcPlate_ is a planar and often flat part with constant thickness. A plate may carry loads between or beyond points of support, or provide stiffening. The location of the plate (being horizontal, vertical or sloped) is not relevant to its definition (in contrary to _IfcWall_ and _IfcSlab_ (as floor slab)).\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: thin, rigid, flat, metal product, of a thickness greater than that of a sheet.\n\n\n\nPlates are\u00a0normally made of steel, other metallic material, or by glass panels. However the definition of _IfcPlate_ is material independent and specific material information shall be handled by using _IfcAssociatesMaterial_ to assign a material specification to the _IfcPlate_.\n\n\n\n> NOTE&nbsp;\u00a0Although not necessarily, plates are often add-on parts. This is represented by the _IfcRelAggregates_ decomposition mechanism used to aggregate parts, such as _IfcPlate_, into a container element such as _IfcElementAssembly_ or _IfcCurtainWall_.\n\n\n\n> NOTE&nbsp; The representation of a plate in a structural analysis model is provided by _IfcStructuralSurfaceMember_ being part of an _IfcStructuralAnalysisModel_.\n\n\n\nAn instance _IfcPlate_ should preferably get its geometric representation and material assignment through the type definition by _IfcPlateType_ assigned using the _IfcRelDefinesByType_ relationship. This allows identical plates in a construction to be represented by the same instance of _IfcPlateType_.\n\n\n\nA plate may have openings, such as voids or recesses. They are defined by an _IfcOpeningElement_ attached to the plate using the inverse relationship _HasOpenings_ pointing to _IfcRelVoidsElement_. The position number of a plate as often used in steel construction is assigned through the attribute _IfcElement.Tag_\n\n\n\nThe IFC specification provides two entities for plate occurrences:\n\n\n\n* _IfcPlateStandardCase_ used for all occurrences of plates, that are prismatic and where the thickness parameter can be fully described by the _IfcMaterialLayerSetUsage_. These plates are always represented geometrically by a 'SweptSolid' geometry (or by a 'Clipping' geometry based on 'SweptSolid'), if a 3D geometric representation is assigned. In addition they have to have a corresponding _IfcMaterialLayerSetUsage_ assigned.\n\n* _IfcPlate_ used for all other occurrences of plates, particularly for plates with changing thickness, or plates with non planar surfaces, and plates having only 'SurfaceModel' or 'Brep' geometry.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2\n\n\n",
        "Psets": {
          "Pset_PlateCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\n\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorbtion values).\n"
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          },
          "Qto_PlateBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "q_area",
                "Description": "Total gross area of the outer surface of the roof. It is the sum of all roof slab gross areas. Roof openings, like sky windows and other openings and cut-outs are not taken into account.\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NetArea": {
                "type": "q_area",
                "Description": "Total area of the ramp flight (not the projected area). Openings and recesses are taken into account by subtraction, projections by addition. Only given, if the ramp flight is prismatic.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Perimeter": {
                "type": "q_length",
                "Description": "Perimeter of the profile for calculating the surface area. For example measured in mm.\n"
              },
              "Width": {
                "type": "q_length",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          }
        }
      },
      "IfcPlateStandardCase": {
        "Parent": "IfcPlate",
        "Description": "The standard plate, _IfcPlateStandardCase_, defines a plate with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The _IfcPlateStandardCase_ handles all cases of plates, that:\n\n\n\n* have a reference to the _IfcMaterialLayerSetUsage_ defining the material layers of the plate with thicknesses\n\n* are based on an extrusion of a planar surface as defined by the plate profile\n\n* have a constant thickness along the extrusion direction\n\n* are consistent in using the correct material layer set offset to the base planar surface in regard to the shape representation\n\n* are extruded perpendicular to the plane surface\n\n\n\nThe definitions of plate openings and niches are the same as given at the supertype _IfcPlate_. The same agreements to the special types of plates, as defined in the _PredefinedType_ attribute apply as well.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n## Formal Propositions\n\n\n\n### HasMaterialLayerSetUsage\n\nA valid instance of _IfcPlateStandardCase_ relies on the provision of an _IfcMaterialLayerSetUsage_.\n"
      },
      "IfcPlate.STIFFENER_PLATE": {
        "Parent": "IfcPlate",
        "Description": ""
      },
      "IfcPlate.FLANGE_PLATE": {
        "Parent": "IfcPlate",
        "Description": ""
      },
      "IfcPlate.BASE_PLATE": {
        "Parent": "IfcPlate",
        "Description": ""
      },
      "IfcPlate.CURTAIN_PANEL": {
        "Parent": "IfcPlate",
        "Description": ""
      },
      "IfcPlate.SHEET": {
        "Parent": "IfcPlate",
        "Description": "A planar, flat and thin element, comes usually as metal sheet, and is often used as an additonal part within an assembly.\n\n\n"
      },
      "IfcPlate.GUSSET_PLATE": {
        "Parent": "IfcPlate",
        "Description": "a plate or bracket for strengthening an angle in framework (as in a building or bridge).\n\n\n"
      },
      "IfcPlate.SPLICE_PLATE": {
        "Parent": "IfcPlate",
        "Description": "A plate connecting two members joined at ends.\n\n\n"
      },
      "IfcPlate.COVER_PLATE": {
        "Parent": "IfcPlate",
        "Description": "A plate (underneath or above) a flange to provide additional load capacity.\n\n\n"
      },
      "IfcPlate.WEB_PLATE": {
        "Parent": "IfcPlate",
        "Description": "A plate connecting flange plates in linear members having box or I-profile.\n\n\n"
      },
      "IfcRailing": {
        "Parent": "IfcBuiltElement",
        "Description": "The railing is a frame assembly adjacent to human or vehicle circulation spaces and at some space boundaries where it is used in lieu of walls or to complement walls. Designed as an optional physical support, or to prevent injury or damage, either by falling or collision.\n\n \n\n> HISTORY&nbsp; New entity in IFC2.0\n\n\n",
        "Psets": {
          "Pset_RailingCommon": {
            "Properties": {
              "Diameter": {
                "type": "real",
                "Description": "Diameter of the object. It is the diameter of the handrail of the railing.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n\nHere the diameter of the hand or guardrail within the railing.\n"
              },
              "Height": {
                "type": "real",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_RailingBaseQuantities": {
            "Properties": {
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          }
        }
      },
      "IfcRailing.BALUSTRADE": {
        "Parent": "IfcRailing",
        "Description": "Similar to the definitions of a guardrail except the location is at the edge of a floor, rather then a stair or ramp. Examples are balustrates at roof-tops or balconies, or along a bridge or on top of a retaining wall.\n\n\n"
      },
      "IfcRailing.HANDRAIL": {
        "Parent": "IfcRailing",
        "Description": ""
      },
      "IfcRailing.GUARDRAIL": {
        "Parent": "IfcRailing",
        "Description": "",
        "Psets": {
          "Pset_RoadGuardElement": {
            "Properties": {
              "IsMoveable": {
                "type": "boolean",
                "Description": "True if element is moveable.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTransition": {
                "type": "boolean",
                "Description": "True if element is a transition. See class Transition.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTerminal": {
                "type": "boolean",
                "Description": "True if element is a terminal. See class Terminal.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "TerminalType": {
                "type": "string",
                "Description": "Specifies the kind of terminal if IsTerminal is true.\n"
              }
            }
          }
        }
      },
      "IfcRailing.FENCE": {
        "Parent": "IfcRailing",
        "Description": ""
      },
      "IfcRamp": {
        "Parent": "IfcBuiltElement",
        "Description": "A ramp is a vertical passageway which provides a human or vehicle circulation link between one floor level and another floor level at a different elevation. It may include a landing as an intermediate floor slab. A ramp normally does not include steps.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: Inclined way or floor joining two surfaces at different levels.\n\n\n\nThe _IfcRamp_ shall either be represented:\n\n\n\n* as a ramp assembly that aggregates all parts(ramp flight, landing, etc.) with own shape representations, or\n\n* as a single ramp without decomposition including all shape representations directly at the ramp entity.\n\n\n\n> NOTE&nbsp; In case of an _IfcRamp_ being the assembly of all parts of the ramp the aggregation is handled by the _IfcRelAggregates_ relationship, relating an _IfcRamp_ with the related _IfcRampFlight_ and landings, _IfcSlab_ with PredefinedType=LANDING. _IfcRailing_'s belonging to the ramp may also be included into the aggregation.\n\n\n\n> NOTE&nbsp; Model View Definitions and implementer agreements may restrict the _IfcRamp_ being an assembly to not have an independent shape representation, but to always require that the decomposed parts have a shape representation. In this case, at least the 'Body' geometric representations shall not be provided directly at _IfcRamp_ if it is an assembly. The 'Body' geometric representation of the _IfcRamp_ is then the sum of the 'Body' shape representation of the parts within the decomposition structure.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE Attribute _ShapeType_ renamed to _PredefinedType_\n\n\n",
        "Psets": {
          "Pset_RampCommon": {
            "Properties": {
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).\n\nHere whether the transport element (in case of e.g., a lift) is designed to serve as a fire exit, e.g., for fire escape purposes.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication whether this space (in case of e.g., a toilet) is designed to serve as an accessible space for handicapped people, e.g., for a public toilet (TRUE) or not (FALSE). This information is often used to declare the need for access for the disabled and for special design requirements of this space.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasNonSkidSurface": {
                "type": "boolean",
                "Description": "Indication whether the surface finish is designed to prevent slippery (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "RequiredHeadroom": {
                "type": "real",
                "Description": "Required headroom clearance for the passageway according to the applicable building code or additional requirements.\n"
              },
              "RequiredSlope": {
                "type": "real",
                "Description": "Required sloping angle of the object  - relative to horizontal (0.0 degrees).\n\nRequired maximum slope for the passageway according to the applicable building code or additional requirements.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          }
        }
      },
      "IfcRampFlight": {
        "Parent": "IfcBuiltElement",
        "Description": "A ramp comprises a single inclined segment, or several inclined segments that are connected by a horizontal segment, refered to as a landing. A ramp flight is the single inclined segment and part of the ramp construction. In case of single flight ramps, the ramp flight and the ramp are identical.\n\n\n\n> NOTE&nbsp; A single flight ramp is represented by an _IfcRamp_ instance without using aggregation and by utilizing the product shape representation directly at _IfcRamp_.\n\n\n\nAn _IfcRampFlight_ is an aggregated part of an _IfcRamp_ realized through the _IfcRelAggregates_ relationship, the ramp flight is therefore included in the set of _IfcRelAggregates.RelatedObjects_.\n\n\n\nAn _IfcRampFlight_ connects the floor slab of zero to two different storeys (or partial storeys or landings) within a building. The connection relationship between the _IfcRampFlight_ and the _IfcSlab_ can be expressed using the _IfcRelConnectsElements_ relationship.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n",
        "Psets": {
          "Pset_RampFlightCommon": {
            "Properties": {
              "ClearWidth": {
                "type": "real",
                "Description": "Actual clear width measured as the clear space for accessibility and egress; it is a measured distance betwen the two handrails or the wall and a handrail on a ramp.\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              },
              "CounterSlope": {
                "type": "real",
                "Description": "Sloping angle of the object, measured perpendicular to the slope  - relative to horizontal (0.0 degrees). \n\nActual maximum slope for the passageway measured perpendicular to the direction of travel according to the current design. The shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence. \n\nNote: new property in IFC4.\n"
              },
              "Headroom": {
                "type": "real",
                "Description": "Actual headroom clearance for the passageway according to the current design. \n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Slope": {
                "type": "real",
                "Description": "Sloping angle of the object  - relative to horizontal (0.0 degrees). \n\nActual maximum slope for the passageway according to the current design.\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_RampFlightBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "q_area",
                "Description": "Total gross area of the outer surface of the roof. It is the sum of all roof slab gross areas. Roof openings, like sky windows and other openings and cut-outs are not taken into account.\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetArea": {
                "type": "q_area",
                "Description": "Total area of the ramp flight (not the projected area). Openings and recesses are taken into account by subtraction, projections by addition. Only given, if the ramp flight is prismatic.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "Width": {
                "type": "q_length",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          }
        }
      },
      "IfcRampFlight.STRAIGHT": {
        "Parent": "IfcRampFlight",
        "Description": ""
      },
      "IfcRampFlight.SPIRAL": {
        "Parent": "IfcRampFlight",
        "Description": "A ramp flight with a circular or elliptic walking line.\n\n\n"
      },
      "IfcRamp.SPIRAL_RAMP": {
        "Parent": "IfcRamp",
        "Description": "A ramp constructed around a circular or elliptical well without newels and\n\nlandings.\n\n\n"
      },
      "IfcRamp.TWO_QUARTER_TURN_RAMP": {
        "Parent": "IfcRamp",
        "Description": "A ramp making a 180&deg; turn, consisting of three straight flights connected\n\nby two quarterspace landings. The direction of the turn is determined by the walking line.\n\n\n"
      },
      "IfcRamp.QUARTER_TURN_RAMP": {
        "Parent": "IfcRamp",
        "Description": "A ramp making a 90&deg; turn, consisting of two straight flights connected by\n\na quarterspace landing. The direction of the turn is determined by the walking line.\n\n\n"
      },
      "IfcRamp.HALF_TURN_RAMP": {
        "Parent": "IfcRamp",
        "Description": "A ramp making a 180&deg; turn, consisting of two straight flights connected\n\nby a halfspace landing. The orientation of the turn is determined by the walking line.\n\n\n"
      },
      "IfcRamp.STRAIGHT_RUN_RAMP": {
        "Parent": "IfcRamp",
        "Description": "A ramp - which is a sloping floor, walk, or roadway - connecting two levels.\n\nThe straight ramp consists of one straight flight without turns or winders.\n\n\n"
      },
      "IfcRamp.TWO_STRAIGHT_RUN_RAMP": {
        "Parent": "IfcRamp",
        "Description": "A straight ramp consisting of two straight flights without turns but with one\n\nlanding.\n\n\n"
      },
      "IfcRoof": {
        "Parent": "IfcBuiltElement",
        "Description": "A roof is the covering of the top part of a building, it protects the building against the effects of wheather.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: construction enclosing the building from above.\n\n\n\nThe _IfcRoof_ shall either be represented:\n\n\n\n* as a roof assembly that aggregates all parts (slabs, rafters and purlins, or other included roofs, such as dormers) with own shape representaion, or\n\n* as a single roof without decomposition including all shape representations directly at the roof entity.\n\n\n\n> NOTE&nbsp; In case of an _IfcRoof_ being the assembly of all parts of the roof the aggregation is handled by the _IfcRelAggregates_ relationship, relating an _IfcRoof_ with the related roof elements, like slabs (represented by _IfcSlab_), rafters and purlins (represented by _IfcBeam_), or other included roofs, such as dormers (represented by _IfcRoof_).\n\n\n\n> NOTE&nbsp; Model View Definitions and implementer agreements may restrict the _IfcRoof_ being an assembly to not have an independent shape representation, but to always require that the decomposed parts have a shape representation. In this case, at least the 'Body' geometric representations shall not be provided directly at _IfcRoof_ if it is an assembly. The 'Body' geometric representation of the _IfcRoof_ is then the sum of the 'Body' shape representation of the parts within the decomposition structure.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _ShapeType_ renamed to _PredefinedType_.\n\n\n",
        "Psets": {
          "Pset_RoofCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\n\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorbtion values).\n"
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          },
          "Qto_RoofBaseQuantities": {
            "Properties": {
              "GrossArea": {
                "type": "q_area",
                "Description": "Total gross area of the outer surface of the roof. It is the sum of all roof slab gross areas. Roof openings, like sky windows and other openings and cut-outs are not taken into account.\n"
              },
              "NetArea": {
                "type": "q_area",
                "Description": "Total area of the ramp flight (not the projected area). Openings and recesses are taken into account by subtraction, projections by addition. Only given, if the ramp flight is prismatic.\n"
              },
              "ProjectedArea": {
                "type": "q_area",
                "Description": "Total gross area of the outer surfaces of the roof, projected tp the ground. It is the sum of all projected roof slab gross areas. Roof openings, like sky windows and other openings and cut-outs are not taken into account.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          }
        }
      },
      "IfcRoof.GAMBREL_ROOF": {
        "Parent": "IfcRoof",
        "Description": "A roof sloping downward in two parts from a central ridge, so as to form a\n\ngable at each end.\n\n\n"
      },
      "IfcRoof.SHED_ROOF": {
        "Parent": "IfcRoof",
        "Description": "A roof having a single slope.\n\n\n"
      },
      "IfcRoof.HIPPED_GABLE_ROOF": {
        "Parent": "IfcRoof",
        "Description": "A roof having a hipped end truncating a gable.\n\n\n"
      },
      "IfcRoof.MANSARD_ROOF": {
        "Parent": "IfcRoof",
        "Description": ""
      },
      "IfcRoof.PAVILION_ROOF": {
        "Parent": "IfcRoof",
        "Description": "A pyramidal hip roof.\n\n\n"
      },
      "IfcRoof.FLAT_ROOF": {
        "Parent": "IfcRoof",
        "Description": "A roof having no slope, or one with only a slight pitch so as to drain\n\nrainwater.\n\n\n"
      },
      "IfcRoof.DOME_ROOF": {
        "Parent": "IfcRoof",
        "Description": "A hemispherical hip roof.\n\n\n"
      },
      "IfcRoof.GABLE_ROOF": {
        "Parent": "IfcRoof",
        "Description": ""
      },
      "IfcRoof.BARREL_ROOF": {
        "Parent": "IfcRoof",
        "Description": "A roof or ceiling having a semicylindrical form.\n\n\n"
      },
      "IfcRoof.BUTTERFLY_ROOF": {
        "Parent": "IfcRoof",
        "Description": "A roof having two slopes, each descending inward from the eaves.\n\n\n"
      },
      "IfcRoof.RAINBOW_ROOF": {
        "Parent": "IfcRoof",
        "Description": "A gable roof in the form of a broad Gothic arch, with gently sloping convex\n\nsurfaces.\n\n\n"
      },
      "IfcRoof.FREEFORM": {
        "Parent": "IfcRoof",
        "Description": "Free form roof.\n\n\n"
      },
      "IfcRoof.HIP_ROOF": {
        "Parent": "IfcRoof",
        "Description": "A roof having sloping ends and sides meeting at an inclined projecting\n\nangle.\n\n\n"
      },
      "IfcShadingDevice": {
        "Parent": "IfcBuiltElement",
        "Description": "Shading devices are purpose built devices to protect from the sunlight, from natural light, or screening them from view. Shading devices can form part of the facade or can be mounted inside the building, they can be fixed or operable.\n\n\n\n> NOTE&nbsp; Also other building elements such as protruding slabs or balconies can act as shading devices. Those elements however have another primary purpose and are defined as _IfcSlab_ or by other subtypes of _IfcBuildingElement_.\n\n\n\n> HISTORY&nbsp; New entity in IFC4\n\n\n",
        "Psets": {
          "Pset_ShadingDevicePHistory": {
            "Properties": {
              "Azimuth": {
                "type": "real",
                "Description": "The azimuth of the outward normal for the outward or upward facing surface.\n"
              },
              "TiltAngle": {
                "type": "real",
                "Description": "The angle of tilt defined in the plane perpendicular to the extrusion axis (X-Axis of the local placement). The angle shall be measured from the orientation of the Z-Axis in the local placement.\n"
              }
            }
          },
          "Pset_ShadingDeviceCommon": {
            "Properties": {
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalOperated": {
                "type": "boolean",
                "Description": "Indication whether the element is operated machanically (TRUE) or not, i.e. manually  (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Roughness": {
                "type": "string",
                "Description": "A measure of the vertical deviations of the surface.\n"
              },
              "ShadingDeviceType": {
                "type": "string",
                "Description": "Specifies the type of shading device.\n"
              },
              "SolarReflectance": {
                "type": "real",
                "Description": "(Rsol): The ratio of incident solar radiation that is reflected by a shading system (also named \u03c1e). Note the following equation Asol + Rsol + Tsol = 1\n"
              },
              "SolarTransmittance": {
                "type": "real",
                "Description": "(Tsol): The ratio of incident solar radiation that directly passes through a shading system (also named \u03c4e). Note the following equation Asol + Rsol + Tsol = 1\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "SurfaceColor": {
                "type": "string",
                "Description": "The color of the surface.\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              },
              "VisibleLightReflectance": {
                "type": "real",
                "Description": "Fraction of the visible light that is reflected by the glazing at normal incidence. It is a value without unit.\n"
              },
              "VisibleLightTransmittance": {
                "type": "real",
                "Description": "Fraction of the visible light that passes the shading system  at normal incidence. It is a value without unit.\n"
              }
            }
          }
        }
      },
      "IfcShadingDevice.SHUTTER": {
        "Parent": "IfcShadingDevice",
        "Description": ""
      },
      "IfcShadingDevice.AWNING": {
        "Parent": "IfcShadingDevice",
        "Description": ""
      },
      "IfcShadingDevice.JALOUSIE": {
        "Parent": "IfcShadingDevice",
        "Description": ""
      },
      "IfcSlab": {
        "Parent": "IfcBuiltElement",
        "Description": "A slab is a component of the construction that may enclose a space vertically. The slab may provide the lower support (floor) or upper construction (roof slab) in any space in a building.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1  \n\n> thick, flat or shaped component, usually larger than 300 mm square, used to form a covering or projecting from a building.\n\n\n\nOnly the core or constructional part of this construction is considered to be a slab. The upper finish (flooring, roofing) and the lower finish (ceiling, suspended ceiling) are considered to be coverings. A special type of slab is the landing, described as a floor section to which one or more stair flights or ramp flights connect.\n\n\n\n> NOTE&nbsp; There is a representation of slabs for structural analysis provided by a proper subtype of _IfcStructuralMember_ being part of the _IfcStructuralAnalysisModel_.\n\n\n\n> NOTE&nbsp;\u00a0An arbitrary planar element to which this semantic information is not applicable or irrelevant shall be modeled as _IfcPlate_.\n\n\n\nA slab may have openings, such as floor openings, or recesses. They are defined by an _IfcOpeningElement_ attached to the slab using the inverse relationship _HasOpenings_ pointing to _IfcRelVoidsElement_.\n\n\n\nThere are three entities for slab occurrences:\n\n\n\n* _IfcSlabStandardCase_ used for all occurrences of slabs, that are prismatic and where the thickness parameter can be fully described by the _IfcMaterialLayerSetUsage_. These slabs are always represented geometrically by a 'SweptSolid' geometry (or by a 'Clipping' geometry based on 'SweptSolid'), if a 3D geometric representation is assigned. In addition they have to have a corresponding _IfcMaterialLayerSetUsage_ assigned.\n\n* _IfcSlabElementedCase_ used for occurrences of slabs which are aggregated from subordinate elements, following specific decomposition rules expressed by the mandatory use of _IfcRelAggregates_ relationship.\n\n* _IfcSlab_ used for all other occurrences of slabs, particularly for slabs with changing thickness, or slabs with non planar surfaces, and slabs having only 'SweptSolid' or 'Brep' geometry.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0; it is a merger of the two previous entities IfcFloor, IfcRoofSlab, introduced in IFC1.0\n\n\n",
        "Psets": {
          "Pset_SlabCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\n\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorbtion values).\n"
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Compartmentation": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to serve as a fire compartmentation (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "PitchAngle": {
                "type": "real",
                "Description": "Angle of the slab to the horizontal when used as a component for the roof (specified as 0 degrees or not asserted for cases where the slab is not used as a roof component).      \n\n\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.  For geometry editing applications, like CAD: this value should be write-only.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\n\nIt is given according to the national building code that governs the fire behaviour for materials.\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          },
          "Qto_SlabBaseQuantities": {
            "Properties": {
              "Depth": {
                "type": "q_length",
                "Description": "The nominal depth of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "GrossArea": {
                "type": "q_area",
                "Description": "Total gross area of the outer surface of the roof. It is the sum of all roof slab gross areas. Roof openings, like sky windows and other openings and cut-outs are not taken into account.\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetArea": {
                "type": "q_area",
                "Description": "Total area of the ramp flight (not the projected area). Openings and recesses are taken into account by subtraction, projections by addition. Only given, if the ramp flight is prismatic.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Perimeter": {
                "type": "q_length",
                "Description": "Perimeter of the profile for calculating the surface area. For example measured in mm.\n"
              },
              "Width": {
                "type": "q_length",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastSlab": {
            "Properties": {
              "AngleBetweenComponentAxes": {
                "type": "real",
                "Description": "The angle between the axes of each pair of components.\n"
              },
              "AngleToFirstAxis": {
                "type": "real",
                "Description": "The angle of rotation of the axis of the first component relative to the \u2018West\u2019 edge of the slab.\n"
              },
              "DistanceBetweenComponentAxes": {
                "type": "real",
                "Description": "The distance between the axes of the components, measured along the \u2018South\u2019 edge of the slab.\n"
              },
              "EdgeDistanceToFirstAxis": {
                "type": "real",
                "Description": "The distance from the left (\u2018West\u2019) edge of the slab (in the direction of span of the components) to the axis of the first component.\n"
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NominalToppingThickness": {
                "type": "real",
                "Description": "The nominal thickness of the topping.\n"
              },
              "ToppingType": {
                "type": "string",
                "Description": "Defines if a topping is applied and what kind. Values are \u201cFull topping\u201d, \u201cPerimeter Wash\u201d, \u201cNone\u201d\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfSlab": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The description of the air side system.\n"
              },
              "LongInsideCenterLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside center lower bar.\n"
              },
              "LongInsideCenterTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside center top bar.\n"
              },
              "LongInsideEndLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside end lower bar.\n"
              },
              "LongInsideEndTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long inside end top bar.\n"
              },
              "LongOutsideLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long outside lower bar.\n"
              },
              "LongOutsideTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the long outside top bar.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "ShortInsideCenterLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside center lower bar.\n"
              },
              "ShortInsideCenterTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside center top bar.\n"
              },
              "ShortInsideEndLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside end lower bar.\n"
              },
              "ShortInsideEndTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short inside end top bar.\n"
              },
              "ShortOutsideLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short outside lower bar.\n"
              },
              "ShortOutsideTopBarPitch": {
                "type": "real",
                "Description": "The pitch length of the short outside top bar.\n"
              }
            }
          }
        }
      },
      "IfcSlabElementedCase": {
        "Parent": "IfcSlab",
        "Description": "The _IfcSlabElementedCase_ defines a slab with certain constraints for the provision of its components. The _IfcSlabElementedCase_ handles all cases of slabs, that are decomposed into parts:\n\n\n\n* having components being assigned to the _IfcSlabElementedCase_ using the _IfcRelAggregates_ relationship accessible by the inverse relationship _IsDecomposedBy_.\n\n* applying the constraint that the parts within the decomposition shall be of type _IfcElementAssembly_, _IfcBeam_, _IfcMember_, _IfcPlate_, _IfcBuildingElementPart_ or _IfcBuildingElementProxy_.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n{ .use-head}\n\nVoiding Use Definition:\n\n\n\nAs shown in Figure 1, openings within the composite slab are directly assigned to _IfcSlabElementedCase_ using _IfcRelVoidsElement_ pointing to _IfcOpeningElement_ and apply to all aggregated parts. If individual parts have cutting and other voiding features, then the decomposed parts have a separate voiding relationship _IfcRelVoidsElement_ pointing to _IfcVoidingFeature_.\n\n\n\n![\"voiding\"](../../../../figures/ifcslabelementedcase_fig01.png \"Figure 1 &mdash; Slab elemented voiding\")\n\n\n\n## Formal Propositions\n\n\n\n### HasDecomposition\n\nA valid instance of _IfcSlabElementedCase_ has to have parts in a decomposition hierarchy.\n"
      },
      "IfcSlabStandardCase": {
        "Parent": "IfcSlab",
        "Description": "The standard slab, _IfcSlabStandardCase_, defines a slab with certain constraints for the provision of material usage, parameters and with certain constraints for the geometric representation. The _IfcSlabStandardCase_ handles all cases of slabs, that:\n\n\n\n* have a reference to the _IfcMaterialLayerSetUsage_ defining the material layers of the slab with thicknesses\n\n* are based on an extrusion of a planar surface as defined by the slab profile\n\n* have a constant thickness along the extrusion direction\n\n* are consistent in using the correct material layer set offset to the base planar surface in regard to the shape representation\n\n* are extruded either perpendicular or slanted to the plane surface\n\n\n\nThe definitions of slab openings and niches are the same as given at the supertype _IfcSlab_. The same agreements to the special types of slabs, as defined in the _PredefinedType_ attribute apply as well.\n\n\n\n> NOTE&nbsp; If the _IfcSlabStandardCase_ is of type Landing and is used within an _IfcStair_ or _IfcRamp_, the special agreements to handle stair and ramp geometry will also affect the geometric representation of the _IfcSlabStandardCase_.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n## Formal Propositions\n\n\n\n### HasMaterialLayerSetusage\n\nA valid instance of _IfcSlabStandardCase_ relies on the provision of an _IfcMaterialLayerSetUsage_.\n"
      },
      "IfcSlab.TRACKSLAB": {
        "Parent": "IfcSlab",
        "Description": "A track slab is a reinforced concrete slab or prestressed reinforced concrete slab, which is a main element of slab track. It can be prefabricated or cast on site and may have sleepers embedded.\n\n\n"
      },
      "IfcSlab.FLOOR": {
        "Parent": "IfcSlab",
        "Description": ""
      },
      "IfcSlab.LANDING": {
        "Parent": "IfcSlab",
        "Description": "The slab is used to represent a landing within a stair or ramp.\n\n\n"
      },
      "IfcSlab.APPROACH_SLAB": {
        "Parent": "IfcSlab",
        "Description": "Iis part of bridge abutment providing transition from embankment to the bridge\n\n\n"
      },
      "IfcSlab.WEARING": {
        "Parent": "IfcSlab",
        "Description": "The slab is used to represent a wearing surface.\n\n\n"
      },
      "IfcSlab.PAVING": {
        "Parent": "IfcSlab",
        "Description": "Rigid pavement course of a road or other paved area, usually concrete.\n\n\n"
      },
      "IfcSlab.ROOF": {
        "Parent": "IfcSlab",
        "Description": "The slab is used to represent a roof slab (either flat or sloped).\n\n\n"
      },
      "IfcSlab.SIDEWALK": {
        "Parent": "IfcSlab",
        "Description": ""
      },
      "IfcSlab.BASESLAB": {
        "Parent": "IfcSlab",
        "Description": ""
      },
      "IfcStair": {
        "Parent": "IfcBuiltElement",
        "Description": "A stair is a vertical passageway allowing occupants to walk (step) from one floor level to another floor level at a different elevation. It may include a landing as an intermediate floor slab.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: Construction comprising a succession of horizontal stages (steps or landings) that make it possible to pass on foot to other levels.\n\n\n\nThe _IfcStair_ shall either be represented:\n\n\n\n* as a stair assembly entity that aggregates all parts (stair flight, landing, etc. with own representations), or\n\n* as a single stair entity without decomposition including all representation directly at the stair entity.\n\n\n\n> NOTE&nbsp; In case of an _IfcStair_ being the aggregate of all parts of the stair the aggregation is handled by the _IfcRelAggregates_ relationship, relating an _IfcStair_ with the related _IfcStairFlight_ and landings, _IfcSlab_ with PredefinedType=LANDING. _IfcRailing_'s belonging to the stair may also be included into the aggregation.\n\n\n\n> NOTE&nbsp; Model View Definitions and implementer agreements may restrict the _IfcStair_ being an assembly to not have an independent shape representation, but to always require that the decomposed parts have a shape representation. In this case, at least the 'Body' geometric representations shall not be provided directly at _IfcStair_ if it is an assembly. The 'Body' geometric representation of the _IfcStair_ is then the sum of the 'Body' shape representation of the parts within the decomposition structure.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE Attribute _ShapeType_ renamed to _PredefinedType_.\n\n\n",
        "Psets": {
          "Pset_StairCommon": {
            "Properties": {
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).\n\nHere whether the transport element (in case of e.g., a lift) is designed to serve as a fire exit, e.g., for fire escape purposes.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "HandicapAccessible": {
                "type": "boolean",
                "Description": "Indication whether this space (in case of e.g., a toilet) is designed to serve as an accessible space for handicapped people, e.g., for a public toilet (TRUE) or not (FALSE). This information is often used to declare the need for access for the disabled and for special design requirements of this space.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasNonSkidSurface": {
                "type": "boolean",
                "Description": "Indication whether the surface finish is designed to prevent slippery (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NosingLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the tread to the riser underneath. It is the overhang of the tread.\n"
              },
              "NumberOfRiser": {
                "type": "number",
                "Description": "Total number of the risers included in the stair flight.\n"
              },
              "NumberOfTreads": {
                "type": "number",
                "Description": "Total number of treads included in the stair flight.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "RequiredHeadroom": {
                "type": "real",
                "Description": "Required headroom clearance for the passageway according to the applicable building code or additional requirements.\n"
              },
              "RiserHeight": {
                "type": "real",
                "Description": "Vertical distance from tread to tread. \n\nThe riser height is supposed to be equal for all steps of a stair or stair flight.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TreadLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the thread to the front of the next tread. \n\nThe tread length is supposed to be equal for all steps of the stair or stair flight at the walking line.\n"
              },
              "TreadLengthAtInnerSide": {
                "type": "real",
                "Description": "Minimum length of treads at the inner side of the winder. \n\nOnly relevant in case of winding flights, for straight flights it is identical with IfcStairFlight.TreadLength. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence.\n"
              },
              "TreadLengthAtOffset": {
                "type": "real",
                "Description": "Length of treads at a given offset.\n\nWalking line position is given by the 'WalkingLineOffset'. The resulting value should normally be identical with TreadLength, it may be given in addition, if the walking line offset for building code calculations is different from that used in design.\n"
              },
              "WaistThickness": {
                "type": "real",
                "Description": "Minimum thickness of the stair flight, measured perpendicular to the slope of the flight to the inner corner of riser and tread. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence.\n"
              },
              "WalkingLineOffset": {
                "type": "real",
                "Description": "Offset of the walking line from the inner side of the flight. \n\nNote: the walking line may have a own shape representation (in case of inconsistencies, the value derived from the shape representation shall take precedence).\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          }
        }
      },
      "IfcStairFlight": {
        "Parent": "IfcBuiltElement",
        "Description": "A stair flight is an assembly of building components in a single \"run\" of stair steps (not interrupted by a landing). The stair steps and any stringers are included in the stair flight. A winder is also regarded a part of a stair flight.\n\n\n\nAn _IfcStairFlight_ is normally aggregated by an _IfcStair_ through the _IfcRelAggregates_ relationship, the stair flight is then included in the set of _IfcRelAggregates.RelatedObjects_. An _IfcStairFlight_ normally connects the floor slab of zero to two different storeys (or partial storeys, or landings) within a building. The connection relationship between the _IfcStairFlight_ and the _IfcSlab_ can be expressed using the _IfcRelConnectsElements_ relationship.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n",
        "Psets": {
          "Pset_StairFlightCommon": {
            "Properties": {
              "Headroom": {
                "type": "real",
                "Description": "Actual headroom clearance for the passageway according to the current design. \n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              },
              "NosingLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the tread to the riser underneath. It is the overhang of the tread.\n"
              },
              "NumberOfRiser": {
                "type": "number",
                "Description": "Total number of the risers included in the stair flight.\n"
              },
              "NumberOfTreads": {
                "type": "number",
                "Description": "Total number of treads included in the stair flight.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "RiserHeight": {
                "type": "real",
                "Description": "Vertical distance from tread to tread. \n\nThe riser height is supposed to be equal for all steps of a stair or stair flight.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "TreadLength": {
                "type": "real",
                "Description": "Horizontal distance from the front of the thread to the front of the next tread. \n\nThe tread length is supposed to be equal for all steps of the stair or stair flight at the walking line.\n"
              },
              "TreadLengthAtInnerSide": {
                "type": "real",
                "Description": "Minimum length of treads at the inner side of the winder. \n\nOnly relevant in case of winding flights, for straight flights it is identical with IfcStairFlight.TreadLength. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence.\n"
              },
              "TreadLengthAtOffset": {
                "type": "real",
                "Description": "Length of treads at a given offset.\n\nWalking line position is given by the 'WalkingLineOffset'. The resulting value should normally be identical with TreadLength, it may be given in addition, if the walking line offset for building code calculations is different from that used in design.\n"
              },
              "WaistThickness": {
                "type": "real",
                "Description": "Minimum thickness of the stair flight, measured perpendicular to the slope of the flight to the inner corner of riser and tread. It is a pre-calculated value, in case of inconsistencies, the value derived from the shape representation shall take precedence.\n"
              },
              "WalkingLineOffset": {
                "type": "real",
                "Description": "Offset of the walking line from the inner side of the flight. \n\nNote: the walking line may have a own shape representation (in case of inconsistencies, the value derived from the shape representation shall take precedence).\n"
              }
            }
          },
          "Qto_StairFlightBaseQuantities": {
            "Properties": {
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "NumberOfRisers": {
                "type": "integer",
                "Description": "Number of the risers included in the stair flight\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE The attribute has been deprecated it shall only be exposed with a NIL value. Use _Pset_StairFlightCommon.NumberOfRisers_ instead."
              },
              "NumberOfTreads": {
                "type": "integer",
                "Description": "Number of treads included in the stair flight.\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE The attribute has been deprecated it shall only be exposed with a NIL value. Use _Pset_StairFlightCommon.NumberOfTreads_ instead."
              },
              "RiserHeight": {
                "type": "real",
                "Description": "Vertical distance from tread to tread. The riser height is supposed to be equal for all stairs in a stair flight.\\X\\0D\n  \\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE The attribute has been deprecated it shall only be exposed with a NIL value. Use _Pset_StairFlightCommon.RiserHeight_ instead."
              },
              "TreadLength": {
                "type": "real",
                "Description": "Horizontal distance from the front to the back of the tread. The tread length is supposed to be equal for all steps of the stair flight.\\X\\0D\n  \\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE The attribute has been deprecated it shall only be exposed with a NIL value. Use _Pset_StairFlightCommon.TreadLength_ instead."
              }
            }
          }
        }
      },
      "IfcStairFlight.SPIRAL": {
        "Parent": "IfcStairFlight",
        "Description": ""
      },
      "IfcStairFlight.STRAIGHT": {
        "Parent": "IfcStairFlight",
        "Description": "A stair flight with a straight walking line.\n\n\n"
      },
      "IfcStairFlight.FREEFORM": {
        "Parent": "IfcStairFlight",
        "Description": "A stair flight with a free form walking line (and outer boundaries).\n\n\n"
      },
      "IfcStairFlight.WINDER": {
        "Parent": "IfcStairFlight",
        "Description": ""
      },
      "IfcStairFlight.CURVED": {
        "Parent": "IfcStairFlight",
        "Description": "A stair flight with a curved walking line.\n\n\n"
      },
      "IfcStair.CURVED_RUN_STAIR": {
        "Parent": "IfcStair",
        "Description": "A stair extending from one level to another without turns or winders. The stair is consisting of one curved flight.\n\n\n"
      },
      "IfcStair.TWO_STRAIGHT_RUN_STAIR": {
        "Parent": "IfcStair",
        "Description": "A straight stair consisting of two straight flights without turns but with one landing.\n\n\n"
      },
      "IfcStair.LADDER": {
        "Parent": "IfcStair",
        "Description": "a piece of equipment consisting of a series of bars or steps between two upright elements used for climbing up or down something\n\n\n"
      },
      "IfcStair.HALF_WINDING_STAIR": {
        "Parent": "IfcStair",
        "Description": "A stair consisting of one flight with one half winder, which makes a 180&deg; turn. The orientation of the turn is determined by the walking line.\n\n\n"
      },
      "IfcStair.THREE_QUARTER_WINDING_STAIR": {
        "Parent": "IfcStair",
        "Description": "A stair consisting of one flight with three quarter winders, which make a\n\n90&deg; turn. The stair makes a 270&deg; turn. The direction of the turns is determined by the walking line.\n\n\n"
      },
      "IfcStair.THREE_QUARTER_TURN_STAIR": {
        "Parent": "IfcStair",
        "Description": ""
      },
      "IfcStair.STRAIGHT_RUN_STAIR": {
        "Parent": "IfcStair",
        "Description": "A stair extending from one level to another without turns or winders. The stair consists of one straight flight.\n\n\n"
      },
      "IfcStair.TWO_QUARTER_WINDING_STAIR": {
        "Parent": "IfcStair",
        "Description": "A stair consisting of one flight with two quarter winders, which make a\n\n90&deg; turn. The stair makes a 180&deg; turn. The direction of the turns is determined by the walking line.\n\n\n"
      },
      "IfcStair.TWO_QUARTER_TURN_STAIR": {
        "Parent": "IfcStair",
        "Description": "A stair making a 180&deg; turn, consisting of three straight flights connected by two quarterspace landings. The direction of the turns is determined by the walking line.\n\n\n"
      },
      "IfcStair.QUARTER_TURN_STAIR": {
        "Parent": "IfcStair",
        "Description": "A stair making a 90&deg; turn, consisting of two straight flights connected by a quarterspace landing. The direction of the turn is determined by the walking line.\n\n\n"
      },
      "IfcStair.QUARTER_WINDING_STAIR": {
        "Parent": "IfcStair",
        "Description": "A stair consisting of one flight with a quarter winder, which is making a 90&deg; turn. The direction of the turn is determined by the walking line.\n\n\n"
      },
      "IfcStair.SPIRAL_STAIR": {
        "Parent": "IfcStair",
        "Description": "A stair constructed with winders around a circular newel often without landings. Depending on outer boundary it can be either a circular, elliptical or rectangular spiral stair. The orientation of the winding stairs is determined by the walking line.\n\n\n"
      },
      "IfcStair.HALF_TURN_STAIR": {
        "Parent": "IfcStair",
        "Description": "A stair making a 180&deg; turn, consisting of two straight flights connected\n\nby a halfspace landing. The orientation of the turn is determined by the walking line.\n\n\n"
      },
      "IfcStair.DOUBLE_RETURN_STAIR": {
        "Parent": "IfcStair",
        "Description": "A stair having one straight flight to a wide quarterspace landing, and two side flights from that landing into opposite directions. The stair is making a 90&deg; turn. The direction of traffic is determined by the walking line.\n\n\n"
      },
      "IfcStair.TWO_CURVED_RUN_STAIR": {
        "Parent": "IfcStair",
        "Description": "A curved stair consisting of two curved flights without turns but with one landing.\n\n\n"
      },
      "IfcWall": {
        "Parent": "IfcBuiltElement",
        "Description": "The wall represents a vertical construction that may bound or subdivide spaces. Wall are usually vertical, or nearly vertical, planar elements, often designed to bear structural loads. A wall is however\u00a0not required to be load bearing.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: vertical construction usually in masonry or in concrete which bounds or subdivides a construction works and fulfils a load bearing or retaining function.\n\n\n\n> NOTE&nbsp; There is a representation of walls for structural analysis provided by a proper subtype of _IfcStructuralMember_ being part of the _IfcStructuralAnalysisModel_.\n\n\n\n> NOTE&nbsp; An arbitrary planar element to which this semantic information is not applicable (is not predominantly vertical), shall be modeled as _IfcPlate_.\n\n\n\nA wall may have openings, such as wall openings, openings used for windows or doors, or niches and recesses. They are defined by an _IfcOpeningElement_ attached to the wall using the inverse relationship _HasOpenings_ pointing to _IfcRelVoidsElement_.\n\n\n\n> NOTE&nbsp; Walls with openings that have already been modeled within the enclosing geometry may use the relationship _IfcRelConnectsElements_ to associate the wall with embedded elements such as doors and windows.\n\n\n\nThere are three entities for wall occurrences:\n\n\n\n* _IfcWallStandardCase_ \u00a0used for all occurrences of walls, that have a non-changing thickness along the wall path and where the thickness parameter can be fully described by a material layer set. These walls are always represented geometrically by an 'Axis' and a 'SweptSolid' shape representation (or by a 'Clipping' geometry based on 'SweptSolid'), if a 3D geometric representation is assigned. In addition they have to have a corresponding _IfcMaterialProfileSetUsage_ assigned.\n\n* _IfcWallElementedCase_ used for occurrences of walls which are aggregated from subordinate elements, following specific decomposition rules expressed by the mandatory use of _IfcRelAggregates_ relationship.\n\n* _IfcWall_ \u00a0used for all other occurrences of wall, particularly for walls with changing thickness along the wall path (e.g. polygonal walls), or walls with a non-rectangular cross sections (e.g. L-shaped retaining walls), and walls having an extrusion axis that is unequal to the global Z axis of the project (i.e. non-vertical walls), or walls having only 'Brep', or 'SurfaceModel' geometry.\n\n\n\n> HISTORY&nbsp; New entity in IFC1.0\n\n\n",
        "Psets": {
          "Pset_WallCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\n\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorbtion values).\n"
              },
              "Combustible": {
                "type": "boolean",
                "Description": "Indication whether the object is made from combustible material (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Compartmentation": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to serve as a fire compartmentation (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ExtendToStructure": {
                "type": "boolean",
                "Description": "Indicates whether the object extend to the structure above (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "SurfaceSpreadOfFlame": {
                "type": "string",
                "Description": "Indication on how the flames spread around the surface,\n\nIt is given according to the national building code that governs the fire behaviour for materials.\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              }
            }
          },
          "Qto_WallBaseQuantities": {
            "Properties": {
              "GrossFootprintArea": {
                "type": "q_area",
                "Description": "Area of the wall as viewed by a ground floor view, not taking any wall modifications (like recesses) into account. It is also referred to as the foot print of the wall.\n"
              },
              "GrossSideArea": {
                "type": "q_area",
                "Description": "Area of the curtain wall as viewed by an elevation view of the middle plane of the curtain wall.  It does not take into account any curtain wall modifications.\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Height": {
                "type": "q_length",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetFootprintArea": {
                "type": "q_area",
                "Description": "Area of the wall as viewed by a ground floor view, taking all wall modifications (like recesses) into account. It is also referred to as the foot print of the wall.\n"
              },
              "NetSideArea": {
                "type": "q_area",
                "Description": "Area of the curtain wall as viewed by an elevation view of the middle plane of the curtain wall. It does take into account all curtain wall modifications.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Width": {
                "type": "q_length",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfWall": {
            "Properties": {
              "BarAllocationType": {
                "type": "string",
                "Description": "Defines the type of the reinforcement bar allocation.\n"
              },
              "Description": {
                "type": "string",
                "Description": "The description of the air side system.\n"
              },
              "HorizontalBarPitch": {
                "type": "real",
                "Description": "The pitch length of the horizontal bar.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SpacingBarPitch": {
                "type": "real",
                "Description": "The pitch length of the spacing bar.\n"
              },
              "VerticalBarPitch": {
                "type": "real",
                "Description": "The pitch length of the vertical bar.\n"
              }
            }
          }
        }
      },
      "IfcWallElementedCase": {
        "Parent": "IfcWall",
        "Description": "The _IfcWallElementedCase_ defines a wall with certain constraints for the provision of its components. The _IfcWallElementedCase_ handles all cases of walls, that are decomposed into parts:\n\n\n\n* having components being assigned to the _IfcWallElementedCase_ using the _IfcRelAggregates_ relationship accessible by the inverse relationship _IsDecomposedBy_.\n\n\n\nParts within the decomposition are usually be of type:\n\n\n\n* _IfcBuildingElementPart_ for wall layer, insolation layers and similar\n\n* _IfcMember_ for studs, posts and similar elements,\n\n* _IfcElementAssembly_ for other aggregates, or\n\n* _IfcBuildingElementProxy_.\n\n\n\n> EXAMPLE&nbsp;Elemented walls may extend the concepts of standard walls with the following features, as shown in Figure 1, including the _IfcRelConnectsWithRealizingElements_ relationship to define fasteners and accessories.\n\n\n\n![\"voiding\"](../../../../figures/ifcwallelementedcase-partitioning.png \"Figure 1 &mdash; Wall elemented case\")\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n## Formal Propositions\n\n\n\n### HasDecomposition\n\nA valid instance of _IfcWallElementedCase_ has to have parts in a decomposition hierarchy.\n"
      },
      "IfcWallStandardCase": {
        "Parent": "IfcWall",
        "Description": "The _IfcWallStandardCase_ defines a wall with certain constraints for the provision of parameters and with certain constraints for the geometric representation. The _IfcWallStandardCase_ handles all cases of walls, that are extruded vertically:\n\n\n\n* along the positive z axis of the wall object coordinate system, and\n\n* along the positve z axis of the global (world) coordinate system\n\n\n\nand have a single thickness along the path for each wall layer, i.e.:\n\n\n\n* parallel sides for straight walls\n\n* co-centric sides for curved walls.\n\n\n\nand have either:\n\n\n\n* a straight line axis (straight wall), or\n\n* a circular arc axis (round wall).\n\n\n\nand shall not have\n\n\n\n* aggregated components, that is, parts aggregated to a wall by _IfcRelAggregates_\n\n* shape representation for 'Body' not being an extrusion, or clipped extrusion\n\n\n\nThe following parameter have to be provided:\n\n\n\n* Wall height, taken from the depth of extrusion, provided by the geometric representation.\n\n* Wall thickness, taken from the material layer set usage, attached to the wall\n\n* Wall offset from axis, taken from the material layer set usage, attached to the wall\n\n\n\nThe _IfcWallStandardCase_ requires the provision of the wall axis either a straight line that is parallel to the x-axis of the object coordinate system, or a circular arc where the tangent at start is parallel to the x-axis of the object coordinate system. The direction of the wall axis shall be the positive direction of that x-axis.\n\n\n\nThe material of the wall is defined by the _IfcMaterialLayerSetUsage_ and is attached by the _IfcRelAssociatesMaterial_ objectified relationship. It is accessible by the inverse _HasAssociations_ relationship. The material layer set usage has to be given (enforced by where rule).\n\n\n\nAn 'Axis' and a 'Body' shape representation has to be provided, and it is invalid to exchange a 'Tessellation', 'SurfaceModel', 'Brep' or 'MappedRepresentation' representation for the 'Body' shape representation of the _IfcWallStandardCase_.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x.\n\n\n\n## Formal Propositions\n\n\n\n### HasMaterialLayerSetUsage\n\nA valid instance of _IfcWallStandardCase_ relies on the provision of an _IfcMaterialLayerSetUsage_.\n"
      },
      "IfcWall.STANDARD": {
        "Parent": "IfcWall",
        "Description": ""
      },
      "IfcWall.WAVEWALL": {
        "Parent": "IfcWall",
        "Description": "Protective wall or screen to block overtopping and impact of waves across a breakwater\n\n\n"
      },
      "IfcWall.ELEMENTEDWALL": {
        "Parent": "IfcWall",
        "Description": "A stud wall framed with studs and faced with sheetings, sidings, wallboard, or plasterwork. \n\n{ .deprecated}\n\n> The value is deprecated, it is expressed by choosing the subtype _IfcWallElementedCase_.\n\n\n"
      },
      "IfcWall.PLUMBINGWALL": {
        "Parent": "IfcWall",
        "Description": "A pier, or enclosure, or encasement, normally used to enclose plumbing in sanitary rooms. Such walls often do not extent to the ceiling.\n\n\n"
      },
      "IfcWall.PARAPET": {
        "Parent": "IfcWall",
        "Description": "A wall-like barrier to protect human or vehicle from falling, or to prevent the spread of fires. Often designed at the edge of balconies, terraces or roofs, or along edges of bridges.\n\n\n",
        "Psets": {
          "Pset_RoadGuardElement": {
            "Properties": {
              "IsMoveable": {
                "type": "boolean",
                "Description": "True if element is moveable.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTransition": {
                "type": "boolean",
                "Description": "True if element is a transition. See class Transition.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTerminal": {
                "type": "boolean",
                "Description": "True if element is a terminal. See class Terminal.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "TerminalType": {
                "type": "string",
                "Description": "Specifies the kind of terminal if IsTerminal is true.\n"
              }
            }
          }
        }
      },
      "IfcWall.PARTITIONING": {
        "Parent": "IfcWall",
        "Description": "A wall designed to partition spaces that often has a light-weight, sandwich-like construction (e.g. using gypsum board). Partitioning walls are normally non load bearing.\n\n\n"
      },
      "IfcWall.SOLIDWALL": {
        "Parent": "IfcWall",
        "Description": "A massive wall construction for the wall core being the single layer or having multiple layers attached. Such walls are often masonry or concrete walls (both cast in-situ or precast) that are load bearing and fire protecting.\n\n\n"
      },
      "IfcWall.RETAININGWALL": {
        "Parent": "IfcWall",
        "Description": ""
      },
      "IfcWall.POLYGONAL": {
        "Parent": "IfcWall",
        "Description": "A polygonal wall, extruded vertically, where the wall thickness varies along the wall path.\n\n\n"
      },
      "IfcWall.MOVABLE": {
        "Parent": "IfcWall",
        "Description": "A movable wall that is either movable, such as folding wall or a sliding wall, or can be easily removed as a removable partitioning or mounting wall. Movable walls do normally not define space boundaries and often belong to the furnishing system.\n\n\n"
      },
      "IfcWall.SHEAR": {
        "Parent": "IfcWall",
        "Description": "A wall designed to withstand shear loads. Examples of shear wall are diaphragms inside a box girder, typically on a pier, to resist lateral forces and transfer them to the support.\n\n\n"
      },
      "IfcWindow": {
        "Parent": "IfcBuiltElement",
        "Description": "The window is a building element that is predominately used to provide natural light and fresh air. It includes vertical opening but also horizontal opening such as skylights or light domes. It includes constructions with swinging, pivoting, sliding, or revolving panels and fixed panels. A window consists of a lining and one or several panels.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1  \n\n> Construction for closing a vertical or near vertical opening in a wall or pitched roof that will admit light and may admit fresh air.\n\n\n\nThe _IfcWindow_ defines a particular occurrence of a window inserted in the spatial context of a project. A window can:\n\n\n\n* be inserted into an _IfcOpeningElement_ using the _IfcRelFillsElement_ relationship, then the _IfcWindow_ has an inverse attribute _FillsVoids_ provided,\n\n* be part of an element assembly, often an _IfcCurtainWall_, using the _IfcRelAggregates_ relationship, then the inverse attribute _Decomposes_ is provided.\n\n* or be a \"free standing\" window, then the _IfcWindow_ has no inverse attributes _FillsVoids_ or _Decomposes_ provided.\n\n\n\n> NOTE&nbsp; View definitions or implementer agreements may restrict the relationship to only include one window (or door) into one opening.\n\n\n\nThere are two entities for window occurrences:\n\n\n\n* _IfcWindowStandardCase_ used for all occurrences of windows, that have a 'Profile' shape representation defined to which a set of shape parameters for lining and framing properties apply. Additionally it requires the provision of an _IfcWindowType_ that references one _IfcWindowLiningProperties_ and on to many _IfcWindowPanelProperties_. \n\n* _IfcWindow_ used for all other occurrences of windows, particularly for windows having only 'Brep', or 'SurfaceModel' geometry without applying shape parameters.\n\n\n\nThe actual parameter of the window and/or its shape is defined at the _IfcWindow_ as the occurrence definition (or project instance), or by the _IfcWindowType_ as the specific definition (or project type). The following parameters are given:\n\n\n\n* at the _IfcWindow_ or _IfcWindowStandardCase_ for occurrence specific parameters. The _IfcWindow_ specifies:\n\n*  \n\n    * the window width and height\n\n    * the window opening direction (by the y-axis of the _ObjectPlacement_) \n\n* at the _IfcWindowType_ to which the _IfcWindow_ is related by the inverse relationship _IsDefinedBy_ pointing to _IfcRelDefinesByType_, for type parameters common to all occurrences of the same type.\n\n*  \n\n    * the partitioning type (single panel, double panel, tripel panel, more panels)\n\n    * the operation type (swing, tilt and turn, pivot revolve, fixed case ment, etc.)\n\n    * the window panel hinge side (by using two different styles for right and left opening windows)\n\n    * the construction material type\n\n    * the particular attributes for the lining by the _IfcWindowLiningProperties_\n\n    * the particular attributes for the panels by the\u00a0 _IfcWindowPanelProperties_ \n\n\n\n> HISTORY&nbsp; New entity in IFC1.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; The attributes _PredefinedType_ and _OperationType_ are added, the applicable type object has been changed to _IfcDoorType_.\n\n\n\n{ .use-head}\n\nParameteric Representation using parameters at _IfcWindowType_\n\n\n\nThe parameters, which define the shape of the _IfcWindow_, are given at the _IfcWindowType_ and the property sets, which are included in the _IfcWindowType_. The _IfcWindow_ only defines the local placement. The overall size of the _IfcWindow_ to be used to apply the lining or panel parameter provided by the _IfcWindowType_ is determined by the IfcShapeRepresentation with the RepresentationIdentifier = 'Profile'. Only in case of an _IfcWindow_ inserted into an _IfcOpeningElement_ using the _IfcRelFillsElement_ relatioship, having a horizontal extrusion (along the y-axis of the _IfcDoor_), the overall size is determined by the extrusion profile of the _IfcOpeningElement_.\n\n\n\nFigure 1 illustrates the insertion of a window into the _IfcOpeningElement_ by creating an instance of _IfcWindow_ with _PartitioningType = DoublePanelHorizontal_. The parameters _OverallHeight_ and _OverallWidth_ show the extent of the window in the positive Z and X axis of the local placement of the window. The lining and the transom are created by the given parameters.\n\n\n\n![\"window 1\"](../../../../figures/ifcwindow-layout1.gif \"Figure 1 &mdash; Window placement\")\n\n\n\nFigure 2 illustrates the final window (DoublePanelHorizontal) with first panel having _PanelPosition = TOP_, _OperationType = BOTTOMHUNG_ and second panel having _PanelPosition = BOTTOM_ and _OperationType = TILTANDTURNLEFTHAND_.\n\n\n\n![\"window 2\"](../../../../figures/ifcwindow-layout2.gif \"Figure 2 &mdash; Window planes\")\n\n\n\n{ .use-head}\n\nWindow opening operation by window type\n\n\n\nThe parameters that defines the shape of the _IfcWindow_, are given at the _IfcWindowType_ and the property sets, which are included in the _IfcWindowType_. The _IfcWindow_ only defines the local placement which determines the opening direction of the window. The overall layout of the _IfcWindow_ is determined by its\u00a0_IfcWindowType.PartitioningType_. Each window panel has its own operation type, provided by _IfcWindowPanelProperties.OperationType_. All window panels are assumed to open into the same direction (if relevant for the particular window panel operation. The hindge side (whether a window opens to the left or to the right) is determined by the _IfcWindowPanelProperties_._OperationType_.\n\n\n\n> NOTE&nbsp; \u00a0There are different conventions in different countries on how to show the symbolic presentation of the window panel operation (the \"triangles\"). Either as seen from the exterior, or from the interior side. The following figures show the symbolics from the exterior side (the convention as used predominately in Europe).\n\n\n\nFigure 3 illustrates window operation types.\n\n\n\n<table><tr><td><table border=\"1\" cellpadding=\"2\" cellspacing=\"2\">\n\n<tbody>\n\n<tr valign=\"top\">\n\n<td align=\"left\" valign=\"top\"><small><img alt=\"fig 1\" src=\"../../../../figures/ifcwindow-fig01.gif\" height=\"121\" width=\"301\"><br></small></td>\n\n<td align=\"left\" valign=\"top\">\n\n<p><small>The window panel (for side hung windows) opens always\n\ninto the direction of the positive Y axis of the local placement.\n\nThe determination of whether the window opens to the left or to\n\nthe right is done at\n\n<em>IfcWindowPanelProperties.OperationType</em>. Here it is a left\n\nside opening window given by\u00a0<em>OperationType</em> =\n\nSideHungLeftHand.</small></p>\n\n</td>\n\n</tr>\n\n<tr>\n\n<td><small><img alt=\"fig 2\" src=\"../../../../figures/ifcwindow-fig02.gif\" height=\"121\" width=\"301\"><br></small></td>\n\n<td valign=\"top\">\n\n<p><small>If the window should open to the other side, then the\n\nlocal placement has to be changed. It is still a left hung\n\nwindow, given by <em>IfcWindowPanelProperties.OperationType</em>\n\n=\u00a0SideHungLeftHand.</small></p>\n\n</td>\n\n</tr>\n\n<tr>\n\n<td><img alt=\"fig 3\" src=\"../../../../figures/ifcwindow-fig03.gif\" height=\"121\" width=\"301\"></td>\n\n<td valign=\"top\">\n\n<p><small>If the window panel (for side hung windows) opens to\n\nthe right, a separate window panel style needs to be used (here\n\n<em>IfcWindowPanelProperties.OperationType</em>\n\n=\u00a0SideHungRightHand) and it always opens into the direction of\n\nthe positive Y axis of the local placement.\u00a0</small></p>\n\n</td>\n\n</tr>\n\n<tr valign=\"top\">\n\n<td align=\"left\" valign=\"top\"><small><img alt=\"fig 4\" src=\"../../../../figures/ifcwindow-fig04.gif\" height=\"121\" width=\"301\"><br></small></td>\n\n<td align=\"left\" valign=\"top\">\n\n<p><small>If the window should open to the other side, then the\n\nlocal placement has to be changed. It is still a right hung\n\nwindow, given by <em>IfcWindowPanelProperties.OperationType</em>\n\n=\u00a0</small><small>SideHungRightHand.</small></p>\n\n<small>.</small></td>\n\n</tr>\n\n</tbody>\n\n</table>\n\n\n\n</td></tr>\n\n<tr><td><p class=\"figure\">Figure 3 &mdash; Window operations</p></td></tr>\n\n</table>\n\n\n",
        "Psets": {
          "Pset_WindowCommon": {
            "Properties": {
              "AcousticRating": {
                "type": "string",
                "Description": "Acoustic rating for this object.\n\nIt is provided according to the national building code. It indicates the sound transmission resistance of this object by an index ratio (instead of providing full sound absorbtion values).\n"
              },
              "FireExit": {
                "type": "boolean",
                "Description": "Indication whether this object is designed to serve as an exit in the case of fire (TRUE) or not (FALSE).\n\nHere whether the transport element (in case of e.g., a lift) is designed to serve as a fire exit, e.g., for fire escape purposes.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "FireRating": {
                "type": "string",
                "Description": "Fire rating for this object. It is given according to the national fire safety code or regulation.\n"
              },
              "GlazingAreaFraction": {
                "type": "real",
                "Description": "Fraction of the glazing area relative to the total area of the filling element. \n\nIt shall be used, if the glazing area is not given separately for all panels within the filling element.\n"
              },
              "HasDrive": {
                "type": "boolean",
                "Description": "Indication whether this object has an automatic drive to operate it (TRUE) or no drive (FALSE)\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSillExternal": {
                "type": "boolean",
                "Description": "Indication whether the window opening has an external sill (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "HasSillInternal": {
                "type": "boolean",
                "Description": "Indication whether the window opening has an internal sill (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Infiltration": {
                "type": "real",
                "Description": "Infiltration flowrate of outside air for the filler object based on the area of the filler object at a pressure level of 50 Pascals. It shall be used, if the length of all joints is unknown.\n"
              },
              "IsExternal": {
                "type": "boolean",
                "Description": "Indication whether the element is designed for use in the exterior (TRUE) or not (FALSE). If (TRUE) it is an external element and faces the outside of the building.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MechanicalLoadRating": {
                "type": "string",
                "Description": "Mechanical load rating for this object.\n\nIt is provided according to the national building code.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "SecurityRating": {
                "type": "string",
                "Description": "Index based rating system indicating security level.\n\nIt is giving according to the national building code.\n"
              },
              "SmokeStop": {
                "type": "boolean",
                "Description": "Indication whether the object is designed to provide a smoke stop (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "ThermalTransmittance": {
                "type": "real",
                "Description": "Thermal transmittance coefficient (U-Value) of the element. It is the total thermal transmittance coefficient through the building element proxy within the direction of the thermal flow (including all materials).\n\n\n\nNote: new property in IFC4\n"
              },
              "WaterTightnessRating": {
                "type": "string",
                "Description": "Water tightness rating for this object.\n\nIt is provided according to the national building code.\n"
              },
              "WindLoadRating": {
                "type": "string",
                "Description": "Wind load resistance rating for this object.\n\nIt is provided according to the national building code.\n"
              }
            }
          },
          "Qto_WindowBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "q_area",
                "Description": "Area of the projection as viewed by an elevation view (for wall projections or as viewed by a ground floor view (for slab projections).\n"
              },
              "Height": {
                "type": "q_length",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Perimeter": {
                "type": "q_length",
                "Description": "Perimeter of the profile for calculating the surface area. For example measured in mm.\n"
              },
              "Width": {
                "type": "q_length",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "OverallHeight": {
                "type": "real",
                "Description": "Overall measure of the height, it reflects the Z Dimension of a bounding box, enclosing the window opening. If omitted, the _OverallHeight_ should be taken from the geometric representation of the _IfcOpening_ in which the window is inserted. \\X\\0D\n\\X\\0D\n> NOTE&nbsp; The body of the window might be taller then the window opening (for example in cases where the window lining includes a casing). In these cases the _OverallHeight_ shall still be given as the window opening height, and not as the total height of the window lining."
              },
              "OverallWidth": {
                "type": "real",
                "Description": "Overall measure of the width, it reflects the X Dimension of a bounding box, enclosing the window opening. If omitted, the _OverallWidth_ should be taken from the geometric representation of the _IfcOpening_ in which the window is inserted. \\X\\0D\n\\X\\0D\n> NOTE&nbsp; The body of the window might be wider then the window opening (for example in cases where the window lining includes a casing). In these cases the _OverallWidth_ shall still be given as the window opening width, and not as the total width of the window lining."
              },
              "PartitioningType": {
                "values": [
                  "SINGLE_PANEL",
                  "DOUBLE_PANEL_VERTICAL",
                  "DOUBLE_PANEL_HORIZONTAL",
                  "TRIPLE_PANEL_VERTICAL",
                  "TRIPLE_PANEL_BOTTOM",
                  "TRIPLE_PANEL_TOP",
                  "TRIPLE_PANEL_LEFT",
                  "TRIPLE_PANEL_RIGHT",
                  "TRIPLE_PANEL_HORIZONTAL",
                  "USERDEFINED",
                  "NOTDEFINED"
                ],
                "type": "IfcWindowTypePartitioningEnum",
                "Description": "Type defining the general layout of the window type in terms of the partitioning of panels."
              },
              "UserDefinedPartitioningType": {
                "type": "string",
                "Description": "Designator for the user defined partitioning type, shall only be provided, if the value of _PartitioningType_ is set to USERDEFINED."
              },
              "ParameterTakesPrecedence": {
                "type": "boolean",
                "Description": "The Boolean value reflects, whether the parameter given in the attached lining and panel properties exactly define the geometry (TRUE), or whether the attached style shape take precedence (FALSE). In the last case the parameter have only informative value. If not provided, no such information can be infered.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcWindowStandardCase": {
        "Parent": "IfcWindow",
        "Description": "The standard window, _IfcWindowStandardCase_, defines a window with certain constraints for the provision of operation types, opening directions, frame and lining parameters, construction types and with certain constraints for the geometric representation. The _IfcWindowStandardCase_ handles all cases of windows, that:\n\n\n\n* are inserted into an opening, represented by _IfcOpeningElement_, using the _IfcRelFillsElement_ relationship\n\n* have a local placement relative to this opening, and with the y-axis of the placement pointing into the opening direction\n\n* have a profile geometry, represented by _IfcShapeRepresentation.RepresentationIdentifier_=\"Profile\" as a closed curve to which the window parameter apply. The profile represents a rectangle within the xz plane of the local placement\n\n* have a reference to an _IfcWindowType_ to define the opening direction and the operation type (swinging, sliding, folding, etc.) of the window. The attribute _OperationType_ shall be provided and not being UNDEFINED, and the attribute _ParameterTakesPrecedence_ shall be \"TRUE\".\n\n* have a single _IfcWindowLiningProperties_ and a set of _IfcWindowPanelProperties_ instances included in the set of _HasPropertySets_ at _IfcWindowType_\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\nThe geometric representation of _IfcWindowStandardCase_ is defined using the following multiple shape representations for its definition:\n\n\n\n* **Profile**: a three-dimensional closed curve within a particular shape representation. The profile is used to apply the parameter of the parametric window representation. The profile around the edges of the opening is used to apply the window lining and window panel shape parameter.\n\n* **Body**: A SweptSolid, SurfaceModel, or Brep Representation or a CSG additionally defining the 3D shape of the standard window in addition to the parametric representation by applying the _IfcWindowLiningProperties_ and an the _IfcWindowPanelProperties_ to the Profile representation.\n"
      },
      "IfcWindow.WINDOW": {
        "Parent": "IfcWindow",
        "Description": "A standard window usually within a wall opening, as a window panel in a curtain wall, or as a \"free standing\" window.\n\n\n"
      },
      "IfcWindow.SKYLIGHT": {
        "Parent": "IfcWindow",
        "Description": "A window within a sloped building element, usually a roof slab.\n\n\n"
      },
      "IfcWindow.LIGHTDOME": {
        "Parent": "IfcWindow",
        "Description": "A special window that lies horizonally in a roof slab opening.\n\n\n"
      },
      "IfcDistributionChamberElement": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "A distribution chamber element defines a place at which distribution systems and their constituent elements may be inspected or through which they may travel.\n\n\n\nAn **IfcDistributionChamberElement** is a formed volume used in a distribution system, such as a sump, trench or manhole. Instances of [IfcDistributionSystem](../../ifcsharedbldgserviceelements/lexical/ifcdistributionsystem.htm) or [IfcDistributionFlowElement](../../ifcsharedbldgserviceelements/lexical/ifcdistributionflowelement.htm) may be related to the **IfcDistributionChamberElement** enabling their location in or at the chamber to be determined.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n",
        "Psets": {
          "Pset_DistributionChamberElementCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Qto_DistributionChamberElementBaseQuantities": {
            "Properties": {
              "GrossSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the footing, normally generated as perimeter \\* length + 2 \\* cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately.\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "NetSurfaceArea": {
                "type": "q_area",
                "Description": "Net surface area of the column, normally generated as perimeter \\* length + 2 \\* cross section area taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              }
            }
          }
        }
      },
      "IfcDistributionChamberElement.INSPECTIONPIT": {
        "Parent": "IfcDistributionChamberElement",
        "Description": "Recess or chamber formed to permit access for inspection of substructure and services.\n\n\n",
        "Psets": {
          "Pset_DistributionChamberElementTypeInspectionPit": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The nominal depth of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcDistributionChamberElement.MANHOLE": {
        "Parent": "IfcDistributionChamberElement",
        "Description": "hamber constructed on a drain, sewer or pipeline with a removable cover that permits the entry of a person.\n\n\n",
        "Psets": {
          "Pset_DistributionChamberElementTypeManhole": {
            "Properties": {
              "AccessCoverLoadRating": {
                "type": "string",
                "Description": "The load rating of the access cover (which may be a value or an alphanumerically defined class rating).\n"
              },
              "AccessLengthOrRadius": {
                "type": "real",
                "Description": "The length of the chamber access cover or, where the plan shape of the cover is circular, the radius.\n"
              },
              "AccessWidth": {
                "type": "real",
                "Description": "The width of the chamber access cover where the plan shape of the cover is not circular.\n"
              },
              "BaseThickness": {
                "type": "real",
                "Description": "The thickness of the chamber base construction.\n\nNOTE: It is assumed that chamber base will be constructed at a single thickness.\n"
              },
              "HasSteps": {
                "type": "boolean",
                "Description": "Indicates whether the chamber has steps (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "InvertLevel": {
                "type": "real",
                "Description": "Level of the lowest part of the cross section as measured from ground level.\n"
              },
              "IsShallow": {
                "type": "boolean",
                "Description": "Indicates whether the chamber has been designed as being shallow (TRUE) or deep (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SoffitLevel": {
                "type": "real",
                "Description": "Level of the highest internal part of the cross section as measured from ground level.\n"
              },
              "WallThickness": {
                "type": "real",
                "Description": "The thickness of the chamber wall construction\n\n.\n\nNOTE: It is assumed that chamber walls will be constructed at a single thickness.\n"
              },
              "WithBackdrop": {
                "type": "boolean",
                "Description": "Indicates whether the chamber has a backdrop or tumbling bay (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcDistributionChamberElement.TRENCH": {
        "Parent": "IfcDistributionChamberElement",
        "Description": "Excavated chamber, the length of which typically exceeds the width.\n\n\n",
        "Psets": {
          "Pset_DistributionChamberElementTypeTrench": {
            "Properties": {
              "Depth": {
                "type": "real",
                "Description": "The nominal depth of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "InvertLevel": {
                "type": "real",
                "Description": "Level of the lowest part of the cross section as measured from ground level.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcDistributionChamberElement.SUMP": {
        "Parent": "IfcDistributionChamberElement",
        "Description": "",
        "Psets": {
          "Pset_DistributionChamberElementTypeSump": {
            "Properties": {
              "InvertLevel": {
                "type": "real",
                "Description": "Level of the lowest part of the cross section as measured from ground level.\n"
              },
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcDistributionChamberElement.INSPECTIONCHAMBER": {
        "Parent": "IfcDistributionChamberElement",
        "Description": "",
        "Psets": {
          "Pset_DistributionChamberElementTypeInspectionChamber": {
            "Properties": {
              "AccessCoverLoadRating": {
                "type": "string",
                "Description": "The load rating of the access cover (which may be a value or an alphanumerically defined class rating).\n"
              },
              "AccessLengthOrRadius": {
                "type": "real",
                "Description": "The length of the chamber access cover or, where the plan shape of the cover is circular, the radius.\n"
              },
              "AccessWidth": {
                "type": "real",
                "Description": "The width of the chamber access cover where the plan shape of the cover is not circular.\n"
              },
              "BaseThickness": {
                "type": "real",
                "Description": "The thickness of the chamber base construction.\n\nNOTE: It is assumed that chamber base will be constructed at a single thickness.\n"
              },
              "ChamberLengthOrRadius": {
                "type": "real",
                "Description": "Length or, in the event of the shape being circular in plan, the radius of the chamber.\n"
              },
              "ChamberWidth": {
                "type": "real",
                "Description": "Width, in the event of the shape being non circular in plan.\n"
              },
              "InvertLevel": {
                "type": "real",
                "Description": "Level of the lowest part of the cross section as measured from ground level.\n"
              },
              "SoffitLevel": {
                "type": "real",
                "Description": "Level of the highest internal part of the cross section as measured from ground level.\n"
              },
              "WallThickness": {
                "type": "real",
                "Description": "The thickness of the chamber wall construction\n\n.\n\nNOTE: It is assumed that chamber walls will be constructed at a single thickness.\n"
              },
              "WithBackdrop": {
                "type": "boolean",
                "Description": "Indicates whether the chamber has a backdrop or tumbling bay (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcDistributionChamberElement.VALVECHAMBER": {
        "Parent": "IfcDistributionChamberElement",
        "Description": "Chamber that houses a valve(s).\n\n\n",
        "Psets": {
          "Pset_DistributionChamberElementTypeValveChamber": {
            "Properties": {
              "BaseThickness": {
                "type": "real",
                "Description": "The thickness of the chamber base construction.\n\nNOTE: It is assumed that chamber base will be constructed at a single thickness.\n"
              },
              "ChamberLengthOrRadius": {
                "type": "real",
                "Description": "Length or, in the event of the shape being circular in plan, the radius of the chamber.\n"
              },
              "ChamberWidth": {
                "type": "real",
                "Description": "Width, in the event of the shape being non circular in plan.\n"
              },
              "WallThickness": {
                "type": "real",
                "Description": "The thickness of the chamber wall construction\n\n.\n\nNOTE: It is assumed that chamber walls will be constructed at a single thickness.\n"
              }
            }
          }
        }
      },
      "IfcDistributionChamberElement.FORMEDDUCT": {
        "Parent": "IfcDistributionChamberElement",
        "Description": "",
        "Psets": {
          "Pset_DistributionChamberElementTypeFormedDuct": {
            "Properties": {
              "AccessCoverLoadRating": {
                "type": "string",
                "Description": "The load rating of the access cover (which may be a value or an alphanumerically defined class rating).\n"
              },
              "BaseThickness": {
                "type": "real",
                "Description": "The thickness of the chamber base construction.\n\nNOTE: It is assumed that chamber base will be constructed at a single thickness.\n"
              },
              "ClearDepth": {
                "type": "real",
                "Description": "Clear depth of the object (elevator). It indicates the distance from the inner surface of the elevator door to the opposite surface of the elevator car. \n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              },
              "ClearWidth": {
                "type": "real",
                "Description": "Actual clear width measured as the clear space for accessibility and egress; it is a measured distance betwen the two handrails or the wall and a handrail on a ramp.\n\nThe shape information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the shape properties, provided in the attached property, the geometric parameters take precedence.\n"
              },
              "WallThickness": {
                "type": "real",
                "Description": "The thickness of the chamber wall construction\n\n.\n\nNOTE: It is assumed that chamber walls will be constructed at a single thickness.\n"
              }
            }
          }
        }
      },
      "IfcDistributionChamberElement.METERCHAMBER": {
        "Parent": "IfcDistributionChamberElement",
        "Description": "Chamber that houses a meter(s).\n\n\n",
        "Psets": {
          "Pset_DistributionChamberElementTypeMeterChamber": {
            "Properties": {
              "BaseThickness": {
                "type": "real",
                "Description": "The thickness of the chamber base construction.\n\nNOTE: It is assumed that chamber base will be constructed at a single thickness.\n"
              },
              "ChamberLengthOrRadius": {
                "type": "real",
                "Description": "Length or, in the event of the shape being circular in plan, the radius of the chamber.\n"
              },
              "ChamberWidth": {
                "type": "real",
                "Description": "Width, in the event of the shape being non circular in plan.\n"
              },
              "WallThickness": {
                "type": "real",
                "Description": "The thickness of the chamber wall construction\n\n.\n\nNOTE: It is assumed that chamber walls will be constructed at a single thickness.\n"
              }
            }
          }
        }
      },
      "IfcDistributionControlElement": {
        "Parent": "IfcDistributionElement",
        "Description": "The distribution element _IfcDistributionControlElement_ defines occurrence elements of a building automation control system that are used to impart control over elements of a distribution system.\n\n\n\n_IfcDistributionControlElement_ defines elements of a building automation control system. These are typically used to control distribution system elements to maintain variables such as temperature, humidity, pressure, flow, power, or lighting levels, through the modulation, staging or sequencing of mechanical or electrical devices. The three general functional categories of control elements are as follows:\n\n\n\n* Impart control over flow control elements (_IfcFlowController_) in a distribution system such as dampers, valves, or relays, typically through the use of actuation (_IfcActuator_).\n\n* Sensing elements (_IfcSensor_) that measure changes in the controlled variable such as temperature, humidity, pressure, or flow.\n\n* Controllers (_IfcController_) typically classified according to the control action they seek to perform and generally responsible for making decisions about the elements under control.\n\n\n\nSince _IfcDistributionControlElement_ and its subtypes typically relate to many different distribution flow elements (_IfcDistributionFlowElement_), the objectified relationship _IfcRelFlowControlElements_ has been provided to relate control and flow elements as required.\n\n\n\nThe key distinction between _IfcDistributionFlowElement_ and _IfcDistributionControlElement_ is whether it is internal or external to the flow system, respectively. For example, the distinction between _IfcFlowMeter_ (subtype of _IfcDistributionFlowElement_ measuring a flow quantity) and _IfcFlowInstrument_ (subtype of _IfcDistributionControlElement_ measuring a flow quality), is based on this principal. A physical device that connects within the flow system in which it measures (having inlet/outlet pipes for the measured substance) follows the _IfcDistributionFlowElement_ hierarchy (and therefore _IfcFlowMeter_ which measures the flow internally). Otherwise, if it monitors/controls but does not connect inline within the flow system (it is external or is a component of another device), then it follows the _IfcDistributionControlElement_ hierarchy (and therefore _IfcFlowInstrument_ which may display various attributes through connected sensors).\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _ControlElementId_ attribute deleted; replaced by classification usage. Ports are now primarily defined using _IfcRelNests_ to enable definition of ports at type definitions (both forward and backward compatible), provide a logical order, and reduce the number of relationship objects needed. The relationship _IfcRelConnectsPortToElement_ is still supported, however is now specific to dynamically connected ports.\n\n\n"
      },
      "IfcDistributionFlowElement": {
        "Parent": "IfcDistributionElement",
        "Description": "The distribution element _IfcDistributionFlowElement_ defines occurrence elements of a distribution system that facilitate the distribution of energy or matter, such as air, water or power.\n\n\n\n> EXAMPLE&nbsp; Examples of distribution flow elements are ducts, pipes, wires, fittings, and equipment.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Ports are now primarily defined using _IfcRelNests_ to enable definition of ports at type definitions (both forward and backward compatible), provide a logical order, and reduce the number of relationship objects needed. The relationship _IfcRelConnectsPortToElement_ is still supported, however is now specific to dynamically connected ports.\n\n\n",
        "Psets": {
          "Pset_SoundGeneration": {
            "Properties": {
              "SoundCurve": {
                "type": "real",
                "Description": "Table of sound frequencies and sound power measured in decibels at a reference power of 1 picowatt(10\\^(-12) watt) for the referenced octave band frequency.\n"
              }
            }
          }
        }
      },
      "IfcDistributionFlowElementType": {
        "Parent": "IfcDistributionElementType",
        "Description": "The element type _IfcDistributionFlowElementType_ defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (the specific product information that is common to all occurrences of that product type).\n\n\n\nDistribution flow element types (orthe instantiable subtypes) may be exchanged without being already assigned to occurrences.\n\n\n\nThe occurrences of the _IfcDistributionFlowElementType_ are represented by instances of _IfcDistributionFlowElement_ or its subtypes.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Ports may now be defined using _IfcRelNests_ to enable definition of ports at type definitions (both forward and backward compatible), provide a logical order, and reduce the number of relationship objects needed. The relationship _IfcRelConnectsPortToElement_ is still supported on occurrence objects, however is now specific to dynamically connected ports.\n"
      },
      "IfcDistributionPort": {
        "Parent": "IfcPort",
        "Description": "A distribution port is an inlet or outlet of a product through which a particular substance may flow.\n\n\n\nDistribution ports are used for passage of solid, liquid, or gas substances, as well as electricity for power or communications. Flow segments (pipes, ducts, cables) may be used to connect ports across products. Distribution ports are defined by system type and flow direction such that for two ports to be connected, they must share the same system type and have opposite flow directions (one side being a _SOURCE_ and the other being a _SINK_). Ports are similar to openings in that they do not have any visible geometry; such geometry is captured at the shape representation of the enclosing element or element type. Ports may have placement that indicates the position and orientation of the connection.\n\n\n\nPorts are assigned the distribution systems in order to indicate its role in a particular system, e.g. cold water inlet.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Ports are now related to products and product types using the _IfcRelNests_ relationship; use of _IfcRelConnectsPortToElement_ is now reserved for dynamically attached ports (such as drilling a hole in a tank).\n\n\n",
        "Psets": {
          "Pset_DistributionPortCommon": {
            "Properties": {
              "ColorCode": {
                "type": "string",
                "Description": "Name of a color for identifying the connector, if applicable.\n"
              },
              "PortNumber": {
                "type": "integer",
                "Description": "The port index for logically ordering the port within the containing element or element type.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "SystemType": {
                "values": [
                  "RETURN_CIRCUIT",
                  "MUNICIPALSOLIDWASTE",
                  "POWERGENERATION",
                  "SIGNAL",
                  "GAS",
                  "WATERSUPPLY",
                  "OVERHEAD_CONTACTLINE_SYSTEM",
                  "ELECTROACOUSTIC",
                  "COMMUNICATION",
                  "CHILLEDWATER",
                  "RAINWATER",
                  "STORMWATER",
                  "VACUUM",
                  "AUDIOVISUAL",
                  "FUEL",
                  "LIGHTING",
                  "ELECTRICAL",
                  "WASTEWATER",
                  "VENT",
                  "DOMESTICHOTWATER",
                  "DOMESTICCOLDWATER",
                  "SECURITY",
                  "CONTROL",
                  "CONDENSERWATER",
                  "OPERATIONAL",
                  "FIREPROTECTION",
                  "AIRCONDITIONING",
                  "SEWAGE",
                  "DRAINAGE",
                  "CHEMICAL",
                  "DATA",
                  "LIGHTNINGPROTECTION",
                  "REFRIGERATION",
                  "EXHAUST",
                  "CATENARY_SYSTEM",
                  "OIL",
                  "CONVEYING",
                  "HAZARDOUS",
                  "TV",
                  "DISPOSAL",
                  "HEATING",
                  "TELEPHONE",
                  "VENTILATION",
                  "EARTHING",
                  "COMPRESSEDAIR",
                  "USERDEFINED",
                  "NOTDEFINED"
                ],
                "type": "IfcDistributionSystemEnum",
                "Description": null
              },
              "FlowDirection": {
                "values": [
                  "SOURCE",
                  "SINK",
                  "SOURCEANDSINK",
                  "NOTDEFINED"
                ],
                "type": "IfcFlowDirectionEnum",
                "Description": "Enumeration that identifies if this port is a Sink (inlet), a Source (outlet) or both a SinkAndSource."
              }
            }
          }
        }
      },
      "IfcDistributionPort.DUCT": {
        "Parent": "IfcDistributionPort",
        "Description": "Connection to duct segment or fitting for distribution of air.\n\n\n",
        "Psets": {
          "Pset_DistributionPortPHistoryDuct": {
            "Properties": {
              "FlowCondition": {
                "type": "real",
                "Description": "Defines the flow condition as a percentage of the cross-sectional area.\n"
              },
              "MassFlowRate": {
                "type": "real",
                "Description": "The mass flow rate of the fluid.\n"
              },
              "Pressure": {
                "type": "real",
                "Description": "The pressure of the fluid.\n"
              },
              "Temperature": {
                "type": "real",
                "Description": "Temperature of the fluid. For air this value represents the dry bulb temperature.\n"
              },
              "Velocity": {
                "type": "real",
                "Description": "The velocity of the fluid.\n"
              },
              "VolumetricFlowRate": {
                "type": "real",
                "Description": "The volumetric flow rate of the fluid.\n"
              },
              "WetBulbTemperature": {
                "type": "real",
                "Description": "Wet bulb temperature of the fluid; only applicable if the fluid is air.\n"
              }
            }
          },
          "Pset_DistributionPortTypeDuct": {
            "Properties": {
              "ConnectionSubType": {
                "type": "string",
                "Description": "The physical port connection subtype that further qualifies the ConnectionType. The following values are recommended:\n\n\n\n* ACPLUG: A, B, C, D, E, F, EF, G, H, I, J, K, L, M\n\n* DIN: Mini3P, Mini4P, Mini5P, Mini6P, Mini7P, Mini8P, Mini9P\n\n* DSub: DA15, DB25, DC37, DD50, DE9, DE15\n\n* EIAJ: RC5720\n\n* HDMI: A, B, C\n\n* RADIO: IEEE802.11g, IEEE802.11n \n\n* RJ: 4P4C, 6P2C, 8P8C\n\n* SOCKET: E-11, E-12, E-14, E-17, E-26, E-27, E-39, E-40\n\n* TRS: TS_Mini, TS_SubMini, TRS_Mini, TRS_SubMini\n"
              },
              "ConnectionType": {
                "type": "string",
                "Description": "The end-style treatment of the duct port:\n\n\n\nBEADEDSLEEVE: Beaded Sleeve. \n\nCOMPRESSION: Compression. \n\nCRIMP: Crimp. \n\nDRAWBAND: Drawband. \n\nDRIVESLIP: Drive slip. \n\nFLANGED: Flanged. \n\nOUTSIDESLEEVE: Outside Sleeve. \n\nSLIPON: Slipon. \n\nSOLDERED: Soldered. \n\nSSLIP: S-Slip. \n\nSTANDINGSEAM: Standing seam. \n\nSWEDGE: Swedge. \n\nWELDED: Welded. \n\nOTHER: Another type of end-style has been applied.\n\nNONE: No end-style has been applied.\n"
              },
              "DryBulbTemperature": {
                "type": "real",
                "Description": "Loads from the dry bulb temperature.\n"
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Pressure": {
                "type": "real",
                "Description": "The pressure of the fluid.\n"
              },
              "Velocity": {
                "type": "real",
                "Description": "The velocity of the fluid.\n"
              },
              "VolumetricFlowRate": {
                "type": "real",
                "Description": "The volumetric flow rate of the fluid.\n"
              },
              "WetBulbTemperature": {
                "type": "real",
                "Description": "Wet bulb temperature of the fluid; only applicable if the fluid is air.\n"
              }
            }
          }
        }
      },
      "IfcDistributionPort.WIRELESS": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.PIPE": {
        "Parent": "IfcDistributionPort",
        "Description": "Connection to pipe segment or fitting for distribution of solid, liquid, or gas.\n\n\n",
        "Psets": {
          "Pset_DistributionPortPHistoryPipe": {
            "Properties": {
              "Flowrate": {
                "type": "real",
                "Description": "The actual operational fluid flowrate.\n"
              },
              "Pressure": {
                "type": "real",
                "Description": "The pressure of the fluid.\n"
              },
              "Temperature": {
                "type": "real",
                "Description": "Temperature of the fluid. For air this value represents the dry bulb temperature.\n"
              }
            }
          },
          "Pset_DistributionPortTypePipe": {
            "Properties": {
              "ConnectionSubType": {
                "type": "string",
                "Description": "The physical port connection subtype that further qualifies the ConnectionType. The following values are recommended:\n\n\n\n* ACPLUG: A, B, C, D, E, F, EF, G, H, I, J, K, L, M\n\n* DIN: Mini3P, Mini4P, Mini5P, Mini6P, Mini7P, Mini8P, Mini9P\n\n* DSub: DA15, DB25, DC37, DD50, DE9, DE15\n\n* EIAJ: RC5720\n\n* HDMI: A, B, C\n\n* RADIO: IEEE802.11g, IEEE802.11n \n\n* RJ: 4P4C, 6P2C, 8P8C\n\n* SOCKET: E-11, E-12, E-14, E-17, E-26, E-27, E-39, E-40\n\n* TRS: TS_Mini, TS_SubMini, TRS_Mini, TRS_SubMini\n"
              },
              "ConnectionType": {
                "type": "string",
                "Description": "The end-style treatment of the duct port:\n\n\n\nBEADEDSLEEVE: Beaded Sleeve. \n\nCOMPRESSION: Compression. \n\nCRIMP: Crimp. \n\nDRAWBAND: Drawband. \n\nDRIVESLIP: Drive slip. \n\nFLANGED: Flanged. \n\nOUTSIDESLEEVE: Outside Sleeve. \n\nSLIPON: Slipon. \n\nSOLDERED: Soldered. \n\nSSLIP: S-Slip. \n\nSTANDINGSEAM: Standing seam. \n\nSWEDGE: Swedge. \n\nWELDED: Welded. \n\nOTHER: Another type of end-style has been applied.\n\nNONE: No end-style has been applied.\n"
              },
              "FlowCondition": {
                "type": "real",
                "Description": "Defines the flow condition as a percentage of the cross-sectional area.\n"
              },
              "InnerDiameter": {
                "type": "real",
                "Description": "The actual inner diameter of the pipe.\n"
              },
              "MassFlowRate": {
                "type": "real",
                "Description": "The mass flow rate of the fluid.\n"
              },
              "NominalDiameter": {
                "type": "real",
                "Description": "Nominal diameter or width of the tubes in the tube bundle.\n"
              },
              "OuterDiameter": {
                "type": "real",
                "Description": "The actual outer diameter of the pipe.\n"
              },
              "Pressure": {
                "type": "real",
                "Description": "The pressure of the fluid.\n"
              },
              "Temperature": {
                "type": "real",
                "Description": "Temperature of the fluid. For air this value represents the dry bulb temperature.\n"
              },
              "Velocity": {
                "type": "real",
                "Description": "The velocity of the fluid.\n"
              },
              "VolumetricFlowRate": {
                "type": "real",
                "Description": "The volumetric flow rate of the fluid.\n"
              }
            }
          }
        }
      },
      "IfcDistributionPort.CABLE": {
        "Parent": "IfcDistributionPort",
        "Description": "Connection to cable segment or fitting for distribution of electricity.\n\n\n",
        "Psets": {
          "Pset_DistributionPortPHistoryCable": {
            "Properties": {
              "ApparentPower": {
                "type": "real",
                "Description": "Apparent power.\n"
              },
              "Current": {
                "type": "real",
                "Description": "The actual current and operable range.\n"
              },
              "DataReceived": {
                "type": "string",
                "Description": "For data ports, captures log of data received.  The LIST at IfcTimeSeriesValue.Values may split out data according to Pset_DistributionPortTypeCable.Protocols.\n"
              },
              "DataTransmitted": {
                "type": "string",
                "Description": "For data ports, captures log of data transmitted.  The LIST at IfcTimeSeriesValue.Values may split out data according to Pset_DistributionPortTypeCable.Protocols.\n"
              },
              "PowerFactor": {
                "type": "real",
                "Description": "The ratio between the rated electrical power and the product of the rated current and rated voltage\n"
              },
              "ReactivePower": {
                "type": "real",
                "Description": "Reactive power.\n"
              },
              "RealPower": {
                "type": "real",
                "Description": "Real power.\n"
              },
              "Voltage": {
                "type": "real",
                "Description": "The actual voltage and operable range.\n"
              }
            }
          },
          "Pset_DistributionPortTypeCable": {
            "Properties": {
              "ConductorFunction": {
                "type": "string",
                "Description": "Function of a line conductor to which a device  is intended to be connected where L1, L2 and L3 represent the phase lines according to IEC 60446 notation (sometimes phase lines may be referenced by color [Red, Blue, Yellow] or by number [1, 2, 3] etc). Protective Earth is sometimes also known as CPC or common protective conductor. Note that for an electrical device, a set of line conductor functions may be applied.\n"
              },
              "ConnectionGender": {
                "type": "string",
                "Description": "The physical connection gender.\n"
              },
              "ConnectionSubtype": {
                "type": "string",
                "Description": ""
              },
              "ConnectionType": {
                "type": "string",
                "Description": "The end-style treatment of the duct port:\n\n\n\nBEADEDSLEEVE: Beaded Sleeve. \n\nCOMPRESSION: Compression. \n\nCRIMP: Crimp. \n\nDRAWBAND: Drawband. \n\nDRIVESLIP: Drive slip. \n\nFLANGED: Flanged. \n\nOUTSIDESLEEVE: Outside Sleeve. \n\nSLIPON: Slipon. \n\nSOLDERED: Soldered. \n\nSSLIP: S-Slip. \n\nSTANDINGSEAM: Standing seam. \n\nSWEDGE: Swedge. \n\nWELDED: Welded. \n\nOTHER: Another type of end-style has been applied.\n\nNONE: No end-style has been applied.\n"
              },
              "Current": {
                "type": "real",
                "Description": "The actual current and operable range.\n"
              },
              "CurrentContent3rdHarmonic": {
                "type": "real",
                "Description": "The ratio between the third harmonic current and the phase current.\n"
              },
              "Power": {
                "type": "real",
                "Description": "The actual power consumption of the pump.\n"
              },
              "Protocols": {
                "type": "string",
                "Description": "For data ports, identifies the protocols used as defined by the Open System Interconnection (OSI) Basic Reference Model (ISO 7498).  Layers include: 1. Physical; 2. DataLink; 3. Network; 4. Transport; 5. Session; 6. Presentation; 7. Application.  Example: 3:IP, 4:TCP, 5:HTTP\n"
              },
              "Voltage": {
                "type": "real",
                "Description": "The actual voltage and operable range.\n"
              }
            }
          }
        }
      },
      "IfcDistributionPort.CABLECARRIER": {
        "Parent": "IfcDistributionPort",
        "Description": "Connection to cable carrier segment or fitting for enclosing cables.\n\n\n"
      },
      "IfcDistributionSystem": {
        "Parent": "IfcSystem",
        "Description": "A distribution system is a network designed to receive, store, maintain, distribute, or control the flow of a distribution media. A common example is a heating hot water system that consists of a pump, a tank, and an interconnected piping system for distributing hot water to terminals.  \n\n\n\nThe group _IfcDistributionSystem_ defines the occurrence of a specialized system for use within the context of building services or utilities for built facilities.  \n\n\n\nImportant functionalities for the description of a distribution system are derived from existing IFC entities:  \n\n\n\n* From _IfcSystem_ it inherits the ability to couple the built system via _IfcRelReferencedInSpatialStructure_ to one or more _IfcSpatialElement_ subtypes as necessary.\n\n\n\n* From _IfcGroup_ it inherits the inverse attribute IsGroupedBy, pointing to the relationship class _IfcRelAssignsToGroup_. This allows the grouping of distribution elements (instances of _IfcDistributionElement_ subtypes).\n\n\n\n* From _IfcObjectDefinition_ it inherits the inverse attribute IsDecomposedBy pointing to the relationship class _IfcRelAggregates_. It provides the hierarchy between the separate (partial) distribution systems. For example, an electrical main circuit may be aggregated into branch circuits.\n\n\n\n  \n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; For electrical power systems, _IfcElectricalCircuit_ has been used for low-voltage (12-1000 V) power circuits and has been replaced by _IfcDistributionCircuit_ in IFC4; _IfcDistributionSystem_ with PredefinedType 'ELECTRICAL' should be used for overall power systems, and _IfcDistributionCircuit_ with PredefinedType 'ELECTRICAL' should be used for each switched circuit.\n\n\n",
        "Psets": {
          "Pset_DistributionSystemCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "LongName": {
                "type": "string",
                "Description": "Long name for a distribution system, used for informal purposes. It should be used, if available, in conjunction with the inherited _Name_ attribute.\\X\\0D\n> NOTE&nbsp; In many scenarios the _Name_ attribute refers to the short name or number of a distribution system or branch circuit, and the _LongName_ refers to a descriptive name."
              }
            }
          }
        }
      },
      "IfcDistributionPort.RETURN_CIRCUIT": {
        "Parent": "IfcDistributionPort",
        "Description": "A distribution system which forms the intended path for the traction return current and the current under fault conditions.\n\n\n"
      },
      "IfcDistributionPort.MUNICIPALSOLIDWASTE": {
        "Parent": "IfcDistributionPort",
        "Description": "Items consumed and discarded, commonly known as trash or garbage.\n\n\n"
      },
      "IfcDistributionPort.POWERGENERATION": {
        "Parent": "IfcDistributionPort",
        "Description": "A path for power generation.\n\n\n"
      },
      "IfcDistributionPort.SIGNAL": {
        "Parent": "IfcDistributionPort",
        "Description": "A raw analog signal, such as modulated data or measurements from sensors.\n\n\n"
      },
      "IfcDistributionPort.GAS": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.WATERSUPPLY": {
        "Parent": "IfcDistributionPort",
        "Description": "Arbitrary water supply.\n\n\n"
      },
      "IfcDistributionPort.OVERHEAD_CONTACTLINE_SYSTEM": {
        "Parent": "IfcDistributionPort",
        "Description": "An overhead contact line system above the upper limit of the train using an overhead contact line and a catenary system to supply current to traction units.\n\n\n"
      },
      "IfcDistributionPort.ELECTROACOUSTIC": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.COMMUNICATION": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.CHILLEDWATER": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.RAINWATER": {
        "Parent": "IfcDistributionPort",
        "Description": "Rainwater resulting from precipitation which directly falls on a parcel.\n\n\n"
      },
      "IfcDistributionPort.STORMWATER": {
        "Parent": "IfcDistributionPort",
        "Description": "Stormwater resulting from precipitation which runs off or travels over the ground surface.\n\n\n"
      },
      "IfcDistributionPort.VACUUM": {
        "Parent": "IfcDistributionPort",
        "Description": "Vacuum distribution system.\n\n\n"
      },
      "IfcDistributionPort.AUDIOVISUAL": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.FUEL": {
        "Parent": "IfcDistributionPort",
        "Description": "Arbitrary supply of fuel.\n\n\n"
      },
      "IfcDistributionPort.LIGHTING": {
        "Parent": "IfcDistributionPort",
        "Description": "A circuit dedicated for lighting, such as a fixture having sockets for lamps.\n\n\n"
      },
      "IfcDistributionPort.ELECTRICAL": {
        "Parent": "IfcDistributionPort",
        "Description": "A circuit for delivering electrical power.\n\n\n",
        "Psets": {
          "Pset_DistributionSystemTypeElectrical": {
            "Properties": {
              "Diversity": {
                "type": "real",
                "Description": "The ratio, expressed as a numerical\n\nvalue or as a percentage, of the\n\nsimultaneous maximum demand of\n\na group of electrical appliances or\n\nconsumers within a specified period,\n\nto the sum of their individual maximum\n\ndemands within the same\n\nperiod. The group of electrical appliances is in this case connected to this circuit. Defenition from IEC 60050, IEV 691-10-04 \n\nNOTE1: It is often not desirable to size each conductor in a distribution system to support the total connected load at that point in the network. Diversity is applied on the basis of the anticipated loadings that are likely to result from all loads not being connected at the same time.\n\nNOTE2: Diversity is applied to final circuits only, not to sub-main circuits supplying other DBs.\n"
              },
              "ElectricalSystemCategory": {
                "type": "string",
                "Description": "Designates the voltage range of the circuit, according to IEC.  HIGHVOLTAGE indicates >1000V AC or >1500V DV; LOWVOLTAGE indicates 50-1000V AC or 120-1500V DC; EXTRALOWVOLTAGE indicates <50V AC or <120V DC.\n"
              },
              "ElectricalSystemType": {
                "type": "string",
                "Description": "For certain purposes of electrical regulations, IEC 60364 defines types of system using type identifiers. Assignment of identifiers depends upon the relationship of the source, and of exposed conductive parts of the installation, to Ground (Earth).   Identifiers that may be assigned through IEC 60364 are: \n\n\n\n\u2022TN type system, a system having one or more points of the source of energy directly earthed, the exposed conductive parts of the installation being connected to that point by protective conductors, \n\n\u2022TN C type system, a TN type system in which neutral and protective functions are combined in a single conductor throughout the system, \n\n\u2022TN S type system, a TN type system having separate neutral and protective conductors throughout the system, \n\n\u2022TN C S type system, a TN type system in which neutral and protective functions are combined in a single conductor in part of the system, \n\n\u2022TT type system, a system having one point of the source of energy directly earthed, the exposed conductive parts of the installation being connected to earth electrodes electrically independent of the earth electrodes of the source, \n\n\u2022IT type system, a system having no direct connection between live parts and Earth, the exposed conductive parts of the electrical installation being earthed.\n"
              },
              "MaximumAllowedVoltageDrop": {
                "type": "real",
                "Description": "The maximum voltage drop across the circuit that must not be exceeded. \n\nThere are two  voltage drop limit settings that may be applied; one for sub-main circuits, and one in each Distribution Board or Consumer Unit for final circuits connected to that board. The settings should limit the overall voltage drop to the required level. Default settings of 1.5% for sub-main circuits and 2.5% for final circuits, giving an overall limit of 4% may be applied.\n\nNOTE: This value may also be specified as a constraint within an IFC model if required but is included within the property set at this stage pending implementation of the required capabilities within software applications.\n"
              },
              "NetImpedance": {
                "type": "real",
                "Description": "The maximum earth loop impedance upstream of a circuit (typically stated as the variable Zs). This value is for 55o C (130oF) Celsius usage.\n"
              },
              "NumberOfLiveConductors": {
                "type": "integer",
                "Description": "Number of live conductors within this circuit. Either this property or the ConductorFunction property (if only one) may be asserted.\n"
              }
            }
          }
        }
      },
      "IfcDistributionPort.WASTEWATER": {
        "Parent": "IfcDistributionPort",
        "Description": "Water adversely affected in quality by anthropogenic influence, possibly originating from sewage, drainage, or other source.\n\n\n"
      },
      "IfcDistributionPort.VENT": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.DOMESTICHOTWATER": {
        "Parent": "IfcDistributionPort",
        "Description": "Heated potable water distribution system.\n\n\n"
      },
      "IfcDistributionPort.DOMESTICCOLDWATER": {
        "Parent": "IfcDistributionPort",
        "Description": "Unheated potable water distribution system.\n\n\n"
      },
      "IfcDistributionPort.SECURITY": {
        "Parent": "IfcDistributionPort",
        "Description": "A transport or network dedicated to security system usage.\n\n\n"
      },
      "IfcDistributionPort.CONTROL": {
        "Parent": "IfcDistributionPort",
        "Description": "A transport or network dedicated to control system usage.\n\n\n"
      },
      "IfcDistributionPort.CONDENSERWATER": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.OPERATIONAL": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.FIREPROTECTION": {
        "Parent": "IfcDistributionPort",
        "Description": "Fire protection sprinkler system.\n\n\n"
      },
      "IfcDistributionPort.AIRCONDITIONING": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.SEWAGE": {
        "Parent": "IfcDistributionPort",
        "Description": "Sewage collection system.\n\n\n"
      },
      "IfcDistributionPort.DRAINAGE": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.CHEMICAL": {
        "Parent": "IfcDistributionPort",
        "Description": "Arbitrary chemical further qualified by property set, such as for medical or industrial use.\n\n\n"
      },
      "IfcDistributionPort.DATA": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.LIGHTNINGPROTECTION": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.REFRIGERATION": {
        "Parent": "IfcDistributionPort",
        "Description": "Refrigerant distribution system for purposes of fulfilling all or parts of a refrigeration cycle.\n\n\n"
      },
      "IfcDistributionPort.EXHAUST": {
        "Parent": "IfcDistributionPort",
        "Description": "Exhaust air collection system for removing stale or noxious air from one or more spaces.\n\n\n"
      },
      "IfcDistributionPort.CATENARY_SYSTEM": {
        "Parent": "IfcDistributionPort",
        "Description": "A longitudinal distribution system that supports contact wires, including catenary wire droppers and stich wires.\n\n\n"
      },
      "IfcDistributionPort.OIL": {
        "Parent": "IfcDistributionPort",
        "Description": "Oil distribution system.\n\n\n"
      },
      "IfcDistributionPort.CONVEYING": {
        "Parent": "IfcDistributionPort",
        "Description": "Arbitrary supply of substances.\n\n\n"
      },
      "IfcDistributionPort.HAZARDOUS": {
        "Parent": "IfcDistributionPort",
        "Description": ""
      },
      "IfcDistributionPort.TV": {
        "Parent": "IfcDistributionPort",
        "Description": "A transport of multiple media sources such as analog cable TV, satellite TV, or over-the-air TV.\n\n\n"
      },
      "IfcDistributionPort.DISPOSAL": {
        "Parent": "IfcDistributionPort",
        "Description": "Arbitrary disposal of substances.\n\n\n"
      },
      "IfcDistributionPort.HEATING": {
        "Parent": "IfcDistributionPort",
        "Description": "Water or steam heated from a boiler and circulated through radiators.\n\n\n"
      },
      "IfcDistributionPort.TELEPHONE": {
        "Parent": "IfcDistributionPort",
        "Description": "A transport or network dedicated to telephone system usage.\n\n\n"
      },
      "IfcDistributionPort.VENTILATION": {
        "Parent": "IfcDistributionPort",
        "Description": "Ventilation air distribution system involved in either the exchange of air to the outside as well as circulation of air within a building.\n\n\n",
        "Psets": {
          "Pset_DistributionSystemTypeVentilation": {
            "Properties": {
              "AspectRatio": {
                "type": "real",
                "Description": "The default aspect ratio.\n"
              },
              "DesignName": {
                "type": "string",
                "Description": "A name for the design values.\n"
              },
              "DuctSizingMethod": {
                "type": "PEnum_DuctSizingMethod",
                "Description": "Enumeration that identifies the methodology to be used to size system components.\n",
                "values": [
                  "CONSTANTFRICTION",
                  "CONSTANTPRESSURE",
                  "STATICREGAIN"
                ]
              },
              "FrictionLoss": {
                "type": "real",
                "Description": "The pressure loss due to friction per unit length. (Data type = PressureMeasure/LengthMeasure)\n"
              },
              "LeakageClass": {
                "type": "real",
                "Description": "Nominal leakage rating for the system components.\n"
              },
              "MaximumVelocity": {
                "type": "real",
                "Description": "The maximum design velocity of the air in the duct or fitting.\n"
              },
              "MinimumHeight": {
                "type": "real",
                "Description": "The minimum duct height for rectangular, oval or round duct.\n"
              },
              "MinimumWidth": {
                "type": "real",
                "Description": "The minimum duct width for oval or rectangular duct.\n"
              },
              "PressureClass": {
                "type": "real",
                "Description": "Pressure classification as defined by the authority having jurisdiction (e.g., SMACNA, etc.).\n"
              },
              "ScrapFactor": {
                "type": "real",
                "Description": "Sheet metal scrap factor.\n"
              }
            }
          }
        }
      },
      "IfcDistributionPort.EARTHING": {
        "Parent": "IfcDistributionPort",
        "Description": "A path for equipotential bonding, conducting current to the ground.\n\n\n"
      },
      "IfcDistributionPort.COMPRESSEDAIR": {
        "Parent": "IfcDistributionPort",
        "Description": "Compressed air system.\n\n\n"
      },
      "IfcEnergyConversionDevice": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element _IfcEnergyConversionDevice_ defines the occurrence of a device used to perform energy conversion or heat transfer and typically participates in a flow distribution system. Its type is defined by _IfcEnergyConversionDeviceType_ or its subtypes.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.\n"
      },
      "IfcFlowController": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element _IfcFlowController_ defines the occurrence of elements of a distribution system that are used to regulate flow through a distribution system. Examples include dampers, valves, switches, and relays. Its type is defined by _IfcFlowControllerType_ or subtypes.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.\n"
      },
      "IfcFlowFitting": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element _IfcFlowFitting_ defines the occurrence of a junction or transition in a flow distribution system, such as an elbow or tee. Its type is defined by _IfcFlowFittingType_ or its subtypes.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.  \n\n>\n"
      },
      "IfcFlowMovingDevice": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element _IfcFlowMovingDevice_ defines the occurrence of an apparatus used to distribute, circulate or perform conveyance of fluids, including liquids and gases (such as a pump or fan), and typically participates in a flow distribution system. Its type is defined by _IfcFlowMovingDeviceType_ or its subtypes.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.\n"
      },
      "IfcFlowSegment": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element _IfcFlowSegment_ defines the occurrence of a segment of a flow distribution system.\n\n\n\nThe _IfcFlowSegment_ defines a particular occurrence of a segment inserted in the spatial context of a project. The parameters defining the type of the segment and/or its shape are defined by the _IfcFlowSegmentType_, which is related by the inverse relationship IsDefinedBy pointing to _IfcRelDefinesByType_.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.\n"
      },
      "IfcFlowStorageDevice": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element _IfcFlowStorageDevice_ defines the occurrence of a device that participates in a distribution system and is used for temporary storage (such as a tank). Its type is defined by _IfcFlowStorageDeviceType_ or its subtypes.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.\n"
      },
      "IfcFlowTerminal": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element _IfcFlowTerminal_ defines the occurrence of a permanently attached element that acts as a terminus or beginning of a distribution system (such as an air outlet, drain, water closet, or sink). A terminal is typically a point at which a system interfaces with an external environment. Its type is defined by _IfcFlowTerminalType_ or its subtypes.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.\n"
      },
      "IfcFlowTerminalType": {
        "Parent": "IfcDistributionFlowElementType",
        "Description": "The element type _IfcFlowTerminalType_ defines a list of commonly shared property set definitions of a flow terminal and an optional set of product representations. It is used to define a flow terminal specification (the specific product information that is common to all occurrences of that product type).\n\n\n\nA flow terminal type is used to define the common properties of a flow terminal that may be applied to many occurrences of that type. A flow terminal acts as a terminus or beginning element in a distribution system such as a ceiling register in a ducted air distribution system, a sink in a waste-water system, or a light fixture in an electrical lighting system. Flow terminal types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.\n\n\n\nThe occurrences of the _IfcFlowTerminalType_ are represented by instances of _IfcFlowTerminal_ or its subtypes.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n"
      },
      "IfcFlowTreatmentDevice": {
        "Parent": "IfcDistributionFlowElement",
        "Description": "The distribution flow element _IfcFlowTreatmentDevice_ defines the occurrence of a device typically used to remove unwanted matter from a fluid, either liquid or gas, and typically participates in a flow distribution system. Its type is defined by _IfcFlowTreatmentDeviceType_ or its subtypes.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; This entity has been deprecated for instantiation and will become ABSTRACT in a future release; new subtypes should now be used instead.\n"
      },
      "IfcBuildingElementPart": {
        "Parent": "IfcElementComponent",
        "Description": "_IfcBuildingElementPart_ represents major components as subordinate parts of a building element. Typical usage examples include precast concrete sandwich walls, where the layers may have different geometry representations. In this case the layered material representation does not sufficiently describe the element. Each layer is represented by an own instance of the _IfcBuildingElementPart_ with its own geometry description.\n\n\n\nThe kind of building element part is further specified by a corresponding instance of _IfcBuildingElementPartType_, referred to by _IfcRelDefinesByType_.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Moved from _IfcStructuralElementsDomain_ schema to _IfcSharedComponentElements_ schema, compatible change of supertype, attribute _PredefinedType_ added.\n\n\n"
      },
      "IfcBuildingElementPart.SAFETYCAGE": {
        "Parent": "IfcBuildingElementPart",
        "Description": ""
      },
      "IfcBuildingElementPart.INSULATION": {
        "Parent": "IfcBuildingElementPart",
        "Description": "The part provides thermal insulation, for example as insulation layer between wall panels in sandwich walls or as infill in stud walls.\n\n\n"
      },
      "IfcBuildingElementPart.PRECASTPANEL": {
        "Parent": "IfcBuildingElementPart",
        "Description": "The part is a precast panel, usually as an internal or external layer in a sandwich wall panel.\n\n\n"
      },
      "IfcBuildingElementPart.ARMOURUNIT": {
        "Parent": "IfcBuildingElementPart",
        "Description": "A large quarry stone or concrete shaped unit used as erosion prevention on slopes such as revetments and breakwaters. These units are grouped together into a Course layer.\n\n> NOTE&nbsp; definition in ISO 21650: relatively large quarry stone or concrete shaped unit that is selected to fit specified geometric characteristics and density.\n\n\n"
      },
      "IfcBuildingElementPart.APRON": {
        "Parent": "IfcBuildingElementPart",
        "Description": "A form of scour protection consisting of timber, concrete, riprap, paving, or other construction placed adjacent to abutments and piers to prevent undermining.\n\n\n"
      },
      "IfcDiscreteAccessory": {
        "Parent": "IfcElementComponent",
        "Description": "A discrete accessory is a representation of different kinds of accessories included in or added to elements.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _PredefinedType_ added.\n\n\n"
      },
      "IfcDiscreteAccessory.PANEL_STRENGTHENING": {
        "Parent": "IfcDiscreteAccessory",
        "Description": ""
      },
      "IfcDiscreteAccessory.RAILPAD": {
        "Parent": "IfcDiscreteAccessory",
        "Description": ""
      },
      "IfcDiscreteAccessory.SLIDINGCHAIR": {
        "Parent": "IfcDiscreteAccessory",
        "Description": "A component which supports and retains the stock rail and a flat surface upon which the foot of the switch rail slides.\n\n\n"
      },
      "IfcDiscreteAccessory.POINTMACHINEMOUNTINGDEVICE": {
        "Parent": "IfcDiscreteAccessory",
        "Description": ""
      },
      "IfcDiscreteAccessory.ELASTIC_CUSHION": {
        "Parent": "IfcDiscreteAccessory",
        "Description": ""
      },
      "IfcDiscreteAccessory.BRACKET": {
        "Parent": "IfcDiscreteAccessory",
        "Description": "An L-shaped or similarly shaped accessory attached in a corner between elements to hold them together or to carry a secondary element.\n\n\n"
      },
      "IfcDiscreteAccessory.POINT_MACHINE_LOCKING_DEVICE": {
        "Parent": "IfcDiscreteAccessory",
        "Description": ""
      },
      "IfcDiscreteAccessory.RAILBRACE": {
        "Parent": "IfcDiscreteAccessory",
        "Description": ""
      },
      "IfcDiscreteAccessory.INSULATOR": {
        "Parent": "IfcDiscreteAccessory",
        "Description": ""
      },
      "IfcDiscreteAccessory.CABLEARRANGER": {
        "Parent": "IfcDiscreteAccessory",
        "Description": ""
      },
      "IfcDiscreteAccessory.RAIL_LUBRICATION": {
        "Parent": "IfcDiscreteAccessory",
        "Description": ""
      },
      "IfcDiscreteAccessory.SOUNDABSORPTION": {
        "Parent": "IfcDiscreteAccessory",
        "Description": "A component in the track for sound absorption and may also absorb vibrations. It is often used in combination with slab tracks.\n\n\n"
      },
      "IfcDiscreteAccessory.SHOE": {
        "Parent": "IfcDiscreteAccessory",
        "Description": "",
        "Psets": {
          "Pset_DiscreteAccessoryColumnShoe": {
            "Properties": {
              "ColumnShoeBasePlateDepth": {
                "type": "real",
                "Description": "The depth of the column shoe base plate.\n"
              },
              "ColumnShoeBasePlateThickness": {
                "type": "real",
                "Description": "The thickness of the column shoe base plate.\n"
              },
              "ColumnShoeBasePlateWidth": {
                "type": "real",
                "Description": "The width of the column shoe base plate.\n"
              },
              "ColumnShoeCasingDepth": {
                "type": "real",
                "Description": "The depth of the column shoe casing.\n"
              },
              "ColumnShoeCasingHeight": {
                "type": "real",
                "Description": "The height of the column shoe casing.\n"
              },
              "ColumnShoeCasingWidth": {
                "type": "real",
                "Description": "The width of the column shoe casing.\n"
              }
            }
          }
        }
      },
      "IfcDiscreteAccessory.ANCHORPLATE": {
        "Parent": "IfcDiscreteAccessory",
        "Description": "An accessory consisting of a steel plate, shear stud connectors or welded-on rebar which is embedded into the surface of a concrete element so that other elements can be welded or bolted onto it later.\n\n\n"
      },
      "IfcDiscreteAccessory.EXPANSION_JOINT_DEVICE": {
        "Parent": "IfcDiscreteAccessory",
        "Description": ""
      },
      "IfcDiscreteAccessory.LOCK": {
        "Parent": "IfcDiscreteAccessory",
        "Description": "A lock is a mechanical or electronic fastening device that is released either by a physical object (e.g., key, fingerprint, RFID card, security token etc.), by supplying secret information (e.g., number permutation, password), or by a combination thereof.\n\n\n"
      },
      "IfcDiscreteAccessory.TENSIONINGEQUIPMENT": {
        "Parent": "IfcDiscreteAccessory",
        "Description": "An equipment used to maintain the tension of conductors or cables.\n\n\n"
      },
      "IfcDiscreteAccessory.RAIL_MECHANICAL_EQUIPMENT": {
        "Parent": "IfcDiscreteAccessory",
        "Description": "A rail mechanical equipment is a mechnical equipment installed at railside, like blocking device, speed regulator, bias loaded inspector, track scale or controllable retarder.\n\n.\n\n\n"
      },
      "IfcDiscreteAccessory.BIRDPROTECTION": {
        "Parent": "IfcDiscreteAccessory",
        "Description": "A device that prevents a sitting down of birds at electrically critical points and thus birds are protected against electrical shocks and disturbances by short circuit are avoided.\n\n\n"
      },
      "IfcElementComponent": {
        "Parent": "IfcElement",
        "Description": "An element component is a representation for minor items included in, added to or connecting to or between elements, which usually are not of interest from the overall building structure viewpoint. However, these small parts may have vital and load carrying functions within the construction. These items do not provide any actual space boundaries. Typical examples of _IfcElementComponent_s include different kinds of fasteners and various accessories.\n\n\n\nOne or several instances of subtypes of _IfcElementComponent_ should always be accompanied by a defining instance of a respective subtype of _IfcElementComponentType_. The type object holds shape and material information.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2\n\n\n\nIt is often desirable to model a number of same-shaped element components by means of a single occurrence object, e.g. several bolts within a connection or a row of reinforcement elements. In this IFC release, this is possible by means of multiple mapped representation as documented below.\n\n\n\nTo express the multiplicity of element components also on a higher semantic level, a _Qto_ElementComponentPatternQuantities_ should be provided via _IfcRelDefinesByProperties_ and contain the number of pieces which are placed by a single _IfcElementComponent_ instance.\n\n\n\n{ .use-head}\n\n**Symbolic Representation**\n\n\n\nA symbolic representation is defined for a row of components or several rows of components within a single instance of _IfcElementComponent_. Such rows or arrays may contain possibly large numbers of individual pieces. The product definition shape consists of an _IfcShapeRepresentation_ with the attribute values\n\n\n\n* _RepresentationIdentifier_ : 'Row'\n\n* _RepresentationType_ : 'GeometricCurveSet'\n\n\n\nand one or several curves as geometric items. The curves represent where reference points of the pieces are located. For example, such reference points may be at the heads of mechanical fasteners or at the starting point of the extrusion axis of reinforcement bars. In case of straight components (bolts, nails, staples, straight reinforcement bars, or similar), the local placement of the _IfcElementComponent_ shall be located and oriented such that the local z axis is parallel with the axes of the components. A _Qto_ElementComponentPatternQuantities_ should denote the count of pieces in the row or array and their spacing.\n",
        "Psets": {
          "Pset_ElementComponentCommon": {
            "Properties": {
              "CorrosionTreatment": {
                "type": "string",
                "Description": "Determines corrosion treatment for metal components. This property is provided if the requirement needs to be expressed (a) independently of a material specification and (b) as a mere requirements statement rather than a workshop design/ processing feature.\n"
              },
              "DeliveryType": {
                "type": "string",
                "Description": "Determines how the accessory will be delivered to the site.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          }
        }
      },
      "IfcElementComponentType": {
        "Parent": "IfcElementType",
        "Description": "The element type **IfcElementComponentType** defines commonly shared information for occurrences of element components. The set of shared information may include:\n\n\n\n* common properties with shared property sets\n\n* common representations\n\n* common materials\n\n* common composition of elements\n\n\n\nIt is used to define a element component type specification indicating the specific product information that is common to all occurrences of that product type. The **IfcElementComponentType** may be declared within _IfcProject_ or _IfcProjectLibrary_ using _IfcRelDeclares_ and may be exchanged with or without occurrences of the type. Occurrences of **IfcElementComponentType** are represented by instances of _IfcElementComponent_.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n"
      },
      "IfcFastener": {
        "Parent": "IfcElementComponent",
        "Description": "Representations of fixing parts which are used as fasteners to connect or join elements with other elements. Excluded are mechanical fasteners which are modeled by a separate entity (_IfcMechanicalFastener_).\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _PredefinedType_ added.\n\n\n"
      },
      "IfcFastener.GLUE": {
        "Parent": "IfcFastener",
        "Description": "A fastening connection where glue is used to join together elements.\n\n\n"
      },
      "IfcFastener.WELD": {
        "Parent": "IfcFastener",
        "Description": "A weld seam between parts of metallic material or other suitable materials.\n\n\n",
        "Psets": {
          "Pset_FastenerWeld": {
            "Properties": {
              "a": {
                "type": "real",
                "Description": "Measure a according to ISO 2553\n"
              },
              "c": {
                "type": "real",
                "Description": "Measure c according to ISO 2553\n"
              },
              "d": {
                "type": "real",
                "Description": "Measure d according to ISO 2553\n"
              },
              "e": {
                "type": "real",
                "Description": "Measure e according to ISO 2553\n"
              },
              "Intermittent": {
                "type": "boolean",
                "Description": "If fillet weld, intermittent or not\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "l": {
                "type": "real",
                "Description": "Measure l according to ISO 2553\n"
              },
              "n": {
                "type": "number",
                "Description": "An indication whether the use of the N_Protection can be selected by the user or not. If both the properties N_Protection_50 and N_Protection_100 are asserted, the value of N_Protection_Select property is set to TRUE. The property is only asserted if the property N_Protection is asserted.\n"
              },
              "Process": {
                "type": "integer",
                "Description": "Reference number of the welding process according to ISO 4063, an up to three digits long code\n"
              },
              "ProcessName": {
                "type": "string",
                "Description": "Name of the welding process.  Alternative to the numeric Process property.\n"
              },
              "s": {
                "type": "real",
                "Description": "Measure s according to ISO 2553\n"
              },
              "Staggered": {
                "type": "boolean",
                "Description": "If intermittent weld, staggered or not\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Surface1": {
                "type": "string",
                "Description": "Aspect of weld seam surface, i.e. 'plane', 'curved' or 'hollow'.  Combined welds are given by two corresponding symbols analogous to Type1 and Type2.\n"
              },
              "Surface2": {
                "type": "string",
                "Description": "See Surface1.\n"
              },
              "Type1": {
                "type": "string",
                "Description": "Type of weld seam according to ISO 2553.  Note, combined welds are given by two corresponding symbols in the direction of the normal axis of the coordinate system.  For example, an X weld is specified by Type1 = 'V' and Type2 = 'V'.\n"
              },
              "Type2": {
                "type": "string",
                "Description": "See Type1.\n"
              },
              "z": {
                "type": "real",
                "Description": "Measure z according to ISO 2553\n"
              }
            }
          },
          "Pset_RailJoint_Welded": {
            "Properties": {
              "IsInsulated": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTemporary": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcFastener.MORTAR": {
        "Parent": "IfcFastener",
        "Description": "A composition of mineralic or other materials used to fill jointing gaps and possibly fulfilling a load carrying role.\n\n\n"
      },
      "IfcMechanicalFastener": {
        "Parent": "IfcElementComponent",
        "Description": "A mechanical fasteners connecting building elements or parts mechanically. A single instance of this class may represent one or many of actual mechanical fasteners, for example an array of bolts or a row of nails.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Supertype changed from _IfcFastener_ to _IfcElementComponent_. Attribute _PredefinedType_ added. Attributes _NominalDiameter_ and _NominalLength_ deprecated.\n\n\n",
        "Psets": {
          "Pset_MechanicalFastener": {
            "Properties": {
              "IsInsulated": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          },
          "Attributes": {
            "Properties": {
              "NominalDiameter": {
                "type": "real",
                "Description": "The nominal diameter describing the cross-section size of the fastener type."
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal length describing the longitudinal dimensions of the fastener type."
              }
            }
          }
        }
      },
      "IfcMechanicalFastener.COUPLER": {
        "Parent": "IfcMechanicalFastener",
        "Description": "A part connecting two rod or bars, such as reinforcement bars.\n\n\n"
      },
      "IfcMechanicalFastener.BOLT": {
        "Parent": "IfcMechanicalFastener",
        "Description": "",
        "Psets": {
          "Pset_MechanicalFastenerBolt": {
            "Properties": {
              "HeadShape": {
                "type": "string",
                "Description": "Shape of the bolt's head, e.g. 'Hexagon', 'Countersunk', 'Cheese'\n"
              },
              "KeyShape": {
                "type": "string",
                "Description": "If applicable, shape of the head's slot, e.g. 'Slot', 'Allen'\n"
              },
              "NutsCount": {
                "type": "number",
                "Description": "Count of nuts to be mounted on one bolt\n"
              },
              "NutShape": {
                "type": "string",
                "Description": "Shape of the nut, e.g. 'Hexagon', 'Cap', 'Castle', 'Wing'\n"
              },
              "ThreadDiameter": {
                "type": "real",
                "Description": "Nominal diameter of the thread, if different from the bolt's overall nominal diameter\n"
              },
              "ThreadLength": {
                "type": "real",
                "Description": "Nominal length of the thread\n"
              },
              "WashersCount": {
                "type": "number",
                "Description": "Count of washers to be mounted on one bolt\n"
              },
              "WasherShape": {
                "type": "string",
                "Description": "Shape of the washers, e.g. 'Standard', 'Square'\n"
              }
            }
          }
        }
      },
      "IfcMechanicalFastener.ROPE": {
        "Parent": "IfcMechanicalFastener",
        "Description": "a length of thick strong cord made by twisting together strands of hemp, sisal, nylon, or similar material. used primarily for mooring vessels\n\n\n",
        "Psets": {
          "PSet_VesselLineCommon": {
            "Properties": {
              "LineIdentifier": {
                "type": "string",
                "Description": "Reference ID relative to a design vessel in the project\n"
              },
              "MidShipToFairLead": {
                "type": "real",
                "Description": ""
              },
              "CentreLineToFairLead": {
                "type": "real",
                "Description": ""
              },
              "HeightAboveMainDeck": {
                "type": "real",
                "Description": "Height of the fairlead above the main deck of the vessel\n"
              },
              "FairleadToTermination": {
                "type": "real",
                "Description": "Distance from the fairlead to the bitt or winch on the vessel where the line terminates\n"
              },
              "WinchBreakLimit": {
                "type": "real",
                "Description": "Line force at which the winch starts to release the line (maximum load)\n"
              },
              "PreTensionAim": {
                "type": "real",
                "Description": "Line force that the winch is set to maintain (minimum load)\n"
              },
              "LineType": {
                "type": "string",
                "Description": "Mooring line type\n"
              },
              "LineStrength": {
                "type": "real",
                "Description": "Breaking load of the line (note that ultimate stress is not part of any of the material Psets)\n"
              },
              "TailLength": {
                "type": "real",
                "Description": "Length of the tail\n"
              },
              "TailDiameter": {
                "type": "real",
                "Description": "Diameter of the tail\n"
              },
              "TailType": {
                "type": "string",
                "Description": "Mooring tail type\n"
              },
              "TailStrength": {
                "type": "real",
                "Description": "Breaking load of the tail (note that ultimate stress is not part of any of the material Psets)\n"
              }
            }
          }
        }
      },
      "IfcMechanicalFastener.RAILJOINT": {
        "Parent": "IfcMechanicalFastener",
        "Description": "A mechanical assembly with e.g. fishplates to join two rail ends with optional functions (insulation or expansion capacity).\n\n\n",
        "Psets": {
          "Pset_RailJoint": {
            "Properties": {
              "IsInsulated": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "IsTemporary": {
                "type": "boolean",
                "Description": "",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcMechanicalFastener.CHAIN": {
        "Parent": "IfcMechanicalFastener",
        "Description": "a series of linked metal rings used for fastening or securing something, or for pulling loads.\n\n\n"
      },
      "IfcMechanicalFastener.SHEARCONNECTOR": {
        "Parent": "IfcMechanicalFastener",
        "Description": "A ring connector that is accepted by ring keyways in the connected pieces; or a toothed circular or square connector that is pressed into the connected pieces.\n\n\n"
      },
      "IfcMechanicalFastener.NAIL": {
        "Parent": "IfcMechanicalFastener",
        "Description": ""
      },
      "IfcMechanicalFastener.ANCHORBOLT": {
        "Parent": "IfcMechanicalFastener",
        "Description": "A special bolt which is anchored into conrete, stone, or brickwork.\n\n\n",
        "Psets": {
          "Pset_MechanicalFastenerAnchorBolt": {
            "Properties": {
              "AnchorBoltDiameter": {
                "type": "real",
                "Description": "The nominal diameter of the anchor bolt bar(s).\n"
              },
              "AnchorBoltLength": {
                "type": "real",
                "Description": "The length of the anchor bolt.\n"
              },
              "AnchorBoltProtrusionLength": {
                "type": "real",
                "Description": "The length of the protruding part of the anchor bolt.\n"
              },
              "AnchorBoltThreadLength": {
                "type": "real",
                "Description": "The length of the threaded part of the anchor bolt.\n"
              }
            }
          }
        }
      },
      "IfcMechanicalFastener.STUDSHEARCONNECTOR": {
        "Parent": "IfcMechanicalFastener",
        "Description": "Stud shear connectors are cylindrical fastening parts with a head on one side. On the other side they are welded on steel members for the use in composite steel and concrete structures.\n\n\n"
      },
      "IfcMechanicalFastener.DOWEL": {
        "Parent": "IfcMechanicalFastener",
        "Description": "A cylindrical rod that is driven into holes of the connected pieces.\n\n\n"
      },
      "IfcMechanicalFastener.RIVET": {
        "Parent": "IfcMechanicalFastener",
        "Description": "A fastening part having a head at one end and the other end being hammered flat after being passed through holes in the pieces that are fastened together.\n\n\n"
      },
      "IfcMechanicalFastener.SCREW": {
        "Parent": "IfcMechanicalFastener",
        "Description": "A fastener with a tapered threaded shank and a slotted head.\n\n\n"
      },
      "IfcMechanicalFastener.NAILPLATE": {
        "Parent": "IfcMechanicalFastener",
        "Description": ""
      },
      "IfcMechanicalFastener.STAPLE": {
        "Parent": "IfcMechanicalFastener",
        "Description": ""
      },
      "IfcMechanicalFastener.RAILFASTENING": {
        "Parent": "IfcMechanicalFastener",
        "Description": "An assembly of components which secures a rail to the supporting structure and retains it in the required position whilst permitting any necessary vertical, lateral and longitudinal movement.\n\nNote: definition from EN 13481-1.\n\n\n"
      },
      "IfcVibrationDamper": {
        "Parent": "IfcElementComponent",
        "Description": "A vibration damper is a device used to minimize the effects of vibration in a structure by dissipating kinetic energy. The damper may be passive (elastic, frictional, inertia) or active (in a system using sensors and actuators).\n\n\n"
      },
      "IfcVibrationDamper.FRICTION": {
        "Parent": "IfcVibrationDamper",
        "Description": ""
      },
      "IfcVibrationDamper.BENDING_YIELD": {
        "Parent": "IfcVibrationDamper",
        "Description": ""
      },
      "IfcVibrationDamper.RUBBER": {
        "Parent": "IfcVibrationDamper",
        "Description": "The rubber mold is a damper that absorbs energy by utilizing deformation of laminated rubber. The difference between the seismic isolation bearing and the rubber type damper is whether or not to support the weight of the upper structures. The rubber damper does not transmit the weight of the upper structures to the sub structure.\n\n\n"
      },
      "IfcVibrationDamper.SHEAR_YIELD": {
        "Parent": "IfcVibrationDamper",
        "Description": "A displacement dependent type damper in which the resistance force generated is determined by the plastic strain amount utilizing the plastic deformation of the steel material. The shear yield type is a damper, which causes the steel material to yield for deformation in the direction perpendicular to the member.\n\n\n"
      },
      "IfcVibrationDamper.VISCOUS": {
        "Parent": "IfcVibrationDamper",
        "Description": "The viscous type is a damper that absorbs energy by utilizing the resistance of a viscous body.\n\n\n"
      },
      "IfcVibrationDamper.AXIAL_YIELD": {
        "Parent": "IfcVibrationDamper",
        "Description": "A displacement dependent type damper in which the resistance force generated is determined by the plastic strain amount utilizing the plastic deformation of the steel material. The axial yield type is a damper that yields energy by absorbing the steel material against deformation in the axial direction, that is, in the direction of expansion and contraction.\n\n\n"
      },
      "IfcImpactProtectionDevice": {
        "Parent": "IfcElementComponent",
        "Description": ""
      },
      "IfcAsset": {
        "Parent": "IfcGroup",
        "Description": "An asset is a uniquely identifiable grouping of elements acting as a single entity that has a financial value or that can be operated on as a single unit.\n\n\n\nAn asset is generally the level of granularity at which maintenance operations are undertaken. An asset is a group that can contain one or more elements. Whilst the financial value of a component or element can be defined, financial value is also defined for accounting purposes at the level of the asset.  \n\n  \n\nThere are a number of actors that can be associated with an asset, each actor having a role. Actors within the scope of the project are indicated using the [IfcRelAssignsToActor](../../ifckernel/lexical/ifcrelassignstoactor.htm) relationship in which case roles should be defined through the [IfcActorRole](../../ifcactorresource/lexical/ifcactorrole.htm) class; otherwise principal actors are identified as attributes of the class. In the existence of both, direct attributes take precedence.  \n\n  \n\nThere are a number of costs that can be associated with an asset, each cost having a role. These are specified through the _OriginalValue_, _CurrentValue_, _TotalReplacementCost_ and _DepreciatedValue_ attributes.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; All attributes made optional and date values changed to use _IfcDate_.\n\n\n",
        "Psets": {
          "Pset_Asset": {
            "Properties": {
              "AssetAccountingType": {
                "type": "PEnum_AssetAccountingType",
                "Description": "Identifies the predefined types of risk from which the type required may be set.\n",
                "values": [
                  "FIXED",
                  "NONFIXED"
                ]
              },
              "AssetInsuranceType": {
                "type": "PEnum_AssetInsuranceType",
                "Description": "Identifies the predefined types of insurance rating from which the type required may be set.\n",
                "values": [
                  "PERSONAL",
                  "REAL"
                ]
              },
              "AssetTaxType": {
                "type": "PEnum_AssetTaxType",
                "Description": "Identifies the predefined types of taxation group from which the type required may be set.\n",
                "values": [
                  "CAPITALISED",
                  "EXPENSED"
                ]
              },
              "AssetStatus": {
                "type": "string",
                "Description": "Current status or stage in life cycle.\n"
              },
              "AssetUse": {
                "type": "string",
                "Description": "General use category of the asset\n"
              },
              "Owner": {
                "type": "ifcactorselect",
                "Description": ""
              },
              "Operator": {
                "type": "ifcactorselect",
                "Description": ""
              },
              "ResponsiblePerson": {
                "type": "ifcperson",
                "Description": ""
              },
              "OriginalValue": {
                "type": "ifcappliedvalue",
                "Description": ""
              },
              "CurrentValue": {
                "type": "ifcappliedvalue",
                "Description": ""
              },
              "DepreciatedValue": {
                "type": "ifcappliedvalue",
                "Description": ""
              }
            }
          },
          "Pset_Condition": {
            "Properties": {
              "AssessmentCondition": {
                "type": "string",
                "Description": "The overall condition of a product based on an assessment of the contributions to the overall condition made by the various criteria considered. The meanings given to the values of assessed condition should be agreed and documented by local agreements. For instance, is overall condition measured on a scale of 1 - 10 or by assigning names such as Good, OK, Poor.\n"
              },
              "AssessmentDate": {
                "type": "string",
                "Description": "Date on which the overall condition is assessed\n"
              },
              "AssessmentDescription": {
                "type": "string",
                "Description": "Qualitative description of the condition.\n"
              },
              "AssessmentType": {
                "type": "string",
                "Description": "Category of latest condition assessment report of the asset.\n"
              },
              "AssessmentMethod": {
                "type": "ifcexternalreference",
                "Description": "External reference to assessment method or application used to perform the assessment.\n"
              },
              "LastAssessmentReport": {
                "type": "string",
                "Description": "Reference to latest condition (state of health) report.\n"
              },
              "NextAssessmentDate": {
                "type": "string",
                "Description": "Date of next condition inspection\n"
              }
            }
          },
          "Pset_MaintenanceStrategy": {
            "Properties": {
              "AssetCriticality": {
                "type": "penum_assetrating",
                "Description": "Rating of the asset's criticality to the operation of the facility\n"
              },
              "AssetFailty": {
                "type": "penum_assetrating",
                "Description": ""
              },
              "AssetPriority": {
                "type": "penum_assetrating",
                "Description": "Combined criticality and frailty rating indicating the operational and maintenance priority of the asset\n"
              },
              "MonitoringType": {
                "type": "penum_monitoringtype",
                "Description": "Monitoring strategy chosen for the asset\n"
              },
              "AccidentResponse": {
                "type": "penum_accidentresponse",
                "Description": "Accident response chosen for the asset\n"
              }
            }
          },
          "Pset_MaintenanceTriggerCondition": {
            "Properties": {
              "MaintenanceLevel": {
                "type": "penum_assetrating",
                "Description": "Adjustment of the service life resulting from the effect of the level or degree of maintenance applied to dcomponents.\n"
              },
              "TargetPerformance": {
                "type": "penum_assetrating",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute.\n"
              },
              "ReplacementLevel": {
                "type": "penum_assetrating",
                "Description": "Performance level at which replacement takes place\n"
              },
              "DisposalLevel": {
                "type": "penum_assetrating",
                "Description": "Performance level at which disposal takes place\n"
              }
            }
          },
          "Pset_MaintenanceTriggerDuration": {
            "Properties": {
              "MaintenanceLevel": {
                "type": "string",
                "Description": "Adjustment of the service life resulting from the effect of the level or degree of maintenance applied to dcomponents.\n"
              },
              "TargetPerformance": {
                "type": "string",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute.\n"
              },
              "ReplacementLevel": {
                "type": "string",
                "Description": "Performance level at which replacement takes place\n"
              },
              "DisposalLevel": {
                "type": "string",
                "Description": "Performance level at which disposal takes place\n"
              }
            }
          },
          "Pset_MaintenanceTriggerPerformance": {
            "Properties": {
              "MaintenanceLevel": {
                "type": "real",
                "Description": "Adjustment of the service life resulting from the effect of the level or degree of maintenance applied to dcomponents.\n"
              },
              "TargetPerformance": {
                "type": "number",
                "Description": "Target capacity or performance of the asset. Units of the performance value are specified through the propertyValue units attribute.\n"
              },
              "ReplacementLevel": {
                "type": "real",
                "Description": "Performance level at which replacement takes place\n"
              },
              "DisposalLevel": {
                "type": "real",
                "Description": "Performance level at which disposal takes place\n"
              },
              "PerformanceUnit": {
                "type": "string",
                "Description": "Unit that quantifies the Target Performance value\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Identification": {
                "type": "string",
                "Description": "A unique identification assigned to an asset that enables its differentiation from other assets.\\X\\0D\n> NOTE&nbsp; The asset identifier is unique within the asset register. It differs from the globally unique id assigned to the instance of an entity populating a database."
              },
              "IncorporationDate": {
                "type": "string",
                "Description": "The date on which an asset was incorporated into the works, installed, constructed, erected or completed.\\X\\0D\n> NOTE&nbsp; This is the date on which an asset is considered to start depreciating.\\X\\0D\n\\X\\0D\n{ .history}\\X\\0D\n> IFC4 CHANGE&nbsp; Type changed from IfcDateTimeSelect."
              }
            }
          }
        }
      },
      "IfcFurniture": {
        "Parent": "IfcFurnishingElement",
        "Description": "Furniture defines complete furnishings such as a table, desk, chair, or cabinet, which may or may not be permanently attached to a building structure.\n\n\n\nOccurrences of furniture that are built in (where the property _Pset_FurnitureTypeCommon.IsBuiltIn_ is asserted to be TRUE) should have their connection relationship with a building element occurrence defined through the _IfcRelConnectsElements_ relationship.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n",
        "Psets": {
          "Pset_FurnitureTypeCommon": {
            "Properties": {
              "IsBuiltIn": {
                "type": "boolean",
                "Description": "Indicates whether the furniture type is intended to be 'built in' i.e. physically attached to a building or facility (= TRUE) or not i.e. Loose and movable (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "MainColor": {
                "type": "string",
                "Description": "The main color of the furniture of this type.\n"
              },
              "NominalDepth": {
                "type": "real",
                "Description": "Nominal or quoted depth of the object measured from the inlet drain connection to the base of the unit.\n"
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NominalLength": {
                "type": "real",
                "Description": "The nominal overall length of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "Style": {
                "type": "string",
                "Description": "Description of the furniture style.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "AssemblyPlace": {
                "values": [
                  "SITE",
                  "FACTORY",
                  "NOTDEFINED"
                ],
                "type": "IfcAssemblyPlaceEnum",
                "Description": "A designation of where the assembly is intended to take place. A selection of alternatives s provided in an enumerated list."
              }
            }
          }
        }
      },
      "IfcFurniture.TECHNICALCABINET": {
        "Parent": "IfcFurniture",
        "Description": ""
      },
      "IfcFurniture.SHELF": {
        "Parent": "IfcFurniture",
        "Description": ""
      },
      "IfcFurniture.SOFA": {
        "Parent": "IfcFurniture",
        "Description": ""
      },
      "IfcFurniture.DESK": {
        "Parent": "IfcFurniture",
        "Description": "Furniture with a countertop and optional drawers for a single person.\n\n\n",
        "Psets": {
          "Pset_FurnitureTypeDesk": {
            "Properties": {
              "WorksurfaceArea": {
                "type": "real",
                "Description": "The value of the work surface area of the desk..\n"
              }
            }
          }
        }
      },
      "IfcFurniture.CHAIR": {
        "Parent": "IfcFurniture",
        "Description": "Furniture for seating a single person.\n\n\n",
        "Psets": {
          "Pset_FurnitureTypeChair": {
            "Properties": {
              "HighestSeatingHeight": {
                "type": "real",
                "Description": "The value of seating height of high level if the chair height is adjustable.\n"
              },
              "LowestSeatingHeight": {
                "type": "real",
                "Description": "The value of seating height of low level if the chair height is adjustable.\n"
              },
              "SeatingHeight": {
                "type": "real",
                "Description": "The value of seating height if the chair height is not adjustable.\n"
              }
            }
          }
        }
      },
      "IfcFurniture.TABLE": {
        "Parent": "IfcFurniture",
        "Description": "Furniture with a countertop for multiple people.\n\n\n",
        "Psets": {
          "Pset_FurnitureTypeTable": {
            "Properties": {
              "NumberOfChairs": {
                "type": "integer",
                "Description": "Maximum number of chairs that can fit with the table for normal use.\n"
              },
              "WorksurfaceArea": {
                "type": "real",
                "Description": "The value of the work surface area of the desk..\n"
              }
            }
          }
        }
      },
      "IfcFurniture.BED": {
        "Parent": "IfcFurniture",
        "Description": ""
      },
      "IfcFurniture.FILECABINET": {
        "Parent": "IfcFurniture",
        "Description": "",
        "Psets": {
          "Pset_FurnitureTypeFileCabinet": {
            "Properties": {
              "WithLock": {
                "type": "boolean",
                "Description": "Indicates whether the file cabinet is lockable (= TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcSystemFurnitureElement": {
        "Parent": "IfcFurnishingElement",
        "Description": "A system furniture element defines components of modular furniture which are not directly placed in a building structure but aggregated inside furniture.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n",
        "Psets": {
          "Pset_SystemFurnitureElementTypeCommon": {
            "Properties": {
              "Finishing": {
                "type": "string",
                "Description": "The finishing applied to system furniture elements of this type e.g. walnut, fabric.\n"
              },
              "GroupCode": {
                "type": "string",
                "Description": "e.g. panels, worksurfaces, storage, etc.\n"
              },
              "IsUsed": {
                "type": "boolean",
                "Description": "Indicates whether the element is being used in a workstation (= TRUE) or not.(= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalHeight": {
                "type": "real",
                "Description": "The nominal height of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NominalWidth": {
                "type": "real",
                "Description": "The nominal width of the system furniture elements of this type. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcSystemFurnitureElement.SUBRACK": {
        "Parent": "IfcSystemFurnitureElement",
        "Description": "A subrack is a part of technical cabinet which is used to store and mount pluggable electric subunits.\n\n\n"
      },
      "IfcSystemFurnitureElement.WORKSURFACE": {
        "Parent": "IfcSystemFurnitureElement",
        "Description": "Workstation countertop.\n\n\n",
        "Psets": {
          "Pset_SystemFurnitureElementTypeWorkSurface": {
            "Properties": {
              "HangingHeight": {
                "type": "real",
                "Description": "The hanging height of the worksurface.\n"
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "ShapeDescription": {
                "type": "string",
                "Description": "A description of the shape of the work surface e.g. corner square, rectangle, etc.\n"
              },
              "SupportType": {
                "type": "string",
                "Description": "Available support types from which that required may be selected.\n"
              },
              "UsePurpose": {
                "type": "string",
                "Description": "The principal purpose for which the work surface is intended to be used e.g. writing/reading, computer, meeting, printer, reference files, etc.\n"
              }
            }
          }
        }
      },
      "IfcSystemFurnitureElement.PANEL": {
        "Parent": "IfcSystemFurnitureElement",
        "Description": "Vertical panel used to divide work spaces.\n\n\n",
        "Psets": {
          "Pset_SystemFurnitureElementTypePanel": {
            "Properties": {
              "FurniturePanelType": {
                "type": "string",
                "Description": "Available panel types from which that required may be selected.\n"
              },
              "HasOpening": {
                "type": "boolean",
                "Description": "indicates whether the panel has an opening (= TRUE) or not (= FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "NominalThickness": {
                "type": "real",
                "Description": "The nominal thickness of the object. The size information is provided in addition to the shape representation and the geometric parameters used within. In case of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcConveyorSegment": {
        "Parent": "IfcFlowSegment",
        "Description": ""
      },
      "IfcFacilityPart.LATERAL": {
        "Parent": "IfcFacilityPart",
        "Description": ""
      },
      "IfcFacilityPart.REGION": {
        "Parent": "IfcFacilityPart",
        "Description": ""
      },
      "IfcFacilityPart.VERTICAL": {
        "Parent": "IfcFacilityPart",
        "Description": ""
      },
      "IfcFacilityPart.LONGITUDINAL": {
        "Parent": "IfcFacilityPart",
        "Description": ""
      },
      "IfcGeotechnicalElement": {
        "Parent": "IfcElement",
        "Description": "Abstract supertype for geotechnical entities.\n",
        "Psets": {
          "Pset_Risk": {
            "Properties": {
              "RiskName": {
                "type": "string",
                "Description": "A locally unique identifier for the risk entry that can be used to track the development and mitiagtion of the risk throughout the project life cycle\n"
              },
              "RiskType": {
                "type": "PEnum_RiskType",
                "Description": "Identifies the predefined types of risk from which the type required may be set.\n",
                "values": [
                  "BUSINESS",
                  "HAZARD",
                  "HEALTHANDSAFETY",
                  "INSURANCE"
                ]
              },
              "NatureOfRisk": {
                "type": "string",
                "Description": "A description of the generic nature of the context or hazard that might be encountered.\n"
              },
              "AssociatedProduct": {
                "type": "string",
                "Description": "An indication or link to any associated product or material that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encording template\n"
              },
              "AssociatedActivity": {
                "type": "string",
                "Description": "An indication or link to any associated activity or process that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encording template\n"
              },
              "AssociatedLocation": {
                "type": "string",
                "Description": "An indication or link to any associated location or space that may trigger the hazard. If used directly on an annotation or semantic object. for an alternative see group use encording template\n"
              },
              "RiskAssessmentMethodology": {
                "type": "string",
                "Description": "An indication or link to the chosen risk assessment methodology, for example PAS1192-6 or a chosen ISO13100 annex.\n"
              },
              "UnmitigatedRiskLikelihood": {
                "type": "penum_riskrating",
                "Description": "Identifies the likelihood of the hazard prior to any specific mitigation.\n"
              },
              "UnmitigatedRiskConsequence": {
                "type": "penum_riskrating",
                "Description": "Identifies the consequence of the hazard prior to any specific mitigation.\n"
              },
              "UnmitigatedRiskSignificance": {
                "type": "penum_riskrating",
                "Description": "Identifies the signifiance of the risk given the likelihood and consequence prior to any specific mitigation.\n"
              },
              "MitigationPlanned": {
                "type": "string",
                "Description": "The planned (agreed and irrevocable) mitigation of the likelhood and consequences of the hazard.\n"
              },
              "MitigatedRiskLikelihood": {
                "type": "penum_riskrating",
                "Description": "Identifies the likelihood of the hazard given the planned mitigation.\n"
              },
              "MitigatedRiskConsequence": {
                "type": "penum_riskrating",
                "Description": "Identifies the consequence of the hazard given the planned mitigation.\n"
              },
              "MitigatedRiskSignificance": {
                "type": "penum_riskrating",
                "Description": "Identifies the signifiance of the risk given the mitigation of likelihood and consequence.\n"
              },
              "MitigationProposed": {
                "type": "string",
                "Description": "Any proposed, but not yet agreed and irrevocable, mitigation of the likelhood and consequences of the hazard.\n"
              }
            }
          },
          "Pset_Uncertainty": {
            "Properties": {
              "Description": {
                "type": "ifctext",
                "Description": "The description of the air side system.\n"
              },
              "Basis": {
                "type": "penum_uncertaintybasis",
                "Description": ""
              },
              "LinearUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the overall shape and position in XYZ.\n"
              },
              "HorizontalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in X, if different to the linear uncertainty.\n"
              },
              "OrthogonalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the horizontal shape and position in Y, if different to the horizontal uncertainty.\n"
              },
              "VerticalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in Z, if different to the linear uncertainty.\n"
              }
            }
          }
        }
      },
      "IfcSign": {
        "Parent": "IfcElementComponent",
        "Description": "A sign is a notice on display that gives information or instructions in a written, symbolic or other form. Signs are passive with the most common form of a pictorial panel. An instance of _IfcSign_ refers to the occurrence of an individual panel which can be applied to a surface such as a wall or be aggregated within a Signal Assembly which can include multiple sign occurrences and the associated supporting structural elements (see Signal Assembly for examples).\n\n\n",
        "Psets": {
          "Pset_RailwaySignGeneral": {
            "Properties": {
              "SignType": {
                "type": "string",
                "Description": ""
              },
              "SignAspect": {
                "type": "string",
                "Description": ""
              }
            }
          }
        }
      },
      "IfcSignal": {
        "Parent": "IfcFlowTerminal",
        "Description": "A signal is an active device that conveys information or instructions to users, by means of an audio, visual signal or a combination of both.\n\nThe primary distinction from an _IfcSign_ is that a signal is active and therefore a subtype of _IfcFlowTerminal_ usually requiring power and data connections for its operation.\n\nAn instance of _IfcSignal_ represents a singular signalling device in a larger assembled unit or connected system, such as an individual frame within a railway signal, a single light unit in a traffic light system or an audio signal or light mounted on a navigational buoy.\n\nSignals can be physically aggregated together into an assembly which can include multiple signal instances (and also sign instances) and the associated supporting structural elements such as a simple pole or a rigid frame gantry (see Signal Assembly for examples).\n\nSignals can be logically (functionally) grouped together into a signalling system (a type of distribution system) to represent a connected  group of signals for example a group of traffic lights controlling an road intersection.\n\n\n",
        "Psets": {
          "Pset_RailwaySignalGeneral": {
            "Properties": {
              "SignalType": {
                "type": "string",
                "Description": ""
              },
              "SignalAspect": {
                "type": "string",
                "Description": ""
              }
            }
          }
        }
      },
      "IfcSignalType": {
        "Parent": "IfcFlowTerminalType",
        "Description": "The _IfcSignalType_  provides the type information for _IfcSignal_ occurrences.\n\nA signal is an active device that conveys information or instructions to users, by means of an audio, visual signal or a combination of the 2.\n\n\n",
        "Psets": {
          "Pset_RailwaySignalGeneral": {
            "Properties": {
              "SignalType": {
                "type": "string",
                "Description": ""
              },
              "SignalAspect": {
                "type": "string",
                "Description": ""
              }
            }
          }
        }
      },
      "IfcSignal.VISUAL": {
        "Parent": "IfcSignal",
        "Description": "A signal type formed of an active device conveying information in a visual manner such as a light, cluster of lights, or mechanical moving shapes.\n\n\n"
      },
      "IfcSignal.AUDIO": {
        "Parent": "IfcSignal",
        "Description": "A signal type formed of an active device conveying information by emitting an audio signal such as a  beep, ring, horn or explosive sound.\n\n\n"
      },
      "IfcSignal.MIXED": {
        "Parent": "IfcSignal",
        "Description": ""
      },
      "IfcSignType": {
        "Parent": "IfcElementComponentType",
        "Description": "The _IfcSignType_ provides the type information for _IfcSign_ occurrences.\n\nA sign is a notice on display that gives information or instructions in a written, symbolic or other form. Signs are passive with the most common form of a pictorial panel.\n\n\n",
        "Psets": {
          "Pset_RailwaySignGeneral": {
            "Properties": {
              "SignType": {
                "type": "string",
                "Description": ""
              },
              "SignAspect": {
                "type": "string",
                "Description": ""
              }
            }
          }
        }
      },
      "IfcSign.MARKER": {
        "Parent": "IfcSign",
        "Description": "A Sign type formed of a vertical post (possibly with some lettering or symbols) usually used to delimitate distance or the location of some equipment.\n\n\n"
      },
      "IfcSign.PICTORAL": {
        "Parent": "IfcSign",
        "Description": ""
      },
      "IfcSign.MIRROR": {
        "Parent": "IfcSign",
        "Description": "A sign type that provides information via a reflective mirror surface.\n\n\n"
      },
      "IfcAnnotation.ASSUMEDPOINT": {
        "Parent": "IfcAnnotation",
        "Description": "",
        "Psets": {
          "Pset_Uncertainty": {
            "Properties": {
              "Description": {
                "type": "ifctext",
                "Description": "The description of the air side system.\n"
              },
              "Basis": {
                "type": "penum_uncertaintybasis",
                "Description": ""
              },
              "LinearUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the overall shape and position in XYZ.\n"
              },
              "HorizontalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in X, if different to the linear uncertainty.\n"
              },
              "OrthogonalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the horizontal shape and position in Y, if different to the horizontal uncertainty.\n"
              },
              "VerticalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in Z, if different to the linear uncertainty.\n"
              }
            }
          }
        }
      },
      "IfcAnnotation.ASBUILTAREA": {
        "Parent": "IfcAnnotation",
        "Description": ""
      },
      "IfcAnnotation.ASBUILTLINE": {
        "Parent": "IfcAnnotation",
        "Description": ""
      },
      "IfcAnnotation.USERDEFINED": {
        "Parent": "IfcAnnotation",
        "Description": "",
        "Psets": {
          "Pset_RoadDesignCriteriaCommon": {
            "Properties": {
              "RoadDesignClass": {
                "type": "string",
                "Description": "A road design class designator with content according to local standards.\n"
              },
              "DesignSpeed": {
                "type": "real",
                "Description": "Speed selected in designing a new road or in modernizing, strengthening or rehabilitating an existing road section, to determine the various geometric design features of the carriageway that allow a car to travel safely at that speed, under normal road surface and weather conditions. \n\n\n\n>NOTE&nbsp; Definition according to PIARC. \n\n>\n\n>NOTE&nbsp; The design speed is not constant, but may vary depending on the conditions of relief (plain, hill, mountain).\n"
              },
              "DesignVehicleClass": {
                "type": "string",
                "Description": "A vehicle designator with content according to local standards.\n"
              },
              "DesignTrafficVolume": {
                "type": "number",
                "Description": "The traffic volume used for planning and design purposes specified as the number of vehicles per day . Typically given as AADT - Average Annual Daily Traffic\n"
              },
              "NumberOfThroughLanes": {
                "type": "number",
                "Description": "The total number of through lanes on the segment. This excludes auxiliary lanes, parking and turning lanes, acceleration/deceleration lanes, toll collection lanes, shoulders etc.\n"
              },
              "LaneWidth": {
                "type": "real",
                "Description": "Standard nominal width of one trough lane.\n"
              },
              "Crossfall": {
                "type": "real",
                "Description": "Specifies the nominal crossfall as a ratio measure (slope) at the location of the event.\n"
              }
            }
          }
        }
      },
      "IfcAnnotation.NON_PHYSICAL_SIGNAL": {
        "Parent": "IfcAnnotation",
        "Description": ""
      },
      "IfcAnnotation.ASSUMEDLINE": {
        "Parent": "IfcAnnotation",
        "Description": "",
        "Psets": {
          "Pset_Uncertainty": {
            "Properties": {
              "Description": {
                "type": "ifctext",
                "Description": "The description of the air side system.\n"
              },
              "Basis": {
                "type": "penum_uncertaintybasis",
                "Description": ""
              },
              "LinearUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the overall shape and position in XYZ.\n"
              },
              "HorizontalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in X, if different to the linear uncertainty.\n"
              },
              "OrthogonalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the horizontal shape and position in Y, if different to the horizontal uncertainty.\n"
              },
              "VerticalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in Z, if different to the linear uncertainty.\n"
              }
            }
          }
        }
      },
      "IfcAnnotation.WIDTHEVENT": {
        "Parent": "IfcAnnotation",
        "Description": "",
        "Psets": {
          "Pset_Width": {
            "Properties": {
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Side": {
                "type": "penum_sidetype",
                "Description": "Specifies if the width is measured to the RIGHT or to the LEFT of the curve referenced by the placement, or if the same value is applied to BOTH sides.\n"
              },
              "Transition": {
                "type": "penum_transitionwidthtype",
                "Description": "The type of transition of width used between the previous event and this event.\n"
              }
            }
          }
        }
      },
      "IfcAnnotation.ASSUMEDAREA": {
        "Parent": "IfcAnnotation",
        "Description": "",
        "Psets": {
          "Pset_Uncertainty": {
            "Properties": {
              "Description": {
                "type": "ifctext",
                "Description": "The description of the air side system.\n"
              },
              "Basis": {
                "type": "penum_uncertaintybasis",
                "Description": ""
              },
              "LinearUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the overall shape and position in XYZ.\n"
              },
              "HorizontalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in X, if different to the linear uncertainty.\n"
              },
              "OrthogonalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the horizontal shape and position in Y, if different to the horizontal uncertainty.\n"
              },
              "VerticalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in Z, if different to the linear uncertainty.\n"
              }
            }
          }
        }
      },
      "IfcAnnotation.SUPERELEVATIONEVENT": {
        "Parent": "IfcAnnotation",
        "Description": "",
        "Psets": {
          "Pset_Superelevation": {
            "Properties": {
              "Superelevation": {
                "type": "real",
                "Description": "Specifies the superelevation as a ratio measure (slope) at the location of the event.\n"
              },
              "Side": {
                "type": "penum_sidetype",
                "Description": "Specifies if the width is measured to the RIGHT or to the LEFT of the curve referenced by the placement, or if the same value is applied to BOTH sides.\n"
              },
              "Transition": {
                "type": "penum_transitionsuperelevationtype",
                "Description": "The type of transition of width used between the previous event and this event.\n"
              }
            }
          }
        }
      },
      "IfcAnnotation.ASBUILTPOINT": {
        "Parent": "IfcAnnotation",
        "Description": ""
      },
      "IfcBorehole": {
        "Parent": "IfcGeotechnicalAssembly",
        "Description": "Representation of the concept of a linear geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement  \n\nThe assembly may contain one of more strata and other elements such as capping and lining. The contained subtypes of _IfcGeotechnicalStratum_ will have shape representations made from straight or bent tubes reflecting the bore diameter, or discs if a 'Yabuki' top surface model is being used.\n",
        "Psets": {
          "Pset_BoreholeCommon": {
            "Properties": {
              "FillingMaterial": {
                "type": "ifclabel",
                "Description": "Filling material or 'NOT FILLED' or 'UNKNOWN' (boreholeML).\n"
              },
              "CapMaterial": {
                "type": "ifclabel",
                "Description": "Cap material or 'NOT CAPPED' or 'UNKNOWN' (boreholeML).\n"
              },
              "LiningMaterial": {
                "type": "ifclabel",
                "Description": "Lining material or 'NOT LINED' or 'UNKNOWN' (boreholeML).\n"
              },
              "FillingDepth": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Depth of filling (boreholeML).\n"
              },
              "CapDepth": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Depth of cap (boreholeML).\n"
              },
              "LiningThickness": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Lining thickness (boreholeML).\n"
              },
              "GroundwaterDepth": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Depth groundwater encountered (boreholeML).\n"
              },
              "BoreholeState": {
                "type": "ifcboreholestate",
                "Description": "The state the borehole or trial pit has been left in. (boreholeML).\n"
              }
            }
          }
        }
      },
      "IfcGeoslice": {
        "Parent": "IfcGeotechnicalAssembly",
        "Description": "Representation of the concept of a sectional planar geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement. The assembly may contain one of more strata and anthropic elements. The contained subtypes of _IfcGeotechnicalStratum_ will have shape representations made from polygons reflecting the visible section or poly lines if a 'Yabuki' top surface model is being used.\n"
      },
      "IfcGeomodel": {
        "Parent": "IfcGeotechnicalAssembly",
        "Description": "Representation of the concept of a volumetric geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement.\n\nThe assembly may contain one of more strata and other anthropic elements. The contained subtypes of _IfcGeotechnicalStratum_ will have shape representations made from polyhedra or surfaces if a 'Yabuki' top surface model is being used.\n"
      },
      "IfcSolidStratum": {
        "Parent": "IfcGeotechnicalStratum",
        "Description": "Representation of the concept of an identified discrete almost homogenous solid geological or surface feature, including discontinuities such as faults, fractures, boundaries and interfaces that are not explicitly modelled.\n",
        "Psets": {
          "Pset_SolidStratumCapacity": {
            "Properties": {
              "LoadbearingCapacity": {
                "type": "pressuremeasure",
                "Description": ""
              },
              "SettlementBehaviour": {
                "type": "ifcpressuremeasure",
                "Description": "Estimate of the settlement/compaction behaviour of the stratum.\n"
              },
              "PermeabilityBehaviour": {
                "type": "ifcratiomeasure",
                "Description": "Proportionality constant in Darcy's law which relates flow rate and viscosity to a pressure gradient applied to the porous media.\n"
              },
              "CohesionBehaviour": {
                "type": "ifcpressuremeasure",
                "Description": "Cohesive shear strength of a rock or soil that is independent of interparticle friction.\n"
              },
              "FrictionBehaviour": {
                "type": "ifcpressuremeasure",
                "Description": "Friction shear strength of a rock or soil that is dependent on interparticle friction.\n"
              },
              "HydraulicConductivity": {
                "type": "ifcvelocitymeasure",
                "Description": "Hydraulic Conductivity (permeability) of soil for water, given with the K or Kf value in m/s\n"
              },
              "FrictionAngle": {
                "type": "ifcplaneanglemeasure",
                "Description": "Friction angle is the tested inclination angle from horizontal.\n"
              },
              "GrainSize": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Grain size diameter.\n"
              },
              "PwaveVelocity": {
                "type": "ifcvelocitymeasure",
                "Description": "P-wave velocity of a rock or soil.\n"
              },
              "SwaveVelocity": {
                "type": "ifcvelocitymeasure",
                "Description": "S-wave velocity of a rock or soil.\n"
              },
              "PoisonsRatio": {
                "type": "ifcratiomeasure",
                "Description": "Ratio of transverse contraction strain to longitudinal extension strain in the direction of stretching force.\n"
              },
              "NValue": {
                "type": "ifccountmeasure",
                "Description": "Blow count from standard penetration testing, to ISO 22476-3, ASTM D1586[1] and Australian Standards AS 1289.6.3.1, which correlates to other engineering properties of soils.\n"
              },
              "Resistivity": {
                "type": "ifcelectricresistancemeasure",
                "Description": "Electrical resistivity of a rock or soil (Ohm-m).\n"
              }
            }
          },
          "Pset_SolidStratumComposition": {
            "Properties": {
              "OrganicVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of organic (peat/humus) stratum constituents especially soil.\n"
              },
              "FillVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of fill (controlled placement of anthropogenic soil) stratum constituents.\n"
              },
              "ClayVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of clay (typically smaller than 0.002mm) stratum constituents.\n"
              },
              "SiltVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of silt (typically smaller than 0.063mm) stratum constituents.\n"
              },
              "SandVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of sand (typically smaller than 2mm) stratum constituents.\n"
              },
              "GravelVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of gravel (typically larger than 2mm) stratum constituents.\n"
              },
              "CobblesVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of cobbles (typically larger than 63mm) stratum constituents.\n"
              },
              "BouldersVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of boulders (typically larger than 200mm) stratum constituents.\n"
              },
              "RockVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of rock stratum constituents.\n"
              },
              "WaterVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of water stratum constituents.\n"
              },
              "AirVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of air stratum constituents.\n"
              },
              "ContaminantVolume": {
                "type": "ifcvolumemeasure",
                "Description": "Relative volume of contaminant stratum constituents.\n"
              },
              "CompositeFractions": {
                "type": "penum_soilcompositefractions",
                "Description": "Denomination into soil groups by composite fractions\n"
              }
            }
          }
        }
      },
      "IfcGeotechnicalAssembly": {
        "Parent": "IfcGeotechnicalElement",
        "Description": "Representation of the abstract concept of a geological and geotechnical model, usually an interpretation but sometimes created direct from ground penetrating measurement.\n\nUse of an assembly is optional but can carry the methodology and uncertainty information.\n\nSuch assemblies will include _IfcGeotechnicalStratum_ entity types and may include other entity types such as _IfcPile_, _IfcSlab_ or _IfcSensor_ to represent the capping, lining or logging equipment present.\n\n_IfcBorehole_ or _IfcGeoSlice_  can have a physical reality as a construction hazard alongside being the carrier for the interpreted results. Geological hazards may be associated to any _IfcGeotechnicalAssembly_ or _IfcGeotechnicalStratum_.\n",
        "Psets": {
          "Pset_GeotechnicalAssemblyCommon": {
            "Properties": {
              "Status": {
                "type": "penum_elementstatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "Methodology": {
                "type": "ifctext",
                "Description": "Methodology used to prepare the contents of the geotechnical assembly.\n"
              },
              "Limitations": {
                "type": "ifctext",
                "Description": "Limitations on usage.\n"
              },
              "Purpose": {
                "type": "penum_strataassemblypurpose",
                "Description": "Purpose for which the borehole, section or volumetric model was created. (EU Inspire, boreholeML)\n"
              }
            }
          },
          "Pset_Uncertainty": {
            "Properties": {
              "Description": {
                "type": "ifctext",
                "Description": "The description of the air side system.\n"
              },
              "Basis": {
                "type": "penum_uncertaintybasis",
                "Description": ""
              },
              "LinearUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the overall shape and position in XYZ.\n"
              },
              "HorizontalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in X, if different to the linear uncertainty.\n"
              },
              "OrthogonalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the horizontal shape and position in Y, if different to the horizontal uncertainty.\n"
              },
              "VerticalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in Z, if different to the linear uncertainty.\n"
              }
            }
          }
        }
      },
      "IfcBuiltSystem": {
        "Parent": "IfcSystem",
        "Description": "",
        "Psets": {
          "Pset_BuiltSystemCommon": {
            "Properties": {
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              }
            }
          }
        }
      },
      "IfcGeotechnicalStratum": {
        "Parent": "IfcGeotechnicalElement",
        "Description": "Representation of the concept of an identified discrete almost homogenous geological feature with either an irregular solid or 'Yabuki' top surface shape or a regular voxel cubic shape. A stratum is represented as a discrete entity, specialised (sub typed) from _IfcElement_. A stratum may be broken down into smaller entities if properties vary across the stratum or alternatively properties may be described with bounded numeric ranges. A stratum may carry information about the physical form and its interpretation as a Geological Item (GML).\n\nThe shape representations used should correspond to the sub-type of _IfcGeotechnicalAssembly_ in which it occurs\n",
        "Psets": {
          "Qto_ArealStratumBaseQuantities": {
            "Properties": {
              "Area": {
                "type": "ifcareameasure",
                "Description": "Area of the projection as viewed by an elevation view (for wall projections or as viewed by a ground floor view (for slab projections).\n"
              },
              "Length": {
                "type": "ifcpositivelengthmeasure",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "PlanLength": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Projected plan length of upper edge of slice.\n"
              }
            }
          },
          "Qto_LinearStratumBaseQuantities": {
            "Properties": {
              "Length": {
                "type": "ifcpositivelengthmeasure",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Diameter": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Diameter of the object. It is the diameter of the handrail of the railing.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n\nHere the diameter of the hand or guardrail within the railing.\n"
              }
            }
          },
          "Qto_VolumetricStratumBaseQuantities": {
            "Properties": {
              "Mass": {
                "type": "ifcmassmeasure",
                "Description": "Mass represented, if lower surface of stratum known.\n"
              },
              "Volume": {
                "type": "ifcvolumemeasure",
                "Description": "Total volume of fluid in the tubes and their headers.\n"
              },
              "Area": {
                "type": "ifcareameasure",
                "Description": "Area of the projection as viewed by an elevation view (for wall projections or as viewed by a ground floor view (for slab projections).\n"
              },
              "PlanArea": {
                "type": "ifcareameasure",
                "Description": "Projected plan area of upper surface of model.\n"
              }
            }
          },
          "Pset_GeotechnicalStratumCommon": {
            "Properties": {
              "Status": {
                "type": "penum_elementstatus",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              },
              "IsTopographic": {
                "type": "ifclogical",
                "Description": "Is the stratum ever topmost and so a visible topographic feature\n"
              },
              "Colour": {
                "type": "ifclabel",
                "Description": "Stratum colour\n"
              },
              "Texture": {
                "type": "ifclabel",
                "Description": "Stratum texture\n"
              },
              "PiezometricPressure": {
                "type": "ifcpressuremeasure",
                "Description": "Pressure of water content.\n"
              },
              "PiezometricHead": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Pressure head of water content.\n"
              }
            }
          },
          "Pset_Uncertainty": {
            "Properties": {
              "Description": {
                "type": "ifctext",
                "Description": "The description of the air side system.\n"
              },
              "Basis": {
                "type": "penum_uncertaintybasis",
                "Description": ""
              },
              "LinearUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the overall shape and position in XYZ.\n"
              },
              "HorizontalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in X, if different to the linear uncertainty.\n"
              },
              "OrthogonalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the horizontal shape and position in Y, if different to the horizontal uncertainty.\n"
              },
              "VerticalUncertainty": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range diameter associated to the vertical shape and position in Z, if different to the linear uncertainty.\n"
              }
            }
          }
        }
      },
      "IfcVoidStratum": {
        "Parent": "IfcGeotechnicalStratum",
        "Description": "Representation of the concept of an identified discrete air filled geological feature, including caves and other voids\n"
      },
      "IfcWaterStratum": {
        "Parent": "IfcGeotechnicalStratum",
        "Description": "Representation of the concept of an identified discrete water filled geological or surface feature including lakes, rivers and seas.\n",
        "Psets": {
          "Pset_WaterStratumCommon": {
            "Properties": {
              "WaveRange": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range between peaks and troughs of waves\n"
              },
              "SeicheRange": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range between peaks and troughts of seiche (resonant) waves.\n"
              },
              "TidalRange": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) range between high and low tide levels.\n"
              },
              "AnnualRange": {
                "type": "ifcpositivelengthmeasure",
                "Description": "Indicative (95%-100%) annual range in levels.\n"
              },
              "AnnualTrend": {
                "type": "ifclengthmeasure",
                "Description": "Indicative (95%-100%) annual rise in level.\n"
              },
              "IsFreshwater": {
                "type": "ifclogical",
                "Description": "Indication of freshwater (true,false or unknown)\n"
              }
            }
          }
        }
      },
      "IfcCourse": {
        "Parent": "IfcBuiltElement",
        "Description": "A built element whose length greatly exceeds its thickness and often also its width, usually of a single material laid on site on top of another horizontal or nearly horizontal built element. A course is distinctive from a earthworks element in that a course is a graded granular (which can be bound or unbound) material that is generally processed in some fashion, where as earthworks elements are soil earthen based structure that can be formed by removal and transport of general ground material.\n\nStructurally a course does not have capacity to carry loads over open span, or to be removed or replaced as a single unit. examples of courses include:\n\n* Graded aggregate layers\n\n* Graded sand layers\n\n* Cement bounded material (CBM)\n\n* Asphalt layers\n\n\n",
        "Psets": {
          "Pset_BoundedCourseCommon": {
            "Properties": {
              "SpreadingRate": {
                "type": "number",
                "Description": "The nominal overall mass of material per area covered by the course.\n"
              }
            }
          },
          "Pset_CourseApplicationConditions": {
            "Properties": {
              "ApplicationTemperature": {
                "type": "real",
                "Description": "Indicates the ambient temperature at which the course is applied\n"
              },
              "WeatherConditions": {
                "type": "string",
                "Description": "Indicates the weather conditions during the application of the course\n"
              }
            }
          },
          "Pset_CourseCommon": {
            "Properties": {
              "Thickness": {
                "type": "real",
                "Description": "The nominal overall thickness of the course. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size...?\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcCourseType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The _IfcCourseType_ provides the type information for _IfcCourse_ occurrences.\n\nA course is a built element whose length greatly exceeds its thickness and often also its width, usually of a single material laid on site on top of another horizontal or nearly horizontal built element. A course is distinctive from a earthworks element in that a course is a graded granular (which can be bound or unbound) material that is generally processed in some fashion, where as earthworks elements are soil earthen based structure that can be formed by removal and transport of general ground material.\n\nStructurally a course does not have capacity to carry loads over open span, or to be removed or replaced as a single unit.\n\n\n",
        "Psets": {
          "Pset_BoundedCourseCommon": {
            "Properties": {
              "SpreadingRate": {
                "type": "number",
                "Description": "The nominal overall mass of material per area covered by the course.\n"
              }
            }
          },
          "Pset_CourseApplicationConditions": {
            "Properties": {
              "ApplicationTemperature": {
                "type": "real",
                "Description": "Indicates the ambient temperature at which the course is applied\n"
              },
              "WeatherConditions": {
                "type": "string",
                "Description": "Indicates the weather conditions during the application of the course\n"
              }
            }
          },
          "Pset_CourseCommon": {
            "Properties": {
              "Thickness": {
                "type": "real",
                "Description": "The nominal overall thickness of the course. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size...?\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcPlant": {
        "Parent": "IfcGeographicElement",
        "Description": "Trees, shrubs, herbs, grasses, ferns, and mosses.\n\nNOTE: It is proposed to deprecate the PredefinedType attribute for existing IFC class IfcGeographicElement.\n",
        "Psets": {
          "Pset_PlantCommon": {
            "Properties": {
              "BotanicalName": {
                "type": "string",
                "Description": "Formal scientific name conforming to the International Code of Nomenclature for algae, fungi, and plants (ICN)\n"
              },
              "LocalName": {
                "type": "string",
                "Description": "The local name that the plant is known as.\n"
              },
              "Description": {
                "type": "string",
                "Description": "The description of the air side system.\n"
              }
            }
          }
        }
      },
      "IfcCourse.ARMOUR": {
        "Parent": "IfcCourse",
        "Description": "An Aggregate layer whose primary function is to protect against erosion of the underlying material by water e.g. riprap.\n\n\n\nNOTE Definition from ISO 21650: protective layer on a breakwater, seawall or other rubble mound structures composed of armour units\n\n\n"
      },
      "IfcCourse.FILTER": {
        "Parent": "IfcCourse",
        "Description": "An Intermediate layer whose primary function is to prevent the washing through of fine materials.\n\n\n"
      },
      "IfcCourse.BALLASTBED": {
        "Parent": "IfcCourse",
        "Description": ""
      },
      "IfcCourse.CORE": {
        "Parent": "IfcCourse",
        "Description": "A core course is the bulk internal structure of aggregate structures.\n\n\n"
      },
      "IfcCourse.PAVEMENT": {
        "Parent": "IfcCourse",
        "Description": ""
      },
      "IfcCourse.PROTECTION": {
        "Parent": "IfcCourse",
        "Description": ""
      },
      "IfcEarthworksCut.TRENCH": {
        "Parent": "IfcEarthworksCut",
        "Description": "Excavation whose length greatly exceeds the depth and width. Trench is typically excavated for strip foundations or for buried services such as drainage or cabling.\n\n\n",
        "Psets": {
          "Pset_TrenchExcavationCommon": {
            "Properties": {
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Depth": {
                "type": "real",
                "Description": "The nominal depth of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcEarthworksCut.DREDGING": {
        "Parent": "IfcEarthworksCut",
        "Description": "Underwater excavation to recover material or to create a greater depth of water.\n\n\n"
      },
      "IfcEarthworksCut.EXCAVATION": {
        "Parent": "IfcEarthworksCut",
        "Description": "General type of excavation when more accurate type is not specified.\n\n\n"
      },
      "IfcEarthworksCut.OVEREXCAVATION": {
        "Parent": "IfcEarthworksCut",
        "Description": ""
      },
      "IfcEarthworksCut.TOPSOILREMOVAL": {
        "Parent": "IfcEarthworksCut",
        "Description": "Excavation where the topmost layer of soil containing organic material is cut or stripped. The removed topsoil can be used as fill (_EarthworksElement_) e.g. where planting is planned.\n\n\n"
      },
      "IfcEarthworksCut.STEPEXCAVATION": {
        "Parent": "IfcEarthworksCut",
        "Description": "Removal of the soft part of the existing road slope, where it is dug into steps, when widening a road.\n\n\n"
      },
      "IfcEarthworksCut.PAVEMENTMILLING": {
        "Parent": "IfcEarthworksCut",
        "Description": "Removal of expired material from top of pavement to be replaced by new material.\n\n\n",
        "Psets": {
          "Pset_PavementMillingCommon": {
            "Properties": {
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Depth": {
                "type": "real",
                "Description": "The nominal depth of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcEarthworksCut.CUT": {
        "Parent": "IfcEarthworksCut",
        "Description": "Excavation where soil or rock below topsoil is cut to the depth required for the construction of facilities such as roads and railways. The removed material can be used as fill (_IfcEarthworksElement_) for embankments or to form a level surface on which to build.\n\n\n"
      },
      "IfcEarthworksCut.BASE_EXCAVATION": {
        "Parent": "IfcEarthworksCut",
        "Description": "Excavation for basements of buildings, abutments of bridges or similar structures either partially or completely below ground level.\n\n\n"
      },
      "IfcPavement": {
        "Parent": "IfcBuiltElement",
        "Description": "Type of built element in a road or other paved area to provide an even surface sustaining loads from vehicles or pedestrians, usually comprising several courses. \n\nNOTE Definition from ISO 6707-1: road, runway, or similar construction above the subgrade.\n\n\n",
        "Psets": {
          "Pset_PavementSurfaceCommon": {
            "Properties": {
              "PavementRoughness": {
                "type": "number",
                "Description": "An assessment of the functional condition of the pavement surface indicated as an index according to the International Roughness Index (IRI).\n"
              },
              "PavementTexture": {
                "type": "real",
                "Description": "Characterization of pavement texture by mean profile depth\n\n\n\n>NOTE&nbsp; Definition according to ISO 13473-1:2019\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Flexible": {
                "type": "boolean",
                "Description": "Boolean to identify the pavement type as a Flexible or Rigid structure.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcPavementType": {
        "Parent": "IfcBuiltElementType",
        "Description": "The _IfcPavementType_ provides the type information for _IfcPavement_ occurrences.\n\nA pavement is a type of built element in a road or other paved area to provide an even surface sustaining loads from vehicles or pedestrians, usually comprising several courses.\n\n\n",
        "Psets": {
          "Pset_PavementSurfaceCommon": {
            "Properties": {
              "PavementRoughness": {
                "type": "number",
                "Description": "An assessment of the functional condition of the pavement surface indicated as an index according to the International Roughness Index (IRI).\n"
              },
              "PavementTexture": {
                "type": "real",
                "Description": "Characterization of pavement texture by mean profile depth\n\n\n\n>NOTE&nbsp; Definition according to ISO 13473-1:2019\n"
              }
            }
          }
        }
      },
      "IfcEarthworksCut": {
        "Parent": "IfcFeatureElementSubtraction",
        "Description": "The resulting void from modification of existing terrain or road structure by excavation or by other means of removing material.\n\nNOTE Definition from ISO 6707-1: void that results from bulk excavation of material.\n\nNOTE The material excavated and either used as fill or discarded as waste is not modelled as Cut, but may be handled as a different concept (Resource) in the future.\n\n\n"
      },
      "IfcEarthworksElement": {
        "Parent": "IfcBuiltElement",
        "Description": "A type of built element created by earthwork activities to build subgrade, to raise the level of the ground in general or reinforce or stabilize soil by some mechanical or chemical method.\n"
      },
      "IfcEarthworksFill": {
        "Parent": "IfcEarthworksElement",
        "Description": "A type of earthworks element created by earthwork activities to build subgrade or to raise the level of the ground in general.\n\n\n"
      },
      "IfcEarthworksFill.BACKFILL": {
        "Parent": "IfcEarthworksFill",
        "Description": "Fill behind retaining walls or other structures such as quays, behind abutments and bridges.\n\n\n"
      },
      "IfcEarthworksFill.COUNTERWEIGHT": {
        "Parent": "IfcEarthworksFill",
        "Description": "Embankment built on the side of the main road structure to reduce the settlement of the road.\n\n\n"
      },
      "IfcEarthworksFill.SUBGRADE": {
        "Parent": "IfcEarthworksFill",
        "Description": "Type of earthworks element forming the structure below pavement and above natural soil.\n\nNOTE Definition from ISO 6707-1: upper part of the soil, natural or constructed, that supports the loads transmitted by the overlying structure of a road, runway, or similar hard surface.\n\nNOTE Definition from PIARC: Upper layer of the natural ground upon which the pavement is constructed.\n\n\n"
      },
      "IfcEarthworksFill.EMBANKMENT": {
        "Parent": "IfcEarthworksFill",
        "Description": ""
      },
      "IfcEarthworksFill.TRANSITIONSECTION": {
        "Parent": "IfcEarthworksFill",
        "Description": "Section of subgrade to ensure the consistency of stiffness and prevent uneven settlement. Transition section may appear e.g. between: embankment and bridge abutment; embankment and transverse structure; cutting and tunnel; embankment and cutting.\n\n\n",
        "Psets": {
          "Pset_TransitionSectionCommon": {
            "Properties": {
              "Length": {
                "type": "real",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcEarthworksFill.SUBGRADEBED": {
        "Parent": "IfcEarthworksFill",
        "Description": "Upper part of the soil, natural or constructed, that supports the loads transmitted by the overlying structure of a road, runway, or similar hard surface.\n\n\n"
      },
      "IfcEarthworksFill.SLOPEFILL": {
        "Parent": "IfcEarthworksFill",
        "Description": "Side slope (batter) fill abutting the road structure or back slope fill.\n\n\n"
      },
      "IfcReinforcedSoil": {
        "Parent": "IfcEarthworksElement",
        "Description": "Soil reinforced or stabilized by some mechanical or chemical method.\n\n\n"
      },
      "IfcReinforcedSoil.SURCHARGEPRELOADED": {
        "Parent": "IfcReinforcedSoil",
        "Description": "A method that applies load to the foundation to discharge pore water, and the foundation is consolidated to improve the foundation strength. Unloading when the carrying capacity reaches the required level.\n\n\n"
      },
      "IfcReinforcedSoil.VERTICALLYDRAINED": {
        "Parent": "IfcReinforcedSoil",
        "Description": "A method to set vertical drainage measures in the foundation, so that pore water in the soil is discharged and the foundation strength is improved.\n\n\n"
      },
      "IfcReinforcedSoil.DYNAMICALLYCOMPACTED": {
        "Parent": "IfcReinforcedSoil",
        "Description": "The method of using dynamic tamping machine usually free falling a heavy hammer from the height, compacting the soil and quickly improving the bearing capacity of the foundation.\n\n\n"
      },
      "IfcReinforcedSoil.REPLACED": {
        "Parent": "IfcReinforcedSoil",
        "Description": "Dig out the soft soil in a certain range below the foundation ground and then backfill the area with high strength, low compressibility and no corrosive materials.\n\n\n"
      },
      "IfcReinforcedSoil.ROLLERCOMPACTED": {
        "Parent": "IfcReinforcedSoil",
        "Description": "A kind of compacting method that adopts rolling machinery, repeated rolling and vibration compacts the foundation soil, increasing strength and descreasing compressibility.\n\n\n"
      },
      "IfcReinforcedSoil.GROUTED": {
        "Parent": "IfcReinforcedSoil",
        "Description": "A method of injecting curable slurry into cracks or pores of a geotechnical foundation to improve its physical and mechanical properties.\n\n\n"
      },
      "IfcActionRequest": {
        "Parent": "IfcControl",
        "Description": "A request is the act or instance of asking for something, such as a request for information, bid submission, or performance of work.\n\n\n\nRequests may take many forms depending on the need including fault reports for maintenance, requests for small works, and purchase requests (where these are to be made through a help desk or buying function).\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Atribute _RequestID_ renamed to _Identification_ and promoted to supertype _IfcControl_, attributes _PredefinedType_, _Status_, and _LongDescription_ added.\n\n\n",
        "Psets": {
          "Pset_ActionRequest": {
            "Properties": {
              "RequestComments": {
                "type": "string",
                "Description": "Comments that may be made on the request.\n"
              },
              "RequestSourceLabel": {
                "type": "string",
                "Description": "A specific name or label that further qualifies the identity of a request source. In the event of an email, this may be the email address.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Status": {
                "type": "string",
                "Description": "The status currently assigned to the request.  Possible values include:  \\X\\0D\nHold: wait to see if further requests are received before deciding on action  \\X\\0D\nNoAction: no action is required on this request  \\X\\0D\nSchedule: plan action to take place as part of maintenance or other task planning/scheduling  \\X\\0D\nUrgent: take action immediately  \\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE The attribute has been added."
              },
              "LongDescription": {
                "type": "string",
                "Description": "Detailed description of the permit.\\X\\0D\n\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE The attribute has been added."
              }
            }
          }
        }
      },
      "IfcPermit": {
        "Parent": "IfcControl",
        "Description": "A permit is a permission to perform work in places and on artifacts where regulatory, security or other access restrictions apply.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _PermitID_ renamed to _Identification_ and promoted to supertype _IfcControl_, attributes _PredefinedType_, _Status_, and _LongDescription_ added.\n\n\n",
        "Psets": {
          "Pset_Permit": {
            "Properties": {
              "EndDate": {
                "type": "string",
                "Description": "Date and time at which the permit ceases to be valid.\n"
              },
              "EscortRequirement": {
                "type": "boolean",
                "Description": "Indicates whether or not an escort is required to accompany persons carrying out a work order at or to/from the place of work (= TRUE) or not (= FALSE).\n\n\n\nNOTE - There are many instances where escorting is required, particularly in a facility that has a high security rating. Escorting may require that persons are escorted to and from the place of work. Alternatively, it may involve the escort remaining at the place of work at all times.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "SpecialRequirements": {
                "type": "string",
                "Description": "Any additional special requirements that need to be included in the permit to work.\n\n\n\nNOTE - Additional permit requirements may be imposed according to the nature of the facility at which the work is carried out. For instance, in clean areas, special clothing may be required whilst in corrective institutions, it may be necessary to check in and check out tools that will be used for work as a safety precaution.\n"
              },
              "StartDate": {
                "type": "string",
                "Description": "Date and time from which the permit becomes valid.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "Status": {
                "type": "string",
                "Description": "The status currently assigned to the permit.\\X\\0D\n\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE The attribute has been added."
              },
              "LongDescription": {
                "type": "string",
                "Description": "Detailed description of the request.\\X\\0D\n\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE The attribute has been added."
              }
            }
          }
        }
      },
      "IfcProjectOrder": {
        "Parent": "IfcControl",
        "Description": "A project order is a directive to purchase products and/or perform work, such as for construction or facilities management.\n\n\n\nProject orders are typically formal contracts between two organizations, where cost and time information may be rigid or flexible according to contained schedule types and constraints.\n\n\n\n> HISTORY&nbsp; New entity in IFC2.0\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _ID_ renamed to _Identification_ and promoted to supertype _IfcControl_. Attribute 'LongDescription' added.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "Status": {
                "type": "string",
                "Description": "The current status of a project order.Examples of status values that might be used for a project order status include:\\X\\0D\n* PLANNED\\X\\0D\n* REQUESTED\\X\\0D\n* APPROVED\\X\\0D\n* ISSUED\\X\\0D\n* STARTED\\X\\0D\n* DELAYED\\X\\0D\n* DONE"
              },
              "LongDescription": {
                "type": "string",
                "Description": "A detailed description of the project order describing the work to be completed."
              }
            }
          }
        }
      },
      "IfcProjectOrder.MOVEORDER": {
        "Parent": "IfcProjectOrder",
        "Description": "An instruction to move persons and artefacts and a description of the move locations, objects to be moved, etc.\n\n\n",
        "Psets": {
          "Pset_ProjectOrderMoveOrder": {
            "Properties": {
              "SpecialInstructions": {
                "type": "string",
                "Description": "Special instructions that affect the move.\n"
              }
            }
          }
        }
      },
      "IfcProjectOrder.WORKORDER": {
        "Parent": "IfcProjectOrder",
        "Description": "A general instruction to carry out work and a description of the work to be done. Note the difference between a work order generally and a maintenance work order.\n\n\n",
        "Psets": {
          "Pset_ProjectOrderWorkOrder": {
            "Properties": {
              "ContractualType": {
                "type": "string",
                "Description": "The contractual type of the work.\n"
              },
              "IfNotAccomplished": {
                "type": "string",
                "Description": "Comments if the job is not accomplished.\n"
              },
              "ProductDescription": {
                "type": "string",
                "Description": "A textual description of the products that require the work.\n"
              },
              "WorkTypeRequested": {
                "type": "string",
                "Description": "Work type requested in circumstances where there are categorizations of types of work task. It could be used to identify a remedial task, minor work task, electrical task etc.\n"
              }
            }
          }
        }
      },
      "IfcProjectOrder.PURCHASEORDER": {
        "Parent": "IfcProjectOrder",
        "Description": "An instruction to purchase goods and/or services and a description of the goods and/or services to be purchased that is to be performed.\n\n\n",
        "Psets": {
          "Pset_ProjectOrderPurchaseOrder": {
            "Properties": {
              "IsFOB": {
                "type": "boolean",
                "Description": "Indication of whether contents of the purchase order are delivered 'Free on Board' (= True) or not (= False). FOB is a shipping term which indicates that the supplier pays the shipping costs (and usually also the insurance costs) from the point of manufacture to a specified destination, at which point the buyer takes responsibility.\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "ShipMethod": {
                "type": "string",
                "Description": "Method of shipping that will be used for goods or services.\n"
              }
            }
          }
        }
      },
      "IfcProjectOrder.MAINTENANCEWORKORDER": {
        "Parent": "IfcProjectOrder",
        "Description": "An instruction to carry out maintenance work and a description of the work that is to be performed.\n\n\n",
        "Psets": {
          "Pset_ProjectOrderMaintenanceWorkOrder": {
            "Properties": {
              "ContractualType": {
                "type": "string",
                "Description": "The contractual type of the work.\n"
              },
              "FaultPriorityType": {
                "type": "string",
                "Description": "Identifies the predefined types of priority that can be assigned from which the type may be set where:\n\n\n\nHigh: action is required urgently.\n\nMedium: action can occur within a reasonable period of time.\n\nLow: action can occur when convenient.\n"
              },
              "IfNotAccomplished": {
                "type": "string",
                "Description": "Comments if the job is not accomplished.\n"
              },
              "LocationPriorityType": {
                "type": "string",
                "Description": "Identifies the predefined types of priority that can be assigned from which the type may be set where:\n\n\n\nHigh: action is required urgently.\n\nMedium: action can occur within a reasonable period of time.\n\nLow: action can occur when convenient.\n"
              },
              "MaintenaceType": {
                "type": "string",
                "Description": "Identifies the predefined types of maintenance that can be done from which the type that generates the maintenance work order may be set where:\n\n\n\nConditionBased: generated as a result of the condition of an asset or artefact being less than a determined value.\n\nCorrective: generated as a result of an immediate and urgent need for maintenance action.\n\nPlannedCorrective: generated as a result of immediate corrective action being needed but with sufficient time available for the work order to be included in maintenance planning.\n\nScheduled: generated as a result of a fixed, periodic maintenance requirement.\n"
              },
              "ProductDescription": {
                "type": "string",
                "Description": "A textual description of the products that require the work.\n"
              },
              "ScheduledFrequency": {
                "type": "real",
                "Description": "The period of time between expected instantiations of a work order that may have been predefined.\n"
              },
              "WorkTypeRequested": {
                "type": "string",
                "Description": "Work type requested in circumstances where there are categorizations of types of work task. It could be used to identify a remedial task, minor work task, electrical task etc.\n"
              }
            }
          }
        }
      },
      "IfcProjectOrder.CHANGEORDER": {
        "Parent": "IfcProjectOrder",
        "Description": "An instruction to make a change to a product or work being undertaken and a description of the work that is to be performed.\n\n\n",
        "Psets": {
          "Pset_ProjectOrderChangeOrder": {
            "Properties": {
              "BudgetSource": {
                "type": "string",
                "Description": "The budget source requested.\n"
              },
              "ReasonForChange": {
                "type": "string",
                "Description": "A description of the problem for why a change is needed.\n"
              }
            }
          }
        }
      },
      "IfcStructuralAction": {
        "Parent": "IfcStructuralActivity",
        "Description": "A structural action is a structural activity that acts upon a structural item or building element.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _DestabilizingLoad_ made optional. Attribute _CausedBy_ deleted; use _IfcRelAssignsToProduct_ via _ReferencedBy_ instead.\n\n\n\n{ .use-head}\n\nRelationship use definition\n\n\n\nStructural actions are grouped into either an _IfcStructuralLoadGroup_ of predefined type LOAD_GROUP or, more often, an _IfcStructuralLoadCase_. This is accomplished via the inverse relationship _HasAssignments_ and an _IfcRelAssignsToGroup_ relationship object. _IfcStructuralLoadGroup.LoadGroupFor_ or _IfcStructuralLoadCase.LoadGroupFor_ respectively refers to the structural analysis model(s) in which the loads are used.\n\n\n\nIt is furthermore possible to establish relationships between actions in one analysis model and reactions in another analysis model which cause the actions. For example, a support reaction from one structural system may be taken over as a load onto another supporting structural system. This is expressed by means of the inverse relationship _ReferencedBy_ of the action and an _IfcRelAssignsToProduct_ relationship object. _IfcRelAssignsToProduct.Name_ is set to 'Causes' and _IfcRelAssignsToProduct.RelatedObjects_ refers to an instance of a subtype of _IfcStructuralReaction_.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "DestabilizingLoad": {
                "type": "boolean",
                "Description": "Indicates if this action may cause a stability problem. If it is ''FALSE'', no further investigations regarding stability problems are necessary.",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              }
            }
          }
        }
      },
      "IfcStructuralActivity": {
        "Parent": "IfcProduct",
        "Description": "The abstract entity _IfcStructuralActivity_ combines the definition of actions (such as forces, displacements, etc.) and reactions (support reactions, internal forces, deflections, etc.) which are specified by using the basic load definitions from the _IfcStructuralLoadResource_.\n\n\n\nThe differentiation between actions and reactions is realized by instantiating objects either from subclasses of _IfcStructuralAction_ or _IfcStructuralReaction_ respectively. They inherit commonly needed attributes from the abstract superclass _IfcStructuralActivity_, notably the relationship which connects actions or reactions with connections, analysis members, or elements (subtypes of _IfcStructuralItem_ or _IfcElement_).\n\n\n\n> NOTE&nbsp; Instances of _IfcStructuralActivity_ which are connected with an _IfcElement_ are subject to agreements outside the scope of this specification.\n\n\n\n> NOTE&nbsp; The semantics of _IfcStructuralActivity_ are only fully defined if an activity instance is connected with exactly one structural item. The inverse attribute _AssignedToStructuralItem_ can only be empty in incomplete models or in conceptual models which are not yet ready for analysis.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Cardinality of attribute _AssignedToStructuralItem_ relaxed from 1 to 0..1 in order to allow for schema-compliant incomplete models as well as conceptual models without load&mdash;item relationships.\n\n\n\n****Coordinate Systems****:\n\n\n\nThe following coordinate systems are distinguished:\n\n\n\n* The so-called global coordinate system is the coordinate system shared by all items and activities which are grouped in a common _IfcStructuralAnalysisModel_. This coordinate system is established by an _ObjectPlacement_. (This coordinate system is not necessarily the same as the _IfcProject_'s world coordinate system.)\n\n* The so-called local coordinate system is a coordinate system local to a structural item (connection or member). This coordinate system is established by a _Representation_ in conjunction with further use definitions and attributes of subtypes of _IfcStructuralItem_.\n\n\n\nRepresentation items in topology representations are always given within the _ObjectPlacement_, i.e. in so-called global coordinates (global with respect to the _IfcStructuralAnalysisModel_ to which this activity belongs).\n\n\n\nLocations of the load objects in the _AppliedLoad_ attribute (if of type _IfcStructuralLoadConfiguration_) are always given in local coordinates.\n\n\n\nDirections of the load objects in the _AppliedLoad_ attribute refer to global or local coordinates according to the _GlobalOrLocal_ attribute.\n\n\n\nThe _ObjectPlacement_ and _Representation_ are sometimes not explicitly instantiated; instead they may be implied as described below. Global and local coordinate systems are then determined in the same way as with explicit placement and representation.\n\n\n\n****Topology Use Definitions****:\n\n\n\nInstances of _IfcStructuralActivity_ which are connected with a structural item of same dimensionality, i.e.\n\n\n\n* a point action or reaction connected with a point item (_IfcStructuralPointConnection_),\n\n* a curve action or reaction connected with a curve item (_IfcStructuralCurveConnection_, _IfcStructuralCurveMember_), or\n\n* a surface action or reaction connected with a surface item (_IfcStructuralSurfaceConnection_, _IfcStructuralSurfaceMember_) and which acts on the entire surface of the item and is not specified by isocontours\n\n\n\nshall not have an _ObjectPlacement_ nor a _Representation_. It is implied that the placement and representation of the _IfcStructuralActivity_ is the same as the ones of the _IfcStructuralItem_.\n\n\n\nInstances of _IfcStructuralActivity_ which are connected with\n\n\n\n* a curve item (_IfcStructuralCurveConnection_, _IfcStructuralCurveMember_) and act on a point of the item\n\n* a surface item (_IfcStructuralSurfaceConnection_, _IfcStructuralSurfaceMember_) and act on a point or on a curve or on a part of the surface of the item\n\n\n\nshall have a topology representation as specified below. It includes a placement and a product representation. The _IfcProductRepresentation_ shall be given by an item in a _Representation_ of type _IfcTopologyRepresentation_.\n\n\n\nInstances of _IfcStructuralActivity_ which are connected with\n\n\n\n* a surface item (_IfcStructuralSurfaceConnection_, _IfcStructuralSurfaceMember_) and are specified by isocontours\n\n\n\nshall have a shape representation as specified below. It includes a placement and a product representation. The _IfcProductRepresentation_ shall be given by items in a _Representation_ of type _IfcShapeRepresentation_. Shape representation and topology representation may be combined.\n\n\n\n**Local Placement**\n\n\n\nThe local placement for _IfcStructuralActivity_ is defined in its supertype _IfcProduct_. It is defined by the _IfcLocalPlacement_, which establishes a global coordinate system which shall be common to all items and activities in an _IfcStructuralAnalysisModel_.\n\n\n\n**Topology Representation**\n\n\n\nInstances of _IfcStructuralActivity_ which act on parts of a surface item shall have a topology representation given by a face with underlying surface geometry, _IfcFaceSurface_, which should be the single item of _IfcTopologyRepresentation.Items_. The surface establishes a local coordinate system of the activity:\n\n\n\n* The origin of surface parameters u,v is the origin of the local coordinate system.\n\n* The local x and y directions follow the tangents on the surface and are in parallel with and directed like u and v respectively.\n\n* The local z direction is in parallel with and directed like the surface normal.\n\n\n\n> * _RepresentationIdentifier_: 'Reference'\n\n> * _RepresentationType_: 'Face'\n\n\n\nInstances of _IfcStructuralActivity_ which act on a curve on a surface item shall have a topology representation given by an edge (_IfcEdge_ or subtype), which should be the single item of _IfcTopologyRepresentation.Items_. The curve geometry shall be compatible with the surface geometry of the connected item. In conjunction with this surface, the curve establishes a local coordinate system of the activity:\n\n\n\n* The origin of the curve parameter u is the origin of the local coordinate system.\n\n* The local x direction follows the tangent on the curve and is directed like u.\n\n* The local z direction is in parallel with and directed like the surface normal of the connected surface item.\n\n* The local x,y,z directions form a right-handed Cartesian coordinate system.\n\n\n\n> * _RepresentationIdentifier_: 'Reference'\n\n> * _RepresentationType_: 'Edge'\n\n\n\n> NOTE&nbsp; While an _IfcEdge_ (or _IfcOrientedEdge_ with underlying _IfcEdge_) does not provide an explicit underlying curve geometry, it may be used to imply an underlying straight line as reference curve with the origin of the curve parameter at the start vertex point.\n\n\n\nInstances of _IfcStructuralActivity_ which act on a single point on a curve or surface item shall have a topology representation given by an _IfcVertexPoint_, which should be the single item of _IfcTopologyRepresentation.Items_. The point geometry shall be compatible with the curve or surface geometry of the connected item. The local coordinate system of the activity is oriented by the curve or surface geometry of the connected item as described above for activities with edge or face topology.\n\n\n\n> * _RepresentationIdentifier_: 'Reference'\n\n> * _RepresentationType_: 'Vertex'\n\n\n\n**Shape Representation**\n\n\n\nInstances of _IfcStructuralActivity_ which act on a surface item and are specified by isocontours (level sets) shall have a shape representation given by a set of curves on a surface, _IfcPCurve_. The basis surface shall comply with or preferably be identical with the surface of the structural item to which the activity is connected. The representation identifier and type of this geometric representation is:\n\n\n\n> * _RepresentationIdentifier_: 'Level set'\n\n> * _RepresentationType_: 'GeometricCurveSet'\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "GlobalOrLocal": {
                "values": [
                  "GLOBAL_COORDS",
                  "LOCAL_COORDS"
                ],
                "type": "IfcGlobalOrLocalEnum",
                "Description": "Indicates whether the load directions refer to the global coordinate system (global to\\X\\0D\nthe analysis model, i.e. as established by _IfcStructuralAnalysisModel.SharedPlacement_)\\X\\0D\nor to the local coordinate system (local to the activity or connected item, as established by\\X\\0D\nan explicit or implied representation and its parameter space).\\X\\0D\n\\X\\0D\n> NOTE, the informal definition of _IfcRepresentationResource.IfcGlobalOrLocalEnum_ doe s not distinguish between \"global coordinate system\" and \"world coordinate system\". On the other hand, this distinction is necessary in the _IfcStructuralAnalysisDomain_ where the shared \"global\" coordinate system of an analysis model may very well not be the same as the project-wide world coordinate system.\\X\\0D\n\\X\\0D\n> NOTE&nbsp; In the scope of _IfcStructuralActivity.GlobalOrLocal_, the meaning of GLOBAL_COORDS is therefore not to be taken as world coordinate system but as the analysis model specific shared coordinate system. In contrast, LOCAL_COORDS is to be taken as coordinates which are local to individual structural items and activities, as established by subclass-specific geometry use definitions."
              }
            }
          }
        }
      },
      "IfcStructuralConnection": {
        "Parent": "IfcStructuralItem",
        "Description": "An _IfcStructuralConnection_ represents a structural connection object (node connection, edge connection, or surface connection) or supports.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n"
      },
      "IfcStructuralCurveAction": {
        "Parent": "IfcStructuralAction",
        "Description": "A structural curve action defines an action which is distributed over a curve. A curve action may be connected with a curve member or curve connection, or surface member or surface connection.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Former entity _IfcStructuralLinearActionVarying_ from IFC2x2 has been removed and are replaced by this entity.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralActivity_.\n\n\n\n****Topology Use Definitions****:\n\n\n\nStandard Case:  \n\nIf connected with a curve item, instances of _IfcStructuralCurveAction_ shall not have an _ObjectPlacement_ nor a _Representation_. It is implied that the placement and representation of the _IfcStructuralActivity_ is the same as the ones of the member or connection.\n\n\n\nSpecial Case 1:  \n\nIf connected with a surface item, instances of _IfcStructuralCurveAction_ shall have an _ObjectPlacement_ and _Representation_, containing an _IfcEdgeCurve_. See _IfcStructuralActivity_ for further definitions.\n\n\n\nSpecial Case 2:  \n\nIf not connected with a structural item (which may happen in an incomplete or conceptual model), a curve action should have an _ObjectPlacement_ and _Representation_, containing an _IfcEdgeCurve_. See _IfcStructuralActivity_ for further definitions.\n\n\n\n{ .spec-head}\n\nInformal Propositions:\n\n\n\n1. If the curve action is of the predefined type CONST, SINUS, or PARABOLA, _SELF\\IfcStructuralActivity.AppliedLoad_ must not be of type _IfcStructuralLoadConfiguration_. In case of SINUS and PARABOLA, the load item defines the maximum of the load at the centre of the load distribution.\n\n2. If the curve action is of the predefined type LINEAR, _SELF\\IfcStructuralActivity.AppliedLoad_ shall be of type _IfcStructuralLoadConfiguration_ and shall contain two items.\n\n3. If the curve action is of the predefined type POLYGONAL, _SELF\\IfcStructuralActivity.AppliedLoad_ shall be of type _IfcStructuralLoadConfiguration_ and shall contain three or more items.\n\n4. If the curve action is of the predefined type DISCRETE, _SELF\\IfcStructuralActivity.AppliedLoad_ shall be of type _IfcStructuralLoadConfiguration_ and shall contain two or more items.\n\n5. In case of types LINEAR, POLYGONAL, and DISCRETE, the load items shall have one-dimensional _IfcStructuralLoadConfiguration.Locations_, defining the location of the load samples in local coordinates of the curve action. The load items shall be provided in ascending order according to their locations. The first and the last load item define the extent of the load distribution. \n\n6. Point actions must be of type DISCRETE, thus contain two or more load points. (Single point loads are modeled by _IfcStructuralPointAction_.)\n\n7. All items in _SELF\\IfcStructuralActivity.AppliedLoad\\IfcStructuralLoadConfiguration.Values_ shall be of the same entity type.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "ProjectedOrTrue": {
                "values": [
                  "PROJECTED_LENGTH",
                  "TRUE_LENGTH"
                ],
                "type": "IfcProjectedOrTrueLengthEnum",
                "Description": "Defines whether load values are given per true length of the curve on which they act, or per length of the projection of the curve in load direction.  The latter is only applicable to loads which act in global coordinate directions."
              }
            }
          }
        }
      },
      "IfcStructuralCurveAction.PARABOLA": {
        "Parent": "IfcStructuralCurveAction",
        "Description": "The load value is distributed as a half wave described by a symmetric quadratic parabola.\n\n\n"
      },
      "IfcStructuralCurveAction.SINUS": {
        "Parent": "IfcStructuralCurveAction",
        "Description": "The load value is distributed as a sinus half wave.\n\n\n"
      },
      "IfcStructuralCurveAction.CONST": {
        "Parent": "IfcStructuralCurveAction",
        "Description": "The load has a constant value over its entire extent.\n\n\n"
      },
      "IfcStructuralCurveAction.LINEAR": {
        "Parent": "IfcStructuralCurveAction",
        "Description": "The load value is linearly distributed over the load's extent.\n\n\n"
      },
      "IfcStructuralCurveAction.DISCRETE": {
        "Parent": "IfcStructuralCurveAction",
        "Description": "The load is specified as a series of discrete load points.\n\n\n"
      },
      "IfcStructuralCurveAction.EQUIDISTANT": {
        "Parent": "IfcStructuralCurveAction",
        "Description": "The load consists of n consecutive sections of same length and is specified by n+1 load samples.  The interpolation type over the segments is not defined by this distribution type but may be qualified in _IfcObject.ObjectType_ based on additional agreements.\n\n\n"
      },
      "IfcStructuralCurveAction.POLYGONAL": {
        "Parent": "IfcStructuralCurveAction",
        "Description": "The load consists of several consecutive linear sections.\n\n\n"
      },
      "IfcStructuralCurveConnection": {
        "Parent": "IfcStructuralConnection",
        "Description": "Instances of _IfcStructuralCurveConnection_ describe edge 'nodes', i.e. edges where two or more surface members are joined, or edge supports. Edge curves may be straight or curved.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _Axis_ added, allowing for skewed supports. Use definitions added.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralItem_. The local coordinate system is established by the reference curve given by topology representation and by the attribute _Axis_. The local x axis is parallel with the tangent on the reference curve. The local z axis is located in the surface which is created by sweeping _Axis_ along the reference curve and is directed according to _Axis_. The local y axis is directed such that x,y,z form a right-handed Cartesian coordinate system.\n\n\n"
      },
      "IfcStructuralCurveMember": {
        "Parent": "IfcStructuralMember",
        "Description": "Instances of _IfcStructuralCurveMember_ describe edge members, i.e. structural analysis idealizations of beams, columns, rods etc.. Curve members may be straight or curved.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _Axis_ and WHERE rule added. Use definitions changed.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralItem_. The local coordinate system is established by the reference curve given by topology representation and by the attribute _Axis_. The local x axis is parallel with the tangent on the reference curve. The local z axis is located in the surface which is created by sweeping _Axis_ along the reference curve and is directed according to _Axis_. The local y axis is directed such that x,y,z form a right-handed Cartesian coordinate system.\n\n\n"
      },
      "IfcStructuralCurveMember.COMPRESSION_MEMBER": {
        "Parent": "IfcStructuralCurveMember",
        "Description": "A member without tensional stiffness.\n\n\n"
      },
      "IfcStructuralCurveMember.PIN_JOINED_MEMBER": {
        "Parent": "IfcStructuralCurveMember",
        "Description": ""
      },
      "IfcStructuralCurveMember.TENSION_MEMBER": {
        "Parent": "IfcStructuralCurveMember",
        "Description": "A member without compressional stiffness.\n\n\n"
      },
      "IfcStructuralCurveMember.CABLE": {
        "Parent": "IfcStructuralCurveMember",
        "Description": ""
      },
      "IfcStructuralCurveMember.RIGID_JOINED_MEMBER": {
        "Parent": "IfcStructuralCurveMember",
        "Description": ""
      },
      "IfcStructuralCurveMemberVarying": {
        "Parent": "IfcStructuralCurveMember",
        "Description": "This entity describes edge members with varying profile properties. Each instance of _IfcStructuralCurveMemberVarying_ is composed of two or more instances of _IfcStructuralCurveMember_ with differing profile properties. These subordinate members relate to the instance of _IfcStructuralCurveMemberVarying_ by _IfcRelAggregates_.\n\n\n\n> NOTE&nbsp; A curve member whose variation of profile properties can be sufficiently described by a start profile and an end profile (e.g. tapers) shall be modeled as a single direct instance of the supertype _IfcStructuralCurveMember_.\n\n\n\n> NOTE&nbsp; It is recommended that structural activities (actions or reactions) are not connected with aggregated _IfcStructuralCurveMemberVarying_ but only with the _IfcStructuralCurveMember_s in the aggregation. That way, difficulties in interpretation of local coordinates are avoided.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Use definition changed.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralItem_ and _IfcStructuralCurveMember_. The local coordinates of the aggregate are derived from those of its parts. Length measures in local x direction of the aggregate depend on continuity and lengths of the parts. The _Axis_ of the aggregate shal be the same as the _Axis_ of the part at the start of the aggregate.\n\n\n\n****Material Use Definition****\n\n\n\nOnly the individual parts (direct instances of _IfcStructuralCurveMember_) carry material and profile information.\n"
      },
      "IfcStructuralCurveReaction": {
        "Parent": "IfcStructuralReaction",
        "Description": "This entity defines a reaction which occurs distributed over a curve. A curve reaction may be connected with a curve member or curve connection, or surface member or surface connection.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralActivity_.\n\n\n\n****Topology Use Definitions****:\n\n\n\nStandard Case:  \n\nIf connected with a curve item, instances of _IfcStructuralCurveRection_ shall not have an _ObjectPlacement_ nor a _Representation_. It is implied that the placement and representation of the _IfcStructuralActivity_ is the same as the ones of the member or connection.\n\n\n\nSpecial Case:  \n\nIf connected with a surface item, instances of _IfcStructuralCurveReaction_ shall have an _ObjectPlacement_ and _Representation_, containing an _IfcEdgeCurve_. See _IfcStructuralActivity_ for further definitions.\n\n\n\n{ .spec-head}\n\nInformal Propositions:\n\n\n\n1. If the curve reaction is of the predefined type CONST, _SELF\\IfcStructuralActivity.AppliedLoad_ must not be of type _IfcStructuralLoadConfiguration_.\n\n2. If the curve reaction is of the predefined type LINEAR, _SELF\\IfcStructuralActivity.AppliedLoad_ shall be of type _IfcStructuralLoadConfiguration_ and shall contain two items.\n\n3. If the curve reaction is of the predefined type POLYGONAL, _SELF\\IfcStructuralActivity.AppliedLoad_ shall be of type _IfcStructuralLoadConfiguration_ and shall contain three or more items.\n\n4. If the curve action is of the predefined type DISCRETE, _SELF\\IfcStructuralActivity.AppliedLoad_ shall be of type _IfcStructuralLoadConfiguration_ and shall contain two or more items.\n\n5. In case of types LINEAR, POLYGONAL, and DISCRETE, the load items shall have one-dimensional _IfcStructuralLoadConfiguration.Locations_, defining the location of the result samples in local coordinates of the curve reaction. The load items shall be provided in ascending order according to their locations. The first and the last load item define the extent of the result distribution. \n\n6. If the curve reaction is of the predefined type EQUIDISTANT, _SELF\\IfcStructuralActivity.AppliedLoad_ shall be of type _IfcStructuralLoadConfiguration_ and shall contain two or more items. _IfcStructuralLoadConfiguration.Locations_ shall be omitted as it is implicit. The load items shall be provided in ascending order. The first and the last load item are located at the beginning and end of the result distribution, respectively.\n\n7. All items in _SELF\\IfcStructuralActivity.AppliedLoad\\IfcStructuralLoadConfiguration.Values_ shall be of the same entity type.\n\n\n"
      },
      "IfcStructuralItem": {
        "Parent": "IfcProduct",
        "Description": "The abstract entity _IfcStructuralItem_ is the generalization of structural members and structural connections, that is, analysis idealizations of elements in the building model. It defines the relation between structural members and connections with structural activities (actions and reactions).\n\n\n\nRelationships between elements in the building model and structural items as their idealizations can be expressed by instances of _IfcRelAssignsToProduct_.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Use definitions and informal proposition added.\n\n\n\n****Coordinate Systems****:\n\n\n\nThe following coordinate systems are distinguished:\n\n\n\n* The so-called global coordinate system is the coordinate system shared by all items and activities which are grouped in a common _IfcStructuralAnalysisModel_. This coordinate system is established by _SELF\\IfcProduct.ObjectPlacement_. (This coordinate system is not necessarily the same as the _IfcProject_'s world coordinate system.)\n\n* The so-called local coordinate system is a coordinate system local to a structural item (connection or member). This coordinate system is established by a _Representation_ (attribute inherited from _IfcProduct_) in conjunction with further use definitions and attributes of subtypes of _IfcStructuralItem_.\n\n\n\nRepresentation items in topology representations are always given within the _ObjectPlacement_, i.e. in so-called global coordinates (global with respect to the _IfcStructuralAnalysisModel_ to which this item belongs).\n\n\n\nThe usage of local coordinate systems is further defined in subtypes.\n\n\n\n****Topology Use Definitions****:\n\n\n\nInstances of _IfcStructuralItem_ shall have a topology representation. It includes a placement and a product representation. The _IfcProductRepresentation_ shall be given by an item in a _Representation_ of type _IfcTopologyRepresentation_.\n\n\n\n**Local Placement**\n\n\n\nThe local placement for _IfcStructuralItem_ is defined in its supertype _IfcProduct_. It is defined by the _IfcLocalPlacement_, which establishes a global coordinate system which shall be common to all items and activities in an _IfcStructuralAnalysisModel_.\n\n\n\n**Topology Representation**\n\n\n\nInstances of _IfcStructuralItem_ shall have a topology representation given by an instance of a subtype of _IfcTopologicalRepresentationItem_, which should be the single item of _IfcTopologyRepresentation.Items_. Depending on the dimensionality of the structural item, one of the following types of toplogical representation items shall be used:\n\n\n\n* Point connections shall be represented by an _IfcVertexPoint_ with an underlying _IfcCartesianPoint_. The Cartesian point is the reference point of the connection in the so-called global coordinate system. The following labels are used in the _IfcTopologyRepresentation_: \n\n    * _RepresentationIdentifier_: 'Reference'\n\n    * _RepresentationType_: 'Vertex'    \n\n* Curve members and curve connections shall either be represented by an _IfcOrientedEdge_, _IfcEdgeCurve_, or _IfcEdge_. The curve to which the _IfcEdgeCurve_ (or an _IfcOrientedEdge_'s underlying _IfcEdgeCurve_) refers to is the reference curve of the structural item in the global coordinate system. Start and end vertex of the edge shall be _IfcVertexPoint_s with underlying _IfcCartesianPoint_s. The following labels are used in the _IfcTopologyRepresentation_: \n\n    * _RepresentationIdentifier_: 'Reference'\n\n    * _RepresentationType_: 'Edge' \n\n>> NOTE&nbsp; While an _IfcEdge_ (or _IfcOrientedEdge_ with underlying _IfcEdge_) does not provide an explicit underlying curve geometry, it may be used to imply an underlying straight line as reference curve with the origin of the curve parameter at the start vertex point. \n\n* Surface members and surface connections shall be represented by an _IfcFaceSurface_. The underlying surface defines the reference surface of the structural surface item in the global coordiante system. All edges in the bounds of the face shall conform to the rules for edge representations of structural curve item. The following labels are used in the _IfcTopologyRepresentation_: \n\n    * _RepresentationIdentifier_: 'Reference'\n\n    * _RepresentationType_: 'Face' \n\n\n\nThe reference point, reference curve, or reference surface partially or completely defines the local coordinate system of the represented structural item according to the following rules. In all cases, The local x,y,z directions form a right-handed Cartesian coordinate system.\n\n\n\n_Structural point items_\n\n\n\n* The reference point in the representation is the origin of the local coordinate system of the structural item.\n\n* The axes of the local coordiante system are either parallel with and directed like the so-called global coordinate axes, or are oriented according to definitions at the respective subtype of _IfcStructuralItem_.\n\n\n\n_Structural curve items_\n\n\n\n* The u parameter origin of the reference curve in the representation is the origin of the local coordinate system of the structural item.\n\n* The local x axis is parallel with the tangent on the curve and directed like the u parameter direction.\n\n* The local y and z axes are oriented according to definitions at the respective subtypes of _IfcStructuralItem_.\n\n\n\n_Structural surface items_\n\n\n\n* The u,v parameter origin of the reference surface in the representation is the origin of the local coordinate system of the structural item.\n\n* The local x and y directions follow the tangents on the surface and are in parallel with and directed like u and v respectively.\n\n* The local z direction is in parallel with and directed like the surface normal.\n\n\n\n{ .spec-head}\n\nInformal Propositions:\n\n\n\n1. The _ObjectPlacement_s of all structural items which are grouped into the same instance of _IfcStructuralAnalysisModel_ shall refer to the same instance of _IfcObjectPlacement_.\n\n\n\n> NOTE&nbsp; This rule is necessary to achieve consistent topology representations. The topology representations of structural items in an analysis model are meant to share vertices and edges und must therefore have the same object placement.\n\n\n\n> NOTE&nbsp; A structural item may be grouped into more than one analysis model. In this case, all these models must use the same instance of _IfcObjectPlacement_.\n\n\n"
      },
      "IfcStructuralLinearAction": {
        "Parent": "IfcStructuralCurveAction",
        "Description": "This entity defines an action with constant value which is distributed over a curve.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Intermediate supertype _IfcStructuralCurveAction_ inserted.\n\n\n\n> NOTE&nbsp; Like its supertype _IfcStructuralCurveAction_, this action type may also act on curved edges.\n\n\n\n## Formal Propositions\n\n\n\n### SuitableLoadType\n\nA linear action shall place either a linear force or a temperature load.\n\n\n\n### ConstPredefinedType\n\nThis curve action subtype is restricted to constant load distribution over its domain.\n"
      },
      "IfcStructuralMember": {
        "Parent": "IfcStructuralItem",
        "Description": "The abstract entity _IfcStructuralMember_ is the superclass of all structural items which represent the idealized structural behavior of building elements.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Use definitions moved to supertype and subtypes.\n\n\n"
      },
      "IfcStructuralPlanarAction": {
        "Parent": "IfcStructuralSurfaceAction",
        "Description": "This entity defines an action with constant value which is distributed over a surface.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Intermediate supertype _IfcStructuralSurfaceAction_ inserted.\n\n\n\n> NOTE&nbsp; Like its supertype _IfcStructuralSurfaceAction_, this action type may also act on curved faces.\n\n\n\n## Formal Propositions\n\n\n\n### SuitableLoadType\n\nA planar action shall place either a planar force or a temperature load.\n\n\n\n### ConstPredefinedType\n\nThis surface action subtype is restricted to constant load distribution over its domain.\n"
      },
      "IfcStructuralPointAction": {
        "Parent": "IfcStructuralAction",
        "Description": "This entity defines an action which acts on a point. A point action is typically connected with a point connection. It may also be connected with a curve member or curve connection, or surface member or surface connection.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attributes in the supertypes _IfcStructuralActivity_ and _IfcStructuralAction_ changed. Use definitions changed, informal propositions added.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralActivity_.\n\n\n\n****Topology Use Definitions****:\n\n\n\nStandard Case:  \n\nIf connected with a point item, instances of _IfcStructuralPointAction_ shall not have an _ObjectPlacement_ nor a _Representation_. It is implied that the placement and representation of the action is the same as the structural item.\n\n\n\nSpecial Case 1:  \n\nIf connected with a curve item or surface item, instances of _IfcStructuralPointAction_ shall have an _ObjectPlacement_ and _Representation_, containing an _IfcVertexPoint_. See _IfcStructuralActivity_ for further definitions.\n\n\n\n> NOTE&nbsp; In order to model concentrated actions on a curve or surface item, _IfcStructuralCurveAction_ or _IfcStructuralSurfaceAction_ of type DISCRETE is preferable since they do not require an extra topology representation in this case. An _IfcStructuralPointAction_ should be used for a concentrated action on a curve or surface item only when an explicit vertex point representation is actually desired.\n\n\n\nSpecial Case 2:  \n\nIf not connected with a structural item (which may happen in an incomplete or conceptual model), a point action should have an _ObjectPlacement_ and _Representation_, containing an _IfcVertexPoint_. See _IfcStructuralActivity_ for further definitions.\n\n\n\n## Formal Propositions\n\n\n\n### SuitableLoadType\n\nA structural point action shall place either a single force or a single displacement.\n"
      },
      "IfcStructuralPointConnection": {
        "Parent": "IfcStructuralConnection",
        "Description": "Instances of _IfcStructuralPointConnection_ describe structural nodes or point supports.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _ConditionCoordinateSystem_ added, allowing for skewed supports. Use definitions added.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralItem_. The local coordinate system is established by the reference point given by topology representation and by the attribute _ConditionCoordinateSystem_.\n\n\n"
      },
      "IfcStructuralPointReaction": {
        "Parent": "IfcStructuralReaction",
        "Description": "This entity defines a reaction which occurs at a point. A point reaction is typically connected with a point connection. It may also be connected with a curve member or curve connection, or surface member or surface connection.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attributes in the supertypes _IfcStructuralActivity_ and _IfcStructuralReaction_ changed. Use definitions changed, informal propositions added.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralActivity_.\n\n\n\n****Topology Use Definitions****:\n\n\n\nStandard Case:  \n\nIf connected with a point item, instances of _IfcStructuralPointReaction_ shall not have an _ObjectPlacement_ nor a _Representation_. It is implied that the placement and representation of the reaction is the same as the structural item.\n\n\n\nSpecial Case 1:  \n\nIf connected with a curve item or surface item, instances of _IfcStructuralPointReaction_ shall have an _ObjectPlacement_ and _Representation_, containing an _IfcVertexPoint_. See _IfcStructuralActivity_ for further definitions.\n\n\n\n> NOTE&nbsp; In order to model concentrated reactions on a curve or surface item, _IfcStructuralCurveReaction_ or _IfcStructuralSurfaceAction_ of type DISCRETE is preferable since they do not require an extra topology representation in this case. An _IfcStructuralPointReaction_ should be used for a concentrated reaction on a curve or surface item only when an explicit vertex point representation is actually desired.\n\n\n\nSpecial Case 2:  \n\nIf not connected with a structural item (which may happen in an incomplete or conceptual model), a point action should have an _ObjectPlacement_ and _Representation_, containing an _IfcVertexPoint_. See _IfcStructuralActivity_ for further definitions.\n\n\n\n## Formal Propositions\n\n\n\n### SuitableLoadType\n\nA structural point reaction shall have as a result either a single force or a single displacement.\n"
      },
      "IfcStructuralReaction": {
        "Parent": "IfcStructuralActivity",
        "Description": "A structural reaction is a structural activity that results from a structural action imposed to a structural item or building element. Examples are support reactions, internal forces, and deflections.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Inverse attribute _Causes_ deleted; use _IfcRelAssignsToProduct_ via _HasAssignments_ instead.\n\n\n\nStructural reactions are grouped into _IfcStructuralResultGroup_s via the inverse relationship _HasAssignments_ and an _IfcRelAssignsToGroup_ relationship object. _IfcStructuralResultGroup.ResultGroupFor_ finally refers to the structural analysis model in which the results occur.\n\n\n\nIt is furthermore possible to establish relationships between reactions in one analysis model and actions which they cause in another analysis model. For example, a support reaction from one structural system may be taken over as a load onto another supporting structural system. This is expressed by means of the inverse relationship _HasAssignments_ of the reaction and an _IfcRelAssignsToProduct_ relationship object. _IfcRelAssignsToProduct.Name_ is set to 'Causes' and _IfcRelAssignsToProduct.RelatingProduct_ refers to an instance of a subtype of _IfcStructuralAction_.\n"
      },
      "IfcStructuralSurfaceAction": {
        "Parent": "IfcStructuralAction",
        "Description": "This entity defines an action which is distributed over a surface. A surface action may be connected with a surface member or surface connection.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Former entity _IfcStructuralPlanarActionVarying_ from IFC2x2 has been removed and are replaced by this entity.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralActivity_.\n\n\n\n****Topology Use Definitions****:\n\n\n\nStandard Case:  \n\nIf connected with a surface item and acting on its entirety, instances of _IfcStructuralCurveAction_ shall not have an _ObjectPlacement_ nor a _Representation_. It is implied that the placement and representation of the _IfcStructuralActivity_ is the same as the ones of the member or connection.\n\n\n\nSpecial Case 1:  \n\nIf connected with a surface item but acting only on a part of it, instances of _IfcStructuralSurfaceAction_ shall have an _ObjectPlacement_ and _Representation_, containing an _IfcFaceSurface_ which topologically defines the loaded part of the surface. See _IfcStructuralActivity_ for further definitions.\n\n\n\nSpecial Case 2:  \n\nIf not connected with a structural item (which may happen in an incomplete or conceptual model), a surface action should have an _ObjectPlacement_ and _Representation_, containing an _IfcFaceSurface_. See _IfcStructuralActivity_ for further definitions.\n\n\n\n{ .spec-head}\n\nInformal Propositions:\n\n\n\n1. If the surface action is of the predefined type CONST, _SELF\\IfcStructuralActivity.AppliedLoad_ must not be of type _IfcStructuralLoadConfiguration_.\n\n2. If the surface action is of the predefined type BILINEAR, _SELF\\IfcStructuralActivity.AppliedLoad_ shall be of type _IfcStructuralLoadConfiguration_ and shall contain three items with two-dimensional _IfcStructuralLoadConfiguration.Locations_, defining the location of the load samples in local coordinates of the surface action. \n\n3. If the surface action is of the predefined type DISCRETE, _SELF\\IfcStructuralActivity.AppliedLoad_ shall be of type _IfcStructuralLoadConfiguration_ and shall contain two or more items with two-dimensional locations. \n\n4. Point loads must be of type DISCRETE, thus contain two or more load points. (Single point loads are modeled by _IfcStructuralPointLoad_.)\n\n5. All items in _SELF\\IfcStructuralActivity.AppliedLoad\\IfcStructuralLoadConfiguration.Values_ shall be of the same entity type.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "ProjectedOrTrue": {
                "values": [
                  "PROJECTED_LENGTH",
                  "TRUE_LENGTH"
                ],
                "type": "IfcProjectedOrTrueLengthEnum",
                "Description": "Defines whether load values are given per true lengths of the surface on which they act, or per lengths of the projection of the surface in load direction.  The latter is only applicable to loads which act in global coordinate directions."
              }
            }
          }
        }
      },
      "IfcStructuralSurfaceAction.DISCRETE": {
        "Parent": "IfcStructuralSurfaceAction",
        "Description": "The load is specified as a series of discrete load points.\n\n\n"
      },
      "IfcStructuralSurfaceAction.ISOCONTOUR": {
        "Parent": "IfcStructuralSurfaceAction",
        "Description": "The load is specified by a series of iso-curves (level sets), i.e. curves at which the load value is constant.  These curves run perpendicularly to the load gradient.\n\n\n"
      },
      "IfcStructuralSurfaceAction.BILINEAR": {
        "Parent": "IfcStructuralSurfaceAction",
        "Description": "The load value is bilinearly distributed over the load's extent.\n\n\n"
      },
      "IfcStructuralSurfaceAction.CONST": {
        "Parent": "IfcStructuralSurfaceAction",
        "Description": "The load has a constant value over its entire extent.\n\n\n"
      },
      "IfcStructuralSurfaceConnection": {
        "Parent": "IfcStructuralConnection",
        "Description": "Instances of _IfcStructuralSurfaceConnection_ describe face 'nodes', i.e. faces where two or more surface members are joined, or face supports. Face surfaces may be planar or curved.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Use definitions added.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralItem_. The local coordinate system is established by the reference surface given by topology representation.\n\n\n\n****Topology Use Definitions****:\n\n\n\nInstances of _IfcStructuralSurfaceConnection_ shall have a topology representation which consists of one _IfcFaceSurface_, representing the reference surface of the surface connection. See definitions at _IfcStructuralItem_ for further specifications.\n"
      },
      "IfcStructuralSurfaceMember": {
        "Parent": "IfcStructuralMember",
        "Description": "Instances of _IfcStructuralSurfaceMember_ describe face members, that is, structural analysis idealizations of slabs, walls, and shells. Surface members may be planar or curved.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Use definitions changed, WHERE rule added.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralItem_. The local coordinate system is established by the reference surface given by topology representation.\n\n\n\n****Material Use Definition****\n\n\n\nThe material of direct instances _IfcStructuralSurfaceMember_ (in contrast to instances of the subtype _IfcStructuralSurfaceMemberVarying_) is defined by _IfcMaterial_ and attached by the _IfcRelAssociatesMaterial.RelatingMaterial_. It is accessible by the inverse _HasAssociations_ relationship.\n\n\n\nThe material is specified minimally by a name which corresponds with an agreed upon standardized structural material designation. An external reference to the source which specifies the material designation should be provided. Alternatively, structural material properties may be provided by means of _IfcMechanicalMaterialProperties_ and _IfcExtendedMaterialProperties_.\n\n\n\nDirect instances of _IfcStructuralSurfaceMember_ are assumed to be located centrically relative to their reference surface. Their depth is provided in the attribute _Thickness_.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "Thickness": {
                "type": "real",
                "Description": "Defines the typically understood thickness of the structural surface member, measured normal to its reference surface."
              }
            }
          }
        }
      },
      "IfcStructuralSurfaceMember.BENDING_ELEMENT": {
        "Parent": "IfcStructuralSurfaceMember",
        "Description": "A member with capacity to carry out-of-plane loads, i.e. a plate.\n\n\n"
      },
      "IfcStructuralSurfaceMember.SHELL": {
        "Parent": "IfcStructuralSurfaceMember",
        "Description": ""
      },
      "IfcStructuralSurfaceMember.MEMBRANE_ELEMENT": {
        "Parent": "IfcStructuralSurfaceMember",
        "Description": "A member with capacity to carry in-plane loads, for example a shear wall.\n\n\n"
      },
      "IfcStructuralSurfaceMemberVarying": {
        "Parent": "IfcStructuralSurfaceMember",
        "Description": "This entity describes surface members with varying section properties. The properties are provided by means of _Pset_StructuralSurfaceMemberVaryingThickness_ via _IfcRelDefinesByProperties_, or by means of aggregation: An instance of _IfcStructuralSurfaceMemberVarying_ may be composed of two or more instances of _IfcStructuralSurfaceMember_ with differing section properties. These subordinate members relate to the instance of _IfcStructuralSurfaceMemberVarying_ by _IfcRelAggregates_.\n\n\n\n> NOTE&nbsp; It is recommended that structural activities (actions or reactions) are not connected with aggregated _IfcStructuralSurfaceMemberVarying_ but only with the _IfcStructuralSurfaceMember_s in the aggregation. That way, difficulties in interpretation of local coordinates are avoided.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Use definition changed and attributes deleted.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralItem_ and _IfcStructuralSurfaceMember_. The local coordinates of an aggregate are generally undefined since continuity of local coordinates of the parts is not ensured.\n\n\n\n****Material Use Definition****\n\n\n\nIn case of aggregation, only the individual parts (direct instances of _IfcStructuralSurfaceMember_) carry material and thickness information. Otherwise, definitions at _IfcStructuralSurfaceMember_ apply.\n",
        "Psets": {
          "Pset_StructuralSurfaceMemberVaryingThickness": {
            "Properties": {
              "Location1Global": {
                "type": "real",
                "Description": "Global X,Y,Z coordinates of the point in which Thickness1 is given\n"
              },
              "Location1Local": {
                "type": "real",
                "Description": "Local x,y coordinates of the point in which Thickness1 is given\n"
              },
              "Location2Global": {
                "type": "real",
                "Description": "Global X,Y,Z coordinates of the point in which Thickness2 is given\n"
              },
              "Location2Local": {
                "type": "real",
                "Description": "Local x,y coordinates of the point in which Thickness2 is given\n"
              },
              "Location3Global": {
                "type": "real",
                "Description": "Global X,Y,Z coordinates of the point in which Thickness3 is given\n"
              },
              "Location3Local": {
                "type": "real",
                "Description": "Local x,y coordinates of the point in which Thickness3 is given\n"
              },
              "Thickness1": {
                "type": "real",
                "Description": "First thickness parameter of a surface member with varying thickness\n"
              },
              "Thickness2": {
                "type": "real",
                "Description": "Second thickness parameter of a surface member with varying thickness\n"
              },
              "Thickness3": {
                "type": "real",
                "Description": "Third thickness parameter of a surface member with varying thickness\n"
              }
            }
          }
        }
      },
      "IfcStructuralSurfaceReaction": {
        "Parent": "IfcStructuralReaction",
        "Description": "This entity defines a reaction which occurs distributed over a surface. A surface reaction may be connected with a surface member or surface connection.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n****Coordinate Systems****:\n\n\n\nSee definitions at _IfcStructuralActivity_.\n\n\n\n****Topology Use Definitions****:\n\n\n\nSee definitions at _IfcStructuralActivity_.\n\n\n\n{ .spec-head}\n\nInformal Propositions:\n\n\n\n<ol>\n\n  <li>If the surface reaction is of the predefined type CONST, <em>SELF\\IfcStructuralActivity.AppliedLoad</em> must not be of type <em>IfcStructuralLoadConfiguration</em>.</li>\n\n  <li>If the surface reaction is of the predefined type BILINEAR, <em>SELF\\IfcStructuralActivity.AppliedLoad</em> shall be of type <em>IfcStructuralLoadConfiguration</em> and shall contain three items with two-dimensional <em>IfcStructuralLoadConfiguration.Locations</em>, defining the location of the result samples in local coordinates of the surface reaction.\n\n  <li>If the surface reaction is of the predefined type DISCRETE, <em>SELF\\IfcStructuralActivity.AppliedLoad</em> shall be of type <em>IfcStructuralLoadConfiguration</em> and shall contain two or more items with two-dimensional locations.\n\n  <li>If the surface reaction is of the predefined type ISOCONTOUR, <em>SELF\\IfcStructuralActivity.AppliedLoad</em> shall be of type <em>IfcStructuralLoadConfiguration</em> and shall contain the same number of items as the set <em>SELF.IfcProduct.Representation.Representations[?].Items</em>.  Each item in the load configuration shall have a two-dimensional location, defining the location of the result samples in local coordinates of the surface reaction.  Each item in <em>SELF\\IfcStructuralActivity.AppliedLoad</em> shall be located at exactly one of the isocontours.\n\n  <blockquote class=\"note\">NOTE&nbsp;  The set of representation items is unordered, hence result locations are required to correlate result values and isocontours.</blockquote>\n\n  <blockquote class=\"note\">NOTE&nbsp;  Isocontours are represented as <em>IfcPCurve</em>s which are defined in terms of surface parameters u,v, while result locations are given in local surface item coordinates x,y.  It is strongly recommended that the surface parameterization u,v is scaled 1:1 in order to avoid different scales of u,v versus x,y.  If u,v are scaled 1:1 and the <em>IfcPCurve</em>'s base surface is identical with the surface item's base surface, u,v and local x,y are identical.</blockquote>\n\n  </li>\n\n  <li>All items in <em>SELF\\IfcStructuralActivity.AppliedLoad\\IfcStructuralLoadConfiguration.Values</em> shall be of the same entity type.</li>\n\n</ol>\n\n\n"
      },
      "IfcFooting": {
        "Parent": "IfcBuiltElement",
        "Description": "A footing is a part of the foundation of a structure that spreads and transmits the load to the soil. A footing is also characterized as shallow foundation, where the loads are transfered to the ground near the surface.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: stepped construction that spreads the load at the foot of a wall or column.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n> NOTE&nbsp; Slab foundations, also called slab-on-grade, are not instantiated as _IfcFooting_ but as _IfcSlab_ or as its subtype _IfcSlabStandardCase_, _IfcSlabElementedCase_ with a predefined type of _IfcSlabTypeEnum_.BASESLAB. Deep foundations, which transfer the loads to subsurface layers, are represented by _IfcDeepFoundation_ and its subtypes _IfcCaissonFoundation_ and _IfcPile_.\n\n\n",
        "Psets": {
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_FootingCommon": {
            "Properties": {
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_ReinforcementBarCountOfIndependentFooting": {
            "Properties": {
              "Description": {
                "type": "string",
                "Description": "The description of the air side system.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "XDirectionLowerBarCount": {
                "type": "integer",
                "Description": "The number of bars with X direction lower bar.\n"
              },
              "XDirectionUpperBarCount": {
                "type": "integer",
                "Description": "The number of bars with X direction upper bar.\n"
              },
              "YDirectionLowerBarCount": {
                "type": "integer",
                "Description": "The number of bars with Y direction lower bar.\n"
              },
              "YDirectionUpperBarCount": {
                "type": "integer",
                "Description": "The number of bars with Y direction upper bar.\n"
              }
            }
          },
          "Pset_ReinforcementBarPitchOfContinuousFooting": {
            "Properties": {
              "CrossingLowerBarPitch": {
                "type": "real",
                "Description": "The pitch length of the crossing lower bar.\n"
              },
              "CrossingUpperBarPitch": {
                "type": "real",
                "Description": "The pitch length of the crossing upper bar.\n"
              },
              "Description": {
                "type": "string",
                "Description": "The description of the air side system.\n"
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              }
            }
          },
          "Qto_FootingBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the profile. For example measured in mm2. If given, the value of the cross section area shall be greater than zero.\n"
              },
              "GrossSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the footing, normally generated as perimeter \\* length + 2 \\* cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately.\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Height": {
                "type": "q_length",
                "Description": "Height of the object. It is the upper hight of the railing above the floor or stair.\n\nThe size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "OuterSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the extruded surfaces of the footing (not taking into account the end cap areas), normally generated as perimeter \\* length.\n"
              },
              "Width": {
                "type": "q_length",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          }
        }
      },
      "IfcFooting.CAISSON_FOUNDATION": {
        "Parent": "IfcFooting",
        "Description": "A foundation construction type used in underwater construction.\n\n\n\n{ .change-ifc4x2}\n\n> IFC4x2 CHANGE&nbsp; Enum made optional and deprecated. Use the dedicated class _IfcCaissonFoundation_ instead.\n\n\n"
      },
      "IfcFooting.STRIP_FOOTING": {
        "Parent": "IfcFooting",
        "Description": ""
      },
      "IfcFooting.PAD_FOOTING": {
        "Parent": "IfcFooting",
        "Description": "An element that transfers the load of a single column (possibly two) to the ground.\n\n\n"
      },
      "IfcFooting.PILE_CAP": {
        "Parent": "IfcFooting",
        "Description": "An element that transfers the load from a column or group of columns to a pier or pile or group of piers or piles.\n\n\n"
      },
      "IfcFooting.FOOTING_BEAM": {
        "Parent": "IfcFooting",
        "Description": "Footing elements that are in bending and are supported clear of the ground. They will normally span between piers, piles or pile caps. They are distinguished from beams in the building superstructure since they will normally require a lower grade of finish. They are distinguished from _STRIP_FOOTING_ since they are clear of the ground surface and hence require support to the lower face while the concrete is curing.\n\n\n"
      },
      "IfcPile": {
        "Parent": "IfcDeepFoundation",
        "Description": "A pile is a slender timber, concrete, or steel structural element, driven, jetted, or otherwise embedded on end in the ground for the purpose of supporting a load. A pile is also characterized as deep foundation, where the loads are transfered to deeper subsurface layers.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: slender structural member, substantially underground, intended to transmit force(s) into loadbearing strata below the surface of the ground.\n\n\n\n> NOTE&nbsp; Shallow foundations, which transfer the loads to the ground near its surface, are represented by _IfcFooting_.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n",
        "Psets": {
          "Pset_ConcreteElementGeneral": {
            "Properties": {
              "ConcreteCover": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcing bars according to local building regulations.\n"
              },
              "ConcreteCoverAtLinks": {
                "type": "real",
                "Description": "The protective concrete cover at the reinforcement links according to local building regulations.\n"
              },
              "ConcreteCoverAtMainBars": {
                "type": "real",
                "Description": "The protective concrete cover at the main reinforcing bars according to local building regulations.\n"
              },
              "ConstructionMethod": {
                "type": "string",
                "Description": "Designator for whether the concrete element is constructed on site or prefabricated. Allowed values are: 'In-Situ' vs 'Precast'.\n"
              },
              "ConstructionToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the on-site construction tolerances according to local standards.\n"
              },
              "DimensionalAccuracyClass": {
                "type": "string",
                "Description": "Classification designation of the dimensional accuracy requirement according to local standards.\n"
              },
              "ExposureClass": {
                "type": "string",
                "Description": "Classification of exposure to environmental conditions, usually specified in accordance with the concrete design code which is applied in the project.\n"
              },
              "ReinforcementAreaRatio": {
                "type": "real",
                "Description": "The required ratio of the effective area of the reinforcement to the effective area of the concrete At any section of a reinforced concrete structural element.\n"
              },
              "ReinforcementStrengthClass": {
                "type": "string",
                "Description": "Classification of the reinforcement strength in accordance with the concrete design code which is applied in the project. The reinforcing strength class often combines strength and ductility.\n"
              },
              "ReinforcementVolumeRatio": {
                "type": "real",
                "Description": "The required ratio of the effective mass of the reinforcement to the effective volume of the concrete of a reinforced concrete structural element.\n"
              },
              "StrengthClass": {
                "type": "string",
                "Description": "Classification of the concrete strength in accordance with the concrete design code which is applied in the project.\n"
              },
              "StructuralClass": {
                "type": "string",
                "Description": "The structural class defined for the concrete structure (e.g. '1').\n"
              }
            }
          },
          "Pset_PileCommon": {
            "Properties": {
              "LoadBearing": {
                "type": "boolean",
                "Description": "Indicates whether the object is intended to carry loads (TRUE) or not (FALSE).\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "Reference": {
                "type": "string",
                "Description": "Reference ID for this specified type in this project (e.g. type 'A-1'), Also referred to as \"construction type\". It should be provided as an alternative to the name of the \"object type\", if the software does not support object types.\n"
              },
              "Status": {
                "type": "string",
                "Description": "Status of the element, predominately used in renovation or retrofitting projects. The status can be assigned to as \"New\" - element designed as new addition, \"Existing\" - element exists and remains, \"Demolish\" - element existed but is to be demolished,  \"Temporary\" - element will exists only temporary (like a temporary support structure).\n"
              }
            }
          },
          "Pset_PrecastConcreteElementFabrication": {
            "Properties": {
              "ActualErectionDate": {
                "type": "string",
                "Description": "Date erected.\n"
              },
              "ActualProductionDate": {
                "type": "string",
                "Description": "Production date (stripped from form).\n"
              },
              "AsBuiltLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 into which the piece was installed. Where pieces share the same piece mark, they can be interchanged. The value is only known after erection.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ProductionLotId": {
                "type": "string",
                "Description": "The manufacturer's production lot identifier.\n"
              },
              "SerialNumber": {
                "type": "string",
                "Description": "The manufacturer's serial number for the precast concrete element.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Pset_PrecastConcreteElementGeneral": {
            "Properties": {
              "BatterAtEnd": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the ending face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "BatterAtStart": {
                "type": "real",
                "Description": "The angle, in radians, by which the formwork at the starting face of a piece is to be rotated from the vertical in order to compensate for the rotation of the face that will occur once the piece is stripped from its form, inducing camber due to eccentric prestressing.\n"
              },
              "CamberAtMidspan": {
                "type": "real",
                "Description": "The camber deflection, measured from the midpoint of a cambered face of a piece to the midpoint of the chord joining the ends of the same face, as shown in the figure below, divided by the original (nominal) straight length of the face of the piece.\n"
              },
              "CornerChamfer": {
                "type": "real",
                "Description": "The chamfer in the corners of the precast element. The chamfer is presumed to be equal in both directions.\n"
              },
              "DesignLocationNumber": {
                "type": "string",
                "Description": "Defines a unique location within a structure, the \u2018slot\u2019 for which the piece was designed.\n"
              },
              "FormStrippingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete at form stripping time.\n"
              },
              "HollowCorePlugging": {
                "type": "string",
                "Description": "A descriptive label for how the hollow core ends are treated: they may be left open, closed with a plug, or sealed with cast concrete. Values would be, for example: 'Unplugged', 'Plugged', 'SealedWithConcrete'. This property applies to  hollow core slabs only.\n"
              },
              "InitialTension": {
                "type": "real",
                "Description": "The initial stress of the tendon. This property applies to prestressed concrete elements only.\n"
              },
              "LiftingStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the concrete element is lifted.\n"
              },
              "ManufacturingToleranceClass": {
                "type": "string",
                "Description": "Classification designation of the manufacturing tolerances according to local standards.\n"
              },
              "MinimumAllowableSupportLength": {
                "type": "real",
                "Description": "The minimum allowable support length.\n"
              },
              "PieceMark": {
                "type": "string",
                "Description": "Defines a unique piece for production purposes. All pieces with the same piece mark value are identical and interchangeable. The piece mark may be composed of sub-parts that have specific locally defined meaning (e.g. B-1A may denote a beam, of generic type \u20181\u2019 and specific shape \u2018A\u2019).\n"
              },
              "ReleaseStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete when the tendon stress is released. This property applies to prestressed concrete elements only.\n"
              },
              "Shortening": {
                "type": "real",
                "Description": "The ratio of the distance by which a precast piece is shortened after release from its form (due to compression induced by prestressing) to its original (nominal) length.\n"
              },
              "SupportDuringTransportDescription": {
                "type": "string",
                "Description": "Textual description of how the concrete element is supported during transportation.\n"
              },
              "TendonRelaxation": {
                "type": "real",
                "Description": "The maximum allowable relaxation of the tendon (usually expressed as %/1000 h).This property applies to prestressed concrete elements only.\n"
              },
              "TransportationStrength": {
                "type": "real",
                "Description": "The minimum required compressive strength of the concrete required for transportation.\n"
              },
              "Twisting": {
                "type": "real",
                "Description": "The angle, in radians, through which the end face of a precast piece is rotated with respect to its starting face, along its longitudinal axis, as a result of non-aligned supports. This measure is also termed the \u2018warping\u2019 angle.\n"
              },
              "TypeDesignator": {
                "type": "string",
                "Description": "Type designator for the precast concrete element. The content depends on local standards. For instance in Finland it usually a one-letter acronym, e.g. P=Column, K=reinforced concrete beam,etc.\n"
              }
            }
          },
          "Qto_PileBaseQuantities": {
            "Properties": {
              "CrossSectionArea": {
                "type": "q_area",
                "Description": "Area of the profile. For example measured in mm2. If given, the value of the cross section area shall be greater than zero.\n"
              },
              "GrossSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the footing, normally generated as perimeter \\* length + 2 \\* cross section area. It is the sum of OuterSurfaceArea + (2 x CrossSectionArea) and shall only be given, if the OuterSurfaceArea and CrossSectionArea cannot be established separately.\n"
              },
              "GrossVolume": {
                "type": "q_volume",
                "Description": "Sum of all gross volumes of spaces enclosed by the building storey. It includes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces and the construction elements assigend to the storey. In case of inconsistencies, the individual quantities of spaces and construction elements take precedence.\n"
              },
              "GrossWeight": {
                "type": "q_weight",
                "Description": "Total gross weight of the footing without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "NetVolume": {
                "type": "q_volume",
                "Description": "Sum of all net volumes of spaces enclosed by the building storey. It iexcludes the volumes of construction elements within the building storey. May be provided in addition to the quantities of the spaces assigend to the storey. In case of inconsistencies, the individual quantities of spaces take precedence.\n"
              },
              "NetWeight": {
                "type": "q_weight",
                "Description": "Total net weight of the footing without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses.\n"
              },
              "OuterSurfaceArea": {
                "type": "q_area",
                "Description": "Total area of the extruded surfaces of the footing (not taking into account the end cap areas), normally generated as perimeter \\* length.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "ConstructionType": {
                "values": [
                  "CAST_IN_PLACE",
                  "COMPOSITE",
                  "PRECAST_CONCRETE",
                  "PREFAB_STEEL",
                  "USERDEFINED",
                  "NOTDEFINED"
                ],
                "type": "IfcPileConstructionEnum",
                "Description": "Deprecated.\\X\\0D\n\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE&nbsp; Material profile association capability by means of _IfcRelAssociatesMaterial_ has been added. The attribute _ConstructionType_ should not be used whenever its information can be provided by a material profile set, either associated with the _IfcPile_ object or, if present, with a corresponding instance of _IfcPileType_."
              }
            }
          }
        }
      },
      "IfcPile.FRICTION": {
        "Parent": "IfcPile",
        "Description": "A friction pile.\n\n\n"
      },
      "IfcPile.BORED": {
        "Parent": "IfcPile",
        "Description": "A bore pile.\n\n\n"
      },
      "IfcPile.DRIVEN": {
        "Parent": "IfcPile",
        "Description": "A rammed, vibrated, or otherwise driven pile.\n\n\n"
      },
      "IfcPile.COHESION": {
        "Parent": "IfcPile",
        "Description": "A cohesion pile.\n\n\n"
      },
      "IfcPile.SUPPORT": {
        "Parent": "IfcPile",
        "Description": "A support pile.\n\n\n"
      },
      "IfcPile.JETGROUTING": {
        "Parent": "IfcPile",
        "Description": "An injected pile-like construction.\n\n\n"
      },
      "IfcReinforcingBar": {
        "Parent": "IfcReinforcingElement",
        "Description": "A reinforcing bar is usually made of steel with manufactured deformations in the surface, and used in concrete and masonry construction to provide additional strength. A single instance of this class may represent one or many of actual rebars, for example a row of rebars.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2\n\n\n\n{ .change-ifc2x4}\n\n> IFC 2x4 CHANGE&nbsp; All attributes are optional now. Several attributes are deprecated; their information now provided by _IfcReinforcingBarType_. Attribute _BarRole_ renamed to _PredefinedType_.\n\n\n\n{ .use-head}\n\nGeometry Use Definition\n\n\n\nPlacement and representation are defined at the supertype _IfcElementComponent_.\n\n\n\nThe representation map of a mapped 'Body' representation should contain a representation of type 'AdvancedSweptSolid' which holds an _IfcSweptDiskSolid_ (including subtype _IfcSweptDiskSolidPolygonal_).\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "NominalDiameter": {
                "type": "real",
                "Description": "The nominal diameter defining the cross-section size of the reinforcing bar."
              },
              "CrossSectionArea": {
                "type": "real",
                "Description": "The effective cross-section area of the reinforcing bar."
              },
              "BarLength": {
                "type": "real",
                "Description": "The total length of the reinforcing bar. The total length of bended bars are calculated according to local standards with corrections for the bends."
              },
              "BarSurface": {
                "values": [
                  "PLAIN",
                  "TEXTURED"
                ],
                "type": "IfcReinforcingBarSurfaceEnum",
                "Description": "Indicator for whether the bar surface is plain or textured."
              },
              "BendingShapeCode": {
                "type": "string",
                "Description": "Shape code per a standard like ACI 315, ISO 3766, or a similar standard.  It is presumed that a single standard for defining the bar bending is used throughout the project and that this standard is referenced from the _IfcProject_ object through the _IfcDocumentReference_ mechanism."
              }
            }
          }
        }
      },
      "IfcReinforcingBar.PUNCHING": {
        "Parent": "IfcReinforcingBar",
        "Description": "Punching reinforcement.\n\n\n"
      },
      "IfcReinforcingBar.SPACEBAR": {
        "Parent": "IfcReinforcingBar",
        "Description": "A stirrup in pre-stressing system to position TendonConduit.\n\n\n"
      },
      "IfcReinforcingBar.ANCHORING": {
        "Parent": "IfcReinforcingBar",
        "Description": "Anchoring reinforcement.\n\n\n"
      },
      "IfcReinforcingBar.MAIN": {
        "Parent": "IfcReinforcingBar",
        "Description": "The reinforcing bar is a main bar.\n\n\n"
      },
      "IfcReinforcingBar.EDGE": {
        "Parent": "IfcReinforcingBar",
        "Description": ""
      },
      "IfcReinforcingBar.STUD": {
        "Parent": "IfcReinforcingBar",
        "Description": "The reinforcing bar is a stud.\n\n\n"
      },
      "IfcReinforcingBar.LIGATURE": {
        "Parent": "IfcReinforcingBar",
        "Description": ""
      },
      "IfcReinforcingBar.RING": {
        "Parent": "IfcReinforcingBar",
        "Description": ""
      },
      "IfcReinforcingBar.SHEAR": {
        "Parent": "IfcReinforcingBar",
        "Description": "The reinforcing bar is a shear bar.\n\n\n"
      },
      "IfcReinforcingElement": {
        "Parent": "IfcElementComponent",
        "Description": "A reinforcing element represents bars, wires, strands, meshes, tendons, and other components embedded in concrete in such a manner that the reinforcement and the concrete act together in resisting forces.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: rod(s), bar(s), fabric, fibres, wires and cable(s) added to give additional strength or support to a material or component.\n\n\n\nOne or several instances of subtypes of _IfcReinforcingElement_ should always be accompanied by a defining instance of a respective subtype of _IfcReinforcingElementType_. The type object holds shape and material information.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _SteelGrade_ deprecated.\n\n\n",
        "Psets": {
          "Qto_ReinforcingElementBaseQuantities": {
            "Properties": {
              "Count": {
                "type": "q_count",
                "Description": "Total count of reinforcing items.\n"
              },
              "Length": {
                "type": "q_length",
                "Description": "The nominal length of the transition section. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              },
              "Weight": {
                "type": "q_weight",
                "Description": "The weight of the humidifier.\n"
              }
            }
          },
          "Attributes": {
            "Properties": {
              "SteelGrade": {
                "type": "string",
                "Description": "Deprecated.\\X\\0D\n\\X\\0D\n{ .change-ifc2x4}\\X\\0D\n> IFC4 CHANGE&nbsp; Attribute deprecated. Use material association at _IfcReinforcingElementType_ instead."
              }
            }
          }
        }
      },
      "IfcReinforcingMesh": {
        "Parent": "IfcReinforcingElement",
        "Description": "A reinforcing mesh is a series of longitudinal and transverse wires or bars of various gauges, arranged at right angles to each other and welded at all points of intersection; usually used for concrete slab reinforcement. It is also known as welded wire fabric. In scope are plane meshes as well as bent meshes.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; All attributes are optional now. Several attributes are deprecated; their information is now provided by _IfcReinforcingMeshType_. Attribute _PredefinedType_ added.\n\n\n\n{ .use-head}\n\nGeometry Use Definition\n\n\n\nPlacement and representation are defined at the supertype _IfcElementComponent_.\n\n\n\nThe representation map of a mapped 'Outline' representation should contain a representation of type 'Curve3D' which holds an _IfcPolyline_.\n\n\n\nThe representation map of a mapped 'Body' representation should contain a representation of type 'AdvancedSweptSolid' which holds multiple _IfcSweptDiskSolid_ (including subtype _IfcSweptDiskSolidPolygonal_).\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "MeshLength": {
                "type": "real",
                "Description": "The overall length of the mesh measured in its longitudinal direction."
              },
              "MeshWidth": {
                "type": "real",
                "Description": "The overall width of the mesh measured in its transversal direction."
              },
              "LongitudinalBarNominalDiameter": {
                "type": "real",
                "Description": "The nominal diameter denoting the cross-section size of the longitudinal bars."
              },
              "TransverseBarNominalDiameter": {
                "type": "real",
                "Description": "The nominal diameter denoting the cross-section size of the transverse bars."
              },
              "LongitudinalBarCrossSectionArea": {
                "type": "real",
                "Description": "The effective cross-section area of the longitudinal bars of the mesh."
              },
              "TransverseBarCrossSectionArea": {
                "type": "real",
                "Description": "The effective cross-section area of the transverse bars of the mesh."
              },
              "LongitudinalBarSpacing": {
                "type": "real",
                "Description": "The spacing between the longitudinal bars.  Note: an even distribution of bars is presumed; other cases are handled by classification or property sets."
              },
              "TransverseBarSpacing": {
                "type": "real",
                "Description": "The spacing between the transverse bars.  Note: an even distribution of bars is presumed; other cases are handled by classification or property sets."
              },
              "BendingShapeCode": {
                "type": "string",
                "Description": "If this mesh type is bent rather than planar, this attribute provides a shape code per a standard like ACI 315, ISO 3766, or a similar standard.  It is presumed that a single standard for defining the mesh bending is used throughout the project and that this standard is referenced from the _IfcProject_ object through the _IfcDocumentReference_ mechanism."
              }
            }
          }
        }
      },
      "IfcSurfaceFeature": {
        "Parent": "IfcFeatureElement",
        "Description": "A surface feature is a modification at (onto, or into) of the surface of an element. Parts of the surface of the entire surface may be affected. The volume and mass of the element may be increased, remain unchanged, or be decreased by the surface feature, depending on manufacturing technology. However, any increase or decrease of volume is small compared to the total volume of the element.\n\n\n\nThe part&ndash;whole relationship is established by an aggregation relationship object, expressing the decomposition of an element type into one or more additive elements (element parts) and zero or more feature elements.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n****Containment Use Definition****:\n\n\n\nSurface features shall have no spatial containment relationship to the spatial structure since they are dependent on element types without spatial containment relationships or on an element occurrence with own spatial containment relationship.\n\n\n\n* The _SELF\\IfcElement.ContainedInStructure_ relationship shall be NIL.\n\n\n\n****Geometry use definition****:\n\n\n\nThe geometric representation of _IfcSurfaceFeatureElement_ is given by the _IfcProductDefinitionShape_, allowing multiple geometric representation.\n\n\n\n**Local Placement**\n\n\n\nThe local placement for _IfcSurfaceFeatureElement_ is defined in its supertype _IfcProduct_. It is defined by the _IfcLocalPlacement_, which defines the local coordinate system that is referenced by all geometric representations.\n\n\n\n* In case of features which are part of an element type, absolute placement into the type object's implied coordinate system shall be used.\n\n* In case of features which are voiding an element occurrence, the _PlacementRelTo_ relationship of _IfcLocalPlacement_ shall point to the local placement of the respective element.\n\n\n\n**Shape representation**\n\n\n\nDifferent shape representations may be used, depending on the nature of the feature and information requirements:\n\n\n\n* Symbolic representation, such as the two-dimensional bounding box of a tag. \n\n* A geometric set representing the geometric items of a mark.\n\n* Surface representations of treated parts of the lement surface by means of _IfcShellBasedSurfaceModel_. The faces within the surface model may be included into a B-Rep model within a representation map of the parent element type.\n\n\n\nHigher-level parameters (geometric and non-geometric) may be provided by property sets based on local agreements.\n\n\n"
      },
      "IfcSurfaceFeature.TRANSVERSERUMBLESTRIP": {
        "Parent": "IfcSurfaceFeature",
        "Description": "Type of rumble strip running across lane(s).\n\n\n"
      },
      "IfcSurfaceFeature.LINEMARKING": {
        "Parent": "IfcSurfaceFeature",
        "Description": "2D lines painted on pavement surfaces to form boundaries, centrelines and edge markings.\n\n\n",
        "Psets": {
          "Pset_MarkingLinesCommon": {
            "Properties": {
              "DashedLine": {
                "type": "boolean",
                "Description": "State if the line is dashed or continuous\n",
                "values": [
                  "TRUE",
                  "FALSE"
                ]
              },
              "DashedLinePattern": {
                "type": "string",
                "Description": "Indicates the pattern for dashed line types e.g. '3+9'\n"
              },
              "Width": {
                "type": "real",
                "Description": "The nominal width of the trench excavation. The size information is provided in addition to the shape representation and the geometric parameters used within. In cases of inconsistency between the geometric parameters and the size properties, provided in the attached property set, the geometric parameters take precedence.\n"
              }
            }
          },
          "Pset_RoadMarkingCommon": {
            "Properties": {
              "MaterialType": {
                "type": "string",
                "Description": "Material type used... e.g. paint, tape, thermoplastic, stone\n"
              },
              "Structure": {
                "type": "string",
                "Description": "State if marking is Structured or not, and what type... e.g. Kamflex, Longflex, Dropflex\n"
              },
              "ApplicationMethod": {
                "type": "string",
                "Description": "State the application method used... e.g. spray, extruded\n"
              },
              "DiagramNumber": {
                "type": "string",
                "Description": "A designator with content according to local standards, e.g. M25.\n"
              },
              "MaterialThickness": {
                "type": "real",
                "Description": "Nominal thickness of the applied material\n"
              }
            }
          }
        }
      },
      "IfcSurfaceFeature.DEFECT": {
        "Parent": "IfcSurfaceFeature",
        "Description": "Detected defect on the surface of an element, such as corroded or eroded area.\n\n\n"
      },
      "IfcSurfaceFeature.RUMBLESTRIP": {
        "Parent": "IfcSurfaceFeature",
        "Description": ""
      },
      "IfcSurfaceFeature.HATCHMARKING": {
        "Parent": "IfcSurfaceFeature",
        "Description": "surface markings defined by enclosed 2d shape with defined hatch fillings.\n\n\n",
        "Psets": {
          "Pset_RoadMarkingCommon": {
            "Properties": {
              "MaterialType": {
                "type": "string",
                "Description": "Material type used... e.g. paint, tape, thermoplastic, stone\n"
              },
              "Structure": {
                "type": "string",
                "Description": "State if marking is Structured or not, and what type... e.g. Kamflex, Longflex, Dropflex\n"
              },
              "ApplicationMethod": {
                "type": "string",
                "Description": "State the application method used... e.g. spray, extruded\n"
              },
              "DiagramNumber": {
                "type": "string",
                "Description": "A designator with content according to local standards, e.g. M25.\n"
              },
              "MaterialThickness": {
                "type": "real",
                "Description": "Nominal thickness of the applied material\n"
              }
            }
          }
        }
      },
      "IfcSurfaceFeature.SYMBOLMARKING": {
        "Parent": "IfcSurfaceFeature",
        "Description": "Surface markings that convey information in the form of symbols and shapes such as arrows, text or pictorial symbols.\n\n\n",
        "Psets": {
          "Pset_RoadMarkingCommon": {
            "Properties": {
              "MaterialType": {
                "type": "string",
                "Description": "Material type used... e.g. paint, tape, thermoplastic, stone\n"
              },
              "Structure": {
                "type": "string",
                "Description": "State if marking is Structured or not, and what type... e.g. Kamflex, Longflex, Dropflex\n"
              },
              "ApplicationMethod": {
                "type": "string",
                "Description": "State the application method used... e.g. spray, extruded\n"
              },
              "DiagramNumber": {
                "type": "string",
                "Description": "A designator with content according to local standards, e.g. M25.\n"
              },
              "MaterialThickness": {
                "type": "real",
                "Description": "Nominal thickness of the applied material\n"
              }
            }
          },
          "Pset_RoadSymbolsCommon": {
            "Properties": {
              "Text": {
                "type": "string",
                "Description": "Text content\n"
              },
              "Type": {
                "type": "string",
                "Description": "A symbol designator with content according to local standards, e.g.  'BycycleCrossing', 'RoadStuds', 'SpeedBump', 'TransverseBar', 'BusStop', 'Chevron', 'Hatched', 'KeepClear', 'BoxJunction', 'EmergencyExit', 'Intersection', 'Junction'\n"
              }
            }
          }
        }
      },
      "IfcSurfaceFeature.TAG": {
        "Parent": "IfcSurfaceFeature",
        "Description": ""
      },
      "IfcSurfaceFeature.NONSKIDSURFACING": {
        "Parent": "IfcSurfaceFeature",
        "Description": "Paint or surfacing to prevent sliding or skidding.\n\n\n"
      },
      "IfcSurfaceFeature.PAVEMENTSURFACEMARKING": {
        "Parent": "IfcSurfaceFeature",
        "Description": "Painted or chemical lines or symbols on the surface of pavements (a road or paved area)\n\n\n",
        "Psets": {
          "Pset_RoadMarkingCommon": {
            "Properties": {
              "MaterialType": {
                "type": "string",
                "Description": "Material type used... e.g. paint, tape, thermoplastic, stone\n"
              },
              "Structure": {
                "type": "string",
                "Description": "State if marking is Structured or not, and what type... e.g. Kamflex, Longflex, Dropflex\n"
              },
              "ApplicationMethod": {
                "type": "string",
                "Description": "State the application method used... e.g. spray, extruded\n"
              },
              "DiagramNumber": {
                "type": "string",
                "Description": "A designator with content according to local standards, e.g. M25.\n"
              },
              "MaterialThickness": {
                "type": "real",
                "Description": "Nominal thickness of the applied material\n"
              }
            }
          }
        }
      },
      "IfcSurfaceFeature.TREATMENT": {
        "Parent": "IfcSurfaceFeature",
        "Description": "A subtractive surface feature, e.g. grinding, or an additive surface feature, e.g. coating, or an impregnating treatment, or a series of any of these kinds of treatments.\n\n\n"
      },
      "IfcSurfaceFeature.MARK": {
        "Parent": "IfcSurfaceFeature",
        "Description": "A point, line, cross, or other mark, applied for example for easier adjustment of elements during assembly.\n\n\n"
      },
      "IfcTendon": {
        "Parent": "IfcReinforcingElement",
        "Description": "A tendon is a steel element such as a wire, cable, bar, rod, or strand used to impart prestress to concrete when the element is tensioned.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Definition according to ISO 6707-1: steel bar(s) or groups of bars, strands or wires given a tensile stress that produces a compressive stress in prestressed concrete or masonry.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; To be efficient, the cable follows the deck alignment and moves vertically up on the top of the piers and down in the middle of the span. Therefore the cable axis is defined relatively towards the deck alignment. The ShapeRepresentation should be 'AdvancedSweptSolid' geometry based on SectionedSolidHorizontal description including DistanceExpression, CircleProfileDef and AlignmentCurve, leading to a polyline describing the cable directrix.\n\n\n\n{ .extDef}\n\n> NOTE&nbsp; Regarding the Structural Analysis model, the cable has to be transformed into loads applied at each CartesianPoint defining the polyline.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .change-ifc2x4}\n\n> IFC4 CHANGE&nbsp; Attribute _PredefinedType_ made optional. _NominalDiameter_ and _CrossSectionArea_ made optional and deprecated; this information can now be provided by _IfcTendonType_. Description of _FrictionCoefficient_ corrected.\n\n\n",
        "Psets": {
          "Attributes": {
            "Properties": {
              "NominalDiameter": {
                "type": "real",
                "Description": "The nominal diameter defining the cross-section size of the prestressed part of the tendon."
              },
              "CrossSectionArea": {
                "type": "real",
                "Description": "The effective cross-section area of the prestressed part of the tendon."
              },
              "TensionForce": {
                "type": "real",
                "Description": "The maximum allowed tension force that can be applied on the tendon."
              },
              "PreStress": {
                "type": "real",
                "Description": "The prestress to be applied on the tendon."
              },
              "FrictionCoefficient": {
                "type": "real",
                "Description": "The friction coefficient between tendon and tendon sheet while the tendon is unbonded."
              },
              "AnchorageSlip": {
                "type": "real",
                "Description": "The deformation of an anchor or slippage of tendons when the prestressing device is released."
              },
              "MinCurvatureRadius": {
                "type": "real",
                "Description": "The smallest curvature radius calculated on the whole effective length of the tendon where the tension properties are still valid."
              },
              "SheathDiameter": {
                "type": "real",
                "Description": "Diameter of the sheeth (duct) around the tendon, if there is one with this type of tendon."
              }
            }
          }
        }
      },
      "IfcTendonAnchor": {
        "Parent": "IfcReinforcingElement",
        "Description": "A tendon anchor is the end connection for tendons in prestressed or posttensioned concrete.\n\n\n\n> HISTORY&nbsp; New entity in IFC2x2.\n\n\n\n{ .history}\n\n> IFC4 CHANGE&nbsp; Attribute _PredefinedType_ added.\n\n\n"
      },
      "IfcTendonAnchor.COUPLER": {
        "Parent": "IfcTendonAnchor",
        "Description": ""
      },
      "IfcTendonAnchor.FIXED_END": {
        "Parent": "IfcTendonAnchor",
        "Description": "The anchor fixes the end of a tendon.\n\n\n"
      },
      "IfcTendonAnchor.TENSIONING_END": {
        "Parent": "IfcTendonAnchor",
        "Description": ""
      },
      "IfcTendonConduit": {
        "Parent": "IfcReinforcingElement",
        "Description": "A TendonConduit represents the components of the conduit system for tendons embedded in concrete structure.\n\n\n"
      },
      "IfcTendonConduit.GROUTING_DUCT": {
        "Parent": "IfcTendonConduit",
        "Description": ""
      },
      "IfcTendonConduit.TRUMPET": {
        "Parent": "IfcTendonConduit",
        "Description": "A specific part of conduit which has to be widened when reaching the tendon anchor because the strands are connected individually on the anchor.\n\n\n"
      },
      "IfcTendonConduit.DUCT": {
        "Parent": "IfcTendonConduit",
        "Description": "A Sleeve or duct is related to the thickness of the conduit depending on the conduit, either cast into the concrete structure or placed adjacent to it.\n\n\n"
      },
      "IfcTendonConduit.COUPLER": {
        "Parent": "IfcTendonConduit",
        "Description": "A part to connect the conduits located in two different deck segments and related to the same tendon.\n\n\n"
      },
      "IfcTendonConduit.DIABOLO": {
        "Parent": "IfcTendonConduit",
        "Description": ""
      },
      "IfcTendon.COATED": {
        "Parent": "IfcTendon",
        "Description": "The tendon is coated.\n\n\n"
      },
      "IfcTendon.WIRE": {
        "Parent": "IfcTendon",
        "Description": "The tendon is a wire.\n\n\n"
      },
      "IfcTendon.BAR": {
        "Parent": "IfcTendon",
        "Description": ""
      },
      "IfcTendon.STRAND": {
        "Parent": "IfcTendon",
        "Description": ""
      },
      "IfcVoidingFeature": {
        "Parent": "IfcFeatureElementSubtraction",
        "Description": "A voiding feature is a modification of an element which reduces its volume. Such a feature may be manufactured in different ways, for example by cutting, drilling, or milling of members made of various materials, or by inlays into the formwork of cast members made of materials such as concrete.\n\n\n\nThe standard use of instances of _IfcVoidingFeature_ is as a part of element type objects (instances of subtypes of _IfcElementType_). The part&ndash;whole relationship is established by an aggregation relationship object, expressing the decomposition of an element type into one or more additive elements (element parts) and zero or more feature elements.\n\n\n\n> HISTORY&nbsp; New entity in IFC4.\n\n\n\n{ .use-head}\n\nContainment Use Definition\n\n\n\nVoiding features shall have no spatial containment relationship to the spatial structure since they are dependent on element types without spatial containment relationships or on an element occurrence with own spatial containment relationship.\n\n\n\n* The _SELF\\IfcElement.ContainedInStructure_ relationship shall be NIL.\n\n\n"
      },
      "IfcVoidingFeature.HOLE": {
        "Parent": "IfcVoidingFeature",
        "Description": "A circular or slotted or threaded hole, typically but not necessarily of smaller dimension than what would be considered a cutout.\n\n\n"
      },
      "IfcVoidingFeature.MITER": {
        "Parent": "IfcVoidingFeature",
        "Description": "A skewed plane end cut, removing material across the entire profile of the voided element.\n\n\n"
      },
      "IfcVoidingFeature.NOTCH": {
        "Parent": "IfcVoidingFeature",
        "Description": "An external cutout of with a mostly rectangular cutting profile.  The edges between cutting planes may be overcut or undercut, i.e. rounded.\n\n\n"
      },
      "IfcVoidingFeature.CHAMFER": {
        "Parent": "IfcVoidingFeature",
        "Description": "A skewed plane end cut, removing material only across a part of the profile of the voided element.\n\n\n"
      },
      "IfcVoidingFeature.EDGE": {
        "Parent": "IfcVoidingFeature",
        "Description": "A shape modification along an edge of the element with the edge length as the predominant dimension of the feature, and feature profile dimensions which are typically much smaller than the edge length.  Can for example be a chamfer edge (differentiated from a chamfer by its ratio of dimensions and thus usually manufactured differently), rounded edge (a convex edge feature), or fillet edge (a concave edge feature).\n\n\n"
      },
      "IfcVoidingFeature.CUTOUT": {
        "Parent": "IfcVoidingFeature",
        "Description": ""
      }
    }
  }
}