# Industry Foundation Classes IFC.
# Copyright (C) 2020 buildingSMART
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: buildingSMART community\n"

#:IFC.xml:43890
msgid "IfcApplication"
msgstr "IfcApplication"

msgid "IfcApplication_DEFINITION"
msgstr "[[IfcApplication]] holds the information about an IFC compliant application developed by an application developer. The [[IfcApplication]] utilizes a short identifying name as provided by the application developer. HISTORY New entity in IFC1.5."

#:IFC.xml:175
msgid "IfcApplication_ApplicationDeveloper"
msgstr "ApplicationDeveloper"

msgid "IfcApplication_ApplicationDeveloper_DEFINITION"
msgstr "Name of the application developer."

#:IFC.xml:43891
msgid "IfcApplication_ApplicationFullName"
msgstr "ApplicationFullName"

msgid "IfcApplication_ApplicationFullName_DEFINITION"
msgstr "The full name of the application as specified by the application developer."

#:IFC.xml:43896
msgid "IfcApplication_ApplicationIdentifier"
msgstr "ApplicationIdentifier"

msgid "IfcApplication_ApplicationIdentifier_DEFINITION"
msgstr "Short identifying name for the application."

#:IFC.xml:43901
msgid "IfcApplication_Version"
msgstr "Version"

msgid "IfcApplication_Version_DEFINITION"
msgstr "The version number of this software as specified by the developer of the application."

#:IFC.xml:43931
msgid "IfcChangeActionEnum"
msgstr "IfcChangeActionEnum"

msgid "IfcChangeActionEnum_DEFINITION"
msgstr "[[IfcChangeActionEnum]] identifies the type of change that might have occurred to the object during the last session for example, added, modified, deleted . This information is required in a partial model exchange scenario so that an application or model server will know how an object might have been affected by the previous application. Valid enumerations are Consider Application A will create an IFC dataset that it wants to publish to others for modification and have the ability to subsequently merge these changes back into the original model. Before publication, it may want to set the [[IfcChangeActionEnum]] to NOCHANGE to establish a baseline so that other application changes can be easily identified. Application B then receives this IFC dataset and adds a new object and sets [[IfcChangeActionEnum]] to ADDED with Application B defined as the OwningApplication. Application B then modifies an existing object and re defines the LastModifiedDate to the time of the modification, LastModifyingUser to the [[IfcPersonAndOrganization]] making the change, and sets the LastModifyingApplication to Application B. When Application A receives this modified dataset, it can determine which objects have been added and modified by Application B and either merge or reject these changes as necessary. Consequently, the intent is that an application only modifies the value of [[IfcChangeActionEnum]] when it does something to the object, with the further intent that a model server is responsible for clearing the [[IfcChangeActionEnum]] back to NOCHANGE when it is ready to be republished. HISTORY New enumeration in IFC2.0. .change ifc2x4 IFC4 CHANGE Enumerators MODIFIEDADDED and MODIFIEDDELETED have been removed Items NOCHANGE Object has not been modified. MODIFIED A modification to the object has been made by the user and application defined by the LastModifyingUser and LastModifyingApplication respectively. ADDED The object has been created by the user and application defined by the OwningUser and OwningApplication respectively. DELETED The object has been deleted by the user and application defined by the LastModifyingUser and LastModifyingApplication respectively. NOTDEFINED The change action is not known or has not been defined."

#:IFC.xml:43932
msgid "IfcChangeActionEnum_ADDED"
msgstr "ADDED"

msgid "IfcChangeActionEnum_ADDED_DEFINITION"
msgstr "The object has been created by the user and application defined by the OwningUser and OwningApplication respectively."

#:IFC.xml:43933
msgid "IfcChangeActionEnum_DELETED"
msgstr "DELETED"

msgid "IfcChangeActionEnum_DELETED_DEFINITION"
msgstr "The object has been deleted by the user and application defined by the LastModifyingUser and LastModifyingApplication respectively."

#:IFC.xml:43934
msgid "IfcChangeActionEnum_MODIFIED"
msgstr "MODIFIED"

msgid "IfcChangeActionEnum_MODIFIED_DEFINITION"
msgstr "A modification to the object has been made by the user and application defined by the LastModifyingUser and LastModifyingApplication respectively."

#:IFC.xml:43935
msgid "IfcChangeActionEnum_NOCHANGE"
msgstr "NOCHANGE"

msgid "IfcChangeActionEnum_NOCHANGE_DEFINITION"
msgstr "Object has not been modified."

#:IFC.xml:43936
msgid "IfcChangeActionEnum_NOTDEFINED"
msgstr "NOTDEFINED"

msgid "IfcChangeActionEnum_NOTDEFINED_DEFINITION"
msgstr "The change action is not known or has not been defined."

#:IFC.xml:43938
msgid "IfcOwnerHistory"
msgstr "IfcOwnerHistory"

msgid "IfcOwnerHistory_DEFINITION"
msgstr "[[IfcOwnerHistory]] defines all history and identification related information. In order to provide fast access it is directly attached to all independent objects, relationships and properties. [[IfcOwnerHistory]] is used to identify the creating and owning application and user for the associated object, as well as capture the last modifying application and user. HISTORY New entity in IFC1.0. .change ifc2x4 IFC4 CHANGE ChangeAction is now optional and a related WHERE rule enforces conditions when it is asserted. .spec head Informal Propositions 1. If LastModifiedDate is defined but ChangeAction is not asserted, then the state of ChangeAction is assumed to be UNDEFINED. 2. If both LastModifiedDate and ChangeAction are asserted, then the state of ChangeAction applies to the value asserted in LastModifiedDate."

#:IFC.xml:321
msgid "IfcOwnerHistory_OwningUser"
msgstr "OwningUser"

msgid "IfcOwnerHistory_OwningUser_DEFINITION"
msgstr "Direct reference to the end user who currently owns this object. Note that IFC includes the concept of ownership transfer from one user to another and therefore distinguishes between the Owning User and Creating User."

#:IFC.xml:333
msgid "IfcOwnerHistory_LastModifyingUser"
msgstr "LastModifyingUser"

msgid "IfcOwnerHistory_LastModifyingUser_DEFINITION"
msgstr "User who carried out the last modification using LastModifyingApplication."

#:IFC.xml:43907
msgid "IfcOwnerHistory_OwningApplication"
msgstr "OwningApplication"

msgid "IfcOwnerHistory_OwningApplication_DEFINITION"
msgstr "Direct reference to the application which currently owns this object on behalf of the owning user of the application. Note that IFC includes the concept of ownership transfer from one application to another and therefore distinguishes between the Owning Application and Creating Application."

#:IFC.xml:43919
msgid "IfcOwnerHistory_LastModifyingApplication"
msgstr "LastModifyingApplication"

msgid "IfcOwnerHistory_LastModifyingApplication_DEFINITION"
msgstr "Application used to make the last modification."

#:IFC.xml:43939
msgid "IfcOwnerHistory_ChangeAction"
msgstr "ChangeAction"

msgid "IfcOwnerHistory_ChangeAction_DEFINITION"
msgstr "Enumeration that defines the actions associated with changes made to the object."

#:IFC.xml:43944
msgid "IfcOwnerHistory_CreationDate"
msgstr "CreationDate"

msgid "IfcOwnerHistory_CreationDate_DEFINITION"
msgstr "The date and time expressed in UTC Universal Time Coordinated, formerly Greenwich Mean Time or GMT when first created by the original OwningApplication. Once defined this value remains unchanged through the lifetime of the entity."

#:IFC.xml:43949
msgid "IfcOwnerHistory_LastModifiedDate"
msgstr "LastModifiedDate"

msgid "IfcOwnerHistory_LastModifiedDate_DEFINITION"
msgstr "Date and Time expressed in UTC Universal Time Coordinated, formerly Greenwich Mean Time or GMT at which the last modification was made by LastModifyingUser and LastModifyingApplication."

#:IFC.xml:43954
msgid "IfcOwnerHistory_State"
msgstr "State"

msgid "IfcOwnerHistory_State_DEFINITION"
msgstr "Enumeration that defines the current access state of the object."

#:IFC.xml:43960
msgid "IfcStateEnum"
msgstr "IfcStateEnum"

msgid "IfcStateEnum_DEFINITION"
msgstr "The [[IfcStateEnum]] enumeration identifies the state or accessibility of the object for example, read write, locked . Valid enumerations are HISTORY New enumeration in IFC2.0. .change ifc2x3 IFC2x3 CHANGE This concept was initially introduced in IFC2.0 as IfcModifiedFlag of type BINARY 3 FIXED and has been modified in R2x3 to an enumeration. It was initially introduced as a first step towards providing facilities for partial model exchange and is intended for use primarily by a model server so that an application can identify the state of the object. Items READWRITE READONLY Object is in a Read Only state. It may be viewed but not modified by an application. LOCKED Object is in a Locked state. It may not be accessed by an application. READWRITELOCKED Object is in a Read Write Locked state. It may not be accessed by an application. READONLYLOCKED Object is in a Read Only Locked state. It may not be accessed by an application."

#:IFC.xml:43961
msgid "IfcStateEnum_LOCKED"
msgstr "LOCKED"

msgid "IfcStateEnum_LOCKED_DEFINITION"
msgstr "Object is in a Locked state. It may not be accessed by an application."

#:IFC.xml:43962
msgid "IfcStateEnum_READONLY"
msgstr "READONLY"

msgid "IfcStateEnum_READONLY_DEFINITION"
msgstr "Object is in a Read Only state. It may be viewed but not modified by an application."

#:IFC.xml:43963
msgid "IfcStateEnum_READONLYLOCKED"
msgstr "READONLYLOCKED"

msgid "IfcStateEnum_READONLYLOCKED_DEFINITION"
msgstr "Object is in a Read Only Locked state. It may not be accessed by an application."

#:IFC.xml:43964
msgid "IfcStateEnum_READWRITE"
msgstr "READWRITE"

msgid "IfcStateEnum_READWRITE_DEFINITION"
msgstr "READWRITE"

#:IFC.xml:43965
msgid "IfcStateEnum_READWRITELOCKED"
msgstr "READWRITELOCKED"

msgid "IfcStateEnum_READWRITELOCKED_DEFINITION"
msgstr "Object is in a Read Write Locked state. It may not be accessed by an application."

#:IFC.xml:43967
msgid "IfcTable"
msgstr "IfcTable"

msgid "IfcTable_DEFINITION"
msgstr "An [[IfcTable]] is a data structure for the provision of information in the form of rows and columns. Each instance may have [[IfcTableColumn]] instances that define the name, description and units for each column. The rows of information are stored as a list of [[IfcTableRow]] objects. Limitation For backwards compatibility, the rows of an [[IfcTable]] object are constrained to have the same number of cells. The first row of the table provides the number of cells. All other rows are forced to include the same number of cells. This is enforced by the WR2. Figure 1 illustrates table use. Table use .. .. .. .. figures ifctable image1.gif Figure 1 Table use Figure 2 depicts how tables were structured prior to IFC4. Table use alternative .. .. .. .. figures ifctable image2.gif Figure 2 Table use alternative HISTORY New entity in IFC1.5. .change ifc2x4 IFC4 CHANGE Columns attribute added."

#:IFC.xml:43991
msgid "IfcTable_Rows"
msgstr "Rows"

msgid "IfcTable_Rows_DEFINITION"
msgstr "Reference to information content of rows."

#:IFC.xml:44003
msgid "IfcTable_Columns"
msgstr "Columns"

msgid "IfcTable_Columns_DEFINITION"
msgstr "The column information associated with this table."

#:IFC.xml:43968
msgid "IfcTable_NumberOfCellsInRow"
msgstr "NumberOfCellsInRow"

msgid "IfcTable_NumberOfCellsInRow_DEFINITION"
msgstr "The number of cells in each row, this complies to the number of columns in a table. See WR2 that ensures that each row has the same number of cells. The actual value is derived from the first member of the Rows list."

#:IFC.xml:43973
msgid "IfcTable_NumberOfDataRows"
msgstr "NumberOfDataRows"

msgid "IfcTable_NumberOfDataRows_DEFINITION"
msgstr "The number of rows in a table that contains data, i.e. total number of rows minus number of heading rows in table."

#:IFC.xml:43978
msgid "IfcTable_NumberOfHeadings"
msgstr "NumberOfHeadings"

msgid "IfcTable_NumberOfHeadings_DEFINITION"
msgstr "The number of headings in a table. This is restricted by WR3 to max. one."

#:IFC.xml:43983
msgid "IfcTable_Name"
msgstr "Name"

msgid "IfcTable_Name_DEFINITION"
msgstr "Name"

#:IFC.xml:44015
msgid "IfcTableColumn"
msgstr "IfcTableColumn"

msgid "IfcTableColumn_DEFINITION"
msgstr "An [[IfcTableColumn]] is a data structure that captures column information for use in an [[IfcTable]] . Each instance defines the identifier, name, description, and units of measure that are applicable to the columnar data associated with the [[IfcTableRow]] objects. The use of [[IfcTableColumn]] supersedes the IsHeading flag associated with [[IfcTableRow]] . HISTORY New entity in IFC4."

#:IFC.xml:2734
msgid "IfcTableColumn_ReferencePath"
msgstr "ReferencePath"

msgid "IfcTableColumn_ReferencePath_DEFINITION"
msgstr "The ReferencePath indicates a relative path to the object and attribute for which data within this column is to be applied. For constraints, such path is relative to the [[IfcObjectDefinition]] associated by [[IfcRelAssociatesConstraint]] .RelatedObjects. For a constraint to be satisified, exactly one row of the table must match the referenced object for all columns where the ReferencePath attribute is set."

#:IFC.xml:44016
msgid "IfcTableColumn_Description"
msgstr "Description"

msgid "IfcTableColumn_Description_DEFINITION"
msgstr "The Description provides human readable text describing the table column."

#:IFC.xml:44021
msgid "IfcTableColumn_Identifier"
msgstr "Identifier"

msgid "IfcTableColumn_Identifier_DEFINITION"
msgstr "The Identifier identifies the column within the table. If provided, it must be unique within the table. Columns may be cross referenced across multiple tables by sharing the same column identifier."

#:IFC.xml:44026
msgid "IfcTableColumn_Name"
msgstr "Name"

msgid "IfcTableColumn_Name_DEFINITION"
msgstr "The Name is a human readable caption for the table column. It is not necessarilly unique."

#:IFC.xml:44031
msgid "IfcTableColumn_Unit"
msgstr "Unit"

msgid "IfcTableColumn_Unit_DEFINITION"
msgstr "The Unit indicates the unit of measure to be used for this column s data. If not provided, then project default units are assumed. If ReferencePath is provided, the the unit must be of the same measure as the referenced attribute."

#:IFC.xml:44037
msgid "IfcTableRow"
msgstr "IfcTableRow"

msgid "IfcTableRow_DEFINITION"
msgstr "[[IfcTableRow]] contains data for a single row within an [[IfcTable]] . Limitation For backward compatibility, all [[IfcTableRow]] objects referenced by an [[IfcTable]] shall have the same number of Row Cells. The actual number of Cells shall be taken from the number of cells of the first [[IfcTableRow]] for that table. The number of Cells is calculated by the derived attribute NumberOfCellsInRow in the associated [[IfcTable]] . NOTE The attribute IsHeading exists for backward compatibility. [[IfcTableColumn]] should be used instead beginning with IFC4. Figure 337 illustrates table row use. Figure 337 Table row use Figure 338 depicts how table rows were structured prior to IFC4 with the use of the IsHeading flag. Note that the use of the [[IfcTableColumn]] constructs should be used instead of the IsHeading flag which remains for backward compatibility only . Figure 338 Table row use alternative HISTORY New entity in IFC1.5."

#:IFC.xml:44038
msgid "IfcTableRow_IsHeading"
msgstr "IsHeading"

msgid "IfcTableRow_IsHeading_DEFINITION"
msgstr "Flag which identifies if the row is a heading row or a row which contains row values. NOTE If the row is a heading, the flag takes the value TRUE."

#:IFC.xml:44043
msgid "IfcTableRow_RowCells"
msgstr "RowCells"

msgid "IfcTableRow_RowCells_DEFINITION"
msgstr "The data value of the table cell.."

#:IFC.xml:44049
msgid "IfcGloballyUniqueId"
msgstr "IfcGloballyUniqueId"

msgid "IfcGloballyUniqueId_DEFINITION"
msgstr "An [[IfcGloballyUniqueId]] holds an encoded string identifier that is used to uniquely identify an IFC object. An [[IfcGloballyUniqueId]] is a Globally Unique Identifier GUID which is an auto generated 128 bit number. Since this identifier is required for all IFC object instances, it is desirable to compress it to reduce overhead. The encoding of the base 64 character set is shown below 1 2 3 4 5 6 0123456789012345678901234567890123456789012345678901234567890123 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz The resulting string is a fixed 22 character length string to be exchanged within the IFC exchange file structure. NOTE Refer to the BuildingSMART website www.buildingsmart tech.org http www.buildingsmart tech.org for more information and sample encoding algorithms. HISTORY New type in IFC1.5.1."

