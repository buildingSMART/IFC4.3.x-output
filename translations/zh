msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /master/IfcKernel.pot\n"
"X-Crowdin-File-ID: 50\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_CN\n"
"PO-Revision-Date: 2022-02-22 13:49\n"

#:IFC.xml:20396
msgid "IfcActor"
msgstr "镜头"

msgid "IfcActor_DEFINITION"
msgstr "[[IfcActor]] 界定了在项目整个生命周期内参与项目的所有行为者或人的代理人。 它有助于在国际金融公司对象模式的资源部分使用个人和组织定义。 这包括名称、地址、电信地址和角色，IFC2.0 中的HISTORY 新实体"

#:IFC.xml:20422
msgid "IfcActor_IsActingUpon"
msgstr "IsactingUn"

msgid "IfcActor_IsActingUpon_DEFINITION"
msgstr "参考将行为者与对象联系在一起的关系。"

#:IFC.xml:20397
msgid "IfcActor_TheActor"
msgstr "观战者"

msgid "IfcActor_TheActor_DEFINITION"
msgstr "关于行为者的信息。"

#:IFC.xml:20436
msgid "IfcComplexPropertyTemplate"
msgstr "IfcComplex属性模板"

msgid "IfcComplexPropertyTemplate_DEFINITION"
msgstr "[[IfcComplexPropertyTemplate]] 定义了所有复杂属性的模板，或是 [[IfcComplexProperty]] s 或 [[IfcPhysicalComplexQuantity]] 。 个别复杂的属性模板是根据他们的名称属性和可选使用名称属性解释的。IFC4中的HISTORY 新实体。"

#:IFC.xml:20444
msgid "IfcComplexPropertyTemplate_TemplateType"
msgstr "模板类型"

msgid "IfcComplexPropertyTemplate_TemplateType_DEFINITION"
msgstr "模板类型"

#:IFC.xml:20456
msgid "IfcComplexPropertyTemplate_HasPropertyTemplates"
msgstr "HasProperty模板"

msgid "IfcComplexPropertyTemplate_HasPropertyTemplates_DEFINITION"
msgstr "引用了一组属性模板。只有当属性类型设置为 COMPLEX时，它才能提供。"

#:IFC.xml:20437
msgid "IfcComplexPropertyTemplate_UsageName"
msgstr "用法名称"

msgid "IfcComplexPropertyTemplate_UsageName_DEFINITION"
msgstr "用法名称"

#:IFC.xml:20470
msgid "IfcComplexPropertyTemplateTypeEnum"
msgstr "IfcComplexPropertyTemplateTypeEnum"

#:IFC.xml:20473
msgid "IfcContext"
msgstr "IfcContext"

msgid "IfcContext_DEFINITION"
msgstr "[[IfcContext]] 是对象、对象、属性集和属性定义的项目环境的概括。 子类型 [[IfcContext]] 的[[IfcProject]提供了一个构建项目所有信息的上下文。 它可能包含一个或多个[[IfcProjectLibrary]] s作为子类型的 [[IfcContext]] 来注册项目中包含的库。 一个被引用的产品库在 [[IfcProjectLibrary]] 中声明为该库的背景。 上下文定义可以被命名，使用继承的名称属性，它应该是用户可以识别的键值或数字。 LongName 可以添加全名。可以使用继承的描述属性给上下文提供进一步的解释。 关联对象[[IfcRelDeclares]] 声明了上下文中相应对象的上下文内容。 在次级类型一级引入了更具体的关系，在第四届国际化学品统一分类标签制度中的新的抽象实体。"

#:IFC.xml:20491
msgid "IfcContext_RepresentationContexts"
msgstr "A. 背景情况"

msgid "IfcContext_RepresentationContexts_DEFINITION"
msgstr "上下文内所用表述的背景。 当上下文为项目并且包括其组成部分的形状表示时， 需要包括一个或几个几个几何表现环境来定义例如： 世界协调系统、协调空间尺度和精密系数。 挂载ifc2x4 IFC4 变异. 属性已被更改为可选. 更改时基于文件交换向上兼容."

#:IFC.xml:20503
msgid "IfcContext_UnitsInContext"
msgstr "UnitsInContext"

msgid "IfcContext_UnitsInContext_DEFINITION"
msgstr "全局分配用于测量上下文中使用类型的单位。 挂载ifc2x4 IFC4 变异. 属性已被更改为可选. 更改时基于文件交换向上兼容."

#:IFC.xml:20515
msgid "IfcContext_Declares"
msgstr "声明"

msgid "IfcContext_Declares_DEFINITION"
msgstr "引用了 [[IfcRelDeclares]] 关系，这种关系将包含层次结构中最上层的实体分配给此上下文实例。 注意。使用[[IfcRelAggregates]] 的关系将空间厚度分配给[[IfcProject]] 。 这是一个单独的例外，因为与早些时候发布的版本兼容。"

#:IFC.xml:20529
msgid "IfcContext_IsDefinedBy"
msgstr "IsDefinedBy"

msgid "IfcContext_IsDefinedBy_DEFINITION"
msgstr "附加到此上下文的属性集定义的关系。 这些静态或动态定义的属性包含了进一步界定上下文的字母和数字信息内容。 .更改ifc2x4 IFC4 变迁. 数据类型已经从[[IfcRelDefines]] 改为[[IfcRelDefinesByProperties]]，并且基于文件的交换具有向上兼容性。"

#:IFC.xml:20474
msgid "IfcContext_LongName"
msgstr "长度名称"

msgid "IfcContext_LongName_DEFINITION"
msgstr "用于参考的上下文长名。"

#:IFC.xml:20479
msgid "IfcContext_ObjectType"
msgstr "对象类型"

msgid "IfcContext_ObjectType_DEFINITION"
msgstr "对象类型表示进一步显示对象的特定类型。使用必须在可实例子类型的级别上确定。 注子类型 [[IfcContext]] 不引入预定义类型属性， 因此，ObjectType 的用法没有绑定到预定义Type 枚举中的 USERDEFINED。"

#:IFC.xml:20484
msgid "IfcContext_Phase"
msgstr "阶段"

msgid "IfcContext_Phase_DEFINITION"
msgstr "目前的项目阶段，或本项目的生命周期阶段，必须通过视图定义或执行协议商定适用的数值。"

#:IFC.xml:20541
msgid "IfcControl"
msgstr "离子控制"

msgid "IfcControl_DEFINITION"
msgstr "[[IfcControl]] 是对控制或限制一般产品、工艺或资源使用的所有概念进行抽象概括。 它可被视为一种规章、成本表、要求或订单或适用于一种产品的其他要求。 • 必须满足其要求和规定的程序或资源。 EXAMPLE控制包括行动要求、成本时间表、项目订单、工作计划和工作日历。 IF1.0 中的HISTORY 新实体。 .change ifc2x4 IFC4 变异属性识别已添加。"

#:IFC.xml:20549
msgid "IfcControl_Controls"
msgstr "控件"

msgid "IfcControl_Controls_DEFINITION"
msgstr "引用将控制与被控制对象关联的关系。"

#:IFC.xml:20542
msgid "IfcControl_Identification"
msgstr "1. 身份识别"

msgid "IfcControl_Identification_DEFINITION"
msgstr "指向控制的标识。 这是发生一级的标识符。 hange ifc2x4 IFC4 变异属性，通过从各种子类型的[[IfcControl]] 推广而统一起来。"

#:IFC.xml:20563
msgid "IfcCorrectObjectAssignment"
msgstr "IfcCorrectObjectAssignment"

#:IFC.xml:20571
msgid "IfcDefinitionSelect"
msgstr "IfcDefinitionSelect"

#:IFC.xml:20572
msgid "IfcGroup"
msgstr "IfcGroup"

msgid "IfcGroup_DEFINITION"
msgstr "[[IfcGroup]] 是任意组的概括。一个组是对象的合乎逻辑的组合。 它没有自己的立场，也不能有自己的形状代表性。 因此，一个组是某些非几何地形分类方面的一个组合。 对于一个群体来说，一个例子是一个系统，因为它将它们的角色包含在各个元素中。 不论他们在建筑物中的位置如何。 一个代表系统的群组最重要的用途之一是[[IfcDistributionSystem]] ， 将分配元件，如空间加热器和阀门分成供暖系统。 一个组可以持有任何对象集合，关联[[IfcRelAssignsToGroup]] 用来建立群组集合。 组内的对象是产品、流程、控制、资源、行为者或其他组别，因此可以嵌套。 对象可以是零、一个或多个组的一部分。 分组关系不必等级化，也不意味着依赖关系。 群组被分配到其他对象，如流程或资源的关系对象，它是指使用[[IfcRelAssignsToProcess]]分配给对应对象进程的资源，使用[[IfcRelAssignsToResource]] 分配资源来影响组使用 [[IfcRelAssignsToControl]] 分配的资源。一个群组可以被交换而无需在群组收藏中已有对象。 [[IfcGroup]] 没有定义自己的对象协调系统，也没有独立的形状代表。 注使用[[IfcRelAggregates]]和适当的子类型[[IfcProduct]]来定义可能具有自己位置和形状的产品总合。 这种关系应用于创建产品分类结构，在IFC1中建立新的实体。 ...更改ifc2x4 IFC4 变换. 逆异比关系已设置为 0..n"

#:IFC.xml:20576
msgid "IfcGroup_ReferencedInStructures"
msgstr "引用的结构"

msgid "IfcGroup_ReferencedInStructures_DEFINITION"
msgstr "引用的结构"

#:IFC.xml:20588
msgid "IfcGroup_IsGroupedBy"
msgstr "IsGroupedBy"

msgid "IfcGroup_IsGroupedBy_DEFINITION"
msgstr "引用关系[[IfcRelAssignsToGroup]] 将一个关系分配给许多群组成员到 [[IfcGroup]] 对象。 .更改 ifc2x4 IFC4 变换. 卡明性已从 1..1 改为0... 为了允许在不已分配集团成员的情况下交换集团概念。 现在它也允许使用许多实例[[IfcRelAssignsToGroup]] 来分配小组成员。 更改是通过基于文件的交换向上兼容。"

#:IFC.xml:20602
msgid "IfcObject"
msgstr "IfcObject"

msgid "IfcObject_DEFINITION"
msgstr "An [[IfcObject]] is the generalization of any semantically treated thing or process. Objects are things as they appear i.e. occurrences. NOTE Examples of [[IfcObject]] include physically tangible items such as wall, beam or covering, physically existing items such as spaces, or conceptual items such as grids or virtual boundaries. It also stands for processes such as work tasks, for controls such as cost items, or for actors such as persons involved in the design process. Objects can be named, using the inherited Name attribute, which should be a user recognizable label for the object occurrance. Further explanations to the object can be given using the inherited Description attribute. The ObjectType attribute is used to store the user defined value for all subtypes of [[IfcObject]] , where a PredefinedType attribute is given, and its value is set to USERDEFINED. to provide a type information could be seen as a very lightweight classifier of the subtype of [[IfcObject]] , if no PredefinedType attribute is given. This is often the case, if no comprehensive list of predefined types is available. Objects are independent pieces of information that might contain or reference other pieces of information. There are several relationships in which objects can be involved Association to external internal resource information an association relationship that refers to external internal sources of information. See supertype [[IfcObjectDefinition]] for more information. Assignment of other objects an assignment relationship that refers to other types of objects. See supertype [[IfcObjectDefinition]] for more information. Aggregation of other objects an aggregation relationship that establishes a whole part relation. Objects can either be a whole, or a part, or both. See supertype [[IfcObjectDefinition]] for more information. Assignment of a type IsTypedBy a definition relationship [[IfcRelDefinesByType]] that uses a type definition to define the common characteristics of this occurrences, potentially including the common shape representation and common properties of all object occurrences assigned to this type. It is a specific occurrence relationship with implied dependencies as the occurrence properties depend on the properties of the type, but may override them . Assignment of a partial type IsDeclaredBy , Declares a definition relationship [[IfcRelDefinesByObject]] that uses a component of a type definition a part of a type, called the declaring part to define a component of an occurence part of occurrence, called the reflected part . This is also refered to as a deep copy . The common characteristics of all parts in the occurrence are defined by parts in the type. It is a specific occurrence relationship with implied dependencies as the occurrence properties depend on the properties of the type, but may override them . Assignment of property sets IsDefinedBy a definition relationship [[IfcRelDefinesByProperties]] that assignes property set definitions to the object occurrence. NOTE See [[IfcRelDefinesByType]] for an explanatory figure. Also see there for how to override type properties by occurrence properties. See [[IfcRelDefinesByObject]] for an explanatory figure for the assignment of a partial type. HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE The inverse relationships Declares , IsDeclaredBy , and IsTypedBy have been added, types are not longer included in the IsDefinesBy relationship. [[IfcProject]] has been promoted to be a subtype of [[IfcObjectDefinition]] [[IfcContext]] . .spec head Informal Propositions 1. A partial type assignment, i.e. the inverse attribute IsDeclaredBy , or Declares shall only be used, if the object is part of a decomposition, i.e. if either IsDecomposedBy , or Decomposes is exerted."

#:IFC.xml:20610
msgid "IfcObject_IsDeclaredBy"
msgstr "Isledby"

msgid "IfcObject_IsDeclaredBy_DEFINITION"
msgstr "链接到关系对象指向为这个对象发生事件提供对象定义的声明对象。 声明的物体必须是物体类型分解的一部分。 关联的 [[IfcObject]] 或其子类型包含特定信息作为类型或样式的一部分， 定义, 所有声明[[IfcObject]] 或其子类型的实例都是常见的。 .更改 ifc2x4 IFC4 更改新反向关系，并且以基于文件的交换向上兼容性作了更改。"

#:IFC.xml:20624
msgid "IfcObject_Declares"
msgstr "声明"

msgid "IfcObject_Declares_DEFINITION"
msgstr "链接到关系对象指向接收对象定义的反映对象。 所映射的对象必须是对象发生分解的一部分。 关联的 [[IfcObject]] 或其子类型提供特定信息，作为类型或样式的一部分， 定义, 所有声明[[IfcObject]] 或其子类型的实例都是常见的。 .更改 ifc2x4 IFC4 更改新反向关系，并且以基于文件的交换向上兼容性作了更改。"

#:IFC.xml:20638
msgid "IfcObject_IsTypedBy"
msgstr "IsTypedBy"

msgid "IfcObject_IsTypedBy_DEFINITION"
msgstr "提供此对象发生的类型定义的对象类型的关系集。 当时关联的 [[IfcTypeObject]] 或其子类型包含特定信息或类型或样式 ， 这对所有实例 [[IfcObject]] 或其子类型都是常见的，指的是同一类型。 .更改ifc2x4 IFC4 更改新反向关系，与[[IfcRelDefinesByType]]的链接此前已被包含在反向关系 [[IfcRelDefines]] 中。 与基于文件交换的向上兼容性所作的更改。"

#:IFC.xml:20652
msgid "IfcObject_IsDefinedBy"
msgstr "IsDefinedBy"

msgid "IfcObject_IsDefinedBy_DEFINITION"
msgstr "附加到此对象的属性集定义的关系。 这些静态或动态定义的属性包含了进一步定义对象的字母和数字信息内容。 .更改ifc2x4 IFC4 变迁. 数据类型已经从[[IfcRelDefines]] 改为[[IfcRelDefinesByProperties]]，并且基于文件的交换具有向上兼容性。"

#:IFC.xml:20603
msgid "IfcObject_ObjectType"
msgstr "对象类型"

msgid "IfcObject_ObjectType_DEFINITION"
msgstr "类型表示进一步显示对象的特定类型。使用必须在可实例子类型的级别上确定。 尤其是，它持有用户定义类型，如果预定义类型的属性枚举设置为 USERDEFINED。"

#:IFC.xml:20664
msgid "IfcObjectDefinition"
msgstr "IfcObjectDefinition"

msgid "IfcObjectDefinition_DEFINITION"
msgstr "An [[IfcObjectDefinition]] is the generalization of any semantically treated thing or process, either being a type or an occurrences. Object defintions can be named, using the inherited Name attribute, which should be a user recognizable label for the object occurrance. Further explanations to the object can be given using the inherited Description attribute. A context is a specific kind of object definition as it provides the project or library context in which object types and object occurrences are defined. Objects are independent pieces of information that might contain or reference other pieces of information. There are four essential kinds of relationships in which object definitons by their instantiable subtypes can be involved Assignment of other objects an assignment relationship [[IfcRelAssigns]] that refers to other types of objects and creates a bi directional association. The semantic of the assignment is established at the level of the subtypes of the general [[IfcRelAssigns]] relationship. There is no dependency implied a priori by the assignment. Association to external resources an association relationship [[IfcRelAssociates]] that refers to external sources of information most notably a classification or document and creates a uni directional association. There is no dependency implied by the association. Aggregation of other objects an aggregation relationship [[IfcRelAggregates]] that establishes an unordered, spatial whole part relation and creates a bi directional relation. There is an implied dependency established. Nesting of other objects a nesting relationship [[IfcRelNests]] that establishes an ordered, non spatial whole part relation and creates a bi directional relation. There is an implied dependency established. Declaration within a context a relationship [[IfcRelDeclares]] of the uppermost object definition within the object definition tree e.g. the summary object within an object nesting tree to the context a project or project library . It applies the units, representation context and other context information to this object definition and all dependent ones. NOTE The link between the uppermost object in the spatial structure tree, that is [[IfcSite]] or ifcBuilding , and the context provided by [[IfcProject]] is created using the [[IfcRelAggregates]] relationship. See [[IfcProject]] for more information. HISTORY New abstract entity in IFC2x3. .change ifc2x4 IFC4 CHANGE The new subtype [[IfcContext]] and the relationship to context HasContext has been added . The decomposition relationship is split into ordered nesting Nests , IsNestedBy and un ordered aggregating Decomposes , IsDecomposedBy ."

#:IFC.xml:20668
msgid "IfcObjectDefinition_IsDecomposedBy"
msgstr "分解器"

msgid "IfcObjectDefinition_IsDecomposedBy_DEFINITION"
msgstr "对分解关系的提及是一个聚合。它决定该对象定义是一个无序的整个部分分解关系中的整数。 一个对象定义可以由几个其他对象的出现或部分加以汇总。 hange ifc2x4 IFC4 变异. 反向属性数据类型已从超级类型 [[IfcRelDecomposes]] 更改为子类型 [[IfcRelAggregates]] 。"

#:IFC.xml:20682
msgid "IfcObjectDefinition_Decomposes"
msgstr "分解"

msgid "IfcObjectDefinition_Decomposes_DEFINITION"
msgstr "对分解关系的提及是一个聚合。它确定此对象定义是一个无序的整个部分分解关系的一部分。 对象定义只能是单一分解的一部分，只能允许等级式的月经。 hange ifc2x4 IFC4 变异. 反向属性数据类型已从超级类型 [[IfcRelDecomposes]] 更改为子类型 [[IfcRelAggregates]] 。"

#:IFC.xml:20696
msgid "IfcObjectDefinition_HasAssignments"
msgstr "急速分配"

msgid "IfcObjectDefinition_HasAssignments_DEFINITION"
msgstr "引用关系对象，由关联关系中的其他子类型[[IfcObject]] 分配给此对象实例。 例如与产品、加工、控制、资源或团体的联系。"

#:IFC.xml:20722
msgid "IfcObjectDefinition_IsNestedBy"
msgstr "IsNestedBy"

msgid "IfcObjectDefinition_IsNestedBy_DEFINITION"
msgstr "引用分解关系是一种嵌套。它决定这个对象定义是一个有序的整个部分分解关系中的整数。 对象或对象类型可以由其他几个对象的发生或类型嵌套。 hange ifc2x4 IFC4 变异. 反属性数据类型已被添加并从异常化数据类型中分离出来, 定义于 [[IfcObjectDefinition]] 。"

#:IFC.xml:20736
msgid "IfcObjectDefinition_Nests"
msgstr "恩斯文"

msgid "IfcObjectDefinition_Nests_DEFINITION"
msgstr "引用分解关系是一种嵌套。它决定这个对象定义是一个有序的整个部分分解关系的一部分。 对象的出现或类型只能是一个单独分解的一部分，以允许等级式的月经。 hange ifc2x4 IFC4 变异. 反属性数据类型已被添加并从[[IfcObjectDefinition]] 定义的分解中分离出来。"

#:IFC.xml:20750
msgid "IfcObjectDefinition_HasContext"
msgstr "HasContext"

msgid "IfcObjectDefinition_HasContext_DEFINITION"
msgstr "参考上下文提供了项目单位或陈述情况等背景资料。 它只能为最上层的非空间物体而断言。更改ifc2x4 IFC4 变异。反向属性数据类型已被添加。"

#:IFC.xml:20762
msgid "IfcObjectDefinition_HasAssociations"
msgstr "HasAssociations"

msgid "IfcObjectDefinition_HasAssociations_DEFINITION"
msgstr "引用关系对象，将外部引用或其他资源定义关联到对象。例如关联到库、文档或分类。"

#:IFC.xml:20774
msgid "IfcObjectTypeEnum"
msgstr "IfcObjectTypeEnum"

msgid "IfcObjectTypeEnum_DEFINITION"
msgstr "This enumeration defines the applicable object categories. Attached to an object, it indicates to which subtype of [[IfcObject]] the entity referencing it would otherwise comply with. HISTORY New entity in IFC1.0. .deprecated DEPRECATION The use of this enumeration is deprecated since IFC2x3. Items PRODUCT PROCESS CONTROL RESOURCE ACTOR GROUP PROJECT NOTDEFINED"

#:IFC.xml:20775
msgid "IfcObjectTypeEnum_ACTOR"
msgstr "ACTO"

msgid "IfcObjectTypeEnum_ACTOR_DEFINITION"
msgstr "ACTO"

#:IFC.xml:20776
msgid "IfcObjectTypeEnum_CONTROL"
msgstr "控制"

msgid "IfcObjectTypeEnum_CONTROL_DEFINITION"
msgstr "控制"

#:IFC.xml:20777
msgid "IfcObjectTypeEnum_GROUP"
msgstr "群組"

msgid "IfcObjectTypeEnum_GROUP_DEFINITION"
msgstr "群組"

#:IFC.xml:20778
msgid "IfcObjectTypeEnum_NOTDEFINED"
msgstr "未完成"

msgid "IfcObjectTypeEnum_NOTDEFINED_DEFINITION"
msgstr "未完成"

#:IFC.xml:20779
msgid "IfcObjectTypeEnum_PROCESS"
msgstr "进程"

msgid "IfcObjectTypeEnum_PROCESS_DEFINITION"
msgstr "进程"

#:IFC.xml:20780
msgid "IfcObjectTypeEnum_PRODUCT"
msgstr "产品"

msgid "IfcObjectTypeEnum_PRODUCT_DEFINITION"
msgstr "产品"

#:IFC.xml:20781
msgid "IfcObjectTypeEnum_PROJECT"
msgstr "进程"

msgid "IfcObjectTypeEnum_PROJECT_DEFINITION"
msgstr "进程"

#:IFC.xml:20782
msgid "IfcObjectTypeEnum_RESOURCE"
msgstr "资源"

msgid "IfcObjectTypeEnum_RESOURCE_DEFINITION"
msgstr "资源"

#:IFC.xml:20784
msgid "IfcPreDefinedPropertySet"
msgstr "IfcPreDefinedPropertySet"

msgid "IfcPreDefinedPropertySet_DEFINITION"
msgstr "[[IfcPreDefinedPropertySet]] 是指分配给对象或类型对象的所有静态定义属性集的概括。 静态或预先定义的属性集是具有特定定义数据类型的属性清单的实体。 属性集通过使用对应对象Occurrence Object [[IfcRelDefinesByProperties]] 的关系对象使用反向属性定义来与其他对象相关。 使用反向属性定义类型使用直接链接键入对象 [[IfcPreDefinedPropertySet]] 可以分配给对象和对象类型，但没有定义属性集模板。 IFC4 中的新实体"

#:IFC.xml:20787
msgid "IfcProcess"
msgstr "离子进程"

msgid "IfcProcess_DEFINITION"
msgstr "[[IfcProcess]] is defined as one individual activity or event, that is ordered in time, that has sequence relationships with other processes, which transforms input in output, and may connect to other other processes through input output relationships. An [[IfcProcess]] can be an activity or task , or an event. It takes usually place in building construction with the intent of designing, costing, acquiring, constructing, or maintaining products or other and similar tasks or procedures. Figure 1 illustrates process relationships. .extDef NOTE Definition according to ISO9000 A process is a set of activities that are interrelated or that interact with one another. Processes use resources to transform inputs into outputs. Processes are interconnected because the output from one process becomes the input for another process. In effect, processes are glued together by means of such input output relationships. icon diagram .. .. .. .. figures ifcprocess icon fig.png Figure 1 Process relationships and the ICON process diagram. Process information relates to other objects by establishing the following relationships Nesting of processes [[IfcRelNests]] A process can contain sub processes and thereby be nested. Sequencing of processes [[IfcRelSequence]] Processes can be placed in sequence including overlapping for parallel tasks , and have predecessors and successors. Assigning process to schedules [[IfcRelAssignsToControl]] Activities such as tasks, and predominately summary tasks, are assigned to a work schedule. Having a product assigned to the process as input [[IfcRelAssignsToProcess]] Products can be assigned as input to a process, such as for construction process planning. Having a product assigned to the process as output [[IfcRelAssignsToProduct]] Products can be assigned as output to a process, such as for construction process planning. Having a control assigned to the process as process control [[IfcRelAssignsToProcess]] Items that act as a control onto the process can be assigned to a process, such as for cost management a cost item assigned to a work task . Having a resource assigned to the process as consumed by the process [[IfcRelAssignsToProcess]] Items that act as a mechanism to a process, such as labor, material and equipment in cost calculations. HISTORY New entity in IFC1.0. .change ifc2x IFC2x CHANGE The attribute Productivity has been removed. .change ifc2x4 IFC4 CHANGE The attribute Identification has been promoted from subtypes [[IfcTask]] and others."

#:IFC.xml:20801
msgid "IfcProcess_IsPredecessorTo"
msgstr "IsPredecessorTo"

msgid "IfcProcess_IsPredecessorTo_DEFINITION"
msgstr "它是指这两项活动之间的依附关系，即该项活动是其前身的后续活动。 两项活动之间的链接可以包括链接类型和滞后时间。"

#:IFC.xml:20815
msgid "IfcProcess_IsSuccessorFrom"
msgstr "IssuccessorFrom"

msgid "IfcProcess_IsSuccessorFrom_DEFINITION"
msgstr "这两项活动之间的依赖关系是指该项活动是其继承人的前一项活动。 两项活动之间的链接可以包括链接类型和滞后时间。"

#:IFC.xml:20829
msgid "IfcProcess_OperatesOn"
msgstr "操作"

msgid "IfcProcess_OperatesOn_DEFINITION"
msgstr "与其他对象的关系集，如加工过程中操作的产品、工艺、控制、资源或行为者。"

#:IFC.xml:20788
msgid "IfcProcess_Identification"
msgstr "1. 身份识别"

msgid "IfcProcess_Identification_DEFINITION"
msgstr "给一个过程或活动的识别符号。它是发生级别上的识别符。如果2x4 IFC4 变异属性从子类型提倡。"

#:IFC.xml:20793
msgid "IfcProcess_LongDescription"
msgstr "长度描述"

msgid "IfcProcess_LongDescription_DEFINITION"
msgstr "可能提供的详细说明或说明。更改ifc2x4 IFC4 更改新属性。"

#:IFC.xml:20841
msgid "IfcProcessSelect"
msgstr "IfcProcessselect"

#:IFC.xml:20842
msgid "IfcProduct"
msgstr "IfcProduct"

msgid "IfcProduct_DEFINITION"
msgstr "The [[IfcProduct]] is an abstract representation of any object that relates to a geometric or spatial context. An [[IfcProduct]] occurs at a specific location in space if it has a geometric representation assigned. It can be placed relatively to other products, but ultimately relative to the project coordinate system. The ObjectPlacement attribute establishes the coordinate system in which all points and directions used by the geometric representation items under Representation are founded. The Representation is provided by an [[IfcProductDefinitionShape]] being either a geometric shape representation, or a topology representation with or without underlying geometry of the topological items . Products include manufactured, supplied or created objects referred to as elements for incorporation into an AEC FM project. This also includes objects that are created indirectly by other products, as spaces are defined by bounding elements. Products can be designated for permanent use or temporary use, an example for the latter is formwork. Products are defined by their properties and representations. In addition to physical products covered by the subtype [[IfcElement]] and spatial items covered by the subtype [[IfcSpatialElement]] the [[IfcProduct]] also includes non physical items, that relate to a geometric or spatial contexts, such as grid, port, annotation, structural actions, etc. Any instance of [[IfcProduct]] defines a particular occurrence of a product, the common type information, that relates to many similar or identical occurrences of [[IfcProduct]] , is handled by the [[IfcTypeProduct]] and its subtypes , assigned to one or many occurrences of [[IfcProduct]] by using the objectified relationship [[IfcRelDefinesByType]] . The [[IfcTypeProduct]] may provide, in addition to common properties, also a common geometric representation for all occurrences. NOTE See [[IfcTypeProduct]] for how to use a common geometric representation and [[IfcRelDefinesByType]] for using and overriding common properties. On a generic level products can be assigned to processes, controls, resources, project by using the relationship objects that refer to the corresponding object Having a control applied assigned using [[IfcRelAssignsToControl]] linking the [[IfcProduct]] to an [[IfcControl]] Being assigned to a process assigned using [[IfcRelAssignsToProcess]] linking the [[IfcProduct]] to an [[IfcProcess]] Being assigned to a resource assigned using [[IfcRelAssignsToResource]] linking the [[IfcProduct]] to an [[IfcResource]] EXAMPLE An example of the control relationship is the assignment of a performance history to a distribution element. An example of process assignment relationship is the assignment of products like wall, slab, column to a contruction task for construction planning. And an example of resource assignment relationship is the assignment of products to a construction resource that consumes the product. HISTORY New entity in IFC1.0"

#:IFC.xml:10198
msgid "IfcProduct_ObjectPlacement"
msgstr "对象位置"

msgid "IfcProduct_ObjectPlacement_DEFINITION"
msgstr "产品放置在空间中，相对于世界坐标系而言，放置可以是绝对值， 相对于其它产品的对象位置，或约束，例如 相对于网格坐标轴。 它是由各种子类型[[IfcObjectPlacement]]决定的。 它包括用于确定对象坐标系统转换的轴位置信息。"

#:IFC.xml:20847
msgid "IfcProduct_Representation"
msgstr "代表"

msgid "IfcProduct_Representation_DEFINITION"
msgstr "参照产品的表述方式 作为代表 [[IfcProductRepresentation]] 或作为特殊案例作为形状表示 [[IfcProductDefinitionShape]] 。 产品定义形状规定了在同一对象坐标系统内物体形状属性的多个几何形状。 由对象位置定义."

#:IFC.xml:20883
msgid "IfcProduct_PositionedRelativeTo"
msgstr "PositionedRelativeTo"

msgid "IfcProduct_PositionedRelativeTo_DEFINITION"
msgstr "PositionedRelativeTo"

#:IFC.xml:20897
msgid "IfcProduct_ReferencedBy"
msgstr "引用者"

msgid "IfcProduct_ReferencedBy_DEFINITION"
msgstr "引用了[[IfcRelAssignsToProduct]] 关系，其中包括其他产品、工艺、控制器。 资源或行为体作为子类型的 [[IfcObjectDefinition]] 可能与此产品相关。"

#:IFC.xml:20909
msgid "IfcProduct_ReferencedInStructures"
msgstr "引用的结构"

msgid "IfcProduct_ReferencedInStructures_DEFINITION"
msgstr "引用的结构"

#:IFC.xml:20921
msgid "IfcProductSelect"
msgstr "IfcProductselect"

#:IFC.xml:20922
msgid "IfcProject"
msgstr "IfcProject"

msgid "IfcProject_DEFINITION"
msgstr "[[IfcProject]] indicates the undertaking of some design, engineering, construction, or maintenance activities leading towards a product. The project establishes the context for information to be exchanged or shared, and it may represent a construction project but does not have to. The [[IfcProject]] s main purpose in an exchange structure is to provide the root instance and the context for all other information items included. The context provided by the [[IfcProject]] includes the default units the geometric representation context for exchange structures including shape representations the project coordinate system the coordinate space dimension the precision used within the geometric representations optionally the indication of the true north optionally the map conversion between the project coordinate system and the geospatial coordinate reference system. HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE The attributes RepresentationContexts and UnitsInContext are made optional and are promoted to supertype [[IfcContext]] . .spec head Informal Propositions 1. There shall only be one project within the exchange context. This is enforced by the global rule [[IfcSingleProjectInstance]] . Formal Propositions HasName The Name attribute has to be provided for [[IfcProject]] . It is the short name for the project. CorrectContext If a RepresentationContexts relation is provided then there shall be no instance of [[IfcGeometricRepresentationSubContext]] directly included in the set of RepresentationContexts . NoDecomposition The [[IfcProject]] represents the root of the any decomposition tree. It shall therefore not be used to decompose any other object definition. Concepts Project Classification Information Project Declaration The [[IfcProject]] is also the context for other information about the construction project such as a work plan. Non product structures are assigned by their first level object to [[IfcProject]] using the [[IfcRelDeclares]] relationship. The [[IfcProject]] provides the context for work plans or other non product based descriptions of the construction project. It is handled by the objectified relationship [[IfcRelDeclares]]. NOTE The spatial structure and the schedule structure can be decomposed. For example the [[IfcBuilding]] can be decomposed into [[IfcBuildingStorey]] s, and the [[IfcWorkPlan]] can be decomposed into [[IfcWorkSchedule]] s. NOTE The products and tasks can be decomposed further. For example the [[IfcCurtainWall]] can be decomposed into [[IfcMember]] and [[IfcPlate]], the [[IfcTask]] can be decomposed into other [[IfcTask]] s. NOTE The products and tasks can have direct linking relationships. For example the [[IfcCurtainWall]] can be assigned to a [[IfcTask]] as an input or output for a construction schedule. Figure 128 illustrates the use of [[IfcProject]] as context for work plans or work schedules. project relationships .. .. .. .. figures ifcproject fig 1.png Figure 128 Project spatial and work plan structure Project Document Information Project Global Positioning The representation context of the project refers to a global positioning, i.e. the local engineering coordinate system of the project has a mapping to a defined projected coordinate system a rectangular map coordinate system, as used in GIS systems Project Library Information Project Representation Context Project Units Spatial Decomposition The [[IfcProject]] is used to reference the root of the spatial structure of a building or other construction project that serves as the primary project breakdown and is required to be hierarchical . The spatial structure elements are linked together, and to the [[IfcProject]], by using the objectified relationship [[IfcRelAggregates]]. The following constraints are applied to using the relationshio [[IfcRelAggregates]] in context of [[IfcProject]] NOTE The anomaly to use the composition structure through [[IfcRelAggregates]] for assigning the uppermost spatial container to [[IfcProject]] is due to upward compatibility reasons with earlier releases of this standard. [[IfcProject]].Decomposes it shall be NIL, i.e. the [[IfcProject]] shall be on top of the root of the spatial structure tree. [[IfcProject]].IsDecomposedBy referencing [[IfcSite]] [[IfcBuilding]] [[IfcSpatialZone]] by using [[IfcRelAggregates]].RelatedObjects. The [[IfcSite]], [[IfcBuilding]], or [[IfcSpatialZone]] being referenced shall be the root of the spatial structure. Figure 129 illustrates project relationships with spatial structures, elements, and element type libraries. spatial decomposition relationships .. .. .. .. figures ifcproject fig 2.png Figure 129 Project spatial structure, products and product type library"

#:IFC.xml:20949
msgid "IfcProjectLibrary"
msgstr "IfcProjectLibrary"

msgid "IfcProjectLibrary_DEFINITION"
msgstr "An [[IfcProjectLibrary]] collects all library elements that are included within a referenced project data set. Examples for project libraries include type libraries also called style or family libraries a collection of subtypes of [[IfcTypeObject]] property definition libraries a collections of [[IfcPropertySetTemplate]] or IfcPropertyTemplates The inherited attributes RepresentationContext and UnitsInContext have the following meaning Context of the representations used within the project library. When the project library includes shape representations for its library type objects, one or several geometric representation contexts need to be included that define the coordinate system, the coordinate space dimensions, and or the precision factor, Units locally assigned to measure types used within the context of this project library. NOTE It is generally discouraged to use a different length measure and plane angle measure in an included project library compared with the project itself. It may lead to unexpected results for the shape representation of items included in the project library. Instances of [[IfcProjectLibrary]] are assigned to the project context using the [[IfcRelDeclares]] relationship and accessible through the inverse attribute HasContext . Individual object types and property set templates are assigned to the [[IfcProjectLibrary]] using the [[IfcRelDeclares]] relationship and are accessible through the inverse attribute Declares . An [[IfcProjectLibrary]] may be decomposed into sub libraries using the relationship [[IfcRelNests]] . Sub libraries are accessed by the [[IfcProjectLibrary]] through the inverse attribute IsNestedBy . HISTORY New entity in IFC4."

#:IFC.xml:20952
msgid "IfcPropertyDefinition"
msgstr "Ifc属性定义"

msgid "IfcPropertyDefinition_DEFINITION"
msgstr "[[IfcPropertyDefinition]] 定义了所有特征的概括，即一个可能分配给对象的个别属性 '。 当前子类型 [[IfcPropertyDefinition]] 包含属性设置发生、属性设置模板和属性模板。 属性设置模板 [[IfcPropertySetTemplate]] , 一个用于确定项目中使用属性定义的属性模板集。 属性模板 [[IfcPropertyTemplate]] , 单个模板决定在同一项目中使用的特定属性的定义。 模板可以确定基于该模板的每个属性的名称、描述、数据类型、单位或标准表达式。 属性设置问题 [[IfcPropertySet]] 一组个人属性，可能由或可能不由持有单个值的属性模板来确定， 测量类型和单位，并且与对象发生或对象类型相关。 注意子类型的层次结构 [[IfcPropertyDefinition]] 也包含静态定义的属性集为 [[IfcPreDefinedPropertySet]] 。 这些固定属性的收集很少在实体定义中综合使用。 [[IfcPreDefinedPropertySet]] 不能由一个 [[IfcPropertySetTemplate]] 来确定 注个性属性，子类型为[[IfcProperty]] ，目前未包含在 [[IfcPropertyDefinition]] 的子类型层次中。 这种异常现象是由于与先前发布的这一标准相容性提高的原因。 属性定义定义了对象发生或对象类型多个实例之间共享的信息。 [[IfcPropertyDefinition]] 通过其可即时子类型可以参与以下关系。将HasContext 关系分配给项目环境[[IfcRelDeclares]]，它确定了宣布此属性定义的项目环境。 这种关系主要适用于子类型 [[IfcPropertyTemplateDefinition]] 。 关联外部资源 HasAssociation relationship 到 [[IfcRelAssociates]]，其中提到外部信息来源，特别是分类或文件，并创建一个单向协会。 该协会不含有依赖性。 子类型包含在更具体的关系中，详情请见 [[IfcPropertySetDefinition]] 和 [[IfcPropertyTemplateDefinition]] 。"

#:IFC.xml:20956
msgid "IfcPropertyDefinition_HasContext"
msgstr "HasContext"

msgid "IfcPropertyDefinition_HasContext_DEFINITION"
msgstr "HasContext"

#:IFC.xml:20968
msgid "IfcPropertyDefinition_HasAssociations"
msgstr "HasAssociations"

msgid "IfcPropertyDefinition_HasAssociations_DEFINITION"
msgstr "指的是关系 [[IfcRelAssociates]] ，因此指的是外部定义的概念， 像与属性定义相关的分类、文件或图书馆信息。"

#:IFC.xml:20980
msgid "IfcPropertySet"
msgstr "IfcPropertySet"

msgid "IfcPropertySet_DEFINITION"
msgstr "[[IfcPropertySet]] 是一个容器，在属性树中保留属性。 这些属性是根据它们的名称属性解释的。每个属性都有一个重要的名称字符串。 有些属性集包含在这一标准的规格中，并且有一套预定义的属性，通过分配一个重要的名称来表示。 这些属性集列在此规格内的属性集下。适用于某些对象的属性集列在对象规格中。 命名约定的 Pset Xxx 适用于被定义为本规格一部分的所有财产集，必须用作名称属性的值。 此外，任何用户定义的属性集都可以被抓取。 未被申报为IFC 规范一部分的属性集必须有一个名称值，不包括Pset 前缀。 [[IfcPropertySet]] 可以分配给对象发生和对象类型。 分配给对象类型的[[IfcPropertySet]] 是在同一对象类型的所有事件之间共享的。 如何覆盖分配给对象类型的属性集，请参阅[[IfcRelDefinesByType]] 。 [[IfcPropertySetTemplate]] 可以界定基本结构，i。 a. 所需名称、可附加属性的适用对象或对象类型， 和可以包含的个人属性。 属性集通过使用对应对象Occurrence Object [[IfcRelDefinesByProperties]] 的关系对象使用反向属性定义来与其他对象相关。 使用反向属性定义类型使用直接链接键入对象。底部模板[[IfcRelDefinesByTemplate]] 使用反向属性IsDefinedBy 。 外部参考子类型[[IfcRelAssociates]] 被用来提供与分类系统的链接。 或外部图书馆提供进一步参考属性集合的资料。 可通过逆属性HasAssociation访问。IFC1.0 中的HISTORY 新实体。 挂卡if2x4 IFC4 变换。所有静态定义的属性设置实体都不再是子类型 [[IfcPropertySet]] 。"

#:IFC.xml:20983
msgid "IfcPropertySet_HasProperties"
msgstr "HasProperties"

msgid "IfcPropertySet_HasProperties_DEFINITION"
msgstr "包含的属性集。 对于定义为 IFC 对象模型的属性集，属性集中的属性对象被定义为标准的一部分。 如果一个属性未包含在预定义属性的组中，则其值此时尚未设定。"

#:IFC.xml:20997
msgid "IfcPropertySetDefinition"
msgstr "IfcPropertySetting定义"

msgid "IfcPropertySetDefinition_DEFINITION"
msgstr "[[IfcPropertySetDefinition]] 是可以分配给对象或类型对象的所有单独属性集的概括。 属性集定义可以是动态扩展属性集 [[IfcPropertySet]] ， a 金融公司的规格仅提供某种元模型的一组属性，将通过协议进一步申报。 这意味着在国际金融公司的规格内不存在实体对属性的定义。 声明是通过给实体定义的实体名称属性 [[IfcPropertySet]] 和每个子类型 [[IfcProperty]] 分配一个重要的字符串值来完成， 属性集引用. 动态定义的属性集可能有由[[IfcPropertySetTemplate]] 提供的基础模板。 静态定义属性集 [[IfcPreDefinedPropertySet]] , 一个属性集实体存在于 IFC 规格中。 每组静态定义的属性的语义是由实体类型声明的，属性的含义是由代表它的明确属性的名称和数据类型定义的。 属性集定义定义了对象发生或对象类型多个实例之间共享的信息。 [[IfcPropertySetDefinition]] s可以通过其可即时子类型参与以下关系中的关系作业。赋予对象类型一个定义类型直接关系到[[IfcTypeObject]] 应用该属性。 包含所有的属性，到对象类型。 这些属性适用于具有相同对象类型的所有对象事件。 对象发生的作业与 [[IfcRelDefinesByProperties]] 的定义关系，这种关系适用于对象发生的所有属性，包括所有属性。 分配给对象发生事件的注属性可能会覆盖分配给对象类型的属性。详情请访问 [[IfcRelDefinesByType]] 。 IFC2x .change ifc2x4 IFC4 更改中的新实体 [[IfcPreDefinedPropertySet]]已添加子类型。"

#:IFC.xml:21001
msgid "IfcPropertySetDefinition_IsDefinedBy"
msgstr "IsDefinedBy"

msgid "IfcPropertySetDefinition_IsDefinedBy_DEFINITION"
msgstr "通过客观关系 [[IfcRelDefinesByTemplate]] 与属性集模板的关系 如果给出，则提供属性集或数量集及其属性的定义模板。 .更改 ifc2x4 IFC4 更改新反向关系，并且以基于文件的交换向上兼容性作了更改。"

#:IFC.xml:21015
msgid "IfcPropertySetDefinition_DefinesType"
msgstr "DefinesType"

msgid "IfcPropertySetDefinition_DefinesType_DEFINITION"
msgstr "属性设置所指派的类型对象。 属性设置作为一个共享属性集，适用于类型对象的所有发生情况。 注意到 [[IfcPropertySetDefinition]和 [[IfcTypeObject]] 之间的关系是一种直接关系， 不使用 [[IfcRelDefinesByProperties]] 来保持与先前发布的标准兼容性。 .更改 ifc2x4 IFC4 变迁。卡片性已从01变成0，并且基于文件的交换具有向上兼容性。"

#:IFC.xml:21029
msgid "IfcPropertySetDefinition_DefinesOccurrence"
msgstr "定义"

msgid "IfcPropertySetDefinition_DefinesOccurrence_DEFINITION"
msgstr "提及以属性集定义为特征的一个或多个对象发生的关系。 一个单个属性集可以被分配给多个对象发生的事件使用客观的关系 IfcReferesByProperties 。 .更改 ifc2x4 IFC4 更改属性从属性命名为反向属性，并与基于文件的交换向上兼容。"

#:IFC.xml:21041
msgid "IfcPropertySetDefinitionSelect"
msgstr "IfcPropertySetDefinitionSelect"

#:IFC.xml:21042
msgid "IfcPropertySetTemplate"
msgstr "IfcPropertySet模板"

msgid "IfcPropertySetTemplate_DEFINITION"
msgstr "[[IfcPropertySetTemplate]] 定义了由[[IfcPropertySet]] 代表的所有动态扩展属性集的模板。 属性集模板是属性树中属性模板的容器。 个人属性模板是根据其名称属性解释的，没有指定值。 通过约定表示[[IfcPropertySetTemplate]] 也可以用作一个 [[IfcElementQuantity]] 的模板， 是属性集定义的特定类型。 属性设置模板可以成为项目中使用和声明的属性库的一部分。 根据模板类型，[[IfcPropertySetTemplate]] 定义了一个模板用于弹出发生的 [[IfcPropertySet]] QTO 发生的 [[IfcElementQuantity]]。继承的 HasContext 与[[IfcRelDeclares]的反差关系用于在项目库中声明 [[IfcPropertySetTemplate]] 。 如果包含在交换数据集中，它可以经过[[IfcProjectLibrary]] 。 定义与[[IfcRelDefinesByTemplate]]的反差关系是为了保持[[IfcPropertySetTemplate]]与许多[[IfcPropertySet]]之间的定义关系， 提供模板的模板。 图1显示用于属性集模板的关系，属性集模板... 数字 ifcpropertysettemplate fix 1。 ng 图1 在 [[IfcProperty]] 内的 HasProperties 集的 [[IfcPropertySet]] 之间设置模板关系，名称属性值与 [[IfcPropertyTemplate]] 在 HasPropertyTemples 集中 [[IfcPropertySetTemplate]] 内有一个隐式定义关系，将模板分配给单个属性。 IFC4中的新实体。"

#:IFC.xml:21050
msgid "IfcPropertySetTemplate_TemplateType"
msgstr "模板类型"

msgid "IfcPropertySetTemplate_TemplateType_DEFINITION"
msgstr "属性设置类型定义属性集是否适用于类型子类型 [[IfcTypeObject]] ， 设为事件子类型的 [[IfcObject]] ，或作为一个特殊案例处理性能历史。 适用的实体可进一步完善适用于单一或多个实体类型的适用性。"

#:IFC.xml:21062
msgid "IfcPropertySetTemplate_HasPropertyTemplates"
msgstr "HasProperty模板"

msgid "IfcPropertySetTemplate_HasPropertyTemplates_DEFINITION"
msgstr "在 [[IfcPropertySetTemplate]] 范围内定义的 [[IfcPropertyTemplate]] 个秒集。"

#:IFC.xml:21076
msgid "IfcPropertySetTemplate_Defines"
msgstr "定义"

msgid "IfcPropertySetTemplate_Defines_DEFINITION"
msgstr "与属性的关系通过客观关系 [[IfcRelDefinesByTemplate]] 设置，如果给定的话，则使用定义模板。"

#:IFC.xml:21043
msgid "IfcPropertySetTemplate_ApplicableEntity"
msgstr "适用的实体"

msgid "IfcPropertySetTemplate_ApplicableEntity_DEFINITION"
msgstr "属性可选定义适用类型或发生对象的数据类型，分配属性集模板可以与此相关。 如果不存在，则没有指示属性设置模板适用于哪种类型或发生对象。 使用了下列公约： 采用国际金融公司命名公约的国际金融公司适用实体名称。 使用 IFC 前缀的 CamelCase 可以在分隔符向前斜杠后的预定义类型， 使用大写。如果某一分配对象的性能历史对象是属性设置模板的属性， 然后实体名称和可能由预定义类型修改的实体名称可以通过添加性能历史来扩展。如果一个属性设置模板适用于许多类型或发生物件， 然后这些对象名称应该用逗号分隔，形成逗号分隔。 对于锅炉类型作为适用实体的EXAMPLE 推荐表示为 [[IfcBoilerType]] ， 转用蒸汽锅炉类型作为适用的实体表示为[[IfcBoilerType]] STEAM , 引用到墙体和墙体类型将以[[IfcWall]]、[[IfcWallType]] 表示. 分配给一个事件或类型对象的适用的 [[IfcPerformanceHistory]] 将由 [[IfcBoilerType]] 性能历史表示， 或 [[IfcBoilerType]] STEAM 性能历史"

#:IFC.xml:21090
msgid "IfcPropertyTemplate"
msgstr "Ifc属性模板"

msgid "IfcPropertyTemplate_DEFINITION"
msgstr "[[IfcPropertyTemplate]] 是一个包含所有动态扩展属性模板的抽象超级类型， 作为一个 [[IfcComplexPropertyTemplate]] ，或一个 [[IfcSimplePropertyTemplate]] 。 这些模板决定了在[[IfcComplexPropertyTemplate]] 的情况下[[IfcComplexProperty]] 是一个 [[IfcPhysicalComplexQuantity]] 的结构。如果[[IfcSimplePropertyTemplate]] 是子类型的 [[IfcSimpleProperty]] 是子类型的 [[IfcPhysicalSimpleQuantity]] 的结构。个别的属性模板是根据其名称属性解释的，并且可能具有预定义的属性类型。 属性单位和属性数据类型。 但模板不能包含测量值或指定的数量值。 注属性模板可以成为作为项目库一部分使用和附加的属性库的一部分。 一般而言，含有子类型[[IfcPropertyTemplate]] 的[[IfcPropertySetTemplate]] 将与[[IfcProjectLibrary]] 直接相关。 IFC4中的新实体。"

#:IFC.xml:20456
msgid "IfcPropertyTemplate_PartOfComplexTemplate"
msgstr "PartOfComplexTemplate"

msgid "IfcPropertyTemplate_PartOfComplexTemplate_DEFINITION"
msgstr "引用复杂的属性模板。它只能提供，如果引用的复合属性模板的属性类型设置为 COMPLEX。"

#:IFC.xml:21062
msgid "IfcPropertyTemplate_PartOfPsetTemplate"
msgstr "PartOfPsetTemplate"

msgid "IfcPropertyTemplate_PartOfPsetTemplate_DEFINITION"
msgstr "使用 [[IfcPropertySetTemplate]] 来定义范围 [[IfcPropertyTemplate]] 。 单独的 [[IfcPropertyTemplate]] 可以在零的范围内定义，一个或多个[[IfcPropertySetTemplate]] 。"

#:IFC.xml:21093
msgid "IfcPropertyTemplateDefinition"
msgstr "Ifc属性模板定义"

msgid "IfcPropertyTemplateDefinition_DEFINITION"
msgstr "[[IfcPropertyTemplateDefinition]] 是所有属性和属性设置模板的概括。 模板定义项目中使用的个别属性的集合、类型、名称、适用的测量类型和单位。 属性模板定义可以是属性设置模板 [[IfcPropertySetTemplate]] ， 一个用于确定项目范围内所用属性定义的属性模板。 属性模板 [[IfcPropertyTemplate]] , 单个模板决定在同一项目环境中使用的特定属性的定义。 模板可以确定基于该模板的每个属性的名称、描述、数据类型、单位或标准表达式。 子类型 [[IfcPropertyTemplateDefinition]] 是在项目环境中声明的。 最上层的模板定义，例如 [[IfcPropertySetTemplate]] 包括好几个[[IfcPropertyTemplate]] 应与上下文相关， 使用继承的 HasContext 逆向属性的 [[IfcProject]] 或 [[IfcProjectLibrary]] 。 IFC4中的新实体。"

#:IFC.xml:21096
msgid "IfcQuantitySet"
msgstr "IfcQuantitySet"

msgid "IfcQuantitySet_DEFINITION"
msgstr "[[IfcQuantitySet]] 是附加于对象的所有数量集的抽象超级类型。 数量集是一个容器类，它将个别数量存放在数量树中。 这些数量按照其名称属性解释，并按其测量类型分类。 有些数量组被列入国际金融公司的规格中，并有一套预定数量，通过分配一个重要的名称来标明。 这些数量集在此规格内列为数量集。 对象规格中列出了适用于某些对象的数量集。[[IfcPropertySetTemplate]] 可以定义基础结构，即： 所需名称、可附加数量的适用对象或对象类型以及可能包含的个别数量。 数量集与其他对象相关，通过使用关系对象，使用反向属性定义来引用对应的对象Occurrence Object [[IfcRelDefinesByProperties]] 。 使用反向属性定义类型使用直接链接键入对象。底部模板[[IfcRelDefinesByTemplate]] 使用反向属性IsDefinedBy 。 外部参考子类型[[IfcRelAssociates]] 被用来提供与分类系统的链接。 或外部图书馆，进一步提供数量设置。 可通过逆属性HasAssociation访问。IFC4中的新实体。"

#:IFC.xml:21099
msgid "IfcRelAggregates"
msgstr "IfcRelAggregates"

msgid "IfcRelAggregates_DEFINITION"
msgstr "聚合关系 [[IfcRelAggregates]] 是一种特殊类型的一般合成分解或整个部件关系 [[IfcRelDecomposes]] 。 聚合关系可以应用于所有子类型 [[IfcObjectDefinition]] 。 在将物理元素合计成为物理合计的情况下，可以从各部分形状表述的总和中提取同一表述符号内的整个形状表面的整数。 EXAMPLE A 屋顶是屋顶元素的聚合，如屋顶板材、工艺品、纯料等。 在同一代表性标识符内，如身体几何表示， 屋顶形状的形状由其各部分的形状表示出来。 解析意味着依赖性，这意味着整个取决于各部分的定义，各部分取决于整个的存在。 依赖关系隐含的行为必须在应用程序内确定，IFC2x中的新实体。 .change ifc2x4 IFC4 变换. 相关对象和相关对象的属性是从超级类型 [[IfcRelDecomposes]] 降级的。"

#:IFC.xml:20668
msgid "IfcRelAggregates_RelatingObject"
msgstr "关联对象"

msgid "IfcRelAggregates_RelatingObject_DEFINITION"
msgstr "目标定义，要么是物体类型，要么是物体发生，即代表聚合。它是整个部分关系中的整体。 .change ifc2x4 IFC4 变异. 属性已经从超级类型 [[IfcRelDecomposes]] 降级并定义了非顺序的聚合关系。"

#:IFC.xml:20682
msgid "IfcRelAggregates_RelatedObjects"
msgstr "关联对象"

msgid "IfcRelAggregates_RelatedObjects_DEFINITION"
msgstr "正在汇总的对象定义，不管是对象发生还是对象类型。 它们被定义为整个部分关系中的各个部分。这两个部分之间不隐含任何命令。 .change ifc2x4 IFC4 变异. 属性已经从超级类型 [[IfcRelDecomposes]] 降级，并定义了聚合中无序的组件。"

#:IFC.xml:21102
msgid "IfcRelAssigns"
msgstr "离子Relassigns"

msgid "IfcRelAssigns_DEFINITION"
msgstr "作业关系，[[IfcRelAssigns]] 是 [[IfcObject]] 等实例与它的各种1级子类型之间的链接关系的一般化。 一个链接表示一个对象可以用来使用供应商其他对象的服务的特定关联， 或者一个物体可以通过哪个物体导航到其他物体。 客户端表示为相关对象，并且是在特定的可实例子类型[[IfcRelAssigns]] 的水平上建立的。 供应商指的是相关物件，由相关物件属性确定。 注意到客户和供应商这两个术语是在一个一般概念中使用的，对于实现客户服务器等系统并不意味着任何意义。 EXAMPLE A resource 可能会通过在[[IfcResource]] 和 IfcBuildingElement 子类型[[IfcProduct]] 之间建立通过作业关系[[IfcRelAssignsToResource]] 之间的链接，收到关于其代表实际建筑产品的性质的信息。 该资源是客户端，可以在这里使用其他对象的服务，构建元素来表达某些元素作为资源在一个过程中的特定视图。 转让关系在参与对象之间建立了一种比向关系，并不意味着任何依赖性。 [[IfcRelAssigns]] 的子类型确定了转让关系的特殊语义含义，IFC2x中的HISTORY 新实体。"

#:IFC.xml:20696
msgid "IfcRelAssigns_RelatedObjects"
msgstr "关联对象"

msgid "IfcRelAssigns_RelatedObjects_DEFINITION"
msgstr "被分配给单个对象的相关对象。 单个或相关对象的类型在子类型中定义 [[IfcRelAssigns]]。"

#:IFC.xml:21103
msgid "IfcRelAssigns_RelatedObjectsType"
msgstr "关联对象类型"

msgid "IfcRelAssigns_RelatedObjectsType_DEFINITION"
msgstr "转让关系的特定类型。它可以约束适用的对象类型，用于相关对象的角色。 .change ifc2x4 IFC4 变异. 该属性已废弃，不再使用. NIL 值应始终指定。"

#:IFC.xml:21110
msgid "IfcRelAssignsToActor"
msgstr "IfcRelAssignsToActor"

msgid "IfcRelAssignsToActor_DEFINITION"
msgstr "客观关系 [[IfcRelAssignsToActor]] 处理将对象子类型的 [[IfcObject]] 分配给演员子类型的 [[IfcActor]] 。 [[IfcRelAssignsToActor]] 客观关系定义了一个 [[IfcActor]] 和一个或多个对象之间的关系。 行为者在这种关系中发挥的特殊作用可以联系在一起。 如果具体规定，它优先于可能直接分配给该人或该组织的角色。 作为行动者的占用者可以租用一套公寓作为空间集合或区域……。 这将适用于这种一般性关系。 如果在继承的关联对象属性中指定了行为者以某种角色行事的对象或单个对象，则参照该对象或单个对象。 IFC2.0 中的HISTORY 新实体已经从IFC2x中的IfcRelactsOn重命名。"

#:IFC.xml:77
msgid "IfcRelAssignsToActor_ActingRole"
msgstr "活动角色"

msgid "IfcRelAssignsToActor_ActingRole_DEFINITION"
msgstr "行为者在目标分配方面发挥的作用"

#:IFC.xml:20422
msgid "IfcRelAssignsToActor_RelatingActor"
msgstr "相关操作者"

msgid "IfcRelAssignsToActor_RelatingActor_DEFINITION"
msgstr "2. 有关行为者的资料，包括有关个人或组织及其地址的资料。"

#:IFC.xml:21113
msgid "IfcRelAssignsToControl"
msgstr "IfcRelAssignsToControl"

msgid "IfcRelAssignsToControl_DEFINITION"
msgstr "客观关系 [[IfcRelAssignsToControl]] 处理子类型 [[IfcControl]] 给其他子类型 [[IfcObject]] 所代表的对象的控制 除管制外， 为建筑服务元素分配一个性能历史作为子类型[[IfcControl]]的子类型为 [[IfcObject]]是这种一般关系的应用。 IF2.0中的HISTORY 新实体。 .change ifc2x IFC2x 变换实体已从IfcRelControls重命名."

#:IFC.xml:20549
msgid "IfcRelAssignsToControl_RelatingControl"
msgstr "相关控制"

msgid "IfcRelAssignsToControl_RelatingControl_DEFINITION"
msgstr "引用对对象适用控制的 [[IfcControl]] 。"

#:IFC.xml:21116
msgid "IfcRelAssignsToGroup"
msgstr "IfcRelAssignsToGroup"

msgid "IfcRelAssignsToGroup_DEFINITION"
msgstr "客观关系 [[IfcRelAssignsToGroup]] 处理对象定义的分配，单个对象发生作为子类型 [[IfcObject]] ， 和对象类型作为组子类型[[IfcTypeObject]] 的子类型 [[IfcGroup]] 的子类型。 这种关系处理将集团成员分配给集团对象的问题。 它允许将任意的对象分组到一个组内，包括其他组。 分组关系可以递归方式应用。由此产生的组为类型 [[IfcGroup]] 。 注意到小组的例子包括区区作为一个空间组合，分配系统作为一组建筑服务组件； 或结构分析模型作为一组结构项目。 继承的属性相关对象给出了对对象的引用，这些对象是组内的元素。 关联组是包含所有元素的组。相同的对象或对象类型可以包含在零，一个或多个组。 分组关系不是等级关系。.spec头非正式提议1。 集团转让关系应当是周期性的，也就是说，集团不得参与其本身的集团关系中。 IFC1.0中的新实体。它已经从 IFC2x中的IfcRelGroups重新命名。"

#:IFC.xml:20588
msgid "IfcRelAssignsToGroup_RelatingGroup"
msgstr "关联组"

msgid "IfcRelAssignsToGroup_RelatingGroup_DEFINITION"
msgstr "引用包含所有分配的群组成员。"

#:IFC.xml:21119
msgid "IfcRelAssignsToGroupByFactor"
msgstr "IfcRelassignsToGroupByFactor"

msgid "IfcRelAssignsToGroupByFactor_DEFINITION"
msgstr "客观的关系 [[IfcRelAssignsToGroupByFactor]] 是一般分组机制的专业化。 它允许添加一个系数来定义对象定义的分配所适用的比率，作为子类型的 [[IfcObject]] 和对象类型作为子类型的 [[IfcTypeObject]] 到组子类型的 [[IfcGroup]] 。 比率可以用来定义一个百分比分配。例如，一个系数为0。 表示该物体由80个集团或2个因素分配。 表示对象的重量系数为2.5给组。 注意因素组的例子包括在结构分析中以负荷组合分配负载案例。 或按百分比将空间分配给不同的租用区。 相同的对象或对象类型可以包含相同或不同的因子值到许多组。 分组关系并不是等级关系，在IFC4中HISTORY 新实体。"

#:IFC.xml:21120
msgid "IfcRelAssignsToGroupByFactor_Factor"
msgstr "因子"

msgid "IfcRelAssignsToGroupByFactor_Factor_DEFINITION"
msgstr "作为确定适用于集团分配的分数或加权系数的比率尺度。"

#:IFC.xml:21127
msgid "IfcRelAssignsToProcess"
msgstr "IfcRelassignsToProcess"

msgid "IfcRelAssignsToProcess_DEFINITION"
msgstr "客观关系 [[IfcRelAssignsToProcess]] 处理分配一个或多个对象到一个进程或活动中的问题。 一个对象可以是一个产品，它是这个过程中运行的项目。 工艺和活动可以在产品以外的其他物品上运作，并且可以以投入和产出以外的方式运作。 可能常见的做法是界定估算或调度过程，以说明产生于文件的设计任务， 采购任务导致建材，规划任务导致流程等等。 此外，这个过程的运作方式可能包括安装、完成、运输、移除等等。 方法被描述为操作类型。继承的属性相关对象给出了对对象或对象类型的引用。 关联流程是在对象上运行的流程或流程类型。操作类型在继承属性名称中捕获。 注： 关于名称属性的有效和可识别值的协议是视图定义和实施者协议的一部分，IFC1.5中的新实体。 在 IFC2x 中从 IfcReloccessOperatesOn重命名。更改ifc2x4 IFC4 变换。相关进程的数据类型已经扩展到同时涵盖[[IfcTypeProcess]]"

#:IFC.xml:21135
msgid "IfcRelAssignsToProcess_QuantityInProcess"
msgstr "QuantityInProcess"

msgid "IfcRelAssignsToProcess_QuantityInProcess_DEFINITION"
msgstr "此流程操作特定对象的数量。"

#:IFC.xml:21128
msgid "IfcRelAssignsToProcess_RelatingProcess"
msgstr "RelatingProcess"

msgid "IfcRelAssignsToProcess_RelatingProcess_DEFINITION"
msgstr "指向对象的流程。 挂机ifc2x4 IFC4 变异数据类型扩展到包含 [[IfcProcess]] 和 [[IfcTypeProcess]] 。"

#:IFC.xml:21159
msgid "IfcRelAssignsToProduct"
msgstr "IfcRelassignsToProduct"

msgid "IfcRelAssignsToProduct_DEFINITION"
msgstr "客观关系 [[IfcRelAssignsToProduct]] 处理将对象子类型的 [[IfcObject]] 分配给产品子类型的 [[IfcProduct]] 。 名称属性应该用于分类 [[IfcRelAssignsToProduct]] 客观关系的用法。 建议使用以下名称值。指定上下文的具体表示方式。 例如，结构性成员具有不同背景代表性，有可能不同分解的细分，例如为特定背景代表建立构件等。 通过关联产品查看产品分配，根据学科视图分解产品 根据不同的学科视图，通过相关对象解压到另一个产品。 一个例子是，根据预定的混凝土学科观，将建筑工台分成一个不同的前制片段。 在 IFC2x 中的新实体 hange ifc2x3 IFC2x3 变迁. 空间结构中产品的参考值现在由一个新的关系对象 [[IfcRelReferencedInSpatialStructure]] 处理。 [[IfcRelAssignsToProduct]]不应被用来代表自IFC2x3 开始以来的这种关系。"

#:IFC.xml:21160
msgid "IfcRelAssignsToProduct_RelatingProduct"
msgstr "相关产品"

msgid "IfcRelAssignsToProduct_RelatingProduct_DEFINITION"
msgstr "提及对象被分配到的产品或产品类型。 挂机ifc2x4 IFC4 变异数据类型扩展到包含 [[IfcProduct]] 和 [[IfcTypeProduct]] 。"

#:IFC.xml:21179
msgid "IfcRelAssignsToResource"
msgstr "IfcRelassignsToResource"

msgid "IfcRelAssignsToResource_DEFINITION"
msgstr "客观关系 [[IfcRelAssignsToResource]] 作为子类型 [[IfcObject]] 处理对象的分配 作为资源使用或消耗，将资源用作子类型 [[IfcResource]] 。 将资源使用分配给建筑资源是这种一般关系的一种应用。 它可以是一个行动者，作为被分配到劳动力资源的个人或组织。 或分配给建筑产品或材料资源的原始产品。 IFC2x中的新实体。"

#:IFC.xml:21180
msgid "IfcRelAssignsToResource_RelatingResource"
msgstr "关联资源"

msgid "IfcRelAssignsToResource_RelatingResource_DEFINITION"
msgstr "提及对象分配到的资源。 挂机ifc2x4 IFC4 变异数据类型扩展到包含 [[IfcResource]] 和 [[IfcTypeResource]] 。"

#:IFC.xml:21211
msgid "IfcRelAssociates"
msgstr "IfcRelAssociates"

msgid "IfcRelAssociates_DEFINITION"
msgstr "关联关系 [[IfcRelAssociates]] 是指信息来源，最主要的是分类、库、文档、审批、约束或材料。 与之相关的信息可存放于项目数据的内部或外部，而该协会并不含有依赖性。 关于分类和说明文件，可以向坦克设备提供进一步的外部信息，作为子类[[IfcProduct]]。 补充资料的来源是项目数据模型以外的地方。 关联关系可以建立到对象出现子类型的 [[IfcObject]] 或子类型的 [[IfcTypeObject]] 。 某些关联，如批准或文档也可以应用于属性模板作为子类型 [[IfcPropertyDefinition]] 。 example The classification information for the stockholm tackage equipment may be associated to the [[IfcTankType]] subtype of [[IfcTypeObject]] , 定义该容器在项目中所有事件的具体信息。 因此，Uniclass Notation L6814的关联可以通过子类型[[IfcRelAssociates]] 与类型信息相关联。 示例建筑物中某个空间的分类信息可能与[[IfcSpace]] 对象子类型[[IfcObject]] 相关， 定义空间的特定发生。 因此，DIN 缩注NF 1.5 的关联可通过子类型[[IfcRelAssociates]] 与对象相关联。 社团关系建立了一个从一到许多对象或属性模板及相关信息之间的社团。 [[IfcRelAssociates]] 的子类型确定了关联关系的特殊语义含义。 IFC2x.change ifc2x4 IFC4 更改实体已更改为ABSTRACT 超级类型"

#:IFC.xml:21212
msgid "IfcRelAssociates_RelatedObjects"
msgstr "关联对象"

msgid "IfcRelAssociates_RelatedObjects_DEFINITION"
msgstr "外部引用或信息所关联的对象或属性定义集。 它包括对象和类型对象、属性设置模板、属性模板以及属性集和上下文等。 .更改ifc2x4 IFC4 变迁. 属性数据类型已经从 [[IfcRoot]] 更改为 [[IfcDefinitionSelect]] 。"

#:IFC.xml:21219
msgid "IfcRelAssociatesClassification"
msgstr "IfcRelAssociates分类"

msgid "IfcRelAssociatesClassification_DEFINITION"
msgstr "客观关系 [[IfcRelAssociatesClassification]] 处理所选择的 [[IfcClassificationSelect]] 的分类项的分配给对象发生子类型 [[IfcObject]] 或对象类型子类型 [[IfcTypeObject]] 。 这种关系用于将分类项目或分类系统本身分配给物体。 视相关分类的类型而定，它要么是指外部分类系统内的一个分类项目。 或提到分类制度本身。 提到分类项目包括与申报该项目的分类制度的链接。 它将分类项目的含义分配给对象焦点或类型。 提到分类制度时提供的信息是，对象的出现或类型受分类制度管制，但尚未对某一特定项目进行分配。 继承的属性相关对象定义了应用分类的对象或对象类型。 相关分类属性是指适用于对象的分类。 因此，单一的相关分类可适用于一个或多个物体。"

#:IFC.xml:21220
msgid "IfcRelAssociatesClassification_RelatingClassification"
msgstr "相关分类"

msgid "IfcRelAssociatesClassification_RelatingClassification_DEFINITION"
msgstr "分类适用于物体。"

#:IFC.xml:21227
msgid "IfcRelAssociatesDocument"
msgstr "IfcRelassDocument"

msgid "IfcRelAssociatesDocument_DEFINITION"
msgstr "客观关系 [[IfcRelAssociatesDocument]] 处理所选文档信息项的分配 [[IfcDocumentSelect]] 到对象发生子类型的 [[IfcObject]] 或对象类型子类型的 [[IfcTypeObject]] 。 这种关系用于向对象分配文件参考或更详细的文件信息。 单个文档引用可以应用于多个对象。继承属性相关的对象定义了文档关联应用的对象。 关联文档的属性是指文档引用，应用于IFC2x中的对象. HISTORY 新实体。"

#:IFC.xml:21228
msgid "IfcRelAssociatesDocument_RelatingDocument"
msgstr "关联文档"

msgid "IfcRelAssociatesDocument_RelatingDocument_DEFINITION"
msgstr "适用于对象的文档信息或参考资料。"

#:IFC.xml:21235
msgid "IfcRelAssociatesLibrary"
msgstr "IfcRelAssociatesLibrary"

msgid "IfcRelAssociatesLibrary_DEFINITION"
msgstr "客观关系 [[IfcRelAssociatesLibrary]] 处理将库项项分配给选中的 [[IfcLibrarySelect]] 到子类型 [[IfcObjectDefinition]] 或[[IfcPropertyDefinition]] 。 这种关系用于将图书馆参考或更详细的链接分配给对象、属性集或类型。 单个库引用可以应用于多个项目。继承的属性相关对象定义了应用库关联的项目。 相关的属性是指一个图书馆的参考，应用于IFC2x中的项目 s. HISTORY 新实体。"

#:IFC.xml:21236
msgid "IfcRelAssociatesLibrary_RelatingLibrary"
msgstr "关联库"

msgid "IfcRelAssociatesLibrary_RelatingLibrary_DEFINITION"
msgstr "参考图书馆，财产集的定义取自图书馆。"

#:IFC.xml:21243
msgid "IfcRelationship"
msgstr "关联性"

msgid "IfcRelationship_DEFINITION"
msgstr "[[IfcRelationship]] 是对IFC中所有客观的关系抽象的概括。客观的关系是处理对象之间关系的首选方式。 这允许将关系特定属性直接保留在关系中，并为以后处理关系特定行为提供了可能性。 在子类型 [[IfcRelationship]] 中使用了两种不同类型的关系，1到1到1种关系以及1到许多关系。 以下公约适用于所有子类。 客观关系的两面都被命名为关联和相关的两面，如果这两种关系是多方面的。 这种关系的相关侧面应是一个累计，是IFC1.0中的一套1 N HISTORY 新实体。"

#:IFC.xml:21246
msgid "IfcRelConnects"
msgstr "IfcRel连接"

msgid "IfcRelConnects_DEFINITION"
msgstr "[[IfcRelConnects]] 是一种连接关系，在某些条件下连接对象。 作为一般连通性，它并不意味着限制。 无论关系的子类型如何界定连接关系的适用对象类型和特定连接的语义。 IFC2x中的新实体。"

#:IFC.xml:21249
msgid "IfcRelDeclares"
msgstr "IfcRelDeclares"

msgid "IfcRelDeclares_DEFINITION"
msgstr "目标关系 [[IfcRelDeclares]] 处理对象子类型 [[IfcObject]] 或属性子类型 [[IfcPropertyDefinition]] 到项目或项目库的 [[IfcProject]] 的声明 或 [[IfcProjectLibrary]] 这种关系处理其它对象的分配，如[[IfcActor]] , 或 [[IfcTypeObject]] 到项目或项目 libary。 关联的属性定义提供了第一级对象的参考，它们是上下文中的元素。 所有与第一级对象相关的其他对象也是在上下文中定义的。 注意到每一个对象都是[[IfcObject]] 的子类型，必须在单一的 [[IfcProject]] 的范围内声明， 或指派给某一个 [[IfcProject]] 的 [[IfcProjectLibrary]] 。 此声明是过渡性的。 例如：[[IfcWorkPlan]] 作为第一级对象在 [[IfcProject]] 的范围内通过 [[IfcRelDeclares]] 声明为 [ [IfcRelDeclares] ] 所有相关的 [[IfcWorkSchedule]] s 都是以过渡方式通过[[IfcWorkPlan]] 与上下文相关的。 注意作业排除子类型 [[IfcProduct]] 这些被分配给[[IfcProject]] 使用空间结构方法通过 [[IfcSpatialStructureElement]] s ， 外容器元素如[[IfcSite]] 或 [[IfcBuilding]] 与[[IfcRelAggregates]] 有关系 [[IfcProject]] 的关系。 关联上下文是项目或包含所有元素的项目库。 在[[IfcProject]] 或 [[IfcProjectLibrary]] 定义的单位分配和演示环境适用于所有这些要素。 IFC4中的新实体。"

#:IFC.xml:20515
msgid "IfcRelDeclares_RelatingContext"
msgstr "相关内容"

msgid "IfcRelDeclares_RelatingContext_DEFINITION"
msgstr "参考 [[IfcProject]] 额外信息指派给哪些信息。"

#:IFC.xml:21250
msgid "IfcRelDeclares_RelatedDefinitions"
msgstr "RelatedDefinitions"

msgid "IfcRelDeclares_RelatedDefinitions_DEFINITION"
msgstr "被分配给某一上下文并适用该上下文中的单位和表示上下文定义的物体或财产定义集。"

#:IFC.xml:21257
msgid "IfcRelDecomposes"
msgstr "离子Relomposes"

msgid "IfcRelDecomposes_DEFINITION"
msgstr "分解关系，[[IfcRelDecomposes]] , 定义了成份或分解元素的一般概念。 分位关系表示整个分位等级，能够从整个合成到各个部分，反之亦然。 解体可能因要求全部和部分都属于同一类而受到约束，从而建立一种嵌套关系。 或者，它们可能需要某种形式的实际遏制，从而确立了特殊类型的聚合关系。 注： 分解有两个特殊的名称，以语言区分、嵌套和聚合。 [[IfcRelDecomposes]] 的子类型将引入嵌套或聚合协议，见[[IfcRelNests]] 和 [[IfcRelAggregates]] 。 EXAMPLE A 成本元素是其他成本元素的排料。 或者结构框架是一个光束和列的聚合。两者都是分解关系的应用。解析意味着一个依赖关系，即。 整个定义取决于各部分的定义，各部分取决于整个的存在。 分解关系可以递归方式应用，即一个分解元素可以成为另一个分解的一部分。 必须在申请一级防止循环提法。 , 它是 IFC2.0 实体 [[IfcRelNests]] 的一种概括。 hange ifc2x4 IFC4 变换。 聚合和嵌套之间的区别被确定为无序或有序的配件集合。 相关对象和相关对象的属性已降级为子类型。"

#:IFC.xml:21260
msgid "IfcRelDefines"
msgstr "IfcRelDefines"

msgid "IfcRelDefines_DEFINITION"
msgstr "用于将对象类型分配给对象发生的对象类型的一般和抽象的关系，将属性设定给对象实例分配给属性设置的属性集模板。IFC 项目模型中的几个窗口可能属于同一目录或制造商。 因此他们共享相同的属性。 这种关系是由[[IfcRelDefines]] 的子类型 [[IfcRelDefinesByType]] 建立的，它将一个[[IfcWindowType]] 分配给多个事件 [[IfcWindow]] 。 EXAMPLE 相同的属性，例如： 保留产品制造商名称、标签和生产年份的PsetProduct制造商信息可以分配给一个或多个装配设备。 这种关系是由[[IfcRelDefinesByProperties]] 的子类型 [[IfcRelDefines]] 建立的，将一个[[IfcPropertySet]] 分配给一个或多个实例 [[IfcFurnishingElement]] 的关系。 IFC2x中的新实体。 hange ifc2x4 IFC4 变异. 相关对象已降级为子类型 [[IfcRelDefinesByProperties]] 和 [[IfcRelDefinesByType]] 。"

#:IFC.xml:21263
msgid "IfcRelDefinesByObject"
msgstr "IfcReldefinesByObject"

msgid "IfcRelDefinesByObject_DEFINITION"
msgstr "客观关系 [[IfcRelDefinesByObject]] 定义了一个对象类型分解的对象与一个对象参与该类型的分解的事件之间的关系。 [[IfcRelDefinesByObject]] 是 1 到 N 的关系。 因为它允许向一个物体或许多反射物体分配一个宣布物体信息的信息。 这些对象然后共享相同的对象属性集，对于子类[[IfcProduct]] 则最终分配的表示图。 只有参与一种类型分解和同一类型发生分解的对象才能通过 [[IfcRelDefinesByObject]] 关系连接。 [[IfcRelDefinesByObject]] 链接已分解的对象类型部分 还称该部分在分解型号发生时的声明部分， 如图1所示，也称为反映部分。 实例图表... ... ... fcreldefinesbyobject fig 1。 ng 图1 部件定义关系 [[IfcRelDefinesByObject]] 可以与图2所示产品类型的形状一起使用。 声明部分的[[IfcShapeRepresentation]]由反射部分引用。 模型的 [[IfcObjectPlacement]] 出现的整个情况决定了项目中的位置。 几何图表... ... fcreldefinesbyobject mig 2.png 图2 有形状代表HISTORY 新实体的部分定义关系。"

#:IFC.xml:20610
msgid "IfcRelDefinesByObject_RelatedObjects"
msgstr "关联对象"

msgid "IfcRelDefinesByObject_RelatedObjects_DEFINITION"
msgstr "对象是对象发生分解的一部分，作为关系中的反射部件。"

#:IFC.xml:20624
msgid "IfcRelDefinesByObject_RelatingObject"
msgstr "关联对象"

msgid "IfcRelDefinesByObject_RelatingObject_DEFINITION"
msgstr "物体是物体类型分解的一部分，作为声明的关系的一部分。"

#:IFC.xml:21266
msgid "IfcRelDefinesByProperties"
msgstr "IfcRel定义字节属性"

msgid "IfcRelDefinesByProperties_DEFINITION"
msgstr "客观关系 [[IfcRelDefinesByProperties]] 定义了属性设定定义和对象之间的关系。属性被聚合在属性集中。 属性集可以直接分配给使用此关系的事件对象。 或分配给某个对象类型并通过该类型分配给事件对象。 分配给一个 [[IfcPropertySet]] 到 [[IfcTypeObject]] 的任务不是通过这种客观的关系来处理的。 但通过直接关系 HasPropertySets 在 [[IfcTypeObject]] 。 [[IfcRelDefinesByProperties]] 是 N 和 N 之间的关系。 它允许向一个或多个对象分配一个或多个属性集。 这些对象然后共享相同的属性定义。IFC2.0中的HISTORY 新实体已从IF2x中的IfcRelAssignsProperties重新命名。 .更改ifc2x4 IFC4 变换. 关联对象已从超级类型 [[IfcRelDefines]] 降级为[[IfcRelDefinesByProperties]] 。 此关系已被修改，以支持单个关系引用的多个属性集。"

#:IFC.xml:20710
msgid "IfcRelDefinesByProperties_RelatedObjects"
msgstr "关联对象"

msgid "IfcRelDefinesByProperties_RelatedObjects_DEFINITION"
msgstr "属性定义所适用的对象或单一对象的参照。 .从子类型 [[IfcObject]] 提倡更改ifc2x4 IFC4 变异数据类型。"

#:IFC.xml:21267
msgid "IfcRelDefinesByProperties_RelatingPropertyDefinition"
msgstr "关联属性定义"

msgid "IfcRelDefinesByProperties_RelatingPropertyDefinition_DEFINITION"
msgstr "提及该对象或一组对象的属性设定定义。"

#:IFC.xml:21274
msgid "IfcRelDefinesByTemplate"
msgstr "IfcReldefinesBy模板"

msgid "IfcRelDefinesByTemplate_DEFINITION"
msgstr "客观关系 [[IfcRelDefinesByTemplate]] 定义了属性设定模板和属性集之间的关系。关于属性集的共同信息，e。 . 适用的名称、描述、包含的属性，由属性集模板定义并分配给所有属性集。 [[IfcPropertySet]] 和 [[IfcQuantitySet]] 支持分配一个 [[IfcPropertySetTemplate]] 的注。 [[IfcRelDefinesByTemplate]] 是 1 到 N 的关系。 因为它允许将一个属性集模板分配给单个或多个属性集或数量集。 这些属性集然后共享相同属性集模板定义。IFC4中的HISTORY 新实体。"

#:IFC.xml:21001
msgid "IfcRelDefinesByTemplate_RelatedPropertySets"
msgstr "关联属性集"

msgid "IfcRelDefinesByTemplate_RelatedPropertySets_DEFINITION"
msgstr "从单个属性集模板获取定义的一个或多个属性集或数量集。"

#:IFC.xml:21076
msgid "IfcRelDefinesByTemplate_RelatingTemplate"
msgstr "关联模板"

msgid "IfcRelDefinesByTemplate_RelatingTemplate_DEFINITION"
msgstr "属性集模板，提供相关属性集的共同定义。"

#:IFC.xml:21277
msgid "IfcRelDefinesByType"
msgstr "IfcRelDefinesByType"

msgid "IfcRelDefinesByType_DEFINITION"
msgstr "客观关系 [[IfcRelDefinesByType]] 定义了对象类型和对象发生事件之间的关系。 [[IfcRelDefinesByType]] 是 1 到 N 的关系。 因为它允许将一种类型的信息分配给一个或多个对象。 这些对象然后共享相同的对象类型以及属性集和分配给对象类型的属性。 对象类型定义与对象发生的情况链接[[IfcRelDefinesByType]] 。 两者都可以通过分配 [[IfcPropertySet]] 来定义属性 如图1所示，包括对象类型或对象发生的一个或多个子类型 [[IfcProperty]]。 在对象类型定义和对象发生边1上有几种情况可以定义相同的属性。 所有对象发生的共同对象类型的所有属性都有相同的值，只有对象类型定义有一个属性集。 2. 所有对象发生的所有属性不同， 没有对象类型定义的共同属性值，然后每个对象出现时都有一个属性集。 同一属性集中的某些属性有共同的值，并且被分配给对象类型的定义，有些属性是针对具体发生的并且被分配给对象发生的具有潜在不同的值。适用于对象发生的属性集中的所有属性的总和是指分配给对象类型定义的属性加上分配给对象发生的属性的组合。 如果对象出现具有相同的属性 [[IfcProperty]]。 在一个[[IfcPropertySet]] 中, 作为相应的对象类型定义, 然后, 事件属性值优先于类型属性值。 实例图表... ... ... fcreldefinesby类型 fix 1。 ng 图1 类型定义关系 分配给[[IfcWallType]] 分配给[[IfcWall]] 的属性值为个别墙 ExtendToStructure TRUE ExtendToStructure TRUE ThermalTransmittance 0所产生的属性值。 75 ThermalTransmittance 0.375 ExtendToStructure TRUE ExtendTostruction FALSE ExtendToStructure FALSE HISTORY New entity in IFC2x. .更改ifc2x4 IFC4 变换. 关联对象已从超级类型 [[IfcRelDefines]] 降级为[[IfcRelDefinesByType]] 。"

#:IFC.xml:20638
msgid "IfcRelDefinesByType_RelatedObjects"
msgstr "关联对象"

msgid "IfcRelDefinesByType_RelatedObjects_DEFINITION"
msgstr "关联对象"

#:IFC.xml:21280
msgid "IfcRelDefinesByType_RelatingType"
msgstr "关联类型"

msgid "IfcRelDefinesByType_RelatingType_DEFINITION"
msgstr "引用该对象或对象集的类型或样式信息。"

#:IFC.xml:21294
msgid "IfcRelNests"
msgstr "离子Relnes"

msgid "IfcRelNests_DEFINITION"
msgstr "嵌套关系 [[IfcRelNests]] 是普通合成分解或整个配件关系 [[IfcRelDecomposes]] 的特殊类型。 嵌套关系可以适用于对象和对象类型的所有非物理子类型，即过程、控制，如成本项目和资源。 它也可适用于物体和物体类型的物理子类型，即有端口的元素。 嵌套意味着嵌套部分之间的顺序。 EXAMPLE A 嵌套成本项目 [[IfcCostSchedule]] 是其他成本项目复杂成本项目的构成。 父成本项目下嵌套成本项目的顺序由相关对象列表的顺序决定。 在工作时间表内嵌入[[IfcTask]] 的嵌套是更具体的子工作任务的父工作任务的构成。 父任务下子任务的顺序由相关对象列表的顺序决定。 EXAMPLE A 系列的 [[IfcDistributionPort]] 可以嵌套在一个 [[IfcDistributionElement]] 内。 它们分解分配元素并有隐含的订单。解析意味着一个依赖关系，即。 整个定义取决于各部分的定义，各部分取决于整个的存在。 依赖所隐含的行为必须在应用程序内确定，IFC2.0 中的新实体。 hange ifc2x4 IFC4 变异. 与对象和相关对象相关的属性被降级于超级类型 [[IfcRelDecomposes]] ， 和相关对象被精炼为一个列表。 使用 [[IfcRelNests]] 是为了嵌套有序的配件集合。"

#:IFC.xml:20722
msgid "IfcRelNests_RelatingObject"
msgstr "关联对象"

msgid "IfcRelNests_RelatingObject_DEFINITION"
msgstr "对象定义，要么是非产品对象类型要么非产品对象出现，要么代表嵌套。 它是整个关系的一部分。 .更改ifc2x4 IFC4 变迁. 属性已经从超级类型 [[IfcRelDecomposes]] 降级并定义了排序的嵌套关系。"

#:IFC.xml:20736
msgid "IfcRelNests_RelatedObjects"
msgstr "关联对象"

msgid "IfcRelNests_RelatedObjects_DEFINITION"
msgstr "对象定义，是非产品对象发生或非产品对象类型，属于嵌套。 它们被定义为订单整个部分关系中的元件，即： 相关对象列表中位置表示的部分之间有一个隐含的顺序。 挂机ifc2x4 IFC4 变异. 属性已经从超级类型 [[IfcRelDecomposes]] 降级并定义排序的嵌套部件。"

#:IFC.xml:21297
msgid "IfcResource"
msgstr "IfcResource"

msgid "IfcResource_DEFINITION"
msgstr "[[IfcResource]] 包含所需的信息，用以代表在一个过程中使用某件物品所产生的成本、计划和其他影响。 它不打算使用 [[IfcResource]] 来模拟物品本身的一般特性。 同时可以具体指定从 [[IfcResource]] 到要使用的物品的可选链接。 从子类型的 [[IfcResource]] 到 [[IfcProduct]] 之间的关系 到 [[IfcRelAssignsToResource]] 之间的关系 有两个基本的预定用途[[IfcResource]] 。 首先，如果该物品的属性不是为了使用 [[IfcResource]] 的目的所需要的， 或者物品类型尚未在 IFC 中明确建模。 然后必须在系统中实例化资源与事物之间的联系。 这就是， 只有[[IfcResource]] 或其子类型的属性就足以代表将物品用作项目的资源。 EXAMPLE建筑设备，如土流车或工具目前没有在IFC内建模。 为了估算和排定时间，仅使用[[IfcResource]] 的子类型表示这些数据。 第二，如果物品的属性是使用 [[IfcResource]]对象所需要的，并且它们被明确地以物体为模型， 然后[[IfcResource]] 实例可以链接到所引用物品类型的实例。 可以用作资源并已经在国际金融公司中模仿的东西包括有形产品、人员和组织以及材料。 关系对象 [[IfcRelAssignsToResource]] 是为这个方法提供的。 继承的属性对象类型是用来识别资源类型的文本代码。IFC1.0 中的新实体。 hange ifc2x IFC2x 变迁. BaseUnit and ResourceConsumption 已经从抽象的实体中删除了他们在下级重启的属性。"

#:IFC.xml:21187
msgid "IfcResource_ResourceOf"
msgstr "资源"

msgid "IfcResource_ResourceOf_DEFINITION"
msgstr "此资源对象是其他对象的关系集，如产品、流程、控制、资源或行为者。"

#:IFC.xml:21298
msgid "IfcResource_Identification"
msgstr "1. 身份识别"

msgid "IfcResource_Identification_DEFINITION"
msgstr "给某一资源的识别符号。它是发生层次上的识别符号。 .从子类型 [[IfcConstructionResource]] 提倡更改ifc2x4 IFC4 变异属性。"

#:IFC.xml:21303
msgid "IfcResource_LongDescription"
msgstr "长度描述"

msgid "IfcResource_LongDescription_DEFINITION"
msgstr "详细描述资源，例如劳动力资源的技能集。 挂载ifc2x4 IFC4 变异. 属性长描述是在子类型 [[IfcConstructionResource]] 替换资源组属性。"

#:IFC.xml:21311
msgid "IfcResourceSelect"
msgstr "IfcResource选择"

#:IFC.xml:21312
msgid "IfcRoot"
msgstr "IfcRoot"

msgid "IfcRoot_DEFINITION"
msgstr "[[IfcRoot]] 是所有实体定义的最抽象和根类，这些定义根植于内核或随后的 IFC 规范层。 因此，除了国际金融公司资源计划所界定的实体之外，它是所有国际金融公司实体的普通超级类型。 所有子类型 [[IfcRoot]] 的实体都可以独立使用，而资源模式实体则可以独立使用。 不属于[[IfcRoot]] 子类型的实体，不被认为是独立实体。 注视定义和执行协议可能会对使用所有者历史处理对象版本设置额外限制。 在 IFC1.0 .change ifc2x4 IFC4 变异中的新实体 属性所有者历史已经变成OPTIONAL。"

#:IFC.xml:21329
msgid "IfcRoot_OwnerHistory"
msgstr "所有者历史"

msgid "IfcRoot_OwnerHistory_DEFINITION"
msgstr "转让关于该物体目前所有权的信息，包括拥有者应用程序。 本地识别和捕获的关于对象最近变化的信息，注意只是作为添加、删除或修改而存储的最后一次修改。 .更改 ifc2x4 IFC4 变迁. 属性已更改为OPTIONAL."

#:IFC.xml:21313
msgid "IfcRoot_Description"
msgstr "描述"

msgid "IfcRoot_Description_DEFINITION"
msgstr "任择性描述为交流意见提供了信息。"

#:IFC.xml:21318
msgid "IfcRoot_GlobalId"
msgstr "GlobalId"

msgid "IfcRoot_GlobalId_DEFINITION"
msgstr "在整个软件世界中分配一个全局唯一的标识符。"

#:IFC.xml:21323
msgid "IfcRoot_Name"
msgstr "名称"

msgid "IfcRoot_Name_DEFINITION"
msgstr "可供参与软件系统或用户使用的可选名称。 对于一些子类型 [[IfcRoot]] 可能需要插入名称属性。这将由某个规则强制执行。"

#:IFC.xml:21341
msgid "IfcSimplePropertyTemplate"
msgstr "IfcSimple属性模板"

msgid "IfcSimplePropertyTemplate_DEFINITION"
msgstr "[[IfcSimplePropertyTemplate]] 定义了所有动态扩展属性的模板， 要么是 [[IfcSimpleProperty]] 的子类型，要么是 [[IfcPhysicalSimpleQuantity]] 的子类型。 个别的属性模板是根据其名称属性解释的，可能有一个预定义的模板类型、属性单位和属性测量类型。 对初级单元中等单元的属性的正确解释是由模板类型确定的。 属性分子和表达式仅适用于具有特定模板类型的 [[IfcSimplePropertyTemplate]] 的实例。 TemplateType 也控制了这种子类型的[[IfcSimpleProperty]] 或 [[IfcPhysicalSimpleQuantity]] 必须用于与本模板相对应的属性发生。 [[IfcSimplePropertyTemplate]] 是包含在[[IfcPropertySetTemplate]] 中的模板集的一部分。 模板可以通过反向属性部分访问。[[IfcPropertySetTemplate]] 可以定义一个或多个实例 [[IfcPropertySet]] 或 [[IfcElementQuantity]] 。 如图1所示，定义任务是由客观关系[[IfcRelDefinesByTemplate]]确定的。 一个 [[IfcSimplePropertyTemplate]] 与子类型的 [[IfcSimpleProperty]] 或 [[IfcPhysicalSimpleQuantity]] 之间没有直接链接。 模板和个人属性或数量之间的定义关系由名称属性确定。 注意约束在 [[IfcPropertySetTemplate]] 和 [[IfcPropertySet]] 和 [[IfcElementQuantity]] 保证包含的属性模板和个别属性的名称属性是唯一的。 [[IfcSimplePropertyTemplate]] 图1... ... ficcsimplleproperty template config1.png 图1 IFC4 中的属性模板关系"

#:IFC.xml:21374
msgid "IfcSimplePropertyTemplate_TemplateType"
msgstr "模板类型"

msgid "IfcSimplePropertyTemplate_TemplateType_DEFINITION"
msgstr "属性类型定义属性模板是否定义具有单一值的属性. 一个边界值、一个列表值、一个表值、一个列举值或一个参考值。 或者数量类型定义模板是否定义了一个长度、面积、体积、重量或时间值。 注意此属性的值决定了正确使用初级单元、中等单元、初级数据类型、中等数据类型、和表达式属性。"

#:IFC.xml:21386
msgid "IfcSimplePropertyTemplate_Enumerators"
msgstr "枚举数"

msgid "IfcSimplePropertyTemplate_Enumerators_DEFINITION"
msgstr "财产列名的名称和所有有效的清点者的名单，都是根据财产的定义指定的可选值。 此属性只能提供，如果属性类型设置为 P ENUMERATEDVALUE"

#:IFC.xml:21342
msgid "IfcSimplePropertyTemplate_AccessState"
msgstr "AccessState"

msgid "IfcSimplePropertyTemplate_AccessState_DEFINITION"
msgstr "关于该财产存取状态的信息。 它决定是否由任何接收申请在不知晓的情况下查看或修改某一财产。 属性使用 [[IfcStateEnum]] 重写此模板属性是可读和可写的。 他们可以被任何应用程序的用户查看和修改。这些是用户设置的典型信息属性。 只读此模板的属性是只读的。 任何应用程序的用户可以查看但不修改它们。应用程序可以生成这种值。 这些是典型的自动生成的属性，只应显示但不应回写。此模板的LOCKED 属性将被锁定。 它们只能通过属性设置模板的所有者应用程序访问。 这些通常是应用程序计算的，不应该发布的内部属性。 此模板的READWRITELOCKED 属性是锁定的、可读和可写的。它们只能通过所有应用程序访问。 阅读此模板的属性被锁定并只读。它们只能通过拥有者应用程序访问。"

#:IFC.xml:21347
msgid "IfcSimplePropertyTemplate_Expression"
msgstr "表达式"

msgid "IfcSimplePropertyTemplate_Expression_DEFINITION"
msgstr "表达式用于存储属性模板的附加信息，取决于属性类型 。 它应当包括以下定义： 如果属性类型被设置为 P TABLEVALUE 表达式，可以被评估来定义定义值和定义值之间的相关性。 Q LEGTH, Q AREA, Q VOLUME, Q COUNT, Q WEIGTH, Q 时间：如果上面未列出属性类型，则必须填写用于计算数量的注号的公式。"

#:IFC.xml:21352
msgid "IfcSimplePropertyTemplate_PrimaryMeasureType"
msgstr "主要测量类型"

msgid "IfcSimplePropertyTemplate_PrimaryMeasureType_DEFINITION"
msgstr "分配给财产定义的主要尺度类型。 如果属性类型设置为 P SINGLEVALUE 来确定测量类型 [[IfcPropertySingleValue]]。 informalValue P ENUMERATEDVALUE determining the measure type of [[IfcPropertyEnumeratedValue]]。 数值P BOUNDEDVALUE 决定测量类型 [[IfcPropertyBoundedValue]].LowerBoundValue P ListVALUE 决定测量类型 [[IfcPropertyListValue]]。 使用参数值确定测量类型 [[IfcPropertyTableValue]]。定义数值P REFERENCEVALUE 决定测量类型 [[IfcPropertyTableValue]]。 ropertyReference note The value range of the measure type is within the selected type [[IfcValue]] for all propertyType with the exption of P REFERENCEVALUE 这里是指选择类型 [[IfcObjectReferenceSelect]] 。"

#:IFC.xml:21357
msgid "IfcSimplePropertyTemplate_PrimaryUnit"
msgstr "主要股"

msgid "IfcSimplePropertyTemplate_PrimaryUnit_DEFINITION"
msgstr "分配给财产定义的主要单位。 如果属性类型设置为 P SINGLEVALUE 来确定 [[IfcPropertySingleValue]]。Unit P ENUMERATEDVALUE 确定 [[IfcPropertyEnumeration]]。 nit P BOUNDEDVALUE determining the [[IfcPropertyBoundedValue]].Unit P ListVALUE determining the [[IfcPropertyListValue]].Unit P TABLEVALUE determining the [[IfcPropertyTableValue]].DefiningUnit"

#:IFC.xml:21362
msgid "IfcSimplePropertyTemplate_SecondaryMeasureType"
msgstr "二级测量类型"

msgid "IfcSimplePropertyTemplate_SecondaryMeasureType_DEFINITION"
msgstr "分配给财产定义的次级测量类型。 如果属性类型设置为 P BOUNDEDVALUE 来确定测量类型 [[IfcPropertyBoundedValue]]。 pperBoundValue P TABLEVALUE 决定测量类型 [[IfcPropertyTableValue]]。 优化值。测量类型的值范围在所有属性类型的选择类型 [[IfcValue]]内含有P ENUMERATEDVALUE的溢出值。 这里是以逗号分隔的枚举列表。注。测量类型为 [[IfcPropertyEnumeration]]。枚举值提供为 PrimaryDataType"

#:IFC.xml:21367
msgid "IfcSimplePropertyTemplate_SecondaryUnit"
msgstr "借调股"

msgid "IfcSimplePropertyTemplate_SecondaryUnit_DEFINITION"
msgstr "分配给财产定义的次级单位。 如果属性类型设置为 P TABLEVALUE 来确定 [[IfcPropertyTableValue]]。定义单位"

#:IFC.xml:21398
msgid "IfcSimplePropertyTemplateTypeEnum"
msgstr "IfcSimplePropertyTemplateTypeEnum"

#:IFC.xml:21411
msgid "IfcSingleProjectInstance"
msgstr "IfcSingleProject实例"

#:IFC.xml:21419
msgid "IfcTypeObject"
msgstr "IfcTypeObject"

msgid "IfcTypeObject_DEFINITION"
msgstr "对象类型定义了一个类型的特定信息，是所有此类事件的常见信息。 它指的是公认的一般性具体发生模式的具体水平。 [[IfcTypeObject]] 通过[[IfcRelDefinesByType]] 关系被分配给个别对象实例。 注： 术语类型和样式常常互换使用。对象类型是由一组属性集定义表示的。 所附属属性描述了关于对象类型的可用阿尔法数字信息。 并且用于定义适用于所有对象发生这种类型的所有常见属性。 注意，如果具有相同名称的属性在分配给一个 [[IfcTypeObject]]和子类型的[[IfcPropertySet]]内使用，并且该类型的发生， 然后事件属性覆盖类型属性。 关于解释性图，请参阅[[IfcRelDefinesByType]]。对象类型可以在不已分配给对象的情况下进行交换。 某一对象类型可能指明其定义所依据的库或目录。 这个社团由继承下来的HasAssociations 关系处理, 指向[[IfcRelAssociatesLibrary]]. IFC2x中的HISTORY 新实体。 hange ifc2x3 IFC2x3 变异[[IfcTypeObject]] 现在已经从新的超级类型 [[IfcObjectDefinition]] 下了子打字， 和 HasPropertySets 属性已经从列表变成SET。 挂机ifc2x4 IFC4 变异实体[[IfcTypeObject]] 不能从 IFC4 起实例化。 它将在未来版本的 IFC 中被更改为ABSTRACT 超级类型。反属性类型已从 ObjectTypeOf 重命名。"

#:IFC.xml:21015
msgid "IfcTypeObject_HasPropertySets"
msgstr "HasPropertySets"

msgid "IfcTypeObject_HasPropertySets_DEFINITION"
msgstr "设定唯一属性集列表，这些属性集与对象类型相关，并且是所有提及此对象类型的对象发生的常见属性。 .更改 ifc2x3 IFC2x3 变迁. 属性合计类型已从LIST 更改为SET 。"

#:IFC.xml:21280
msgid "IfcTypeObject_Types"
msgstr "类型"

msgid "IfcTypeObject_Types_DEFINITION"
msgstr "参照IfcReledByType 的关系，从而参照由这种类型定义的事件物体。"

#:IFC.xml:21420
msgid "IfcTypeObject_ApplicableOccurrence"
msgstr "适用的事件"

msgid "IfcTypeObject_ApplicableOccurrence_DEFINITION"
msgstr "属性可选定义事件对象的数据类型，分配类型对象可以与之相关联。 如果不存在，则不指示哪一类对象适用。 使用了下列公约： 采用国际金融公司命名公约，适用事件的国际金融公司实体名称。 使用 IFC 前缀的 CamelCase 可以在分隔符向前斜杠后的预定义类型， 使用大写。如果一个类型对象适用于许多发生物体。 然后这些事件对象名称应该用逗号分隔，形成逗号分隔的字符串。 将家具作为适用的发生实体的EXAMPLE格式表示为[[IfcFurnishingElement]] 折叠作为适用实体的引用将表示为[[IfcMember]] BRACE 。"

#:IFC.xml:21427
msgid "IfcTypeProcess"
msgstr "IfcType进程"

msgid "IfcTypeProcess_DEFINITION"
msgstr "[[IfcTypeProcess]] 定义了流程或活动的特定定义或类型定义，而没有被分配到计划表或时间。 它被用来界定一个过程或活动规格，即： 为该过程或活动类型定义的所有事件所共有的特定过程或活动信息。 一个 [[IfcTypeProcess]] 可能已设置了一个属性列表。 这些属性的值是所有此过程或活动类型发生的情况所共有的。 使用目标关系 [[IfcRelDefinesByType]] 实现了类型发生关系。 子类型 [[IfcTypeProcess]] 可能会被交换而无需已分配给子类型 [[IfcProcess]] 。IFC4 中的新实体。"

#:IFC.xml:21147
msgid "IfcTypeProcess_OperatesOn"
msgstr "操作"

msgid "IfcTypeProcess_OperatesOn_DEFINITION"
msgstr "与其他对象的关系集，如按流程类型操作的产品、工艺、控制、资源或行为者。 IFC4中的新反向关系。"

#:IFC.xml:21428
msgid "IfcTypeProcess_Identification"
msgstr "1. 身份识别"

msgid "IfcTypeProcess_Identification_DEFINITION"
msgstr "给某一进程类型的识别名称。"

#:IFC.xml:21433
msgid "IfcTypeProcess_LongDescription"
msgstr "长度描述"

msgid "IfcTypeProcess_LongDescription_DEFINITION"
msgstr "详细描述活动的长描述或文本。注意继承的 SELF [[IfcRoot]].描述属性用作简短描述。"

#:IFC.xml:21438
msgid "IfcTypeProcess_ProcessType"
msgstr "处理类型"

msgid "IfcTypeProcess_ProcessType_DEFINITION"
msgstr "类型是指进一步显示流程的特定类型。使用必须在可实例子类型的级别上确定。 尤其是，它持有用户定义类型，如果预定义类型的属性枚举设置为 USERDEFINED。"

#:IFC.xml:21446
msgid "IfcTypeProduct"
msgstr "IfcTypeProduct"

msgid "IfcTypeProduct_DEFINITION"
msgstr "[[IfcTypeProduct]] 定义了产品类型定义，而不已经插入项目结构，但没有放置位置， 不包括在项目几何表述环境中。 它用来界定产品规格，即该产品类型的所有发生情况所共有的特定产品信息。 一个 [[IfcTypeProduct]] 可能有一组属性的列表和一组可选的产品表现形式。 这些属性的数值和表示图对该产品类型的所有出现都是共同的。 使用目标关系 [[IfcRelDefinesByType]] 实现了类型发生关系。 注意到产品表示定义为表示图， 它可以由产品实例分配，通过表示条目为[[IfcShapeRepresentation]] 并且有类型 [[IfcMappedItem]] 的条目。 子类型[[IfcProduct]] 所代表的发生级别上的表述可以覆盖几何表示的类型级别上的特定表述， a 可在发生水平上适用卡特塞转换操作员。 对于属性集，一个事件属性集中，一个在产品发生时分配的属性，覆盖分配给产品类型的相同属性。 一个 [[IfcTypeProduct]] 可能在未被分配到子类型 [[IfcProduct]] 的情况下被交换。IFC2x 中的新实体HISTORY 。 挂机ifc2x4 IFC4 变异实体[[IfcTypeProduct]] 不能从 IFC4 起实例化。 它将在未来的IFC版本中变成ABSTRACT超级类型。"

#:IFC.xml:13001
msgid "IfcTypeProduct_RepresentationMaps"
msgstr "代表地图"

msgid "IfcTypeProduct_RepresentationMaps_DEFINITION"
msgstr "唯一的映射图列表。每个映射图描述了产品样式形状的方块定义。 通过提供多个表示地图，可以给出多视图方块定义。"

#:IFC.xml:21167
msgid "IfcTypeProduct_ReferencedBy"
msgstr "引用者"

msgid "IfcTypeProduct_ReferencedBy_DEFINITION"
msgstr "引用了[[IfcRelAssignsToProduct]] 关系，其中包括其他产品、工艺、控制器。 资源或行为体作为子类型的 [[IfcObjectDefinition]] 可能与此产品类型相关。 .更改 ifc2x4 IFC4 变换新反向关系。"

#:IFC.xml:21447
msgid "IfcTypeProduct_Tag"
msgstr "标签"

msgid "IfcTypeProduct_Tag_DEFINITION"
msgstr "产品特定类型的标签或标签标识符，例如 文章编号类似于北非。它是特定级别的标识符。"

#:IFC.xml:21455
msgid "IfcTypeResource"
msgstr "IfcTypeResource"

msgid "IfcTypeResource_DEFINITION"
msgstr "[[IfcTypeResource]] 定义了资源的特定定义或类型定义。 它被用来界定特定资源的资源规格， 对于所有定义的资源并可作为资源模板的事件，这是共同的。 一个 [[IfcTypeResource]] 可能有附加属性集列表。 这些属性的值是该资源类型所有发生的情况所共有的。 使用目标关系 [[IfcRelDefinesByType]] 实现了类型发生关系。 子类型 [[IfcTypeResource]] 可能会被交换而无需已分配给子类型 [[IfcResource]] 。IFC4 中的新实体。"

#:IFC.xml:21199
msgid "IfcTypeResource_ResourceOf"
msgstr "资源"

msgid "IfcTypeResource_ResourceOf_DEFINITION"
msgstr "与其他对象的关系集，例如 这种资源类型是一种资源的产品，加工，控制，资源或行为者。《第四次国际财务报告准则》中的新反向关系。"

#:IFC.xml:21456
msgid "IfcTypeResource_Identification"
msgstr "1. 身份识别"

msgid "IfcTypeResource_Identification_DEFINITION"
msgstr "给资源类型的识别名称。"

#:IFC.xml:21461
msgid "IfcTypeResource_LongDescription"
msgstr "长度描述"

msgid "IfcTypeResource_LongDescription_DEFINITION"
msgstr "详细描述资源的长描述或文本。注意继承的 SELF [[IfcRoot]].描述属性用作简短描述。"

#:IFC.xml:21466
msgid "IfcTypeResource_ResourceType"
msgstr "资源类型"

msgid "IfcTypeResource_ResourceType_DEFINITION"
msgstr "类型是指进一步显示资源的特定类型。使用必须在可实例子类型的级别上确定。 尤其是，它持有用户定义类型，如果预定义类型的属性枚举设置为 USERDEFINED。"

#:IFC.xml:21474
msgid "IfcUniqueDefinitionNames__Relations"
msgstr "IfcUniqueDefinitionNames Relations"

#:IFC.xml:21482
msgid "IfcUniquePropertyName__Properties"
msgstr "IfcUnquePropertyname 属性"

#:IFC.xml:21490
msgid "IfcUniquePropertySetNames__Properties"
msgstr "IfcUniquePropertySet名称属性"

#:IFC.xml:21498
msgid "IfcUniquePropertyTemplateNames__Properties"
msgstr "IfcUniquePropertyTemplatenames 属性"

#:IFC.xml:21520
msgid "Pset_ActorCommon"
msgstr "Pset ActorCommon"

msgid "Pset_ActorCommon_DEFINITION"
msgstr "一套能够对行为者作进一步分类的属性，包括能够使一些行为者被指定为人口的属性， 被指定为属性的数字作为一个单一的值处理，而不必将数值的实例合计为[[IfcActor]]。"

#:IFC.xml:21521
msgid "ActorCategory"
msgstr "执行者类别"

msgid "ActorCategory_DEFINITION"
msgstr "2. 指定行为者所属的类别。"

#:IFC.xml:21526
msgid "NumberOfActors"
msgstr "数字Ofactors"

msgid "NumberOfActors_DEFINITION"
msgstr "人口中需要共同处理的行为者数目。"

#:IFC.xml:21531
msgid "SkillLevel"
msgstr "技能级别"

msgid "SkillLevel_DEFINITION"
msgstr "演员展示的技能水平，这表明他们能够在手工艺品上采取行动的能力。"

#:IFC.xml:21537
msgid "Pset_ProjectCommon"
msgstr "Pset 工程Common"

msgid "Pset_ProjectCommon_DEFINITION"
msgstr "将高层工程信息应用于所有事件的 [[IfcProject] ] 属性设置"

#:IFC.xml:21538
msgid "FundingSource"
msgstr "资金来源"

msgid "FundingSource_DEFINITION"
msgstr "B. 投资资金来源"

#:IFC.xml:21543
msgid "NetEarnedValue"
msgstr "网络价值"

msgid "NetEarnedValue_DEFINITION"
msgstr "净赚价值"

#:IFC.xml:21548
msgid "PaybackPeriod"
msgstr "付款周期"

msgid "PaybackPeriod_DEFINITION"
msgstr "投资回报期"

#:IFC.xml:21553
msgid "ProjectInvestmentEstimate"
msgstr "预测投资估计数"

msgid "ProjectInvestmentEstimate_DEFINITION"
msgstr "投资成本估计数"

#:IFC.xml:21558
msgid "ProjectType"
msgstr "工程类型"

msgid "ProjectType_DEFINITION"
msgstr "附加类型项目"

#:IFC.xml:21563
msgid "ROI"
msgstr "ROI"

msgid "ROI_DEFINITION"
msgstr "投资收益"

#:IFC.xml:21612
msgid "IfcPropertySetTemplateTypeEnum"
msgstr "IfcPropertySetTemplateTypeEnum"

msgid "IfcPropertySetTemplateTypeEnum_DEFINITION"
msgstr "此枚举定义了[[IfcPropertySet]] 实例的一般适用性， 或 [[IfcElementQuantity]] 由此 [[IfcPropertySetTemplate]] 定义的子类型的 [[IfcObjectDefinition]] 。 IFC4中的新枚举记录。 项 TYPEDRIVENONLY 属性集由此 [[IfcPropertySetTemplate]] 定义的属性集只能分配到子类型 [[IfcTypeObject]] 。 PSET TYPEDRIVENOVERRIDE The property sets defined by this [[IfcPropertySetTemplate]] 可以分配到子类型 [[IfcTypeObject]] 并且可以被在子类型 [[IfcObject]] 相同名称的属性所覆盖。 PSET OCCURREDRIVEN The property set defined by this [[IfcPropertySetTemplate]] 只能分配到子类型 [[IfcObject]] 。 PSET PerFORMANCEDRIVEN The property sets defined by this [[IfcPropertySetTemplate]] 只能分配给 [[IfcPerformanceHistory]] 。 QTO TYPEDRIVENONLY 由此 [[IfcPropertySetTemplate]] 定义的元素数量只能分配给子类型 [[IfcTypeObject]] 。 QTO TYPEDRIVENOVERRIDE 此元素的数量由此 [[IfcPropertySetTemplate]] 定义的元素数量可以分配给子类型[[IfcTypeObject]]，并且可以在子类型[[IfcObject]] 被相同名称的元素数量覆盖。 QTO OCURRENCEDRIVEN The element quantité defined by this [[IfcPropertySetTemplate]] 只能分配给子类型 [[IfcObject]] 。 未提供任何限制，由此 [[IfcPropertySetTemplate]] 定义的属性集可以分配给任何实体， 如果不受适用实体属性的其他限制。"

#:IFC.xml:21613
msgid "IfcPropertySetTemplateTypeEnum_PSET_TYPEDRIVENONLY"
msgstr "按下 TYPEDRIVENNLY"

msgid "IfcPropertySetTemplateTypeEnum_PSET_TYPEDRIVENONLY_DEFINITION"
msgstr "此 [[IfcPropertySetTemplate]] 定义的属性集只能分配到 [[IfcTypeObject]] 的子类型。"

#:IFC.xml:21614
msgid "IfcPropertySetTemplateTypeEnum_PSET_TYPEDRIVENOVERRIDE"
msgstr "按键类型"

msgid "IfcPropertySetTemplateTypeEnum_PSET_TYPEDRIVENOVERRIDE_DEFINITION"
msgstr "由此 [[IfcPropertySetTemplate]] 定义的属性集可以分配到子类型 [[IfcTypeObject]] ，并且可以被相同名称的属性设置在子类型 [[IfcObject]] 中覆盖。"

#:IFC.xml:21615
msgid "IfcPropertySetTemplateTypeEnum_PSET_OCCURRENCEDRIVEN"
msgstr "按下 OCCURRIVEN"

msgid "IfcPropertySetTemplateTypeEnum_PSET_OCCURRENCEDRIVEN_DEFINITION"
msgstr "此 [[IfcPropertySetTemplate]] 定义的属性集只能分配到 [[IfcObject]] 的子类型。"

#:IFC.xml:21616
msgid "IfcPropertySetTemplateTypeEnum_PSET_PERFORMANCEDRIVEN"
msgstr "PSET perfORMANCEDRIVEN"

msgid "IfcPropertySetTemplateTypeEnum_PSET_PERFORMANCEDRIVEN_DEFINITION"
msgstr "此 [[IfcPropertySetTemplate]] 定义的属性集只能分配给 [[IfcPerformanceHistory]] 。"

#:IFC.xml:21617
msgid "IfcPropertySetTemplateTypeEnum_QTO_TYPEDRIVENONLY"
msgstr "QTO TYPEDRIVENONLY"

msgid "IfcPropertySetTemplateTypeEnum_QTO_TYPEDRIVENONLY_DEFINITION"
msgstr "由此 [[IfcPropertySetTemplate]] 定义的元素数量只能分配到 [[IfcTypeObject]] 的子类型。"

#:IFC.xml:21618
msgid "IfcPropertySetTemplateTypeEnum_QTO_TYPEDRIVENOVERRIDE"
msgstr "QTO TYPEDRIVENOVERRIDE"

msgid "IfcPropertySetTemplateTypeEnum_QTO_TYPEDRIVENOVERRIDE_DEFINITION"
msgstr "由此 [[IfcPropertySetTemplate]] 定义的元素数量可以分配给子类型的 [[IfcTypeObject]]，并且可以在子类型的 [[IfcObject]] 中被相同名称的元素数量覆盖。"

#:IFC.xml:21619
msgid "IfcPropertySetTemplateTypeEnum_QTO_OCCURRENCEDRIVEN"
msgstr "QTO OCCURNCEDRIVEN"

msgid "IfcPropertySetTemplateTypeEnum_QTO_OCCURRENCEDRIVEN_DEFINITION"
msgstr "由此 [[IfcPropertySetTemplate]] 定义的元素数量只能分配到 [[IfcObject]] 的子类型。"

#:IFC.xml:21620
msgid "IfcPropertySetTemplateTypeEnum_NOTDEFINED"
msgstr "未完成"

msgid "IfcPropertySetTemplateTypeEnum_NOTDEFINED_DEFINITION"
msgstr "没有设置限制，此 [[IfcPropertySetTemplate]] 定义的属性集可以分配给任何实体， 如果不受适用实体属性的其他限制。"

#:IFC.xml:21610
msgid "IfcPropertySetDefinitionSet"
msgstr "IfcPropertySetDefinitionSet"

msgid "IfcPropertySetDefinitionSet_DEFINITION"
msgstr "这种定义类型的目的是能够将一组[[IfcPropertySetDefinition]] s 分配给一个 [[IfcRelDefinesByProperties]] 关系。 注意到此定义类型的唯一目的是使目标关系[[IfcRelDefinesByProperties]] 向上兼容的增强能够分配多重[[IfcPropertySet]] [[IfcElementQuantity]] s或其他子类型的 [[IfcPropertySetDefinition]] 对象使用单个实例[[IfcRelDefinesByProperties]] 。 IFC4中的新类型。"

