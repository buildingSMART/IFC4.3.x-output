msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /master/IfcPresentationAppearanceResource.pot\n"
"X-Crowdin-File-ID: 60\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_CN\n"
"PO-Revision-Date: 2022-02-09 21:08\n"

#:IFC.xml:25976
msgid "IfcBlobTexture"
msgstr "IfcBlobTexture"

msgid "IfcBlobTexture_DEFINITION"
msgstr "一个 [[IfcBlobTexture]] 提供了一个平面照明参数的两维分布，它被映射在上面。 纹理本身作为单个二进制蓝色，代表像素格式文件的内容。 文件的文件格式由RasterFormat 属性给出，允许的格式以规则支持的规则格式为指导。 注意工具箱指定的二进制数据类型的实现可能会限制二进制blob 的最大长度以捕获栅格文件内容。 关于对纹理节点的解释，见[[IfcImageTexture]] 定义。IFC2x3中HISTORY New entity .更改RasterCode 的 ifc2x4 IFC4 变异数据类型已更正为BINARY"

#:IFC.xml:25977
msgid "IfcBlobTexture_RasterCode"
msgstr "RasterCode"

msgid "IfcBlobTexture_RasterCode_DEFINITION"
msgstr "Blob, 赋予一个单一二进制文件压缩格式中的纹理. 文件格式由 RasterFormat 属性提供。正式建议"

#:IFC.xml:25982
msgid "IfcBlobTexture_RasterFormat"
msgstr "Raster格式"

msgid "IfcBlobTexture_RasterFormat_DEFINITION"
msgstr "RasterCode 的格式经常使用压缩。"

#:IFC.xml:25989
msgid "IfcColour"
msgstr "IfcColour"

#:IFC.xml:25991
msgid "IfcColourOrFactor"
msgstr "IfcColourOrFactor"

#:IFC.xml:25992
msgid "IfcColourRgb"
msgstr "IfcColourRgb"

msgid "IfcColourRgb_DEFINITION"
msgstr ".extdef 根据ISO CD 10303 46 1992定义的注解 RGB 颜色模型中的绿色和蓝色。 注。与通常值相反，彩色组件是0的整数范围... 55, ISO10303 46的定义将颜色组件定义为实际值为0.0... 1.0。 应用程序需要先执行此转换才能使用彩色RGB值。注意相应的STEP名称颜色rgb。 名称属性已被省略，注册的数据类型， 绿色和蓝色部分是IfcNormalizedRatioMeasure ，它已经包含值范围限制。 关于正式标准的最后定义，请参阅ISO IS 10303 46 1994, p. 138 。"

#:IFC.xml:25993
msgid "IfcColourRgb_Blue"
msgstr "蓝色"

msgid "IfcColourRgb_Blue_DEFINITION"
msgstr "蓝色组件的强度。注意颜色组件值在0范围内给出。 不在0.255范围以内。"

#:IFC.xml:25998
msgid "IfcColourRgb_Green"
msgstr "Green"

msgid "IfcColourRgb_Green_DEFINITION"
msgstr "绿色组件的强度。注意颜色组件值在0范围内给出。 不在0.255范围以内。"

#:IFC.xml:26003
msgid "IfcColourRgb_Red"
msgstr "红色的"

msgid "IfcColourRgb_Red_DEFINITION"
msgstr "红色组件的强度。注意颜色组件值在0范围内给出。 不在0.255范围以内。"

#:IFC.xml:26095
msgid "IfcColourRgbList"
msgstr "IfcColourRgbList"

msgid "IfcColourRgbList_DEFINITION"
msgstr "[[IfcColourRgbList]] 定义了RGB 颜色值的排序集合。 每个颜色值都是一个固定列表，其中包含三个颜色的红色、绿、蓝色。 属性颜色表是一个两维列表 在第一维度是代表每个颜色值的无界限列表中，第二维度是由四个列表成员组成的固定列表， 其中1是红色成分、2是绿色成分、3是蓝色成分； 注: [[IfcColourRgbList]] 是为了提供一种可索引的四次装配物种颜色表述的精密表示。 IFC4中的新实体。"

#:IFC.xml:26096
msgid "IfcColourRgbList_ColourList"
msgstr "颜色表"

msgid "IfcColourRgbList_ColourList_DEFINITION"
msgstr "由红色、绿色、蓝色组件定义的颜色列表。所有值均以0.0值1.0的比率提供。 当每个颜色通道使用 8位时，值为0.0等于 0，值为1.0等于 255，值之间被内插。"

#:IFC.xml:26115
msgid "IfcColourSpecification"
msgstr "Ifc色彩说明"

msgid "IfcColourSpecification_DEFINITION"
msgstr ".extdef 根据ISO CD 10303 46 1992定义的注解. 颜色规格实体包含直接的颜色定义。 颜色组件值直接指特定的颜色空间。 注相应的 ISO 10303 名称颜色规格。它已经成为IFC 中的一个抽象实体。 关于正式标准的最后定义，请参阅ISO IS 10303 46 1994, p. 138 。"

#:IFC.xml:26116
msgid "IfcColourSpecification_Name"
msgstr "名称"

msgid "IfcColourSpecification_Name_DEFINITION"
msgstr "除了彩色组件如RGB 值之外，给特定色标注的可选名称。 行业色彩分类的EXAMPLE 名称，如RAL. .change ifc2x3 IFC2x3 变异属性已添加。"

#:IFC.xml:26124
msgid "IfcCorrectFillAreaStyle"
msgstr "IfcCorrectFillAreaStyle"

#:IFC.xml:26132
msgid "IfcCurveFontOrScaledCurveFontSelect"
msgstr "IfcCurveFontOrScaledCurveFontSelect"

#:IFC.xml:26133
msgid "IfcCurveStyle"
msgstr "IfcCurve风格"

msgid "IfcCurveStyle_DEFINITION"
msgstr "An [[IfcCurveStyle]] provides the style table for presentation information assigned to geometric curves. The style is defined by a color, a font and a width. The [[IfcCurveStyle]] defines curve patterns as model patterns, that is, the distance between visible and invisible segments of curve patterns are given in model space dimensions that have to be scaled using the target plot scale . Styles are intended to be shared by multiple [[IfcStyledItem]] s, assigning the style to occurrences of subtypes of [[IfcGeometricRepresentationItem]] s. Measures given to a font pattern or a curve width are given in global drawing length units. NOTE global units are defined at the single [[IfcProject]] instance, given by UnitsInContext [[IfcUnitAssignment]] , the same units are used for the geometric representation items and for the style definitions. The measure values for font pattern and curve width apply to the model space with a target plot scale provided for the correct appearance in the default plot scale.. For different scale and projection dependent curve styles a different instance of [[IfcCurveStyle]] needs to be used by IfcPresentationStyleAssignment for different [[IfcGeometricRepresentationSubContext]] dependent representations. NOTE the target plot scale is given by [[IfcGeometricRepresentationSubContext]].TargetScale . An [[IfcCurveStyle]] can be assigned to [[IfcGeometricRepresentationItem]] s via the IfcPresentationStyleAssignment through an intermediate [[IfcStyledItem]] or IfcAnnotationCurveOccurrence . .extDef NOTE Definition according to ISO CD 10303 46 1992 A curve style specifies the visual appearance of curves. NOTE Corresponding ISO 10303 name curve style. Please refer to ISO IS 10303 46 1994 for the final definition of the formal standard. HISTORY New entity in IFC2x2."

#:IFC.xml:26134
msgid "IfcCurveStyle_CurveColour"
msgstr "曲线颜色"

msgid "IfcCurveStyle_CurveColour_DEFINITION"
msgstr "曲线可见部分的颜色。 如果未给出此颜色，则应从图层作业中取出样式， 如果没有给出这种颜色，则适用默认颜色。"

#:IFC.xml:26139
msgid "IfcCurveStyle_CurveFont"
msgstr "CurveFont"

msgid "IfcCurveStyle_CurveFont_DEFINITION"
msgstr "用于呈现曲线的曲线样式字体。 它可以是一个预定义的曲线字体，也可以是一个明确定义的曲线字体。两者都可以被缩放。 如果没有给出，曲线字体应该从带样式的图层作业中提取。 如果没有给出这个字体，则适用默认曲线字体。"

#:IFC.xml:26144
msgid "IfcCurveStyle_CurveWidth"
msgstr "曲线宽度"

msgid "IfcCurveStyle_CurveWidth_DEFINITION"
msgstr "呈现曲线宽度的呈现区域单位正长度。 如果未给出此样式，则应从带样式的图层作业中取出。 如果没有给出这种情况，则适用默认风格。"

#:IFC.xml:26149
msgid "IfcCurveStyle_ModelOrDraughting"
msgstr "ModelOrdraugh"

msgid "IfcCurveStyle_ModelOrDraughting_DEFINITION"
msgstr "说明为演示风格提供的长度计数是基于模型，还是基于绘图。更改ifc2x4 IFC4 变异新属性。正式Propositions"

#:IFC.xml:26168
msgid "IfcCurveStyleFont"
msgstr "IfcCurveStyleFont"

msgid "IfcCurveStyleFont_DEFINITION"
msgstr ".extDef 根据ISO CD 10303 46 1992定义的注解。曲线样式字体将几个曲线样式的字体图案实体合并为一个更复杂的图案。 由此产生的模式沿曲线重复。 注对 ISO 10303 曲线风格字体。 关于正式标准的最后定义，请参阅ISO IS 10303 46 1994。"

#:IFC.xml:26177
msgid "IfcCurveStyleFont_PatternList"
msgstr "图案列表"

msgid "IfcCurveStyleFont_PatternList_DEFINITION"
msgstr "曲线字体图案实体列表，其中包含用于绘图曲线的简单模式。 这些模式按其在清单中出现的顺序适用。"

#:IFC.xml:26169
msgid "IfcCurveStyleFont_Name"
msgstr "名称"

msgid "IfcCurveStyleFont_Name_DEFINITION"
msgstr "可以使用曲线字体分配的名称。"

#:IFC.xml:26189
msgid "IfcCurveStyleFontAndScaling"
msgstr "IfcCurveStyleFontAndScaling"

msgid "IfcCurveStyleFontAndScaling_DEFINITION"
msgstr "[[IfcCurveStyleFontAndScaling]] 允许重新使用同一曲线风格定义的几个大小。 曲线字体缩放的定义是基本曲线风格的缩放，可以用作新的或派生的曲线风格。 注意曲线字体缩放不应与目标绘图缩放混合。 [[IfcCurveStyleFontAndScaling]] 的一个例子是基本曲线样式破折样式的缩放模式可见0。 1米，无形0.005米进入破折大，曲线Fontscale 2导致可见0.02米，隐形0。 1 m, and into ashsmall with the CurveFontscale 0.5, resulting visible 0.005m, invisible 0.0025m . 按照ISO CD 10303 46 1992，xtDef 注解定义 曲线样式字体和缩放是一个曲线样式字体和该字体的缩放因子， 这样给定的曲线样式字体可以在不同的比例尺中应用。 注相应的 ISO 10303 曲线风格字体和缩放。 关于正式标准的最后定义，请参阅ISO IS 10303 46 1994。"

#:IFC.xml:26190
msgid "IfcCurveStyleFontAndScaling_CurveFontScaling"
msgstr "CurveFontScaling"

msgid "IfcCurveStyleFontAndScaling_CurveFontScaling_DEFINITION"
msgstr "5. 比额表系数。"

#:IFC.xml:26195
msgid "IfcCurveStyleFontAndScaling_CurveStyleFont"
msgstr "CurveStyleFont"

msgid "IfcCurveStyleFontAndScaling_CurveStyleFont_DEFINITION"
msgstr "CurveStyleFont"

#:IFC.xml:26200
msgid "IfcCurveStyleFontAndScaling_Name"
msgstr "名称"

msgid "IfcCurveStyleFontAndScaling_Name_DEFINITION"
msgstr "可以用曲线字体缩放指定的名称。"

#:IFC.xml:26208
msgid "IfcCurveStyleFontPattern"
msgstr "IfcCurveStyleFontForm"

msgid "IfcCurveStyleFontPattern_DEFINITION"
msgstr ".extDef 根据ISO CD 10303 46 1992定义的注解. 曲线样式字体模式是演示区域单位中一对可见和不可见曲线段长度计数。 注相应的 ISO 10303 曲线样式字体模式。 关于正式标准的最后定义，请参阅ISO IS 10303 46 1994。"

#:IFC.xml:26209
msgid "IfcCurveStyleFontPattern_InvisibleSegmentLength"
msgstr "隐藏片段长度"

msgid "IfcCurveStyleFontPattern_InvisibleSegmentLength_DEFINITION"
msgstr "图案定义中隐藏部分的长度。正规Propositions"

#:IFC.xml:26214
msgid "IfcCurveStyleFontPattern_VisibleSegmentLength"
msgstr "可见片段长度"

msgid "IfcCurveStyleFontPattern_VisibleSegmentLength_DEFINITION"
msgstr "模式定义中可见部分的长度。注意一个代表点的可见部分，值0应指定。 .更改 ifc2x3 IFC2x3 变迁. 数据类型已被更改为[[IfcLengthMeasure]]，并且以文件为基础的交换具有向上兼容性。"

#:IFC.xml:26221
msgid "IfcCurveStyleFontSelect"
msgstr "IfcCurveStyleFontSelect"

#:IFC.xml:26223
msgid "IfcDraughtingPreDefinedColour"
msgstr "IfcDraughtingPreDefinedColour"

msgid "IfcDraughtingPreDefinedColour_DEFINITION"
msgstr "画面前定义的颜色是预定义的颜色，目的是用名称来识别颜色。 可允许的名称为黑、红色、绿色、蓝、黄、洋、青、青、青色、青色、青色， 根据图层 [[IfcDraughtingPreDefinedColour]是一个从 ISO 10303 202 通过的实体 工业自动化系统和一体化 产品数据显示和交换，第202部分，应用协议辅助绘图部分。 下表列出了与[[IfcDraughtingPreDefinedColour]]给出的名称相关的 RGB 值。 颜色名称为红绿蓝黑色 0 0 红色1 0 绿色0 1.0 0 蓝色0 0 1.0黄色1.0 1.0 0 magenta 1.0 0 1.0 1.0 白色1.0 1.0 1.0 按图层颜色值从 [[IfcPresentationLayerWithStyle]] 获取。 注意相应的 ISO 10303 名称拖动预定义颜色。 关于正式标准的最后定义，请参阅ISO IS 10303 202 1994第194页。 HISTORY New entity in IFC2x2. .spechead informal Propositions 1. 只有当使用颜色定义的几何表示项有关联到 [[IfcPresentationLayerWithStyle]] 时，才能插入图层值， 而且，如果[[IfcPresentationLayerWithStyle]] 的实例有一个有效的颜色定义 [[IfcCurveStyle]] ， IfcSymbolStyle , 或 [[IfcSurfaceStyle]] 取决于什么是适用的。 预定义色彩名称的正式提议. 预先定义项目的继承名称只能具有以下字的值."

#:IFC.xml:26226
msgid "IfcDraughtingPreDefinedCurveFont"
msgstr "IfcDraughtingPreDefinedCurveFont"

msgid "IfcDraughtingPreDefinedCurveFont_DEFINITION"
msgstr "绘制预定义的曲线字体类型定义了一个选择广泛使用的曲线字体，用于按名称绘制目的。 注： [[IfcDraughtingPreDefinedCurveFont]] 是一个从ISO 10303号、工业自动化系统和集成系统中采用的实体 技术更正2 综合通用资源 图1显示预定义的曲线字体。预先定义的字体... ... 如果图象定义了曲线字体图1。 如果图1 绘制预定义曲线字体注。如果[[IfcDraughtingPreDefinedCurveFont]] 是在一个 [[IfcCurveStyleFontAndScaling]]内使用，则表中给出的部分和空间长度本身就是比额系数1。 注相应的 ISO 10303 名称预定义曲线字体。 关于正式标准的最后定义，请参阅ISO IS 10303 46 1994 TC2, 第12页，IFC2x2中的新实体。 预定义曲线字体的正式提议名称 [[IfcDraughtingPreDefinedCurveFont]] 的名称应是连续的 , 链，链，双灰，破解，虚线或图层。"

#:IFC.xml:26229
msgid "IfcExternallyDefinedHatchStyle"
msgstr "IfcExternallyDefinedHatchStyle"

msgid "IfcExternallyDefinedHatchStyle_DEFINITION"
msgstr ".extdef Note Definition according according in ISO CD10303 46 1992 The externally defined hatch style is an entitled to a hatching style. 注意到名称源和项目引用的允许值， 确定外部定义的孵化方式所依据的方法需要由实施者协议来决定。 注相应的 ISO 10303 名称填充风格选择。 关于正式标准的最后定义，请参阅ISO IS 10303 46 1994。"

#:IFC.xml:26233
msgid "IfcExternallyDefinedSurfaceStyle"
msgstr "IfcExternallyDefinedSurfaceStyle"

msgid "IfcExternallyDefinedSurfaceStyle_DEFINITION"
msgstr "[[IfcExternallyDefinedSurfaceStyle]] 是一个表面风格的定义，通过引用外部源，例如用于提供信息的材料库。 注： 为了取得预期结果，外部界定的表面风格通常只能在明确界定的表面风格之外提供。 IFC2x2. .change ifc2x3 IFC2x3 变异中的新实体 拼写已从IfcExternallyDefinedSuface样式改正，没有向上兼容性。"

#:IFC.xml:26237
msgid "IfcExternallyDefinedTextFont"
msgstr "IfcExternallyDefinedTextFont"

msgid "IfcExternallyDefinedTextFont_DEFINITION"
msgstr ".extDef 根据ISO CD 10303 46 1992定义的注解定义 外部定义的文本字体是指文本字体注的外部参照，可能通过实施指南暴露出对字体源和所使用的字体名称的限制。 注相应的 ISO 10303 名称是外部定义的文本字体。请参阅ISO IS 10303 46 1994, p. HISTORY New entity in IFC2x2 中的最后定义。"

#:IFC.xml:26241
msgid "IfcFillAreaStyle"
msgstr "IfcFillAreaStyle"

msgid "IfcFillAreaStyle_DEFINITION"
msgstr "An [[IfcFillAreaStyle]] provides the style table for presentation information assigned to annotation fill areas or surfaces for hatching and tiling. The [[IfcFillAreaStyle]] defines hatches as model hatches, that is, the distance between hatch lines, or the curve patterns of hatch lines are given in model space dimensions that have to be scaled using the target plot scale . The [[IfcFillAreaStyle]] allows for the following combinations of defining the style of hatching and tiling Solid fill for areas and surfaces by only assigning [[IfcColour]] to the set of FillStyles . It then provides the background colour for the filled area or surface. NOTE Color information of surfaces for rendering is assigned by using [[IfcSurfaceStyle]] , not by using [[IfcFillAreaStyle]] . Vector based hatching for areas and surfaces based on a single row of hatch lines by assigning a single instance of [[IfcFillAreaStyleHatching]] to the set of FillStyles . If an instance of [[IfcColour]] is assigned in addition to the set of FillStyles , it provides the background colour for the hatching. Vector based hatching for areas and surfaces based on two potentially crossing rows of hatch lines by assigning two instances of [[IfcFillAreaStyleHatching]] to the set of FillStyles. If an instance of [[IfcColour]] is assigned in addition to the set of FillStyles , it provides the background colour for the hatching. NOTE Assigning more then two instances of [[IfcFillAreaStyleHatching]] to define three or more rows of hatch lines is not encouraged. Tiling for areas and surfaces by assigning a single instance of [[IfcFillAreaStyleTiles]] to the set of FillStyles . If an instance of [[IfcColour]] is assigned in addition to the set of FillStyles , it provides the background colour for the tiling. Externally defined hatch style by assigning a single instance of [[IfcExternallyDefinedHatchStyle]] to the set of FillStyles . If an instance of [[IfcColour]] is assigned in addition to the set of FillStyles , it provides the background colour for the hatching. Measures given to a hatch or tile pattern are given in global drawing length units. NOTE Global units are defined at the single [[IfcProject]] instance, given by UnitsInContext [[IfcUnitAssignment]] , the same units are used for the geometric representation items and for the style definitions. The measure values for hatch or tile pattern apply to the model space with a target plot scale provided for the correct appearance in the default plot scale. For different scale and projection dependent fill area styles a different instance of [[IfcFillAreaStyle]] needs to be used by IfcPresentationStyleAssignment for different [[IfcGeometricRepresentationSubContext]] dependent representations. NOTE the target plot scale is given by [[IfcGeometricRepresentationSubContext]].TargetScale . An [[IfcFillAreaStyle]] can be assigned to IfcFillArea via the IfcPresentationStyleAssignment through an intermediate [[IfcStyledItem]] or subtype IfcAnnotationFillAreaOccurrence . .extDef NOTE Definition according to ISO CD 10303 46 1992 The style for filling visible curve segments, annotation fill areas or surfaces with tiles or hatches. NOTE Corresponding ISO 10303 name fill area style. Please refer to ISO IS 10303 46 1994 for the final definition of the formal standard. HISTORY New entity in IFC2x2. .deprecated DEPRECATION The use of [[IfcFillAreaStyleTiles]] is deprecated, as its definition might change is future releases."

#:IFC.xml:26242
msgid "IfcFillAreaStyle_FillStyles"
msgstr "FillStyles"

msgid "IfcFillAreaStyle_FillStyles_DEFINITION"
msgstr "用于呈现可见曲线部分、注解填充区域或表面的填充区域样式。"

#:IFC.xml:26247
msgid "IfcFillAreaStyle_ModelOrDraughting"
msgstr "ModelOrdraugh"

msgid "IfcFillAreaStyle_ModelOrDraughting_DEFINITION"
msgstr "说明为演示风格提供的长度计数是基于模型，还是基于绘图。更改ifc2x4 IFC4 变异新属性。正式Propositions"

#:IFC.xml:26254
msgid "IfcFillAreaStyleHatching"
msgstr "IfcFillAreaStyleHatching"

msgid "IfcFillAreaStyleHatching_DEFINITION"
msgstr "The [[IfcFillAreaStyleHatching]] is used to define simple, vector based hatching patterns, based on styled straight lines. The curve font, color and thickness is given by the HatchLineAppearance , the angle by the HatchLineAngle and the distance to the next hatch line by StartOfNextHatchLine , being either an offset distance or a vector. .extDef NOTE Definition according to ISO 10303 46 The fill area style hatching defines a styled pattern of curves for hatching an annotation fill area or a surface. NOTE If the hatch pattern involves two potentially crossing rows of hatch lines, then two instances of [[IfcFillAreaStyleHatching]] should be assigned to the [[IfcFillAreaStyle]] . Both share the same virtual point of origin of the hatching that is used by the reference hatch line or the PointOfReferenceHatchLine if there is an offset . For better control of the hatching appearance, when using hatch lines with other fonts then continuous, the PatternStart allows to offset the start of the curve font pattern along the reference hatch line if not given, the PatternStart is at zero distance from the virtual point of origin . If the reference hatch line does not go through the origin of the virtual hatching coordinate system , it can be offset by using the PatternStart . NOTE The coordinates of the PatternStart are given relative to the origin of the object coordinate of [[IfcAnnotationFillArea]] , or if present, the FillAreaTarget attribute of [[IfcAnnotationFillArea]] . The measure values are given in global drawing length units, representing a model hatching, and can be translated into drawing units by the TargetScale for a scale depended IfcGeometricRepresentationSubcontext , if provided. .deprecated DEPRECATION The use of PointOfReferenceHatchLine is deprecated. Figure 1 illustrates hatch attributes. Example 1 This example shows simple hatching given by using a curve font continuous at HatchLineAppearance. The distance of hatch lines is given by a positive length measure. The angle here 45 if measures in degree is provided by HatchLineAngle. The PatternStart is set to NIL in this example. Example 2 This shows hatching from example 1 with using a different curve font at HatchLineAppearance. The distance of hatch lines is given by a positive length measure, therefore the font pattern start is at a point at the next hatch line given by a vector being perpendicular to the point of origin at the reference hatch line. The PatternStart is set to NIL in this example. Example 3 This example uses hatching from example 2 with a vector to determine the pattern start of the next hatch lines. The pattern start is the beginning of the first visual curve font pattern segment at IfcCurveFont.CurveFont. The PatternStart is set to NIL in this example. Example 4 This example uses hatching from example 3 where the pattern start is offset from the point of origin at the reference hatch line. That is, the first visible curve font pattern segment now does not start at the point of origin at the reference hatch line. Example 5 This example uses hatching from example 4 where the hatch pattern is shifted against the underlying coordinate system. The point that is mapped to the insertion point of the IfcAnnotationFillAreaOccurrence now has an X and Y offset from the start of the reference hatch line. That is, the reference hatch line now does not go through the insertion point of the hatching. Example 6 This example shows use of [[IfcFillAreaStyleHatching]] attributes for two [[IfcFillAreaStyleHatching]] s within one [[IfcFillAreaStyle]]. Note that the PatternStart now displaces both the reference hatch line from the point of origin and the start of the curve pattern. This can be used in cases when more than one [[IfcFillAreaStyleHatching]] is used in an [[IfcFillAreaStyle]] in order to place rows of hatch lines with an offset from each other. Figure 1 Fill area style hatching NOTE Entity adapted from fill area style hatching defined in ISO10303 46 HISTORY New entity in IFC2x2. .change ifc2x3 IFC2x3 CHANGE The [[IfcFillAreaStyleHatching]] has been changed by making the attributes PatternStart and PointOfReferenceHatchLine OPTIONAL. The attribute StartOfNextHatchLine has changed to a SELECT with the additional choice of [[IfcPositiveLengthMeasure]] . Upward compatibility for file based exchange is guaranteed. .change ifc2x4 IFC4 CHANGE The attribute data type for StartOfNextHatchLine has been changed to be a select of [[IfcPositiveLengthMeasure]] and [[IfcVector]] ."

#:IFC.xml:11799
msgid "IfcFillAreaStyleHatching_PointOfReferenceHatchLine"
msgstr "PointOfReferenceHatchLine"

msgid "IfcFillAreaStyleHatching_PointOfReferenceHatchLine_DEFINITION"
msgstr "定义虚拟孵化坐标系起源参考线偏移的卡特塞点。 原产地用于绘制填充区域样式孵化到注解填充区域或表面的图表。 然后参考线将与填充风格目标点的这个偏移相抵。 如果没有给出参考网关线穿过虚拟网关坐标系统的起源。 Hange ifc2x3 IFC2x3 变异. 属性PointOfReferenceHatchLine的用法已改变为不提供作为制图来源的Cartesian点, 但提供映射来源的偏移量。 此属性已被设置为 OPTIONAL。"

#:IFC.xml:11811
msgid "IfcFillAreaStyleHatching_PatternStart"
msgstr "模式开始"

msgid "IfcFillAreaStyleHatching_PatternStart_DEFINITION"
msgstr "参考线沿线的距离，这是参考线曲线样式字体模式的起始点。 如果没有给出，曲线样式字体模式的起点是虚拟孵化坐标系统。 .更改ifc2x2 IFC2x2 Add2 变迁. 属性模式开始已经变成OPTIONAL."

#:IFC.xml:26156
msgid "IfcFillAreaStyleHatching_HatchLineAppearance"
msgstr "HatchLine外观"

msgid "IfcFillAreaStyleHatching_HatchLineAppearance_DEFINITION"
msgstr "孵化线的曲线风格。任何曲线风格模式都必须从每条线的起点开始。"

#:IFC.xml:26255
msgid "IfcFillAreaStyleHatching_HatchLineAngle"
msgstr "HatchLine角度"

msgid "IfcFillAreaStyleHatching_HatchLineAngle_DEFINITION"
msgstr "确定平行孵化线方向的平面角度测量。正式的比例"

#:IFC.xml:26260
msgid "IfcFillAreaStyleHatching_StartOfNextHatchLine"
msgstr "StartOfNextHatchLine"

msgid "IfcFillAreaStyleHatching_StartOfNextHatchLine_DEFINITION"
msgstr "决定毗邻线之间距离的重复系数。 系数可以由平行抵销定义或由[[IfcVector]] 提供的重复系数。 hange ifc2x3 IFC2x3 变异。StartOfNextHatchLine属性类型已更改为新的 [[IfcPositiveLengthMeasure]和IfcOneDirectionRepeactor 的SELECT 类型。 .更改 ifc2x4 IFC4 变迁. StartOfNextHatchLine 的属性类型已更改为新的 [[IfcPositiveLengthMeasure]] 和 [[IfcVector]] 的SELECT 类型。"

#:IFC.xml:26268
msgid "IfcFillAreaStyleTiles"
msgstr "IfcFillAreaStyleTiles"

msgid "IfcFillAreaStyleTiles_DEFINITION"
msgstr "[[IfcFillAreaStyleTiles]] 用反复出现的两维几何形状来定义一个[[IfcAnnotationFillArea]]的填充。 反复出现模式由两个矢量决定，以正常形式乘积瓦块。 这两种矢量起着两维重复系数的作用，它决定了八个倾斜的新位置。 根据ISO 10303 46 ，填充区域风格瓦片定义了填充填充区域或其他封闭区域所用的两维瓦片。 瓦片的内容由瓦片集定义。 和按照填充方式确定的每个瓦片的放置位置，表明如何将瓦片放置在彼此之间。 在注解填充区域或封闭区域以外的瓦片或部分瓦片必须剪切在该区域或区域。 .extDef I k 1 R 1 k 2 R 2 k 1 01, k 2 01, 公式. .. .. .. facfillatestilesymbolwards风格图1. 如果图1显示矢量用于挂线距离[[IfcFillAreaStyleTiles]] 图1.gif 12,9 KB。 .. .. .. 数字. ifcfilreastyletiles figure 1。 如果图1 两个矢量作为两个方向重复因子，从IOC2x2中ISO10303 46 HISTORY 新实体中定义的填充区域风格瓦片改装了注实体。 .更改ifc2x4 IFC4 变换图案已更改为两个[[IfcVector]] 的列表，并直接指[[IfcStyledItem]] 。"

#:IFC.xml:13423
msgid "IfcFillAreaStyleTiles_TilingPattern"
msgstr "TilingPattern"

msgid "IfcFillAreaStyleTiles_TilingPattern_DEFINITION"
msgstr "确定瓷砖形状和相对位置的两个方向重复系数。 挂机ifc2x4 IFC4 变换. 属性类型已更改为直接引用两个[[IfcVector]] s."

#:IFC.xml:26277
msgid "IfcFillAreaStyleTiles_Tiles"
msgstr "瓷块"

msgid "IfcFillAreaStyleTiles_Tiles_DEFINITION"
msgstr "一组瓷块的成分是一种样式物品，用作填充区域倾斜的注解符号。 .更改 ifc2x4 IFC4 变迁. 数据类型已更改为 [[IfcStyledItem]] 。 注： 只能使用IfcStyleites s表示兼容几何表示项和演示风格。"

#:IFC.xml:26269
msgid "IfcFillAreaStyleTiles_TilingScale"
msgstr "TilingScale"

msgid "IfcFillAreaStyleTiles_TilingScale_DEFINITION"
msgstr "缩放系数适用于每个瓦片放在注填充区域内。"

#:IFC.xml:26289
msgid "IfcFillStyleSelect"
msgstr "IfcFillStyleSelect"

#:IFC.xml:26290
msgid "IfcHatchLineDistanceSelect"
msgstr "IfcHatchLineDistance选择"

#:IFC.xml:26291
msgid "IfcImageTexture"
msgstr "IfcImageTexture"

msgid "IfcImageTexture_DEFINITION"
msgstr "An [[IfcImageTexture]] provides a 2 dimensional texture that can be applied to a surface of an geometric item and that provides lighting parameters of a surface onto which it is mapped. The texture is provided as an image file at an external location for which an URL is provided. The following definitions from ISO IEC 19775 1 X3D Architecture and base components X3D Specification http www.web3d.org x3d specifications apply Greyscale pixels without alpha or simple transparency are treated as intensity textures. Greyscale pixels with alpha or simple transparency are treated as intensity plus alpha textures. RGB pixels without alpha channel or simple transparency are treated as full RGB textures. RGB pixels with alpha channel or simple transparency are treated as full RGB plus alpha textures. If the image specifies colours as indexed colour that is, palettes or colourmaps , the following semantics should be used note that greyscale refers to a palette entry with equal red, green, and blue values 1. If all the colours in the palette are greyscale and there is no transparency chunk, it is treated as an intensity texture. 2. If all the colours in the palette are greyscale and there is a transparency chunk, it is treated as an intensity plus opacity texture. 3. If any colour in the palette is not grey and there is no transparency chunk, it is treated as a full RGB texture. 4. If any colour in the palette is not grey and there is a transparency chunk, it is treated as a full RGB plus alpha texture. Texture nodes that require support for JPEG files shall interpret JPEG files as follows 1. Greyscale files number of components equals 1 are treated as intensity textures. 2. YCbCr files are treated as full RGB textures. 3. No other JPEG file types are required. It is recommended that other JPEG files are treated as a full RGB textures. Texture nodes that recommend support for GIF files shall follow the applicable semantics described above for the PNG format. The Uniform Resource Locator URL is a form of an URI and specified in RFC1738 http www.ietf.org rfc rfc1738.txt number 1738 by IETF. It supports resources located on a particular server being accessed by a particular protocol usually http , and resources located at a local machine. NOTE Exchange files following the ifcZIP convention may include a sub directory structure for image resources to be stored together with the product data set. NOTE The definitions of texturing within this standard have been developed in dependence on the texture component of X3D. See ISO IEC 19775 1.2 2008 X3D Architecture and base components Edition 2, Part 1, 18 Texturing component for the definitions in the international standard. HISTORY New entity in IFC2x2."

#:IFC.xml:26292
msgid "IfcImageTexture_URLReference"
msgstr "URLReference"

msgid "IfcImageTexture_URLReference_DEFINITION"
msgstr "作为URI提供的位置，图像纹理以电子方式发布。"

#:IFC.xml:26299
msgid "IfcIndexedColourMap"
msgstr "IfcIndexedColourMap"

msgid "IfcIndexedColourMap_DEFINITION"
msgstr "The [[IfcIndexedColourMap]] provides the assignment of colour information to individual faces. It is used for colouring faces of tessellated face sets. The [[IfcIndexedColourMap]] defines an index into an indexed list of colour information. The Colours are a two dimensional list of colours provided by three RGB values. The ColourIndex attribute corresponds to the CoordIndex of the [[IfcTessellatedFaceSet]] defining the corresponding index list of faces. The Opacity attribute provides the alpha channel for all faces of the tessellated face set. Figure 1 shows the use of [[IfcTriangulatedFaceSet]] with colours per face. [[IfcIndexedColourMap]] 01 .. .. .. .. figures ifcindexedcolourmap fig1.png Figure 1 Indexed colour map Figure 2 illustrates an [[IfcTriangulatedFaceSet]] represented by [[IfcTriangulatedFaceSet]].CoordIndex 1,6,5 , 1,2,6 , 6,2,7 , 7,2,3 , 7,8,6 , 6,8,5 , 5,8,1 , 1,8,4 , 4,2,1 , 2,4,3 , 4,8,7 , 7,3,4 [[IfcCartesianPointList]].CoordList 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. [[IfcIndexedColourMap]].ColourIndex 1, 1, 2, 2, 3, 3, 1, 1, 1, 1, 1, 1, [[IfcColourRgbList]].ColourList 1.,0.,0. , 0.,1.,0. , 1.,1.,0. Figure 2 Indexed colour map geometry HISTORY New entity in IFC4."

#:IFC.xml:11148
msgid "IfcIndexedColourMap_MappedTo"
msgstr "MappedTo"

msgid "IfcIndexedColourMap_MappedTo_DEFINITION"
msgstr "引用它应用颜色和 alpha 通道的 [[IfcTessellatedFaceSet]] 。"

#:IFC.xml:26103
msgid "IfcIndexedColourMap_Colours"
msgstr "颜色"

msgid "IfcIndexedColourMap_Colours_DEFINITION"
msgstr "代表RGB 颜色的四重量列表可索引。"

#:IFC.xml:26300
msgid "IfcIndexedColourMap_ColourIndex"
msgstr "颜色索引"

msgid "IfcIndexedColourMap_ColourIndex_DEFINITION"
msgstr "索引为 [[IfcTriangulatedFaceSet]] 的每个面的 [[IfcColourRgbList]] 。颜色均适用于索引面."

#:IFC.xml:26305
msgid "IfcIndexedColourMap_Opacity"
msgstr "不透明度"

msgid "IfcIndexedColourMap_Opacity_DEFINITION"
msgstr "不透明度值适用于四色面设定的所有面。1。 意味着透明度为 0.0 完全透明。如果没有提供，则假定所有颜色都是不透明的。 注意不透明度的 Alpha 通道组件的定义遵循图像处理中的新定义，其中0。 表示完全透明，1.0或2位深度1意味着完全不透明。 这违反了[[IfcSurfaceStyleShading]] 中的透明度定义。"

#:IFC.xml:26312
msgid "IfcIndexedTextureMap"
msgstr "IfcIndexedTextureMap"

msgid "IfcIndexedTextureMap_DEFINITION"
msgstr "[[IfcIndexedTextureMap]] 提供了两维纹理坐标到绘图表面的绘图。 它用于绘制纹理到四色面套的脸面。 [[IfcIndexedTextureMap]] 将索引定义为索引的纹理坐标列表。 TexCoords是两个参数值提供的两维纹理坐标表。 子类型 [[IfcIndexedTextureMap]] 建立与子类型 [[IfcTessellatedFaceSet]] 对应的顶点索引列表的索引属性。 IFC4中的新实体。"

#:IFC.xml:11162
msgid "IfcIndexedTextureMap_MappedTo"
msgstr "MappedTo"

msgid "IfcIndexedTextureMap_MappedTo_DEFINITION"
msgstr "参考它应用纹理图的 [[IfcTessellatedFaceSet]] 。"

#:IFC.xml:26315
msgid "IfcIndexedTextureMap_TexCoords"
msgstr "TexCoords"

msgid "IfcIndexedTextureMap_TexCoords_DEFINITION"
msgstr "可索引纹理顶点列表。"

#:IFC.xml:26327
msgid "IfcIndexedTriangleTextureMap"
msgstr "IfcIndexedTriangleTextureMap"

msgid "IfcIndexedTriangleTextureMap_DEFINITION"
msgstr "The [[IfcIndexedTriangleTextureMap]] provides the mapping of the 2 dimensional texture coordinates to the surface onto which it is mapped. It is used for mapping the texture to triangles of the [[IfcTriangulatedFaceSet]] . The [[IfcIndexedTriangleTextureMap]] defines an index into an indexed list of texture coordinates. The TexCoordIndex is a two dimensional list, where first dimension is the unbounded list of faces corresponding to the list of triangles defined by CoordIndex at [[IfcTriangulatedFaceSet]] second dimension is the fixed list of three indices to texture vertices cooresponding to the fixed list of indices to vertices at [[IfcTriangulatedFaceSet]] The TexCoords defined at supertype [[IfcIndexedTextureMap]] are a two dimensional list of texture coordinates provided by two parameter values. Each index of the second dimension list of TexCoordIndex points to a texture vertex in TexCoords . Figure 1 shows the use of [[IfcTriangulatedFaceSet]] with textures. Figure 1 Indexed triangle texture map Figure 2 illustrates an [[IfcTriangulatedFaceSet]] represented by [[IfcTriangulatedFaceSet]].CoordIndex 1,6,5 , 1,2,6 , 6,2,7 , 7,2,3 , 7,8,6 , 6,8,5 , 5,8,1 , 1,8,4 , 4,2,1 , 2,4,3 , 4,8,7 , 7,3,4 [[IfcCartesianPointList]].CoordList 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. [[IfcIndexedTriangleTextureMap]].TexCoordsIndex 1 4 3 , 1 2 4 , 3 1 4 , 4 1 2 , 8 7 6 , 6 7 5 , 4 3 2 , 2 3 1 , 5 8 7 , 8 5 6 , 2 4 3 , 3 1 2 [[IfcTextureVertexList]].TexCoordsList 0. 0.5 , 1. 0.5 , 0. 1.5 , 1. 1.5 , 0. 0. , 0. 1. , 1. 0. , 1. 1. Figure 2 Indexed triangle texture map geometry HISTORY New entity in IFC4."

#:IFC.xml:26328
msgid "IfcIndexedTriangleTextureMap_TexCoordIndex"
msgstr "TexCoordIndex"

msgid "IfcIndexedTriangleTextureMap_TexCoordIndex_DEFINITION"
msgstr "代表[[IfcTriangulatedFaceSet]] 的三角形每个顶点的 [[IfcTextureVertexList]] 索引。"

#:IFC.xml:26335
msgid "IfcPixelTexture"
msgstr "IfcPixel纹理"

msgid "IfcPixelTexture_DEFINITION"
msgstr "一个 [[IfcPixelTexture]] 提供一个基于 2D 的图像基础纹理图，作为像素值列表的一个显式数组Pixel 二进制属性。 与[[IfcImageTexture]]相反，[[IfcPixelTexture]] 直接持有2维像素颜色和不透明度列表， 而不是引用到一个 URL。 以下定义来自ISO IEC 1975 1 X3D 建筑和基础构件X3D 规格http://www.web3d。 rg x3d规格适用。PixelTexture 节点定义一个基于2D的图像纹理图，它是一个明确的像素值图像字段数组和控制纹理在几何形状上重复的参数。 纹理地图定义在2D坐标系统s, t在两个方向都为0.0到1.0之间。 像素图像的底部边缘与纹理图的S 轴对应。 像素图像的左边缘和纹理图的 T 轴对应。 像素图像的左下像素与0.0、t 0相对应。 , 图像的右上像素对应于 s 1。 , t 1.0 . 图像字段指定了一个未压缩的2维像素图像。 图像字段包含三个整数，代表图像中组件的宽度、高度和数量 随后是表示图像中的像素的高度十六进制值。 像素值限制为256强度，即0x00 0xFF 十六进制。1。 一个组件图片指定一个字节十六进制值，代表图像的强度。 例如，0xFF 是十进制255的十六进制强度，十进制中0x00不是十进制的强度。 2. 两个组件图像指定了第一个高字节中的强度和第二个低字节中的阿尔法不透明度。 3. 三个组件图像中的像素指定第一个高字节中的红色组件， 其后是绿色和蓝色成分，例如，0xFF00是红色的，0x00FF00是绿色的，0x00FF 是蓝色。 4. 四个组件图像指定红色蓝色后的透明字节。 .，0x0000FF80 是半透明蓝色。值为 0 是完全透明的，FF是完全不透明的，80是半透明的。 请注意，Alpha 等于 1.0 透明度，如果Alpha 和透明度都在 0.0 到 1.0 之间。IFC2x2 中的HISTORY 新实体。"

#:IFC.xml:26336
msgid "IfcPixelTexture_ColourComponents"
msgstr "彩色组件"

msgid "IfcPixelTexture_ColourComponents_DEFINITION"
msgstr "指示像素值是否包含1、2、3或4色彩组件。"

#:IFC.xml:26341
msgid "IfcPixelTexture_Height"
msgstr "高度"

msgid "IfcPixelTexture_Height_DEFINITION"
msgstr "高度T 方向的像素数量。"

#:IFC.xml:26346
msgid "IfcPixelTexture_Pixel"
msgstr "像素"

msgid "IfcPixelTexture_Pixel_DEFINITION"
msgstr "十六进制数值的扁平列表，每个值描述1像素乘1、2、3或4个组件。 挂卡if2x3 IFC2x3 变换. 数据类型已从STRING改为BINARY. 正规Propositions"

#:IFC.xml:26351
msgid "IfcPixelTexture_Width"
msgstr "Width"

msgid "IfcPixelTexture_Width_DEFINITION"
msgstr "宽度S方向的像素数量。"

#:IFC.xml:26358
msgid "IfcPreDefinedColour"
msgstr "IfcPreDefinedColour"

msgid "IfcPreDefinedColour_DEFINITION"
msgstr "预定义的颜色决定了那些可用来识别目前数据交换规格范围内的颜色的合格名称，而其颜色规格则直接用其颜色构成部分来界定颜色。 注意相应的 ISO 10303 名称预定义颜色。它已经成为IFC 中的一个抽象实体。 关于正式标准的最后定义，请参阅ISO IS 10303 46 1994, p. 141 。"

#:IFC.xml:26362
msgid "IfcPreDefinedCurveFont"
msgstr "IfcPreDefinedCurveFont"

msgid "IfcPreDefinedCurveFont_DEFINITION"
msgstr ".extDef 根据ISO CD 10303 46 1992定义的注解定义 预先定义的曲线字体类型是一个用于定义应用程序特定曲线字体的抽象超级类型。 在应用程序协议中，名称标签应限于该应用程序协议中给曲线字体赋予特定含义的值。 注意到 [[IfcPreDefinedCurveFont]] 是一个抽象的实体， 它的子类型通过同意继承名称属性的值提供预定义曲线字体。 目前提供的唯一子类型是 [[IfcDraughtingPreDefinedCurveFont]] 。 注相应的 ISO 10303 名称预先定义的曲线字体。请参阅ISO IS 10303 46 1994, p. HISTORY New entity in IFC2x2 中的最后定义。"

#:IFC.xml:26366
msgid "IfcPreDefinedItem"
msgstr "IfcPreDefinedItem"

msgid "IfcPreDefinedItem_DEFINITION"
msgstr "预先定义的项目是指给样式或字体的限定名称，它是在数据交换规格内根据惯例在与外部定义的项目相反的情况下使用名称属性值确定的。 由外部来源议定。 注： 关于使用名称值的约定由子类型[[IfcPreDefinedItem]]定义，并且是规格的一部分。 注相应的 ISO 10303 名称预定义项。 关于正式标准的最后定义，请参阅ISO IS 10303 41 1994，第137页，IFC2x2中的新实体。"

#:IFC.xml:26367
msgid "IfcPreDefinedItem_Name"
msgstr "名称"

msgid "IfcPreDefinedItem_Name_DEFINITION"
msgstr "用来识别预定义项的字符串。可允许的字符串在子类型级别上声明。"

#:IFC.xml:26374
msgid "IfcPreDefinedTextFont"
msgstr "IfcPreDefinedTextFont"

msgid "IfcPreDefinedTextFont_DEFINITION"
msgstr "预先定义的文本字体决定了那些可用于当前数据交换规格范围内的字体的限定名称，而不是外部定义的字体。 IfcrughtingPreedTextFont对国际标准化组织IS10303 46 1994年旧矢量和单一空间文本的定义有两种选择。 [[IfcTextStyleFontModel]] 用于层层层样式表的定义，1 http www.w3。 rg TR REC CSS 1 目标空白，W3C Recommendation 17 December 1996, revised 11 Jan 1999, CSS 1, for all true type text. 使用 CSS 1 定义是表示文本字体的首选方式。注意相应的 ISO 10303 名称预先定义的文本字体。 关于正式标准的最后定义，请参阅ISO IS 10303 46 1994, p. 138 。 IFC2x2. 更改ifc2x3 IFC2x3 更改新实体 [[IfcTextStyleFontModel]] 已被添加为新子类型。"

#:IFC.xml:26378
msgid "IfcPresentationStyle"
msgstr "IfcPresentation风格"

msgid "IfcPresentationStyle_DEFINITION"
msgstr "[[IfcPresentationStyle]] 是分配给几何表示项的演示信息的风格表的抽象概括。 它包括曲线、地区、表面和文本的样式。样式信息可以包括颜色、挂接、渲染和文本字体。 不同的风格可以将长度测量作为带有安全单元的长度测量直接包括在内。 或间接作为相对于另一种长度尺度的比率。 它们可能适用于曲线图案、调线距离、文本间距和字体大小。 属性ModelOrDraughting决定了这些长度测量是作为模型还是作为拖拉测量的尺度。 示范措施，也称为规模依赖措施，界定距离， 在模型空间中，尺寸或其他长度尺度总是相同的，纸张上的距离尺寸或其他长度尺度取决于绘图尺度。 教育措施，也称为规模独立措施，界定距离， 如果在纸面上绘制，而不考虑地块尺寸或其他长度尺寸总是一样的。 [[IfcPresentationStyle]] 的每个子类型都通过中间的 [[IfcStyledItem]] 分配给[[IfcGeometricRepresentationItem]] s。 IFC2x3中的新实体。"

#:IFC.xml:26379
msgid "IfcPresentationStyle_Name"
msgstr "名称"

msgid "IfcPresentationStyle_Name_DEFINITION"
msgstr "演示样式的名称。"

#:IFC.xml:26409
msgid "IfcReflectanceMethodEnum"
msgstr "IfcReflectanceMethodenum"

msgid "IfcReflectanceMethodEnum_DEFINITION"
msgstr "[[IfcReflectanceMethodEnum]] 定义了可用的不同反射方法的范围。IFC2x2中的HISTORY 新枚举类型。 项目BLINN A 反射模型提供了一个平滑、略微薄的外观。 FLAT A 反射模型提供一种恒定颜色。该模型忽略了所有光源的影响。 GLASS A 反射模型，支持像反射特性和转化特性一样的玻璃的近似值。 MATT 一种反射模型，提供结核床外观。METAL 一种反射模型，提供一种光谱金属外观。 MIRROR A 反射模型通过射线跟踪支持二次镜像视图。 PHONG A反射模型符合Phong模型，其中反射反射方向对面平面的镜像方向最大反射。 PLASTIC A 反射模型提供了类似于Phong 模型的试样效果。 STRAUSS 一种基于一组有限控制参数的金属和非金属外观的反射模型。"

#:IFC.xml:26410
msgid "IfcReflectanceMethodEnum_BLINN"
msgstr "黑名单"

msgid "IfcReflectanceMethodEnum_BLINN_DEFINITION"
msgstr "一种反射模型，提供一个平滑、略微小的外观。"

#:IFC.xml:26411
msgid "IfcReflectanceMethodEnum_FLAT"
msgstr "球队"

msgid "IfcReflectanceMethodEnum_FLAT_DEFINITION"
msgstr "一种反射模型提供一种恒定颜色。该模型忽略了所有光源的影响。"

#:IFC.xml:26412
msgid "IfcReflectanceMethodEnum_GLASS"
msgstr "GLASS"

msgid "IfcReflectanceMethodEnum_GLASS_DEFINITION"
msgstr "一种反射模型，它支持具有反射性和转化性特性的玻璃类材料的近似值。"

#:IFC.xml:26413
msgid "IfcReflectanceMethodEnum_MATT"
msgstr "MATT"

msgid "IfcReflectanceMethodEnum_MATT_DEFINITION"
msgstr "一种提供结核床外观的反射模型。"

#:IFC.xml:26414
msgid "IfcReflectanceMethodEnum_METAL"
msgstr "铁水"

msgid "IfcReflectanceMethodEnum_METAL_DEFINITION"
msgstr "一种光学模型，提供光学金属外观。"

#:IFC.xml:26415
msgid "IfcReflectanceMethodEnum_MIRROR"
msgstr "摩托车"

msgid "IfcReflectanceMethodEnum_MIRROR_DEFINITION"
msgstr "通过射线跟踪支持次要视图的反射模型。"

#:IFC.xml:26416
msgid "IfcReflectanceMethodEnum_NOTDEFINED"
msgstr "未完成"

msgid "IfcReflectanceMethodEnum_NOTDEFINED_DEFINITION"
msgstr "未完成"

#:IFC.xml:26417
msgid "IfcReflectanceMethodEnum_PHONG"
msgstr "手机号码"

msgid "IfcReflectanceMethodEnum_PHONG_DEFINITION"
msgstr "一种符合Phong模型的反射模型，其反射方向与平面平面对面的反射方向中最大的反射。"

#:IFC.xml:26418
msgid "IfcReflectanceMethodEnum_PLASTIC"
msgstr "游戏"

msgid "IfcReflectanceMethodEnum_PLASTIC_DEFINITION"
msgstr "一种反射模型，提供类似于Phong模型的投影效果。"

#:IFC.xml:26419
msgid "IfcReflectanceMethodEnum_STRAUSS"
msgstr "STRAUSS"

msgid "IfcReflectanceMethodEnum_STRAUSS_DEFINITION"
msgstr "一种基于一组有限控制参数的金属和非金属外观的反射模型。"

#:IFC.xml:26421
msgid "IfcSizeSelect"
msgstr "IfcSizeSelect"

#:IFC.xml:26422
msgid "IfcSpecularHighlightSelect"
msgstr "IfcSpecularHighlightselect"

#:IFC.xml:26423
msgid "IfcStyledItem"
msgstr "Ifc样式项目"

msgid "IfcStyledItem_DEFINITION"
msgstr "[[IfcStyledItem]] 持有产品的演示风格信息 要么明确表示一个 [[IfcGeometricRepresentationItem]] 是分配给产品的 [[IfcShapeRepresentation]] 的一部分。 或者将演示信息分配给[[IfcMaterial]] 作为产品的其他代表。 如果在 [[IfcStyledItem]] 的参考范围内使用 [[IfcProductDefinitionShape]]，则应提供一个项目。 如果在 [[IfcStyledItem]] 的参考内使用 [[IfcMaterialDefinitionRepresentation]]，则不应提供任何项目。 .extdef Note Definition accordance with ISO CD 10303 46 1992. The stated items is a specific of style for presentation to a geometric representative items as is used in a representation. 注实体从IOC2x2中ISO10303 46. HISTORY New entity 定义的样式项目中改编。 挂机ifc2x2 IFC2x2 增编1 变异实体 [[IfcStyledItem]] 已成为非抽象并添加属性名称。 .更改ifc2x3 IFC2x3 变异. 属性项已被设置为可选的, 基于文件的交换的向上兼容性得到保证。 hange ifc2x4 IFC4 变异已删除 IfcAnnotationOccurrence 及其子类型。 所有实例都使用 [[IfcStyledItem]]。样式的数据类型已更改为IfcStyleAssignment。 头部使用定义 图1说明了两个使用示例的使用 [[IfcStyledItem]] 作为几何表示项目 作为材料定义的说明 新的 IfcStyleAssignmentSelection 允许直接作业风格， 例如[[IfcCurveStyle]] , [[IfcSurfaceStyle]] 不使用中间的 IfcPresentationStyleDelegation 2x4 示例 ... ... fcstyleditem figure 1.png 图1 样式项目"

#:IFC.xml:13030
msgid "IfcStyledItem_Item"
msgstr "项目"

msgid "IfcStyledItem_Item_DEFINITION"
msgstr "样式所指派的几何表示项。 挂机ifc2x2 IFC2x2 Add2 变换. 属性项已被设置为可选的. 基于文件的交换的更新兼容性已得到保证。"

#:IFC.xml:26397
msgid "IfcStyledItem_Styles"
msgstr "Styles"

msgid "IfcStyledItem_Styles_DEFINITION"
msgstr "分配给几何表示项或物质定义的代表形式。 挂卡ifc2x4 IFC4 变换. 数据类型已更改为IfcStyleAssignmentSelection with up compatibility for file based exchange. 注意只能从 IFC4 开始使用选中的项目 [[IfcPresentationStyle]] ，IfcPresentationStyleDelegation 已被废弃。"

#:IFC.xml:26424
msgid "IfcStyledItem_Name"
msgstr "名称"

msgid "IfcStyledItem_Name_DEFINITION"
msgstr "引用样式内容的单词或一组单词。正式建议"

#:IFC.xml:26431
msgid "IfcSurfaceSide"
msgstr "IfcSurface侧面"

msgid "IfcSurfaceSide_DEFINITION"
msgstr "[[IfcSurfaceSide]] 表示一个表层的正面还是双面是否都被引用。 从ISO10303 46 定义的表面改编的注类型。 1. 表面的正向相反方向超过从数学定义得出的表面正常方向的物项。 BOTH Both, positive and note."

#:IFC.xml:26432
msgid "IfcSurfaceSide_BOTH"
msgstr "BOTH"

msgid "IfcSurfaceSide_BOTH_DEFINITION"
msgstr "这两方面都是积极的，也是消极的。"

#:IFC.xml:26433
msgid "IfcSurfaceSide_NEGATIVE"
msgstr "NEGATIVE"

msgid "IfcSurfaceSide_NEGATIVE_DEFINITION"
msgstr "表面的正面比表面的正面从数学定义中得出的正面朝相反方向倾斜。"

#:IFC.xml:26434
msgid "IfcSurfaceSide_POSITIVE"
msgstr "帖子"

msgid "IfcSurfaceSide_POSITIVE_DEFINITION"
msgstr "帖子"

#:IFC.xml:26436
msgid "IfcSurfaceStyle"
msgstr "IfcSurface样式"

msgid "IfcSurfaceStyle_DEFINITION"
msgstr "[[IfcSurfaceStyle]] 是指将一个或多个表面风格元素分配给表面。 定义为子类型的 [[IfcSurface]] , [[IfcFaceBasedSurfaceModel]] , [[IfcShellBasedSurfaceModel]] , 或子类型的 [[IfcSolidModel]] 。 表面正常的积极方向与积极方面有关。 对于固体，则将固体外面视为正面。 注： 表面风格在渲染应用程序时常被称为材料定义。 注相对应的 ISO 10303 实体表面风格使用和表面侧风格。 关于正式标准的最后定义，请参阅ISO IS10303 46 1994。 关于支持渲染的表面风格定义已大大扩展到ISO IS10303 46的范围之外。 IFC2x中的新实体。"

#:IFC.xml:26437
msgid "IfcSurfaceStyle_Side"
msgstr "侧面"

msgid "IfcSurfaceStyle_Side_DEFINITION"
msgstr "显示哪一边的表面应用样式。"

#:IFC.xml:26442
msgid "IfcSurfaceStyle_Styles"
msgstr "Styles"

msgid "IfcSurfaceStyle_Styles_DEFINITION"
msgstr "不同表面风格的集合。正式建议"

#:IFC.xml:26449
msgid "IfcSurfaceStyleElementSelect"
msgstr "IfcSurface样式元素选择"

#:IFC.xml:26450
msgid "IfcSurfaceStyleLighting"
msgstr "IfcSurfaceStyleLighting"

msgid "IfcSurfaceStyleLighting_DEFINITION"
msgstr "[[IfcSurfaceStyleLighting]] 是用于计算与特定表面风格相关的物理精度的容器类。 图1显示了一个事件频道的反射和传输部分。 反射和传播部分的总值为1。 表示事件射线已完全分解为反射和传输部件。 因此，每个反射值和传播值都在0.0到1.0的范围内，物质反射元件……........数字如果表面照射属性图1。 如果图1 表面风格照明，所有这些因素都可以实物测量，并且是红色的比率， 绿灯和蓝灯部件。 这些属性在模型中定义为 IfcColorRGB 类型，每种颜色都有一个因数。 一个绿色玻璃只传送绿色光，所以其传输系数为0。 红色，绿色为0.0到1.0，蓝色为0.0。 绿色表面只反映绿色光，因此反射系数为0。 红色，0.0到1.0之间的绿色，0.0之间的蓝色。IFC2x2中的高新实体。"

#:IFC.xml:26035
msgid "IfcSurfaceStyleLighting_DiffuseTransmissionColour"
msgstr "散播颜色"

msgid "IfcSurfaceStyleLighting_DiffuseTransmissionColour_DEFINITION"
msgstr "传送光线的传播程度，在材料完全透明的情况下，不存在扩散问题。 扩散力越大，传输光的直接成分就越小，直到只产生散光的程度。 一个值意味着光线的彩色部分完全散布。 注： 该系数可通过实物测量，并具有光线的红色、绿色和蓝色部分的三个比率。"

#:IFC.xml:26047
msgid "IfcSurfaceStyleLighting_DiffuseReflectionColour"
msgstr "反射颜色"

msgid "IfcSurfaceStyleLighting_DiffuseReflectionColour_DEFINITION"
msgstr "反射光的传播程度：就光谱表面而言，并不存在扩散现象。 反射表面的扩散力越强， 反射光的光谱部件越小，直到只产生散光灯。 一个值意味着光线的彩色部分完全散布。 注： 该系数可通过实物测量，并具有光线的红色、绿色和蓝色部分的三个比率。"

#:IFC.xml:26059
msgid "IfcSurfaceStyleLighting_TransmissionColour"
msgstr "传输颜色"

msgid "IfcSurfaceStyleLighting_TransmissionColour_DEFINITION"
msgstr "描述一个身体上跌落的灯具是如何全部或部分传输的。 ot 该系数可以通过体质测量，并具有光线的红色、绿色和蓝色部分的三个比率。"

#:IFC.xml:26071
msgid "IfcSurfaceStyleLighting_ReflectanceColour"
msgstr "反射颜色"

msgid "IfcSurfaceStyleLighting_ReflectanceColour_DEFINITION"
msgstr "确定光落在表面上的程度的系数完全或部分反映出来。 注： 该系数可通过实物测量，并具有光线的红色、绿色和蓝色部分的三个比率。"

#:IFC.xml:26454
msgid "IfcSurfaceStyleRefraction"
msgstr "IfcSurfaceStyleReact"

msgid "IfcSurfaceStyleRefraction_DEFINITION"
msgstr "[[IfcSurfaceStyleRefraction]] 扩展表面风格照明， 或者通过添加少量使用的属性来计算物理纯光度的表面风格渲染定义。 目前这包括光线通过棱镜时的反射指数以及考虑到折射的波长依赖性的散射系数或Abbe常数。 注如果使用了这种反射属性。 根据渲染或照明是使用 [[IfcSurfaceStyleLighting]] 和 [[IfcSurfaceStyleRefraction]] 的实例，[[IfcSurfaceStyle]] 应在其样式集中包含， 或一个实例 [[IfcSurfaceStyleRendering]] 和 [[IfcSurfaceStyleRefraction]] 。 IFC2x2中的新实体。"

#:IFC.xml:26455
msgid "IfcSurfaceStyleRefraction_DispersionFactor"
msgstr "分散因子"

msgid "IfcSurfaceStyleRefraction_DispersionFactor_DEFINITION"
msgstr "以不同波长计算的材料的反射指数之间的固定比率。 低Abbe数字意味着高分散的能量。一般而言，这意味着突发频谱的更大角度分布。"

#:IFC.xml:26460
msgid "IfcSurfaceStyleRefraction_RefractionIndex"
msgstr "折射索引"

msgid "IfcSurfaceStyleRefraction_RefractionIndex_DEFINITION"
msgstr "所有波长光线的反射索引。 折射指数是真空光速与介质光速之间的比率。 例如，玻璃的折射指数为1.5，而水的折射指数为1.33。"

#:IFC.xml:26468
msgid "IfcSurfaceStyleRendering"
msgstr "IfcSurface风格渲染"

msgid "IfcSurfaceStyleRendering_DEFINITION"
msgstr "[[IfcSurfaceStyleRendering]] 持有与特定表面侧边样式相关的可视化属性。 它允许由颜色组件SurfaceColour 属性定义，从[[IfcSurfaceStyleShading]]继承透明度组件透明属性从 [[IfcSurfaceStyleShading]] 继承下来的反射组件。 给定的方法是将反射因子应用于表面彩色扩散组件SurfaceColour DiffuseFactor transmission component SurfaceColour TransmissionFactor diffuseTransmissionFactor reference component SurfaceColour ReflectionFactor specularFactor attributor attributor with SpecularHighlight 或 通过明确定义诸如颜色DiffuseColour, 传输颜色, DiffuseTransmissionColour , 反射颜色和 SpecularColour 一个置换部分，目前只能通过纹理类型块绘制的纹理图绘制覆盖面。 目前仅由纹理图2或4个组件彩色纹理的阿尔法组件给出. 继承属性Surface颜色被视为环境颜色, 并指定此表面应反映的光源环境光。 环境光线是无方向的，只取决于光源的数量，而不是其在表面上的位置。 注若[[IfcReflectanceMethodEnum]] 给定的反射方法为GLASS , 传输因子控制玻璃的透明度， 在这种情况下，透明度因素被解释为传输因素。 注如果同时包括透明性和传输性颜色或系数。 透明度是指一个半球2 PI sr的固体角度传输通量的比率。 它是一种简单的彩色滤镜，不能算作折射。 材料的传输因子是指特定固体角度的传输通量与同一固体角度100传输完全扩散材料的传输通量之比。 穿过材料并可能遭到反射的是光的那一部分。 注意到反射方程和关于表面风格属性及其处理的进一步信息， 见ISO IEC 14772 1 1997 IFC2x中的虚拟现实模式语言HISTORY 新实体。"

#:IFC.xml:26469
msgid "IfcSurfaceStyleRendering_DiffuseColour"
msgstr "散播颜色"

msgid "IfcSurfaceStyleRendering_DiffuseColour_DEFINITION"
msgstr "反射方程的扩散部分可以作为颜色或缩放因子给出。 散射色彩字段反映了所有光源，这取决于表面对光源的角度。 表面越是直接面对灯光，越是扩散光光反射。 扩散系数字段指明该表面所反映的光源的扩散光。 散射光取决于表面对光源的角度。 表面越直接面对光，光反射越多。传播颜色随后由表面颜色扩散系数来界定。"

#:IFC.xml:26474
msgid "IfcSurfaceStyleRendering_DiffuseTransmissionColour"
msgstr "散播颜色"

msgid "IfcSurfaceStyleRendering_DiffuseTransmissionColour_DEFINITION"
msgstr "反射方程的扩散传播部分可以作为颜色或缩放因子提供。 它只适用于透明领域大于零的材料。 散射传输颜色指明材料表面对面的散射光有多大。 扩散传输因子字段指明该表面在材料表面对面的光源的散射光。 然后由表面颜色扩散因素来界定传播性颜色。"

#:IFC.xml:26479
msgid "IfcSurfaceStyleRendering_ReflectanceMethod"
msgstr "反射方法"

msgid "IfcSurfaceStyleRendering_ReflectanceMethod_DEFINITION"
msgstr "识别预定义的反射方法类型，可以从中设置所需方法。"

#:IFC.xml:26484
msgid "IfcSurfaceStyleRendering_ReflectionColour"
msgstr "反射颜色"

msgid "IfcSurfaceStyleRendering_ReflectionColour_DEFINITION"
msgstr "反射方程的反射或反射部分可以作为颜色或缩写方程。 应用于玻璃和镜像反射模型。反射颜色指定镜像方向的光线做出的贡献。 反射因子指明镜从镜头方向光线做出的贡献数量。 反射颜色随后按表面颜色反射因子来界定。"

#:IFC.xml:26489
msgid "IfcSurfaceStyleRendering_SpecularColour"
msgstr "光谱颜色"

msgid "IfcSurfaceStyleRendering_SpecularColour_DEFINITION"
msgstr "反射方程的旁观部分可以是颜色或缩放因子。 光谱颜色决定了光谱亮点，例如苹果上的阴暗点……。 当从光线到表面的角度接近从表面到查看器的角度时， 旁观颜色添加到传播和环境色彩计算中。 旁观因素界定了旁观部分，然后由表面色光谱因素来界定光谱颜色。"

#:IFC.xml:26494
msgid "IfcSurfaceStyleRendering_SpecularHighlight"
msgstr "旁观高亮"

msgid "IfcSurfaceStyleRendering_SpecularHighlight_DEFINITION"
msgstr "试样反射的指数或粗略部分。"

#:IFC.xml:26499
msgid "IfcSurfaceStyleRendering_TransmissionColour"
msgstr "传输颜色"

msgid "IfcSurfaceStyleRendering_TransmissionColour_DEFINITION"
msgstr "反射方程的横向部分可以作为颜色或缩放因子给出。 它只适用于透明领域大于零的材料。 转动颜色字段指穿过横穿玻璃的颜色等跨材料的颜色。 转化因素确定了转化部分，转化性颜色随后由表面色转化因素来界定。"

#:IFC.xml:26506
msgid "IfcSurfaceStyleShading"
msgstr "IfcSurfaceStyleShading"

msgid "IfcSurfaceStyleShading_DEFINITION"
msgstr "[[IfcSurfaceStyleShading]] 允许用于阴影和简单渲染的彩色信息和透明度。 表面颜色用于对分配表面进行颜色涂色或简单阴影，并用于识别半透明性，哪里为0。 这是完全不透明的，1.0是完全透明的，IFC2x中的新实体。"

#:IFC.xml:26083
msgid "IfcSurfaceStyleShading_SurfaceColour"
msgstr "外观颜色"

msgid "IfcSurfaceStyleShading_SurfaceColour_DEFINITION"
msgstr "用于渲染表面的颜色。可视化的表面颜色通过指定红色、绿色和蓝色的强度来界定。"

#:IFC.xml:26507
msgid "IfcSurfaceStyleShading_Transparency"
msgstr "透明度"

msgid "IfcSurfaceStyleShading_Transparency_DEFINITION"
msgstr "透明度字段指定对象的清晰度，1.0完全透明，0.0完全不透明。如果未给出，则指定值 0。 假定不透明。 注： 1的定义是透明的，0的定义是透明的，与alpha频道中的定义相反，即0。 是完全透明的，1.0完全不透明。 此定义是由于与此标准的前几个版本的兼容性不同于[[IfcIndexedColourMap]] 中的定义。"

#:IFC.xml:26515
msgid "IfcSurfaceStyleWithTextures"
msgstr "IfcSurface风格纹理"

msgid "IfcSurfaceStyleWithTextures_DEFINITION"
msgstr "实体 [[IfcSurfaceStyleWithTextures]] 允许在表面风格中包含图像纹理 这些图像纹理可以在表面重复或在表面上以特定比例映射。 实体[[IfcSurfaceStyleWithTextures]] 是表面风格表的一部分，用于展示信息分配给表面，用于在纹理中投影、渲染和照亮。 表面或固体上的纹理绘图由纹理坐标决定； 在指派给每个表面纹理的 [[IfcTextureCoordinate]的异常情况下，将纹理默认映射到几何面或表面适用。 [[IfcSurfaceStyleWithTextures]] 中包含的地表纹理是两维地图格式。 他们定义了2D图像，其中包含描述纹理的彩色数组。 取决于IfcSurface纹理列表中所包含的 IfcSurface纹理数量，[[IfcSurfaceStyleWithTextures]] 要么描述一个单一纹理， 或多纹理. 单个纹理单个表面纹理完全或部分适用于样式几何形状项，但可选择重复，纹理变异多纹理两个或多个表面纹理完全或部分适用于样式几何形状项，但可选择重复， 纹理转换或纹理坐标映射是针对每个纹理的。 .spec头部非正式提议1。 只有一个 [[IfcSurfaceStyleWithTextures]] 实例可以被一个 [[IfcStyledItem]]引用并分配给一个 [[IfcGeometricRepresentationItem]] 。 在这个标准范围内的纹理定义是在依赖X3D 的纹理成分的情况下制定的。 见ISO IEC 197751。 2008 X3D Architecture and base components Edition 2, Part 1, 18 Texting component for the definitions in the international standard. IFC2x2. .change ifc2x3 IFC2x3 变异属性反向HasTextureCoordinates 已删除。"

#:IFC.xml:26519
msgid "IfcSurfaceStyleWithTextures_Textures"
msgstr "纹理"

msgid "IfcSurfaceStyleWithTextures_Textures_DEFINITION"
msgstr "适用于表面的纹理。如果包括一个以上的表面纹理，IfcSurfaceStyleWoodTexture 定义了多纹理."

#:IFC.xml:26533
msgid "IfcSurfaceTexture"
msgstr "IfcSurface纹理"

msgid "IfcSurfaceTexture_DEFINITION"
msgstr "An [[IfcSurfaceTexture]] provides a 2 dimensional image based texture map. It can either be given by referencing an external image file through an URL reference [[IfcImageTexture]] , including the image file as a blob long binary into the data set [[IfcBlobTexture]] , or by explicitly including an array of pixels [[IfcPixelTexture]] . The following definitions from ISO IEC 19775 1 X3D Architecture and base components X3D Specification http www.web3d.org x3d specifications apply Texture An image used in a texture map to create visual appearance effects when applied to geometry nodes. Texture map A texture plus the general parameters necessary for mapping the texture to geometry. Texture are defined by 2D images that contain an array of colour values describing the texture. The texture values are interpreted differently depending on the number of components in the texture and the specifics of the image format. In general, texture may be described using one of the following forms 1. Intensity textures one component 2. Intensity plus alpha opacity textures two component 3. Full RGB textures three component 4. Full RGB plus alpha opacity textures four component NOTE Image formats specify an alpha opacity, not transparency where alpha 1 transparency . Figure 1 illustrates the texture coordinate system. texture coordinates .. .. .. .. figures ifcsurfacetexture fig 1.png Figure 1 Surface texture coordinates The following definitions from ISO IEC 19775 1 X3D Architecture and base components X3D Specification http www.web3d.org x3d specifications on texture coordinates apply Texture maps are defined in a 2D coordinate system s, t that ranges from 0.0, 1.0 in both directions. The bottom edge of the image corresponds to the S axis of the texture map, and left edge of the image corresponds to the T axis of the texture map. The lower left pixel of the image corresponds to s 0, t 0, and the top right pixel of the image corresponds to s 1, t 1. Texture maps may be viewed as two dimensional colour functions that, given an s, t coordinate, return a colour value colour s, t . If multiple surface textures are included in the [[IfcSurfaceStyleWithTextures]] applying them to a geometric item, a mode and optional parameters can be included that blending operations. The RepeatS and RepeatT Boolean flags control whether the texture map is repeated outside the 0.0, 1.0 texture coordinate range, when applied to a geometric surface, or clamped to lie within the 0.0, 1.0 range. The TextureTransform applies a 2D non uniform transformation to the texture before it is applied to a geometric surface. The following definitions from ISO IEC 19775 1 X3D Architecture and base components X3D Specification http www.web3d.org x3d specifications apply These parameters support changes to the size, orientation, and position of textures on shapes. Note that these operations appear reversed when viewed on the surface of geometry. For example, a scale value of 2 2 will scale the texture coordinates and have the net effect of shrinking the texture size by a factor of 2 texture coordinates are twice as large and thus cause the texture to repeat . A translation of 0.5 0.0 translates the texture coordinates .5 units along the S axis and has the net effect of translating the texture 0.5 along the S axis on the geometry s surface. A rotation of π 2 of the texture coordinates results in a π 2 rotation of the texture on the geometry. The center field specifies a translation offset in texture coordinate space about which the rotation and scale fields are applied. The scale field specifies a scaling factor in S and T of the texture coordinates about the center point. scale values shall be in the range , . The rotation field specifies a rotation in radians of the texture coordinates about the center point after the scale has been applied. A positive rotation value makes the texture coordinates rotate counterclockwise about the centre, thereby rotating the appearance of the texture itself clockwise. The translation field specifies a translation of the texture coordinates. The following conventions apply center TextureTransform.LocalOrigin rotation TextureTransform.Axis1 scale S TextureTransform.Scale scale T TextureTransform.Scale2 NOTE The definitions of texturing within this standard have been developed in dependence on the texture component of X3D. See ISO IEC 19775 1.2 2008 X3D Architecture and base components Edition 2, Part 1, 18 Texturing component for the definitions in the international standard. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE Attribute TextureType replaces by Mode , attributes Parameter and MapsTo aded, new inverse attribute UsedInStyle ."

#:IFC.xml:11944
msgid "IfcSurfaceTexture_TextureTransform"
msgstr "纹理变换"

msgid "IfcSurfaceTexture_TextureTransform_DEFINITION"
msgstr "纹理转换定义了适用于纹理坐标的2D转换。 它影响了结构坐标应用于几何表示器表面的方式。 2D转换支持形状上纹理的大小、方向和位置的改变。 镜像不允许在 [[IfcCartesianTransformationOperator] ] 中使用"

#:IFC.xml:26519
msgid "IfcSurfaceTexture_UsedInStyles"
msgstr "UsedInStyles"

msgid "IfcSurfaceTexture_UsedInStyles_DEFINITION"
msgstr "UsedInStyles"

#:IFC.xml:26556
msgid "IfcSurfaceTexture_IsMappedBy"
msgstr "IsMappedBy"

msgid "IfcSurfaceTexture_IsMappedBy_DEFINITION"
msgstr "纹理坐标，要么由一个相应的纹理顶点与顶点几何元素的顶点列表提供，要么由纹理坐标生成器提供。 它将表面纹理应用于几何物件的表面。 .更改属性列表末尾添加的ifc2x4 IFC4 变异新属性。"

#:IFC.xml:26534
msgid "IfcSurfaceTexture_Mode"
msgstr "模式"

msgid "IfcSurfaceTexture_Mode_DEFINITION"
msgstr "提供模式属性以控制多纹理的外观。然后控制混合操作的类型。 模式包括照明外观模式、无照外观模式和两者的变体。 注意模式属性的适用值由视图定义或实现者协议决定。 建议使用ISOI 197751 2008 X3D Architecture and basic components Edition 2, Part 1中所述的模式。 见18.4.3 MultiTexture http www.web3d.org x3d 规格ISO IEC 1975 1。 X3D AbstractProfile Part01组件纹理. MultiTexture for recommended value.change ifc2x4 IFC4 CHANGE New attributure 取代先前的纹理类型。"

#:IFC.xml:26539
msgid "IfcSurfaceTexture_Parameter"
msgstr "参数"

msgid "IfcSurfaceTexture_Parameter_DEFINITION"
msgstr "参数属性用于控制多纹理的外观。适用参数取决于模式属性的值。 注意参数属性列表的适用值由视图定义或实现协议决定。 建议使用国际标准化组织（ISO）1975 1中所述的源和函数字段。 2008 X3D Architecture and Basic components Edition 2, Part 1, See 18.4。 MultiTexture htture www.web3d.org x3d 规格ISO IEC 19775 1.2 X3D AbstractPro规格Part01组件纹理.html. MultiTexture for recommended values. 按照惯例，参数1随后应持有源值，参数2应具有函数值。 参数 3 用于选择操作的基本RGB 颜色，参数 4 用于选择操作的 Alpha 值。 .更改属性列表末尾添加的ifc2x4 IFC4 变异新属性。"

#:IFC.xml:26544
msgid "IfcSurfaceTexture_RepeatS"
msgstr "重复"

msgid "IfcSurfaceTexture_RepeatS_DEFINITION"
msgstr "重复字段指定纹理如何在S 方向包装。 如果重复是默认的 TRUE ，纹理图将会在 0.0, 1 之外重复。 纹理坐标范围在S 方向上, 以便填充形状。 如果重复率为 FALSE，纹理坐标会被夹在S方向，位于0.0、1.0范围内。"

#:IFC.xml:26549
msgid "IfcSurfaceTexture_RepeatT"
msgstr "重复"

msgid "IfcSurfaceTexture_RepeatT_DEFINITION"
msgstr "重复字段指定纹理如何在 T 方向包装。 如果重复是默认的 TRUE ，纹理图将会在 0.0, 1 之外重复。 纹理坐标范围在 T 方向上，以便它填充形状。 如果重复使用FALSE，纹理坐标会被夹在T方向，位于0.0、1.0范围内。"

#:IFC.xml:26570
msgid "IfcTextFontSelect"
msgstr "IfcTextFontselect"

#:IFC.xml:26571
msgid "IfcTextStyle"
msgstr "IfcTextStyle"

msgid "IfcTextStyle_DEFINITION"
msgstr "[[IfcTextStyle]] 是一个将文本放入模型空间的注释的展示风格。 [[IfcTextStyle]] 提供了指派给[[IfcTextLiteral]] s的演示信息的文本风格。 风格由颜色、文本字体特性和文本框特性来定义。 一个 [[IfcTextStyle]] 用Textcharacter外观 [[IfcTextStyleForDefinedFont]] TextStyle [[IfcTextStyleTextModel]] TextFontStyle [[IfcTextStyleFontModel]] 一个 [[IfcTextStyle]] 通过[[IfcStyledItem]] 实体分配给[[IfcTextLiteral]] 。 来自字体属性字体类、字体样式、字体变量、字体重、字体大小、颜色和背景属性颜色的注实体， 背景颜色和文字属性字间距，字母间距，文本装饰，文本转换，文本对齐，文本缩进，CSS1定义的行高度。 ... 参考书目。 tm CSS1 。IFC2x2中的新实体。 Hange ifc2x3 IFC2x3 变异[[IfcTextStyle]] 已被更改，添加TextFontStyle 和 IfcTextCharacter外观的不同数据类型。 .更改ifc2x4 IFC4 变异[[IfcTextStyle]] 已经通过删除基于矢量的旧文本风格定义而简化。"

#:IFC.xml:26584
msgid "IfcTextStyle_TextCharacterAppearance"
msgstr "TextCharacter外观"

msgid "IfcTextStyle_TextCharacterAppearance_DEFINITION"
msgstr "用于显示文本的字符风格。已删除了 ifc2x4 IFC4 变异异选择类型IfcCharacterStyleSelect。"

#:IFC.xml:26596
msgid "IfcTextStyle_TextStyle"
msgstr "TextStyle"

msgid "IfcTextStyle_TextStyle_DEFINITION"
msgstr "此样式适用于文本块的视觉外观。 挂载ifc2x3 IFC2x3 变异。TextBlockStyle 属性已从SET 1更改为非聚合可选，并重命名为 TextStyles 。 .更改ifc2x4 IFC4 变换已经删除 IfcTextStyleWidBoxcharacteristics 和现在多余的选择类型 IfcTextStyleSelect 。"

#:IFC.xml:26572
msgid "IfcTextStyle_ModelOrDraughting"
msgstr "ModelOrdraugh"

msgid "IfcTextStyle_ModelOrDraughting_DEFINITION"
msgstr "说明为演示风格提供的长度测量是以模型为基础还是以绘图为基础。ifc2x4 IFC4 变异新属性。"

#:IFC.xml:26577
msgid "IfcTextStyle_TextFontStyle"
msgstr "TextFontStyle"

msgid "IfcTextStyle_TextFontStyle_DEFINITION"
msgstr "用于视觉外观的文本字体样式。它定义了字体类、字体样式、重量和大小。 .更改ifc2x2 IFC2x2 Add2 变迁. TextFontStyle 是一个新的属性，附于[[IfcTextStyle]] 。"

#:IFC.xml:26608
msgid "IfcTextStyleFontModel"
msgstr "IfcTextStyleFontModel"

msgid "IfcTextStyleFontModel_DEFINITION"
msgstr ".extDef Definition according to W3C for Cascading Style Sheets Setting font properties will be among the most common uses of style sheets. Unfortunately, there exists no well defined and universally accepted taxonomy for classifying fonts, and terms that apply to one font family may not be appropriate for others. For example, italic is commonly used to label slanted text, but slanted text may also be labeled as being Oblique , Slanted , Incline , Cursive or Kursiv . Therefore it is not a simple problem to map typical font selection properties to a specific font. .extDef Font matching Because there is no accepted, universal taxonomy of font properties, matching of properties to font faces must be done carefully. The properties are matched in a well defined order to ensure that the results of this matching process are as consistent as possible across user agents assuming that the same library of font faces is presented to each of them . 1. The user agent makes or accesses a database of relevant CSS1 properties of all the fonts of which the UA is aware. The UA may be aware of a font because it has been installed locally or it has been previously downloaded over the web. If there are two fonts with exactly the same properties, one of them is ignored. 2. At a given element and for each character in that element, the UA assembles the font properties applicable to that element. Using the complete set of properties, the UA uses the font family property to choose a tentative font family. The remaining properties are tested against the family according to the matching criteria described with each property. If there are matches for all the remaining properties, then that is the matching font face for the given element. 3. If there is no matching font face within the font family being processed by step 2, and if there is a next alternative font family in the font set, then repeat step 2 with the next alternative font family . 4. If there is a matching font face, but it doesn t contain a glyph for the current character, and if there is a next alternative font family in the font sets, then repeat step 2 with the next alternative font family . 5. If there is no font within the family selected in 2, then use a UA dependent default font family and repeat step 2, using the best match that can be obtained within the default font. The above algorithm can be optimized to avoid having to revisit the CSS1 properties for each character. The per property matching rules from 2 above are as follows 1. font style is tried first. italic will be satisfied if there is either a face in the UA s font database labeled with the CSS keyword italic preferred or oblique . Otherwise the values must be matched exactly or font style will fail. 2. font variant is tried next. normal matches a font not labeled as small caps small caps matches 1 a font labeled as small caps , 2 a font in which the small caps are synthesized, or 3 a font where all lowercase letters are replaced by upper case letters. A small caps font may be synthesized by electronically scaling uppercase letters from a normal font. 3. font weight is matched next, it will never fail. See font weight below. 4. font size must be matched within a UA dependent margin of tolerance. Typically, sizes for scalable fonts are rounded to the nearest whole pixel, while the tolerance for bitmapped fonts could be as large as 20 . Further computations, are based on the font size value that is used, not the one that is specified. The inherited Name attribute is used to define the font name, particularly in cases, where no list of font families are provided. NOTE Corresponding CSS1 definitions are Font properties font family , font style , font variant , font weight . HISTORY New entity in IFC2x3."

#:IFC.xml:26609
msgid "IfcTextStyleFontModel_FontFamily"
msgstr "字体类"

msgid "IfcTextStyleFontModel_FontFamily_DEFINITION"
msgstr "其价值是一个优先顺序列出的字体姓氏或通用姓氏清单。 第一个列表条目具有最高优先级，如果这个字体失败，必须使用下一个列表项。 如果可能，最后一个列表项应该是一个通用类。ifc2x4 IFC4 变异属性更改为强制性的。"

#:IFC.xml:26614
msgid "IfcTextStyleFontModel_FontSize"
msgstr "FontSize"

msgid "IfcTextStyleFontModel_FontSize_DEFINITION"
msgstr "字体大小提供文本字体的大小或高度. 注意以下值是允许的，[[IfcLengthMeasure]] 具有正值，长度单位是全局定义的 [[IfcUnitAssignment]] 。 正式建议"

#:IFC.xml:26619
msgid "IfcTextStyleFontModel_FontStyle"
msgstr "FontStyle"

msgid "IfcTextStyleFontModel_FontStyle_DEFINITION"
msgstr "字体样式属性在一个字体类中通常被称作罗马或直线、斜体和模糊面之间进行选择。"

#:IFC.xml:26624
msgid "IfcTextStyleFontModel_FontVariant"
msgstr "字体变量"

msgid "IfcTextStyleFontModel_FontVariant_DEFINITION"
msgstr "字体变量属性在普通和小上限之间选择。注意它是为了以后遵守完整的 CSS 1支持。"

#:IFC.xml:26629
msgid "IfcTextStyleFontModel_FontWeight"
msgstr "字体重量"

msgid "IfcTextStyleFontModel_FontWeight_DEFINITION"
msgstr "字体重属性选择字体的重量。 为了以后遵守全面的CSS1支助，引入了其他当时正常和大胆的注值。"

#:IFC.xml:26636
msgid "IfcTextStyleForDefinedFont"
msgstr "IfcTextStyleForDefinedFont"

msgid "IfcTextStyleForDefinedFont_DEFINITION"
msgstr "文字字体颜色与可选背景颜色相结合的 [[IfcTextStyleForDefinedFont]] 这将填充由平面字段定义的文本框。 。级层样式表的 W3C 定义。这些属性描述了通常称为前景色的颜色和元素的背景，即： 内容呈现到的表面。可以设置背景颜色。 注对应的 CSS 定义是颜色和背景属性颜色，背景颜色。 IFC2x3中的HISTORY 新实体。.change ifc2x3 IFC2x3 变异[[IfcTextStyleForDefinedFont]] 已被添加并替换 [[IfcColour]] 在 IfcCharacter样式选择 。"

#:IFC.xml:26637
msgid "IfcTextStyleForDefinedFont_BackgroundColour"
msgstr "背景颜色"

msgid "IfcTextStyleForDefinedFont_BackgroundColour_DEFINITION"
msgstr "此属性设置元素的背景颜色。"

#:IFC.xml:26642
msgid "IfcTextStyleForDefinedFont_Colour"
msgstr "颜色"

msgid "IfcTextStyleForDefinedFont_Colour_DEFINITION"
msgstr "此属性描述了通常称为前景色的元素的文本颜色。"

#:IFC.xml:26649
msgid "IfcTextStyleTextModel"
msgstr "IfcTextStyleTextModel"

msgid "IfcTextStyleTextModel_DEFINITION"
msgstr "[[IfcTextStyleTextModel]] 融合了所有文本风格属性，这些属性会影响文本在特定范围内的文字。 它包括字符和词之间的间隔，范围内平面框内文本的横向和纵向对齐。 装饰像下划线 ，像大写一样转换字幕，以及多行文本块中每行的高度。 .extDef 定义根据级层样式表的 W3C 空格、字和段落。 相应的 CSS 1 定义是文本属性字段间距、字母间距、文本装饰、垂直对齐、文本转换、文本对齐、文本缩进、行高度。 IFC2x3中的新实体。"

#:IFC.xml:26650
msgid "IfcTextStyleTextModel_LetterSpacing"
msgstr "字母间距"

msgid "IfcTextStyleTextModel_LetterSpacing_DEFINITION"
msgstr "长度单位表示添加默认字符间距。 数值可能是负数，但可能有实现的特定限制。导入应用程序可以自由选择确切的间隔算法。 字母间距也可能受到文字对齐属性值的合理性的影响。 注意以下值是允许的，[[IfcDescriptiveMeasure]] 值正常，[[IfcRatioMeasure]] ， 或 [[IfcLengthMeasure]] , 长度单位是全局定义的 [[IfcUnitAssignment]] 。"

#:IFC.xml:26655
msgid "IfcTextStyleTextModel_LineHeight"
msgstr "直线高度"

msgid "IfcTextStyleTextModel_LineHeight_DEFINITION"
msgstr "该财产确定了两个相邻线路基线之间的距离。 当指定比率值时，行高度由当前元素的字体大小乘以数值。 普通值将元素字体的行高度设置为合理值。 有人建议导入应用程序将正常值设为1.0至1.2。 注： 以下值是允许的 [[IfcDescriptiveMeasure]] 值正常，或 [[IfcLengthMeasure]] ， 对于非负值，长度单位是全局定义的 [[IfcUnitAssignment]] 或[[IfcRatioMeasure]] 。"

#:IFC.xml:26660
msgid "IfcTextStyleTextModel_TextAlign"
msgstr "TextAlign"

msgid "IfcTextStyleTextModel_TextAlign_DEFINITION"
msgstr "此属性描述了文本如何在元素内水平对齐。所使用的实际解释算法取决于渲染算法。"

#:IFC.xml:26665
msgid "IfcTextStyleTextModel_TextDecoration"
msgstr "文字装饰"

msgid "IfcTextStyleTextModel_TextDecoration_DEFINITION"
msgstr "此属性描述添加到元素文本中的装饰。"

#:IFC.xml:26670
msgid "IfcTextStyleTextModel_TextIndent"
msgstr "文本缩进"

msgid "IfcTextStyleTextModel_TextIndent_DEFINITION"
msgstr "该属性指定了第一个格式化行前出现的缩进。注意它已被引入，以供以后遵守全面的 CSS 支持。"

#:IFC.xml:26675
msgid "IfcTextStyleTextModel_TextTransform"
msgstr "文本转换"

msgid "IfcTextStyleTextModel_TextTransform_DEFINITION"
msgstr "此属性描述了文本字符如何转换为大写，小写。 或资本化的情况，独立于文字中所用的字符案例。 注： 这是为了以后遵守CSS 的全面支持。"

#:IFC.xml:26680
msgid "IfcTextStyleTextModel_WordSpacing"
msgstr "单词间距"

msgid "IfcTextStyleTextModel_WordSpacing_DEFINITION"
msgstr "长度单位表示在单词之间的默认空间添加。值可能是负的，但可能有实现的特定限制。 导入应用程序可以自由选择确切的间隔算法。 字段间距也可能受到理由的影响，而理由是财产对齐的价值。 注： 这是为了以后遵守CSS 的全面支持。"

#:IFC.xml:26687
msgid "IfcTextureCoordinate"
msgstr "IfcTextureCoordinate"

msgid "IfcTextureCoordinate_DEFINITION"
msgstr "[[IfcTextureCoordinate]] 是不同类型的抽象超级类型，可以将纹理坐标应用于几何形状。 对于基于顶点的几何形状，子类型 [[IfcTextureMap]] 支持将2D 纹理顶点明确分配到3D 几何点。 此外，还可以对结构坐标如何应用于几何物项作程序性说明。 如果没有为[[IfcSurfaceTexture]] 提供[[IfcTextureCoordinate]] , 则必须使用默认映射。 注意请参阅相关子类型[[IfcGeometricRepresentationItem]] 的默认纹理映射说明。 注：结构化定义已从X3D结构和基本部件改编，标准化组织IEC 1975 1所界定的第18节文字构件。 在 IFC2x2. 更改ifc2x3 IFC2x3 变迁中的新实体 属性纹理已删除。 hange ifc2x4 IFC4 变异。注释表面属性已删除，属性地图已添加。"

#:IFC.xml:26556
msgid "IfcTextureCoordinate_Maps"
msgstr "地图"

msgid "IfcTextureCoordinate_Maps_DEFINITION"
msgstr "指一个或多个具有身份转换的多纹理，其子类型为[[IfcSurfaceTexture]] 的几何表面子类型，通过纹理坐标转换映射到几何表面。"

#:IFC.xml:26690
msgid "IfcTextureCoordinateGenerator"
msgstr "IfcTextureCoordinateGenerator"

msgid "IfcTextureCoordinateGenerator_DEFINITION"
msgstr "[[IfcTextureCoordinateGenerator]] 描述了一个程序定义的映射功能，带有输入参数来映射2D 纹理坐标到3D 几何顶点。 允许的模式值和输入参数需要在视野定义和实施者协议中商定。 注： 建议使用X3D中定义的纹理坐标生成模式。 xtDef Note Definition Definition according ISO IEC 1975 1 The TextureCoordinateGenerator支持自动生成几何形状纹理坐标。 模式字段描述用于计算纹理坐标的算法。 .std SPHERE, CAMERASPACENORMAL, CAMERASPACEPOSTITION, SPHERE LOCAL, COORD EYE, NOISE, NOISE EYE, SPHERE REFECT, 本标准内的纹理定义是在依赖X3D的纹理成分的情况下制定的。 见国际标准化组织IEC 1975 1.2 2008 X3D Architecture and base components Edition 2, Part 1, 18 Texting component for the definitions in the international standard. 在 IFC2x2. .change ifc2x2 IFC2x2 Add2 变异中的新实体 属性纹理已被删除。"

#:IFC.xml:26691
msgid "IfcTextureCoordinateGenerator_Mode"
msgstr "模式"

msgid "IfcTextureCoordinateGenerator_Mode_DEFINITION"
msgstr "模式属性描述用于计算纹理坐标的算法。 注意模式属性的适用值由视图定义或实现者协议决定。 建议使用国际标准化组织（ISO）1975 1中所述的模式。 2008 X3D Architecture and base components Edition 2, Part 1, See 18.4.8 TextureCoordinateur http www.web3d. rg x3d 规格ISO IEC 19775 1.2 X3D AbstractPro规格Part01组件纹理. Texturing.html TextureGenerator for recommended values."

#:IFC.xml:26696
msgid "IfcTextureCoordinateGenerator_Parameter"
msgstr "参数"

msgid "IfcTextureCoordinateGenerator_Parameter_DEFINITION"
msgstr "根据模式指定的函数作为参数使用的参数。.change ifc2x4 IFC4 变异数据类型仅限REAL。"

#:IFC.xml:26703
msgid "IfcTextureMap"
msgstr "IfcTextureMap"

msgid "IfcTextureMap_DEFINITION"
msgstr "一个 [[IfcTextureMap]] 提供了将两维纹理坐标绘图到它被映射到的表面的绘图。 它用于绘制纹理至顶点几何模型表面的图形 例如[[IfcFacetedBrep]] [[IfcFacetedBrepWithVoids]] [[IfcFaceBasedSurfaceModel]] [[IfcShellBasedSurfaceModel]] [[IfcTextureMap]] 有一个文本顶点列表 , 这与基于顶点的几何元素的外部约束点相对应。 相应的列表是 1. [[IfcFaceOuterBound]] 类型的 [[IfcCartesianPoint]] 的多边形列表和 2。 类型 [[IfcTextureVertex]] 的惯性列表 每一个 [[IfcTextureVertex]] 为 S, 2尺寸纹理坐标系统的 T 坐标对应于给定为 3 尺寸X 的 [[IfcCartesianPoint]的几何坐标 Y和Z坐标在几何物项的物体坐标系统内。 xtDef NotE Definition according by ISO IEC 1975 1 纹理坐标是一个几何属性节点，该节点指定了一套2D 纹理坐标，用于顶点几何节点映射纹理至顶点。 注意与基于X3D的几何形状相反，如IndexedFacebook Set 和 ElevationGrid，IFC 中基于文本的几何形状可能包括内环。 内环区域必须从适用于外环的纹理中切除。 图1说明了对基于顶点的几何形状适用纹理图。 图1 IFC2x2中的纹理图表HISTORY 新实体。更改ifc2x3 IFC2x3 变异。属性纹理已删除，属性纹理图添加。 .更改ifc2x4 IFC4 变迁。属性纹理图被Vertices 替换，属性AppliedTo 被添加。 .spec头部非正式提议1。 AppliedTo 中引用的 [[IfcFace]]将被基于顶点的几何形状所使用 通过[[IfcStyledItem]] 将这个纹理地图分配给哪个纹理图。"

#:IFC.xml:26706
msgid "IfcTextureMap_Vertices"
msgstr "惯性"

msgid "IfcTextureMap_Vertices_DEFINITION"
msgstr "纹理坐标顶点列表，这些顶点应用于定义面绑定的多边环形对应点。"

#:IFC.xml:26718
msgid "IfcTextureMap_MappedTo"
msgstr "MappedTo"

msgid "IfcTextureMap_MappedTo_DEFINITION"
msgstr "正面界定了沿正面外径圈的对应点清单。 注意脸部可能有额外的内部循环。 [[IfcTextureMap]] 及其惯性只对应于代表外径的IfcPolyloop坐标。"

#:IFC.xml:26732
msgid "IfcTextureVertex"
msgstr "IfcTextureVertex"

msgid "IfcTextureVertex_DEFINITION"
msgstr "一个 [[IfcTextureVertex]] 是一个 2 S, T 纹理坐标的列表。 xtDef NotE Definition according ISO IEC 1975 1 每个基于顶点的几何节点使用一组2D 纹理坐标，将纹理映射到顶点。 纹理图值图像纹理，像素纹理范围介于0之间。 , 1.0 沿着S轴和T 轴。然而，纹理坐标值可能在范围内。 纹理坐标能够识别某个位置，从而在纹理图中显示一个彩色值。 首先指定水平坐标S，然后是垂直坐标T。 如果纹理图在给定的方向S 轴或T 轴中重复， 纹理坐标C s或t 映射成纹理图，其方向为N 像素，如下纹理图表位置C楼C N 。 xtDef 如果不重复纹理图，纹理坐标会被夹在0上。 到 1.0 范围如下的纹理映射位置 N，如果C 1.0, 0.0, 如果C 0.0, C N, 如果是 0.0 C 1.0。 可以通过提供作为纹理定义组成部分的纹理变换来改变注纹理坐标的缩放、旋转和翻译。 IFC2x2中的新实体。"

#:IFC.xml:26733
msgid "IfcTextureVertex_Coordinates"
msgstr "坐标"

msgid "IfcTextureVertex_Coordinates_DEFINITION"
msgstr "第一个坐标 2 是 S，第二个坐标 2 是 T 参数值。"

#:IFC.xml:26740
msgid "IfcTextureVertexList"
msgstr "IfcTextureVertexList"

msgid "IfcTextureVertexList_DEFINITION"
msgstr "[[IfcTextureVertexList]] 定义了一系列有序的纹理顶点。 每个纹理顶点是由两个纹理坐标的固定列表提供的两维顶点。 TexCoordsList 属性是一个两维列表 在第一维度是一个无界限列表代表每个纹理顶点第二维度是一个由两个成员组成的固定列表， 其中1是S坐标，2是纹理顶点的T坐标。 注: [[IfcTextureVertexList]] 是为了简洁地表示四边形图纹理图的纹理坐标。 IFC4中的新实体。"

#:IFC.xml:26741
msgid "IfcTextureVertexList_TexCoordsList"
msgstr "TexCoordsList"

msgid "IfcTextureVertexList_TexCoordsList_DEFINITION"
msgstr "由 S 坐标和T 坐标定义的纹理顶点列表。"

#:IFC.xml:26791
msgid "IfcFontStyle"
msgstr "IfcFontStyle"

msgid "IfcFontStyle_DEFINITION"
msgstr "[[IfcFontStyle]] 类型定义了是否必须使用字体类中的普通面、斜体或边框。 值为普通斜体值 。 xtDef 注释定义根据级联样式表单， 等级 1 通常选择一个在用户代理人字体数据库中被分类为正常的字体。 当选中一个标记为隐藏的字体时，请选择一个字体。 斜体值选择标签为斜体的字体, 如果不可用, 则选择标签为斜体的字体. 用户代理人字体数据库中标注的字体可能实际上是通过电子切换正常字体生成的。 名字中带有Oplique, Slanted 或 Incline 的字体一般会在用户代理人字体数据库中被标记。 名称为斜体字、曲线字体或Kursiv字体通常用斜体标明。 从 CSS 1 定义的字体样式所采用的注类型。 ... bibliography.htm CSS 1 。IFC2x3 中的新类型。正式建议 WR1 字体风格允许的值。"

#:IFC.xml:26794
msgid "IfcFontVariant"
msgstr "IfcFontvariant"

msgid "IfcFontVariant_DEFINITION"
msgstr "类型 [[IfcFontVariant]] 定义是否必须使用字体内的普通或小盖。 值是普通的小盖。 xtDef NotE Definition in the casting Style Sheets, level 1级。字体范围内另一种类型的变化是小的盖子。 在一个小的大写字体中，小写字母看起来类似于大写字母，但大小较小，比例略有不同。 字体属性选择字体。 通常选择的字体不是一个小的字体。小的字体选择一个小的字体。 它是可以接受的，但不需要在 CSS 1中使用小的大写字体来创建一个小的大写字体，用缩放的大写字符替换小写字母。 作为最后的手段，大写字母将被用来替代一个小的大写字体。 从 CSS 1 定义的字体变体所采用的注类型..."

#:IFC.xml:26797
msgid "IfcFontWeight"
msgstr "IfcFontweight"

msgid "IfcFontWeight_DEFINITION"
msgstr "The [[IfcFontWeight]] type defines the weight of the font. Values are normal bold 100 200 300 400 500 600 700 800 900 .extDef NOTE Definition according to Cascading Style Sheets, level 1 The values 100 to 900 form an ordered sequence, where each number indicates a weight that is at least as dark as its predecessor. The keyword normal is synonymous with 400 , and bold is synonymous with 700 . Keywords other than normal and bold have been shown to be often confused with font names and a numerical scale was therefore chosen for the 9 value list. .extDef Fonts the font data typically have one or more properties whose values are names that are descriptive of the weight of a font. There is no accepted, universal meaning to these weight names. Their primary role is to distinguish faces of differing darkness within a single font family. Usage across font families is quite variant for example a font that you might think of as being bold might be described as being Regular, Roman, Book, Medium, Semi or DemiBold, Bold, or Black, depending on how black the normal face of the font is within the design. Because there is no standard usage of names, the weight property values in CSS1 are given on a numerical scale in which the value 400 or normal corresponds to the normal text face for that family. The weight name associated with that face will typically be Book, Regular, Roman, Normal or sometimes Medium . .extDef The association of other weights within a family to the numerical weight values is intended only to preserve the ordering of darkness within that family. However, the following heuristics tell how the assignment is done in typical cases If the font family already uses a numerical scale with nine values such as with OpenType , the font weights should be mapped directly. If there is both a face labeled Medium and one labeled Book, Regular, Roman or Normal, then the Medium is normally assigned to the 500 . The font labeled Bold will often correspond to the weight value 700 . If there are fewer then 9 weights in the family, the default algorithm for filling the holes is as follows. If 500 is unassigned, it will be assigned the same font as 400 . If any of the values 600 , 700 , 800 or 900 remains unassigned, they are assigned to the same face as the next darker assigned keyword, if any, or the next lighter one otherwise. If any of 300 , 200 or 100 remains unassigned, it is assigned to the next lighter assigned keyword, if any, or the next darker otherwise. .extDef The following two examples illustrate the process. Assume four weights in the Example1 family, from lightest to darkest Regular, Medium, Bold, Heavy. And assume six weights in the Example2 family Book, Medium, Bold, Heavy, Black, ExtraBlack. Note how in the second example it has been decided not to assign Example2 ExtraBlack to anything. Available faces Assignments Filling the holes Example1 Regular 400 100, 200, 300 Example1 Medium 500 Example1 Bold 700 600 Example1 Heavy 800 900Available faces Assignments Filling the holes Example2 Book 400 100, 200, 300 Example2 Medium 500 Example2 Bold 700 600 Example2 Heavy 800 Example2 Black 900 Example2 ExtraBlack none NOTE Type adopted from font weight defined in CSS 1 .. .. .. bibliography.htm CSS1 . HISTORY New type in IFC2x2 Add2. Formal Propositions WR1"

#:IFC.xml:26800
msgid "IfcPresentableText"
msgstr "IfcPresentable文本"

msgid "IfcPresentableText_DEFINITION"
msgstr "[[IfcPresentableText]] 是用于为演示目的捕捉文字内容的文本字符串。 [[IfcPresentableText]] 可以包含多行文本，对此应该使用线条feed字符LF, 0x0A, 分隔行。 注。不可打印的字符是在标准交换格式ISO 10303 21 STEP物理文件格式中转换的， 通常X 09表示TAB，X 0A 表示LF 字符。 注意到 [[IfcPresentableText]] 是一个从ISO 10303中通过的实体。 工业自动化系统和一体化 产品数据表述和交换，第46部分综合通用资源视觉列报。 IOC2x2中IO10303 46中定义的可展示文本中改编的注实体。"

#:IFC.xml:26803
msgid "IfcSpecularExponent"
msgstr "IfcSpecularExponent"

msgid "IfcSpecularExponent_DEFINITION"
msgstr "[[IfcSpecularExponent]] 定义了指数的数据类型，用于决定反射的清晰度。 这种反射更加清晰，指数值较大，如10.0。 , 减少分流。[[IfcSpecularExponent]] 为REAL类型。 注. 数据类型涉及ISO 10303 46 实体表面风格反射环境扩散光谱中的光谱指数定义。 在 IFC2x2 中的新类型。"

#:IFC.xml:26807
msgid "IfcSpecularRoughness"
msgstr "IfcSpecularRoughness"

msgid "IfcSpecularRoughness_DEFINITION"
msgstr "[[IfcSpecularRoughness]] 定义了表面粗略横向至表面杂质高度产生的反射的数据类型，在表面杂质高度，粗略的粗略值使光谱亮度更加清晰， 例如0。 e. 适用于玻璃、金属、镜像和塑料反射模型。 值越大，接近1.0的值就会降低光线反转。[[IfcSpecularRoughness]] 类型是REAL。 它是对值的约束，包含值介于 0 和 1 之间。 注： 数据类型涉及ISO IEC 147721... 参考书目。 tm IEC 14772 1 , 这是与光谱粗率的对等值。IFC2x2中的HISTORY 新型。 正式提议的 WR1 频谱应为非负值小于或等于 1.0"

#:IFC.xml:26811
msgid "IfcTextAlignment"
msgstr "IfcText对齐"

msgid "IfcTextAlignment_DEFINITION"
msgstr "[[IfcTextAlignment]] 描述了文本在元素内的对齐方式。值是右边的中心对齐。 xtDef NotE Definition in the casting Style Sheets, level 1 如果不支持理由，用户代理将提供一个替换。通常，这将留给西方语言。 从 CSS 1 定义的文本对齐所采用的注类型... ... bibliography.htm CSS 1 在 IFC2x3 中的新类型。对文本对齐的 WR1 可允许的值。"

#:IFC.xml:26814
msgid "IfcTextDecoration"
msgstr "IfcTextDecoration"

msgid "IfcTextDecoration_DEFINITION"
msgstr "[[IfcTextDecoration]] 描述添加到元素文本中的装饰。 值不是从CSS 1定义的文本装饰所采用的注类型下划线的下划线。 ... bibliography.htm CSS 1 . IFSSTORY New Type in IFC2x3 . Formal Propositions WR1 allowable values for text Decoring"

#:IFC.xml:26817
msgid "IfcTextFontName"
msgstr "IfcTextFontName"

msgid "IfcTextFontName_DEFINITION"
msgstr "[[IfcTextFontName]] 是一个字体姓氏或通用姓氏的列表。 xtDef Note definition in the casting Style Sheets, level 1 value of the name of a font font family 例如，刺刀和头盔是字体类。在上面的例子中，最后一个值是通用的姓氏。 以下通用家庭被定义为序列号示例无视序列号示例“帮助”示例Zapf Chancery fantasy 示例“西方单层拼图示例”示例“信使”示例。鼓励提供一个通用字体家庭作为最后的替代办法。 从 CSS 1 定义的字体类中采用的注类型....... 参考书目.. CHISTORY New Type in IFC2x2 Add2."

#:IFC.xml:26820
msgid "IfcTextTransformation"
msgstr "文字转换"

msgid "IfcTextTransformation_DEFINITION"
msgstr "[[IfcTextTransformation]] 描述了如何处理字符的情况。 值是大写字母的第一个字符，元素的所有字母小写小写字母的所有字母，元素的所有字母都不会从CSS中定义的文本变换中采用注类型。 ... bibliography.htm CSS 1 . IFSSTORY New Type in IFC2x3 . Formal Propositions WR1 allowable values for text transform."

