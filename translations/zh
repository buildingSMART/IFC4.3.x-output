msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /master/IfcUtilityResource.pot\n"
"X-Crowdin-File-ID: 102\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_CN\n"
"PO-Revision-Date: 2022-02-14 20:52\n"

#:IFC.xml:48943
msgid "IfcApplication"
msgstr "Ifc应用程序"

msgid "IfcApplication_DEFINITION"
msgstr "[[IfcApplication]] 持有应用程序开发者开发的 IFC 兼容应用程序的信息。 [[IfcApplication]] 使用应用程序开发者提供的一个短标识名。IFC1.5中的新实体。"

#:IFC.xml:175
msgid "IfcApplication_ApplicationDeveloper"
msgstr "应用程序开发者"

msgid "IfcApplication_ApplicationDeveloper_DEFINITION"
msgstr "应用程序开发者的名称。"

#:IFC.xml:48944
msgid "IfcApplication_ApplicationFullName"
msgstr "应用程序全名"

msgid "IfcApplication_ApplicationFullName_DEFINITION"
msgstr "应用程序开发者指定的应用程序的全名。"

#:IFC.xml:48949
msgid "IfcApplication_ApplicationIdentifier"
msgstr "应用程序标识符"

msgid "IfcApplication_ApplicationIdentifier_DEFINITION"
msgstr "应用程序的短标识名称。"

#:IFC.xml:48954
msgid "IfcApplication_Version"
msgstr "版本"

msgid "IfcApplication_Version_DEFINITION"
msgstr "应用程序开发者指定的此软件的版本号。"

#:IFC.xml:48984
msgid "IfcChangeActionEnum"
msgstr "IfcChangeActionEnum"

msgid "IfcChangeActionEnum_DEFINITION"
msgstr "[[IfcChangeActionEnum]] 指明了在上次会话中可能发生的对对象的更改类型，例如添加、修改、删除。 这种信息在部分模型交换情景中是必需的，以便应用程序或模型服务器能够知道一个对象可能会受到上一个应用程序的影响。 有效的枚举是考虑应用程序A将创建一个 IFC 数据集，它想要发布给他人进行修改，并且能够随后将这些更改合并到原模型中。 在发表之前。 它可能想要将 [[IfcChangeActionEnum]设置为 NOCHANGE, 以建立一个基线，以便能够轻松地识别其他应用程序的更改。 应用程序B接下来接收此 IFC 数据集，添加一个新对象，并将 [[IfcChangeActionEnum]] 设置为 ADDED 的应用程序B定义为 OwningApplication。 应用程序B然后修改现有对象，并重新定义最后修改日期到修改时间， LastModifyingUser 到 [[IfcPersonAndOrganization]] 进行更改，并将LastModifying应用程序设置为应用程序B。 当应用程序A收到此修改过的数据集时。 它可以确定哪些对象已被应用程序B添加和修改，并在必要时合并或拒绝这些更改。 因此，意图是应用程序仅在对对象做某事时修改[[IfcChangeActionEnum]] 的值， 还打算让模型服务器负责清理[[IfcChangeActionEnum]] 以便在准备重新发布时返回NOCHANGE。 IFC2.0 中的新枚举. 挂机ifc2x4 IFC4 变量分子MODIFIEDADDED 和 MODIFIEEDDELETED 已被移除，未修改的项目 MODIFIED 对对象的修改已由用户和分别由LastModifyingUser 和 LastModifyingApp定义的应用程序进行。 添加该对象已经由用户创建，应用程序由所有者和所有者分别定义。 已删除此对象已经被用户和应用程序分别被 LastModifyingUser 和 LastModifyingApp所定义。 未定义更改动作。"

#:IFC.xml:48985
msgid "IfcChangeActionEnum_ADDED"
msgstr "已添加"

msgid "IfcChangeActionEnum_ADDED_DEFINITION"
msgstr "对象是用户和应用程序分别定义的 OwningUser 和 OwningApp。"

#:IFC.xml:48986
msgid "IfcChangeActionEnum_DELETED"
msgstr "已删除"

msgid "IfcChangeActionEnum_DELETED_DEFINITION"
msgstr "此对象已被用户和应用程序分别被 LastModifyingUser 和 LastModifyingApp所定义。"

#:IFC.xml:48987
msgid "IfcChangeActionEnum_MODIFIED"
msgstr "已移动"

msgid "IfcChangeActionEnum_MODIFIED_DEFINITION"
msgstr "用户已经对对象做了修改，LastModifyingUser 和 LastModifyingApp分别定义的应用也做了修改。"

#:IFC.xml:48988
msgid "IfcChangeActionEnum_NOCHANGE"
msgstr "无"

msgid "IfcChangeActionEnum_NOCHANGE_DEFINITION"
msgstr "对象尚未被修改。"

#:IFC.xml:48989
msgid "IfcChangeActionEnum_NOTDEFINED"
msgstr "未完成"

msgid "IfcChangeActionEnum_NOTDEFINED_DEFINITION"
msgstr "更改操作未知或尚未定义。"

#:IFC.xml:48991
msgid "IfcOwnerHistory"
msgstr "IfcOwnerHistory"

msgid "IfcOwnerHistory_DEFINITION"
msgstr "[[IfcOwnerHistory]] 定义了所有历史记录和身份相关信息。 为了提供快速访问，它直接连接到所有独立的对象、关系和属性。 [[IfcOwnerHistory]] 用于识别相关对象的创建和拥有应用程序和用户。 以及捕获最后修改应用程序和用户。 在 IFC1.0 中新建实体。 hange ifc2x4 IFC4 变异行动现在是可选的，相关的WHERE规则在断言时强制执行条件。.spec头部非正式提议1。 如果LastModifiedDate 已定义但更改动作未被断言，则更改动作状态被假定为UNDEFINED。 如果同时确认最后修改日期和更改动作，则更改动作状态适用于在 LastModifiedDate 中所称的值。"

#:IFC.xml:321
msgid "IfcOwnerHistory_OwningUser"
msgstr "小球员"

msgid "IfcOwnerHistory_OwningUser_DEFINITION"
msgstr "直接引用到当前拥有此对象的终端用户。 请注意，国际金融公司包括了从一个用户向另一个用户转让所有权的概念，因此区分了拥有者和创建用户。"

#:IFC.xml:333
msgid "IfcOwnerHistory_LastModifyingUser"
msgstr "LastModifyingUser"

msgid "IfcOwnerHistory_LastModifyingUser_DEFINITION"
msgstr "使用LastModifyingApplication进行最后一次修改的用户。"

#:IFC.xml:48960
msgid "IfcOwnerHistory_OwningApplication"
msgstr "Owning应用程序"

msgid "IfcOwnerHistory_OwningApplication_DEFINITION"
msgstr "直接引用当前代表应用程序所有者拥有此对象的应用程序。 请注意，国际金融公司包括了从一个申请到另一个申请的所有权转让概念，因此区分了所有权申请和创立申请。"

#:IFC.xml:48972
msgid "IfcOwnerHistory_LastModifyingApplication"
msgstr "最后修改应用程序"

msgid "IfcOwnerHistory_LastModifyingApplication_DEFINITION"
msgstr "用于进行最后修改的应用程序。"

#:IFC.xml:48992
msgid "IfcOwnerHistory_ChangeAction"
msgstr "更改动作"

msgid "IfcOwnerHistory_ChangeAction_DEFINITION"
msgstr "定义与对象更改相关的动作。"

#:IFC.xml:48997
msgid "IfcOwnerHistory_CreationDate"
msgstr "创建日期"

msgid "IfcOwnerHistory_CreationDate_DEFINITION"
msgstr "在UTC 通用时间协调, 原为格林尼治平时, 或 GMT , 最初由原始的OwningApplication创建时, 表示日期和时间。 一旦定义了这个数值，则在该实体的整个生命周期内保持不变。"

#:IFC.xml:49002
msgid "IfcOwnerHistory_LastModifiedDate"
msgstr "最后修改日期"

msgid "IfcOwnerHistory_LastModifiedDate_DEFINITION"
msgstr "在 UTC 通用时间协调时表示的日期和时间 以前格林尼治平时或格林尼治平时, 最后一次修改是由 LastModifyingUser 和 LastModifyingApplication做出的。"

#:IFC.xml:49007
msgid "IfcOwnerHistory_State"
msgstr "状态"

msgid "IfcOwnerHistory_State_DEFINITION"
msgstr "定义对象当前访问状态的枚举数。"

#:IFC.xml:49013
msgid "IfcStateEnum"
msgstr "IfcStateEnum"

msgid "IfcStateEnum_DEFINITION"
msgstr "The [[IfcStateEnum]] enumeration identifies the state or accessibility of the object for example, read write, locked . Valid enumerations are HISTORY New enumeration in IFC2.0. .change ifc2x3 IFC2x3 CHANGE This concept was initially introduced in IFC2.0 as IfcModifiedFlag of type BINARY 3 FIXED and has been modified in R2x3 to an enumeration. It was initially introduced as a first step towards providing facilities for partial model exchange and is intended for use primarily by a model server so that an application can identify the state of the object. Items READWRITE Object is in a Read Write state. It may be modified by an application. READONLY Object is in a Read Only state. It may be viewed but not modified by an application. LOCKED Object is in a Locked state. It may not be accessed by an application. READWRITELOCKED Object is in a Read Write Locked state. It may not be accessed by an application. READONLYLOCKED Object is in a Read Only Locked state. It may not be accessed by an application."

#:IFC.xml:49014
msgid "IfcStateEnum_LOCKED"
msgstr "已锁定"

msgid "IfcStateEnum_LOCKED_DEFINITION"
msgstr "对象处于锁定状态。它可能无法被应用程序访问。"

#:IFC.xml:49015
msgid "IfcStateEnum_READONLY"
msgstr "只读"

msgid "IfcStateEnum_READONLY_DEFINITION"
msgstr "对象处于只读状态。它可以被查看但不被应用程序修改。"

#:IFC.xml:49016
msgid "IfcStateEnum_READONLYLOCKED"
msgstr "已访问"

msgid "IfcStateEnum_READONLYLOCKED_DEFINITION"
msgstr "对象处于只读锁定状态。它可能无法通过应用程序访问。"

#:IFC.xml:49017
msgid "IfcStateEnum_READWRITE"
msgstr "重写"

msgid "IfcStateEnum_READWRITE_DEFINITION"
msgstr "Object is in a Read Write state. It may be modified by an application."

#:IFC.xml:49018
msgid "IfcStateEnum_READWRITELOCKED"
msgstr "读取了"

msgid "IfcStateEnum_READWRITELOCKED_DEFINITION"
msgstr "对象处于读取写入锁定状态。它可能无法被应用程序访问。"

#:IFC.xml:49020
msgid "IfcTable"
msgstr "IfcTable"

msgid "IfcTable_DEFINITION"
msgstr "一个 [[IfcTable]] 是一个以行和列形式提供信息的数据结构。 每个实例可能都有 [[IfcTableColumn]] 个实例来定义每个列的名称、描述和单位。 信息的行被存储为[[IfcTableRow]] 对象的列表。 限制向后兼容性，对象的 [[IfcTable]] 行被限制拥有相同数量的单元格。 表的第一行提供了细胞数量。 所有其他行都被迫包含相同数量的单元格。由 WR2 强制执行。图1 显示表使用情况。 表格使用 …….........如果图1使用图2说明表格在IFC4之前是如何编排的。 表格使用替代... ... ... ... fctable image2 如果图2 表在 IFC1.5. 中使用替代HISTORY 新实体。添加了 ifc2x4 IFC4 变更栏属性。"

#:IFC.xml:49044
msgid "IfcTable_Rows"
msgstr "行"

msgid "IfcTable_Rows_DEFINITION"
msgstr "引用行的信息内容。"

#:IFC.xml:49056
msgid "IfcTable_Columns"
msgstr "列"

msgid "IfcTable_Columns_DEFINITION"
msgstr "与此表相关的列信息。"

#:IFC.xml:49021
msgid "IfcTable_NumberOfCellsInRow"
msgstr "数字OfCellsInRow"

msgid "IfcTable_NumberOfCellsInRow_DEFINITION"
msgstr "每行的单元格数量与表中的列数相符。 请参阅WR2，以确保每一行拥有相同数量的单元格。 实际值来自行列表的第一个成员。"

#:IFC.xml:49026
msgid "IfcTable_NumberOfDataRows"
msgstr "数字OfData行"

msgid "IfcTable_NumberOfDataRows_DEFINITION"
msgstr "包含数据的表中的行数，即总行数减表中标题行数。"

#:IFC.xml:49031
msgid "IfcTable_NumberOfHeadings"
msgstr "编号前置标题"

msgid "IfcTable_NumberOfHeadings_DEFINITION"
msgstr "表中的标题数目。这个限制是 WR3 到 ma1。"

#:IFC.xml:49036
msgid "IfcTable_Name"
msgstr "名称"

msgid "IfcTable_Name_DEFINITION"
msgstr "名称"

#:IFC.xml:49068
msgid "IfcTableColumn"
msgstr "IfcTable列"

msgid "IfcTableColumn_DEFINITION"
msgstr "一个 [[IfcTableColumn]] 是一个获取列信息用于一个 [[IfcTable]] 的数据结构。 每个实例都定义了标识符、名称、描述和与[[IfcTableRow]]对象相关的列数据的计量单位。 使用 [[IfcTableColumn]] 取代与 [[IfcTableRow]] 关联的 IsHeading 标志。IFC 4 中的HISTORY 新实体。"

#:IFC.xml:2794
msgid "IfcTableColumn_ReferencePath"
msgstr "引用路径"

msgid "IfcTableColumn_ReferencePath_DEFINITION"
msgstr "ReferencePath 表示要应用此列数据的对象和属性的相对路径。 由于限制，此路径相对于 [[IfcObjectDefinition]] 关联到 [[IfcRelAssociatesConstraint]] 。 过时对象。 对于一种约束，请注意， 只要表格的一行必须匹配所有设置ReferencePath 属性的列的引用对象。"

#:IFC.xml:49069
msgid "IfcTableColumn_Description"
msgstr "描述"

msgid "IfcTableColumn_Description_DEFINITION"
msgstr "说明提供了可读的文字描述表列。"

#:IFC.xml:49074
msgid "IfcTableColumn_Identifier"
msgstr "Identifier"

msgid "IfcTableColumn_Identifier_DEFINITION"
msgstr "标识符指明表中的列。如果提供的话，它必须是表中唯一的。 列可以通过共享同一列标识符在多个表之间相互参照。"

#:IFC.xml:49079
msgid "IfcTableColumn_Name"
msgstr "名称"

msgid "IfcTableColumn_Name_DEFINITION"
msgstr "名称是表格列的可读的人类字幕。它不一定是唯一的。"

#:IFC.xml:49084
msgid "IfcTableColumn_Unit"
msgstr "1 D-1, 1 P-5, 1 P-4, 1 P-3,"

msgid "IfcTableColumn_Unit_DEFINITION"
msgstr "单位表示此列数据所用的计量单位。如果未提供，则假定项目默认单位。 如果提供了ReferencePath ，设备必须与引用属性相同。"

#:IFC.xml:49090
msgid "IfcTableRow"
msgstr "IfcTableRow"

msgid "IfcTableRow_DEFINITION"
msgstr "[[IfcTableRow]] 包含在一个 [[IfcTable]] 内的单行数据。 对于向后兼容性的限制，所有 [[IfcTableRow]] 被一个 [[IfcTable]] 引用的对象必须具有相同数量的行 Cell。 实际的单元格数必须从该表的第一个[[IfcTableRow]] 的单元格数中取出。 单元的数量是由关联的 [[IfcTable]] 中派生的属性 NumberOfCellsInRow 计算的。 注意属性 IsHeading 存在于向后兼容性。 [[IfcTableColumn]] 应从IFC4 开始使用。图337显示表行使用情况。 图337 表行使用的情况 请注意，应该使用[[IfcTableColumn]] 构造，而不是仅仅用于落后兼容的IsHeading标记。 图338 表一行在IFC1.5中使用替代HISTORY 新实体。"

#:IFC.xml:49091
msgid "IfcTableRow_IsHeading"
msgstr "IsHeading"

msgid "IfcTableRow_IsHeading_DEFINITION"
msgstr "标记识别行是一个标题行还是一个包含行数值的行。 注意，如果行是一个标题，旗帜将获得TRUE值。"

#:IFC.xml:49096
msgid "IfcTableRow_RowCells"
msgstr "行单元格"

msgid "IfcTableRow_RowCells_DEFINITION"
msgstr "表单元格的数据值..."

#:IFC.xml:49102
msgid "IfcGloballyUniqueId"
msgstr "IfcGloballyUnqueId"

msgid "IfcGloballyUniqueId_DEFINITION"
msgstr "一个 [[IfcGloballyUniqueId]] 持有用于唯一标识一个 IFC 对象的编码字符串标识符。 一个 [[IfcGloballyUniqueId]] 是一个全球唯一标识符GUID，它是一个自动生成128位数字。 由于所有IFC 对象实例都需要这个标识，所以最好压缩它以减少间接费用。 基64字符集的编码显示在以下1 2 3 5 6 012345678901234567890123456789012345678901234567890123 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvxyz 。生成的字符串是一个固定的22个字符长度字符串，将在 IFC 交换文件结构内交换。 NotE Refer to the BuildingSMART website www.buildingsmart tech.org www.buildingsmart tech.org for more information and 样本编码算法. HISTORY New type in IFC1.5.1"

