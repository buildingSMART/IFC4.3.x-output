msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /master/IfcGeometricModelResource.pot\n"
"X-Crowdin-File-ID: 44\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: zh_CN\n"
"PO-Revision-Date: 2021-12-27 14:00\n"

#:IFC.xml:9834
msgid "IfcAdvancedBrep"
msgstr "IfcAdvancedBrep"

msgid "IfcAdvancedBrep_DEFINITION"
msgstr "An advanced B rep is a boundary representation model in which all faces, edges and vertices are explicitly represented. It is a solid with explicit topology and elementary or free form geometry. The faces of the B rep are of type [[IfcAdvancedFace]] . An advanced B rep has to meet the same topological constraints as the manifold solid B rep. NOTE The advanced B rep has been introduced in order to support the increasing number of applications that can define and exchange B rep models based on NURBS or other b spline surfaces. Figure 1 illustrates use of [[IfcAdvancedBrep]] for boundary representation models with b spline surfaces. The diagram shows the topological and geometric representation items that are used for advanced B reps, based on [[IfcAdvancedFace]]. Figure 1 Advanced Brep, b spline surface Figure 2 illustrates use of [[IfcAdvancedBrep]] for boundary representation models with elementary surfaces. The diagram shows the topological and geometric representation items that are used for advanced B reps, based on [[IfcAdvancedFace]]. It shows the use of [[IfcIntersectionCurve]] to provide the geometric representation of the edge curve both as 3D curve and as u,v pcurve in the parametric space of the adjacent surfaces. Figure 2 Advanced Brep, elementary surface NOTE Entity adapted from advanced brep shape representation defined in ISO 10303 514. HISTORY New entity in IFC4 .spec head Informal Propositions 1. each face is a face surface 2. each face surface has its geometry defined by an elementary surface, swept surface or a b spline surface 3. the edges used to define the boundaries of the face shall all reference an edge curve 4. each curve used to define the geometry of the faces and face bounds shall be either a conic, or a line or a polyline or a b spline curve 5. the edges used to define the face boundaries shall all be trimmed by vertices of type vertex point 6. no loop used to define a face bound shall be of the oriented subtype Formal Propositions HasAdvancedFaces Each face of the advanced B rep shall be of type [[IfcAdvancedFace]] ."

#:IFC.xml:9837
msgid "IfcAdvancedBrepWithVoids"
msgstr "IfcAdvancedBrepWidVoid"

msgid "IfcAdvancedBrepWithVoids_DEFINITION"
msgstr "[[IfcAdvancedBrepWithVoids]] 是一个先进的 B rep 的专业化，其中包含一个或多个在内地的漏洞。 空壳代表着封闭的空壳，其定义是为了使空壳进入正常点。 IOC4 .pechead Informal Propositions 1中定义的高级酿造形状代表制的注实体。 每一空壳都必须与外壳和所有其他空壳分离。 每个空壳都必须包含在外壳中，但不在任何其他空壳中。 尤其是，外壳不在一组无效的外壳中。 在 [[IfcManifoldSolidBrep]] 中的每个shell 只能被引用一次。 4. [[IfcAdvancedBrep]] 和 [[IfcAdvancedBrepWithVoids]]中所有炮弹的所有面部。 oid类型必须是 [[IfcAdvancedFace]] 。"

#:IFC.xml:9840
msgid "IfcAdvancedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcAdvancedBrepWithVoids_Voids_DEFINITION"
msgstr "Voids"

#:IFC.xml:9852
msgid "IfcBlock"
msgstr "Ifc块"

msgid "IfcBlock_DEFINITION"
msgstr "[[IfcBlock]] 是一个 CSG 3D 原始构造固体几何形状。 它由三个正交轴沿线的位置和姿态距离来界定。 继承的位置属性有 IfcAxisPlacement3D 类型，并提供 SELF [[IfcCsgPrimitive3D]]。 原始轴轴的位置和方向。SELF [[IfcCsgPrimitive3D]].Position. 方块在位置有一个顶点, 边缘与正面意义上的位置轴对齐。 XLength , YLength , and ZLength 属性定义了三轴沿线的 [[IfcBlock]的大小。 图1显示了一个区块位置在其自己的位置坐标系统内的几何参数。 XLength、YLength和ZLength的数值适用于X、Y和Z轴的正向方向。图1方块几何形状。 按照ISO CD 10303 42 1992，xtDef 注解定义 一个方块是一个固态矩形平行的，用一个位置和位置坐标系统来界定。 方块由位置坐标系的正长度x、y和z指定。 并且在位置坐标系统的起源处有一个顶点。 从 ISO 10303 42中定义的方块中改装的注实体, IFC2x3 中的新实体. 使用头纹理定义在每个侧面上，纹理对齐。 在顶部和底部的纹理正面对背对齐。 根据重复次数和重复次数，纹理被拉伸或重复，达到每个面部的程度。 图2显示默认纹理绘图与夹具的纹理重复、错误和重复错误绘制。 左边的图像显示了S轴向右和T轴向上的纹理位置。 右边的图像显示适用于X轴向右的几何形状的纹理。 Y轴向左返回，Z轴向上移。 .gridtable side ormal origin X original Y originin Z S Axis T Axis Loud X 00 YLength 0 Y Y Z Right X XLength 0 0 Y Z Front Y 0 0 X X Z back Y XLength Yength 0 X Z Bodtom 0 YLength X Y."

#:IFC.xml:9853
msgid "IfcBlock_XLength"
msgstr "X长度"

msgid "IfcBlock_XLength_DEFINITION"
msgstr "沿X轴位置的方块大小。它由继承的方轴放置通过 SELF [[IfcCsgPrimitive3D]].Position.P 1 提供。"

#:IFC.xml:9858
msgid "IfcBlock_YLength"
msgstr "YLength"

msgid "IfcBlock_YLength_DEFINITION"
msgstr "沿Y轴位置的方块大小。它由继承的方块放置通过 SELF [[IfcCsgPrimitive3D]].Position.P 2 提供。"

#:IFC.xml:9863
msgid "IfcBlock_ZLength"
msgstr "ZLength"

msgid "IfcBlock_ZLength_DEFINITION"
msgstr "沿放置Z轴的方块大小。它由继承的方轴通过SELF [[IfcCsgPrimitive3D]].Position.P 3 提供。"

#:IFC.xml:9870
msgid "IfcBooleanClippingResult"
msgstr "IfcBooleanClippingResult"

msgid "IfcBooleanClippingResult_DEFINITION"
msgstr "剪切结果定义为普通的 [[IfcBooleanResult]] 的特殊子类型。 它限制了布尔结果的操作者和操作者。 剪切结果是横向固体与半空间固体之间的布尔值差， 或者布尔值差结果和半空间固体之间的结果。 因此，为实现最终布尔结果可以适用一个以上的不同操作。 IFC2x中的新实体。 正式提议的第一个操作类型 布尔剪辑操作的第一个操作数必须是一个 [[IfcSweptAreaSolid]]，或者在多个剪切一个 [[IfcBooleanResult]]的情况下。 二次操作类型 布尔剪切操作的第二个操作数必须是 [[IfcHalfSpaceSolid]]。操作者类型为剪切操作的布尔运算符总是不同的。"

#:IFC.xml:9873
msgid "IfcBooleanOperand"
msgstr "IfcBooleanOperand"

#:IFC.xml:9874
msgid "IfcBooleanOperator"
msgstr "IfcBooleanOperator"

msgid "IfcBooleanOperator_DEFINITION"
msgstr "适用于第一个和第二个布尔运算的布尔运算符。 按照ISO CD 10303 42 1992，xtDef 注解定义. 这种类型界定了CSG 固体定义中所使用的三个布尔运算符。 从ISO 10303 42定义的布尔运算符中改装的注实体。 IFC1.5.1.中的新实体。UNION INTERSECITION 作业，构建由两个固体确定的数量的规范性设定理论交叉。 DIFFERENCE 根据规定在理论上确定了由两个固体界定的体积之间的差异。"

#:IFC.xml:9875
msgid "IfcBooleanOperator_DIFFERENCE"
msgstr "恐龙座"

msgid "IfcBooleanOperator_DIFFERENCE_DEFINITION"
msgstr "由两个固体界定的数量之间的定型理论差异。"

#:IFC.xml:9876
msgid "IfcBooleanOperator_INTERSECTION"
msgstr "Intersectation"

msgid "IfcBooleanOperator_INTERSECTION_DEFINITION"
msgstr "用两个固体界定的量的理论混合物构造规范的一套理论接口。"

#:IFC.xml:9877
msgid "IfcBooleanOperator_UNION"
msgstr "联 合 国"

msgid "IfcBooleanOperator_UNION_DEFINITION"
msgstr "联 合 国"

#:IFC.xml:9879
msgid "IfcBooleanResult"
msgstr "IfcBooleanResult"

msgid "IfcBooleanResult_DEFINITION"
msgstr "[[IfcBooleanResult]] 是对两个固态操作应用布尔操作的结果。 EXAMPLE 如果第一个操作法是一个方块和第二个操作法是一个适合尺寸和位置的固体圆柱体。 与差异操作员产生的布尔结果将是一个圆形洞的块。 按照ISO CD 10303 42 1992，xtDef 注解定义 一个布尔结果是在两个固体上进行正常化操作以产生一个新的固体。 有效的业务是合法的工会，正规化的交叉点，并使差异正规化。 就布尔运转而言，固体被认为是一套正规化的点。 最终布尔结果取决于操作和两个操作数。 就不同经营者而言，经营者的顺序也很重要，经营者可以是联合、交叉或不同。 下文描述了这些操作者对两个固体的影响，这两个固体是新的固体，即将第一个操作系统或第二个操作系统中的所有点组合法化，或两者兼而有之。 两个固体的交叉点是新的固体，即将第一个操作系统和第二个操作系统中的所有点组合法化。 在两个固体体上的差异作用的结果是将第一个操作体中的所有点组合法化。 但不在第二个操作中。 IOC1.5.1中在ISO 10303 42中定义的相应STEP类型布尔结果。"

#:IFC.xml:9880
msgid "IfcBooleanResult_Dim"
msgstr "Dim"

msgid "IfcBooleanResult_Dim_DEFINITION"
msgstr "这个实体的空间尺度与第一个操作的空间尺度完全相同。 一个规则确保两种操作都具有相同的空间层面。"

#:IFC.xml:9885
msgid "IfcBooleanResult_FirstOperand"
msgstr "第一操作数"

msgid "IfcBooleanResult_FirstOperand_DEFINITION"
msgstr "第一个将由布尔操作操作的操作器。"

#:IFC.xml:9890
msgid "IfcBooleanResult_Operator"
msgstr "运算符"

msgid "IfcBooleanResult_Operator_DEFINITION"
msgstr "用于创建结果的布尔运算符。"

#:IFC.xml:9895
msgid "IfcBooleanResult_SecondOperand"
msgstr "秒操作数"

msgid "IfcBooleanResult_SecondOperand_DEFINITION"
msgstr "指定的第二个操作符。"

#:IFC.xml:9904
msgid "IfcBoundingBox"
msgstr "IfcBoundingBox"

msgid "IfcBoundingBox_DEFINITION"
msgstr "[[IfcBoundingBox]] 定义了一个平行于对象坐标系坐标系轴方向的正向方框。 四角是界定X的三维卡泰斯点和三个长度尺度。 正轴方向方框中方框的 Y 和 Z 参数。 注任何子类型的 [[IfcProduct]] 具有产品形状表示的子类型可能有一个边界框表示. 在 [[IfcShapeRepresentation]] 定义的方框表示标识符使用[[IfcBoundingBox]] 作为最简单的 3D 形状表达式。 如图1所示， [[IfcBoundingBox]] 是用自己的位置定义的，可以用来放置相对几何坐标系统的 [[IfcBoundingBox]] 。 [[IfcBoundingBox]] 由左下角和右上角XDim定义， YDim, ZDim 测量在父级协调系统内……。 图1 国际标准化组织ISO 10303 42界定的标准电子设备类型框域名，IFC1.0中的新实体。"

#:IFC.xml:9927
msgid "IfcBoundingBox_Corner"
msgstr "角"

msgid "IfcBoundingBox_Corner_DEFINITION"
msgstr "左下角的位置具有最小值。"

#:IFC.xml:9905
msgid "IfcBoundingBox_Dim"
msgstr "Dim"

msgid "IfcBoundingBox_Dim_DEFINITION"
msgstr "这个类别的空间尺寸总是3。"

#:IFC.xml:9910
msgid "IfcBoundingBox_XDim"
msgstr "XDim"

msgid "IfcBoundingBox_XDim_DEFINITION"
msgstr "沿X轴边缘测量的长度属性"

#:IFC.xml:9915
msgid "IfcBoundingBox_YDim"
msgstr "YDim"

msgid "IfcBoundingBox_YDim_DEFINITION"
msgstr "沿Y轴边缘平行测量的宽度属性"

#:IFC.xml:9920
msgid "IfcBoundingBox_ZDim"
msgstr "ZDim"

msgid "IfcBoundingBox_ZDim_DEFINITION"
msgstr "沿Z轴平行边缘测量的高度属性。"

#:IFC.xml:9951
msgid "IfcBoxedHalfSpace"
msgstr "IfcBoxedHalfSpace"

msgid "IfcBoxedHalfSpace_DEFINITION"
msgstr "[[IfcBoxedHalfSpace]] 只在布尔操作中被用作其超级类型 [[IfcHalfSpaceSolid]。 它将域分成两个子集，有关域是属性附文的域。 属性附文的目的是为布尔运算中的其他操作数提供一个搜索框。 它必须足够大，能够在满半空格的布尔运转后将由此产生的固态附着。 然而，它并没有改变最后结果。 布尔操作的结果是相同的，仿佛由超级类型 [[IfcHalfSpaceSolid]] 执行。 请参阅下面的图1，正确使用附文... ... ... figures ifcboxedhalfspace 01。 ng 图1 加框半空间操作 提供附文的[[IfcBoundingBox]]是为了方便接收应用程序，以便能够使用尺寸框比较来提高效率的 首先检查大小框是否相互交错，如果不需要进行计算以检查各实体的固体是否相互交织。 因此，附文有助于防止处理与无限大小有关的问题。 附文箱放置在对象协调系统内，由元素的对象位置如[[IfcLocalPlacement]] 所代表的对象位置来确定。 图2显示了附文箱的尺寸足以将布尔值结果完全附着在一起。图2 盒半空位几何。 按照ISO CD 10303 42 1992，xtDef 注明定义 该实体是半空间固体的子类，由周围的矩形框修整。 盒子的边缘与几何坐标系的坐标轴平行。 方框的目的是通过生产有限尺寸的固体，促进CSG的计算。 从ISO 10303 42界定的盒式半空间中改造的注实体，IFC1.5.1 中的新实体。 挂载ifc2x4 IFC4 变异使用正确，机柜位置协调系统是物体协调系统。"

#:IFC.xml:9939
msgid "IfcBoxedHalfSpace_Enclosure"
msgstr "附文"

msgid "IfcBoxedHalfSpace_Enclosure_DEFINITION"
msgstr "方框将布尔运算产生的固体限定在半空间固体中，仅供计算之用。"

#:IFC.xml:9954
msgid "IfcCartesianPointList"
msgstr "IfcCartesianPointList"

msgid "IfcCartesianPointList_DEFINITION"
msgstr "[[IfcCartesianPointList]] 是抽象的超类型的点列表。 注意到 [[IfcCartesianPointList]] 是为了提供一份可能较大的要点清单的精密表述， 例如在点云和可索引的点数表述方面。 IFC4中的新实体。"

#:IFC.xml:9955
msgid "IfcCartesianPointList_Dim"
msgstr "Dim"

msgid "IfcCartesianPointList_Dim_DEFINITION"
msgstr "这个类的空间尺寸，可是2或3，取决于子类型。"

#:IFC.xml:9974
msgid "IfcCartesianPointList2D"
msgstr "IfcCartesianPointList2D"

msgid "IfcCartesianPointList2D_DEFINITION"
msgstr "[[IfcCartesianPointList2D]] 定义了两个维度卡泰斯点的有序集合。 每个卡特塞点用两个坐标的固定清单作为两个尺寸点。 属性CoordList 是一个两维列表 在第一维度是代表每个2D卡泰斯点第二维度的无界限列表是由两位成员组成的固定列表， 其中，1是X坐标，2是卡特塞点的 y坐标 注意到 [[IfcCartesianPointList2D]] 是为了提供一份较大的要点清单的精密表述， 例如用于折叠曲线顶点的可指数化的点数。 IFC4 ADD1中的新实体。"

#:IFC.xml:9975
msgid "IfcCartesianPointList2D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList2D_CoordList_DEFINITION"
msgstr "由两个坐标方位提供的两维卡斯点清单。"

#:IFC.xml:9980
msgid "IfcCartesianPointList2D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList2D_TagList_DEFINITION"
msgstr "根据标签属性[[IfcOffsetCurveByDistances]] 或 IfcAlignmentCurve 来识别基础曲线的每个点标签列表。"

#:IFC.xml:9987
msgid "IfcCartesianPointList3D"
msgstr "IfcCartesianPointList3D"

msgid "IfcCartesianPointList3D_DEFINITION"
msgstr "[[IfcCartesianPointList3D]] 定义了三个维度卡泰斯点的有序集合。 每个卡特塞点用三个坐标点固定清单作为三维点。 属性CoordList 是一个两维列表 在第一维度是代表每3D卡泰斯点第二维度的无界限列表中，第二维度是由三个成员组成的固定列表， 其中1是卡泰斯点的x坐标，2是Y坐标，3是z坐标。 注意到 [[IfcCartesianPointList]] 是为了提供一份较大的要点清单的精密表述， 如点云和可索引的点数表示用作四面曲线的顶点。 IFC4中的新实体。"

#:IFC.xml:9988
msgid "IfcCartesianPointList3D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList3D_CoordList_DEFINITION"
msgstr "由三个坐标方位提供的两维卡斯点清单。"

#:IFC.xml:9993
msgid "IfcCartesianPointList3D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList3D_TagList_DEFINITION"
msgstr "根据标签属性[[IfcOffsetCurveByDistances]] 或 IfcAlignmentCurve 来识别基础曲线的每个点标签列表。"

#:IFC.xml:10012
msgid "IfcCsgPrimitive3D"
msgstr "IfcCsgPrimitive3D"

msgid "IfcCsgPrimitive3D_DEFINITION"
msgstr "[[IfcCsgPrimitive3D]] 是用作树根物品的所有三维原始物品的抽象超级类型。 或者作为布尔结果在 CSG 固体模型中。 所有3D CSG原始都是在三维位置坐标系统内定义的，IFC2x3中的新实体。"

#:IFC.xml:10022
msgid "IfcCsgPrimitive3D_Position"
msgstr "位置"

msgid "IfcCsgPrimitive3D_Position_DEFINITION"
msgstr "每个CSG原始参数所适用的位置坐标系统。"

#:IFC.xml:10013
msgid "IfcCsgPrimitive3D_Dim"
msgstr "Dim"

msgid "IfcCsgPrimitive3D_Dim_DEFINITION"
msgstr "这个几何形状项的空间尺度总是3。"

#:IFC.xml:10034
msgid "IfcCsgSelect"
msgstr "IfcCsgselect"

#:IFC.xml:10035
msgid "IfcCsgSolid"
msgstr "IfcCsgSolid"

msgid "IfcCsgSolid_DEFINITION"
msgstr "一个 [[IfcCsgSolid]] 是使用建设性的固态几何模型来表示3D 形状。 它由单个3D CSG 原始或作为布尔操作的结果来代表。 布尔操作的操作者可以是布尔操作本身形成一个 CSG 树。 以下卷可以是CSG树边界表示模型的一部分，例如[[IfcFacetedBrep]] , [[IfcFacetedBrepWithVoids]] , 闭合的四流代表模式，例如[[IfcPolygonalFaceSet]] , [[IfcTriangulatedFaceSet]] , 滑动区域固体，例如[[IfcExtrudedAreaSolid]] , [[IfcRevolvedAreaSolid]] , 及其子类型, 以便添加先进的横扫区域固体, 例如[[IfcSurfaceCurveSweptAreaSolid]] , [[IfcFixedReferenceSweptAreaSolid]] , , , [[IfcSweptDiskSolid]] 半空格固体，例如：[[IfcHalfSpaceSolid]及其子型，和CSG 原型，子型[[IfcCsgPrimitive3D]] 。 .extdef Note Definition accordance with ISO CD 10303 42 1992. 合并使用正规化的布尔运算。 允许的操作是交叉、联盟和差异。作为一个特殊情况，CSG固体也可以由单个CSG原型组成。 CSG固体需要两种信息才能完整界定几何和结构，这些几何信息是用固态模型传递的。 这些典型的原始体积，如气瓶、板块和外壳，但可包括一般的B模型。 固体模型也可以是半空间固体体。 结构信息在一棵树中纯粹是一张引导图形的布尔结果和CSG 固体， 它代表着构造固体的配方。 终端节点是几何原始点和其他固体。 每个CSG固体都有一个与它相关的布尔结果，这个结果是确定固体的树木的根基。 树中可能会有更多的布尔结果作为操作符。 CSG固体实体的意义在于，关联树所界定的固体因此被确定为一个重要物体。 并以这种方式将其与代表施工过程中中间结果的其他布尔结果实体区分开来。 IOC1.5.1中的ISO 10303 42界定了从csg固体改装的注实体。"

#:IFC.xml:10036
msgid "IfcCsgSolid_TreeRootExpression"
msgstr "TreeRoot表达式"

msgid "IfcCsgSolid_TreeRootExpression_DEFINITION"
msgstr "描述固体的原始和规范操作者的布尔表达方式。 布尔表达式树的根值被明确指定为 [[IfcBooleanResult]] 实体或原始子类型 [[IfcCsgPrimitive3D]] 。"

#:IFC.xml:10043
msgid "IfcDirectrixDerivedReferenceSweptAreaSolid"
msgstr "IfcDirectrixDerivedReferenceSweptAreaSolid"

#:IFC.xml:10046
msgid "IfcExtrudedAreaSolid"
msgstr "IfcExtrudedAreaSolid"

msgid "IfcExtrudedAreaSolid_DEFINITION"
msgstr "The [[IfcExtrudedAreaSolid]] is defined by sweeping a cross section provided by a profile definition. The direction of the extrusion is given by the ExtrudedDirection attribute and the length of the extrusion is given by the Depth attribute. If the planar area has inner boundaries holes defined , then those holes shall be swept into holes of the solid. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the extruded solid. If not provided, it defaults to the current object coordinate system. The ExtrudedDirection is given within the position coordinate system as defined by [[IfcSweptAreaSolid]] . Position . The extruded direction can be any direction which is not perpendicular to the z axis of the position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The result is a solid. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. Figure 1 Extruded area solid geometry EXAMPLE Figure 2 illustrates geometric parameters and additional positioning parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the y axis. Figure 2 Repositioned extruded area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 An extruded area solid is a solid defined by sweeping a bounded planar surface. The direction of translation is defined by a direction vector, and the length of the translation is defined by a distance depth. The planar area may have holes which will sweep into holes in the solid. NOTE Entity adapted from extruded area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .use head Texture use definition For side faces, textures are aligned facing upright continuously along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the extrusion axis according to RepeatT . For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. EXAMPLE Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcExtrudedAreaSolid]] having a profile of [[IfcIShapeProfileDef]], the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth . Figure 3 Extruded area solid textures"

#:IFC.xml:10054
msgid "IfcExtrudedAreaSolid_ExtrudedDirection"
msgstr "扩展方向"

msgid "IfcExtrudedAreaSolid_ExtrudedDirection_DEFINITION"
msgstr "滑动区提供的表面方向将被洗刷。"

#:IFC.xml:10047
msgid "IfcExtrudedAreaSolid_Depth"
msgstr "深度："

msgid "IfcExtrudedAreaSolid_Depth_DEFINITION"
msgstr "表面沿着ExtruedDirect 扫射的距离。"

#:IFC.xml:10066
msgid "IfcExtrudedAreaSolidTapered"
msgstr "IfcExtrudedAreaSolided"

msgid "IfcExtrudedAreaSolidTapered_DEFINITION"
msgstr "[[IfcExtrudedAreaSolidTapered]] is defined by sweeping a cross section along a linear spine. The cross section may change along the sweep from the shape of the start cross section into the shape of the end cross section. The resulting solid is bounded by three or more faces A start face, an end face each defined by start and end planes and sections , and one or more lateral faces. Each lateral face is a ruled surface defined by a pair of corresponding edges of the start and end section. NOTE Given that the start and end section is provided by a polygon, the corresponding vertices of the start and end cross section are connected, forming a quadrilateral polygon between each pair of corresponding vertices. The surface defined by the bounding quadrilateral polygon is a ruled surface, that could be approximated by triangulation. The linear spine is defined by Start point SELF [[IfcSweptAreaSolid]].Position.Location Direction SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection Distance SELF [[IfcExtrudedAreaSolid]].Depth The start cross section is defined by SELF [[IfcSweptAreaSolid]].SweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by SELF [[IfcSweptAreaSolid]].Position.P 1 and SELF [[IfcSweptAreaSolid]].Position.P 2 The linear spine starts at the plane of the start cross section. The spine is not necessarily perpendicular to the plane. The end cross section is defined by EndSweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by translating the start position coordinates provided by SELF [[IfcSweptAreaSolid]].Position along the spine direction by the spine distance. The plane of the end cross section is coplanar to the plane of the start cross section. The end cross section is topologically similar to the start cross section i.e. having the same number of vertices and edges . The end cross section can either be defined by the same paramteric profile using different parameter values, or by a 2D Cartesian transformation of the start profile within the end cross section plane. In case of two parameterized profiles the shape is constructed as follows The end profile, defined by a cross section based on the same profile paramterization as the start profile, is translated by the spine distance along the spine direction. It may be shifted within the XY plane of the end postion coordinate system and may be twisted using the rotation parameter. The shift and rotation parameter are provided by the end cross section being of type [[IfcParameterizedProfileDef]] , where Shift is EndSweptArea [[IfcParameterizedProfileDef]].Position.Location Rotation is EndSweptArea [[IfcParameterizedProfileDef]].Position.RefDirection Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. In case of Cartesian transformation of the start cross section the shape is constructed as follows The cross section curve, which starts as a curve in the XY plane of the position coordinate system, is first scaled about the origin by the scale parameter. It is then translated by the spine distance along the spine direction. It maybe twisted by using the rotation parameter. The scale and rotation parameter are provided by the end cross section being of type [[IfcDerivedProfileDef]] , where Scale is EndSweptArea [[IfcDerivedProfileDef]].Operator.Scale Rotation is EndSweptArea [[IfcDerivedProfileDef]].Operator.Axis1 Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. HISTORY New entity in IFC4. .spec head Informal Propositions 1. Mirroring within [[IfcDerivedProfileDef]].Operator shall not be used"

#:IFC.xml:10069
msgid "IfcExtrudedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcExtrudedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "定义通风区域末尾的表面。它作为配置文件定义。 EndSwptare的位置坐标系统是通过翻译SELF [[IfcSweptAreaSolid]]生成的。 沿SELF [[IfcExtrudedAreaSolid]].ExtruedDirection by the Distance of SELF [[IfcExtrudedAreaSolid]].Depth ."

#:IFC.xml:10081
msgid "IfcFaceBasedSurfaceModel"
msgstr "IfcFacebookSurface模型"

msgid "IfcFaceBasedSurfaceModel_DEFINITION"
msgstr "[[IfcFaceBasedSurfaceModel]] 代表连接面组的形状. 所连接的面部具有维度2，并放置在坐标空间中的维度3。 .extdef 根据ISO CD 10303 42 1992年说明的注解定义 以面为基础的表面模型，用一组连接的面部的尺寸2来描述。 所连接的面部集不得相互交错，除非在边缘和垂直位置， 但在一个连接面部的一面可能与另一个连接面部的一面重叠，条件是面部边界相同。 必须至少有一个连接的面集。一个连接的面集可能存在于一个表面模型之外。 IOC2x.spec首长非正式提议1中界定的从面基表面模型中改编的注实体。 1. 除非在同一面、边缘或顶端，否则所连接的面组不得重叠或交叉。 .已弃用IFC4 变迁。 该实体已被弃用，不应使用。该实体[[IfcFacetedBrep]] 应予使用。"

#:IFC.xml:10090
msgid "IfcFaceBasedSurfaceModel_FbsmFaces"
msgstr "烟花面"

msgid "IfcFaceBasedSurfaceModel_FbsmFaces_DEFINITION"
msgstr "由基于面的表面模型组成的连接面集。"

#:IFC.xml:10082
msgid "IfcFaceBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcFaceBasedSurfaceModel_Dim_DEFINITION"
msgstr "这个类别的空间尺寸总是3。"

#:IFC.xml:10102
msgid "IfcFacetedBrep"
msgstr "IfcFacetedBrep"

msgid "IfcFacetedBrep_DEFINITION"
msgstr "[[IfcFacetedBrep]] 是一个多倍的固体繁殖器，限制所有面部都是平面和有边界的多边形。 注使用 [[IfcFacetedBrep]] 仅限用于带平面表面的边界表示模型。 这些表面隐含着边缘多边形，图显示了用于阳性面包的地形和几何形状物体。 每 [[IfcCartesianPoint]] 在 [[IfcFacetedBrep]] 中使用的值必须用一个 [[IfcPolyLoop]] 的边框来表示三次不同的 [[IfcFace]]。 图1 显示[[IfcFacetedBrep]] 使用情况的图表 xtDef NotE Definition according by ISO CD 10303 42 1992. A faced Brep is a s简单形式的边界表示模型，所有面都是平面，而所有边缘都是直线的。 与Brep 模型不同的是，边缘和顶点在模型中没有明确的表现，而是通过Poly循环实体默示提供。 约束面Brep必须面对与多层固体B复数相同的地形限制。 .extDef The faceted Brep is introduced to support the number of systems that boundary type solident formations only with planar surface IOC1.0 .spec头非正式提议1中从ISO 10303 42界定的多倍固体品种改装的注实体。 [[IfcFacetedBrep]] 中所有炮弹的所有面部的所有边界循环均应为类型 [[IfcPolyLoop]] 。 2. 所有顶点都必须用所有多边循环来参考，共用顶点。I..e. 每个卡泰赛点必须用至少三个多边循环来引用。"

#:IFC.xml:10105
msgid "IfcFacetedBrepWithVoids"
msgstr "IfcFacetedBrepWidVoids"

msgid "IfcFacetedBrepWithVoids_DEFINITION"
msgstr "[[IfcFacetedBrepWithVoids]] 是一个约束面的 B Rep 的专业化，它包含一个或多个在内地的漏洞。 空壳代表着封闭的空壳，其定义是为了使空壳进入正常点。 从 ISO 10303 42 中定义的空隙和约束面面包中改装的注实体在 IFC1.0 中的新实体。 挂载ifc2x4 IFC4 变异子类型从[[IfcManifoldSolidBrep]改为[[IfcFacetedBrep]]，并且基于文件的交换具有向上兼容性。 1. 每一空壳必须与外壳和其他每一空壳分离。 每个空壳都必须包含在外壳中，但不在任何其他空壳中。 尤其是，外壳不在一组无效的外壳中。 [[IfcManifoldSolidBrep]] 中的每个外壳只能被引用一次。 4. [[IfcFacetedBrep]] 中所有炮弹的所有面部的所有边界循环均应为类型 [[IfcPolyLoop]] 。"

#:IFC.xml:10108
msgid "IfcFacetedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcFacetedBrepWithVoids_Voids_DEFINITION"
msgstr "在固体内定义空壳的封闭式炮弹。"

#:IFC.xml:10120
msgid "IfcFixedReferenceSweptAreaSolid"
msgstr "IfcFixedReferenceSweptAreaSolid"

msgid "IfcFixedReferenceSweptAreaSolid_DEFINITION"
msgstr "An [[IfcFixedReferenceSweptAreaSolid]] is a type of swept area solid which is the result of sweeping an area along a Directrix . The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the start tangent of the directrix at this point, and the profile s x axis agrees to the orthogonal projection of the FixedReference direction within the plane of start tangent and Fixed Reference . The orientation of the curve during the sweeping operation is controlled by the FixedReference direction. The SweptArea is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the projection of FixedReference onto the normal plane to the directrix at this point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The resulting swept solid is placed by the Position coordinate system. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no EndParam is provided the end defaults to the end of the directrix. NOTE The StartParam and the EndParam , if provided as a parameter value, are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. NOTE In the case of a curve composed of [[IfcCurveSegment]] , the [[IfcSweptAreaSolid]] Position is dependent on the [[IfcCurveSegment]] StartPlacement and the type of BasisCurve which defines the name function between the start and end explicitly defined as the start point of the next segment points of the segment EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In many cases, it is a surface of extrusion. The directrix lies on the surface, often defined as a p curve at this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the FixedReference direction. The Axis2 the y axis, or v is constructed. In this case the resulting swept solid is not repositioned. The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a CartesianTransformationOperator3d with attributes LocalOrigin as point 0 0 0 , Axis1 as the orthogonal projection of the FixedReference onto the normal plane defined by Axis3 . Axis3 as the direction of the tangent vector t at the point of the Directrix with parameter u . The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the Directrix parameter u . NOTE The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE Entity adapted from fixed reference swept surface defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. The SweptArea shall lie in the plane z 0. 2. The FixedReference shall not be parallel to a tangent vector to the directrix at any point along this curve. 3. The Directrix curve shall be tangent continuous."

#:IFC.xml:10123
msgid "IfcFixedReferenceSweptAreaSolid_FixedReference"
msgstr "FixedReference"

msgid "IfcFixedReferenceSweptAreaSolid_FixedReference_DEFINITION"
msgstr "FixedReference"

#:IFC.xml:10135
msgid "IfcGeometricCurveSet"
msgstr "IfcGeometricCurveSet"

msgid "IfcGeometricCurveSet_DEFINITION"
msgstr "[[IfcGeometricCurveSet]] 用来交换形状表示的形状，只包含2D 或 3D 点和曲线。 按照ISO CD 10303 42 1992，xtDef 注解定义 几何曲线集合了两三维点和曲线。 从ISO 10303 42中定义的几何曲线集改装的注实体，IFC2x2中的新实体。 表面无表面必须包括在这个几何集中。"

#:IFC.xml:10138
msgid "IfcGeometricSet"
msgstr "IfcGeometricSet"

msgid "IfcGeometricSet_DEFINITION"
msgstr "[[IfcGeometricSet]] 用于交换形状，由2D或3D点、曲线和表面组成， 没有地形结构，如连接的面包或外壳， 未经过四极化，也不是固体模型，例如干燥的固体、CSG或Brep 。 .extDef 来自ISO CD 10303 42 的注解定义 该实体是为了在无法找到地形结构时传输模型。 从ISO 10303 42中定义的几何组中改装的注实体，在IFC2x中的新实体中。"

#:IFC.xml:10139
msgid "IfcGeometricSet_Dim"
msgstr "Dim"

msgid "IfcGeometricSet_Dim_DEFINITION"
msgstr "此类的空间尺寸，与该类的第一个元素完全相同。 一个规则确保所有要素都具有相同的层面。"

#:IFC.xml:10144
msgid "IfcGeometricSet_Elements"
msgstr "要件"

msgid "IfcGeometricSet_Elements_DEFINITION"
msgstr "构成几何组的几何元素，这些元素可能是点数， 曲线或表面，但必须具有相同的坐标空间维度。"

#:IFC.xml:10151
msgid "IfcGeometricSetSelect"
msgstr "IfcGeometricSet选择"

#:IFC.xml:10152
msgid "IfcHalfSpaceSolid"
msgstr "IfcHalfSpaceSolid"

msgid "IfcHalfSpaceSolid_DEFINITION"
msgstr "半空间固体通过基础表面将域划分成两个。 通常， 基表面是一种平面，并将无限空间划分为两个，通过同意或不同意平面正常来标明半空间的一面。 图1说明了给定坐标系统内[[IfcHalfSpaceSolid]] 的定义。 基础表面由无边界平面给出，红色边界只能用于可视化目的，半空间固态... fichalfspacesolid layout1.gif 图1 半空间固体几何形状. 按照ISO CD 10303 421992，xtDef 注明定义 半空间固体由半空间定义，这个半空间是处于无界表面某一侧的域的普通子集。 半面积的表面的侧面由表面正常状态和协议标志决定。 如果协议旗帜是 TRUE，那么子集就是正常距离的子集。 如果协议旗帜是FALSE，那么子集是正常进入点的子集。 对于有效的半空间固体，表面应将域分成两个子集。 另外，在域内，表面必须是多方面的，所有表面规范都必须划入同一子集。 注半空间不是固体模型的子型，半个空间固体只能作为布尔表达式中的操作。 从ISO 10303 42界定的半空间固体改装的注实体。 IFC1.5.spec头部非正式提议1中的新实体。基础表面应将域分成两个子集。 如果半空间固体是子类型盒半空格 [[IfcBoxedHalfSpace]] , 那么有关的域是属性附则。 在所有其他情况下，域都是空间所有，基础表面必须免除。 2. 基础表面必须是无边界表面子类型[[IfcElementarySurface]] 。"

#:IFC.xml:10166
msgid "IfcHalfSpaceSolid_BaseSurface"
msgstr "底面"

msgid "IfcHalfSpaceSolid_BaseSurface_DEFINITION"
msgstr "半空格的表面定义面。"

#:IFC.xml:10153
msgid "IfcHalfSpaceSolid_Dim"
msgstr "Dim"

msgid "IfcHalfSpaceSolid_Dim_DEFINITION"
msgstr "此类的空间尺寸，总是3"

#:IFC.xml:10158
msgid "IfcHalfSpaceSolid_AgreementFlag"
msgstr "协议标志"

msgid "IfcHalfSpaceSolid_AgreementFlag_DEFINITION"
msgstr "协议旗帜是 TRUE ，如果基本表面点的正常值不在 [[IfcHalfSpaceSolid]] 的材料。否则它是 FALSE 。"

#:IFC.xml:10178
msgid "IfcIndexedPolygonalFace"
msgstr "IfcIndexedPolygonalFace"

msgid "IfcIndexedPolygonalFace_DEFINITION"
msgstr "The [[IfcIndexedPolygonalFace]] is a compact representation of a planar face being part of a face set. The vertices of the polygonal planar face are provided by 3 or more Cartesian points, defined by indices that point into an [[IfcCartesianPointList3D]] , either direcly, or via the PnIndex , if provided at [[IfcPolygonalFaceSet]] . Figure 1 shows an [[IfcIndexedPolygonalFace]] at an [[IfcPolygonalFaceSet]] not using PnIndex the default . [[IfcIndexedPolygonalFace]] .. .. .. .. figures ifcindexedpolygonalface 01.png Figure 1 Polygonal face geometry provided by indices into a point list Figure 2 shows an [[IfcIndexedPolygonalFace]] at an [[IfcPolygonalFaceSet]] using PnIndex . [[IfcIndexedPolygonalFace]] us ing PnIndex .. .. .. .. figures ifcindexedpolygonalface 02.png Figure 2 Polygonal face geometry provided by indices into a point list HISTORY New entity in IFC4 Addendum 2."

#:IFC.xml:10186
msgid "IfcIndexedPolygonalFace_ToFaceSet"
msgstr "ToFaceSet"

msgid "IfcIndexedPolygonalFace_ToFaceSet_DEFINITION"
msgstr "引用此面部所关联的 [[IfcPolygonalFaceSet]] 。"

#:IFC.xml:10179
msgid "IfcIndexedPolygonalFace_CoordIndex"
msgstr "CoordIndex"

msgid "IfcIndexedPolygonalFace_CoordIndex_DEFINITION"
msgstr "带有三个或三个以上点指数的一个尺寸清单来确定外环的顶点。 如果四色面部已关闭，则由SELF [[IfcTessellatedFaceSet]]标明。 失去，然后界定外循环的各点应顺时针连接计数器， 因此，由此产生的正常情况将外向化。 注意顶点的坐标由SELF [[IfcTessellatedFaceSet]]的索引列表提供。 如果提供了SELF [[IfcTessellatedFaceSet]].PnIndex ，则指数指向它，否则直接指向[[IfcCartesianPointList3D]] 。"

#:IFC.xml:10200
msgid "IfcIndexedPolygonalFaceWithVoids"
msgstr "IfcIndexedPolygonalFaceWithVoids"

msgid "IfcIndexedPolygonalFaceWithVoids_DEFINITION"
msgstr "[[IfcIndexedPolygonalFaceWithVoids]] 是平面面的紧凑表面，内循环，是面集的一部分。 IFC4 增编2. HISTORY New entity"

#:IFC.xml:10201
msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices"
msgstr "InnerCoordIndices"

msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices_DEFINITION"
msgstr "两维列表 其中第一维度表示每个内环从1到N的内环，第二维度则表示指数到三个或三个以上的内环顶端。 如果四色面部已关闭，则由SELF [[IfcTessellatedFaceSet]]标明。 然后划定内环的各点应从身体外看到顺时针联接。 注意顶点坐标由SELF索引列表 [[IfcTessellatedFaceSet]]提供。 Coordlist 。如果提供了SELF [[IfcTessellatedFaceSet]].PnIndex ，则指数点到它，否则直接进入[[IfcCartesianPointList3D]] 。"

#:IFC.xml:10208
msgid "IfcManifoldSolidBrep"
msgstr "IfcManifoldSolidBrep"

msgid "IfcManifoldSolidBrep_DEFINITION"
msgstr "The [[IfcManifoldSolidBrep]] is a solid represented as a collection of connected surfaces that delimit the solid from the surrounding non solid. Instances of type [[IfcManifoldSolidBrep]] shall be of type [[IfcFacetedBrep]] , using only [[IfcPolyLoop]] for the bounds of [[IfcFaceBound]] , or of type [[IfcAdvancedBrep]] , using only [[IfcAdvancedFace]] for the face geometry, and [[IfcEdgeCurve]] for the edges. .extDef NOTE Definition according to ISO CD 10303 42 1992 A manifold solid b rep is a finite, arcwise connected volume bounded by one or more surfaces, each of which is a connected, oriented, finite, closed 2 manifold. There is no restriction on the genus of the volume, nor on the number of voids within the volume. The Boundary Representation B rep of a manifold solid utilizes a graph of edges and vertices embedded in a connected, oriented, finite, closed two manifold surface. The embedded graph divides the surface into arcwise connected areas known as faces. The edges and vertices, therefore, form the boundaries of the face and the domain of a face does not include its boundaries. The embedded graph may be disconnected and may be a pseudo graph. The graph is labeled that is, each entity in the graph has a unique identity. The geometric surface definition used to specify the geometry of a face shall be 2 manifold embeddable in the plane within the domain of the face. In other words, it shall be connected, oriented, finite, non self intersecting, and of surface genus 0. Faces do not intersect except along their boundaries. Each edge along the boundary of a face is shared by at most one other face in the assemblage. The assemblage of edges in the B rep do not intersect except at their boundaries i.e., vertices . The geometry curve definition used to specify the geometry of an edge shall be arcwise connected and shall not self intersect or overlap within the domain of the edge. The geometry of an edge shall be consistent with the geometry of the faces of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. A B rep is represented by one or more closed shells which shall be disjoint. One shell, the outer, shall completely enclose all the other shells and no other shell may enclose a shell. The facility to define a B rep with one or more internal voids is provided by a subtype. The following version of the Euler formula shall be satisfied, math .. .. .. .. figures ifcmanifoldsolidbrep math1.gif where V, E, F, L l and S are the numbers of unique vertices, edges, faces, loop uses and shells in the model and G s is the sum of the genus of the shells. NOTE Entity adapted from manifold solid brep defined in ISO 10303 42. HISTORY New entity in IFC Release 1.0 Informal proposition 1. The dimensionality of a manifold solid brep shall be 3. 2. The extent of the manifold solid brep shall be finite and non zero. 3. All elements of the manifold solid brep shall have defined associated geometry. 4. The shell normals shall agree with the B rep normal and point away from the solid represented by the B rep. 5. Each face shall be referenced only once by the shells of the manifold solid brep. 6. The Euler equation shall be satisfied for the boundary representation, where the genus term shell term us the sum of the genus values for the shells of the brep."

#:IFC.xml:10211
msgid "IfcManifoldSolidBrep_Outer"
msgstr "外观"

msgid "IfcManifoldSolidBrep_Outer_DEFINITION"
msgstr "确定固体外部边界的封闭式外壳。外壳正常必须指向离固体内部。"

#:IFC.xml:10223
msgid "IfcPointListDim__PointList"
msgstr "IfcPointListDim PointList"

#:IFC.xml:10231
msgid "IfcPolygonalBoundedHalfSpace"
msgstr "IfcPolygonalBoundedHalfSpace"

msgid "IfcPolygonalBoundedHalfSpace_DEFINITION"
msgstr "The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary. The base surface of the half space is positioned by its normal relative to the object coordinate system as defined at the supertype [[IfcHalfSpaceSolid]] , and its polygonal with or without arc segments boundary is defined in the XY plane of the position coordinate system established by the Position attribute, the subtraction body is extruded perpendicular to the XY plane of the position coordinate system, that is, into the direction of the positive Z axis defined by the Position attribute. The boundary is defined by a 2 dimensional polyline or 2 dimensional composite curve, consisting of straight segments and circular arc segments within the XY plane of the position coordinate system. The side of the surface which is in the half space is determined by the surface normal and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normal points away from. If the agreement flag is FALSE, then the subset is the one the normal points into. NOTE A polygonal bounded half space is not a subtype of [[IfcSolidModel]] , half space solids are only useful as operands in Boolean expressions. Figure 1 illustrates a polygonal bounded half space. Black coordinates indicate the object coordinate system usually provided by [[IfcLocalPlacement]] . Green coordinates indicate the position coordinate system the PolygonalBoundary is given within this coordinate system. It is provided by [[IfcPolygonalBoundedHalfSpace]].Position. This coordinate system is relative to the object coordinate system. The extrusion direction of the subtraction body is the positive Z axis. Red coordinates indicate the normal of the plane. It is provided by the BaseSurface [[IfcSurface]].Position . This normal is also relative to the object coordinate system. Figure 1 Polygonal half space geometry The polygonal bounded half space is used to limit the volume of the half space in Boolean difference expressions. Only the part that is defined by a theoretical intersection between the half space solid and an extruded area solid, defined by extruding the polygonal boundary, is used for Boolean expressions. The PolygonalBoundary defines the 2D polyline which bounds the effectiveness of the half space in Boolean expressions. The BaseSurface is defined by a plane, and the normal of the plane together with the AgreementFlag defines the side of the material of the half space. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The [[IfcPolyline]] or the [[IfcCompositeCurve]] providing the PolygonalBoundary shall be closed. 2. If the PolygonalBoundary is given by an [[IfcCompositeCurve]] , it shall only have [[IfcCompositeCurveSegment]] s of type [[IfcPolyline]] , or [[IfcTrimmedCurve]] having a BasisCurve of type [[IfcLine]] , or [[IfcCircle]] 3. The BaseSurface defined at supertype [[IfcHalfSpaceSolid]] shall be of type [[IfcPlane]] 4. The normal of the plane, being the BaseSurface , shall not be perpendicular to the z axis of the position coordinate system"

#:IFC.xml:10234
msgid "IfcPolygonalBoundedHalfSpace_Position"
msgstr "位置"

msgid "IfcPolygonalBoundedHalfSpace_Position_DEFINITION"
msgstr "1. 界定边界线和基表面的位置坐标系。"

#:IFC.xml:10246
msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary"
msgstr "多边边框"

msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary_DEFINITION"
msgstr "两维多线曲线，定义在位置坐标系统的xy平面上。 挂机ifc2x3 IFC2x3 变异. 属性类型已经从[[IfcPolyline]] 改为其超级类型 [[IfcBoundedCurve]]，并且基于文件交换的向上兼容。"

#:IFC.xml:10258
msgid "IfcPolygonalFaceSet"
msgstr "IfcPolygonalFaceSet"

msgid "IfcPolygonalFaceSet_DEFINITION"
msgstr "The [[IfcPolygonalFaceSet]] is a tessellated face set with all faces being bound by polygons. The planar faces are constructed by implicit polylines defined by three or more Cartesian points. Each planar face is defined by an instance of [[IfcIndexedPolygonalFace]] , or in case of faces with inner loops by [[IfcIndexedPolygonalFaceWithVoids]] . Depending on the value of the attribute Closed the instance of [[IfcPolygonalFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The attribute Faces refers to a list of [[IfcIndexedPolygonalFace]] s having an one based CoordIndex that provides three or more indices. If the face has inner loops, the [[IfcIndexedPolygonalFaceWithVoids]] has a two dimensional, one based list, where the first dimension of the two dimensional list addresses the list of inner loops the second dimension of the two dimensional list provides three or more indices each being a vertex of the planar polygon representing the inner loop. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifcpolygonalfaceset 01.png Figure 1 Use of PnIndex NOTE If the [[IfcPolygonalFaceSet]] is closed, the face vertices of the [[IfcIndexedPolygonalFace]] s shall connect counterclock wise when seen from the outside of the closed shell to guarantee that the face normal points away from the material of the shell. Inner loops, provided by the [[IfcIndexedPolygonalFaceWithVoids]] , shall connect clock wise. Figure 2 shows an IfcFacetedFaceSet represented by 1 [[IfcIndexedPolygonalFace]] 1, 2, 3, 4 2 [[IfcIndexedPolygonalFace]] 6, 2, 3, 7 3 [[IfcIndexedPolygonalFace]] 7, 3, 4, 8 4 [[IfcIndexedPolygonalFace]] 8, 4, 1, 5 5 [[IfcIndexedPolygonalFace]] 1, 4, 3, 2 6 [[IfcIndexedPolygonalFace]] 6, 7, 8, 5 7 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 2 Polygonal face set geometry NOTE The definition of IfcFacetedFaceSet is based on the indexedFaceSet defined in ISO IEC 19775 1 HISTORY New entity in IFC4 Addendum 2. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two outer or inner boundaries of faces the topological normal at each point on the boundary of the polygonal face set shall point away from the material of the solid."

#:IFC.xml:10186
msgid "IfcPolygonalFaceSet_Faces"
msgstr "面"

msgid "IfcPolygonalFaceSet_Faces_DEFINITION"
msgstr "不论是否有内部循环，多边形面部的列表将约束面设定。"

#:IFC.xml:10259
msgid "IfcPolygonalFaceSet_Closed"
msgstr "已关闭"

msgid "IfcPolygonalFaceSet_Closed_DEFINITION"
msgstr "指示[[IfcPolygonalFaceSet]] 是否是封闭的 shell 。如果忽略了此信息，则无法提供此种信息。"

#:IFC.xml:10264
msgid "IfcPolygonalFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcPolygonalFaceSet_PnIndex_DEFINITION"
msgstr "定义[[IfcCartesianPointList3D]] 中位置的整数列表以便在索引多边形面上获取指数的点坐标。 如果没有提供PnIndex ，则索引在索引多边面点直接进入[[IfcCartesianPointList3D]] 。"

#:IFC.xml:10271
msgid "IfcRectangularPyramid"
msgstr "IfcRectangularPyramid"

msgid "IfcRectangularPyramid_DEFINITION"
msgstr "[[IfcRectangularPyramid]] 是一个 CSG 3D 原始构造固体几何形状。 它是一个实心，有一个矩形基数和一个称为顶端的点。 从基础到顶部。从基础中心到顶部的轴垂直于底部。 继承的位置属性定义了IfcAxisPlacement3D 并提供了金字塔SELF [[IfcCsgPrimitive3D]]的位置和方向。 原始轴轴的位置和方向。SELF [[IfcCsgPrimitive3D]]。 位置，圆形区域的中心是圆锥的底部。 SELF [[IfcCsgPrimitive3D]].Position. osition 3 继承的位置坐标系的z轴提供了[[IfcRightCircularCone]] 的中心轴， 并且顶端位于z轴正向所适用的高度值。 底层半径定义放置坐标系统的旋转底层。 如图1所示，金字塔位于自己的安置协调系统。 起源是底部矩形的中心点，它位于XY 平面上。 顶端位于正z轴为0, 高度. 金字塔... ... fcrectangularphyramid layout1.png 图1 IFC2x3中的矩形金字塔几何形状，HISTORY New entity se Head 纹理使用定义。在每个三角形侧面上，纹理对齐。 根据重复劳动，纺织品被拉伸或重复，达到每面底部的程度。 根据重复T，纹理被拉伸或反复延到顶点，如果重复T是False，顶点坐标为0.5,1.0。 底部的纹理对齐前面。 图2显示默认纹理绘图与夹具的纹理重复、错误和重复错误绘制。 左边的图像显示了S轴向右和T轴向上的纹理位置。 右边的图像显示适用于X轴向右的几何形状的纹理。 Y轴向左返回，Z轴向上移。 圆形普通原产地XY 原产地Z S 轴向左X 0 YLength 0 Y朝上点 右X Xlength 0 Y朝上点 前Y 00 向上角 Y 0 向上角 Y 0 向上点 返回Y XLength YLength X 向上点 BoZ XLength 0 0 0 X 向上角 Bo XLength Y X 向上角 X XXLength 0 0 X X X Y 图2 矩形图"

#:IFC.xml:10272
msgid "IfcRectangularPyramid_Height"
msgstr "高度"

msgid "IfcRectangularPyramid_Height_DEFINITION"
msgstr "以放置Z轴、SELF [[IfcCsgPrimitive3D]]方向测量的基底平面上方的高度。 osition.P 2"

#:IFC.xml:10277
msgid "IfcRectangularPyramid_XLength"
msgstr "X长度"

msgid "IfcRectangularPyramid_XLength_DEFINITION"
msgstr "沿放置X轴测量基长度。 它由继承的轴通过SELF [[IfcCsgPrimitive3D]].Position.P 1 提供."

#:IFC.xml:10282
msgid "IfcRectangularPyramid_YLength"
msgstr "YLength"

msgid "IfcRectangularPyramid_YLength_DEFINITION"
msgstr "沿位置 Y 轴测量基长度。 它由继承的轴通过SELF [[IfcCsgPrimitive3D]].Position.P 2 提供."

#:IFC.xml:10289
msgid "IfcRevolvedAreaSolid"
msgstr "IfcRevolvedAreaSolid"

msgid "IfcRevolvedAreaSolid_DEFINITION"
msgstr "An [[IfcRevolvedAreaSolid]] is a solid created by revolving a cross section provided by a profile definition about an axis. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the revolved solid. If not provided, it defaults to the current object coordinate system. The axis and the cross section shall be in the same plane, prior to any repositioning. NOTE Both the axis and the cross section are required to lie in the xy plane of the object position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the revolved solid. The revolved area solid defines the revolution of a 2D area given by a profile definition by an axis and angle. The result is a solid. The swept area is given by a profile definition. The profile is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. The AxisLine can have any orientation within the XY plane, it does not have to be parallel to the y axis as shown in the illustration. Figure 1 Revolved area solid geometry EXAMPLE Figure 1 illustrates geometric parameters and additional positioning parameters of the revolved area solid. The revolved area solid defines the rotation of a 2D area by an axis and angle. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the x axis. Figure 2 Repositioned revolved area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A revolved area solid is a solid formed by revolving a planar bounded surface about an axis. The axis shall be in the plane of the surface and the axis shall not intersect the interior of the bounded surface. The bounded surface may have holes which will sweep into holes in the solid. The direction of revolution is clockwise when viewed along the axis in the positive direction. More precisely if A is the axis location and d is the axis direction and C is an arc on the surface of revolution generated by an arbitrary point p on the boundary of the swept area, then C leaves p in direction d x p A as the area is revolved. NOTE Entity adapted from revolved area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .spec head Informal Propositions 1. The AxisLine shall lie in the plane of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 2. The AxisLine shall not intersect the interior of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 3. The Angle shall be between 0 and 360 , or 0 and 2π depending on the unit type for [[IfcPlaneAngleMeasure]] . .use head Texture Use Definition For side faces, textures are aligned facing upright along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the outermost longest revolution path according to RepeatT , where coordinates are compressed towards the axis of revolution. For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcRevolvedAreaSolid]] having a profile of [[IfcTShapeProfileDef]] and revolved at 22.5 degrees, the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth . Figure 3 Revolved area solid textures"

#:IFC.xml:10301
msgid "IfcRevolvedAreaSolid_Axis"
msgstr "轴"

msgid "IfcRevolvedAreaSolid_Axis_DEFINITION"
msgstr "革命将要发生的轴心。"

#:IFC.xml:10290
msgid "IfcRevolvedAreaSolid_AxisLine"
msgstr "AxisLine"

msgid "IfcRevolvedAreaSolid_AxisLine_DEFINITION"
msgstr "革命轴线。"

#:IFC.xml:10294
msgid "IfcRevolvedAreaSolid_Angle"
msgstr "角度"

msgid "IfcRevolvedAreaSolid_Angle_DEFINITION"
msgstr "进行扫描的角度。 这个角度是从位置坐标系统的 XY 平面提供的横向平面测量的。"

#:IFC.xml:10313
msgid "IfcRevolvedAreaSolidTapered"
msgstr "IfcRepvolvedareaSolidTaped"

msgid "IfcRevolvedAreaSolidTapered_DEFINITION"
msgstr "[[IfcRevolvedAreaSolidTapered]] 被定义为沿圆弧旋转交叉部分。 交叉部分可能沿循环环节从起始交叉部分的形状转变为终交叉部分的形状。 然后连接起始和终交叉部分的对应顶点。 有边界的表面可能有些孔会渗入固体中的孔。 旋转轴由开始点SELF [[IfcSweptAreaSolid]]定义。 位置方向 [[IfcRevolvedAreaSolid]].Axis 旋转轴是 SELF [[IfcRevolvedAreaSolid]]。 xisline , 从起点和方向创建, 通过应用1个单位的体积。 旋转轴的正方向是顺时针使用正角。 开始交叉部分由SELF [[IfcSweptAreaSolid]]定义。 湿带A 有边界的平面地平面悬置于SELF 定义的位置坐标系统的 XY 平面[[IfcSweptAreaSolid]]。 osition.P 1 和 SELF [[IfcSweptAreaSolid]]。 osition.P 2 旋转轴位于起始交叉部分的平面，但不应跨越起始交叉部分的内部。 末尾交叉部分由EndSweptarea A 边界平面定义，在位置坐标系XY 平面上通过旋转SELF 提供的起始位置坐标[[IfcSweptAreaSolid]]来确定。 旋转轴周围由SELF给定的角度 [[IfcRevolvedAreaSolid]].角度 末尾交叉部分地形上与起始交叉部分相似，其顶点和边缘数量相同。 结束交叉部分可以通过使用不同参数值的相同参数配置定义. 或者在终端交叉面平面内对起始剖面进行2D转换。 固体是通过将起始交叉段转换成终截面生成的。 起始面、按起始和终交叉部分以及一个或多个横向面来界定的每一端正面。 每个横向面都是由一对对应的起始部分和终部分边缘所定义的一个经典表面。 统治表面由超级类型 [[IfcRevolvedAreaSolid]] 定义的圆柱面坐标空间构造。 IFC4. .spec head Informative Propositions 1. 镜像在 [[IfcDerivedProfileDef]].Operator不应被使用"

#:IFC.xml:10316
msgid "IfcRevolvedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcRevolvedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "EndSweptArea"

#:IFC.xml:10328
msgid "IfcRightCircularCone"
msgstr "IfcRightCircularCone"

msgid "IfcRightCircularCone_DEFINITION"
msgstr "[[IfcRightCircularCone]] 是一个 CSG 3D 原始构造固体几何形状。 这是一个有循环基数和被称为顶端的点的坚实基础。 从底部到顶部。从圆形基础中心到顶部的轴垂直于底部。 继承的位置属性定义了IfcAxisPlacement3D 并提供了锥形SELF [[IfcCsgPrimitive3D]]的位置和方向。 原始轴轴的位置和方向。SELF [[IfcCsgPrimitive3D]]。 位置，圆形区域的中心是圆锥的底部。 SELF [[IfcCsgPrimitive3D]].Position. osition 3 继承的位置坐标系的z轴提供了[[IfcRightCircularCone]] 的中心轴， 并且顶端位于z轴正向所适用的高度值。 底层半径定义放置坐标系统的旋转底层。 图1显示了锥形的几何参数，锥体位置在自己的位置坐标系统内。 起源是底部圆盘的中心，这个圆盘位于XY 平面上。 顶端位于正z轴为0, 0, 高度. 锥形1... ... figures ifcrightcircularcone layout1。 ng 图1 从ISO 10303 42界定的正确圆锥体变换的右圆锥形几何形状，IFC2x3 中的新实体。 使用头部纹理定义 在圆形边，纹理与源头对齐，Y后向循环计时器顺时针。 材质被拉伸或反复延伸到根据重复发生的基本环绕的程度。 根据重复测量，纹理会被缩进直线向上跳转至顶点。 底部的纹理与背对齐，圆圈的中心与纹理中心对齐。 图2显示默认纹理绘图与夹具的纹理重复、错误和重复错误绘制。 左边的图像显示了S轴向右和T轴向上的纹理位置。 右边的图像显示适用于X轴向右的几何形状的纹理。 Y轴向左返回，Z轴向上移。 .gidable side ormal origin X original Y origins Z S Axis T Axis Y 0 半径0 X 朝着顶点下 Bottom Z Radius 0 X Y. 图2 右圆锥形纹理"

#:IFC.xml:10329
msgid "IfcRightCircularCone_BottomRadius"
msgstr "底半径"

msgid "IfcRightCircularCone_BottomRadius_DEFINITION"
msgstr "基础圆锥的半径。"

#:IFC.xml:10334
msgid "IfcRightCircularCone_Height"
msgstr "高度"

msgid "IfcRightCircularCone_Height_DEFINITION"
msgstr "锥形和顶部之间的距离。"

#:IFC.xml:10341
msgid "IfcRightCircularCylinder"
msgstr "IfcRightControarCyclinder"

msgid "IfcRightCircularCylinder_DEFINITION"
msgstr "The [[IfcRightCircularCylinder]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a circular base and top. The cylindrical surface between if formed by points at a fixed distance from the axis of the cylinder. The inherited Position attribute defines the IfcAxisPlacement3D and provides SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cylinder. SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis provides the center axis and the height is measured from the origin along the positive direction of the z axis. Figure 1 illustrates geometric parameters of the cylinder. The cylinder is positioned within its own placement coordiante system. The origin is the center of the bottom circular disk, that lies in the XY plane. The center of the top circular disk is on the positive z axis at 0, 0, Height . cylinder .. .. .. .. figures ifcrightcircularcylinder layout1.png Figure 1 Right circular cylinder geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A right circular cylinder is a CSG primitive in the form of a solid cylinder of finite height. It is defined by an axis point at the centre of one planar circular face, an axis, a height, and a radius. The faces are perpendicular to the axis and are circular discs with the specified radius. The height is the distance from the first circular face centre in the positive direction of the axis to the second circular face centre. NOTE Entity adapted from right circular cylinder defined in ISO 10303 42. HISTORY New entity in IFC2x3. .use head Texture use definition On the circular side, textures are aligned facing upright with origin at the back Y direction revolving counter clockwise. Textures are stretched or repeated to the extent of the circumference according to RepeatS. Textures are stretched or repeated to the extent of the Height according to RepeatT. On the top and bottom faces, textures are aligned facing front to back, with the center of the circle aligned to the center of the texture. Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Side Y 0 Radius 0 X Z Bottom Z Radius Radius 0 X Y Top Z Radius Radius Height X Y Figure 2 Right circular cylinder textures"

#:IFC.xml:10342
msgid "IfcRightCircularCylinder_Height"
msgstr "高度"

msgid "IfcRightCircularCylinder_Height_DEFINITION"
msgstr "气瓶平面面之间的距离。"

#:IFC.xml:10347
msgid "IfcRightCircularCylinder_Radius"
msgstr "Radius"

msgid "IfcRightCircularCylinder_Radius_DEFINITION"
msgstr "气瓶半径。"

#:IFC.xml:10354
msgid "IfcSectionedSolid"
msgstr "IfcSectionedSolid"

msgid "IfcSectionedSolid_DEFINITION"
msgstr "一个 [[IfcSectionedSolid]] 是一个抽象的基础类型，由一个方向沿着潜在变量横截构造的固体组合。"

#:IFC.xml:10357
msgid "IfcSectionedSolid_Directrix"
msgstr "准线"

msgid "IfcSectionedSolid_Directrix_DEFINITION"
msgstr "用于定义全面操作的曲线。"

#:IFC.xml:10369
msgid "IfcSectionedSolid_CrossSections"
msgstr "交叉部分"

msgid "IfcSectionedSolid_CrossSections_DEFINITION"
msgstr "沿Directrix顺序排列的交叉部分。"

#:IFC.xml:10381
msgid "IfcSectionedSolidHorizontal"
msgstr "IfcSectionedSolidontal"

msgid "IfcSectionedSolidHorizontal_DEFINITION"
msgstr "An [[IfcSectionedSolidHorizontal]] is a solid model constructed by sweeping potentially varying cross sections along a curve horizontally. The solid is generated by sweeping the CrossSections between CrossSectionPositions with linear interpolation of profile points, where the profile normal agrees with the tangent of the Directrix , the profile X axis is oriented perpendicularly to the left of the Directrix same direction as LateralOffset at [[IfcPointByDistanceExpression]] as facing forward along the directrix, and the profile Y axis is oriented upwards according to FixedAxisVertical . For sections having cross section rotated according to a single super elevation, [[IfcDerivedProfileDef]] may be used to indicate such rotation with each ParentProfile referring to the same underlying profile. For sections having cross section transformed according to multiple super elevations with points varying independently, each profile may be of a different instance but of same type e.g. [[IfcArbitraryClosedProfileDef]] , and may optionally have cross section points associated to string lines guide curves using [[IfcIndexedPolyCurve]] with IfcCartesianPointList2DLabelled . Figure 1 illustrates four girders of a bridge having a constant parameterized profile, two guardrails having a constant arbitrary profile one of them mirrored , and a bridge deck having a variable arbitrary profile. spatial structure .. .. .. .. figures ifcsectionedsolidhorizontal.png Figure 1 Sectioned solid horizontal Informal Propositions 1. No two consecutive sections shall intersect. 2. If the type of sections is not [[IfcParameterizedProfileDef]] i.e. an arbitrary profile , then the number of points and edges should be the same for two consecutive profiles 3. If the directrix is not tangent continuous, the resulting solid is created by a miter at half angle between the two segments. 4. Very sharp edges may result in nearly impossible miter implementer agreements may define acceptable limits for tangent discontinuity or require the directrix to be tangent continuous. 5. The directrix shall not intersect"

#:IFC.xml:10384
msgid "IfcSectionedSolidHorizontal_CrossSectionPositions"
msgstr "跨部门位置"

msgid "IfcSectionedSolidHorizontal_CrossSectionPositions_DEFINITION"
msgstr "按顺序增加顺序与交叉部分配对的远程表达式列表，表明对应部分沿Directrix的位置。"

#:IFC.xml:10396
msgid "IfcSectionedSpine"
msgstr "IfcSectionedSpine"

msgid "IfcSectionedSpine_DEFINITION"
msgstr "An [[IfcSectionedSpine]] is a representation of the shape of a three dimensional object composed by a number of planar cross sections, and a spine curve. The shape is defined between the first element of cross sections and the last element of the cross sections. A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. All cross sections have to define areas by a closed profile to allow for the representation of a solid. All cross sections have to define curves by an open or closed profile to allow for the representation of a surface. The cross sections are defined by subtypes of [[IfcProfileDef]] , where the consecutive profiles may be derived by a transformation of the start profile or the previous consecutive profile. The spine curve shall be of type [[IfcCompositeCurve]] , each of its segments represented by [[IfcCompositeCurveSegment]] shall correspond to the part between exactly two consecutive cross sections. Figure 1 illustrates an example of an [[IfcSectionedSpine]] . The SpineCurve is given by an [[IfcCompositeCurve]] with two Segments . The Segments 1 has a ParentCurve of type [[IfcPolyline]] and a Transition CONTSAMEGRADIENT. The Segments 2 has a ParentCurve of type [[IfcTrimmedCurve]] and a Transition DISCONTINUOUS. Each CrossSectionPosition lies at a start or end point of the Segments . Each CrossSections are inserted by the CrossSectionPositions . The first two cross sections are of type [[IfcRectangleProfileDef]] , the third is of type [[IfcDerivedProfileDef]] . spine 1 .. .. .. .. figures ifcsectionedspine layout1.gif Figure 1 Sectioned spine geometry Figure 2 illustrates the final result of the [[IfcSectionedSpine]] . The body shown transparently is not fully defined by the exchange definition. render .. .. .. .. figures ifcsectionedspine.jpg Figure 2 Sectioned spine result .extDef NOTE Definition according to ISO CD 10303 42 1992 A sectioned spine is a representation of the shape of a three dimensional object composed of a spine curve and a number of planar cross sections. The shape is defined between the first element of cross sections and the last element of this set. NOTE A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. For the representation of a solid all cross sections are closed curves. NOTE Entity adapted from sectioned spine defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. none of the cross sections, after being placed by the cross section positions, shall intersect 2. none of the cross sections, after being placed by the cross section positions, shall lie in the same plane 3. the local origin of each cross section position shall lie at the beginning or end of a composite curve segment."

#:IFC.xml:10404
msgid "IfcSectionedSpine_SpineCurve"
msgstr "刻度曲线"

msgid "IfcSectionedSpine_SpineCurve_DEFINITION"
msgstr "一个单一的复合曲线，界定脊柱曲线。每个复合曲线部分对应于两个交叉部分之间的部分。"

#:IFC.xml:10416
msgid "IfcSectionedSpine_CrossSections"
msgstr "交叉部分"

msgid "IfcSectionedSpine_CrossSections_DEFINITION"
msgstr "至少有两个横截面的列表，这两个横截面都是在横截面的位置坐标系统的xy平面内定义的。 位置坐标系统由相应的列表交叉部分位置提供。"

#:IFC.xml:10428
msgid "IfcSectionedSpine_CrossSectionPositions"
msgstr "跨部门位置"

msgid "IfcSectionedSpine_CrossSectionPositions_DEFINITION"
msgstr "用于形成分割区段的交叉部分的位置协调系统。 定义交叉部分的配置文件放置在相应位置坐标系统的xi平面内。"

#:IFC.xml:10397
msgid "IfcSectionedSpine_Dim"
msgstr "Dim"

msgid "IfcSectionedSpine_Dim_DEFINITION"
msgstr "脊椎曲线的尺寸始终是3。"

#:IFC.xml:10440
msgid "IfcSectionedSurface"
msgstr "IfcSectionedSurface"

msgid "IfcSectionedSurface_DEFINITION"
msgstr "A kind of surface constructed by sweeping potentially varying open cross sections along a curve horizontally or near horizontally . The surface is generated by sweeping the CrossSections between CrossSectionPositions linear interpolation is assumed, unless transitions curves between cross section points are indicated by OpenCrossProfileDef.Tags. The CrossSections are oriented with the Y axis of each profile facing upwards in Z direction or vertically perpendicular to the Directrix, depending on the Attribute FixedAxisVertical value. sectioned surfacequot .. .. .. .. figures [[IfcSectionedSurface]] 1.png Figure 1 Sectioned surface using [[IfcOpenCrossProfileDef]] In case of branching longitudinal breaklines, the SectionedSurface may use OpenCrossProfileDef instances with varying number of cross section points. In that case, the point in two consecutive cross sections that are connected are identified by the same tag value. sectioned surfacequot .. .. .. .. figures [[IfcSectionedSurface]] 2.png Figure 1 Sectioned surface with branching longitudinal breaklines Formal propositions The curve entity which is the underlying directrix shall have the dimensionality of 3. The profile type shall be CURVE within the list of the profiles defining the cross sections. The entity type for each section must be the same. The list of cross sections and the list of cross section positions shall be of the same size. Informal Propositions No two consecutive sections shall intersect. If the directrix is not tangent continuous, the resulting surface is created by a miter at half angle between the two segments. Very sharp edges may result in nearly impossible miter implementer agreements may define acceptable limits for tangent discontinuity or require the directrix to be tangent continuous. The directrix shall not intersect"

#:IFC.xml:10443
msgid "IfcSectionedSurface_Directrix"
msgstr "准线"

msgid "IfcSectionedSurface_Directrix_DEFINITION"
msgstr "用于定义全局操作的曲线"

#:IFC.xml:10455
msgid "IfcSectionedSurface_CrossSections"
msgstr "交叉部分"

msgid "IfcSectionedSurface_CrossSections_DEFINITION"
msgstr "沿Directrix顺序排列的交叉部分"

#:IFC.xml:10467
msgid "IfcSectionedSurface_CrossSectionPositions"
msgstr "跨部门位置"

msgid "IfcSectionedSurface_CrossSectionPositions_DEFINITION"
msgstr "按顺序增加顺序排列的远程表达式与交叉部分配对，表明对应部分沿方向的位置。"

#:IFC.xml:10479
msgid "IfcShellBasedSurfaceModel"
msgstr "IfcShellBasedSurface模型"

msgid "IfcShellBasedSurfaceModel_DEFINITION"
msgstr "一个 [[IfcShellBasedSurfaceModel]] 代表一组开口或闭口外壳的形状。 外壳内的连接面具有维度2，并放置在坐标范围内。 按照ISO CD 10303 42 1992，xtDef 注解定义 以炮弹为基础的表面模型由一组开放或闭合的尺寸2型炮弹形成。 炮弹不得相互交错，除非是在边缘和顶端，特别是不同的面可能不能相互交织。 一个炮弹的完整面可以与另一个炮弹共享。 炮弹的碰撞部分应同时参照相同的面、边缘和顶点，并至少应有一枚炮弹。 一个外壳可以独立于一个表面模型存在。从ISO 10303 42定义的基于外壳的表面模型中改编的注实体也可以存在。 IFC2x.spec头部非正式提议1中的HISTORY 新实体。基于 shell 的表面模型的尺寸是2。 2. 炮弹不得重叠或交叉，除非是在同一面、边缘或顶点。"

#:IFC.xml:10480
msgid "IfcShellBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcShellBasedSurfaceModel_Dim_DEFINITION"
msgstr "这个类别的空间尺寸总是3。"

#:IFC.xml:10485
msgid "IfcShellBasedSurfaceModel_SbsmBoundary"
msgstr "斯布斯姆边界"

msgid "IfcShellBasedSurfaceModel_SbsmBoundary_DEFINITION"
msgstr "斯布斯姆边界"

#:IFC.xml:10492
msgid "IfcSolidModel"
msgstr "IfcSolidModel"

msgid "IfcSolidModel_DEFINITION"
msgstr "一个 [[IfcSolidModel]] 代表不同类型固体模型表示的3D 形状。 它是共同抽象的边界代表、CSG代表、通盘代表和其他适当的稳固代表制度。 按照ISO CD 10303 42 1992，xtDef 注解定义 一个固体模型是一种产品名义形状的完整表述，内地所有点都能连接。 任何点都可以归类为内置、外界或固态边界，有几种不同类型的固体型号。 从ISO 10303 42界定的固体模型中改装的注实体，IFC1.5中的新实体"

#:IFC.xml:10493
msgid "IfcSolidModel_Dim"
msgstr "Dim"

msgid "IfcSolidModel_Dim_DEFINITION"
msgstr "这个类别的空间尺寸总是3。"

#:IFC.xml:10502
msgid "IfcSphere"
msgstr "IfcSphere"

msgid "IfcSphere_DEFINITION"
msgstr "[[IfcSphere]] 是一个 CSG 3D 原始构造固体几何形状。 它是一种固体，表面上的所有点都与中心点有相同的距离。 继承的位置属性定义了IfcAxisPlacement3D并提供SELF [[IfcCsgPrimitive3D]]。 osition The location and orposition of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The centre of the field, SELF [[IfcCsgPrimitive3D]].Position. Position. 倾斜轴向北极方向及其向南极方向倾斜。 EXAMPLE 图1说明了该领域的几何参数。该领域位于其自己的位置配对系统内相对于物体坐标系统的位置。 来源是领域的中心。图1 球形几何形状. 按照ISO CD 10303 42 1992，xtDef 注解定义 A 球体是一个CSG原始形状，由一个中心和一个半径来定义。 从ISO 10303 42所界定的领域中改编的注实体，在IFC2x3中新建实体。 se Head Texture Use Definition Textures is alogen with upright origined at the backast Y rowing count ocknow. 根据重复和重复，纹理在赤道处被拉伸或重复，达到环绕的程度。 图2显示默认纹理绘图与夹具的纹理重复、错误和重复错误绘制。 左边的图像显示了S轴向右和T轴向上的纹理位置。 右边的图像显示适用于X轴向右的几何形状的纹理。 Y轴向左返回，Z轴向上移。 .gidable side ormal origin X original Y original Z S Axis T Axis side Y 0 Radius 0 X, 然后曲线顺时针Z，然后曲线到顶部图2球形纹理"

#:IFC.xml:10503
msgid "IfcSphere_Radius"
msgstr "Radius"

msgid "IfcSphere_Radius_DEFINITION"
msgstr "范围的半径。"

#:IFC.xml:10510
msgid "IfcSurfaceCurveSweptAreaSolid"
msgstr "IfcSurfaceCurveSweptAreaSolid"

msgid "IfcSurfaceCurveSweptAreaSolid_DEFINITION"
msgstr "The [[IfcSurfaceCurveSweptAreaSolid]] is the result of sweeping an area along a directrix that lies on a reference surface. The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the tangent of the directrix at this point, and the profile s x axis agrees to the surface normal. At any point along the directrix, the swept profile origin lies on the directrix, the profile s normal points towards the tangent of the directrix, and the profile s x axis is identical to the surface normal at this point. NOTE The profile area s normal has to be identical to the tangent of the directrix at any given point. In case of a directrix having a linear segment at the start point, the segment has to be perpendicular to the profile at start. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , the parameter value is provided based on the curve parameterization. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , the parameter value is provided based on the curve parameterization. If no EndParam is provided the end defaults to the end of the directrix. The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE The StartParam and the EndParam are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. In case of a closed curve, such as [[IfcCircle]] or [[IfcEllipse]] , as the directrix, StartParam and the EndParam shall not exceed the parametic range, they shall not be 360 . EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In most cases, it is a plane or a surface of extrusion. The directrix lies on the surface, in case of a plane it might be defined as a polyline or composite curve, in case of a cylindrical or other non planer reference surface it might often be defined as a p curve on this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system of the implicit plane lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the normal of the reference surface at this point. The Axis2 the y axis, or v is constructed. The resulting body of the swept solid is not repositioned if the inherited Position attribute is omitted. Otherwise the coordinate system established by the Position attribute is used to reposition the body relative to the object coordinate system. EXAMPLE Figure 1 illustrates an example using a cylindrical reference surface and a p curve for sweeping a rectangle. The Postion is not provided and therefore it does not reposition the resulting swept solid. Figure 2 shows the expected result.NOTE The start of the directrix lies at the origin of the object coordinate system, as shown in the illustration,only by coincidence. The start of the directrix and thereby the start of the sweeping operation might be at any point within the object coordinate system and only depends on the position of the directrix.Figure 1 Surface curve wept area solid parameter Figure 2 Surface curve wept area solid results .extDef NOTE Definition according to ISO CD 10303 42 1992 A surface curve swept area solid is a type of swept area solid which is the result of sweeping a face along a Directrix lying on a ReferenceSurface . The orientation of the SweptArea is related to the direction of the surface normal. The SweptArea is required to be a curve bounded surface lying in the plane z 0 and this is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the normal to the ReferenceSurface at the current point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a Cartesian Transformation Operator 3D with attributes Local origin as point 0., 0., 0 , Axis 1 as the normal N to the reference surface at the point of the directrix with parameter u. Axis 3 as the direction of the tangent vector t at the point of the directrix with parameter u. The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the directrix parameter u. NOTE Entity adapted from surface curve swept area solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The SweptArea shall lie in the implicit plane z 0. 2. The Directrix shall lie on the ReferenceSurface ."

#:IFC.xml:10513
msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface"
msgstr "ReferenceSurface"

msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface_DEFINITION"
msgstr "ReferenceSurface"

#:IFC.xml:10525
msgid "IfcSweptAreaSolid"
msgstr "IfcSweptAreaSolid"

msgid "IfcSweptAreaSolid_DEFINITION"
msgstr "一个 [[IfcSweptAreaSolid]] 代表着一个全面的表示方案的3D 形状，允许两维平面交叉穿越太空。 横向区域由交叉部分定义，如果是 [[IfcProfileDef]] , 则由子类型表示， 这是作为隐形平面上两维封闭边界提供的。 横向区域是在对象坐标系的xy 平面上定义的。 扫射操作适用于子类型[[IfcSweptAreaSolid]] 中定义的扫射区域， 某些子类型需要将干燥区域暗中转换为干燥的起始位置。 可选的 Positio n 坐标系统允许重新定位由此产生的相对于物体坐标系统的漂移固体。 .extdef 根据ISO CD10303 42 1992年规定的注解定义 位置是横向固态的空间将取决于整个面积的位置。 干燥地区将是由此产生的整个干燥地区的一面， 除非旋转区域固体，角度等于2位或360度。 从ISO 10303 42界定的干燥区域固体中改装的注实体。 在 IFC1.5.change ifc2x4 IFC4 变异中的新实体 属性位置已经更改为OPTIA，并且基于文件交换向上兼容。"

#:IFC.xml:10528
msgid "IfcSweptAreaSolid_SweptArea"
msgstr "SweptArea"

msgid "IfcSweptAreaSolid_SweptArea_DEFINITION"
msgstr "定义待洗的区域的表面。它作为一个配置文件定义在位置坐标系统的xy平面内。"

#:IFC.xml:10540
msgid "IfcSweptAreaSolid_Position"
msgstr "位置"

msgid "IfcSweptAreaSolid_Position_DEFINITION"
msgstr "由此产生的通风操作的位置协调系统。位置协调系统允许流浪固体的重新定位。 如果不提供，则冲积的固态残余在交叉路段或用于全面操作的方向所确定的位置内。 .更改 ifc2x4 IFC4 变迁. 属性已被更改为 OPTTRegion, 并具有基于文件的交换的向上兼容性。"

#:IFC.xml:10552
msgid "IfcSweptDiskSolid"
msgstr "IfcSweptDiskSolid"

msgid "IfcSweptDiskSolid_DEFINITION"
msgstr "An [[IfcSweptDiskSolid]] represents the 3D shape by a sweeping representation scheme allowing a two dimensional circularly bounded plane to sweep along a three dimensional Directrix through space. The StartParam and EndParam parameter are optional, if not provided they default to the start and end of the Directrix . Only if the Directrix is given by a bounded or by a closed curve, it is permissible to omit the values of StartParam and EndParam . If the transitions between consecutive segments of the Directrix are not tangent continuous, the resulting solid is created by a miter at half angle between the two segments. Informal proposition restricts the permissible angle between two non tangent continuous segments. Figure 1 illustrates an example. Directrix given as [[IfcIndexedPolyCurve]] , having linear and circular arc segments, that are tangent continuous between each segments Directrix being a bounded and open curve No StartParam and EndParam are provided, start and end default to start and end of the bounded curve of the Directrix NOTE Although the example shows a Directrix as a poly curve on a planar reference surface, the definition of [[IfcSweptDiskSolid]] is not restricted to be based on planer curves. However view definitions or implementer agreements may provide restrictions. NOTE The geometric item [[IfcIndexedPolyCurve]] provides a more compact representation compared with [[IfcCompositeCurve]] as is therefore the prefered curve representation for the Directrix . disk solid .. .. .. .. figures ifcsweptdisksolid layout1.png Figure 1 Swept disk solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A swept disk solid is the solid produced by sweeping a circular disk along a three dimensional curve. During the sweeping operation the normal to the plane of the circular disk is in the direction of the tangent to the directrix curve and the center of the disk lies on the directrix. The circular disk may, optionally, have a central hole, in this case the resulting solid has a through hole, or, an internal void when the directrix forms a close curve. NOTE Entity adapted from swept disk solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE The attribute StartParam and EndParam have been made optional. .spec head Informal Propositions 1. If the Directrix curve definition is not tangent continuous, the transition between the segments has to be within an acceptable limit of tangent discontinuity. Very sharp edges may result in nearly impossible miter. Implementer agreements may define acceptable limits for tangent discontinuity. 2. The segments of the Directrix shall be long enough to apply the Radius . In case of an arc segment forming part of the Directrix , its radius shall be greater then the disk Radius 3. The Directrix shall not be based on an intersecting curve."

#:IFC.xml:10575
msgid "IfcSweptDiskSolid_Directrix"
msgstr "准线"

msgid "IfcSweptDiskSolid_Directrix_DEFINITION"
msgstr "用于定义通风操作的曲线。固态通过沿Directrix的环形磁盘扫过来生成。"

#:IFC.xml:10553
msgid "IfcSweptDiskSolid_EndParam"
msgstr "EndParam"

msgid "IfcSweptDiskSolid_EndParam_DEFINITION"
msgstr "通盘操作结束时的 Directtrix 参数值。 如果没有提供任何价值，则通盘操作的结束处于Directrix的末尾。 .更改 ifc2x4 IFC4 变迁. 属性已被更改为 OPTTRegion, 并具有基于文件的交换的向上兼容性。"

#:IFC.xml:10558
msgid "IfcSweptDiskSolid_InnerRadius"
msgstr "InnerRadius"

msgid "IfcSweptDiskSolid_InnerRadius_DEFINITION"
msgstr "这个属性是可选的，如果它显示它定义了磁盘中心圆形孔的半径。"

#:IFC.xml:10563
msgid "IfcSweptDiskSolid_Radius"
msgstr "Radius"

msgid "IfcSweptDiskSolid_Radius_DEFINITION"
msgstr "旋转磁盘的半径。如果应用内半径，则表示外空。"

#:IFC.xml:10568
msgid "IfcSweptDiskSolid_StartParam"
msgstr "StartParam"

msgid "IfcSweptDiskSolid_StartParam_DEFINITION"
msgstr "展开全面作业的 Directrix 参数值。 如果没有提供任何值，则通盘操作的开始时间是在 Directrix 开始时。 .更改 ifc2x4 IFC4 变迁. 属性已被更改为 OPTTRegion, 并具有基于文件的交换的向上兼容性。"

#:IFC.xml:10587
msgid "IfcSweptDiskSolidPolygonal"
msgstr "IfcSweptDiskSolid多边形"

msgid "IfcSweptDiskSolidPolygonal_DEFINITION"
msgstr "[[IfcSweptDiskSolidPolygonal]] 是一个 [[IfcSweptDiskSolid]]，在那里，Directrix 被限制为只能由极限线提供。 一个可选的 FilletRadius 属性可以被断言，然后它将作为一个文件应用到折线段之间的所有过渡中。 注意几何项[[IfcIndexedPolyCurve]] 提供了一个比[[IfcPolyline]] 更紧凑的表示方式。 因此，这是Directrix的首选曲线。 [[IfcIndexedPolyCurve]] 不能定义段段，将其重新划定为仅限投票线。 国际化学品统一分类标签制度中的HISTORY 新实体。 .spec首长非正式提议1。 提供的 FilletRadius 必须小于或等于[[IfcPolyline]] 的起始和终段长度， 并且小于或等于最短内段长度的一半。"

#:IFC.xml:10588
msgid "IfcSweptDiskSolidPolygonal_FilletRadius"
msgstr "Fillet半径"

msgid "IfcSweptDiskSolidPolygonal_FilletRadius_DEFINITION"
msgstr "同样适用于所有离子对段的 [[IfcPolyline]] 之间转换的文件， 为Directrix提供几何表示。 如果被忽略，没有文件应用于片段。"

#:IFC.xml:10595
msgid "IfcTaperedSweptAreaProfiles__StartArea"
msgstr "IfcTaperedSweptAreaProfiles StartArea"

#:IFC.xml:10603
msgid "IfcTessellatedFaceSet"
msgstr "IfcTessellatedFaceSet"

msgid "IfcTessellatedFaceSet_DEFINITION"
msgstr "[[IfcTessellatedFaceSet]] 是一个局限于平面面面和直径边缘的边界形状地形模型。 它可以是分析表面或固体的近似值，这种近似值可以作为一种单独的形状表示而提供的。 [[IfcTessellatedFaceSet]] 提供了一个使用指数排列为有序垂直列表的连接面集的精密数据表示， 普通、颜色和纹理地图。 注意到选择紧凑的表述方式是为了使小型数据集能够使用，尽管可能存在大量的面孔， 代表分析表面和固体的四极划线所需的边缘和顶点， 而且尽管有大量彩色和纹理信息来注释四面孔。 [[IfcTessellatedFaceSet]] 是一个抽象的超型的四面面板，每个面包都对面代施加了特定的限制以供tessellation， 例如带有或不带带有斜线的三角形，或四边形，或带有或不带内环的多边形面部。 注不是所有不同的脸部组合限制都作为特定子类型包含在这个规格的发布中。 以下属性适用于所有子类型 The Coordinates are the ordered list of Cartesselated points representing the vertices of tesselated item 一个以子类型级别定义的索引列表使用按索引位置确定的点来构造代表面的多边线。 HasColours 反向关系提供索引彩色图，附有相应的指数清单，为四层面的每一面提供颜色。 急速纹理反向关系提供索引纹理图，附有相应的索引清单，其中提供了向代表面的多边线几何坐标地图的纹理坐标的纹理坐标。 四极化面组的每个面必须至少有三个非相同事件顶点顶点，用以定义一个非自连多边形的平面多边形。 注： [[IfcTessellatedFaceSet]] 的定义基于ISO IEC 1975 1 ISTORY 新实体在 IFC 4 中定义的索引Facebook集。"

#:IFC.xml:10000
msgid "IfcTessellatedFaceSet_Coordinates"
msgstr "坐标"

msgid "IfcTessellatedFaceSet_Coordinates_DEFINITION"
msgstr "由 [[IfcTessellatedFaceSet]] 子类型定义的坐标索引使用的有序的卡特斯点列表。"

#:IFC.xml:10612
msgid "IfcTessellatedFaceSet_HasColours"
msgstr "急速颜色"

msgid "IfcTessellatedFaceSet_HasColours_DEFINITION"
msgstr "引用索引颜色图提供了相应的颜色 RGB 值到子类型 [[IfcTessellatedFaceSet]] 的脸部。"

#:IFC.xml:10626
msgid "IfcTessellatedFaceSet_HasTextures"
msgstr "急速纹理"

msgid "IfcTessellatedFaceSet_HasTextures_DEFINITION"
msgstr "参考索引纹理图，提供相应的纹理坐标到顶点边缘边框 [[IfcTessellatedFaceSet]] 的面。"

#:IFC.xml:10604
msgid "IfcTessellatedFaceSet_Dim"
msgstr "Dim"

msgid "IfcTessellatedFaceSet_Dim_DEFINITION"
msgstr "这个几何形状项的空间尺度总是3。"

#:IFC.xml:10640
msgid "IfcTessellatedItem"
msgstr "IfcTessellatedItem"

msgid "IfcTessellatedItem_DEFINITION"
msgstr "[[IfcTessellatedItem]] 是所有四舍五入几何模型的抽象超级类型。IFC4中的HISTORY 新实体。"

#:IFC.xml:10643
msgid "IfcTriangulatedFaceSet"
msgstr "IfcTriangulatedFacebook设置"

msgid "IfcTriangulatedFaceSet_DEFINITION"
msgstr "The [[IfcTriangulatedFaceSet]] is a tessellated face set with all faces being bound by triangles. The faces are constructed by implicit polylines defined by three Cartesian points. Depending on the value of the attribute Closed the instance of [[IfcTriangulatedFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The coordinates of each point are provided by a one based index into an ordered list of Cartesian points provided by the two dimensional list CoordIndex , where the first dimension of the two dimensional list addresses the list of triangular faces the second dimension of the two dimensional list provides exactly three indices. Each index points to a Cartesian point being a vertex of the triangle. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifctriangulatedfaceset 03.png Figure 1 Use of PnIndex See Figure 2 for using the [[IfcTriangulatedFaceSet]] without as default and with using the PnIndex . [[IfcTriangulatedFaceSet]] 01 .. .. .. .. figures ifctriangulatedfaceset 01.png Figure 2 Triangulated face set Optionally normals can be provided. Only normals per vector are supported allowing for visually curved triangles when the three normals of the corresponding three vertices of a triangle are not co linear to the normal of the triangular face. If they are identical, normals shall be omited. NOTE In case of a body representation having triangular faces with curvature, different normals for all three vertices in context of this triangles are exported, describing the curvature for smooth visualisation. In case of triangular faces with no curvature, the three vertex based normals are identical and could always be computed from the face. Therefore vertices should only be exported to support smooth visualisation by curvature of triangles. In case of faceted representation no vertices should be exported. Normals are provided by the two dimensional list Normals , where the first dimension of the two dimensional list addresses the corresponding list of vertex indices of the triangular faces the second dimension of the two dimensional list provides exactly three real values to determine the direction of the normal at this vertex of the triangle. The indices in the CoordIndex point into the list of Normals . The indices of CoordIndex are applied to both points, either directly directly, or via the PnIndex and normals. See Figure 3 for handling of normals. [[IfcTriangulatedFaceSet]] 02 .. .. .. .. figures ifctriangulatedfaceset 02.png Figure 3 Triangulated face set with normals NOTE Using corresponding lists of points and normals allows to use only a single list of indices into both at the expense of having non unique collections of vertices. Figure 4 shows the use of [[IfcTriangulatedFaceSet]] without annotation. The diagram of the [[IfcTriangulatedFaceSet]] represents the indices and the ordered list into which the indices point. The index starts with 1 indexed as 1 to N , if the greatest index in CoordIndex in N, then the [[IfcCartesianPointList]] shall have N lists of 3 3 coordinates. Figure 168 shows an [[IfcTriangulatedFaceSet]] represented by CoordIndex 1,6,5 , 1,2,6 , 6,2,7 , 7,2,3 , 7,8,6 , 6,8,5 , 5,8,1 , 1,8,4 , 4,2,1 , 2,4,3 , 4,8,7 , 7,3,4 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 4 Triangulated face set geometry NOTE The definition of [[IfcTriangulatedFaceSet]] is based on the indexedFaceSet and indexedTriangleSet defined in ISO IEC 19775 1. The use of PnIndex has been adopted from triangulated surface set defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two boundaries of faces the topological normal at each point on the boundary of the triangulated face set shall point away from the mater ial of the solid."

#:IFC.xml:10644
msgid "IfcTriangulatedFaceSet_NumberOfTriangles"
msgstr "数字Of三角形"

msgid "IfcTriangulatedFaceSet_NumberOfTriangles_DEFINITION"
msgstr "用于此三角形的三角形数量。"

#:IFC.xml:10649
msgid "IfcTriangulatedFaceSet_Closed"
msgstr "已关闭"

msgid "IfcTriangulatedFaceSet_Closed_DEFINITION"
msgstr "指示[[IfcTriangulatedFaceSet]] 是否是封闭的 shell 。如果忽略了此信息，则无法提供此种信息。"

#:IFC.xml:10654
msgid "IfcTriangulatedFaceSet_CoordIndex"
msgstr "CoordIndex"

msgid "IfcTriangulatedFaceSet_CoordIndex_DEFINITION"
msgstr "基于索引的三角形的两维列表， 第一维度代表从1到N的三角形。 第二维度正好有三个数值，代表从1到3之间的三个顶点点。 注意顶点的坐标由SELF [[IfcTessellatedFaceSet]].CoordList 索引列表提供。"

#:IFC.xml:10659
msgid "IfcTriangulatedFaceSet_Normals"
msgstr "常量"

msgid "IfcTriangulatedFaceSet_Normals_DEFINITION"
msgstr "一个三个方向的顺序列表。它是三个参数值提供的方向的两维列表。 第一个尺寸对应坐标系的顶点指数。第二个尺寸正好有三个数值。 1 x 方向，2 y 方向，3 z 方向"

#:IFC.xml:10664
msgid "IfcTriangulatedFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcTriangulatedFaceSet_PnIndex_DEFINITION"
msgstr "定义在 [[IfcCartesianPointList3D]] 中的位置的整数列表来获取指向CoordIndex 的指数的点坐标。 如果没有提供PnIndex ，该指数点直接到 [[IfcCartesianPointList3D]] 。"

#:IFC.xml:10671
msgid "IfcTriangulatedIrregularNetwork"
msgstr "IfcTriangulated非正规网络"

msgid "IfcTriangulatedIrregularNetwork_DEFINITION"
msgstr "[[IfcTriangulatedIrregularNetwork]] 是一个三角形的面集，用于代表横向表面的唯一Z坐标，它适用于所有X和Y坐标域，并且每个面的标记都显示面部或指定为洞或空格之间的断线。 三角形的定义应为逆时针顺序中的顶点，以从上面的右手规则来看待。 对于可视化，应用程序不应显示标记设置为负孔、无效或未来可能扩展的面部。 旗帜虚空应用来表示面部不会在任何其他几何状态下掉落。 这种指定可用于建筑物或其他结构下的场址的一部分。 国旗霍尔应被用来表示面部将被排除，但可能会落在其他几何形状上。 此种指定可用于拟议场址中与现有场址保持不变的部分，这些场址也可加以界定。 任何标为虚空的三角形必须保留为空， 当任何三角形标记为Hole时，如果另一个表面在同一水平位置内有可视的几何形状则必须覆盖。"

#:IFC.xml:10672
msgid "IfcTriangulatedIrregularNetwork_Flags"
msgstr "标记"

msgid "IfcTriangulatedIrregularNetwork_Flags_DEFINITION"
msgstr "用紧凑的表格表示每个三角形的属性，如下所示：2隐形无效1 无断线0 边缘1 2条断线、 边缘2 3条断线、 边缘1 2条断线、 边缘1 2条断线、2条边缘3 5条断线、 边缘1 3条断线、 边缘2 6条断线、 边缘2 7条断线 页: 1"

