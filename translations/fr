msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: French\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/IfcGeometricModelResource.pot\n"
"X-Crowdin-File-ID: 44\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: fr_FR\n"
"PO-Revision-Date: 2022-02-06 16:13\n"

#:IFC.xml:10345
msgid "IfcAdvancedBrep"
msgstr "En cas de rupture avancée"

msgid "IfcAdvancedBrep_DEFINITION"
msgstr "Un représentant B avancé est un modèle de représentation des limites dans lequel toutes les faces, les bords et les sommets sont explicitement représentés. C'est un solide avec une topologie explicite et une géométrie de forme élémentaire ou libre. Les faces du représentant B sont de type [[IfcAdvancedFace]] . Un représentant B avancé doit répondre aux mêmes contraintes topologiques que le représentant B multiplé solide. NOTE The advanced B rep has been introduced in order to support the increasing number of applications that can define and exchange B rep models based on NURBS or other b spline surfaces. La figure 1 illustre l'utilisation de [[IfcAdvancedBrep]] pour les modèles de représentation des limites avec des surfaces b spline. Le diagramme montre les éléments de représentation topologique et géométrique qui sont utilisés pour les représentants B avancés, basés sur [[IfcAdvancedFace]]. Figure 1 Brep Avancé, la figure 2 illustre l'utilisation de [[IfcAdvancedBrep]] pour les modèles de représentation des limites avec des surfaces élémentaires. Le diagramme montre les éléments de représentation topologique et géométrique qui sont utilisés pour les représentants B avancés, basés sur [[IfcAdvancedFace]]. Il montre l'utilisation de [[IfcIntersectionCurve]] pour fournir la représentation géométrique de la courbe d'arête en tant que courbe 3D et en tant que u, dans l'espace paramétrique des surfaces adjacentes. Figure 2 Brep Advanced Brep, surface élémentaire NOTE Entity adapted from advanced brep shape representation defined in ISO 10303 514. HISTORY New entity in IFC4 .spec head Informal Propositions 1. each face is a face surface 2. chaque surface a sa géométrie définie par une surface élémentaire, une surface balayée ou une surface b spline 3. les arêtes utilisées pour définir les limites de la face doivent toutes référencer une courbe d'arête 4. chaque courbe utilisée pour définir la géométrie des faces et des limites de face doit être soit un conique, ou une ligne ou une polyligne ou une courbe b spline 5. les arêtes utilisées pour définir les limites de la face doivent toutes être coupées par des sommets de type point 6. aucune boucle utilisée pour définir une face liée ne doit être du sous-type de propositions formelles HasAdvancedFaces Chaque face du représentant B avancé doit être de type [[IfcAdvancedFace]] ."

#:IFC.xml:10348
msgid "IfcAdvancedBrepWithVoids"
msgstr "SifcAvancedBrepWithVoids"

msgid "IfcAdvancedBrepWithVoids_DEFINITION"
msgstr "Le [[IfcAdvancedBrepWithVoids]] est une spécialisation d'un représentant B avancé qui contient un ou plusieurs vides dans son intérieur. Les annulations sont représentées comme des obus fermés qui sont définis de sorte que le shell normal pointe dans le vide. NOTA L'entité a été désignée comme étant une entité ayant une forme de brep avancée définie dans la norme ISO 10303 42. Chaque coquille vide doit être disjointe de la coquille externe et de toute autre coquille vide 2. Chaque coquille vide doit être fermée dans la coquille externe mais pas dans une autre coquille vide. En particulier, la coquille extérieure n'est pas dans l'ensemble des obus nuls 3. Chaque shell dans le [[IfcManifoldSolidBrep]] ne doit être référencé qu'une seule fois. 4. Tous les visages de toutes les obus dans les [[IfcAdvancedBrep]] et les [[IfcAdvancedBrepWithVoids]]. les oides doivent être de type [[IfcAdvancedFace]] ."

#:IFC.xml:10351
msgid "IfcAdvancedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcAdvancedBrepWithVoids_Voids_DEFINITION"
msgstr "Voids"

#:IFC.xml:10363
msgid "IfcBlock"
msgstr "IfcBlock"

msgid "IfcBlock_DEFINITION"
msgstr "Le [[IfcBlock]] est une primitive de Construction Solid Geometry CSG 3D. Il est défini par une position et une distance de position le long des trois axes orthogonaux. L'attribut Position hérité a le type IfcAxisPlacement3D et fournit SELF [[IfcCsgPrimitive3D]]. osition L'emplacement et l'orientation du système d'axe pour la primitive. SELF [[IfcCsgPrimitive3D]].Position. ocation Le bloc a un sommet à l'emplacement et les bords sont alignés avec les axes de placement dans un sens positif. Les attributs XLength , YLength et ZLength définissent la taille de [[IfcBlock]] le long des trois axes. La figure 1 illustre les paramètres géométriques d'un bloc où le bloc est positionné dans son propre système de coordonnées de placement. Les valeurs pour XLength, YLength, et ZLength sont appliquées à la direction positive de l'axe X, Y et Z. xtDef NOTE Definition according to ISO CD 10303 42 1992 A block is a solid rectangular parallelepiped, defined with a location and placement coordinate system. Le bloc est spécifié par les longueurs positives x, y et z le long des axes du système de coordonnées de placement, et a un sommet à l'origine du système de coordonnées de placement. NOTA L'entité est une entité à partir d'un bloc défini dans la norme ISO 10303 42. La définition de la texture de la tête .use Sur chaque face latérale, les textures sont alignées vers la droite. Sur les faces supérieure et inférieure, les textures sont alignées face à l'avant à l'arrière. Les textures sont étirées ou répétées dans la mesure de chaque visage selon RepeatS et RepeatT . La figure 2 illustre le mapping de texture par défaut avec une texture serrée RepeatS False et RepeatT False . L'image à gauche montre la texture où l'axe S pointe vers la droite et l'axe T vers le haut. L'image à droite montre la texture appliquée à la géométrie où l'axe X pointe vers la droite, l'axe Y pointe vers la gauche et l'axe Z vers le haut. .gridtable Side Normal Origin X Origin Y Origin Z S Axe T Gauche X 0 YLength 0 Y Z Droite X XLength 0 Y Z Front Y 0 0 0 X Z Back Y XLength 0 X Z Bas Z Bas Z Z Bas Z Z 0 YLength 0 X Y Top Z 0 ZLength X Y Figure 2 Block textures"

#:IFC.xml:10364
msgid "IfcBlock_XLength"
msgstr "Longueur XLS"

msgid "IfcBlock_XLength_DEFINITION"
msgstr "La taille du bloc le long de l'axe de placement X. Il est fourni par le placement de l'axe hérité via SELF [[IfcCsgPrimitive3D]].Position.P 1."

#:IFC.xml:10369
msgid "IfcBlock_YLength"
msgstr "Longueur Ya"

msgid "IfcBlock_YLength_DEFINITION"
msgstr "La taille du bloc le long de l'axe de placement Y. Il est fourni par le placement de l'axe hérité via SELF [[IfcCsgPrimitive3D]].Position.P 2 ."

#:IFC.xml:10374
msgid "IfcBlock_ZLength"
msgstr "Longueur Z"

msgid "IfcBlock_ZLength_DEFINITION"
msgstr "La taille du bloc le long de l'axe Z de placement. Il est fourni par le placement de l'axe hérité via SELF [[IfcCsgPrimitive3D]].Position.P 3."

#:IFC.xml:10381
msgid "IfcBooleanClippingResult"
msgstr "IfcBooleanClippingResult"

msgid "IfcBooleanClippingResult_DEFINITION"
msgstr "Un résultat de clipping est défini comme un sous-type spécial du général [[IfcBooleanResult]] . Il limite les opérandes et l'opérateur du résultat booléen. Un résultat de découpage est la différence booléenne entre un solide balayé et un demi espace solide, ou entre le résultat de la différence booléenne et la moitié de l'espace solide. Par conséquent, plusieurs opérations de différence peuvent être appliquées pour obtenir le résultat booléen final. HISTOIRE Nouvelle entité dans IFC2x. Propositions formelles FirstOperandType Le premier opérande de l'opération de découpage booléen doit être soit un [[IfcSweptAreaSolid]] soit en cas de coupure de plus d'un [[IfcBooleanResult]]. SecondOperandType Le deuxième opérande de l'opérande de clipping booléen doit être un [[IfcHalfSpaceSolid]]. OperatorType d'opérateur booléen pour le clipping est toujours une différence ."

#:IFC.xml:10384
msgid "IfcBooleanOperand"
msgstr "IfcBooleanOperand"

#:IFC.xml:10385
msgid "IfcBooleanOperator"
msgstr "IfcBooleanOperator"

msgid "IfcBooleanOperator_DEFINITION"
msgstr "Opérateurs booléens qui s'appliquent aux premières et deuxième opérandes booléennes. xtDef NOTE Définition selon ISO CD 10303 42 1992 Ce type définit les trois opérateurs booléens utilisés dans la définition des solides CSG. NOTA L'entité adaptée à l'opérateur booléen défini dans la norme ISO 10303 42. HISTORY New Entity in IFC1.5.1. Items UNION INTERSECTION The operation of construction the regularised set theoretic intersection of the volumes defined by two solids. DIFFERENCE La différence théorique réglée entre les volumes définis par deux solides."

#:IFC.xml:10386
msgid "IfcBooleanOperator_DIFFERENCE"
msgstr "DIFFÉRENCE"

msgid "IfcBooleanOperator_DIFFERENCE_DEFINITION"
msgstr "La différence théorique régularisée entre les volumes définis par deux solides."

#:IFC.xml:10387
msgid "IfcBooleanOperator_INTERSECTION"
msgstr "Intersection"

msgid "IfcBooleanOperator_INTERSECTION_DEFINITION"
msgstr "L'opération de construction de l'intersection théorique régularisée de l'ensemble des volumes définis par deux solides."

#:IFC.xml:10388
msgid "IfcBooleanOperator_UNION"
msgstr "UNION"

msgid "IfcBooleanOperator_UNION_DEFINITION"
msgstr "UNION"

#:IFC.xml:10390
msgid "IfcBooleanResult"
msgstr "IfcBooleanResult"

msgid "IfcBooleanResult_DEFINITION"
msgstr "Le [[IfcBooleanResult]] est le résultat de l'application d'une opération booléenne à deux opérandes étant solides. EXEMPLE Si le premier opérande est un bloc et le deuxième opérande est un cylindre solide aux dimensions et à l'emplacement appropriés. le résultat booléen produit avec l'opérateur de différence serait un bloc avec un trou circulaire. xtDef NOTE Definition according to ISO CD 10303 42 1992 A Boolean result is the result of a regularized operation on two solids to create a new solid. Les opérations valides sont l'union régularisée, l'intersection régularisée et la différence régularisée. Aux fins des opérations booléennes, un solide est considéré comme un ensemble de points régularisés. Le résultat final du booléen dépend de l'opération et des deux opérandes. Dans le cas de l'opérateur de différence l'ordre des opérandes est également significatif, l'opérateur peut être soit union, intersection ou différence. L'effet de ces opérateurs est décrit en dessous de l'Union sur deux solides est le nouveau solide, à savoir la régularisation de l'ensemble de tous les points qui sont dans le premier opérande ou le deuxième opérande ou dans les deux. Intersection sur deux solides est le nouveau solide qui est la régularisation de l'ensemble de tous les points qui sont dans le premier opérande et le deuxième opérande. Le résultat de l'opération de différence sur deux solides est la régularisation de l'ensemble de tous les points qui sont dans le premier opéra, mais pas dans le deuxième opérande. NOTA Les résultats booléens de type STEP correspondants sont définis dans la norme ISO 10303 42. HISTOIRE Nouvelle entité dans la IFC1.5.1."

#:IFC.xml:10391
msgid "IfcBooleanResult_Dim"
msgstr "Dim"

msgid "IfcBooleanResult_Dim_DEFINITION"
msgstr "La dimension spatiale de cette entité, identique à la dimension spatiale du premier opéra. Une règle où les deux opérandes ont la même dimension spatiale. Propositions formelles"

#:IFC.xml:10396
msgid "IfcBooleanResult_FirstOperand"
msgstr "FirstOperand"

msgid "IfcBooleanResult_FirstOperand_DEFINITION"
msgstr "Le premier opérande à être opéré par l'opération booléenne."

#:IFC.xml:10401
msgid "IfcBooleanResult_Operator"
msgstr "Opérateur"

msgid "IfcBooleanResult_Operator_DEFINITION"
msgstr "L'opérateur booléen utilisé dans l'opération pour créer le résultat."

#:IFC.xml:10406
msgid "IfcBooleanResult_SecondOperand"
msgstr "Deuxième opérande"

msgid "IfcBooleanResult_SecondOperand_DEFINITION"
msgstr "Le deuxième opérande spécifié pour l'opération."

#:IFC.xml:10415
msgid "IfcBoundingBox"
msgstr "format@@0 IfcBoundingBox"

msgid "IfcBoundingBox_DEFINITION"
msgstr "La [[IfcBoundingBox]] définit une boîte orthogonale orientée parallèlement aux axes du système de coordonnées de l'objet dans lequel elle est définie. Il est défini par un Coin étant un point cartésien à trois dimensions et trois mesures de longueur définissant le X, Paramètres Y et Z de la boîte dans la direction des axes positifs. NOTE Tout sous-type de [[IfcProduct]] ayant une représentation de forme de produit peut avoir une représentation de la boîte englobante. L'identifiant de représentation Box défini à [[IfcShapeRepresentation]] utilise le [[IfcBoundingBox]] comme la représentation de forme 3D la plus simple. Comme le montre la figure 1, le [[IfcBoundingBox]] est défini avec son propre emplacement qui peut être utilisé pour placer le [[IfcBoundingBox]] relatif au système de coordonnées géométrique. Le [[IfcBoundingBox]] est défini par le coin inférieur gauche et le coin supérieur droit XDim, YDim, ZDim mesuré dans le système de coordonée parent . Figure 1 Bounding box NOTE Correspondance STEP type domain defined in ISO 10303 42. HISTORY New entity in IFC1.0."

#:IFC.xml:10438
msgid "IfcBoundingBox_Corner"
msgstr "Coin"

msgid "IfcBoundingBox_Corner_DEFINITION"
msgstr "Emplacement du coin inférieur gauche avec les valeurs minimales ."

#:IFC.xml:10416
msgid "IfcBoundingBox_Dim"
msgstr "Dim"

msgid "IfcBoundingBox_Dim_DEFINITION"
msgstr "La dimension spatiale de cette classe, elle est toujours 3."

#:IFC.xml:10421
msgid "IfcBoundingBox_XDim"
msgstr "XDim"

msgid "IfcBoundingBox_XDim_DEFINITION"
msgstr "Attribut de longueur mesuré le long de l'arête parallèle à l'axe X"

#:IFC.xml:10426
msgid "IfcBoundingBox_YDim"
msgstr "YDim"

msgid "IfcBoundingBox_YDim_DEFINITION"
msgstr "Attribut de largeur mesuré le long de l'arête parallèle à l'axe Y"

#:IFC.xml:10431
msgid "IfcBoundingBox_ZDim"
msgstr "ZDim"

msgid "IfcBoundingBox_ZDim_DEFINITION"
msgstr "Attribut de hauteur mesuré le long de l'arête parallèle à l'axe Z ."

#:IFC.xml:10462
msgid "IfcBoxedHalfSpace"
msgstr "Si la moitié de l'espace de stockage est fermée"

msgid "IfcBoxedHalfSpace_DEFINITION"
msgstr "Le [[IfcBoxedHalfSpace]] est utilisé comme supertype [[IfcHalfSpaceSolid]] seulement dans les opérations booléennes. Il divise le domaine en deux sous-ensembles exacts, où le domaine en question est celui de l'attribut Enclosure . Le but de l'attribut Enclosure est de fournir une boîte de recherche pour l'autre opérande dans l'opération booléenne. Il sera suffisamment grand pour enfermer complètement le solide résultant après l'opération booléenne avec la moitié de l'espace. Il ne modifie toutefois pas le résultat final. Le résultat de l'opération booléenne serait le même, comme s'il était exécuté par le supertype [[IfcHalfSpaceSolid]] . Voir la figure 1 ci-dessous. utilisation correcte de l'enclos .. .. .. chiffres ifcboxedhalfspace 01. ng Figure 1 Boîtes opérandes à demi-espace La [[IfcBoundingBox]] qui fournit l'enveloppe est donnée pour la commodité de l'application réceptrice pour permettre l'utilisation de la comparaison de la boîte de taille pour l'efficacité par exemple, pour vérifier d'abord si les cases de taille se croisent, sinon aucun calcul ne doit être fait pour vérifier si les solides des entités se croisent. L'Enclosure aide donc à éviter de traiter des problèmes de taille infinie. La boîte d'encadrement est positionnée à l'intérieur du système de coordonnées de l'objet, établi par le Placement de l'objet de l'élément représenté par exemple par [[IfcLocalPlacement]] . La figure 2 montre que la case Enclosure est suffisamment grande pour clôturer complètement le résultat booléen. xtDef NOTE Definition according to ISO CD 10303 42 1992 This entity is a subtype of the half space solid which is trimmed by a surrounding rectangular box. La boîte a ses bords parallèles aux axes de coordonnées du système de coordonnées géométrique. Le but de la boîte est de faciliter les calculs CSG en produisant un solide de taille finie. NOTA Les membres de l'entité ont été désignés par la Loi sur la protection des renseignements personnels (n.m. hange ifc2x4 IFC4 CHANGE Utilisation correcte, le système de coordonnées de position pour Enclosure est le système de coordonnées de l'objet."

#:IFC.xml:10450
msgid "IfcBoxedHalfSpace_Enclosure"
msgstr "Encadrement"

msgid "IfcBoxedHalfSpace_Enclosure_DEFINITION"
msgstr "La boîte qui limite le solide résultant de l'opération booléenne impliquant la moitié de l'espace solide à des fins de calcul seulement. Propositions formelles"

#:IFC.xml:10465
msgid "IfcCartesianPointList"
msgstr "Liste de points cartésiens"

msgid "IfcCartesianPointList_DEFINITION"
msgstr "Le [[IfcCartesianPointList]] est le super-type abstrait de liste de points. NOTA Le [[IfcCartesianPointList]] est introduit pour fournir une représentation compacte de la liste de points potentiellement plus grande, comme dans les nuages de points, et dans la représentation indexable des points. HISTOIRE Nouvelle entité dans l'IFC4."

#:IFC.xml:10466
msgid "IfcCartesianPointList_Dim"
msgstr "Dim"

msgid "IfcCartesianPointList_Dim_DEFINITION"
msgstr "La dimension de l'espace de cette classe, soit 2 ou 3, selon le sous-type."

#:IFC.xml:10485
msgid "IfcCartesianPointList2D"
msgstr "IfcCartesianPointList 2D"

msgid "IfcCartesianPointList2D_DEFINITION"
msgstr "Le [[IfcCartesianPointList2D]] définit une collection ordonnée de points cartésiens à deux dimensions. Chaque point cartésien est fourni en tant que point à deux dimensions par une liste fixe de deux coordonnées. L'attribut CoordList est une liste à deux dimensions, où la première dimension est une liste sans limite représentant chaque deuxième dimension de point cartésien 2D est une liste fixe de deux membres de la liste, où 1 est la coordonnée x, et 2 la coordonnée y du point cartésien. NOTA Le [[IfcCartesianPointList2D]] est introduit pour fournir une représentation compacte de la liste de points plus grande, comme dans la représentation indexable de points utilisés comme sommets dans les courbes de poly. HISTOIRE Nouvelle entité dans la IFC4 ADD1."

#:IFC.xml:10486
msgid "IfcCartesianPointList2D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList2D_CoordList_DEFINITION"
msgstr "Liste en deux dimensions des points cartésiens fournis par deux coordonnées."

#:IFC.xml:10491
msgid "IfcCartesianPointList2D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList2D_TagList_DEFINITION"
msgstr "Liste des tags correspondant à chaque point qui peut être utilisé pour identifier une courbe de base en fonction de l'attribut Tag à [[IfcOffsetCurveByDistances]] ou IfcAlignmentCurve ."

#:IFC.xml:10498
msgid "IfcCartesianPointList3D"
msgstr "IfcCartesianPointList3D"

msgid "IfcCartesianPointList3D_DEFINITION"
msgstr "Le [[IfcCartesianPointList3D]] définit une collection ordonnée de points cartésiens tridimensionnels. Chaque point cartésien est fourni en trois dimensions par une liste fixe de trois coordonnées. L'attribut CoordList est une liste à deux dimensions, où la première dimension est une liste sans limite représentant chaque dimension de point cartésien en 3D seconde est une liste fixe de trois membres de la liste, où 1 est la coordonnée x, 2 la coordonnée y et 3 la coordonnée z du point cartésien. NOTA Le [[IfcCartesianPointList]] est introduit pour fournir une représentation compacte de la liste de points plus grande, comme dans les nuages de points, et dans la représentation indexable des points utilisés comme sommets dans les objets tessellés ou les courbes de poly. HISTOIRE Nouvelle entité dans l'IFC4."

#:IFC.xml:10499
msgid "IfcCartesianPointList3D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList3D_CoordList_DEFINITION"
msgstr "Liste en deux dimensions des points cartésiens fournis par trois coordonnées."

#:IFC.xml:10504
msgid "IfcCartesianPointList3D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList3D_TagList_DEFINITION"
msgstr "Liste des tags correspondant à chaque point qui peut être utilisé pour identifier une courbe de base en fonction de l'attribut Tag à [[IfcOffsetCurveByDistances]] ou IfcAlignmentCurve ."

#:IFC.xml:10523
msgid "IfcCsgPrimitive3D"
msgstr "IfcCsgPrimitive3D"

msgid "IfcCsgPrimitive3D_DEFINITION"
msgstr "[[IfcCsgPrimitive3D]] est un supertype abstrait de toutes les primitives tridimensionnelles utilisées comme un élément racine de l'arborescence, ou sous la forme de résultats booléens dans un modèle solide CSG. Toutes les primitives 3D CSG sont définies dans un système de coordonnées de placement tridimensionnel. HISTOIRE Nouvelle entité dans IFC2x3."

#:IFC.xml:10533
msgid "IfcCsgPrimitive3D_Position"
msgstr "Position"

msgid "IfcCsgPrimitive3D_Position_DEFINITION"
msgstr "Le système de coordonnées de placement auquel s'appliquent les paramètres de chaque primitive CSG."

#:IFC.xml:10524
msgid "IfcCsgPrimitive3D_Dim"
msgstr "Dim"

msgid "IfcCsgPrimitive3D_Dim_DEFINITION"
msgstr "La dimension spatiale de cet élément de représentation géométrique, c'est toujours 3."

#:IFC.xml:10545
msgid "IfcCsgSelect"
msgstr "format@@0 IfcCsgSelect"

#:IFC.xml:10546
msgid "IfcCsgSolid"
msgstr "IfcCsgSolid"

msgid "IfcCsgSolid_DEFINITION"
msgstr "Un [[IfcCsgSolid]] est la représentation d'une forme 3D en utilisant un modèle de géométrie solide constructif. Elle est représentée par une seule primitive CSG 3D ou par une opération booléenne. Les opérateurs d'une opération booléenne peuvent être des opérations booléennes elles-mêmes formant un arbre CSG. Les volumes suivants peuvent faire partie des modèles de représentation de la limite de l'arbre CSG, tels que [[IfcFacetedBrep]] , [[IfcFacetedBrepWithVoids]] , Modèles de représentation tesselée fermés, tels que [[IfcPolygonalFaceSet]] , [[IfcTriangulatedFaceSet]] , Swept area solides, tels que [[IfcExtrudedAreaSolid]] , [[IfcRevolvedAreaSolid]] , et leurs sous-types pour le tapering, les solides de la zone balayée avancée, comme [[IfcSurfaceCurveSweptAreaSolid]] , [[IfcFixedReferenceSweptAreaSolid]] , [[IfcSweptDiskSolid]] La moitié de l'espace solide, comme [[IfcHalfSpaceSolid]] et ses sous-types , et les primitives CSG, les sous-types de [[IfcCsgPrimitive3D]] . .extDef NOTE Définition selon l'ISO CD 10303 42 1992 Un solide représenté comme un modèle CSG est défini par une collection de solides primitifs, combiné en utilisant des opérations booléennes régularisées. Les opérations autorisées sont l'intersection, l'union et la différence. En tant que cas spécial, un solide CSG peut également se composer d'une seule primitive CSG. Un solide CSG exige deux types d'information pour sa définition complète géométrique et structurelle, l'information géométrique étant transmise par des modèles solides. Ces volumes typiquement primitifs tels que les cylindres, les coins et les extrusions, mais peuvent inclure des modèles généraux de B Rep. Les modèles solides peuvent également être la moitié de l'espace solide. Les informations structurelles se trouvent dans un arbre strictement un graphique dirigé acyclique du résultat booléen et des solides CSG, qui représentent une recette pour construire le solide. Les noeuds terminaux sont les primitifs géométriques et d'autres solides. Chaque solide CSG a précisément un résultat booléen qui est la racine de l'arbre qui définit le solide. Il peut y avoir d'autres résultats booléens dans l'arbre en tant qu'opérandes . La signification d'une entité solide CSG est que le solide défini par l'arbre associé est donc identifié comme un objet significatif lui-même, et de cette façon, il est distingué des autres entités de résultat booléen représentant des résultats intermédiaires pendant le processus de construction. NOTA Les entités adaptées au csg solide sont définies dans ISO 10303 42. HISTORIE Nouvelle entité dans l'IFC1.5.1"

#:IFC.xml:10547
msgid "IfcCsgSolid_TreeRootExpression"
msgstr "Expression racine de l'arbre"

msgid "IfcCsgSolid_TreeRootExpression_DEFINITION"
msgstr "Expression booléenne de primitives et d'opérateurs régularisés décrivant le solide. La racine de l'arborescence des expressions booléennes est donnée explicitement comme une entité [[IfcBooleanResult]] ou comme un sous-type primitif de [[IfcCsgPrimitive3D]] ."

#:IFC.xml:10554
msgid "IfcDirectrixDerivedReferenceSweptAreaSolid"
msgstr "IfcDirectrixDerivedReferenceSweptAreaSolid"

#:IFC.xml:10557
msgid "IfcExtrudedAreaSolid"
msgstr "Zone entière en cas d'extraction"

msgid "IfcExtrudedAreaSolid_DEFINITION"
msgstr "The [[IfcExtrudedAreaSolid]] is defined by sweeping a cross section provided by a profile definition. The direction of the extrusion is given by the ExtrudedDirection attribute and the length of the extrusion is given by the Depth attribute. If the planar area has inner boundaries holes defined , then those holes shall be swept into holes of the solid. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the extruded solid. If not provided, it defaults to the current object coordinate system. The ExtrudedDirection is given within the position coordinate system as defined by [[IfcSweptAreaSolid]] . Position . The extruded direction can be any direction which is not perpendicular to the z axis of the position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The result is a solid. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. Figure 1 Extruded area solid geometry EXAMPLE Figure 2 illustrates geometric parameters and additional positioning parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the y axis. Figure 2 Repositioned extruded area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 An extruded area solid is a solid defined by sweeping a bounded planar surface. The direction of translation is defined by a direction vector, and the length of the translation is defined by a distance depth. The planar area may have holes which will sweep into holes in the solid. NOTE Entity adapted from extruded area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .use head Texture use definition For side faces, textures are aligned facing upright continuously along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the extrusion axis according to RepeatT . For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. EXAMPLE Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcExtrudedAreaSolid]] having a profile of [[IfcIShapeProfileDef]], the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth . Figure 3 Extruded area solid textures"

#:IFC.xml:10565
msgid "IfcExtrudedAreaSolid_ExtrudedDirection"
msgstr "Direction extrudée"

msgid "IfcExtrudedAreaSolid_ExtrudedDirection_DEFINITION"
msgstr "La direction dans laquelle la surface, fournie par SweptArea doit être balayée."

#:IFC.xml:10558
msgid "IfcExtrudedAreaSolid_Depth"
msgstr "Profondeur"

msgid "IfcExtrudedAreaSolid_Depth_DEFINITION"
msgstr "La distance de la surface doit être balayée le long de la Direction Extrudée. Propositions formelles"

#:IFC.xml:10577
msgid "IfcExtrudedAreaSolidTapered"
msgstr "format@@0 IfcExtrudedAreaSolidTapered"

msgid "IfcExtrudedAreaSolidTapered_DEFINITION"
msgstr "[[IfcExtrudedAreaSolidTapered]] is defined by sweeping a cross section along a linear spine. The cross section may change along the sweep from the shape of the start cross section into the shape of the end cross section. The resulting solid is bounded by three or more faces A start face, an end face each defined by start and end planes and sections , and one or more lateral faces. Each lateral face is a ruled surface defined by a pair of corresponding edges of the start and end section. NOTE Given that the start and end section is provided by a polygon, the corresponding vertices of the start and end cross section are connected, forming a quadrilateral polygon between each pair of corresponding vertices. The surface defined by the bounding quadrilateral polygon is a ruled surface, that could be approximated by triangulation. The linear spine is defined by Start point SELF [[IfcSweptAreaSolid]].Position.Location Direction SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection Distance SELF [[IfcExtrudedAreaSolid]].Depth The start cross section is defined by SELF [[IfcSweptAreaSolid]].SweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by SELF [[IfcSweptAreaSolid]].Position.P 1 and SELF [[IfcSweptAreaSolid]].Position.P 2 The linear spine starts at the plane of the start cross section. The spine is not necessarily perpendicular to the plane. The end cross section is defined by EndSweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by translating the start position coordinates provided by SELF [[IfcSweptAreaSolid]].Position along the spine direction by the spine distance. The plane of the end cross section is coplanar to the plane of the start cross section. The end cross section is topologically similar to the start cross section i.e. having the same number of vertices and edges . The end cross section can either be defined by the same paramteric profile using different parameter values, or by a 2D Cartesian transformation of the start profile within the end cross section plane. In case of two parameterized profiles the shape is constructed as follows The end profile, defined by a cross section based on the same profile paramterization as the start profile, is translated by the spine distance along the spine direction. It may be shifted within the XY plane of the end postion coordinate system and may be twisted using the rotation parameter. The shift and rotation parameter are provided by the end cross section being of type [[IfcParameterizedProfileDef]] , where Shift is EndSweptArea [[IfcParameterizedProfileDef]].Position.Location Rotation is EndSweptArea [[IfcParameterizedProfileDef]].Position.RefDirection Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. In case of Cartesian transformation of the start cross section the shape is constructed as follows The cross section curve, which starts as a curve in the XY plane of the position coordinate system, is first scaled about the origin by the scale parameter. It is then translated by the spine distance along the spine direction. It maybe twisted by using the rotation parameter. The scale and rotation parameter are provided by the end cross section being of type [[IfcDerivedProfileDef]] , where Scale is EndSweptArea [[IfcDerivedProfileDef]].Operator.Scale Rotation is EndSweptArea [[IfcDerivedProfileDef]].Operator.Axis1 Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. HISTORY New entity in IFC4. .spec head Informal Propositions 1. Mirroring within [[IfcDerivedProfileDef]].Operator shall not be used"

#:IFC.xml:10580
msgid "IfcExtrudedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcExtrudedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "La surface définissant la fin de la zone balayée. Elle est donnée en tant que définition de profil. Le système de coordonnées de position de la EndSwptArea est généré par la traduction du SELF [[IfcSweptAreaSolid]]. osition le long du SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection par la distance de SELF [[IfcExtrudedAreaSolid]].Propositions formelles"

#:IFC.xml:10592
msgid "IfcFaceBasedSurfaceModel"
msgstr "format@@0 IfcFaceBasedSurfaceModel"

msgid "IfcFaceBasedSurfaceModel_DEFINITION"
msgstr "Le [[IfcFaceBasedSurfaceModel]] représente une forme par des ensembles de faces connectés. Les faces connectées ont une dimension 2 et sont placées dans un espace de coordonnées de dimension 3. .extDef NOTE Definition according to ISO CD 10303 42 1992 A face based surface model is described by a set of connected face sets of dimensionality 2. Les ensembles de faces connectés ne doivent pas intersecter sauf sur les bords et les sommets, sauf qu'une face dans un ensemble de faces connectées peut se chevaucher une face dans une autre face connectée, à condition que les limites du visage soient identiques. Il doit y avoir au moins un ensemble de faces connecté. Un ensemble de faces connecté peut exister indépendamment d'un modèle de surface. NOTA L'entité a été désignée comme une entité de surface adaptée à la face du modèle de surface défini par ISO 10303 42. Les faces connectées ne doivent pas se chevaucher ou se croiser, sauf sur les faces communes, les bords ou les sommets. 2. Les faces fbsm ont la dimension 2. .deprecated IFC4 CHANGE L'entité a été dépréciée et ne doit pas être utilisée. L'entité [[IfcFacetedBrep]] doit être utilisée à la place."

#:IFC.xml:10601
msgid "IfcFaceBasedSurfaceModel_FbsmFaces"
msgstr "FbsmFaces"

msgid "IfcFaceBasedSurfaceModel_FbsmFaces_DEFINITION"
msgstr "L'ensemble des ensembles de faces connectés comprenant le modèle de surface à base de visage."

#:IFC.xml:10593
msgid "IfcFaceBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcFaceBasedSurfaceModel_Dim_DEFINITION"
msgstr "La dimension spatiale de cette classe, elle est toujours 3."

#:IFC.xml:10613
msgid "IfcFacetedBrep"
msgstr "format@@0 IfcFacetedBrep"

msgid "IfcFacetedBrep_DEFINITION"
msgstr "Le [[IfcFacetedBrep]] est une bretelle solide multiplée avec la restriction que toutes les faces sont des polygones planaires et bordés. REMARQUE : L'utilisation de [[IfcFacetedBrep]] est limitée pour les modèles de représentation des limites avec des surfaces planaires seulement. Ces surfaces sont implicitement représentées par les polygones englobants. Le diagramme montre les éléments de représentation topologique et géométrique qui sont utilisés pour les pales à facettes. Chaque [[IfcCartesianPoint]], utilisé dans le [[IfcFacetedBrep]] doit être référencé trois fois par un [[IfcPolyLoop]] qui lie un autre [[IfcFace]]. Graphique 1 montrant l'utilisation de [[IfcFacetedBrep]] . xtDef NOTE Definition according to ISO CD 10303 42 1992 A faceted B rep is a simple form of boundary representation model in which all faces are planar and all arges are straight lines. Contrairement au modèle de représentation B, les bords et les sommets ne sont pas représentés explicitement dans le modèle, mais sont implicitement disponibles via l'entité de la boucle poly. Un représentant B à facettes doit répondre aux mêmes contraintes topologiques que le représentant B multiple. .extDef Le représentant B à facettes a été introduit afin de supporter le plus grand nombre de systèmes qui permettent des représentations de type limite solide avec des surfaces planaires seulement. NOTA L'entité est une entité qui a été adaptée à la brise solide définie par la norme ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. Toutes les boucles englobantes de toutes les faces de toutes les coques de la [[IfcFacetedBrep]] doivent être de type [[IfcPolyLoop]] . 2. Tous les sommets doivent être référencés par toutes les polyboucles, partageant le sommet. Par exemple, chaque point cartésien doit être des références par au moins trois polyboucles."

#:IFC.xml:10616
msgid "IfcFacetedBrepWithVoids"
msgstr "IfcFacetedBrepWithVoids"

msgid "IfcFacetedBrepWithVoids_DEFINITION"
msgstr "Le [[IfcFacetedBrepWithVoids]] est une spécialisation d'un représentant B à facettes qui contient un ou plusieurs vides dans son intérieur. Les annulations sont représentées comme des obus fermés qui sont définis de sorte que le shell normal pointe dans le vide. NOTA L'entité est une entité qui a été créée par la loi sur la protection de la vie privée (n.m. hange ifc2x4 IFC4 CHANGE Subtyping changed from [[IfcManifoldSolidBrep]] to [[IfcFacetedBrep]] with upward compatible for file based exchange. Pec tête Propositions informelles 1. Chaque coquille vide sera disjointe de la coquille extérieure et de toute autre coquille vide 2. Chaque coquille vide doit être fermée dans la coquille externe mais pas dans une autre coquille vide. En particulier, la coquille extérieure n'est pas dans l'ensemble des obus nuls 3. Chaque interpréteur dans le [[IfcManifoldSolidBrep]] ne doit être référencé qu'une seule fois. 4. Toutes les boucles englobantes de toutes les faces de toutes les coques de la [[IfcFacetedBrep]] seront de type [[IfcPolyLoop]] ."

#:IFC.xml:10619
msgid "IfcFacetedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcFacetedBrepWithVoids_Voids_DEFINITION"
msgstr "Ensemble de coques fermées définissant les vides dans le solide."

#:IFC.xml:10631
msgid "IfcFixedReferenceSweptAreaSolid"
msgstr "IfcFixedReferenceSweptAreaSolid"

msgid "IfcFixedReferenceSweptAreaSolid_DEFINITION"
msgstr "An [[IfcFixedReferenceSweptAreaSolid]] is a type of swept area solid which is the result of sweeping an area along a Directrix . The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the start tangent of the directrix at this point, and the profile s x axis agrees to the orthogonal projection of the FixedReference direction within the plane of start tangent and Fixed Reference . The orientation of the curve during the sweeping operation is controlled by the FixedReference direction. The SweptArea is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the projection of FixedReference onto the normal plane to the directrix at this point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The resulting swept solid is placed by the Position coordinate system. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no EndParam is provided the end defaults to the end of the directrix. NOTE The StartParam and the EndParam , if provided as a parameter value, are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. NOTE In the case of a curve composed of [[IfcCurveSegment]] , the [[IfcSweptAreaSolid]] Position is dependent on the [[IfcCurveSegment]] StartPlacement and the type of BasisCurve which defines the name function between the start and end explicitly defined as the start point of the next segment points of the segment EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In many cases, it is a surface of extrusion. The directrix lies on the surface, often defined as a p curve at this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the FixedReference direction. The Axis2 the y axis, or v is constructed. In this case the resulting swept solid is not repositioned. The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a CartesianTransformationOperator3d with attributes LocalOrigin as point 0 0 0 , Axis1 as the orthogonal projection of the FixedReference onto the normal plane defined by Axis3 . Axis3 as the direction of the tangent vector t at the point of the Directrix with parameter u . The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the Directrix parameter u . NOTE The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE Entity adapted from fixed reference swept surface defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. The SweptArea shall lie in the plane z 0. 2. The FixedReference shall not be parallel to a tangent vector to the directrix at any point along this curve. 3. The Directrix curve shall be tangent continuous."

#:IFC.xml:10634
msgid "IfcFixedReferenceSweptAreaSolid_FixedReference"
msgstr "FixedReference"

msgid "IfcFixedReferenceSweptAreaSolid_FixedReference_DEFINITION"
msgstr "FixedReference"

#:IFC.xml:10646
msgid "IfcGeometricCurveSet"
msgstr "IfcGeometricCurveSet"

msgid "IfcGeometricCurveSet_DEFINITION"
msgstr "Le [[IfcGeometricCurveSet]] est utilisé pour l'échange de représentation de forme composée d'une collection de points et de courbes 2D ou 3D. xtDef NOTE Definition according to ISO CD 10303 42 1992 A geometric curve set is a collection of two or three dimensional points and courves. (n.m. ); n.m. (n.m. ) (n.m. Propositions formelles NoSurfaces Aucune surface ne doit être incluse dans ce jeu géométrique."

#:IFC.xml:10649
msgid "IfcGeometricSet"
msgstr "format@@0 IfcGeometricSet"

msgid "IfcGeometricSet_DEFINITION"
msgstr "Le [[IfcGeometricSet]] est utilisé pour l'échange de représentation de forme composée de points 2D ou 3D, de courbes et de surfaces, qui n'ont pas de structure topologique comme les faces connectées ou les coques , ne sont pas tessellés et ne sont pas des modèles solides tels que les solides balayés, CSG ou Brep . .extDef NOTE Definition from ISO CD 10303 42 This entity is intended for the transfer of models when a topological structure is not available. NOTA L'entité est une entité qui a été désignée par la norme ISO 10303 42, nouvelle entité dans l'IFC2x."

#:IFC.xml:10650
msgid "IfcGeometricSet_Dim"
msgstr "Dim"

msgid "IfcGeometricSet_Dim_DEFINITION"
msgstr "La dimension spatiale de cette classe, elle est identique au premier élément de la classe. Une règle où tous les éléments ont la même dimensionalité. Propositions formelles"

#:IFC.xml:10655
msgid "IfcGeometricSet_Elements"
msgstr "Éléments"

msgid "IfcGeometricSet_Elements_DEFINITION"
msgstr "Les éléments géométriques qui composent l'ensemble géométrique, ce peuvent être des points, courbes ou surfaces, mais doivent être de la même dimension d'espace de coordonnée."

#:IFC.xml:10662
msgid "IfcGeometricSetSelect"
msgstr "format@@0 IfcGeometricSetSelect"

#:IFC.xml:10663
msgid "IfcHalfSpaceSolid"
msgstr "IfcHalfSpaceSolid"

msgid "IfcHalfSpaceSolid_DEFINITION"
msgstr "Un demi-espace solide divise le domaine en deux par une surface de base. Normalement, la surface de base est un plan et divise l'espace infini en deux et indique le côté de la demi-espace, en acceptant ou en désapprouvant la normale du plan. La figure 1 illustre la définition de [[IfcHalfSpaceSolid]] dans un système de coordonnées donné. La surface de base est donnée par un plan sans limites, la limite rouge est montrée à des fins de visualisation seulement. demi-espace solide .. .. .. figures ifchalfspacesolid layout1.gif Figure 1 Demi-espace géométrie solide . xtDef NOTE Definition according to ISO CD 10303 42 1992 A half space solid is defined by the half space which is the regular subset of the domain which lies on one side of an unbounded surface. Le côté de la surface qui se trouve dans la moitié de l'espace est déterminé par la surface normale et le drapeau de l'accord. Si le drapeau de l'accord est TRUE, alors le sous-ensemble est celui dont les points sont éloignés. Si le drapeau de l'accord est FALSE, alors le sous-ensemble est celui dans lequel il est normal. Pour une demi-place valide, la surface doit diviser le domaine en deux sous-ensembles exactement. En outre, dans le domaine la surface doit être multiplier et toutes les normales de surface doivent pointer dans le même sous-ensemble. NOTA Un demi-espace n'est pas un sous-type de modèle solide, les demi-espaces solides ne sont utiles que sous forme d'opérandes dans les expressions booléennes. NOTA L'entité adaptée à la moitié de l'espace solide définie en ISO 10303 42. HISTORIQUE Nouvelle entité dans la tête Informatique IFC1.5 .spec Propositions 1. La surface de base divise le domaine en deux sous-sets. Si le demi-espace solide est de demi-espace encadré [[IfcBoxedHalfSpace]] , le domaine en question est celui de l'enceinte d'attributs. Dans tous les autres cas, le domaine est tout l'espace et la surface de base doit être délimitée. 2. La surface de base doit être un sous-type de surface non limité de [[IfcElementarySurface]] ."

#:IFC.xml:10677
msgid "IfcHalfSpaceSolid_BaseSurface"
msgstr "Surface de base"

msgid "IfcHalfSpaceSolid_BaseSurface_DEFINITION"
msgstr "Surface définissant le côté de la moitié de l'espace."

#:IFC.xml:10664
msgid "IfcHalfSpaceSolid_Dim"
msgstr "Dim"

msgid "IfcHalfSpaceSolid_Dim_DEFINITION"
msgstr "La dimension spatiale de cette classe, elle est toujours 3"

#:IFC.xml:10669
msgid "IfcHalfSpaceSolid_AgreementFlag"
msgstr "Indicateur de l'accord"

msgid "IfcHalfSpaceSolid_AgreementFlag_DEFINITION"
msgstr "Le drapeau de l'accord est VRAI si la normale aux points de BaseSurface loin du matériau de la [[IfcHalfSpaceSolid]]. Sinon, c'est FALSE."

#:IFC.xml:10689
msgid "IfcIndexedPolygonalFace"
msgstr "format@@0 IfcIndexedPolygonalFace"

msgid "IfcIndexedPolygonalFace_DEFINITION"
msgstr "Le [[IfcIndexedPolygonalFace]] est une représentation compacte d'une face planaire faisant partie d'un ensemble de visages. Les sommets de la face polygonale planaire sont fournis par 3 points cartésiens ou plus. défini par les indices qui pointent dans un [[IfcCartesianPointList3D]] , soit direclès, soit via le PnIndex , si fourni à [[IfcPolygonalFaceSet]] . La figure 1 montre un [[IfcIndexedPolygonalFace]] à un [[IfcPolygonalFaceSet]] qui n'utilise pas PnIndex par défaut. [[IfcIndexedPolygonalFace]] .. .. .. .. figures ifcindexedpolygonalface 01. ng Figure 1 Polygonal face geometry provided by indices into a point list Figure 2 shows an [[IfcIndexedPolygonalFace]] at an [[IfcPolygonalFaceSet]] using PnIndex . [[IfcIndexedPolygonalFace]] nous ing PnIndex .. .. .. figures ifcindexedpolygonalface 02. ng Figure 2 Polygonal face geometry provided by indices into a point list HISTORY New entity in IFC4 Addendum 2."

#:IFC.xml:10697
msgid "IfcIndexedPolygonalFace_ToFaceSet"
msgstr "ToFaceSet"

msgid "IfcIndexedPolygonalFace_ToFaceSet_DEFINITION"
msgstr "Référence à la [[IfcPolygonalFaceSet]] pour laquelle cette face est associée."

#:IFC.xml:10690
msgid "IfcIndexedPolygonalFace_CoordIndex"
msgstr "CoordIndex"

msgid "IfcIndexedPolygonalFace_CoordIndex_DEFINITION"
msgstr "Une liste dimensionnelle avec les indices pour les trois ou plusieurs points, qui définissent les sommets de la boucle externe. Si le jeu de visage tessellé est fermé, indiqué par SELF [[IfcTessellatedFaceSet]]. perdus , alors les points, définissant la boucle externe, se connectent dans le sens des aiguilles d'une montre. comme vu de l'extérieur du corps, de sorte que la normale résultante pointe vers l'extérieur. NOTA Les coordonnées des sommets sont fournies par la liste indexée de SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList . Si le SELF [[IfcTessellatedFaceSet]].PnIndex est fourni, les indices pointent dedans, sinon directement dans le [[IfcCartesianPointList3D]] ."

#:IFC.xml:10711
msgid "IfcIndexedPolygonalFaceWithVoids"
msgstr "IfcIndexedPolygonalFaceWithVoids"

msgid "IfcIndexedPolygonalFaceWithVoids_DEFINITION"
msgstr "Le [[IfcIndexedPolygonalFaceWithVoids]] est une représentation compacte d'un visage planaire avec des boucles intérieures, faisant partie d'un ensemble de visages. HISTOIRE Nouvelle entité dans l'addenda 2 de la IFC4."

#:IFC.xml:10712
msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices"
msgstr "Indices internes"

msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices_DEFINITION"
msgstr "Liste à deux dimensions où la première dimension représente chaque boucle intérieure de 1 à N et la seconde dimension les indices à trois points ou plus qui définissent les sommets de chaque boucle interne. Si le jeu de visage tessellé est fermé, indiqué par SELF [[IfcTessellatedFaceSet]]. perdus , alors les points définissant les boucles intérieures, se connecteront dans le sens des aiguilles d'une montre, comme vu de l'extérieur du corps. NOTA Les coordonnées des sommets sont fournies par la liste indexée de SELF [[IfcTessellatedFaceSet]]. oordinates.CoordList . Si le SELF [[IfcTessellatedFaceSet]].PnIndex est fourni, les indices y pointent, sinon directement dans le [[IfcCartesianPointList3D]] ."

#:IFC.xml:10719
msgid "IfcManifoldSolidBrep"
msgstr "format@@0 IfcManifoldSolidBrep"

msgid "IfcManifoldSolidBrep_DEFINITION"
msgstr "The [[IfcManifoldSolidBrep]] is a solid represented as a collection of connected surfaces that delimit the solid from the surrounding non solid. Instances of type [[IfcManifoldSolidBrep]] shall be of type [[IfcFacetedBrep]] , using only [[IfcPolyLoop]] for the bounds of [[IfcFaceBound]] , or of type [[IfcAdvancedBrep]] , using only [[IfcAdvancedFace]] for the face geometry, and [[IfcEdgeCurve]] for the edges. .extDef NOTE Definition according to ISO CD 10303 42 1992 A manifold solid b rep is a finite, arcwise connected volume bounded by one or more surfaces, each of which is a connected, oriented, finite, closed 2 manifold. There is no restriction on the genus of the volume, nor on the number of voids within the volume. The Boundary Representation B rep of a manifold solid utilizes a graph of edges and vertices embedded in a connected, oriented, finite, closed two manifold surface. The embedded graph divides the surface into arcwise connected areas known as faces. The edges and vertices, therefore, form the boundaries of the face and the domain of a face does not include its boundaries. The embedded graph may be disconnected and may be a pseudo graph. The graph is labeled that is, each entity in the graph has a unique identity. The geometric surface definition used to specify the geometry of a face shall be 2 manifold embeddable in the plane within the domain of the face. In other words, it shall be connected, oriented, finite, non self intersecting, and of surface genus 0. Faces do not intersect except along their boundaries. Each edge along the boundary of a face is shared by at most one other face in the assemblage. The assemblage of edges in the B rep do not intersect except at their boundaries i.e., vertices . The geometry curve definition used to specify the geometry of an edge shall be arcwise connected and shall not self intersect or overlap within the domain of the edge. The geometry of an edge shall be consistent with the geometry of the faces of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. A B rep is represented by one or more closed shells which shall be disjoint. One shell, the outer, shall completely enclose all the other shells and no other shell may enclose a shell. The facility to define a B rep with one or more internal voids is provided by a subtype. The following version of the Euler formula shall be satisfied, math .. .. .. .. figures ifcmanifoldsolidbrep math1.gif where V, E, F, L l and S are the numbers of unique vertices, edges, faces, loop uses and shells in the model and G s is the sum of the genus of the shells. NOTE Entity adapted from manifold solid brep defined in ISO 10303 42. HISTORY New entity in IFC Release 1.0 Informal proposition 1. The dimensionality of a manifold solid brep shall be 3. 2. The extent of the manifold solid brep shall be finite and non zero. 3. All elements of the manifold solid brep shall have defined associated geometry. 4. The shell normals shall agree with the B rep normal and point away from the solid represented by the B rep. 5. Each face shall be referenced only once by the shells of the manifold solid brep. 6. The Euler equation shall be satisfied for the boundary representation, where the genus term shell term us the sum of the genus values for the shells of the brep."

#:IFC.xml:10722
msgid "IfcManifoldSolidBrep_Outer"
msgstr "Extérieur"

msgid "IfcManifoldSolidBrep_Outer_DEFINITION"
msgstr "Coque fermée définissant la limite extérieure du solide. La coque normale se dirige vers l'intérieur du solide."

#:IFC.xml:10734
msgid "IfcPointListDim__PointList"
msgstr "IfcPointListDim PointList"

#:IFC.xml:10742
msgid "IfcPolygonalBoundedHalfSpace"
msgstr "format@@0 IfcPolygonalBoundedHalfSpace"

msgid "IfcPolygonalBoundedHalfSpace_DEFINITION"
msgstr "The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary. The base surface of the half space is positioned by its normal relative to the object coordinate system as defined at the supertype [[IfcHalfSpaceSolid]] , and its polygonal with or without arc segments boundary is defined in the XY plane of the position coordinate system established by the Position attribute, the subtraction body is extruded perpendicular to the XY plane of the position coordinate system, that is, into the direction of the positive Z axis defined by the Position attribute. The boundary is defined by a 2 dimensional polyline or 2 dimensional composite curve, consisting of straight segments and circular arc segments within the XY plane of the position coordinate system. The side of the surface which is in the half space is determined by the surface normal and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normal points away from. If the agreement flag is FALSE, then the subset is the one the normal points into. NOTE A polygonal bounded half space is not a subtype of [[IfcSolidModel]] , half space solids are only useful as operands in Boolean expressions. Figure 1 illustrates a polygonal bounded half space. Black coordinates indicate the object coordinate system usually provided by [[IfcLocalPlacement]] . Green coordinates indicate the position coordinate system the PolygonalBoundary is given within this coordinate system. It is provided by [[IfcPolygonalBoundedHalfSpace]].Position. This coordinate system is relative to the object coordinate system. The extrusion direction of the subtraction body is the positive Z axis. Red coordinates indicate the normal of the plane. It is provided by the BaseSurface [[IfcSurface]].Position . This normal is also relative to the object coordinate system. Figure 1 Polygonal half space geometry The polygonal bounded half space is used to limit the volume of the half space in Boolean difference expressions. Only the part that is defined by a theoretical intersection between the half space solid and an extruded area solid, defined by extruding the polygonal boundary, is used for Boolean expressions. The PolygonalBoundary defines the 2D polyline which bounds the effectiveness of the half space in Boolean expressions. The BaseSurface is defined by a plane, and the normal of the plane together with the AgreementFlag defines the side of the material of the half space. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The [[IfcPolyline]] or the [[IfcCompositeCurve]] providing the PolygonalBoundary shall be closed. 2. If the PolygonalBoundary is given by an [[IfcCompositeCurve]] , it shall only have [[IfcCompositeCurveSegment]] s of type [[IfcPolyline]] , or [[IfcTrimmedCurve]] having a BasisCurve of type [[IfcLine]] , or [[IfcCircle]] 3. The BaseSurface defined at supertype [[IfcHalfSpaceSolid]] shall be of type [[IfcPlane]] 4. The normal of the plane, being the BaseSurface , shall not be perpendicular to the z axis of the position coordinate system"

#:IFC.xml:10745
msgid "IfcPolygonalBoundedHalfSpace_Position"
msgstr "Position"

msgid "IfcPolygonalBoundedHalfSpace_Position_DEFINITION"
msgstr "Définition du système de coordonnées de position pour la polyligne englobante et la surface de base ."

#:IFC.xml:10757
msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary"
msgstr "Frontière Polygonale"

msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary_DEFINITION"
msgstr "Courbe bornée en deux dimensions, définie dans le plan xy du système de coordonnées de position. hange ifc2x3 IFC2x3 CHANGE Le type d'attribut a été changé de [[IfcPolyline]] à son supertype [[IfcBoundedCurve]] avec une compatibilité ascendante pour l'échange basé sur des fichiers. Propositions formelles"

#:IFC.xml:10769
msgid "IfcPolygonalFaceSet"
msgstr "IfcPolygonalFaceSet"

msgid "IfcPolygonalFaceSet_DEFINITION"
msgstr "The [[IfcPolygonalFaceSet]] is a tessellated face set with all faces being bound by polygons. The planar faces are constructed by implicit polylines defined by three or more Cartesian points. Each planar face is defined by an instance of [[IfcIndexedPolygonalFace]] , or in case of faces with inner loops by [[IfcIndexedPolygonalFaceWithVoids]] . Depending on the value of the attribute Closed the instance of [[IfcPolygonalFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The attribute Faces refers to a list of [[IfcIndexedPolygonalFace]] s having an one based CoordIndex that provides three or more indices. If the face has inner loops, the [[IfcIndexedPolygonalFaceWithVoids]] has a two dimensional, one based list, where the first dimension of the two dimensional list addresses the list of inner loops the second dimension of the two dimensional list provides three or more indices each being a vertex of the planar polygon representing the inner loop. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifcpolygonalfaceset 01.png Figure 1 Use of PnIndex NOTE If the [[IfcPolygonalFaceSet]] is closed, the face vertices of the [[IfcIndexedPolygonalFace]] s shall connect counterclock wise when seen from the outside of the closed shell to guarantee that the face normal points away from the material of the shell. Inner loops, provided by the [[IfcIndexedPolygonalFaceWithVoids]] , shall connect clock wise. Figure 2 shows an IfcFacetedFaceSet represented by 1 [[IfcIndexedPolygonalFace]] 1, 2, 3, 4 2 [[IfcIndexedPolygonalFace]] 6, 2, 3, 7 3 [[IfcIndexedPolygonalFace]] 7, 3, 4, 8 4 [[IfcIndexedPolygonalFace]] 8, 4, 1, 5 5 [[IfcIndexedPolygonalFace]] 1, 4, 3, 2 6 [[IfcIndexedPolygonalFace]] 6, 7, 8, 5 7 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 2 Polygonal face set geometry NOTE The definition of IfcFacetedFaceSet is based on the indexedFaceSet defined in ISO IEC 19775 1 HISTORY New entity in IFC4 Addendum 2. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two outer or inner boundaries of faces the topological normal at each point on the boundary of the polygonal face set shall point away from the material of the solid."

#:IFC.xml:10697
msgid "IfcPolygonalFaceSet_Faces"
msgstr "Visages"

msgid "IfcPolygonalFaceSet_Faces_DEFINITION"
msgstr "La liste des faces polygonales, avec ou sans boucles intérieures, qui relient le visage façonné."

#:IFC.xml:10770
msgid "IfcPolygonalFaceSet_Closed"
msgstr "Fermé"

msgid "IfcPolygonalFaceSet_Closed_DEFINITION"
msgstr "Indique si le [[IfcPolygonalFaceSet]] est un shell fermé ou non. Si omis, aucune information de ce type ne peut être fournie."

#:IFC.xml:10775
msgid "IfcPolygonalFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcPolygonalFaceSet_PnIndex_DEFINITION"
msgstr "La liste des entiers définissant les emplacements dans le [[IfcCartesianPointList3D]] pour obtenir les coordonnées des points pour les indices sur les faces polygonales indexées. Si l'index PnIndex n'est pas fourni, les indices aux faces polygonales indexées pointent directement dans la [[IfcCartesianPointList3D]] ."

#:IFC.xml:10782
msgid "IfcRectangularPyramid"
msgstr "Pyramide IfcRectangulaire"

msgid "IfcRectangularPyramid_DEFINITION"
msgstr "Le [[IfcRectangularPyramid]] est une primitive de Construction Solid Geometry CSG 3D. C'est un solide avec une base rectangulaire et un point appelé apex comme le haut. Les fissures de la base au sommet. L'axe du centre de la base à l'apex est perpendiculaire à la base. L'attribut Position héritée définit l'IfcAxisPlacement3D et fournit l'emplacement et l'orientation de la pyramide SELF [[IfcCsgPrimitive3D]]. osition L'emplacement et l'orientation du système d'axe pour la primitive. SELF [[IfcCsgPrimitive3D]]. osition.Location au centre de la zone circulaire étant la face inférieure du cône. SELF [[IfcCsgPrimitive3D]].Position. osition 3 L'axe z du système de coordonnées de placement hérité fournit l'axe central de [[IfcRightCircularCone]] , et l'apex est à la valeur de Hauteur appliquée à la direction positive de l'axe z. Le Bas Rayon définit la base circulaire au plan xy du système de coordonnées de placement. Comme le montre la figure 1, la pyramide est positionnée dans son propre système de coordonnées de placement. L'origine est le centre du rectangle inférieur, qui se trouve dans le plan XY. Le sommet se trouve sur l'axe z positif à 0, 0, 0, Hauteur . pyramide .. .. .. .. figures ifcrectangularpyramid layout1.png Figure 1 Rectangular pyramide géométrie HISTORY New entity in IFC2x3 . se head Texture use definition On each triangular side face, textures are aligned facing vertict. Les textures sont étirées ou répétées dans l'étendue de la base de chaque visage selon RepeatS. Les textures sont étirées ou répétées vers le haut selon Repeat T, où le point le plus haut a des coordonnées de 0,5,1.0 si RepeatT est False. Sur la face inférieure, les textures sont orientées vers l'avant vers l'arrière. La figure 2 illustre le mapping de texture par défaut avec une texture serrée RepeatS False et RepeatT False . L'image à gauche montre la texture où l'axe S pointe vers la droite et l'axe T vers le haut. L'image à droite montre la texture appliquée à la géométrie où l'axe X pointe vers la droite, l'axe Y pointe vers la gauche et l'axe Z vers le haut. ridtable Side Normal Origin X Origin Y Origin Z S Axe T Gauche X 0 Y vers le haut X Longueur X 0 Y vers le haut à la droite X Xlength 0 Y vers le haut Y Y 0 0 x vers le haut point Back Y XLength 0 x vers le haut point Bas Z XLength 0 x Y Figure 2 Rectangulaire"

#:IFC.xml:10783
msgid "IfcRectangularPyramid_Height"
msgstr "Hauteur"

msgid "IfcRectangularPyramid_Height_DEFINITION"
msgstr "La hauteur de l'apex au-dessus du plan de la base, mesurée dans la direction de l'axe Z de placement, le SELF [[IfcCsgPrimitive3D]]. osition.P 2 ."

#:IFC.xml:10788
msgid "IfcRectangularPyramid_XLength"
msgstr "Longueur XLS"

msgid "IfcRectangularPyramid_XLength_DEFINITION"
msgstr "La longueur de la base mesurée le long de l'axe de placement X. Il est fourni par le placement de l'axe hérité via SELF [[IfcCsgPrimitive3D]].Position.P 1."

#:IFC.xml:10793
msgid "IfcRectangularPyramid_YLength"
msgstr "Longueur Ya"

msgid "IfcRectangularPyramid_YLength_DEFINITION"
msgstr "La longueur de la base mesurée le long de l'axe de placement Y. Il est fourni par le placement de l'axe hérité via SELF [[IfcCsgPrimitive3D]].Position.P 2."

#:IFC.xml:10800
msgid "IfcRevolvedAreaSolid"
msgstr "IfcRevolvedAreaSolid"

msgid "IfcRevolvedAreaSolid_DEFINITION"
msgstr "An [[IfcRevolvedAreaSolid]] is a solid created by revolving a cross section provided by a profile definition about an axis. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the revolved solid. If not provided, it defaults to the current object coordinate system. The axis and the cross section shall be in the same plane, prior to any repositioning. NOTE Both the axis and the cross section are required to lie in the xy plane of the object position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the revolved solid. The revolved area solid defines the revolution of a 2D area given by a profile definition by an axis and angle. The result is a solid. The swept area is given by a profile definition. The profile is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. The AxisLine can have any orientation within the XY plane, it does not have to be parallel to the y axis as shown in the illustration. Figure 1 Revolved area solid geometry EXAMPLE Figure 1 illustrates geometric parameters and additional positioning parameters of the revolved area solid. The revolved area solid defines the rotation of a 2D area by an axis and angle. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the x axis. Figure 2 Repositioned revolved area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A revolved area solid is a solid formed by revolving a planar bounded surface about an axis. The axis shall be in the plane of the surface and the axis shall not intersect the interior of the bounded surface. The bounded surface may have holes which will sweep into holes in the solid. The direction of revolution is clockwise when viewed along the axis in the positive direction. More precisely if A is the axis location and d is the axis direction and C is an arc on the surface of revolution generated by an arbitrary point p on the boundary of the swept area, then C leaves p in direction d x p A as the area is revolved. NOTE Entity adapted from revolved area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .spec head Informal Propositions 1. The AxisLine shall lie in the plane of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 2. The AxisLine shall not intersect the interior of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 3. The Angle shall be between 0 and 360 , or 0 and 2π depending on the unit type for [[IfcPlaneAngleMeasure]] . .use head Texture Use Definition For side faces, textures are aligned facing upright along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the outermost longest revolution path according to RepeatT , where coordinates are compressed towards the axis of revolution. For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcRevolvedAreaSolid]] having a profile of [[IfcTShapeProfileDef]] and revolved at 22.5 degrees, the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth . Figure 3 Revolved area solid textures"

#:IFC.xml:10812
msgid "IfcRevolvedAreaSolid_Axis"
msgstr "Axe"

msgid "IfcRevolvedAreaSolid_Axis_DEFINITION"
msgstr "Axe sur la révolution qui aura lieu."

#:IFC.xml:10801
msgid "IfcRevolvedAreaSolid_AxisLine"
msgstr "AxisLine"

msgid "IfcRevolvedAreaSolid_AxisLine_DEFINITION"
msgstr "La ligne de l'axe de la révolution. Propositions formelles"

#:IFC.xml:10805
msgid "IfcRevolvedAreaSolid_Angle"
msgstr "Angle"

msgid "IfcRevolvedAreaSolid_Angle_DEFINITION"
msgstr "L'angle à travers lequel le balayage sera effectué. Cet angle est mesuré à partir du plan de la zone balayée fourni par le plan XY du système de coordonnées de position."

#:IFC.xml:10824
msgid "IfcRevolvedAreaSolidTapered"
msgstr "format@@0 IfcRevolvedAreaSolidTapered"

msgid "IfcRevolvedAreaSolidTapered_DEFINITION"
msgstr "[[IfcRevolvedAreaSolidTapered]] est défini en tournant une section croisée le long d'un arc circulaire. La section croisée peut changer le long du balayage tournant de la forme de la section de la croix de départ en la forme de la section de croix de fin. Les sommets correspondants des sections de croix de départ et de fin sont ensuite connectés. La surface bordée peut avoir des trous qui vont glisser dans les trous dans le solide. L'axe de rotation est défini par le point de départ SELF [[IfcSweptAreaSolid]]. osition.Location Direction SELF [[IfcRevolvedAreaSolid]].Axis Rotation Axe SELF [[IfcRevolvedAreaSolid]]. xisLine , créé à partir du point de départ et de direction en appliquant une magnitude de 1 unité. Les angles positifs sont appliqués dans le sens horaire lorsque l'on regarde dans la direction positive de l'axe de rotation. La section transversale de départ est définie par SELF [[IfcSweptAreaSolid]]. weptArea Une surface planaire bordée dans le plan XY du système de coordonnées de position défini par SELF [[IfcSweptAreaSolid]]. osition.P 1 et SELF [[IfcSweptAreaSolid]]. osition.P 2 L'axe de rotation se trouve dans le plan de la section de croix de départ mais ne doit pas intersecter l'intérieur de la section de croix de départ. La section de croix de fin est définie par EndSweptArea Une surface planaire bordée située dans le plan XY du système de coordonnées de position défini en faisant pivoter les coordonnées de la position de départ fournies par SELF [[IfcSweptAreaSolid]]. osition autour de l'axe de rotation par l'angle donné par SELF [[IfcRevolvedAreaSolid]].Angle . La section de croix de fin est topologiquement similaire à la section de croix de départ ayant le même nombre de sommets et de bords . La section de la croix de fin peut soit être définie par le même profil paramétrique en utilisant des valeurs de paramètre différentes, ou par une transformation cartésienne 2D du profil de départ dans le plan de section finale. Le solide est généré en transformant la section de la croix de départ en section croisée de fin. Une face de départ, une face de fin chacune définie par les sections de croix de début et de fin et une ou plusieurs faces latérales. Chaque face latérale est une surface réglée définie par une paire de bords correspondants de la section de début et de fin. Les surfaces dominées sont construites dans l'espace de coordonnées cylindrique défini par le supertype [[IfcRevolvedAreaSolid]] . HISTOIRE Nouvelle entité dans IFC4. Propositions informelles .spec 1. Miroir dans [[IfcDerivedProfileDef]]Opérateur ne doit pas être utilisé"

#:IFC.xml:10827
msgid "IfcRevolvedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcRevolvedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "EndSweptArea"

#:IFC.xml:10839
msgid "IfcRightCircularCone"
msgstr "IfcRightCircularCone"

msgid "IfcRightCircularCone_DEFINITION"
msgstr "Le [[IfcRightCircularCone]] est une primitive de Construction Solid Geometry CSG 3D. C'est un solide avec une base circulaire et un point appelé apex comme le haut. Les foulards de la base au sommet. L'axe du centre de la base circulaire à l'apex est perpendiculaire à la base. L'attribut Position héritée définit l'IfcAxisPlacement3D et fournit l'emplacement et l'orientation du cône SELF [[IfcCsgPrimitive3D]]. osition L'emplacement et l'orientation du système d'axe pour la primitive. SELF [[IfcCsgPrimitive3D]]. osition.Location au centre de la zone circulaire étant la face inférieure du cône. SELF [[IfcCsgPrimitive3D]].Position. osition 3 L'axe z du système de coordonnées de placement hérité fournit l'axe central de [[IfcRightCircularCone]] , et l'apex est à la valeur de Hauteur appliquée à la direction positive de l'axe z. Le Bas Rayon définit la base circulaire au plan xy du système de coordonnées de placement. La figure 1 illustre les paramètres géométriques du cône. Le cône est positionné dans son propre système de coordonnées de placement. L'origine est le centre du disque inférieur circulaire, qui se trouve dans le plan XY. L'apex se trouve sur l'axe z positif à 0, 0, 0, Hauteur . cone1 .. .. .. figures ifcrightcircularcone layout1. ng Figure 1 Droite de la géométrie cône circulaire NOTE Entité adaptée à partir du cône circulaire droit défini dans ISO 10303 42. HISTORY Nouvelle entité dans IFC2x3 . se head Texture use definition On the circular side, textures are aligned facing straight with origin at the back Y direction revolving counter clockwise. Les textures sont étirées ou répétées dans la mesure de la circonférence de base selon RepeatS. Les textures sont compressées linéairement vers le haut selon RepeatT. Sur la face inférieure, les textures sont alignées vers l'avant vers l'arrière, avec le centre du cercle aligné vers le centre de la texture. La figure 2 illustre le mapping de texture par défaut avec une texture serrée RepeatS False et RepeatT False . L'image à gauche montre la texture où l'axe S pointe vers la droite et l'axe T vers le haut. L'image à droite montre la texture appliquée à la géométrie où l'axe X pointe vers la droite, l'axe Y pointe vers la gauche et l'axe Z vers le haut. .gridtable Side Normal Origin X Origin Y Origin Z S Axe T S Side Y 0 X vers le haut du rayon Z 0 X Y Figure 2 Textures circulaires du cône droit"

#:IFC.xml:10840
msgid "IfcRightCircularCone_BottomRadius"
msgstr "Rayon inférieur"

msgid "IfcRightCircularCone_BottomRadius_DEFINITION"
msgstr "Le rayon du cône à la base."

#:IFC.xml:10845
msgid "IfcRightCircularCone_Height"
msgstr "Hauteur"

msgid "IfcRightCircularCone_Height_DEFINITION"
msgstr "La distance entre la base du cône et l'apex."

#:IFC.xml:10852
msgid "IfcRightCircularCylinder"
msgstr "format@@0 IfcDrotCylinder"

msgid "IfcRightCircularCylinder_DEFINITION"
msgstr "The [[IfcRightCircularCylinder]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a circular base and top. The cylindrical surface between if formed by points at a fixed distance from the axis of the cylinder. The inherited Position attribute defines the IfcAxisPlacement3D and provides SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cylinder. SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis provides the center axis and the height is measured from the origin along the positive direction of the z axis. Figure 1 illustrates geometric parameters of the cylinder. The cylinder is positioned within its own placement coordiante system. The origin is the center of the bottom circular disk, that lies in the XY plane. The center of the top circular disk is on the positive z axis at 0, 0, Height . cylinder .. .. .. .. figures ifcrightcircularcylinder layout1.png Figure 1 Right circular cylinder geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A right circular cylinder is a CSG primitive in the form of a solid cylinder of finite height. It is defined by an axis point at the centre of one planar circular face, an axis, a height, and a radius. The faces are perpendicular to the axis and are circular discs with the specified radius. The height is the distance from the first circular face centre in the positive direction of the axis to the second circular face centre. NOTE Entity adapted from right circular cylinder defined in ISO 10303 42. HISTORY New entity in IFC2x3. .use head Texture use definition On the circular side, textures are aligned facing upright with origin at the back Y direction revolving counter clockwise. Textures are stretched or repeated to the extent of the circumference according to RepeatS. Textures are stretched or repeated to the extent of the Height according to RepeatT. On the top and bottom faces, textures are aligned facing front to back, with the center of the circle aligned to the center of the texture. Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Side Y 0 Radius 0 X Z Bottom Z Radius Radius 0 X Y Top Z Radius Radius Height X Y Figure 2 Right circular cylinder textures"

#:IFC.xml:10853
msgid "IfcRightCircularCylinder_Height"
msgstr "Hauteur"

msgid "IfcRightCircularCylinder_Height_DEFINITION"
msgstr "La distance entre les faces planaires circulaires du cylindre."

#:IFC.xml:10858
msgid "IfcRightCircularCylinder_Radius"
msgstr "Radius"

msgid "IfcRightCircularCylinder_Radius_DEFINITION"
msgstr "Le rayon du cylindre."

#:IFC.xml:10865
msgid "IfcSectionedSolid"
msgstr "Si cette section est solide"

msgid "IfcSectionedSolid_DEFINITION"
msgstr "Un [[IfcSectionedSolid]] est un type de base abstrait pour les solides construits en balayant des sections croisées potentiellement variables le long d'une directrice."

#:IFC.xml:10868
msgid "IfcSectionedSolid_Directrix"
msgstr "Directrice"

msgid "IfcSectionedSolid_Directrix_DEFINITION"
msgstr "La courbe utilisée pour définir l'opération de balayage."

#:IFC.xml:10880
msgid "IfcSectionedSolid_CrossSections"
msgstr "Sections croisées"

msgid "IfcSectionedSolid_CrossSections_DEFINITION"
msgstr "Liste des sections croisées en ordre séquentiel le long de la Directrix . Propositions formelles"

#:IFC.xml:10892
msgid "IfcSectionedSolidHorizontal"
msgstr "IfcSectionedSolidhorizontale"

msgid "IfcSectionedSolidHorizontal_DEFINITION"
msgstr "Un [[IfcSectionedSolidHorizontal]] est un modèle solide construit en balayant des sections croisées potentiellement différentes le long d'une courbe horizontalement. Le solide est généré en balayant les sections croisées entre les positions de section croisée avec une interpolation linéaire des points de profil, où le profil normal est d'accord avec la tangente de la Directrix , l'axe du profil X est orienté perpendiculairement à gauche de la Directrix même direction que LateralOffset à [[IfcPointByDistanceExpression]] comme orienté vers l'avant le long de la directrice, et l'axe du profil Y est orienté vers le haut selon FixedAxisVertical . Pour les sections ayant fait pivoter la section en fonction d'une seule super altitude, [[IfcDerivedProfileDef]] peut être utilisé pour indiquer une telle rotation avec chaque ParentProfile se référant au même profil sous-jacent. Pour les sections ayant une section transversale transformée en fonction de multiples super altitudes avec des points variant indépendamment, chaque profil peut être d'une instance différente, mais d'un même type (p. ex. [[IfcArbitraryClosedProfileDef]] , et peut éventuellement avoir des points de section croisée associés aux courbes du guide des chaînes de caractères en utilisant [[IfcIndexedPolyCurve]] avec IfcCartesianPointList2DLabelled . La figure 1 illustre quatre poutres d'un pont ayant un profil paramétré constant, deux guardrails ayant un profil arbitraire constant l'un d'eux miroir , et un pont de connexion ayant un profil arbitraire variable. structure spatiale .. .. .. .. .. figures ifcsectionedsolidhorizontal.png Figure 1 Sectioned solid horizontal Informal Propositions 1. Aucune section consécutive ne doit se croiser. 2. Si le type de section n'est pas [[IfcParameterizedProfileDef]] i.e. un profil arbitraire , alors le nombre de points et de bords devrait être le même pour deux profils consécutifs 3. Si la directrice n'est pas tangente continuelle, le solide qui en résulte est créé par un miter à mi-angle entre les deux segments. 4. Les bords très pointus peuvent entraîner des ententes miter mises en œuvre presque impossibles peuvent définir des limites acceptables pour la discontinuité tangente ou exiger que la directrice soit tangente continue. 5. La direction ne doit pas se croiser"

#:IFC.xml:10895
msgid "IfcSectionedSolidHorizontal_CrossSectionPositions"
msgstr "Positions de section croisée"

msgid "IfcSectionedSolidHorizontal_CrossSectionPositions_DEFINITION"
msgstr "Liste des expressions de distance en ordre d'augmentation séquentielle jumelée à CrossSections , indiquant la position de la section correspondante le long de la Directrix ."

#:IFC.xml:10907
msgid "IfcSectionedSpine"
msgstr "Fréquence de la colonne vertébrale"

msgid "IfcSectionedSpine_DEFINITION"
msgstr "An [[IfcSectionedSpine]] is a representation of the shape of a three dimensional object composed by a number of planar cross sections, and a spine curve. The shape is defined between the first element of cross sections and the last element of the cross sections. A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. All cross sections have to define areas by a closed profile to allow for the representation of a solid. All cross sections have to define curves by an open or closed profile to allow for the representation of a surface. The cross sections are defined by subtypes of [[IfcProfileDef]] , where the consecutive profiles may be derived by a transformation of the start profile or the previous consecutive profile. The spine curve shall be of type [[IfcCompositeCurve]] , each of its segments represented by [[IfcCompositeCurveSegment]] shall correspond to the part between exactly two consecutive cross sections. Figure 1 illustrates an example of an [[IfcSectionedSpine]] . The SpineCurve is given by an [[IfcCompositeCurve]] with two Segments . The Segments 1 has a ParentCurve of type [[IfcPolyline]] and a Transition CONTSAMEGRADIENT. The Segments 2 has a ParentCurve of type [[IfcTrimmedCurve]] and a Transition DISCONTINUOUS. Each CrossSectionPosition lies at a start or end point of the Segments . Each CrossSections are inserted by the CrossSectionPositions . The first two cross sections are of type [[IfcRectangleProfileDef]] , the third is of type [[IfcDerivedProfileDef]] . spine 1 .. .. .. .. figures ifcsectionedspine layout1.gif Figure 1 Sectioned spine geometry Figure 2 illustrates the final result of the [[IfcSectionedSpine]] . The body shown transparently is not fully defined by the exchange definition. render .. .. .. .. figures ifcsectionedspine.jpg Figure 2 Sectioned spine result .extDef NOTE Definition according to ISO CD 10303 42 1992 A sectioned spine is a representation of the shape of a three dimensional object composed of a spine curve and a number of planar cross sections. The shape is defined between the first element of cross sections and the last element of this set. NOTE A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. For the representation of a solid all cross sections are closed curves. NOTE Entity adapted from sectioned spine defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. none of the cross sections, after being placed by the cross section positions, shall intersect 2. none of the cross sections, after being placed by the cross section positions, shall lie in the same plane 3. the local origin of each cross section position shall lie at the beginning or end of a composite curve segment."

#:IFC.xml:10915
msgid "IfcSectionedSpine_SpineCurve"
msgstr "Courbe épineuse"

msgid "IfcSectionedSpine_SpineCurve_DEFINITION"
msgstr "Une courbe composite unique qui définit la courbe de la colonne vertébrale. Chacun des segments de la courbe composite correspond à la partie entre deux sections croisées."

#:IFC.xml:10927
msgid "IfcSectionedSpine_CrossSections"
msgstr "Sections croisées"

msgid "IfcSectionedSpine_CrossSections_DEFINITION"
msgstr "Une liste d'au moins deux sections croisées, chacune définie dans le plan xy du système de coordonnées de position de la section croisée. Le système de coordonnées de position est donné par la liste correspondante CrossSectionPositions."

#:IFC.xml:10939
msgid "IfcSectionedSpine_CrossSectionPositions"
msgstr "Positions de section croisée"

msgid "IfcSectionedSpine_CrossSectionPositions_DEFINITION"
msgstr "Systèmes de coordonnées de position pour les sections croisées qui forment la colonne vertébrale. Les profils définissant les sections croisées sont positionnés dans le plan xy du système de coordonnées de position correspondante."

#:IFC.xml:10908
msgid "IfcSectionedSpine_Dim"
msgstr "Dim"

msgid "IfcSectionedSpine_Dim_DEFINITION"
msgstr "La dimension de la courbe d'épine est toujours 3. Propositions formelles"

#:IFC.xml:10951
msgid "IfcSectionedSurface"
msgstr "format@@0 IfcSectionedsurface"

msgid "IfcSectionedSurface_DEFINITION"
msgstr "Une sorte de surface construite en balayant des tronçons de croix potentiellement différents le long d'une courbe horizontalement ou près horizontalement . La surface est générée par balayage des sections croisées entre l'interpolation linéaire CrossSectionPositions est supposée, à moins que les courbes de transition entre les points de section soient indiquées par OpenCrossProfileDef. ags. Les sections croisées sont orientées avec l'axe Y de chaque profil orienté vers le haut dans la direction Z ou perpendiculaire verticalement au Directrix, selon la valeur de l'attribut FixedAxisVertical. surfacequot en section .. .. .. chiffres [[IfcSectionedSurface]] 1. ng Figure 1 Surface Sectionnée à l'aide de [[IfcOpenCrossProfileDef]] En cas de ramification des lignes longitudinales, la SectionedSurface peut utiliser des instances OpenCrossProfileDef avec un nombre de points de section variable. Dans ce cas, le point dans deux sections croisées consécutives qui sont connectées sont identifiées par la même valeur de balise. section surfacequot .. .. .. .. chiffres [[IfcSectionedSurface]] 2. ng Figure 1 Surface Sectioned avec ramifications longitudinales lignes Formales Propositions formelles La courbe qui est la directrice sous-jacente aura la dimension de 3. Le type de profil doit être CURVE dans la liste des profils définissant les sections croisées. Le type d'entité pour chaque section doit être le même. La liste des sections croisées et la liste des positions des sections croisées doivent avoir la même taille. Propositions informelles Aucune section consécutive ne doit se croiser. Si la directrice n'est pas tangente continuelle, la surface résultante est créée par un miter à mi-angle entre les deux segments. Les bords très pointus peuvent aboutir à des ententes miter mises en œuvre presque impossibles peuvent définir des limites acceptables pour la discontinuité tangente ou nécessitent que la directrice soit tangente continuellement. La direction ne doit pas se croiser"

#:IFC.xml:10954
msgid "IfcSectionedSurface_Directrix"
msgstr "Directrice"

msgid "IfcSectionedSurface_Directrix_DEFINITION"
msgstr "La courbe utilisée pour définir l'opération de balayage"

#:IFC.xml:10966
msgid "IfcSectionedSurface_CrossSections"
msgstr "Sections croisées"

msgid "IfcSectionedSurface_CrossSections_DEFINITION"
msgstr "Liste des sections croisées dans l'ordre séquentiel le long de la Directrice"

#:IFC.xml:10978
msgid "IfcSectionedSurface_CrossSectionPositions"
msgstr "Positions de section croisée"

msgid "IfcSectionedSurface_CrossSectionPositions_DEFINITION"
msgstr "Liste des expressions de distance en ordre d'augmentation séquentielle jumelée à CrossSections, indiquant la position de la section correspondante le long de la Directrice."

#:IFC.xml:10990
msgid "IfcShellBasedSurfaceModel"
msgstr "format@@0 IfcShellBasedSurfaceModel"

msgid "IfcShellBasedSurfaceModel_DEFINITION"
msgstr "Un [[IfcShellBasedSurfaceModel]] représente la forme par un ensemble de coques ouvertes ou fermées. Les faces connectées dans la coque ont une dimension 2 et sont placées dans un espace de coordonnées de dimension 3. xtDef NOTE Definition according to ISO CD 10303 42 1992 A shell based surface model is described by a set of open or closed shells of dimensionality 2. Les obus ne se croisent que sur les bords et les sommets. Une face complète d'un shell peut être partagée avec un autre interpréteur. Les parties de coincidents de coquilles doivent toutes deux faire référence aux mêmes visages, bords et sommets définissant la région de coïncidence. Il y aura au moins une coquille. Une coquille peut exister indépendamment d'un modèle de surface, NOTE Entité adaptée à partir du modèle de surface à base de coque défini dans ISO 10303 42. HISTOIRE Nouvelle entité dans IFC2x. .spec head Informal Propositions 1. La dimension du modèle de surface à base de coque est 2. 2. Les obus ne se chevauchent ni ne se croisent que sur les visages, les bords ou les sommets."

#:IFC.xml:10991
msgid "IfcShellBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcShellBasedSurfaceModel_Dim_DEFINITION"
msgstr "La dimension spatiale de cette classe, elle est toujours 3."

#:IFC.xml:10996
msgid "IfcShellBasedSurfaceModel_SbsmBoundary"
msgstr "Frontière Sbsmaire"

msgid "IfcShellBasedSurfaceModel_SbsmBoundary_DEFINITION"
msgstr "Frontière Sbsmaire"

#:IFC.xml:11003
msgid "IfcSolidModel"
msgstr "IfcSolidModel"

msgid "IfcSolidModel_DEFINITION"
msgstr "Un [[IfcSolidModel]] représente la forme 3D par différents types de représentations de modèles solides. Il s'agit du super-type abstrait commun de la représentation des limites, de la représentation CSG, de la représentation de balayage et d'autres schémas de représentation solide appropriés. xtDef NOTE Definition according to ISO CD 10303 42 1992 A solid model is a complete representation of the nominal shape of a product so that all points in the interior are connected. On peut classer n'importe quel point comme étant à l'intérieur, à l'extérieur ou à la limite d'un solide. NOTA Une entité adaptée au modèle solide défini en ISO 10303 42. HISTOIRE Nouvelle entité dans IFC1.5"

#:IFC.xml:11004
msgid "IfcSolidModel_Dim"
msgstr "Dim"

msgid "IfcSolidModel_Dim_DEFINITION"
msgstr "La dimension spatiale de cette classe, elle est toujours 3."

#:IFC.xml:11013
msgid "IfcSphere"
msgstr "IfcSphere"

msgid "IfcSphere_DEFINITION"
msgstr "Le [[IfcSphere]] est une primitive de Construction Solid Geometry CSG 3D. C'est un solide où tous les points à la surface ont la même distance du point central. L'attribut Position héritée définit IfcAxisPlacement3D et fournit SELF [[IfcCsgPrimitive3D]]. osition L'emplacement et l'orientation du système d'axe pour la primitive. SELF [[IfcCsgPrimitive3D]].Position.Emplacement Le centre de la sphère. SELF [[IfcCsgPrimitive3D]].Position. osition 3 L'axe z pointe vers sa position vers le pôle nord et par ses directions négatives vers le pôle sud. EXAMPLE Figure 1 illustre les paramètres géométriques de la sphère. La sphère est positionnée dans son propre système de placement coordiante relatif au système de coordonnées de l'objet. L'origine est le centre de la sphère, la géométrie de la sphère de la figure 1 . xtDef NOTE Definition according to ISO CD 10303 42 1992 A sphere is a CSG primitive with a spherical shape defined by a centre and a radius. (n.m. ); n.m. (n.m. ) (n.m. se head Texture Use Definition Textures are aligned facing straight with origin at the back Y direction revolving counter clockwise. Les textures sont étirées ou répétées dans la mesure de la circonférence à l'équateur selon RepeatS et RepeatT. La figure 2 illustre le mapping de texture par défaut avec une texture serrée RepeatS False et RepeatT False . L'image à gauche montre la texture où l'axe S pointe vers la droite et l'axe T vers le haut. L'image à droite montre la texture appliquée à la géométrie où l'axe X pointe vers la droite, l'axe Y pointe vers la gauche et l'axe Z vers le haut. .gridtable Side Normal Origin X Origin Y Origin Z S Axe T Side Y 0 Radius 0 X, puis courbure du compteur dans le sens horaire Z, puis courbe vers les textures du haut de la figure 2 Sphère"

#:IFC.xml:11014
msgid "IfcSphere_Radius"
msgstr "Radius"

msgid "IfcSphere_Radius_DEFINITION"
msgstr "Le rayon de la sphère."

#:IFC.xml:11021
msgid "IfcSurfaceCurveSweptAreaSolid"
msgstr "format@@0 IfcSurfaceCurveSweptAreaSolid"

msgid "IfcSurfaceCurveSweptAreaSolid_DEFINITION"
msgstr "The [[IfcSurfaceCurveSweptAreaSolid]] is the result of sweeping an area along a directrix that lies on a reference surface. The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the tangent of the directrix at this point, and the profile s x axis agrees to the surface normal. At any point along the directrix, the swept profile origin lies on the directrix, the profile s normal points towards the tangent of the directrix, and the profile s x axis is identical to the surface normal at this point. NOTE The profile area s normal has to be identical to the tangent of the directrix at any given point. In case of a directrix having a linear segment at the start point, the segment has to be perpendicular to the profile at start. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , the parameter value is provided based on the curve parameterization. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , the parameter value is provided based on the curve parameterization. If no EndParam is provided the end defaults to the end of the directrix. The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE The StartParam and the EndParam are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. In case of a closed curve, such as [[IfcCircle]] or [[IfcEllipse]] , as the directrix, StartParam and the EndParam shall not exceed the parametic range, they shall not be 360 . EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In most cases, it is a plane or a surface of extrusion. The directrix lies on the surface, in case of a plane it might be defined as a polyline or composite curve, in case of a cylindrical or other non planer reference surface it might often be defined as a p curve on this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system of the implicit plane lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the normal of the reference surface at this point. The Axis2 the y axis, or v is constructed. The resulting body of the swept solid is not repositioned if the inherited Position attribute is omitted. Otherwise the coordinate system established by the Position attribute is used to reposition the body relative to the object coordinate system. EXAMPLE Figure 1 illustrates an example using a cylindrical reference surface and a p curve for sweeping a rectangle. The Postion is not provided and therefore it does not reposition the resulting swept solid. Figure 2 shows the expected result.NOTE The start of the directrix lies at the origin of the object coordinate system, as shown in the illustration,only by coincidence. The start of the directrix and thereby the start of the sweeping operation might be at any point within the object coordinate system and only depends on the position of the directrix.Figure 1 Surface curve wept area solid parameter Figure 2 Surface curve wept area solid results .extDef NOTE Definition according to ISO CD 10303 42 1992 A surface curve swept area solid is a type of swept area solid which is the result of sweeping a face along a Directrix lying on a ReferenceSurface . The orientation of the SweptArea is related to the direction of the surface normal. The SweptArea is required to be a curve bounded surface lying in the plane z 0 and this is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the normal to the ReferenceSurface at the current point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a Cartesian Transformation Operator 3D with attributes Local origin as point 0., 0., 0 , Axis 1 as the normal N to the reference surface at the point of the directrix with parameter u. Axis 3 as the direction of the tangent vector t at the point of the directrix with parameter u. The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the directrix parameter u. NOTE Entity adapted from surface curve swept area solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The SweptArea shall lie in the implicit plane z 0. 2. The Directrix shall lie on the ReferenceSurface ."

#:IFC.xml:11024
msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface"
msgstr "Surface de référence"

msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface_DEFINITION"
msgstr "Surface de référence"

#:IFC.xml:11036
msgid "IfcSweptAreaSolid"
msgstr "IfcSweptAreaSolid"

msgid "IfcSweptAreaSolid_DEFINITION"
msgstr "Un [[IfcSweptAreaSolid]] représente la forme 3D par un schéma de représentation balayante permettant à une section croisée planaire à deux dimensions de balayer dans l'espace. La zone balayée est définie par une section croisée, représentée par un sous-type if [[IfcProfileDef]] , qui est fourni comme une limite à deux dimensions fermée sur un plan implicite. La zone balayée est définie dans le plan xy du système de coordonnées de l'objet. L'opération balayante est appliquée à la zone balayée telle que définie dans les sous-types de [[IfcSweptAreaSolid]] , certains sous-types nécessitent une transformation implicite de la zone balayée à la position de départ du balayage. Le système optionnel de coordonnées Positio n permet de repositionner le solide balayé résultant par rapport au système de coordonnées de l'objet. .extDef NOTE Définition selon ISO CD 10303 42 1992 L'entité solide de la surface balayée rassemble les entités qui sont définies de manière procédurale en balayant l'action sur les surfaces planaires bordées. La position est l'espace du solide balayé dépendra de la position de la zone balayée. La zone balayée sera une face de la zone balayée résultante solide, excepté pour le cas d'une zone robuste avec un angle égal à 2<unk> ou 360 degrés . NOTA L'entité est adaptée à partir de la surface balayée solide définie en ISO 10303 42. HISTOIRE Nouvelle entité dans IFC1.5 .change ifc2x4 IFC4 CHANGE La position de l'attribut a été changée en OPTIONAL avec la compatibilité ascendante pour l'échange basé sur des fichiers."

#:IFC.xml:11039
msgid "IfcSweptAreaSolid_SweptArea"
msgstr "SweptArea"

msgid "IfcSweptAreaSolid_SweptArea_DEFINITION"
msgstr "La surface définissant la surface à glisser. Elle est donnée comme une définition de profil dans le plan xy du système de coordonnées de position."

#:IFC.xml:11051
msgid "IfcSweptAreaSolid_Position"
msgstr "Position"

msgid "IfcSweptAreaSolid_Position_DEFINITION"
msgstr "Le système de coordonnées de position pour le résultat balayé solide de l'opération de balayage. Le système de coordonnées de position permet le repositionnement du solide balayé. S'il n'est pas fourni, la solide balayée reste dans la position déterminée par la section croisée ou par la direction utilisée pour le balayage. .change ifc2x4 IFC4 CHANGE L'attribut a été changé en OPTIONAL avec une compatibilité ascendante pour l'échange basé sur des fichiers. Propositions formelles"

#:IFC.xml:11063
msgid "IfcSweptDiskSolid"
msgstr "IfcSweptDiskSolid"

msgid "IfcSweptDiskSolid_DEFINITION"
msgstr "An [[IfcSweptDiskSolid]] represents the 3D shape by a sweeping representation scheme allowing a two dimensional circularly bounded plane to sweep along a three dimensional Directrix through space. The StartParam and EndParam parameter are optional, if not provided they default to the start and end of the Directrix . Only if the Directrix is given by a bounded or by a closed curve, it is permissible to omit the values of StartParam and EndParam . If the transitions between consecutive segments of the Directrix are not tangent continuous, the resulting solid is created by a miter at half angle between the two segments. Informal proposition restricts the permissible angle between two non tangent continuous segments. Figure 1 illustrates an example. Directrix given as [[IfcIndexedPolyCurve]] , having linear and circular arc segments, that are tangent continuous between each segments Directrix being a bounded and open curve No StartParam and EndParam are provided, start and end default to start and end of the bounded curve of the Directrix NOTE Although the example shows a Directrix as a poly curve on a planar reference surface, the definition of [[IfcSweptDiskSolid]] is not restricted to be based on planer curves. However view definitions or implementer agreements may provide restrictions. NOTE The geometric item [[IfcIndexedPolyCurve]] provides a more compact representation compared with [[IfcCompositeCurve]] as is therefore the prefered curve representation for the Directrix . disk solid .. .. .. .. figures ifcsweptdisksolid layout1.png Figure 1 Swept disk solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A swept disk solid is the solid produced by sweeping a circular disk along a three dimensional curve. During the sweeping operation the normal to the plane of the circular disk is in the direction of the tangent to the directrix curve and the center of the disk lies on the directrix. The circular disk may, optionally, have a central hole, in this case the resulting solid has a through hole, or, an internal void when the directrix forms a close curve. NOTE Entity adapted from swept disk solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE The attribute StartParam and EndParam have been made optional. .spec head Informal Propositions 1. If the Directrix curve definition is not tangent continuous, the transition between the segments has to be within an acceptable limit of tangent discontinuity. Very sharp edges may result in nearly impossible miter. Implementer agreements may define acceptable limits for tangent discontinuity. 2. The segments of the Directrix shall be long enough to apply the Radius . In case of an arc segment forming part of the Directrix , its radius shall be greater then the disk Radius 3. The Directrix shall not be based on an intersecting curve."

#:IFC.xml:11086
msgid "IfcSweptDiskSolid_Directrix"
msgstr "Directrice"

msgid "IfcSweptDiskSolid_Directrix_DEFINITION"
msgstr "La courbe utilisée pour définir le fonctionnement de balayage. Le solide est généré en balayant un disque circulaire le long de la Directrix ."

#:IFC.xml:11064
msgid "IfcSweptDiskSolid_EndParam"
msgstr "Paramètre de fin"

msgid "IfcSweptDiskSolid_EndParam_DEFINITION"
msgstr "La valeur du paramètre de la Directrix à laquelle se termine l'opération de balayage. Si aucune valeur n'est fournie, la fin de l'opération de balayage est à la fin de la Directrix . .change ifc2x4 IFC4 CHANGE L'attribut a été changé en OPTIONAL avec une compatibilité ascendante pour l'échange basé sur des fichiers. Propositions formelles"

#:IFC.xml:11069
msgid "IfcSweptDiskSolid_InnerRadius"
msgstr "InnerRadius"

msgid "IfcSweptDiskSolid_InnerRadius_DEFINITION"
msgstr "Cet attribut est optionnel, s'il est présent, il définit le rayon d'un trou circulaire au centre du disque."

#:IFC.xml:11074
msgid "IfcSweptDiskSolid_Radius"
msgstr "Radius"

msgid "IfcSweptDiskSolid_Radius_DEFINITION"
msgstr "Le rayon du disque circulaire à balayer le long de la directrice . Désigne le rayon extérieur, si un InnerRadius est appliqué."

#:IFC.xml:11079
msgid "IfcSweptDiskSolid_StartParam"
msgstr "StartParam"

msgid "IfcSweptDiskSolid_StartParam_DEFINITION"
msgstr "La valeur du paramètre de la Directrix à laquelle commence l'opération de balayage. Si aucune valeur n'est fournie, le début de l'opération de balayage est au début de la Directrix . .change ifc2x4 IFC4 CHANGE L'attribut a été changé en OPTIONAL avec la compatibilité ascendante pour l'échange basé sur des fichiers."

#:IFC.xml:11098
msgid "IfcSweptDiskSolidPolygonal"
msgstr "IfcSweptDiskSolidPolygonal"

msgid "IfcSweptDiskSolidPolygonal_DEFINITION"
msgstr "Le [[IfcSweptDiskSolidPolygonal]] est un [[IfcSweptDiskSolid]] où la Directrice est limitée à être fournie par une ligne de poly seulement. Un attribut facultatif FilletRadius peut être affirmé, il est ensuite appliqué comme un filet à toutes les transitions entre les segments de la ligne poly. NOTE L'élément géométrique [[IfcIndexedPolyCurve]] fournit une représentation plus compacte par rapport à [[IfcPolyline]] . C'est donc la représentation préférée de la courbe pour la Directrix . Le [[IfcIndexedPolyCurve]] ne doit pas avoir de Segments définis, le resticenter à une ligne de poly seulement. HISTOIRE Nouvelle entité dans la IFC4. .spec head Informal Propositions 1. Le FilletRadius , si fourni, doit être plus petit ou égal à la longueur du segment de début et de fin du [[IfcPolyline]] , et plus petit alors ou égal à la moitié de la longueur du segment intérieur le plus court."

#:IFC.xml:11099
msgid "IfcSweptDiskSolidPolygonal_FilletRadius"
msgstr "format@@0 FilletRadius"

msgid "IfcSweptDiskSolidPolygonal_FilletRadius_DEFINITION"
msgstr "Le filet qui est également appliqué à toutes les transitions entre les segments du [[IfcPolyline]] , fournissant la représentation géométrique de la Directrix . Si omis, aucun filet n'est appliqué aux segments. Propositions formelles"

#:IFC.xml:11106
msgid "IfcTaperedSweptAreaProfiles__StartArea"
msgstr "IfcTaperedSweptAreaProfiles StartArea"

#:IFC.xml:11114
msgid "IfcTessellatedFaceSet"
msgstr "IfcTessellatedFaceSet"

msgid "IfcTessellatedFaceSet_DEFINITION"
msgstr "Le [[IfcTessellatedFaceSet]] est un modèle topologique de représentation limite limité aux faces planaires et aux arêtes droites. Il peut représenter une approximation d'une surface analytique ou solide qui peut être fournie en plus de sa tessellation en tant que représentation distincte. La [[IfcTessellatedFaceSet]] fournit une représentation de données compacte d'un jeu de faces connecté en utilisant des indices dans des listes ordonnées de sommets, Normes, couleurs et cartes de textures. NOTA La représentation compacte a été choisie pour permettre de petits ensembles de données malgré des ensembles de visages potentiellement importants, arêtes et sommets nécessaires pour représenter les tessellations de surfaces analytiques et solides, et malgré de grandes quantités d'informations sur la couleur et la texture pour annoter les visages tesselés. Le [[IfcTessellatedFaceSet]] est un supertype abstrait de visage tesselé impose chaque contrainte spécifique à la génération de visage pour la tessellation, comme la triangulation avec ou sans bande et ventilateurs ou quadrilatères, ou les faces polygonales avec ou sans boucles intérieures . NOTE Toutes les contraintes différentes sur les jeux de faces ne sont pas incluses comme sous-types spécifiques dans cette version de la spécification. Les attributs suivants s'appliquent à tous les sous-types. Les coordonnées sont la liste ordonnée de points cartésiens représentant les sommets de l'objet tessellé. Une liste d'index, définie au niveau des sous-types, utilise les points, identifiés par la position de l'index, pour construire les polylignes qui représentent les visages. La relation inverse HasColours fournit une carte des couleurs indexée avec une liste correspondante d'indices fournissant une couleur pour chaque face du jeu de face tessellé. La relation inverse HasTextures fournit une carte de texture indexée avec une liste correspondante d'indices fournissant des coordonnées de texture qui correspondent aux coordonnées géométriques des polylignes représentant les visages. Chaque face de la face tessellée doit avoir au moins trois sommets non coïncidents qui définissent un polygone planaire qui définissent un polygone non intersectant qui définissent un polygone non auto-intersecteur. NOTE The definition of [[IfcTessellatedFaceSet]] is based on the indexedFaceSet defined in ISO IEC 19775 1 HISTORY New entity in IFC4."

#:IFC.xml:10511
msgid "IfcTessellatedFaceSet_Coordinates"
msgstr "Coordonnées"

msgid "IfcTessellatedFaceSet_Coordinates_DEFINITION"
msgstr "Une liste ordonnée de points cartésiens utilisés par l'index de coordonnées défini dans les sous-types de [[IfcTessellatedFaceSet]] ."

#:IFC.xml:11123
msgid "IfcTessellatedFaceSet_HasColours"
msgstr "Ha Couleurs"

msgid "IfcTessellatedFaceSet_HasColours_DEFINITION"
msgstr "Référence à la carte des couleurs indexée fournissant les valeurs RVB de couleur correspondantes aux faces des sous-types de [[IfcTessellatedFaceSet]] ."

#:IFC.xml:11137
msgid "IfcTessellatedFaceSet_HasTextures"
msgstr "Textures"

msgid "IfcTessellatedFaceSet_HasTextures_DEFINITION"
msgstr "Référence à la carte de texture indexée fournissant les coordonnées de texture correspondantes aux sommets qui entourent les faces des sous-types de [[IfcTessellatedFaceSet]] ."

#:IFC.xml:11115
msgid "IfcTessellatedFaceSet_Dim"
msgstr "Dim"

msgid "IfcTessellatedFaceSet_Dim_DEFINITION"
msgstr "La dimension spatiale de cet élément de représentation géométrique, c'est toujours 3."

#:IFC.xml:11151
msgid "IfcTessellatedItem"
msgstr "IfcTessellatedItem"

msgid "IfcTessellatedItem_DEFINITION"
msgstr "Le [[IfcTessellatedItem]] est le super-type abstrait de tous les modèles géométriques tessellés. HISTOIRE Nouvelle entité dans l'IFC4."

#:IFC.xml:11154
msgid "IfcTriangulatedFaceSet"
msgstr "format@@0 IfcTriangulatedFaceSet"

msgid "IfcTriangulatedFaceSet_DEFINITION"
msgstr "The [[IfcTriangulatedFaceSet]] is a tessellated face set with all faces being bound by triangles. The faces are constructed by implicit polylines defined by three Cartesian points. Depending on the value of the attribute Closed the instance of [[IfcTriangulatedFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The coordinates of each point are provided by a one based index into an ordered list of Cartesian points provided by the two dimensional list CoordIndex , where the first dimension of the two dimensional list addresses the list of triangular faces the second dimension of the two dimensional list provides exactly three indices. Each index points to a Cartesian point being a vertex of the triangle. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifctriangulatedfaceset 03.png Figure 1 Use of PnIndex See Figure 2 for using the [[IfcTriangulatedFaceSet]] without as default and with using the PnIndex . [[IfcTriangulatedFaceSet]] 01 .. .. .. .. figures ifctriangulatedfaceset 01.png Figure 2 Triangulated face set Optionally normals can be provided. Only normals per vector are supported allowing for visually curved triangles when the three normals of the corresponding three vertices of a triangle are not co linear to the normal of the triangular face. If they are identical, normals shall be omited. NOTE In case of a body representation having triangular faces with curvature, different normals for all three vertices in context of this triangles are exported, describing the curvature for smooth visualisation. In case of triangular faces with no curvature, the three vertex based normals are identical and could always be computed from the face. Therefore vertices should only be exported to support smooth visualisation by curvature of triangles. In case of faceted representation no vertices should be exported. Normals are provided by the two dimensional list Normals , where the first dimension of the two dimensional list addresses the corresponding list of vertex indices of the triangular faces the second dimension of the two dimensional list provides exactly three real values to determine the direction of the normal at this vertex of the triangle. The indices in the CoordIndex point into the list of Normals . The indices of CoordIndex are applied to both points, either directly directly, or via the PnIndex and normals. See Figure 3 for handling of normals. [[IfcTriangulatedFaceSet]] 02 .. .. .. .. figures ifctriangulatedfaceset 02.png Figure 3 Triangulated face set with normals NOTE Using corresponding lists of points and normals allows to use only a single list of indices into both at the expense of having non unique collections of vertices. Figure 4 shows the use of [[IfcTriangulatedFaceSet]] without annotation. The diagram of the [[IfcTriangulatedFaceSet]] represents the indices and the ordered list into which the indices point. The index starts with 1 indexed as 1 to N , if the greatest index in CoordIndex in N, then the [[IfcCartesianPointList]] shall have N lists of 3 3 coordinates. Figure 168 shows an [[IfcTriangulatedFaceSet]] represented by CoordIndex 1,6,5 , 1,2,6 , 6,2,7 , 7,2,3 , 7,8,6 , 6,8,5 , 5,8,1 , 1,8,4 , 4,2,1 , 2,4,3 , 4,8,7 , 7,3,4 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 4 Triangulated face set geometry NOTE The definition of [[IfcTriangulatedFaceSet]] is based on the indexedFaceSet and indexedTriangleSet defined in ISO IEC 19775 1. The use of PnIndex has been adopted from triangulated surface set defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two boundaries of faces the topological normal at each point on the boundary of the triangulated face set shall point away from the mater ial of the solid."

#:IFC.xml:11155
msgid "IfcTriangulatedFaceSet_NumberOfTriangles"
msgstr "Nombre de triangles"

msgid "IfcTriangulatedFaceSet_NumberOfTriangles_DEFINITION"
msgstr "Nombre dérivé de triangles utilisés pour cette triangulation."

#:IFC.xml:11160
msgid "IfcTriangulatedFaceSet_Closed"
msgstr "Fermé"

msgid "IfcTriangulatedFaceSet_Closed_DEFINITION"
msgstr "Indique si le [[IfcTriangulatedFaceSet]] est un shell fermé ou non. Si omis, aucune information de ce type ne peut être fournie."

#:IFC.xml:11165
msgid "IfcTriangulatedFaceSet_CoordIndex"
msgstr "CoordIndex"

msgid "IfcTriangulatedFaceSet_CoordIndex_DEFINITION"
msgstr "Liste à deux dimensions pour les triangles indexés, où la première dimension représente les triangles de 1 à N. La seconde dimension a exactement trois valeurs représentant les indices à trois points de sommet de 1 à 3 . NOTA Les coordonnées des sommets sont fournies par la liste indexée de SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList ."

#:IFC.xml:11170
msgid "IfcTriangulatedFaceSet_Normals"
msgstr "Normales"

msgid "IfcTriangulatedFaceSet_Normals_DEFINITION"
msgstr "Une liste ordonnée de trois directions pour les normales. C'est une liste de directions à deux dimensions fournie par trois valeurs de paramètres. La première dimension correspond aux indices de sommet du Coordindex La seconde dimension a exactement trois valeurs, 1 direction x , 2 direction y et 3 direction z"

#:IFC.xml:11175
msgid "IfcTriangulatedFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcTriangulatedFaceSet_PnIndex_DEFINITION"
msgstr "La liste des entiers définissant les emplacements dans le [[IfcCartesianPointList3D]] pour obtenir les coordonnées des points pour les indices ayant été indexés dans l'indice CoordIndex. Si l'index PnIndex n'est pas fourni, les indices pointent directement dans la [[IfcCartesianPointList3D]] ."

#:IFC.xml:11182
msgid "IfcTriangulatedIrregularNetwork"
msgstr "IfcTriangulaireréseau irrégulier"

msgid "IfcTriangulatedIrregularNetwork_DEFINITION"
msgstr "Le [[IfcTriangulatedIrregularNetwork]] est un ensemble de faces triangulées pour représenter les surfaces horizontales une coordonnée Z unique pour toutes les coordonnées X et Y dans le domaine avec des drapeaux supplémentaires pour chaque face indiquant les lignes de rupture entre les faces ou la désignation comme un trou ou vide. Les triangles doivent être définis avec des sommets dans le sens inverse des aiguilles d'une montre en partant du haut suivant la règle de droite . Pour la visualisation, les applications ne doivent pas afficher les visages où les drapeaux sont définis comme négatifs, que ce soit un trou, un vide, ou une extension future possible. Le Drapeau vide doit être utilisé pour indiquer que les visages doivent être exclus sans tomber sur toute autre géométrie. Une telle désignation pourrait être utilisée pour des portions d'un site situé sous un bâtiment ou une autre structure. Le trou-drapeau doit être utilisé pour indiquer que les visages doivent être exclus mais peuvent tomber sur une autre géométrie. Une telle désignation pourrait être utilisée pour les parties d'un site proposé qui doivent rester inchangées en conformité avec un site existant qui peut également être défini Pour les scénarios où plusieurs surfaces utilisées comme entrées doivent être combinées, tous les triangles marqués du Vide doivent être conservés en tant que vides, alors que tous les triangles marqués comme Hole doivent être remplacés si une autre surface a une géométrie visible définie dans le même emplacement horizontal."

#:IFC.xml:11183
msgid "IfcTriangulatedIrregularNetwork_Flags"
msgstr "Drapeaux"

msgid "IfcTriangulatedIrregularNetwork_Flags_DEFINITION"
msgstr "Indique les attributs de chaque triangle sous une forme compacte suivant 2 trous invisible 1 trou invisible 0 pas de lignes de rupture 1 ligne de rupture au bord 1 2 ligne de rupture au bord 2 3 ligne de rupture aux bords 1 et 2 4 ligne de rupture au bord 3 5 ligne de rupture aux bords 1 et 3 6 lignes de rupture aux bords 2 et 3 7 lignes de rupture aux bords 1, 2, et 3. Propositions formelles"

