msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Russian\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /master/IfcTopologyResource.pot\n"
"X-Crowdin-File-ID: 100\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: ru_RU\n"
"PO-Revision-Date: 2022-02-22 13:49\n"

#:IFC.xml:49041
msgid "IfcAdvancedFace"
msgstr "IfcAdvancedFace"

msgid "IfcAdvancedFace_DEFINITION"
msgstr "An advanced face is a specialization of a face surface that has to meet requirements on using particular topological and geometric representation items for the definition of the faces, edges and vertices. An [[IfcAdvancedFace]] is restricted to have a face surface geometry of type [[IfcElementarySurface]] , [[IfcSweptSurface]] or [[IfcBSplineSurface]] , have one [[IfcFaceOuterBound]] as the bound of the face, with the exception of closed surfaces, have all faces to be bound by [[IfcEdgeLoop]] or [[IfcVertexLoop]] , have all edges to have an edge curve geometry, have the edge curve geometry restricted to [[IfcLine]] , [[IfcConic]] , [[IfcPolyline]] , or [[IfcBSplineCurve]] In case of closed faces with periodic surfaces, such as cylindrical or spherical surfaces, the following applies the edges of the closed surface, in case of a cylindrical surface the upper and lower cap, refer to the same instance of [[IfcVertexPoint]] twice, no [[IfcFaceOuterBound]] is provided, or the [[IfcFaceOuterBound]] is constructed using an [[IfcSeamCurve]] at the periodic end of the underlying closed surface, in case of a cylindrical surface at 0. 360. degree. cylindrical surface .. .. .. .. figures ifcadvancedface 01.png Figure 1 Use of [[IfcCylindricalSurface]] as underlying surface of an [[IfcAdvancedFace]] NOTE Entity adapted from advanced face defined in ISO 10303 511. HISTORY New entity in IFC4 Formal Propositions ApplicableSurface The geometry used in the definition of the face shall be restricted. The face geometry shall be an [[IfcElementarySurface]] , [[IfcSweptSurface]] , or [[IfcBSplineSurface]] . RequiresEdgeCurve The geometry of all bounding edges of the face shall be fully defined as [[IfcEdgeCurve]] s. ApplicableEdgeCurves The types of curve used to define the geometry of edges shall be restricted to [[IfcLine]] , [[IfcConic]] , [[IfcPolyline]] , or [[IfcBSplineCurve]] ."

#:IFC.xml:49044
msgid "IfcBooleanChoose__B"
msgstr "IfcBooleanChoose B"

#:IFC.xml:49052
msgid "IfcClosedShell"
msgstr "IfcClosedShell"

msgid "IfcClosedShell_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A closed shell is a shell of the dimensionality 2 which typically serves as a bound for a region in R3. A closed shell has no boundary, and has non zero finite extent. If the shell has a domain with coordinate space R3, it divides that space into two connected regions, one finite and the other infinite. In this case, the topological normal of the shell is defined as being directed from the finite to the infinite region. The shell is represented by a collection of faces. The domain of the shell, if present, contains all those faces, together with their bounds. Associated with each face in the shell is a logical value which indicates whether the face normal agrees with TRUE or is opposed to FALSE the shell normal. The logical value can be applied directly as a BOOLEAN attribute of an oriented face, or be defaulted to TRUE if the shell boundary attribute member is a face without the orientation attribute. The combinatorial restrictions on closed shells and geometrical restrictions on their domains are designed to ensure that any domain associated with a closed shell is a closed, orientable manifold. The domain of a closed shell, if present, is a connected, closed, oriented 2 manifold. It is always topologically equivalent to an H fold torus for some H 0. The number H is referred to as the surface genus of the shell. If a shell of genus H has a domain within coordinate space R 3 , then the finite region of space inside it is topologically equivalent to a solid ball with H tunnels drilled through it. The Euler equation applies with B 0, because in this case there are no holes. As in the case of open shells, the surface genus H may not be known a priori, but shall be an integer 0. Thus a necessary, but not sufficient, condition for a well formed closed shell is the following Image .. .. .. .. figures ifcopenshell math1.gif NOTE Entity adapted from closed shell defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. Every edge shall be referenced exactly twice by the loops of the face. 2. Each oriented edge shall be unique. 3. No edge shall be referenced by more than two faces. 4. Distinct faces of the shell do not intersect, but may share edges or vertices. 5. Distinct edges do not intersect but may share vertices. 6. Each face reference shall be unique. 7. The loops of the shell shall not be a mixture of poly loop and other loop types. Note this is given, since only poly loop is defined as face bound definition. 8. The closed shell shall be an oriented arcwise connected 2 manifold. 9. The Euler equation shall be satisfied. Note Please refer to ISO 10303 42 for the equation."

#:IFC.xml:49057
msgid "IfcConnectedFaceSet"
msgstr "Подключено к FaceSet"

msgid "IfcConnectedFaceSet_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A connected face set is a set of faces such that the domain of faces together with their bounding edges and vertices is connected. NOTE Entity adapted from connected face set defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. The union of the domains of the faces and their bounding loops shall be arcwise connected."

#:IFC.xml:49060
msgid "IfcConnectedFaceSet_CfsFaces"
msgstr "CfsFaces"

msgid "IfcConnectedFaceSet_CfsFaces_DEFINITION"
msgstr "The set of faces arcwise connected along common edges or vertices."

#:IFC.xml:49072
msgid "IfcEdge"
msgstr "Ледяной Край"

msgid "IfcEdge_DEFINITION"
msgstr "[[IfcEdge]] определяет две вершины при подключении топологически. Геометрическое представление связи между двумя вершинами по умолчанию происходит по прямой линии, если геометрия кривой не назначена с помощью подтипа [[IfcEdgeCurve]] . Таким образом, [[IfcEdge]] могут использоваться для обмена прямыми краями без соответствующей геометрии [[IfcLine]] или [[IfcPolyline]] подумал [[IfcEdgeCurve]]. dgeGeometry . краевое представление .. .. .. .. фигуры ifcede. ng Рисунок 1 Edge представление EXAMPLE 1 иллюстрирует пример, где границы [[IfcEdge]] обозначены EdgeStart и EdgeEnd также определяет направление края. Расположение в пределах координатного пространства определяется типом [[IfcVertexPoint]] для EdgeStart и EdgeEnd. Поскольку геометрия края не назначена, по умолчанию используется прямая линия, согласующаяся с смыслом направления. .extDef ПРИМЕЧАНИЕ Определение в соответствии с ISO CD 10303 42 1992 Граница является топологической конструкцией, соответствующей соединению двух вершин. Более абстрактно, это может послужить логической связью между двумя вершинами. Домен края, если имеется, конечный, самопересекающаяся открытая кривая в R M , то есть подсоединённая 1 размерная коллекция. Границы края являются двумя вершинами, которые не требуют различия. Край ориентирован на выбор направления прохождения с первой на вторую вершину. Если две вершины одинаковы, то край сам цикл. Домен края не включает ее границы и 0 <unk> . Связанная с краем может быть геометрической кривой, чтобы найти край в координатном пространстве, который представлен краевым подтипом кривой. Кривая должна быть конечной и несамопересекаться в пределах области края. Край — это график, поэтому его множественность M и граф Ge могут определяться алгоритмом обхода графа. С M E 1, уравнение Эйлер 1 уменьшает в случае изображения .. . .. цифры ifcedge math1.gif где V 1 или 2, и G e 1 или 0. В частности, край определения данных должен удовлетворять краю с двумя вершинами изображения. .. .. цифры ifcedge math2.gif вершины не нуждаются в отдельном изображении . .. .. .. цифры ifcedge math3.gif Уравнение должно держать Изображение .. .. .. рисунки ifcede math4.gif ПРИМЕЧАНИЕ сущности, адаптированной к краю, определенному в ISO 10303 42. HISTORY New entity in IFC2.0 .spec head Informal Propositions 1. Край имеет размерность 1. Степень края должна быть конечной и ненулевой."

#:IFC.xml:49075
msgid "IfcEdge_EdgeStart"
msgstr "EdgeStart"

msgid "IfcEdge_EdgeStart_DEFINITION"
msgstr "Start point vertex of the edge."

#:IFC.xml:49087
msgid "IfcEdge_EdgeEnd"
msgstr "EdgeEnd"

msgid "IfcEdge_EdgeEnd_DEFINITION"
msgstr "End point vertex of the edge. The same vertex can be used for both EdgeStart and EdgeEnd."

#:IFC.xml:49123
msgid "IfcEdgeCurve"
msgstr "Кривая Излучения"

msgid "IfcEdgeCurve_DEFINITION"
msgstr "[[IfcEdgeCurve]] определяет две вертикали, соединяемые топологически, включая геометрическое представление соединения. ПРИМЕЧАНИЕ Топология используется для обрезания геометрии края. Нет необходимости геометрически обрезать край в соответствии с топологическим примером .. .. .. цифры ifcedgecurve. ng Рисунок 1 EXAMPLE рисунок 1 иллюстрирует пример, когда геометрия изображена без границ кривой, здесь [[IfcCircle]]. Границы предоставлены EdgeStart и EdgeEnd, направление [[IfcEdgeCurve]] противостоит направлению [[IfcCircle]на SameSense FALSE. .extDef ПРИМЕЧАНИЕ Определение в соответствии с ISO CD 10303 42 1992 Кривая края представляет собой специальный подтип края, который имеет полную геометрию. Геометрия определяется привязкой края к кривой, которая может быть удалена. Поскольку топологические и геометрические направления могут выступать против этого, То же значение индикатора используется для определения того, согласны ли направления края и кривой или против нее. Булевое значение указывает, согласуется ли направление кривой с TRUE или находится в противоположном направлении FALSE в направлении края. Любая геометрия, связанная с вершинами края, должна соответствовать геометрии края. Несколько краев могут ссылаться на одну и ту же кривую. ПРИМЕЧАНИЕ Сущность, адаптированная на основе кривой границ, определенной в ISO 10303 42. HISTORY New entity in IFC2x .spec Head Informal Propositions 1. Домен краевой кривой формально определен как домен края геометрии, обрезанный вершинами. Этот домен не включает вершины. 2. Краевая кривая не имеет конечной степени. 3. Краевая кривая многократно 4. Краевая кривая соединена с помощью arcwise 5. Краевый старт не является краеугольным краем домена. 6. Конец края не является частью края домена. 7. Геометрия Vertex должна соответствовать геометрии края."

#:IFC.xml:12165
msgid "IfcEdgeCurve_EdgeGeometry"
msgstr "Геометрия кромки"

msgid "IfcEdgeCurve_EdgeGeometry_DEFINITION"
msgstr "The curve which defines the shape and spatial location of the edge. This curve may be unbounded and is implicitly trimmed by the vertices of the edge this defines the edge domain. Multiple edges can reference the same curve."

#:IFC.xml:49124
msgid "IfcEdgeCurve_SameSense"
msgstr "SameSense"

msgid "IfcEdgeCurve_SameSense_DEFINITION"
msgstr "Этот логический флаг указывает, что TRUE , или нет FALSE чувства края и кривая, определяющая геометрию края одинаковы. Смысл края - от края стартовой вершины до края конца вершины - смысл кривой в направлении увеличения параметра."

#:IFC.xml:49132
msgid "IfcEdgeLoop"
msgstr "IfcEdgeLoop"

msgid "IfcEdgeLoop_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 An edge loop is a loop with nonzero extent. It is a path in which the start and end vertices are the same. Its domain, if present, is a closed curve. An edge loop may overlap itself. NOTE Entity adapted from edge loop defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The genus of the [[IfcEdgeLoop]] shall be 1 or greater. 2. The Euler formula shall be satisfied number of vertices genus number of edges 1 3. No edge may be referenced more than once by the same [[IfcEdgeLoop]] with the same sense. For this purpose, an edge which is not an oriented edge is considered to be referenced with the sense TRUE."

#:IFC.xml:49140
msgid "IfcEdgeLoop_EdgeList"
msgstr "Список EdgeList"

msgid "IfcEdgeLoop_EdgeList_DEFINITION"
msgstr "A list of oriented edge entities which are concatenated together to form this path."

#:IFC.xml:49133
msgid "IfcEdgeLoop_Ne"
msgstr "Ne"

msgid "IfcEdgeLoop_Ne_DEFINITION"
msgstr "Количество элементов в списке краев."

#:IFC.xml:49152
msgid "IfcFace"
msgstr "Лицо"

msgid "IfcFace_DEFINITION"
msgstr "An [[IfcFace]] is topological entity used to define surface, bounded by loops, of a shell. NOTE In a correctly constructed boundary representation model the face normals will point out of the solid and every single edge is used twice once forwards and once backwards. The face normal is solely defined by the consequitive orientations of the [[IfcEdge]] s and [[IfcOrientedEdge]] s that bound the face. If all the edges of the face are connected in a counter clockwise manner following the edge orientations the face normal will point outward. The orientation of the [[IfcFaceSurface]] , or the value of the [[IfcFaceSurface]].SameSense attribute have no effect on the orientation of the face. .extDef NOTE Definition according to ISO CD 10303 42 1992 A face is a topological entity of dimensionality 2 corresponding to the intuitive notion of a piece of surface bounded by loops. Its domain, if present, is an oriented, connected, finite 2 manifold in R m . A face domain shall not have handles but it may have holes, each hole bounded by a loop. The domain of the underlying geometry of the face, if present, does not contain its bounds, and 0 Ξ . A face is represented by its bounding loops, which are defined as face bounds. A face has a topological normal n and the tangent to a loop is t. For a loop bounding a face with defined geometry, the cross product n x t points toward the interior of the face. That is, each loop runs counter clockwise around the face when viewed from above, if we consider the normal n to point up. With each loop is associated a BOOLEAN flag to signify whether the loop direction is oriented with respect to the face normal TRUE or should be reversed FALSE . A face shall have at least one bound, and the loops shall not intersect. One loop is optionally distinguished as the outer loop of the face. If so, it establishes a preferred way of embedding the face domain in the plane, in which the other bounding loops of the face are inside the outer bound. Because the face domain is arcwise connected, no inner loop will contain any other loop. This is true regardless of which embedding in the plane is chosen. The edges and vertices referenced by the loops of a face form a graph, of which the individual loops are the connected components. The Euler equation 1 for this graph becomes Image .. .. .. .. figures ifcface math1.gif where G l i is the graph genus of the i th loop. NOTE Entity adapted from face defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. No edge shall be referenced by the face more than twice. 2. Distinct face bounds of the face shall have no common vertices. 3. If geometry is present, distinct loops of the same face shall not intersect. 4. The face shall satisfy the Euler Equation number of vertices number of edges number of loops sum of genus for loops 0."

#:IFC.xml:27097
msgid "IfcFace_HasTextureMaps"
msgstr "HasTextureMaps"

msgid "IfcFace_HasTextureMaps_DEFINITION"
msgstr "HasTextureMaps"

#:IFC.xml:49155
msgid "IfcFace_Bounds"
msgstr "Границы"

msgid "IfcFace_Bounds_DEFINITION"
msgstr "Boundaries of the face."

#:IFC.xml:49167
msgid "IfcFaceBound"
msgstr "Лифтовая граница"

msgid "IfcFaceBound_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A face bound is a loop which is intended to be used for bounding a face. NOTE Entity adapted from face bound defined in ISO 10303 42. HISTORY New entity in IFC1.0"

#:IFC.xml:49175
msgid "IfcFaceBound_Bound"
msgstr "Привязка"

msgid "IfcFaceBound_Bound_DEFINITION"
msgstr "The loop which will be used as a face boundary."

#:IFC.xml:49168
msgid "IfcFaceBound_Orientation"
msgstr "Направление"

msgid "IfcFaceBound_Orientation_DEFINITION"
msgstr "Это показало, что ТРЕЙД или не ЛЕГЕТ цикл имеет то же значение, когда используется для привязки лица к первому определению. Если смысл FALSE, то ощущения всех его концов ориентируются на края неявно перевернуты при использовании в лицо."

#:IFC.xml:49187
msgid "IfcFaceOuterBound"
msgstr "Физическая граница"

msgid "IfcFaceOuterBound_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A face outer bound is a special subtype of face bound which carries the additional semantics of defining an outer boundary on the face. No more than one boundary of a face shall be of this type. NOTE Entity adapted from face outer bound defined in ISO 10303 42. HISTORY New entity in IFC1.0"

#:IFC.xml:49190
msgid "IfcFaceSurface"
msgstr "Ледяная поверхность"

msgid "IfcFaceSurface_DEFINITION"
msgstr "The [[IfcFaceSurface]] defines the underlying geometry of the associated surface to the face. NOTE The topology is used to trim the geometry of the surface. There is no need to geometrically trim the surface to match the topology. .extDef NOTE Definition according to ISO CD 10303 42 1992 A face surface is a subtype of face in which the geometry is defined by an associated surface. The portion of the surface used by the face shall be embeddable in the plane as an open disk, possibly with holes. However, the union of the face with the edges and vertices of its bounding loops need not be embeddable in the plane. It may, for example, cover an entire sphere or torus. As both a face and a geometric surface have defined normal directions, a BOOLEAN flag the orientation attribute is used to indicate whether the surface normal agrees with TRUE or is opposed to FALSE the face normal direction. The geometry associated with any component of the loops of the face shall be consistent with the surface geometry, in the sense that the domains of all the vertex points and edge curves are contained in the face geometry surface. A surface may be referenced by more than one face surface. NOTE Entity adapted from face surface defined in ISO 10303 42. HISTORY New entity in IFC2x .spec head Informal Propositions 1. The domain of the face surface is formally defined to be the domain of its face geometry as trimmed by the loops, this domain does not include the bounding loops. 2. A face surface has non zero finite extent. 3. A face surface is a manifold. 4. A face surface is arcwise connected. 5. A face surface has surface genus 0. 6. The loops are not part of the face domain. 7. Loop geometry shall be consistent with face geometry. This implies that any edge curves or vertex points used in defining the loops bounding the face surface shall lie on the face geometry. 8. The loops of the face shall not intersect."

#:IFC.xml:13193
msgid "IfcFaceSurface_FaceSurface"
msgstr "Лицевой поверхности"

msgid "IfcFaceSurface_FaceSurface_DEFINITION"
msgstr "The surface which defines the internal shape of the face. This surface may be unbounded. The domain of the face is defined by this surface and the bounding loops in the inherited attribute SELF FaceBounds."

#:IFC.xml:49191
msgid "IfcFaceSurface_SameSense"
msgstr "SameSense"

msgid "IfcFaceSurface_SameSense_DEFINITION"
msgstr "Этот флаг указывает, согласен ли смысл поверхности с TRUE , или выступает против ПОЖАЛУЙСТВ , чувства топологической нормальной к лицу."

#:IFC.xml:49199
msgid "IfcLoop"
msgstr "IfcLoop"

msgid "IfcLoop_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A loop is a topological entity constructed from a single vertex, or by stringing together connected oriented edges, or linear segments beginning and ending at the same vertex. It is typically used to bound a face lying on a surface. A loop has dimensionality of 0 or 1. The domain of a 0 dimensional loop is a single point. The domain of a 1 dimensional loop is a connected, oriented curve, but need not to be manifold. As the loop is a circle, the location of its beginning ending point is arbitrary. The domain of the loop includes its bounds, an 0 Ξ . A loop is represented by a single vertex, or by an ordered collection of oriented edges, or by an ordered collection of points. A loop is a graph, so M and the graph genus G l may be determined by the graph traversal algorithm. Since M 1, the Euler equation 1 reduces in this case to Image .. .. .. .. figures ifcloop math1.gif where V and E l are the number of unique vertices and oriented edges in the loop and G l is the genus of the loop. NOTE Entity adapted from loop defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. A loop has a finite extent. 2. A loop describes a closed topological curve with coincident start and end vertices."

#:IFC.xml:49202
msgid "IfcLoopHeadToTail__ALoop"
msgstr "IfcLoopHeadToTail ALoop"

#:IFC.xml:49210
msgid "IfcOpenShell"
msgstr "IfcOpenShell"

msgid "IfcOpenShell_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 An open shell is a shell of the dimensionality 2. Its domain, if present, is a finite, connected, oriented, 2 manifold with boundary, but is not a closed surface. It can be thought of as a closed shell with one or more holes punched in it. The domain of an open shell satisfies 0 Ξ 1. An open shell is functionally more general than a face because its domain can have handles. The shell is defined by a collection of faces, which may be oriented faces. The sense of each face, after taking account of the orientation, shall agree with the shell normal as defined below. The orientation can be supplied directly as a BOOLEAN attribute of an oriented face, or be defaulted to TRUE if the shell member is a face without the orientation attribute. The following combinatorial restrictions on open shells and geometrical restrictions on their domains are designed, together with the informal propositions, to ensure that any domain associated with an open shell is an orientable manifold. Each face reference shall be unique. An open shell shall have at least one face. A given face may exist in more than one open shell. The boundary of an open shell consists of the edges that are referenced only once by the face bounds loops of its faces, together with all of their vertices. The domain of an open shell, if present, contains all edges and vertices of its faces. NOTE Note that this is slightly different from the definition of a face domain, which includes none of its bounds. For example, a face domain may exclude an isolated point or line segment. An open shell domain may not. See the algorithm for computing below. NOTE Entity adapted from open shell defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. Every edge shall be referenced exactly twice by the face bounds of the face. 2. Each oriented edge shall be unique. 3. No edge shall be referenced by more than two faces. 4. Distinct faces of the shell do not intersect, but may share edges or vertices. 5. Distinct edges do not intersect but may share vertices. 6. Each face reference shall be unique. 7. The loops of the shell shall not be a mixture of poly loop and other loop types. Note this is given, since only poly loop is defined as face bound definition. 8. The closed shell shall be an oriented arcwise connected 2 manifold. 9. The Euler equation shall be satisfied."

#:IFC.xml:49214
msgid "IfcOrientedEdge"
msgstr "IfcOrientedEdge"

msgid "IfcOrientedEdge_DEFINITION"
msgstr "[[IfcOrientedEdge]] представляет собой [[IfcEdge]] с примененным флагом ориентации. Он позволяет повторять то же самое [[IfcEdge]] при проходе ровно два раза, один раз вперед и один раз назад. ПРИМЕЧАНИЕ о нормальном значении [[IfcFace]] определяется исключительно по краям. Если все края лица подсоединены счетчиком по часовой стрелке, следуя направлениям края, то нормальное лицо указывает наружу. Нормальный к лежащему в его основе [[IfcFaceSurface]], представляющий геометрию лица не имеет отношения к этому. Цель [[IfcFaceSurface]]. ameSense атрибут дает дополнительную информацию для целей проверки. SameSense TRUE означает нормальную поверхность и нормальное лицо одинаково, SameSense FALSE означает, что они находятся в противоположных направлениях. Переиспользованный край с геометрическим представлением как [[IfcEdgeCurve]] определяет край трехмерного координатного пространства. В некоторых случаях, особенно при использовании простейших или простейших поверхностей, существует риск неточного отображения 3D x, y, z [[IfcEdgeCurve]] на прилегающие поверхности для определения границ этих поверхностей. Необязательный CurveOnSurface определяет 2D u, v край в пределах параметрического пространства поверхности. Может использоваться для определения правильности отображения 3D [[IfcEdgeCurve]] на эту поверхность. пример .. .. .. рисунки ifcadvancedbrep 02. ng Рисунок 1 Кривая поверхностного представления EXAMPLE 1 иллюстрирует пример предоставления CurveOnSurface в дополнение к геометрии кривой [[IfcEdgeCurve]]. .extDef NOTE Definition according to ISO CD 10303 42 1992 An oriented edge is the edge built from another edge and contains a direction flag to indicate whether or not the direction of the constructed edge agrees with the direction of the original. Кроме ориентации, ориентация на край эквивалентна исходному краю. Обычной практикой является твердое моделирование систем состоит в том, чтобы иметь сущность, представляющую собой использование края или обход края. Эта используемая сущность явно представляет требование в нескольких твердых частиц, что каждый край должен проходить ровно два раза в каждом направлении. Функциональность использования обеспечивается краеугольным краем с ориентацией на подтип. ПРИМЕЧАНИЕ Сущность, адаптированная к контуру, определенной в ISO 10303 42. HISTORY Новая сущность в IFC2.0. .change ifc2x4 IFC4 Add2 CHANGE Добавлен атрибут CurveOnSurface."

#:IFC.xml:49099
msgid "IfcOrientedEdge_EdgeElement"
msgstr "Элемент кромки"

msgid "IfcOrientedEdge_EdgeElement_DEFINITION"
msgstr "Edge entity used to construct this oriented edge."

#:IFC.xml:49215
msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeEnd"
msgstr "SELF кромка Ifcdge"

msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeEnd_DEFINITION"
msgstr "SELF [[IfcEdge]].EdgeEnd"

#:IFC.xml:49219
msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeStart"
msgstr "SELF IfcEdgeStart"

msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeStart_DEFINITION"
msgstr "SELF [[IfcEdge]].EdgeStart"

#:IFC.xml:49223
msgid "IfcOrientedEdge_Orientation"
msgstr "Направление"

msgid "IfcOrientedEdge_Orientation_DEFINITION"
msgstr "BOOLEAN, If TRUE the topological orientation as used coincide with the orientation from start vertex to end vertex of the edge element."

#:IFC.xml:49242
msgid "IfcPath"
msgstr "IfcPath"

msgid "IfcPath_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A path is a topological entity consisting of an ordered collection of oriented edges, such that the edge start vertex of each edge coincides with the edge end of its predecessor. The path is ordered from the edge start of the first oriented edge to the edge end of the last edge. The BOOLEAN value sense in the oriented edge indicates whether the edge direction agrees with the direction of the path TRUE or is the opposite direction FALSE . An individual edge can only be referenced once by an individual path. An edge can be referenced by multiple paths. An edge can exist independently of a path. NOTE Entity adapted from path defined in ISO 10303 42. HISTORY New entity in IFC2.0 .spec head Informal Propositions 1. A path has dimensionality 1. 2. A path is arcwise connected. 3. The edges of the path do not intersect except at common vertices. 4. A path has a finite, non zero extent."

#:IFC.xml:49230
msgid "IfcPath_EdgeList"
msgstr "Список EdgeList"

msgid "IfcPath_EdgeList_DEFINITION"
msgstr "Список ориентационных краев, объединенных друг с другом, для формирования этого пути."

#:IFC.xml:49245
msgid "IfcPathHeadToTail__APath"
msgstr "IfcPathHeadToTail APath"

#:IFC.xml:49253
msgid "IfcPolyLoop"
msgstr "IfcPolyLoop"

msgid "IfcPolyLoop_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A poly loop is a loop with straight edges bounding a planar region in space. A poly loop is a loop of genus 1 where the loop is represented by an ordered coplanar collection of points forming the vertices of the loop. The loop is composed of straight line segments joining a point in the collection to the succeeding point in the collection. The closing segment is from the last to the first point in the collection. The direction of the loop is in the direction of the line segments. A poly loop shall conform to the following topological constraints the loop has the genus of one. the following equation shall be satisfied Image .. .. .. .. figures ifcpolyloop math1.gif The [[IfcPolyLoop]] is always closed and the last segment is from the last [[IfcCartesianPoint]] in the list of Polygon s to the first [[IfcCartesianPoint]] . Therefore the first point shall not be repeated at the end of the list, neither by referencing the same instance, nor by using an additional instance of [[IfcCartesianPoint]] having the coordinates as the first point. NOTE This entity exists primarily to facilitate the efficient communication of faceted B rep models. NOTE Entity adapted from poly loop defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. All the points in the polygon defining the poly loop shall be coplanar. 2. The first and the last Polygon shall be different by value."

#:IFC.xml:11782
msgid "IfcPolyLoop_Polygon"
msgstr "Полигон"

msgid "IfcPolyLoop_Polygon_DEFINITION"
msgstr "Список точек, определяющих цикл. В списке нет повторяющихся точек."

#:IFC.xml:49256
msgid "IfcShell"
msgstr "IfcShell"

#:IFC.xml:49257
msgid "IfcSubedge"
msgstr "IfcSubedge"

msgid "IfcSubedge_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A subedge is an edge whose domain is a connected portion of the domain of an existing edge. The topological constraints on a subedge are the same as those on an edge. NOTE Entity adapted from subedge defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The domain of the subedge is formally defined to be the domain of the parent edge, as trimmed by the subedge start vertex and subedge end vertex. 2. The start vertex and end vertex shall be within the union of the domains of the vertices of the parent edge and the domain of the parent edge ."

#:IFC.xml:49111
msgid "IfcSubedge_ParentEdge"
msgstr "Родительский край"

msgid "IfcSubedge_ParentEdge_DEFINITION"
msgstr "The Edge, or Subedge, which contains the Subedge."

#:IFC.xml:49260
msgid "IfcTopologicalRepresentationItem"
msgstr "IfcTopologicalRepresentationItem"

msgid "IfcTopologicalRepresentationItem_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 The topological representation item is the supertype for all the topological representation items in the geometry resource. NOTE Entity adapted from topological representation item defined in ISO 10303 42. HISTORY New entity in IFC1.5"

#:IFC.xml:49263
msgid "IfcVertex"
msgstr "IfcVertex"

msgid "IfcVertex_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A vertex is the topological construct corresponding to a point. It has dimensionality 0 and extent 0. The domain of a vertex, if present, is a point in m dimensional real space R M this is represented by the vertex point subtype. NOTE Entity adapted from vertex defined in ISO 10303 42. HISTORY New entity in IFC2.0 .spec head Informal Propositions 1. The vertex has dimensionality 0. This is a fundamental property of the vertex. 2. The extent of a vertex is defined to be zero."

#:IFC.xml:49278
msgid "IfcVertexLoop"
msgstr "IfcVertexLoop"

msgid "IfcVertexLoop_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A vertex loop is a loop of zero genus consisting of a single vertex. A vertex can exist independently of a vertex loop. The topological data shall satisfy the following constraint Image .. .. .. .. figures ifcvertexloop math1.gif NOTE Entity adapted from vertex loop defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. A vertex loop has zero extent and dimensionality. 2. The vertex loop has genus 0."

#:IFC.xml:49266
msgid "IfcVertexLoop_LoopVertex"
msgstr "LoopVertex"

msgid "IfcVertexLoop_LoopVertex_DEFINITION"
msgstr "Вершина, которая определяет весь цикл."

#:IFC.xml:49281
msgid "IfcVertexPoint"
msgstr "IfcVertexPoint"

msgid "IfcVertexPoint_DEFINITION"
msgstr ".extDef NOTE Определение в соответствии с ISO CD 10303 42 1992 A vertex является вершиной, которая имеет свою геометрию, определенную в качестве точки. ПРИМЕЧАНИЕ Сущность, адаптированная из вершины точки, определенной в ISO 10303 42. HISTORY New entity in IFC2x .spec Head Informal Propositions 1. Официально домен вершины определяется как домен вершины."

#:IFC.xml:12753
msgid "IfcVertexPoint_VertexGeometry"
msgstr "Геометрия текста"

msgid "IfcVertexPoint_VertexGeometry_DEFINITION"
msgstr "Геометрическая точка, которая определяет положение в геометрическом пространстве вершины."

