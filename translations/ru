msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Russian\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /master/IfcTopologyResource.pot\n"
"X-Crowdin-File-ID: 100\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: ru_RU\n"
"PO-Revision-Date: 2022-01-18 15:28\n"

#:IFC.xml:43628
msgid "IfcAdvancedFace"
msgstr "IfcAdvancedFace"

msgid "IfcAdvancedFace_DEFINITION"
msgstr "An advanced face is a specialization of a face surface that has to meet requirements on using particular topological and geometric representation items for the definition of the faces, edges and vertices. An [[IfcAdvancedFace]] is restricted to have a face surface geometry of type [[IfcElementarySurface]] , [[IfcSweptSurface]] or [[IfcBSplineSurface]] , have one [[IfcFaceOuterBound]] as the bound of the face, with the exception of closed surfaces, have all faces to be bound by [[IfcEdgeLoop]] or [[IfcVertexLoop]] , have all edges to have an edge curve geometry, have the edge curve geometry restricted to [[IfcLine]] , [[IfcConic]] , [[IfcPolyline]] , or [[IfcBSplineCurve]] In case of closed faces with periodic surfaces, such as cylindrical or spherical surfaces, the following applies the edges of the closed surface, in case of a cylindrical surface the upper and lower cap, refer to the same instance of [[IfcVertexPoint]] twice, no [[IfcFaceOuterBound]] is provided, or the [[IfcFaceOuterBound]] is constructed using an [[IfcSeamCurve]] at the periodic end of the underlying closed surface, in case of a cylindrical surface at 0. 360. degree. cylindrical surface .. .. .. .. figures ifcadvancedface 01.png Figure 1 Use of [[IfcCylindricalSurface]] as underlying surface of an [[IfcAdvancedFace]] NOTE Entity adapted from advanced face defined in ISO 10303 511. HISTORY New entity in IFC4 Formal Propositions ApplicableSurface The geometry used in the definition of the face shall be restricted. The face geometry shall be an [[IfcElementarySurface]] , [[IfcSweptSurface]] , or [[IfcBSplineSurface]] . RequiresEdgeCurve The geometry of all bounding edges of the face shall be fully defined as [[IfcEdgeCurve]] s. ApplicableEdgeCurves The types of curve used to define the geometry of edges shall be restricted to [[IfcLine]] , [[IfcConic]] , [[IfcPolyline]] , or [[IfcBSplineCurve]] ."

#:IFC.xml:43631
msgid "IfcBooleanChoose__B"
msgstr "IfcBooleanChoose B"

#:IFC.xml:43639
msgid "IfcClosedShell"
msgstr "IfcClosedShell"

msgid "IfcClosedShell_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A closed shell is a shell of the dimensionality 2 which typically serves as a bound for a region in R3. A closed shell has no boundary, and has non zero finite extent. If the shell has a domain with coordinate space R3, it divides that space into two connected regions, one finite and the other infinite. In this case, the topological normal of the shell is defined as being directed from the finite to the infinite region. The shell is represented by a collection of faces. The domain of the shell, if present, contains all those faces, together with their bounds. Associated with each face in the shell is a logical value which indicates whether the face normal agrees with TRUE or is opposed to FALSE the shell normal. The logical value can be applied directly as a BOOLEAN attribute of an oriented face, or be defaulted to TRUE if the shell boundary attribute member is a face without the orientation attribute. The combinatorial restrictions on closed shells and geometrical restrictions on their domains are designed to ensure that any domain associated with a closed shell is a closed, orientable manifold. The domain of a closed shell, if present, is a connected, closed, oriented 2 manifold. It is always topologically equivalent to an H fold torus for some H 0. The number H is referred to as the surface genus of the shell. If a shell of genus H has a domain within coordinate space R 3 , then the finite region of space inside it is topologically equivalent to a solid ball with H tunnels drilled through it. The Euler equation applies with B 0, because in this case there are no holes. As in the case of open shells, the surface genus H may not be known a priori, but shall be an integer 0. Thus a necessary, but not sufficient, condition for a well formed closed shell is the following Image .. .. .. .. figures ifcopenshell math1.gif NOTE Entity adapted from closed shell defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. Every edge shall be referenced exactly twice by the loops of the face. 2. Each oriented edge shall be unique. 3. No edge shall be referenced by more than two faces. 4. Distinct faces of the shell do not intersect, but may share edges or vertices. 5. Distinct edges do not intersect but may share vertices. 6. Each face reference shall be unique. 7. The loops of the shell shall not be a mixture of poly loop and other loop types. Note this is given, since only poly loop is defined as face bound definition. 8. The closed shell shall be an oriented arcwise connected 2 manifold. 9. The Euler equation shall be satisfied. Note Please refer to ISO 10303 42 for the equation."

#:IFC.xml:43644
msgid "IfcConnectedFaceSet"
msgstr "Подключено к FaceSet"

msgid "IfcConnectedFaceSet_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A connected face set is a set of faces such that the domain of faces together with their bounding edges and vertices is connected. NOTE Entity adapted from connected face set defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. The union of the domains of the faces and their bounding loops shall be arcwise connected."

#:IFC.xml:43647
msgid "IfcConnectedFaceSet_CfsFaces"
msgstr "CfsFaces"

msgid "IfcConnectedFaceSet_CfsFaces_DEFINITION"
msgstr "The set of faces arcwise connected along common edges or vertices."

#:IFC.xml:43659
msgid "IfcEdge"
msgstr "Ледяной Край"

msgid "IfcEdge_DEFINITION"
msgstr "An [[IfcEdge]] defines two vertices being connected topologically. The geometric representation of the connection between the two vertices defaults to a straight line if no curve geometry is assigned using the subtype [[IfcEdgeCurve]] . The [[IfcEdge]] can therefore be used to exchange straight edges without an associated geometry provided by [[IfcLine]] or [[IfcPolyline]] thought [[IfcEdgeCurve]].EdgeGeometry . EXAMPLE Figure 1 illustrates an example where the bounds of the [[IfcEdge]] are given by the EdgeStart and EdgeEnd this also determines the direction of the edge. The location within a coordinate space is determined by the [[IfcVertexPoint]] type for EdgeStart and EdgeEnd. Since no edge geometry is assigned, it defaults to a straight line agreeing to the direction sense. Figure 1 Edge representation .extDef NOTE Definition according to ISO CD 10303 42 1992 An edge is the topological construct corresponding to the connection of two vertices. More abstractly, it may stand for a logical relationship between two vertices. The domain of an edge, if present, is a finite, non self intersecting open curve in R M , that is, a connected 1 dimensional manifold. The bounds of an edge are two vertices, which need not be distinct. The edge is oriented by choosing its traversal direction to run from the first to the second vertex. If the two vertices are the same, the edge is a self loop. The domain of the edge does not include its bounds, and 0 Ξ . Associated with an edge may be a geometric curve to locate the edge in a coordinate space this is represented by the edge curve subtype. The curve shall be finite and non self intersecting within the domain of the edge. An edge is a graph, so its multiplicity M and graph genus G e may be determined by the graph traversal algorithm. Since M E 1, the Euler equation 1 reduces in the case to Image .. .. .. .. figures ifcedge math1.gif where V 1 or 2, and G e 1 or 0. Specifically, the topological edge defining data shall satisfy an edge has two vertices Image .. .. .. .. figures ifcedge math2.gif the vertices need not be distinct Image .. .. .. .. figures ifcedge math3.gif Equation shall hold Image .. .. .. .. figures ifcedge math4.gif NOTE Entity adapted from edge defined in ISO 10303 42. HISTORY New entity in IFC2.0 .spec head Informal Propositions 1. The edge has dimensionality 1. 2. The extent of an edge shall be finite and nonzero."

#:IFC.xml:43662
msgid "IfcEdge_EdgeStart"
msgstr "EdgeStart"

msgid "IfcEdge_EdgeStart_DEFINITION"
msgstr "Start point vertex of the edge."

#:IFC.xml:43674
msgid "IfcEdge_EdgeEnd"
msgstr "EdgeEnd"

msgid "IfcEdge_EdgeEnd_DEFINITION"
msgstr "End point vertex of the edge. The same vertex can be used for both EdgeStart and EdgeEnd."

#:IFC.xml:43710
msgid "IfcEdgeCurve"
msgstr "Кривая Излучения"

msgid "IfcEdgeCurve_DEFINITION"
msgstr "An [[IfcEdgeCurve]] defines two vertices being connected topologically including the geometric representation of the connection. NOTE The topology is used to trim the geometry of the edge. There is no need to geometrically trim the edge to match the topology. EXAMPLE Figure 1 illustrates an example where the edge geometry is given by an unbounded curve, here [[IfcCircle]]. The bounds are provided by the EdgeStart and EdgeEnd, the topological direction of the [[IfcEdgeCurve]] opposes the direction of the [[IfcCircle]] by SameSense FALSE. Figure 1 Edge curve .extDef NOTE Definition according to ISO CD 10303 42 1992 An edge curve is a special subtype of edge which has its geometry fully defined. The geometry is defined by associating the edge with a curve which may be unbounded. As the topological and geometric directions may be opposed, an indicator same sense is used to identify whether the edge and curve directions agree or are opposed. The Boolean value indicates whether the curve direction agrees with TRUE or is in the opposite direction FALSE to the edge direction. Any geometry associated with the vertices of the edge shall be consistent with the edge geometry. Multiple edges can reference the same curve. NOTE Entity adapted from edge curve defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The domain of the edge curve is formally defined to be the domain of its edge geometry as trimmed by the vertices. This domain does not include the vertices. 2. An edge curve has non zero finite extent. 3. An edge curve is a manifold. 4. An edge curve is arcwise connected. 5. The edge start is not a part of the edge domain. 6. The edge end is not a part of the edge domain. 7. Vertex geometry shall be consistent with edge geometry."

#:IFC.xml:11692
msgid "IfcEdgeCurve_EdgeGeometry"
msgstr "Геометрия кромки"

msgid "IfcEdgeCurve_EdgeGeometry_DEFINITION"
msgstr "The curve which defines the shape and spatial location of the edge. This curve may be unbounded and is implicitly trimmed by the vertices of the edge this defines the edge domain. Multiple edges can reference the same curve."

#:IFC.xml:43711
msgid "IfcEdgeCurve_SameSense"
msgstr "SameSense"

msgid "IfcEdgeCurve_SameSense_DEFINITION"
msgstr "Этот логический флаг указывает, что TRUE , или нет FALSE чувства края и кривая, определяющая геометрию края одинаковы. Смысл края - от края стартовой вершины до края конца вершины - смысл кривой в направлении увеличения параметра."

#:IFC.xml:43719
msgid "IfcEdgeLoop"
msgstr "IfcEdgeLoop"

msgid "IfcEdgeLoop_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 An edge loop is a loop with nonzero extent. It is a path in which the start and end vertices are the same. Its domain, if present, is a closed curve. An edge loop may overlap itself. NOTE Entity adapted from edge loop defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The genus of the [[IfcEdgeLoop]] shall be 1 or greater. 2. The Euler formula shall be satisfied number of vertices genus number of edges 1 3. No edge may be referenced more than once by the same [[IfcEdgeLoop]] with the same sense. For this purpose, an edge which is not an oriented edge is considered to be referenced with the sense TRUE."

#:IFC.xml:43727
msgid "IfcEdgeLoop_EdgeList"
msgstr "Список EdgeList"

msgid "IfcEdgeLoop_EdgeList_DEFINITION"
msgstr "A list of oriented edge entities which are concatenated together to form this path."

#:IFC.xml:43720
msgid "IfcEdgeLoop_Ne"
msgstr "Ne"

msgid "IfcEdgeLoop_Ne_DEFINITION"
msgstr "Количество элементов в списке краев. Формальные предложения"

#:IFC.xml:43739
msgid "IfcFace"
msgstr "Лицо"

msgid "IfcFace_DEFINITION"
msgstr "An [[IfcFace]] is topological entity used to define surface, bounded by loops, of a shell. NOTE In a correctly constructed boundary representation model the face normals will point out of the solid and every single edge is used twice once forwards and once backwards. The face normal is solely defined by the consequitive orientations of the [[IfcEdge]] s and [[IfcOrientedEdge]] s that bound the face. If all the edges of the face are connected in a counter clockwise manner following the edge orientations the face normal will point outward. The orientation of the [[IfcFaceSurface]] , or the value of the [[IfcFaceSurface]].SameSense attribute have no effect on the orientation of the face. .extDef NOTE Definition according to ISO CD 10303 42 1992 A face is a topological entity of dimensionality 2 corresponding to the intuitive notion of a piece of surface bounded by loops. Its domain, if present, is an oriented, connected, finite 2 manifold in R m . A face domain shall not have handles but it may have holes, each hole bounded by a loop. The domain of the underlying geometry of the face, if present, does not contain its bounds, and 0 Ξ . A face is represented by its bounding loops, which are defined as face bounds. A face has a topological normal n and the tangent to a loop is t. For a loop bounding a face with defined geometry, the cross product n x t points toward the interior of the face. That is, each loop runs counter clockwise around the face when viewed from above, if we consider the normal n to point up. With each loop is associated a BOOLEAN flag to signify whether the loop direction is oriented with respect to the face normal TRUE or should be reversed FALSE . A face shall have at least one bound, and the loops shall not intersect. One loop is optionally distinguished as the outer loop of the face. If so, it establishes a preferred way of embedding the face domain in the plane, in which the other bounding loops of the face are inside the outer bound. Because the face domain is arcwise connected, no inner loop will contain any other loop. This is true regardless of which embedding in the plane is chosen. The edges and vertices referenced by the loops of a face form a graph, of which the individual loops are the connected components. The Euler equation 1 for this graph becomes Image .. .. .. .. figures ifcface math1.gif where G l i is the graph genus of the i th loop. NOTE Entity adapted from face defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. No edge shall be referenced by the face more than twice. 2. Distinct face bounds of the face shall have no common vertices. 3. If geometry is present, distinct loops of the same face shall not intersect. 4. The face shall satisfy the Euler Equation number of vertices number of edges number of loops sum of genus for loops 0."

#:IFC.xml:26113
msgid "IfcFace_HasTextureMaps"
msgstr "HasTextureMaps"

msgid "IfcFace_HasTextureMaps_DEFINITION"
msgstr "HasTextureMaps"

#:IFC.xml:43742
msgid "IfcFace_Bounds"
msgstr "Границы"

msgid "IfcFace_Bounds_DEFINITION"
msgstr "Boundaries of the face."

#:IFC.xml:43754
msgid "IfcFaceBound"
msgstr "Лифтовая граница"

msgid "IfcFaceBound_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A face bound is a loop which is intended to be used for bounding a face. NOTE Entity adapted from face bound defined in ISO 10303 42. HISTORY New entity in IFC1.0"

#:IFC.xml:43762
msgid "IfcFaceBound_Bound"
msgstr "Привязка"

msgid "IfcFaceBound_Bound_DEFINITION"
msgstr "The loop which will be used as a face boundary."

#:IFC.xml:43755
msgid "IfcFaceBound_Orientation"
msgstr "Направление"

msgid "IfcFaceBound_Orientation_DEFINITION"
msgstr "Это показало, что ТРЕЙД или не ЛЕГЕТ цикл имеет то же значение, когда используется для привязки лица к первому определению. Если смысл FALSE, то ощущения всех его концов ориентируются на края неявно перевернуты при использовании в лицо."

#:IFC.xml:43774
msgid "IfcFaceOuterBound"
msgstr "Физическая граница"

msgid "IfcFaceOuterBound_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A face outer bound is a special subtype of face bound which carries the additional semantics of defining an outer boundary on the face. No more than one boundary of a face shall be of this type. NOTE Entity adapted from face outer bound defined in ISO 10303 42. HISTORY New entity in IFC1.0"

#:IFC.xml:43777
msgid "IfcFaceSurface"
msgstr "Ледяная поверхность"

msgid "IfcFaceSurface_DEFINITION"
msgstr "The [[IfcFaceSurface]] defines the underlying geometry of the associated surface to the face. NOTE The topology is used to trim the geometry of the surface. There is no need to geometrically trim the surface to match the topology. .extDef NOTE Definition according to ISO CD 10303 42 1992 A face surface is a subtype of face in which the geometry is defined by an associated surface. The portion of the surface used by the face shall be embeddable in the plane as an open disk, possibly with holes. However, the union of the face with the edges and vertices of its bounding loops need not be embeddable in the plane. It may, for example, cover an entire sphere or torus. As both a face and a geometric surface have defined normal directions, a BOOLEAN flag the orientation attribute is used to indicate whether the surface normal agrees with TRUE or is opposed to FALSE the face normal direction. The geometry associated with any component of the loops of the face shall be consistent with the surface geometry, in the sense that the domains of all the vertex points and edge curves are contained in the face geometry surface. A surface may be referenced by more than one face surface. NOTE Entity adapted from face surface defined in ISO 10303 42. HISTORY New entity in IFC2x .spec head Informal Propositions 1. The domain of the face surface is formally defined to be the domain of its face geometry as trimmed by the loops, this domain does not include the bounding loops. 2. A face surface has non zero finite extent. 3. A face surface is a manifold. 4. A face surface is arcwise connected. 5. A face surface has surface genus 0. 6. The loops are not part of the face domain. 7. Loop geometry shall be consistent with face geometry. This implies that any edge curves or vertex points used in defining the loops bounding the face surface shall lie on the face geometry. 8. The loops of the face shall not intersect."

#:IFC.xml:12720
msgid "IfcFaceSurface_FaceSurface"
msgstr "Лицевой поверхности"

msgid "IfcFaceSurface_FaceSurface_DEFINITION"
msgstr "The surface which defines the internal shape of the face. This surface may be unbounded. The domain of the face is defined by this surface and the bounding loops in the inherited attribute SELF FaceBounds."

#:IFC.xml:43778
msgid "IfcFaceSurface_SameSense"
msgstr "SameSense"

msgid "IfcFaceSurface_SameSense_DEFINITION"
msgstr "Этот флаг указывает, согласен ли смысл поверхности с TRUE , или выступает против ПОЖАЛУЙСТВ , чувства топологической нормальной к лицу."

#:IFC.xml:43786
msgid "IfcLoop"
msgstr "IfcLoop"

msgid "IfcLoop_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A loop is a topological entity constructed from a single vertex, or by stringing together connected oriented edges, or linear segments beginning and ending at the same vertex. It is typically used to bound a face lying on a surface. A loop has dimensionality of 0 or 1. The domain of a 0 dimensional loop is a single point. The domain of a 1 dimensional loop is a connected, oriented curve, but need not to be manifold. As the loop is a circle, the location of its beginning ending point is arbitrary. The domain of the loop includes its bounds, an 0 Ξ . A loop is represented by a single vertex, or by an ordered collection of oriented edges, or by an ordered collection of points. A loop is a graph, so M and the graph genus G l may be determined by the graph traversal algorithm. Since M 1, the Euler equation 1 reduces in this case to Image .. .. .. .. figures ifcloop math1.gif where V and E l are the number of unique vertices and oriented edges in the loop and G l is the genus of the loop. NOTE Entity adapted from loop defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. A loop has a finite extent. 2. A loop describes a closed topological curve with coincident start and end vertices."

#:IFC.xml:43789
msgid "IfcLoopHeadToTail__ALoop"
msgstr "IfcLoopHeadToTail ALoop"

#:IFC.xml:43797
msgid "IfcOpenShell"
msgstr "IfcOpenShell"

msgid "IfcOpenShell_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 An open shell is a shell of the dimensionality 2. Its domain, if present, is a finite, connected, oriented, 2 manifold with boundary, but is not a closed surface. It can be thought of as a closed shell with one or more holes punched in it. The domain of an open shell satisfies 0 Ξ 1. An open shell is functionally more general than a face because its domain can have handles. The shell is defined by a collection of faces, which may be oriented faces. The sense of each face, after taking account of the orientation, shall agree with the shell normal as defined below. The orientation can be supplied directly as a BOOLEAN attribute of an oriented face, or be defaulted to TRUE if the shell member is a face without the orientation attribute. The following combinatorial restrictions on open shells and geometrical restrictions on their domains are designed, together with the informal propositions, to ensure that any domain associated with an open shell is an orientable manifold. Each face reference shall be unique. An open shell shall have at least one face. A given face may exist in more than one open shell. The boundary of an open shell consists of the edges that are referenced only once by the face bounds loops of its faces, together with all of their vertices. The domain of an open shell, if present, contains all edges and vertices of its faces. NOTE Note that this is slightly different from the definition of a face domain, which includes none of its bounds. For example, a face domain may exclude an isolated point or line segment. An open shell domain may not. See the algorithm for computing below. NOTE Entity adapted from open shell defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. Every edge shall be referenced exactly twice by the face bounds of the face. 2. Each oriented edge shall be unique. 3. No edge shall be referenced by more than two faces. 4. Distinct faces of the shell do not intersect, but may share edges or vertices. 5. Distinct edges do not intersect but may share vertices. 6. Each face reference shall be unique. 7. The loops of the shell shall not be a mixture of poly loop and other loop types. Note this is given, since only poly loop is defined as face bound definition. 8. The closed shell shall be an oriented arcwise connected 2 manifold. 9. The Euler equation shall be satisfied."

#:IFC.xml:43801
msgid "IfcOrientedEdge"
msgstr "IfcOrientedEdge"

msgid "IfcOrientedEdge_DEFINITION"
msgstr "The [[IfcOrientedEdge]] represents an [[IfcEdge]] with an Orientation flag applied. It allows to reuse the same [[IfcEdge]] when traversed exactly twice, once forwards and once backwards. NOTE The sense of the normal to the [[IfcFace]] is solely determined from the edges. If all the edges of the face are connected in a counter clockwise manner following the edge orientations the face normal will point outward. The normal to the underlying [[IfcFaceSurface]] representing the geometry of that face has no relevance to this. The purpose of the [[IfcFaceSurface]].SameSense attribute is to give additional information for verification purposes. SameSense TRUE means surface normal and face normal are the same, SameSense FALSE means they are in opposite directions. The reused edge with a geometric representation as [[IfcEdgeCurve]] defines the edge in 3D coordinate space. In some cases, particularly when using elementary or swept surfaces, there is the risk of imprecise mapping of the 3D x, y, z [[IfcEdgeCurve]] onto the adjacent surfaces to determine the boundaries of these surfaces. The optional CurveOnSurface defines the 2D u, v edge within the parametric space of the surface. It could be used to determine the correctness of the mapping of the 3D [[IfcEdgeCurve]] onto this surface. EXAMPLE Figure 1 illustrates an example where the CurveOnSurface is provided in addition to the curve geometry of the [[IfcEdgeCurve]]. Figure 1 Curve on surface representation of an [[IfcOrientedEdge]] .extDef NOTE Definition according to ISO CD 10303 42 1992 An oriented edge is an edge constructed from another edge and contains a BOOLEAN direction flag to indicate whether or not the orientation of the constructed edge agrees with the orientation of the original edge. Except for perhaps orientation, the oriented edge is equivalent to the original edge. A common practice is solid modelling systems is to have an entity that represents the use or traversal of an edge. This use entity explicitly represents the requirement in a manifold solid that each edge must be traversed exactly twice, once in each direction. The use functionality is provided by the edge subtype oriented edge. NOTE Entity adapted from oriented edge defined in ISO 10303 42. HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 Add2 CHANGE The attribute CurveOnSurface has been added."

#:IFC.xml:43686
msgid "IfcOrientedEdge_EdgeElement"
msgstr "Элемент кромки"

msgid "IfcOrientedEdge_EdgeElement_DEFINITION"
msgstr "Edge entity used to construct this oriented edge."

#:IFC.xml:43802
msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeEnd"
msgstr "SELF кромка Ifcdge"

msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeEnd_DEFINITION"
msgstr "SELF [[IfcEdge]].EdgeEnd"

#:IFC.xml:43806
msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeStart"
msgstr "SELF IfcEdgeStart"

msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeStart_DEFINITION"
msgstr "SELF [[IfcEdge]].EdgeStart"

#:IFC.xml:43810
msgid "IfcOrientedEdge_Orientation"
msgstr "Направление"

msgid "IfcOrientedEdge_Orientation_DEFINITION"
msgstr "BOOLEAN, If TRUE the topological orientation as used coincide with the orientation from start vertex to end vertex of the edge element."

#:IFC.xml:43829
msgid "IfcPath"
msgstr "IfcPath"

msgid "IfcPath_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A path is a topological entity consisting of an ordered collection of oriented edges, such that the edge start vertex of each edge coincides with the edge end of its predecessor. The path is ordered from the edge start of the first oriented edge to the edge end of the last edge. The BOOLEAN value sense in the oriented edge indicates whether the edge direction agrees with the direction of the path TRUE or is the opposite direction FALSE . An individual edge can only be referenced once by an individual path. An edge can be referenced by multiple paths. An edge can exist independently of a path. NOTE Entity adapted from path defined in ISO 10303 42. HISTORY New entity in IFC2.0 .spec head Informal Propositions 1. A path has dimensionality 1. 2. A path is arcwise connected. 3. The edges of the path do not intersect except at common vertices. 4. A path has a finite, non zero extent."

#:IFC.xml:43817
msgid "IfcPath_EdgeList"
msgstr "Список EdgeList"

msgid "IfcPath_EdgeList_DEFINITION"
msgstr "Список ориентационных краев, объединенных друг с другом для формирования этого пути. Формальные предложения"

#:IFC.xml:43832
msgid "IfcPathHeadToTail__APath"
msgstr "IfcPathHeadToTail APath"

#:IFC.xml:43840
msgid "IfcPolyLoop"
msgstr "IfcPolyLoop"

msgid "IfcPolyLoop_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A poly loop is a loop with straight edges bounding a planar region in space. A poly loop is a loop of genus 1 where the loop is represented by an ordered coplanar collection of points forming the vertices of the loop. The loop is composed of straight line segments joining a point in the collection to the succeeding point in the collection. The closing segment is from the last to the first point in the collection. The direction of the loop is in the direction of the line segments. A poly loop shall conform to the following topological constraints the loop has the genus of one. the following equation shall be satisfied Image .. .. .. .. figures ifcpolyloop math1.gif The [[IfcPolyLoop]] is always closed and the last segment is from the last [[IfcCartesianPoint]] in the list of Polygon s to the first [[IfcCartesianPoint]] . Therefore the first point shall not be repeated at the end of the list, neither by referencing the same instance, nor by using an additional instance of [[IfcCartesianPoint]] having the coordinates as the first point. NOTE This entity exists primarily to facilitate the efficient communication of faceted B rep models. NOTE Entity adapted from poly loop defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. All the points in the polygon defining the poly loop shall be coplanar. 2. The first and the last Polygon shall be different by value."

#:IFC.xml:11309
msgid "IfcPolyLoop_Polygon"
msgstr "Полигон"

msgid "IfcPolyLoop_Polygon_DEFINITION"
msgstr "Список точек, определяющих цикл. В списке нет повторяющихся точек. Формальные предложения"

#:IFC.xml:43843
msgid "IfcShell"
msgstr "IfcShell"

#:IFC.xml:43844
msgid "IfcSubedge"
msgstr "IfcSubedge"

msgid "IfcSubedge_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A subedge is an edge whose domain is a connected portion of the domain of an existing edge. The topological constraints on a subedge are the same as those on an edge. NOTE Entity adapted from subedge defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The domain of the subedge is formally defined to be the domain of the parent edge, as trimmed by the subedge start vertex and subedge end vertex. 2. The start vertex and end vertex shall be within the union of the domains of the vertices of the parent edge and the domain of the parent edge ."

#:IFC.xml:43698
msgid "IfcSubedge_ParentEdge"
msgstr "Родительский край"

msgid "IfcSubedge_ParentEdge_DEFINITION"
msgstr "The Edge, or Subedge, which contains the Subedge."

#:IFC.xml:43847
msgid "IfcTopologicalRepresentationItem"
msgstr "IfcTopologicalRepresentationItem"

msgid "IfcTopologicalRepresentationItem_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 The topological representation item is the supertype for all the topological representation items in the geometry resource. NOTE Entity adapted from topological representation item defined in ISO 10303 42. HISTORY New entity in IFC1.5"

#:IFC.xml:43850
msgid "IfcVertex"
msgstr "IfcVertex"

msgid "IfcVertex_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A vertex is the topological construct corresponding to a point. It has dimensionality 0 and extent 0. The domain of a vertex, if present, is a point in m dimensional real space R M this is represented by the vertex point subtype. NOTE Entity adapted from vertex defined in ISO 10303 42. HISTORY New entity in IFC2.0 .spec head Informal Propositions 1. The vertex has dimensionality 0. This is a fundamental property of the vertex. 2. The extent of a vertex is defined to be zero."

#:IFC.xml:43865
msgid "IfcVertexLoop"
msgstr "IfcVertexLoop"

msgid "IfcVertexLoop_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A vertex loop is a loop of zero genus consisting of a single vertex. A vertex can exist independently of a vertex loop. The topological data shall satisfy the following constraint Image .. .. .. .. figures ifcvertexloop math1.gif NOTE Entity adapted from vertex loop defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. A vertex loop has zero extent and dimensionality. 2. The vertex loop has genus 0."

#:IFC.xml:43853
msgid "IfcVertexLoop_LoopVertex"
msgstr "LoopVertex"

msgid "IfcVertexLoop_LoopVertex_DEFINITION"
msgstr "Вершина, которая определяет весь цикл."

#:IFC.xml:43868
msgid "IfcVertexPoint"
msgstr "IfcVertexPoint"

msgid "IfcVertexPoint_DEFINITION"
msgstr ".extDef NOTE Определение в соответствии с ISO CD 10303 42 1992 A vertex является вершиной, которая имеет свою геометрию, определенную в качестве точки. ПРИМЕЧАНИЕ Сущность, адаптированная из вершины точки, определенной в ISO 10303 42. HISTORY New entity in IFC2x .spec Head Informal Propositions 1. Официально домен вершины определяется как домен вершины."

#:IFC.xml:12280
msgid "IfcVertexPoint_VertexGeometry"
msgstr "Геометрия текста"

msgid "IfcVertexPoint_VertexGeometry_DEFINITION"
msgstr "Геометрическая точка, которая определяет положение в геометрическом пространстве вершины."

