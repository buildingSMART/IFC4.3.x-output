msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Russian\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /master/IfcGeometricModelResource.pot\n"
"X-Crowdin-File-ID: 44\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: ru_RU\n"
"PO-Revision-Date: 2022-02-10 13:18\n"

#:IFC.xml:10340
msgid "IfcAdvancedBrep"
msgstr "IfcAdvancedBrep"

msgid "IfcAdvancedBrep_DEFINITION"
msgstr "An advanced B rep is a boundary representation model in which all faces, edges and vertices are explicitly represented. It is a solid with explicit topology and elementary or free form geometry. The faces of the B rep are of type [[IfcAdvancedFace]] . An advanced B rep has to meet the same topological constraints as the manifold solid B rep. NOTE The advanced B rep has been introduced in order to support the increasing number of applications that can define and exchange B rep models based on NURBS or other b spline surfaces. Figure 1 illustrates use of [[IfcAdvancedBrep]] for boundary representation models with b spline surfaces. The diagram shows the topological and geometric representation items that are used for advanced B reps, based on [[IfcAdvancedFace]]. Figure 1 Advanced Brep, b spline surface Figure 2 illustrates use of [[IfcAdvancedBrep]] for boundary representation models with elementary surfaces. The diagram shows the topological and geometric representation items that are used for advanced B reps, based on [[IfcAdvancedFace]]. It shows the use of [[IfcIntersectionCurve]] to provide the geometric representation of the edge curve both as 3D curve and as u,v pcurve in the parametric space of the adjacent surfaces. Figure 2 Advanced Brep, elementary surface NOTE Entity adapted from advanced brep shape representation defined in ISO 10303 514. HISTORY New entity in IFC4 .spec head Informal Propositions 1. each face is a face surface 2. each face surface has its geometry defined by an elementary surface, swept surface or a b spline surface 3. the edges used to define the boundaries of the face shall all reference an edge curve 4. each curve used to define the geometry of the faces and face bounds shall be either a conic, or a line or a polyline or a b spline curve 5. the edges used to define the face boundaries shall all be trimmed by vertices of type vertex point 6. no loop used to define a face bound shall be of the oriented subtype Formal Propositions HasAdvancedFaces Each face of the advanced B rep shall be of type [[IfcAdvancedFace]] ."

#:IFC.xml:10343
msgid "IfcAdvancedBrepWithVoids"
msgstr "IfcAdvancedBrepWithVoids"

msgid "IfcAdvancedBrepWithVoids_DEFINITION"
msgstr "The [[IfcAdvancedBrepWithVoids]] is a specialization of an advanced B rep which contains one or more voids in its interior. The voids are represented as closed shells which are defined so that the shell normal point into the void. NOTE Entity adapted from advanced brep shape representation defined in ISO 10303 42. HISTORY New entity in IFC4 .spec head Informal Propositions 1. Each void shell shall be disjoint from the outer shell and from every other void shell 2. Each void shell shall be enclosed within the outer shell but not within any other void shell. In particular the outer shell is not in the set of void shells 3. Each shell in the [[IfcManifoldSolidBrep]] shall be referenced only once. 4. All the faces of all the shells in the [[IfcAdvancedBrep]] and the [[IfcAdvancedBrepWithVoids]].Voids shall be of type [[IfcAdvancedFace]] ."

#:IFC.xml:10346
msgid "IfcAdvancedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcAdvancedBrepWithVoids_Voids_DEFINITION"
msgstr "Voids"

#:IFC.xml:10358
msgid "IfcBlock"
msgstr "IfcBlock"

msgid "IfcBlock_DEFINITION"
msgstr "The [[IfcBlock]] is a Construction Solid Geometry CSG 3D primitive. It is defined by a position and a positve distance along the three orthogonal axes. The inherited Position attribute has the IfcAxisPlacement3D type and provides SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The block has one vertex at location and the edges are aligned with the placement axes in the positive sense. The XLength , YLength , and ZLength attributes define the size of the [[IfcBlock]] along the three axes. Figure 1 illustrates geometric parameters of a block where the block positioned within its own placement coordinate system. The values for XLength, YLength, and ZLength are applied to the positive direction of the X, Y, and Z axis. Figure 1 Block geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A block is a solid rectangular parallelepiped, defined with a location and placement coordinate system. The block is specified by the positive lengths x, y, and z along the axes of the placement coordinate system, and has one vertex at the origin of the placement coordinate system. NOTE Entity adapted from block defined in ISO 10303 42. HISTORY New entity in IFC2x3. .use head Texture definition On each side face, textures are aligned facing upright. On the top and bottom faces, textures are aligned facing front to back. Textures are stretched or repeated to the extent of each face according to RepeatS and RepeatT . Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Left X 0 YLength 0 Y Z Right X XLength 0 0 Y Z Front Y 0 0 0 X Z Back Y XLength YLength 0 X Z Bottom Z 0 YLength 0 X Y Top Z 0 0 ZLength X Y Figure 2 Block textures"

#:IFC.xml:10359
msgid "IfcBlock_XLength"
msgstr "Длина XLth"

msgid "IfcBlock_XLength_DEFINITION"
msgstr "Размер блока вдоль оси X. Он предоставляется размещением унаследованной оси через SELF [[IfcCsgPrimitive3D]].Position.P 1 ."

#:IFC.xml:10364
msgid "IfcBlock_YLength"
msgstr "Длина"

msgid "IfcBlock_YLength_DEFINITION"
msgstr "Размер блока вдоль оси Y. Он предоставляется размещением унаследованной оси через SELF [[IfcCsgPrimitive3D]].Position.P 2 ."

#:IFC.xml:10369
msgid "IfcBlock_ZLength"
msgstr "Длина"

msgid "IfcBlock_ZLength_DEFINITION"
msgstr "Размер блока по оси Z. Предоставляется размещение оси через SELF [[IfcCsgPrimitive3D]].Position.P 3 ."

#:IFC.xml:10376
msgid "IfcBooleanClippingResult"
msgstr "IfcBooleanClippingРезультат"

msgid "IfcBooleanClippingResult_DEFINITION"
msgstr "A clipping result is defined as a special subtype of the general [[IfcBooleanResult]] . It constrains the operands and the operator of the Boolean result. A clipping result is the Boolean difference between a swept solid and a half space solid, or between the result of the Boolean difference and a half space solid. Hence more than one difference operation can be applied to achieve the final Boolean result. HISTORY New entity in IFC2x. Formal Propositions FirstOperandType The first operand of the Boolean clipping operation shall be either an [[IfcSweptAreaSolid]] or in case of more than one clipping an [[IfcBooleanResult]]. SecondOperandType The second operand of the Boolean clipping operation shall be an [[IfcHalfSpaceSolid]]. OperatorType The Boolean operator for clipping is always Difference ."

#:IFC.xml:10379
msgid "IfcBooleanOperand"
msgstr "IfcBooleanOperand"

#:IFC.xml:10380
msgid "IfcBooleanOperator"
msgstr "IfcBooleanOperator"

msgid "IfcBooleanOperator_DEFINITION"
msgstr "Boolean operators that apply to the first and second Boolean operands. .extDef NOTE Definition according to ISO CD 10303 42 1992 This type defines the three Boolean operators used in the definition of CSG solids. NOTE Entity adapted from boolean operator defined in ISO 10303 42. HISTORY New entity in IFC1.5.1. Items UNION INTERSECTION The operation of constructing the regularised set theoretic intersection of the volumes defined by two solids. DIFFERENCE The regularised set theoretic difference between the volumes defined by two solids."

#:IFC.xml:10381
msgid "IfcBooleanOperator_DIFFERENCE"
msgstr "ДИФЕРЕНЦИЯ"

msgid "IfcBooleanOperator_DIFFERENCE_DEFINITION"
msgstr "The regularised set theoretic difference between the volumes defined by two solids."

#:IFC.xml:10382
msgid "IfcBooleanOperator_INTERSECTION"
msgstr "ИНТЕРСЕКЦИЯ"

msgid "IfcBooleanOperator_INTERSECTION_DEFINITION"
msgstr "The operation of constructing the regularised set theoretic intersection of the volumes defined by two solids."

#:IFC.xml:10383
msgid "IfcBooleanOperator_UNION"
msgstr "UNION"

msgid "IfcBooleanOperator_UNION_DEFINITION"
msgstr "UNION"

#:IFC.xml:10385
msgid "IfcBooleanResult"
msgstr "Результат IfcBooleanult"

msgid "IfcBooleanResult_DEFINITION"
msgstr "The [[IfcBooleanResult]] is the result of applying a Boolean operation to two operands being solids. EXAMPLE If the first operand is a block and the second operand is a solid cylinder of suitable dimensions and location, the boolean result produced with the difference operator would be a block with a circular hole. .extDef NOTE Definition according to ISO CD 10303 42 1992 A Boolean result is the result of a regularized operation on two solids to create a new solid. Valid operations are regularized union, regularized intersection, and regularized difference. For purpose of Boolean operations, a solid is considered to be a regularized set of points. The final Boolean result depends upon the operation and the two operands. In the case of the difference operator the order of the operands is also significant. The operator can be either union, intersection or difference. The effect of these operators is described below Union on two solids is the new solid that is the regularization of the set of all points that are in either the first operand or the second operand or in both. Intersection on two solids is the new solid that is the regularization of the set of all points that are in both the first operand and the second operand. The result of the difference operation on two solids is the regularization of the set of all points which are in the first operand, but not in the second operand. NOTE Corresponding STEP type boolean result defined in ISO 10303 42. HISTORY New entity in IFC1.5.1."

#:IFC.xml:10386
msgid "IfcBooleanResult_Dim"
msgstr "Dim"

msgid "IfcBooleanResult_Dim_DEFINITION"
msgstr "Космическая размерность этой сущности, идентична пространственной размерности первой операции. Если правило гарантирует, что оба операнда имеют одинаковую размерность пространства."

#:IFC.xml:10391
msgid "IfcBooleanResult_FirstOperand"
msgstr "Первый Оператор"

msgid "IfcBooleanResult_FirstOperand_DEFINITION"
msgstr "Первый оператор управляется булевской операцией."

#:IFC.xml:10396
msgid "IfcBooleanResult_Operator"
msgstr "Оператор"

msgid "IfcBooleanResult_Operator_DEFINITION"
msgstr "Оператор Boolean использовал в операции для создания результата."

#:IFC.xml:10401
msgid "IfcBooleanResult_SecondOperand"
msgstr "Второстепенная операция"

msgid "IfcBooleanResult_SecondOperand_DEFINITION"
msgstr "Второй операнд указан для операции."

#:IFC.xml:10410
msgid "IfcBoundingBox"
msgstr "IfcBoundingBox"

msgid "IfcBoundingBox_DEFINITION"
msgstr "The [[IfcBoundingBox]] defines an orthogonal box oriented parallel to the axes of the object coordinate system in which it is defined. It is defined by a Corner being a three dimensional Cartesian point and three length measures defining the X, Y and Z parameters of the box in the direction of the positive axes. NOTE Any subtype of [[IfcProduct]] having a product shape representation may have a bounding box representation. The Box representation identifier defined at [[IfcShapeRepresentation]] utilizes the [[IfcBoundingBox]] as the simpliest 3D shape representation. As shown in Figure 1, the [[IfcBoundingBox]] is defined with its own location which can be used to place the [[IfcBoundingBox]] relative to the geometric coordinate system. The [[IfcBoundingBox]] is defined by the lower left corner Corner and the upper right corner XDim, YDim, ZDim measured within the parent co ordinate system . Figure 1 Bounding box NOTE Corresponding STEP type box domain defined in ISO 10303 42. HISTORY New entity in IFC1.0."

#:IFC.xml:10433
msgid "IfcBoundingBox_Corner"
msgstr "Угол"

msgid "IfcBoundingBox_Corner_DEFINITION"
msgstr "Location of the bottom left corner having the minimum values ."

#:IFC.xml:10411
msgid "IfcBoundingBox_Dim"
msgstr "Dim"

msgid "IfcBoundingBox_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:10416
msgid "IfcBoundingBox_XDim"
msgstr "XDim"

msgid "IfcBoundingBox_XDim_DEFINITION"
msgstr "Атрибут длины, измеряемый вдоль края, параллельного оси X"

#:IFC.xml:10421
msgid "IfcBoundingBox_YDim"
msgstr "Идим"

msgid "IfcBoundingBox_YDim_DEFINITION"
msgstr "Ширина атрибута, измеряемая по краю, параллельной оси Y"

#:IFC.xml:10426
msgid "IfcBoundingBox_ZDim"
msgstr "ZDim"

msgid "IfcBoundingBox_ZDim_DEFINITION"
msgstr "Атрибут высоты, измеряемый вдоль края, параллельного оси Z ."

#:IFC.xml:10457
msgid "IfcBoxedHalfSpace"
msgstr "IfcBoxedHalfSpace"

msgid "IfcBoxedHalfSpace_DEFINITION"
msgstr "The [[IfcBoxedHalfSpace]] is used as its supertype [[IfcHalfSpaceSolid]] only within Boolean operations. It divides the domain into exactly two subsets, where the domain in question is that of the attribute Enclosure . The purpose of the attribute Enclosure is to provide a search box for the other operand in the Boolean operation. It shall be sufficiently large to fully enclose the resulting solid after the Boolean operation with the half space. It however does not alter the final result. The result of the Boolean operation would be the same, as if executed by the supertype [[IfcHalfSpaceSolid]] . See Figure 1 below. correct use of enclosure .. .. .. .. figures ifcboxedhalfspace 01.png Figure 1 Boxed half space operands The [[IfcBoundingBox]] that provides the enclosure is given for the convenience of the receiving application to enable the use of size box comparison for efficiency for example, to check first whether size boxes intersect, if not no calculations has to be done to check whether the solids of the entities intersect . The Enclosure therefore helps to prevent dealing with infinite size related issues. The enclosure box is positioned within the object coordinate system, established by the ObjectPlacement of the element represented for example, by [[IfcLocalPlacement]] . Figure 2 shows the Enclosure box being sufficiently large to fully enclose the Boolean result. Figure 2 Boxed half space geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 This entity is a subtype of the half space solid which is trimmed by a surrounding rectangular box. The box has its edges parallel to the coordinate axes of the geometric coordinate system. The purpose of the box is to facilitate CSG computations by producing a solid of finite size. NOTE Entity adapted from boxed half space defined in ISO 10303 42. HISTORY New entity in IFC1.5.1 .change ifc2x4 IFC4 CHANGE Usage correct, position coordinate system for Enclosure is the object coordinate system."

#:IFC.xml:10445
msgid "IfcBoxedHalfSpace_Enclosure"
msgstr "Добавление"

msgid "IfcBoxedHalfSpace_Enclosure_DEFINITION"
msgstr "Блок который граничит с результирующей логической операцией с полупространством только для вычислительных целей."

#:IFC.xml:10460
msgid "IfcCartesianPointList"
msgstr "Список картезианских точек"

msgid "IfcCartesianPointList_DEFINITION"
msgstr "The [[IfcCartesianPointList]] is the abstract supertype of list of points. NOTE The [[IfcCartesianPointList]] is introduced to provide a compact representation of potentially larger list of points, such as in point clouds, and in indexable representation of points. HISTORY New entity in IFC4."

#:IFC.xml:10461
msgid "IfcCartesianPointList_Dim"
msgstr "Dim"

msgid "IfcCartesianPointList_Dim_DEFINITION"
msgstr "The space dimensionality of this class, either 2 or 3, depending on the sub type."

#:IFC.xml:10480
msgid "IfcCartesianPointList2D"
msgstr "IfcCartesianPointList2D"

msgid "IfcCartesianPointList2D_DEFINITION"
msgstr "The [[IfcCartesianPointList2D]] defines an ordered collection of two dimentional Cartesian points. Each Cartesian point is provided as an two dimensional point by a fixed list of two coordinates. The attribute CoordList is a two dimensional list, where first dimension is an unbounded list representing each 2D Cartesian point second dimension is a fixed list of two list members, where 1 is the x coordinate, and 2 the y coordinate of the Cartesian point. NOTE The [[IfcCartesianPointList2D]] is introduced to provide a compact representation of larger list of points, such as in indexable representation of points used as vertices in poly curves. HISTORY New entity in IFC4 ADD1."

#:IFC.xml:10481
msgid "IfcCartesianPointList2D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList2D_CoordList_DEFINITION"
msgstr "Двумерный список декартовых точек, предоставляемых двумя координатами."

#:IFC.xml:10486
msgid "IfcCartesianPointList2D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList2D_TagList_DEFINITION"
msgstr "Список тегов, соответствующих каждой точке, которая может быть использована для идентификации базовой кривой согласно атрибуту тега [[IfcOffsetCurveByDistances]] или IfcAlignmentCurve ."

#:IFC.xml:10493
msgid "IfcCartesianPointList3D"
msgstr "IfcCartesianPointList3D"

msgid "IfcCartesianPointList3D_DEFINITION"
msgstr "The [[IfcCartesianPointList3D]] defines an ordered collection of three dimentional Cartesian points. Each Cartesian point is provided as an three dimensional point by a fixed list of three coordinates. The attribute CoordList is a two dimensional list, where first dimension is an unbounded list representing each 3D Cartesian point second dimension is a fixed list of three list members, where 1 is the x coordinate, 2 the y coordinate and 3 the z coordinate of the Cartesian point. NOTE The [[IfcCartesianPointList]] is introduced to provide a compact representation of larger list of points, such as in point clouds, and in indexable representation of points used as vertices in tessellated items or poly curves. HISTORY New entity in IFC4."

#:IFC.xml:10494
msgid "IfcCartesianPointList3D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList3D_CoordList_DEFINITION"
msgstr "Двумерный список декартовых точек, предоставляемых тремя координатами."

#:IFC.xml:10499
msgid "IfcCartesianPointList3D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList3D_TagList_DEFINITION"
msgstr "Список тегов, соответствующих каждой точке, которая может быть использована для идентификации базовой кривой согласно атрибуту тега [[IfcOffsetCurveByDistances]] или IfcAlignmentCurve ."

#:IFC.xml:10518
msgid "IfcCsgPrimitive3D"
msgstr "IfcCsgPrimitive3D"

msgid "IfcCsgPrimitive3D_DEFINITION"
msgstr "[[IfcCsgPrimitive3D]] is an abstract supertype of all three dimensional primitives used as either tree root item, or as Boolean results within a CSG solid model. All 3D CSG primitives are defined within a three dimensional placement coordinate system. HISTORY New entity in IFC2x3."

#:IFC.xml:10528
msgid "IfcCsgPrimitive3D_Position"
msgstr "Позиция"

msgid "IfcCsgPrimitive3D_Position_DEFINITION"
msgstr "The placement coordinate system to which the parameters of each individual CSG primitive apply."

#:IFC.xml:10519
msgid "IfcCsgPrimitive3D_Dim"
msgstr "Dim"

msgid "IfcCsgPrimitive3D_Dim_DEFINITION"
msgstr "The space dimensionality of this geometric representation item, it is always 3."

#:IFC.xml:10540
msgid "IfcCsgSelect"
msgstr "IfcCsgSelect"

#:IFC.xml:10541
msgid "IfcCsgSolid"
msgstr "IfcCsgSolid"

msgid "IfcCsgSolid_DEFINITION"
msgstr "An [[IfcCsgSolid]] is the representation of a 3D shape using constructive solid geometry model. It is represented by a single 3D CSG primitive, or as a result of a Boolean operation. The operants of a Boolean operation can be Boolean operations themselves forming a CSG tree. The following volumes can be parts of the CSG tree Boundary representation models, such as [[IfcFacetedBrep]] , [[IfcFacetedBrepWithVoids]] , Closed tesselated representation modles, such as [[IfcPolygonalFaceSet]] , [[IfcTriangulatedFaceSet]] , Swept area solids, such as [[IfcExtrudedAreaSolid]] , [[IfcRevolvedAreaSolid]] , and their subtypes for tapering, Advanced swept area solids, such as [[IfcSurfaceCurveSweptAreaSolid]] , [[IfcFixedReferenceSweptAreaSolid]] , [[IfcSweptDiskSolid]] Half space solids, such as [[IfcHalfSpaceSolid]] and its subtypes , and CSG primitives, the subtypes of [[IfcCsgPrimitive3D]] . .extDef NOTE Definition according to ISO CD 10303 42 1992 A solid represented as a CSG model is defined by a collection of so called primitive solids, combined using regularized Boolean operations. The allowed operations are intersection, union, and difference. As a special case a CSG solid can also consists of a single CSG primitive. A CSG solid requires two kinds of information for its complete definition geometric and structural. The geometric information is conveyed by solid models. These typically primitive volumes such as cylinders, wedges and extrusions, but can include general B Rep models. Solid models can also be half space solids. The structural information is in a tree strictly an acyclic directed graph of Boolean result and CSG solids, which represent a recipe for building the solid. The terminal nodes are the geometric primitives and other solids. Every CSG solid has precisely one Boolean result associated with it which is the root of the tree that defines the solid. There may be further Boolean results within the tree as operands . The significance of a CSG solid entity is that the solid defined by the associated tree is thus identified as a significant object itself, and in this way it is distinguished from other Boolean result entities representing intermediate results during the construction process. NOTE Entity adapted from csg solid is defined in ISO 10303 42. HISTORY New entity in IFC1.5.1"

#:IFC.xml:10542
msgid "IfcCsgSolid_TreeRootExpression"
msgstr "Выражение TreeRootExpression"

msgid "IfcCsgSolid_TreeRootExpression_DEFINITION"
msgstr "Логическое выражение примитивов и регуляризованных операторов, описывающих солидность. Корень из дерева логических выражений дается явно как сущность [[IfcBooleanResult]] или как примитивные подтипы [[IfcCsgPrimitive3D]] ."

#:IFC.xml:10549
msgid "IfcDirectrixDerivedReferenceSweptAreaSolid"
msgstr "IfcDirectrixDerivedReferenceSweptAreaтвердый"

#:IFC.xml:10552
msgid "IfcExtrudedAreaSolid"
msgstr "Тяжелое снаряжение"

msgid "IfcExtrudedAreaSolid_DEFINITION"
msgstr "The [[IfcExtrudedAreaSolid]] is defined by sweeping a cross section provided by a profile definition. The direction of the extrusion is given by the ExtrudedDirection attribute and the length of the extrusion is given by the Depth attribute. If the planar area has inner boundaries holes defined , then those holes shall be swept into holes of the solid. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the extruded solid. If not provided, it defaults to the current object coordinate system. The ExtrudedDirection is given within the position coordinate system as defined by [[IfcSweptAreaSolid]] . Position . The extruded direction can be any direction which is not perpendicular to the z axis of the position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The result is a solid. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. Figure 1 Extruded area solid geometry EXAMPLE Figure 2 illustrates geometric parameters and additional positioning parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the y axis. Figure 2 Repositioned extruded area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 An extruded area solid is a solid defined by sweeping a bounded planar surface. The direction of translation is defined by a direction vector, and the length of the translation is defined by a distance depth. The planar area may have holes which will sweep into holes in the solid. NOTE Entity adapted from extruded area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .use head Texture use definition For side faces, textures are aligned facing upright continuously along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the extrusion axis according to RepeatT . For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. EXAMPLE Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcExtrudedAreaSolid]] having a profile of [[IfcIShapeProfileDef]], the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth . Figure 3 Extruded area solid textures"

#:IFC.xml:10560
msgid "IfcExtrudedAreaSolid_ExtrudedDirection"
msgstr "Направление"

msgid "IfcExtrudedAreaSolid_ExtrudedDirection_DEFINITION"
msgstr "The direction in which the surface, provided by SweptArea is to be swept."

#:IFC.xml:10553
msgid "IfcExtrudedAreaSolid_Depth"
msgstr "Глубина"

msgid "IfcExtrudedAreaSolid_Depth_DEFINITION"
msgstr "Расстояние между поверхностью должно быть перенесено вдоль Направления надёжности ."

#:IFC.xml:10572
msgid "IfcExtrudedAreaSolidTapered"
msgstr "Солидарность"

msgid "IfcExtrudedAreaSolidTapered_DEFINITION"
msgstr "[[IfcExtrudedAreaSolidTapered]] is defined by sweeping a cross section along a linear spine. The cross section may change along the sweep from the shape of the start cross section into the shape of the end cross section. The resulting solid is bounded by three or more faces A start face, an end face each defined by start and end planes and sections , and one or more lateral faces. Each lateral face is a ruled surface defined by a pair of corresponding edges of the start and end section. NOTE Given that the start and end section is provided by a polygon, the corresponding vertices of the start and end cross section are connected, forming a quadrilateral polygon between each pair of corresponding vertices. The surface defined by the bounding quadrilateral polygon is a ruled surface, that could be approximated by triangulation. The linear spine is defined by Start point SELF [[IfcSweptAreaSolid]].Position.Location Direction SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection Distance SELF [[IfcExtrudedAreaSolid]].Depth The start cross section is defined by SELF [[IfcSweptAreaSolid]].SweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by SELF [[IfcSweptAreaSolid]].Position.P 1 and SELF [[IfcSweptAreaSolid]].Position.P 2 The linear spine starts at the plane of the start cross section. The spine is not necessarily perpendicular to the plane. The end cross section is defined by EndSweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by translating the start position coordinates provided by SELF [[IfcSweptAreaSolid]].Position along the spine direction by the spine distance. The plane of the end cross section is coplanar to the plane of the start cross section. The end cross section is topologically similar to the start cross section i.e. having the same number of vertices and edges . The end cross section can either be defined by the same paramteric profile using different parameter values, or by a 2D Cartesian transformation of the start profile within the end cross section plane. In case of two parameterized profiles the shape is constructed as follows The end profile, defined by a cross section based on the same profile paramterization as the start profile, is translated by the spine distance along the spine direction. It may be shifted within the XY plane of the end postion coordinate system and may be twisted using the rotation parameter. The shift and rotation parameter are provided by the end cross section being of type [[IfcParameterizedProfileDef]] , where Shift is EndSweptArea [[IfcParameterizedProfileDef]].Position.Location Rotation is EndSweptArea [[IfcParameterizedProfileDef]].Position.RefDirection Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. In case of Cartesian transformation of the start cross section the shape is constructed as follows The cross section curve, which starts as a curve in the XY plane of the position coordinate system, is first scaled about the origin by the scale parameter. It is then translated by the spine distance along the spine direction. It maybe twisted by using the rotation parameter. The scale and rotation parameter are provided by the end cross section being of type [[IfcDerivedProfileDef]] , where Scale is EndSweptArea [[IfcDerivedProfileDef]].Operator.Scale Rotation is EndSweptArea [[IfcDerivedProfileDef]].Operator.Axis1 Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. HISTORY New entity in IFC4. .spec head Informal Propositions 1. Mirroring within [[IfcDerivedProfileDef]].Operator shall not be used"

#:IFC.xml:10575
msgid "IfcExtrudedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcExtrudedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "Поверхность, определяющая конец области сметаны, приведена в виде определения профиля. Система координат положения области EndSwptArea генерируется путем перевода SELF [[IfcSweptAreaSolid]]. osition along the SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection by the distance of SELF [[IfcExtrudedAreaSolid]].Depth ."

#:IFC.xml:10587
msgid "IfcFaceBasedSurfaceModel"
msgstr "Модель IfcFaceBasedSurfaceModel"

msgid "IfcFaceBasedSurfaceModel_DEFINITION"
msgstr "The [[IfcFaceBasedSurfaceModel]] represents the a shape by connected face sets. The connected faces have a dimensionality 2 and are placed in a coordinate space of dimensionality 3. .extDef NOTE Definition according to ISO CD 10303 42 1992 A face based surface model is described by a set of connected face sets of dimensionality 2. The connected face sets shall not intersect except at edges and vertices, except that a face in one connected face set may overlap a face in another connected face set, provided the face boundaries are identical. There shall be at least one connected face set. A connected face set may exist independently of a surface model. NOTE Entity adapted from face based surface model defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The connected face sets shall not overlap or intersect except at common faces, edges or vertices. 2. The fbsm faces have dimensionality 2. .deprecated IFC4 CHANGE The entity has been deprecated and shall not be used. The entity [[IfcFacetedBrep]] shall be used instead."

#:IFC.xml:10596
msgid "IfcFaceBasedSurfaceModel_FbsmFaces"
msgstr "FbsmFaces"

msgid "IfcFaceBasedSurfaceModel_FbsmFaces_DEFINITION"
msgstr "The set of connected face sets comprising the face based surface model."

#:IFC.xml:10588
msgid "IfcFaceBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcFaceBasedSurfaceModel_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:10608
msgid "IfcFacetedBrep"
msgstr "Ледяной Бреп"

msgid "IfcFacetedBrep_DEFINITION"
msgstr "The [[IfcFacetedBrep]] is a manifold solid brep with the restriction that all faces are planar and bounded polygons. NOTE Use of [[IfcFacetedBrep]] is restricted for boundary representation models with planar surfaces only. Those surfaces are implicitly represented by the bounding polygons. The diagram shows the topological and geometric representation items that are used for faceted breps. Each [[IfcCartesianPoint]], used within the [[IfcFacetedBrep]] shall be referenced three times by an [[IfcPolyLoop]] bounding a different [[IfcFace]]. Figure 1 Diagram showing the use of [[IfcFacetedBrep]] .extDef NOTE Definition according to ISO CD 10303 42 1992 A faceted B rep is a simple form of boundary representation model in which all faces are planar and all edges are straight lines. Unlike the B rep model, edges and vertices are not represented explicitly in the model but are implicitly available through the poly loop entity. A faceted B rep has to meet the same topological constraints as the manifold solid B rep. .extDef The faceted B rep has been introduced in order to support the larger number of systems that allow boundary type solid representations with planar surfaces only. NOTE Entity adapted from manifold solid brep defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. All the bounding loops of all the faces of all the shells in the [[IfcFacetedBrep]] shall be of type [[IfcPolyLoop]] . 2. All vertices shall be referenced by all polyloops, sharing the vertex. I.e., each Cartesian point shall be references by at least three polyloops."

#:IFC.xml:10611
msgid "IfcFacetedBrepWithVoids"
msgstr "Разграниченный BrepWithVoids"

msgid "IfcFacetedBrepWithVoids_DEFINITION"
msgstr "The [[IfcFacetedBrepWithVoids]] is a specialization of a faceted B rep which contains one or more voids in its interior. The voids are represented as closed shells which are defined so that the shell normal point into the void. NOTE Entity adapted from brep with voids AND faceted brep defined in ISO 10303 42. HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE Subtyping changed from [[IfcManifoldSolidBrep]] to [[IfcFacetedBrep]] with upward compatibility for file based exchange. .spec head Informal Propositions 1. Each void shell shall be disjoint from the outer shell and from every other void shell 2. Each void shell shall be enclosed within the outer shell but not within any other void shell. In particular the outer shell is not in the set of void shells 3. Each shell in the [[IfcManifoldSolidBrep]] shall be referenced only once. 4. All the bounding loops of all the faces of all the shells in the [[IfcFacetedBrep]] shall be of type [[IfcPolyLoop]] ."

#:IFC.xml:10614
msgid "IfcFacetedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcFacetedBrepWithVoids_Voids_DEFINITION"
msgstr "Set of closed shells defining voids within the solid."

#:IFC.xml:10626
msgid "IfcFixedReferenceSweptAreaSolid"
msgstr "IfcFixedReferenceSweptAreaSolid"

msgid "IfcFixedReferenceSweptAreaSolid_DEFINITION"
msgstr "An [[IfcFixedReferenceSweptAreaSolid]] is a type of swept area solid which is the result of sweeping an area along a Directrix . The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the start tangent of the directrix at this point, and the profile s x axis agrees to the orthogonal projection of the FixedReference direction within the plane of start tangent and Fixed Reference . The orientation of the curve during the sweeping operation is controlled by the FixedReference direction. The SweptArea is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the projection of FixedReference onto the normal plane to the directrix at this point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The resulting swept solid is placed by the Position coordinate system. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no EndParam is provided the end defaults to the end of the directrix. NOTE The StartParam and the EndParam , if provided as a parameter value, are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. NOTE In the case of a curve composed of [[IfcCurveSegment]] , the [[IfcSweptAreaSolid]] Position is dependent on the [[IfcCurveSegment]] StartPlacement and the type of BasisCurve which defines the name function between the start and end explicitly defined as the start point of the next segment points of the segment EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In many cases, it is a surface of extrusion. The directrix lies on the surface, often defined as a p curve at this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the FixedReference direction. The Axis2 the y axis, or v is constructed. In this case the resulting swept solid is not repositioned. The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a CartesianTransformationOperator3d with attributes LocalOrigin as point 0 0 0 , Axis1 as the orthogonal projection of the FixedReference onto the normal plane defined by Axis3 . Axis3 as the direction of the tangent vector t at the point of the Directrix with parameter u . The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the Directrix parameter u . NOTE The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE Entity adapted from fixed reference swept surface defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. The SweptArea shall lie in the plane z 0. 2. The FixedReference shall not be parallel to a tangent vector to the directrix at any point along this curve. 3. The Directrix curve shall be tangent continuous."

#:IFC.xml:10629
msgid "IfcFixedReferenceSweptAreaSolid_FixedReference"
msgstr "FixedReference"

msgid "IfcFixedReferenceSweptAreaSolid_FixedReference_DEFINITION"
msgstr "FixedReference"

#:IFC.xml:10641
msgid "IfcGeometricCurveSet"
msgstr "IfcGeometricCurveSet"

msgid "IfcGeometricCurveSet_DEFINITION"
msgstr "[[IfcGeometricCurveSet]] используется для обмена формой представления, состоящего только из коллекции 2D или 3D точек и кривых. xtDef NOTE Определение в соответствии с ISO CD 10303 42 1992 A geometric curve set is a collection of two or three dimensional points and curves. ПРИМЕЧАНИЕ Сущность, адаптированная на основе геометрических кривых определенных в ISO 10303 42. В этот геометрический набор не должно быть включено никаких поверхностей."

#:IFC.xml:10644
msgid "IfcGeometricSet"
msgstr "Геометрический набор IfcGeometricSet"

msgid "IfcGeometricSet_DEFINITION"
msgstr "[[IfcGeometricSet]] используется для обмена формой представления, состоящей из 2D или 3D точек, кривых и поверхностей, которые не имеют топологической структуры, такой как соединенные массивы лиц или раковины , не тестируются и не являются твердыми моделями, такими как ткани для оттепели, CSG или Brep . .extDef NOTE Definition from ISO CD 10303 42 This entity is intended to transfer models when the topological structure is not available. ПРИМЕЧАНИЕ Сущность, адаптированная к геометрическому набору, определенному в ISO 10303 42. ИСТОРИЯ Новая сущность в IFC2x."

#:IFC.xml:10645
msgid "IfcGeometricSet_Dim"
msgstr "Dim"

msgid "IfcGeometricSet_Dim_DEFINITION"
msgstr "Размерность пространства этого класса, она идентична первому элементу в наборе. А где правило гарантирует, что все элементы имеют одинаковую размерность."

#:IFC.xml:10650
msgid "IfcGeometricSet_Elements"
msgstr "Элементы"

msgid "IfcGeometricSet_Elements_DEFINITION"
msgstr "Геометрические элементы, составляющие геометрический набор, могут быть точками, кривые или поверхности, но должны быть одинаковыми по размеру координат."

#:IFC.xml:10657
msgid "IfcGeometricSetSelect"
msgstr "Выбор IfcGeometricSet'а"

#:IFC.xml:10658
msgid "IfcHalfSpaceSolid"
msgstr "IfcHalfSpaceSolid"

msgid "IfcHalfSpaceSolid_DEFINITION"
msgstr "Половина твердого пространства разделяет домен на две на базовую поверхность. Обычно базовая поверхность представляет собой плоскость и отклоняет бесконечное пространство на две и указывает на половину пространства, согласовывая или не соглашаясь с нормальной плоскостью. Рисунок 1 иллюстрирует определение [[IfcHalfSpaceSolid]] в данной системе координат. Базовая поверхность дается без границ, красная граница показана для визуализации только половину пространства твердых .. .. .. рисунки ifchalfspacesolid layout1.gif Рисунок 1 Половая пространство, сплошная геометрия . xtDef NOTE Определение в соответствии с ISO CD 10303 42 1992 Половина пространства определяется полупространством, которое является регулярным подмножеством домена, находящегося на одной стороне свободной поверхности. Сфера поверхности, находящейся в половине пространства, определяется нормальной поверхностью и знаком согласия. Если флаг соглашения TRUE, то подмножество является одним из нормальных точек отошествия. Если флаг соглашения является FALSE, то подмножеством является тот, к которому приходят обычные точки. Для действительного полупробела поверхность делит домен на ровно два подмножества. Кроме того, в пределах домена поверхность должна быть многогранной, а все нормальные поверхности должны указывать на одну и ту же подсечку. ПРИМЕЧАНИЕ Половина пространства не является подтипом твердой модели, половина пространственных твердых частиц полезна только в логических выражениях. ПРИМЕЧАНИЕ Сущность, адаптированная на основе полупроводниковой твердости, определенной в ISO 10303 42. HISTORY New entity in IFC1.5 .spec Informal Proposition 1. Базовая поверхность разделяет домен на ровно два подмножества. Если полпробела твердого подтипа вставляется в квадратике [[IfcBoxedHalfSpace]] , то доменом в данном случае является поле для атрибута. Во всех остальных случаях домен - это пространство и базовая поверхность должна быть неограничена. 2.Базовая поверхность должна быть неограниченным подтипом [[IfcElementarySurface]] ."

#:IFC.xml:10672
msgid "IfcHalfSpaceSolid_BaseSurface"
msgstr "Базовая поверхность"

msgid "IfcHalfSpaceSolid_BaseSurface_DEFINITION"
msgstr "Поверхность, определяющая сторону полупространства."

#:IFC.xml:10659
msgid "IfcHalfSpaceSolid_Dim"
msgstr "Dim"

msgid "IfcHalfSpaceSolid_Dim_DEFINITION"
msgstr "Размеры пространства для этого класса, всегда 3"

#:IFC.xml:10664
msgid "IfcHalfSpaceSolid_AgreementFlag"
msgstr "Согласование Флага"

msgid "IfcHalfSpaceSolid_AgreementFlag_DEFINITION"
msgstr "Контентный флаг TRUE, если обычный к BaseSurface указывает от материала [[IfcHalfSpaceSolid]]. В противном случае это FALSE."

#:IFC.xml:10684
msgid "IfcIndexedPolygonalFace"
msgstr "Индексация Полигональлица"

msgid "IfcIndexedPolygonalFace_DEFINITION"
msgstr "[[IfcIndexedPolygonalFace]] — компактное представление планарного лица, являющегося частью набора граней. Вертикальные стороны многоугольного планарного лица предоставляются тремя или более декартовыми точками, определён указателями, что точка на [[IfcCartesianPointList3D]] , либо direcly, либо через PnIndex , если это предусмотрено в [[IfcPolygonalFaceSet]] . Рисунок 1 показывает [[IfcIndexedPolygonalFace]] [[IfcPolygonalFaceSet]], не используя PnIndex по умолчанию . [[IfcIndexedPolygonalFace]] .. .. .. цифры ifcindexedpolygonalface 01. ng Рисунок 1 геометрия полигональной грани представляемая индексами на рисунке 2 показывает [[IfcIndexedPolygonalFace]] на [[IfcPolygonalFaceSet]] с использованием PnIndex . [[IfcIndexedPolygonalFace]] нас ing PnIndex .. .. .. цифры ifcindexedpolygonalface 02. ng Рисунок 2 Геометрия полигональной поверхности, представленная индексами в список точек ГИСТОРИ Новая сущность в добавлении IFC4 2."

#:IFC.xml:10691
msgid "IfcIndexedPolygonalFace_ToFaceSet"
msgstr "ToFaceSet"

msgid "IfcIndexedPolygonalFace_ToFaceSet_DEFINITION"
msgstr "Ссылка на [[IfcPolygonalFaceSet]], для которого это лицо связано."

#:IFC.xml:10705
msgid "IfcIndexedPolygonalFace_HasTexCoords"
msgstr "HasTexCoords"

msgid "IfcIndexedPolygonalFace_HasTexCoords_DEFINITION"
msgstr "HasTexCoords"

#:IFC.xml:10685
msgid "IfcIndexedPolygonalFace_CoordIndex"
msgstr "CoordIndex"

msgid "IfcIndexedPolygonalFace_CoordIndex_DEFINITION"
msgstr "Одномерный список с индексами для трех или более точек, определяющими вершины внешнего цикла. Если набор покрытий закрыт, то указывается SELF [[IfcTessellatedFaceSet]]. потерянные точки, определяющие внешний цикл, соединяют счетчик часовой стрелки, как видно снаружи тела, так что в результате нормальный будет указать наружу. ПРИМЕЧАНИЕ Координаты вершин предоставляются в индексированном списке SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList . Если в SELF [[IfcTessellatedFaceSet]].PnIndex присутствует указатель, то в противном случае указывается непосредственно на [[IfcCartesianPointList3D]]."

#:IFC.xml:10719
msgid "IfcIndexedPolygonalFaceWithVoids"
msgstr "IfcIndexedPolygonalFaceWithVoids"

msgid "IfcIndexedPolygonalFaceWithVoids_DEFINITION"
msgstr "[[IfcIndexedPolygonalFaceWithVoids]] — компактное представление планарного лица с внутренними циклами, являющееся частью набора лицей. СОВЕТ ПО ТОРГОВЛЕ И РАЗВИТИЮ"

#:IFC.xml:10720
msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices"
msgstr "Индексы InnerCoordIndex"

msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices_DEFINITION"
msgstr "Двухмерный список, где первое измерение представляет каждый внутренний цикл от 1 до N, а второе измерение - индикаторы до трех или более точек, определяющих вершины каждого внутреннего цикла. Если набор покрытий закрыт, то указывается SELF [[IfcTessellatedFaceSet]]. потерянные точки, определяющие внутренние петли, соединяются по часовой стрелке, как видно снаружи тела. ПРИМЕЧАНИЕ Координаты вершин предоставляются в индексированном списке SELF [[IfcTessellatedFaceSet]]. oordinates.CoordList . Если в SELF [[IfcTessellatedFaceSet]].PnIndex присутствует точка с индексами, иначе непосредственно в [[IfcCartesianPointList3D]] ."

#:IFC.xml:10727
msgid "IfcIndexedPolygonalTextureMap"
msgstr "Карта Индексированных Полигонал"

#:IFC.xml:10730
msgid "IfcIndexedPolygonalTextureMap_TexCoords"
msgstr "TexCoords"

msgid "IfcIndexedPolygonalTextureMap_TexCoords_DEFINITION"
msgstr "TexCoords"

#:IFC.xml:10744
msgid "IfcManifoldSolidBrep"
msgstr "IfcManifoldSolidBrep"

msgid "IfcManifoldSolidBrep_DEFINITION"
msgstr "The [[IfcManifoldSolidBrep]] is a solid represented as a collection of connected surfaces that delimit the solid from the surrounding non solid. Instances of type [[IfcManifoldSolidBrep]] shall be of type [[IfcFacetedBrep]] , using only [[IfcPolyLoop]] for the bounds of [[IfcFaceBound]] , or of type [[IfcAdvancedBrep]] , using only [[IfcAdvancedFace]] for the face geometry, and [[IfcEdgeCurve]] for the edges. .extDef NOTE Definition according to ISO CD 10303 42 1992 A manifold solid b rep is a finite, arcwise connected volume bounded by one or more surfaces, each of which is a connected, oriented, finite, closed 2 manifold. There is no restriction on the genus of the volume, nor on the number of voids within the volume. The Boundary Representation B rep of a manifold solid utilizes a graph of edges and vertices embedded in a connected, oriented, finite, closed two manifold surface. The embedded graph divides the surface into arcwise connected areas known as faces. The edges and vertices, therefore, form the boundaries of the face and the domain of a face does not include its boundaries. The embedded graph may be disconnected and may be a pseudo graph. The graph is labeled that is, each entity in the graph has a unique identity. The geometric surface definition used to specify the geometry of a face shall be 2 manifold embeddable in the plane within the domain of the face. In other words, it shall be connected, oriented, finite, non self intersecting, and of surface genus 0. Faces do not intersect except along their boundaries. Each edge along the boundary of a face is shared by at most one other face in the assemblage. The assemblage of edges in the B rep do not intersect except at their boundaries i.e., vertices . The geometry curve definition used to specify the geometry of an edge shall be arcwise connected and shall not self intersect or overlap within the domain of the edge. The geometry of an edge shall be consistent with the geometry of the faces of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. A B rep is represented by one or more closed shells which shall be disjoint. One shell, the outer, shall completely enclose all the other shells and no other shell may enclose a shell. The facility to define a B rep with one or more internal voids is provided by a subtype. The following version of the Euler formula shall be satisfied, math .. .. .. .. figures ifcmanifoldsolidbrep math1.gif where V, E, F, L l and S are the numbers of unique vertices, edges, faces, loop uses and shells in the model and G s is the sum of the genus of the shells. NOTE Entity adapted from manifold solid brep defined in ISO 10303 42. HISTORY New entity in IFC Release 1.0 Informal proposition 1. The dimensionality of a manifold solid brep shall be 3. 2. The extent of the manifold solid brep shall be finite and non zero. 3. All elements of the manifold solid brep shall have defined associated geometry. 4. The shell normals shall agree with the B rep normal and point away from the solid represented by the B rep. 5. Each face shall be referenced only once by the shells of the manifold solid brep. 6. The Euler equation shall be satisfied for the boundary representation, where the genus term shell term us the sum of the genus values for the shells of the brep."

#:IFC.xml:10747
msgid "IfcManifoldSolidBrep_Outer"
msgstr "Внешний"

msgid "IfcManifoldSolidBrep_Outer_DEFINITION"
msgstr "Закрытая скорлупа, определяющая внешнюю границу прочности."

#:IFC.xml:10759
msgid "IfcPointListDim__PointList"
msgstr "IfcPointListDim PointList"

#:IFC.xml:10767
msgid "IfcPolygonalBoundedHalfSpace"
msgstr "Ифцполигональное пересечение HalfSpace"

msgid "IfcPolygonalBoundedHalfSpace_DEFINITION"
msgstr "The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary. The base surface of the half space is positioned by its normal relative to the object coordinate system as defined at the supertype [[IfcHalfSpaceSolid]] , and its polygonal with or without arc segments boundary is defined in the XY plane of the position coordinate system established by the Position attribute, the subtraction body is extruded perpendicular to the XY plane of the position coordinate system, that is, into the direction of the positive Z axis defined by the Position attribute. The boundary is defined by a 2 dimensional polyline or 2 dimensional composite curve, consisting of straight segments and circular arc segments within the XY plane of the position coordinate system. The side of the surface which is in the half space is determined by the surface normal and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normal points away from. If the agreement flag is FALSE, then the subset is the one the normal points into. NOTE A polygonal bounded half space is not a subtype of [[IfcSolidModel]] , half space solids are only useful as operands in Boolean expressions. Figure 1 illustrates a polygonal bounded half space. Black coordinates indicate the object coordinate system usually provided by [[IfcLocalPlacement]] . Green coordinates indicate the position coordinate system the PolygonalBoundary is given within this coordinate system. It is provided by [[IfcPolygonalBoundedHalfSpace]].Position. This coordinate system is relative to the object coordinate system. The extrusion direction of the subtraction body is the positive Z axis. Red coordinates indicate the normal of the plane. It is provided by the BaseSurface [[IfcSurface]].Position . This normal is also relative to the object coordinate system. Figure 1 Polygonal half space geometry The polygonal bounded half space is used to limit the volume of the half space in Boolean difference expressions. Only the part that is defined by a theoretical intersection between the half space solid and an extruded area solid, defined by extruding the polygonal boundary, is used for Boolean expressions. The PolygonalBoundary defines the 2D polyline which bounds the effectiveness of the half space in Boolean expressions. The BaseSurface is defined by a plane, and the normal of the plane together with the AgreementFlag defines the side of the material of the half space. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The [[IfcPolyline]] or the [[IfcCompositeCurve]] providing the PolygonalBoundary shall be closed. 2. If the PolygonalBoundary is given by an [[IfcCompositeCurve]] , it shall only have [[IfcCompositeCurveSegment]] s of type [[IfcPolyline]] , or [[IfcTrimmedCurve]] having a BasisCurve of type [[IfcLine]] , or [[IfcCircle]] 3. The BaseSurface defined at supertype [[IfcHalfSpaceSolid]] shall be of type [[IfcPlane]] 4. The normal of the plane, being the BaseSurface , shall not be perpendicular to the z axis of the position coordinate system"

#:IFC.xml:10770
msgid "IfcPolygonalBoundedHalfSpace_Position"
msgstr "Позиция"

msgid "IfcPolygonalBoundedHalfSpace_Position_DEFINITION"
msgstr "Определение системы координат положения полилинии и основы поверхности ."

#:IFC.xml:10782
msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary"
msgstr "Полигональная граница"

msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary_DEFINITION"
msgstr "Двумерная полилиния, ограниченная по диапазону, определенная в пиксельной плоскости координат системы координат. hange ifc2x3 IFC2x3 CHANGE Тип атрибута был изменен с [[IfcPolyline]] на супертип [[IfcBoundedCurve]] с совместимостью вверх для обмена файлами."

#:IFC.xml:10794
msgid "IfcPolygonalFaceSet"
msgstr "IfcPolygonalFaceSet"

msgid "IfcPolygonalFaceSet_DEFINITION"
msgstr "The [[IfcPolygonalFaceSet]] is a tessellated face set with all faces being bound by polygons. The planar faces are constructed by implicit polylines defined by three or more Cartesian points. Each planar face is defined by an instance of [[IfcIndexedPolygonalFace]] , or in case of faces with inner loops by [[IfcIndexedPolygonalFaceWithVoids]] . Depending on the value of the attribute Closed the instance of [[IfcPolygonalFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The attribute Faces refers to a list of [[IfcIndexedPolygonalFace]] s having an one based CoordIndex that provides three or more indices. If the face has inner loops, the [[IfcIndexedPolygonalFaceWithVoids]] has a two dimensional, one based list, where the first dimension of the two dimensional list addresses the list of inner loops the second dimension of the two dimensional list provides three or more indices each being a vertex of the planar polygon representing the inner loop. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifcpolygonalfaceset 01.png Figure 1 Use of PnIndex NOTE If the [[IfcPolygonalFaceSet]] is closed, the face vertices of the [[IfcIndexedPolygonalFace]] s shall connect counterclock wise when seen from the outside of the closed shell to guarantee that the face normal points away from the material of the shell. Inner loops, provided by the [[IfcIndexedPolygonalFaceWithVoids]] , shall connect clock wise. Figure 2 shows an IfcFacetedFaceSet represented by 1 [[IfcIndexedPolygonalFace]] 1, 2, 3, 4 2 [[IfcIndexedPolygonalFace]] 6, 2, 3, 7 3 [[IfcIndexedPolygonalFace]] 7, 3, 4, 8 4 [[IfcIndexedPolygonalFace]] 8, 4, 1, 5 5 [[IfcIndexedPolygonalFace]] 1, 4, 3, 2 6 [[IfcIndexedPolygonalFace]] 6, 7, 8, 5 7 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 2 Polygonal face set geometry NOTE The definition of IfcFacetedFaceSet is based on the indexedFaceSet defined in ISO IEC 19775 1 HISTORY New entity in IFC4 Addendum 2. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two outer or inner boundaries of faces the topological normal at each point on the boundary of the polygonal face set shall point away from the material of the solid."

#:IFC.xml:10691
msgid "IfcPolygonalFaceSet_Faces"
msgstr "Лица"

msgid "IfcPolygonalFaceSet_Faces_DEFINITION"
msgstr "Список многоугольных лиц с внутренними или без них, которые связаны с грани набора."

#:IFC.xml:10795
msgid "IfcPolygonalFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcPolygonalFaceSet_PnIndex_DEFINITION"
msgstr "Список целых чисел, определяющих точки в [[IfcCartesianPointList3D]], для получения координат точек для индексов по индексированным многоугольным лицам. Если PnIndex не предоставит индексы непосредственно в точку индексированных многоугольных поверхностей [[IfcCartesianPointList3D]] ."

#:IFC.xml:10802
msgid "IfcRectangularPyramid"
msgstr "IfcRectangularPyramid"

msgid "IfcRectangularPyramid_DEFINITION"
msgstr "[[IfcRectangularPyramid]] - это трехмерная примитив ЦГН конструируемая геометрия. Это тело с прямоугольной базой и точкой под названием «вершина». Ось от центра основания до вершины перпендикулярна основанию перпендикулярна. Атрибут «Унаследованная позиция» определяет IfcAxisPlacement3D и обеспечивает расположение и ориентацию пирамиды SELF [[IfcCsgPrimitive3D]]. osition The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]]. osition.Расположение Центр круглой области является нижней поверхностью конуса. SELF [[IfcCsgPrimitive3D]].Position. osition 3 Ось z унаследованной системы координат размещения обеспечивает центральную ось [[IfcRightCircularCone]] и высший — на значении высоты, применяемом к положительному направлению оси z. Нижний радиус задает окружность в плоскости расположения кси системы координат. Как показано на рисунке 1, пирамида размещается в своей собственной системе координат. Происхождение - это центр нижнего прямоугольника, который находится в плоскости XY. Апекс лежит на положительной z оси в 0, 0, Высота . пирамида .. .. рисунки ifcrectangularpyramid layout1.png Рисунок 1 Прямоугольная пирамида геометрия HISTORY Новая сущность в IFC2x3 . se head Texture use definition On each triangular side face, текстуры выравниваются по вертикали. Текстуры растягиваются или повторяются в пределах базы каждого лица в соответствии с повтором. Текстуры растягиваются или повторяются в верхней точке по повтору Т, где верхняя точка имеет координаты 0,5, 1,0, если Повтор не верный. На нижнем листе текстуры выравниваются по направлению на заднюю сторону. Рисунок 2 иллюстрирует отображение текстур по умолчанию с заостренной текстурой RepeatS False и RepeatT False . Изображение слева показывает текстуру, в которой ось S находится вправо, а ось Т. Изображение справа показывает текстуру, применяемую к геометрии, где ось X находится вправо, ось Y указывает на левую и ось Z. ridtable side Normal Origin X Origin Y Origin Z S Axis T Axis Left X 0 YLength 0 Y towards top point right X Xlength 0 Y towards top point Front Y 0 0 X towards top point Back Y XLength YLength 0 X towards top point bottom Z XLength 0 X Figure 2 Rectangular pyramid textures"

#:IFC.xml:10803
msgid "IfcRectangularPyramid_Height"
msgstr "Высота"

msgid "IfcRectangularPyramid_Height_DEFINITION"
msgstr "Высота вершины над плоскостью основания, измеренная в направлении оси расположения Z, SELF [[IfcCsgPrimitive3D]]. osition.P 2 ."

#:IFC.xml:10808
msgid "IfcRectangularPyramid_XLength"
msgstr "Длина XLth"

msgid "IfcRectangularPyramid_XLength_DEFINITION"
msgstr "Длина основания, измеряемая по оси X. Предоставляется расстановка унаследованной оси через SELF [[IfcCsgPrimitive3D]].Position.P 1 ."

#:IFC.xml:10813
msgid "IfcRectangularPyramid_YLength"
msgstr "Длина"

msgid "IfcRectangularPyramid_YLength_DEFINITION"
msgstr "Длина основания, измеряемая по оси Y. Предоставляется расстановка унаследованной оси через SELF [[IfcCsgPrimitive3D]].Position.P 2 ."

#:IFC.xml:10820
msgid "IfcRevolvedAreaSolid"
msgstr "IfcRevolvedAreaSolid"

msgid "IfcRevolvedAreaSolid_DEFINITION"
msgstr "An [[IfcRevolvedAreaSolid]] is a solid created by revolving a cross section provided by a profile definition about an axis. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the revolved solid. If not provided, it defaults to the current object coordinate system. The axis and the cross section shall be in the same plane, prior to any repositioning. NOTE Both the axis and the cross section are required to lie in the xy plane of the object position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the revolved solid. The revolved area solid defines the revolution of a 2D area given by a profile definition by an axis and angle. The result is a solid. The swept area is given by a profile definition. The profile is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. The AxisLine can have any orientation within the XY plane, it does not have to be parallel to the y axis as shown in the illustration. Figure 1 Revolved area solid geometry EXAMPLE Figure 1 illustrates geometric parameters and additional positioning parameters of the revolved area solid. The revolved area solid defines the rotation of a 2D area by an axis and angle. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the x axis. Figure 2 Repositioned revolved area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A revolved area solid is a solid formed by revolving a planar bounded surface about an axis. The axis shall be in the plane of the surface and the axis shall not intersect the interior of the bounded surface. The bounded surface may have holes which will sweep into holes in the solid. The direction of revolution is clockwise when viewed along the axis in the positive direction. More precisely if A is the axis location and d is the axis direction and C is an arc on the surface of revolution generated by an arbitrary point p on the boundary of the swept area, then C leaves p in direction d x p A as the area is revolved. NOTE Entity adapted from revolved area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .spec head Informal Propositions 1. The AxisLine shall lie in the plane of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 2. The AxisLine shall not intersect the interior of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 3. The Angle shall be between 0 and 360 , or 0 and 2π depending on the unit type for [[IfcPlaneAngleMeasure]] . .use head Texture Use Definition For side faces, textures are aligned facing upright along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the outermost longest revolution path according to RepeatT , where coordinates are compressed towards the axis of revolution. For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcRevolvedAreaSolid]] having a profile of [[IfcTShapeProfileDef]] and revolved at 22.5 degrees, the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth . Figure 3 Revolved area solid textures"

#:IFC.xml:10832
msgid "IfcRevolvedAreaSolid_Axis"
msgstr "Ось"

msgid "IfcRevolvedAreaSolid_Axis_DEFINITION"
msgstr "Ось о том, какая революция произойдет."

#:IFC.xml:10821
msgid "IfcRevolvedAreaSolid_AxisLine"
msgstr "AxisLine"

msgid "IfcRevolvedAreaSolid_AxisLine_DEFINITION"
msgstr "Линия оси революции."

#:IFC.xml:10825
msgid "IfcRevolvedAreaSolid_Angle"
msgstr "Угол"

msgid "IfcRevolvedAreaSolid_Angle_DEFINITION"
msgstr "Угол, через который будет производиться подтяжка. Этот угол измеряется из плоскости потёрной области, установленной плоскостью XY системы координат."

#:IFC.xml:10844
msgid "IfcRevolvedAreaSolidTapered"
msgstr "Солидарность"

msgid "IfcRevolvedAreaSolidTapered_DEFINITION"
msgstr "[[IfcRevolvedAreaSolidTapered]] определяется вращением перекрестного сечения вдоль окружности. Поперечное сечение может меняться вдоль вращающейся подтяжки от формы стартового сечения в форме конечного перекрестного сечения. Затем соединяются соответствующие вершины начальных и конечных перекрестных сечений. Округленная поверхность может иметь отверстия, которые будут перемещаться в отверстия в твердых. Ось вращения определяется начальной точкой SELF [[IfcSweptAreaSolid]]. osition.Location Direction SELF [[IfcRevolvedAreaSolid]].Axis ось поворота SELF [[IfcRevolvedAreaSolid]]. xisLine , созданный из начальной точки и направления, используя масштаб 1 единицы. Положительные углы ориентации накладываются по часовой стрелке при положительном направлении оси вращения. Начальное пересечение определяется SELF [[IfcSweptAreaSolid]]. weptArea A bounded planar surface lying in the XY plane of the position system defined by SELF [[IfcSweptAreaSolid]]. osition.P 1 и SELF [[IfcSweptAreaSolid]]. osition.P 2 Ось вращения находится в плоскости начального сечения, но не должна пересекаться внутри стартового сечения. Конечный поперечный сечение определяется осью границы планарной поверхности EndSweptArea A, лежащей в плоскости XY системы координат положения, определяемой поворотом начальной позиции, обеспечиваемой SELF [[IfcSweptAreaSolid]]. ось вокруг оси вращения на угол, заданный SELF [[IfcRevolvedAreaSolid]].Угол . Поперечное сечение является топологически похожим на стартовую сетку с одинаковым количеством вершин и краев . Конечная поперечная секция может быть определена одним и тем же параметром, используя различные значения параметров, или 2D декартовым преобразованием стартового профиля внутри конечной перекрестной плоскости. Тверь образуется путем преобразования стартового перекрестного сечения в конечный перекрестный сечение. Стартовое лицо, конечное лицо, которое определяется по стартовому и конечному пересечениям , и одно или более боковых лица. Каждое боковое лицо - это управляемая поверхность, определяемая парой соответствующих краев стартового и конечного секций. Регулируемые поверхности сконструированы в цилиндрическом координатном пространстве, определенном супертипом [[IfcRevolvedAreaSolid]] . ИСТОРИЯ Новая сущность в IFC4. .spec Неформальные предложения 1. Зеркала в пределах [[IfcDerivedProfileDef]].Оператор не должен использоваться"

#:IFC.xml:10847
msgid "IfcRevolvedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcRevolvedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "EndSweptArea"

#:IFC.xml:10859
msgid "IfcRightCircularCone"
msgstr "IfcRightCircularCone"

msgid "IfcRightCircularCone_DEFINITION"
msgstr "[[IfcRightCircularCone]] - это трехмерная примитив ЦГН конструируемая геометрия. Это твердое с круглой базой и точкой под названием apex как вершина. Ось от центра окружности до вершины перпендикулярна основанию перпендикулярна к основанию. Атрибут «Унаследованная позиция» определяет IfcAxisPlacement3D и обеспечивает расположение и ориентацию конуса SELF [[IfcCsgPrimitive3D]]. osition The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]]. osition.Расположение Центр круглой области является нижней поверхностью конуса. SELF [[IfcCsgPrimitive3D]].Position. osition 3 Ось z унаследованной системы координат размещения обеспечивает центральную ось [[IfcRightCircularCone]] и высший — на значении высоты, применяемом к положительному направлению оси z. Нижний радиус задает окружность в плоскости расположения кси системы координат. Рисунок 1 иллюстрирует геометрические параметры конуса. Конус размещается в собственной системе координат размещения. Происхождение - центр нижнего кругового диска, который находится в плоскости XY. Абсент лежит на положительной z оси в 0, 0, Высота . конус .. .. рисунки макета ifcrightcircularcone. ng Рисунок 1 Правый круглый конус геометрия ЗАМЕЧАНИЕ Entity из правого кругового конуса, определенного в ISO 10303 42. Для круговой стороны текстуры выравниваются на вертикальной стороне с исходной точкой Y направления вращения по часовой стрелке. Текстуры растягиваются или повторяются в пределах базовой окружности в соответствии с Повторением. Текстуры сжимаются линейно вверх в соответствии с RepeatT. На нижней стороне текстуры выравниваются передней и задней части, с центром окружности, расположенной по центру текстуры. Рисунок 2 иллюстрирует отображение текстур по умолчанию с заостренной текстурой RepeatS False и RepeatT False . Изображение слева показывает текстуру, в которой ось S находится вправо, а ось Т. Изображение справа показывает текстуру, применяемую к геометрии, где ось X находится вправо, ось Y находится влево и ось Z оси. .gridtable бока Normal Origin X Origin Y Origin Z S Axis T Axis Side Y 0 Radius 0 X towards top point Нижний Z Radius 0 X Y Рисунок 2 правой круглый конус текстуры"

#:IFC.xml:10860
msgid "IfcRightCircularCone_BottomRadius"
msgstr "Радиус снизу"

msgid "IfcRightCircularCone_BottomRadius_DEFINITION"
msgstr "Радиус конуса у основания."

#:IFC.xml:10865
msgid "IfcRightCircularCone_Height"
msgstr "Высота"

msgid "IfcRightCircularCone_Height_DEFINITION"
msgstr "Расстояние между основанием конуса и апесом."

#:IFC.xml:10872
msgid "IfcRightCircularCylinder"
msgstr "IfcRightCircularCylinder"

msgid "IfcRightCircularCylinder_DEFINITION"
msgstr "The [[IfcRightCircularCylinder]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a circular base and top. The cylindrical surface between if formed by points at a fixed distance from the axis of the cylinder. The inherited Position attribute defines the IfcAxisPlacement3D and provides SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cylinder. SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis provides the center axis and the height is measured from the origin along the positive direction of the z axis. Figure 1 illustrates geometric parameters of the cylinder. The cylinder is positioned within its own placement coordiante system. The origin is the center of the bottom circular disk, that lies in the XY plane. The center of the top circular disk is on the positive z axis at 0, 0, Height . cylinder .. .. .. .. figures ifcrightcircularcylinder layout1.png Figure 1 Right circular cylinder geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A right circular cylinder is a CSG primitive in the form of a solid cylinder of finite height. It is defined by an axis point at the centre of one planar circular face, an axis, a height, and a radius. The faces are perpendicular to the axis and are circular discs with the specified radius. The height is the distance from the first circular face centre in the positive direction of the axis to the second circular face centre. NOTE Entity adapted from right circular cylinder defined in ISO 10303 42. HISTORY New entity in IFC2x3. .use head Texture use definition On the circular side, textures are aligned facing upright with origin at the back Y direction revolving counter clockwise. Textures are stretched or repeated to the extent of the circumference according to RepeatS. Textures are stretched or repeated to the extent of the Height according to RepeatT. On the top and bottom faces, textures are aligned facing front to back, with the center of the circle aligned to the center of the texture. Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Side Y 0 Radius 0 X Z Bottom Z Radius Radius 0 X Y Top Z Radius Radius Height X Y Figure 2 Right circular cylinder textures"

#:IFC.xml:10873
msgid "IfcRightCircularCylinder_Height"
msgstr "Высота"

msgid "IfcRightCircularCylinder_Height_DEFINITION"
msgstr "Расстояние между плоскостными круглыми гранями цилиндра."

#:IFC.xml:10878
msgid "IfcRightCircularCylinder_Radius"
msgstr "Radius"

msgid "IfcRightCircularCylinder_Radius_DEFINITION"
msgstr "Радиус цилиндра."

#:IFC.xml:10885
msgid "IfcSectionedSolid"
msgstr "РазсечениеТяжелое"

msgid "IfcSectionedSolid_DEFINITION"
msgstr "[[IfcSectionedSolid]] — это абстрактный базовый тип твердых веществ, построенный путем смещения потенциально перекрестных секций вдоль директрии."

#:IFC.xml:10888
msgid "IfcSectionedSolid_Directrix"
msgstr "Директрикс"

msgid "IfcSectionedSolid_Directrix_DEFINITION"
msgstr "Кривая, используемая для определения операции перекачивания."

#:IFC.xml:10900
msgid "IfcSectionedSolid_CrossSections"
msgstr "Кросссетки"

msgid "IfcSectionedSolid_CrossSections_DEFINITION"
msgstr "Список перекрестных секций в последовательном порядке вдоль Directrix ."

#:IFC.xml:10912
msgid "IfcSectionedSolidHorizontal"
msgstr "Солидарная горизонтальная структура"

msgid "IfcSectionedSolidHorizontal_DEFINITION"
msgstr "[[IfcSectionedSolidHorizontal]] — это твердая модель, построенная путем смещения потенциально изменяющихся перекрестных отрезков вдоль кривой по горизонтали. Твердый образуется путем перекрестного пересечения позиций с линейной интерполяцией точек профиля, где профиль нормально согласуется с тангенсом Directrix , ось профиля X ориентирована перпендикулярно слева от Directrix в том же направлении, что и LateralOffset в [[IfcPointByDistanceExpression]], в направлении вперед по направлению к направлению, и ось Y ориентирована вверх, согласно FixedAxisVertical . Для секций, имеющих поперечное сечение, повернутых в соответствии с одним супер подъемом, [[IfcDerivedProfileDef]] может использоваться для обозначения такой ротации с каждым ParentProfile со ссылкой на один и тот же профиль. Для сечений, преобразуемых поперечным сечением, по нескольким сверхверхним рельефам с разными точками самостоятельно, каждый профиль может быть из разных экземпляров, но одного типа напр. [[IfcArbitraryClosedProfileDef]] , и, опционально, могут иметь поперечные точки секции, связанные с кривыми направляющих строк [[IfcIndexedPolyCurve]] с помощью IfcCartesianPointList2Dlabelled . Рисунок 1 иллюстрирует четыре жирца моста, имеющие профиль с постоянными параметрами, Два гаранта с постоянным произвольным профилем зеркалируют , а мостовая палуба имеет произвольный профиль. Пространственная структура .. .. .. .. фигуры ifcsectionedsolidhorizont.png Рисунок 1 Разделенные сплошные горизонтальные неофициальные предложения 1. Никакие две последовательные секции не должны пересекаться. 2. Если тип разделов не [[IfcParameterizedProfileDef]], то т.е. произвольный профиль , то количество точек и краев должно быть одинаковым для двух последовательных профилей 3. Если директрис не ощутим непрерывно, то результирующее тело создается мистер под полууглом между двумя звеньями. Очень резкие края могут привести к практически невозможному заключению более мелких соглашений с разработчиками может определить приемлемые ограничения для ощутимого разрыва или требовать, чтобы директрис был ощутимым непрерывным. 5. Директрис не должен пересекаться"

#:IFC.xml:10915
msgid "IfcSectionedSolidHorizontal_CrossSectionPositions"
msgstr "Кроссразделенные позиции"

msgid "IfcSectionedSolidHorizontal_CrossSectionPositions_DEFINITION"
msgstr "Список выражений расстояния в последовательном порядке увеличиваемом вместе с кроссечениями , указывающих позицию соответствующего раздела вдоль Directrix ."

#:IFC.xml:10927
msgid "IfcSectionedSpine"
msgstr "Разсечённый шип"

msgid "IfcSectionedSpine_DEFINITION"
msgstr "An [[IfcSectionedSpine]] is a representation of the shape of a three dimensional object composed by a number of planar cross sections, and a spine curve. The shape is defined between the first element of cross sections and the last element of the cross sections. A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. All cross sections have to define areas by a closed profile to allow for the representation of a solid. All cross sections have to define curves by an open or closed profile to allow for the representation of a surface. The cross sections are defined by subtypes of [[IfcProfileDef]] , where the consecutive profiles may be derived by a transformation of the start profile or the previous consecutive profile. The spine curve shall be of type [[IfcCompositeCurve]] , each of its segments represented by [[IfcCompositeCurveSegment]] shall correspond to the part between exactly two consecutive cross sections. Figure 1 illustrates an example of an [[IfcSectionedSpine]] . The SpineCurve is given by an [[IfcCompositeCurve]] with two Segments . The Segments 1 has a ParentCurve of type [[IfcPolyline]] and a Transition CONTSAMEGRADIENT. The Segments 2 has a ParentCurve of type [[IfcTrimmedCurve]] and a Transition DISCONTINUOUS. Each CrossSectionPosition lies at a start or end point of the Segments . Each CrossSections are inserted by the CrossSectionPositions . The first two cross sections are of type [[IfcRectangleProfileDef]] , the third is of type [[IfcDerivedProfileDef]] . spine 1 .. .. .. .. figures ifcsectionedspine layout1.gif Figure 1 Sectioned spine geometry Figure 2 illustrates the final result of the [[IfcSectionedSpine]] . The body shown transparently is not fully defined by the exchange definition. render .. .. .. .. figures ifcsectionedspine.jpg Figure 2 Sectioned spine result .extDef NOTE Definition according to ISO CD 10303 42 1992 A sectioned spine is a representation of the shape of a three dimensional object composed of a spine curve and a number of planar cross sections. The shape is defined between the first element of cross sections and the last element of this set. NOTE A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. For the representation of a solid all cross sections are closed curves. NOTE Entity adapted from sectioned spine defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. none of the cross sections, after being placed by the cross section positions, shall intersect 2. none of the cross sections, after being placed by the cross section positions, shall lie in the same plane 3. the local origin of each cross section position shall lie at the beginning or end of a composite curve segment."

#:IFC.xml:10935
msgid "IfcSectionedSpine_SpineCurve"
msgstr "Кривая шипа"

msgid "IfcSectionedSpine_SpineCurve_DEFINITION"
msgstr "Односоставная кривая, определяющая кривую позвоночника. Каждая из сегментов составной кривой соответствует части между двумя перекрестными сечениями."

#:IFC.xml:10947
msgid "IfcSectionedSpine_CrossSections"
msgstr "Кросссетки"

msgid "IfcSectionedSpine_CrossSections_DEFINITION"
msgstr "Список по крайней мере двух перекрёстных сечений, каждый из которых задан в плоскости кси системы координат поперечного сечения. Система координат положения задается в соответствующем списке CrossSectionPositions."

#:IFC.xml:10959
msgid "IfcSectionedSpine_CrossSectionPositions"
msgstr "Кроссразделенные позиции"

msgid "IfcSectionedSpine_CrossSectionPositions_DEFINITION"
msgstr "Системы координат координат поперечных сечений, образующих секционный позвоночник. Профили, определяющие поперечные сечения, размещаются в плоскости xy соответствующей координатной системы."

#:IFC.xml:10928
msgid "IfcSectionedSpine_Dim"
msgstr "Dim"

msgid "IfcSectionedSpine_Dim_DEFINITION"
msgstr "Размерность кривой позвоночника всегда составляет 3."

#:IFC.xml:10971
msgid "IfcSectionedSurface"
msgstr "Рассеченная поверхность"

msgid "IfcSectionedSurface_DEFINITION"
msgstr "Вид поверхности, состоящий из раздробляющих потенциально изменяющихся перекрестных отрезков кривой по горизонтали или по горизонтали . Поверхность создается путем разделения линейной интерполяции между перекрёстными позициями, за исключением случаев, когда кривые переходов между перекрёстными точками обозначаются OpenCrossProfileDef. ags. Перекрёстки ориентированы на оси Y каждого профиля, направленного вверх по оси Z или вертикально перпендикулярно Directrix, в зависимости от значения FixedAxisVertical атрибута. разделённый поверхностный эксон .. .. .. цифры [[IfcSectionedSurface]] 1. ng Рисунок 1 Разделенная поверхность с использованием [[IfcOpenCrossProfileDef]] В случае разветвления линий продольного разрыва, SectionedSurface может использовать экземпляры OpenCrossProfileDef с изменяющимся количеством точек перекрестного сечения. В этом случае точка в двух последовательных поперечных сечениях, соединенных по одному и тому же значению метки. разделённый поверхностный экзот .. .. .. цифры [[IfcSectionedSurface]] 2. ng Рисунок 1 Разделенная поверхность с разветвительными продольными разделительными линиями. Тип профиля должен быть ТЕКУЩИМ в перечне профилей, определяющих перекрестные сечения. Тип сущности для каждой секции должен быть одинаковым. Перечень поперечных сечений и перечень поперечных сечений должны быть одинакового размера. Неофициальное предложение № двух последовательных секций пересекается. Если директрис не ощутим непрерывно, результирующая поверхность создается мистер под полууглом между двумя звеньями. Очень резкие края могут привести к практически невозможному заключению более мелких соглашений с исполнителями может определить приемлемые ограничения для ощутимого разрыва или требовать, чтобы директрис был ощутимым непрерывным. Директрис не должен пересекаться"

#:IFC.xml:10974
msgid "IfcSectionedSurface_Directrix"
msgstr "Директрикс"

msgid "IfcSectionedSurface_Directrix_DEFINITION"
msgstr "Кривая для определения операции перекрашивания"

#:IFC.xml:10986
msgid "IfcSectionedSurface_CrossSections"
msgstr "Кросссетки"

msgid "IfcSectionedSurface_CrossSections_DEFINITION"
msgstr "Список перекрестных секций в последовательном порядке вдоль Directrix"

#:IFC.xml:10998
msgid "IfcSectionedSurface_CrossSectionPositions"
msgstr "Кроссразделенные позиции"

msgid "IfcSectionedSurface_CrossSectionPositions_DEFINITION"
msgstr "Список выражений расстояния в последовательном порядке увеличивается вместе с перекрёстными сечениями (CrossSection), указывающих позицию соответствующего участка вдоль Directrix."

#:IFC.xml:11010
msgid "IfcShellBasedSurfaceModel"
msgstr "Модель поверхности IfcShellBasedSurfaceModel"

msgid "IfcShellBasedSurfaceModel_DEFINITION"
msgstr "[[IfcShellBasedSurfaceModel]] представляет собой набор открытых или закрытых оболочек. Подсоединенные грани внутри оболочки имеют размерность 2 и расположены в координатном пространстве размером 3. xtDef NOTE Определение в соответствии с ISOCD 10303 42 1992 6.5.1.2 Скоро не должны пересекаться, кроме как по краям и вертикалям. Полное лицо одной оболочки может быть совместно с другой оболочкой. Кольные части корпусов должны ссылаться как на одно и то же лицо, так и на вертикали, определяющие регион совпадения. ЗАМЕЧАНИЕ ТРАНСПОРТНОГО СРЕДСТВА HISTORY New entity in IFC2x. 2.Ракушки не должны перекрываться или пересекаться, кроме как по обычным граням, краям или вершинам."

#:IFC.xml:11011
msgid "IfcShellBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcShellBasedSurfaceModel_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:11016
msgid "IfcShellBasedSurfaceModel_SbsmBoundary"
msgstr "Сглазый Границы"

msgid "IfcShellBasedSurfaceModel_SbsmBoundary_DEFINITION"
msgstr "Сглазый Границы"

#:IFC.xml:11023
msgid "IfcSolidModel"
msgstr "IfcSolidModel"

msgid "IfcSolidModel_DEFINITION"
msgstr "[[IfcSolidModel]] представляет 3D фигуру по различным типам массивных представлений моделей. Это общий абстрактный сверхтип Boundary представительства, представительство CSG, Sweeping представление и другие подходящие солидные схемы. xtDef NOTE Определение в соответствии с ISO CD 10303 42 1992 Точная модель представляет собой полное представление номинальной формы продукта таким образом, чтобы все точки внутреннего соединения связаны. Любая точка может быть классифицирована как внутри, снаружи или на границе твердого. Существует несколько различных типов твердых представлений моделей. ПРИМЕЧАНИЕ Сущность, адаптированная к твердой модели, определенной в ISO 10303 42. ИСТОРИЯ Новая сущность в МФС1.5"

#:IFC.xml:11024
msgid "IfcSolidModel_Dim"
msgstr "Dim"

msgid "IfcSolidModel_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:11033
msgid "IfcSphere"
msgstr "IfcSphere"

msgid "IfcSphere_DEFINITION"
msgstr "[[IfcSphere]] - это трехмерная примитив ЦГН конструируемая геометрия. Это твердая, где все точки на поверхности имеют одинаковое расстояние от центральной точки. Атрибут унаследованного положения определяет IfcAxisPlacement3D и предоставляет SELF [[IfcCsgPrimitive3D]]. osition The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The center of the sphere. SELF [[IfcCsgPrimitive3D]].Position. osition 3 Ось z находится в направлении к северу и в отрицательных направлениях к южному полюсу. Рис. 1 иллюстрирует геометрические параметры сферы, размещаемые в пределах своей системы координат координат объекта. Происхождение - центр сферы. Рисунок 1 геометрия сферы. xtDef NOTE Определение в соответствии с ISO CD 10303 42 1992 A сферу представляет собой примитивность CSG со сферической формой, определенной центром и радиусом. ПРИМЕЧАНИЕ Сущность, адаптированная к сфере определенных в ISO 10303 42. ИСТОРИЯ Новая сущность в IFC2x3. se head Texture Use Definition Textures выравниваются перед вертикальной осью с началом поворота Y в обратном счетчике по часовой стрелке. Текстуры растягиваются или повторяются в пределах окружности экватора в соответствии с RepeatS и RepeatT. Рисунок 2 иллюстрирует отображение текстур по умолчанию с заостренной текстурой RepeatS False и RepeatT False . Изображение слева показывает текстуру, в которой ось S находится вправо, а ось Т. Изображение справа показывает текстуру, применяемую к геометрии, где ось X находится вправо, ось Y находится влево и ось Z оси. .gridtable сбоку нормального происхождения X Origin Y Origin Z Axis T Axis Side Y 0 Radius 0 X, затем счетчик кривой по часовой стрелке Z, затем кривизну к верхней фигуре 2 Sphere текстуры"

#:IFC.xml:11034
msgid "IfcSphere_Radius"
msgstr "Radius"

msgid "IfcSphere_Radius_DEFINITION"
msgstr "Радиус сферы."

#:IFC.xml:11041
msgid "IfcSurfaceCurveSweptAreaSolid"
msgstr "IfcSurfaceCurveSweptAreaтвердый"

msgid "IfcSurfaceCurveSweptAreaSolid_DEFINITION"
msgstr "The [[IfcSurfaceCurveSweptAreaSolid]] is the result of sweeping an area along a directrix that lies on a reference surface. The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the tangent of the directrix at this point, and the profile s x axis agrees to the surface normal. At any point along the directrix, the swept profile origin lies on the directrix, the profile s normal points towards the tangent of the directrix, and the profile s x axis is identical to the surface normal at this point. NOTE The profile area s normal has to be identical to the tangent of the directrix at any given point. In case of a directrix having a linear segment at the start point, the segment has to be perpendicular to the profile at start. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , the parameter value is provided based on the curve parameterization. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , the parameter value is provided based on the curve parameterization. If no EndParam is provided the end defaults to the end of the directrix. The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE The StartParam and the EndParam are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. In case of a closed curve, such as [[IfcCircle]] or [[IfcEllipse]] , as the directrix, StartParam and the EndParam shall not exceed the parametic range, they shall not be 360 . EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In most cases, it is a plane or a surface of extrusion. The directrix lies on the surface, in case of a plane it might be defined as a polyline or composite curve, in case of a cylindrical or other non planer reference surface it might often be defined as a p curve on this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system of the implicit plane lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the normal of the reference surface at this point. The Axis2 the y axis, or v is constructed. The resulting body of the swept solid is not repositioned if the inherited Position attribute is omitted. Otherwise the coordinate system established by the Position attribute is used to reposition the body relative to the object coordinate system. EXAMPLE Figure 1 illustrates an example using a cylindrical reference surface and a p curve for sweeping a rectangle. The Postion is not provided and therefore it does not reposition the resulting swept solid. Figure 2 shows the expected result.NOTE The start of the directrix lies at the origin of the object coordinate system, as shown in the illustration,only by coincidence. The start of the directrix and thereby the start of the sweeping operation might be at any point within the object coordinate system and only depends on the position of the directrix.Figure 1 Surface curve wept area solid parameter Figure 2 Surface curve wept area solid results .extDef NOTE Definition according to ISO CD 10303 42 1992 A surface curve swept area solid is a type of swept area solid which is the result of sweeping a face along a Directrix lying on a ReferenceSurface . The orientation of the SweptArea is related to the direction of the surface normal. The SweptArea is required to be a curve bounded surface lying in the plane z 0 and this is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the normal to the ReferenceSurface at the current point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a Cartesian Transformation Operator 3D with attributes Local origin as point 0., 0., 0 , Axis 1 as the normal N to the reference surface at the point of the directrix with parameter u. Axis 3 as the direction of the tangent vector t at the point of the directrix with parameter u. The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the directrix parameter u. NOTE Entity adapted from surface curve swept area solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The SweptArea shall lie in the implicit plane z 0. 2. The Directrix shall lie on the ReferenceSurface ."

#:IFC.xml:11044
msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface"
msgstr "Справочная поверхность"

msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface_DEFINITION"
msgstr "Справочная поверхность"

#:IFC.xml:11056
msgid "IfcSweptAreaSolid"
msgstr "IfcSweptAreaSolid"

msgid "IfcSweptAreaSolid_DEFINITION"
msgstr "[[IfcSweptAreaSolid]] представляет трехмерную форму обширной схемой представления, позволяющей два плоскости-сечения перемещать пространство. Площадь потока определяется перекрёстной секцией, представленной подтипом [[IfcProfileDef]] , что предусмотрено в качестве закрытой двухмерной границы на неявной плоскости. Область отсечения определена в цветовой плоскости системы координат объекта. Операция перетаскивания применяется к области перемещения, определенной в подтипах [[IfcSweptAreaSolid]] , Некоторые подтипы требуют неявного преобразования области сметаны в начальную позицию сметаны. Необязательная система координат Positio n позволяет позиционировать результирующую твердость относительно системы координат объекта. .extDef ПРИМЕЧАНИЕ Определение в соответствии с ISO CD 10303 42 1992 The swept area solid entity collects which are defined procedalally by sweeping action on planar bounded surface Позиция – это пространство тепла, которая будет зависеть от расположения тепла. Площадь вытеса будет лицом результирующей зоны надежно за исключением случая вращенной площадки с углом 2<unk> или 360 градусов . ПРИМЕЧАНИЕ Сущность, адаптированная на основе прочности, определенной в ISO 10303 42. Новая сущность в IFC1.5 .change ifc2x4 IFC4 CHANGE Позиция атрибутов была изменена на OPTIONAL с совместимостью вверх для обмена файлами."

#:IFC.xml:11059
msgid "IfcSweptAreaSolid_SweptArea"
msgstr "SweptArea"

msgid "IfcSweptAreaSolid_SweptArea_DEFINITION"
msgstr "Поверхность, определяющая область, которая должна быть перемещена, дана в качестве определения профиля в плоскости xy-координатной системы."

#:IFC.xml:11071
msgid "IfcSweptAreaSolid_Position"
msgstr "Позиция"

msgid "IfcSweptAreaSolid_Position_DEFINITION"
msgstr "Система координат позиционирования результирующего твердого твердого тела, позволяющая позиционировать прочность. Если не предусмотрено, то твердость будет оставаться в положении, определенном поперечным сечением или режиссером, используемым для операции переделки. .change ifc2x4 IFC4 CHANGE Атрибут был изменен на OPTIONAL с совместимостью вверх для обмена файлами."

#:IFC.xml:11083
msgid "IfcSweptDiskSolid"
msgstr "IfcSweptDiskSolid"

msgid "IfcSweptDiskSolid_DEFINITION"
msgstr "An [[IfcSweptDiskSolid]] represents the 3D shape by a sweeping representation scheme allowing a two dimensional circularly bounded plane to sweep along a three dimensional Directrix through space. The StartParam and EndParam parameter are optional, if not provided they default to the start and end of the Directrix . Only if the Directrix is given by a bounded or by a closed curve, it is permissible to omit the values of StartParam and EndParam . If the transitions between consecutive segments of the Directrix are not tangent continuous, the resulting solid is created by a miter at half angle between the two segments. Informal proposition restricts the permissible angle between two non tangent continuous segments. Figure 1 illustrates an example. Directrix given as [[IfcIndexedPolyCurve]] , having linear and circular arc segments, that are tangent continuous between each segments Directrix being a bounded and open curve No StartParam and EndParam are provided, start and end default to start and end of the bounded curve of the Directrix NOTE Although the example shows a Directrix as a poly curve on a planar reference surface, the definition of [[IfcSweptDiskSolid]] is not restricted to be based on planer curves. However view definitions or implementer agreements may provide restrictions. NOTE The geometric item [[IfcIndexedPolyCurve]] provides a more compact representation compared with [[IfcCompositeCurve]] as is therefore the prefered curve representation for the Directrix . disk solid .. .. .. .. figures ifcsweptdisksolid layout1.png Figure 1 Swept disk solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A swept disk solid is the solid produced by sweeping a circular disk along a three dimensional curve. During the sweeping operation the normal to the plane of the circular disk is in the direction of the tangent to the directrix curve and the center of the disk lies on the directrix. The circular disk may, optionally, have a central hole, in this case the resulting solid has a through hole, or, an internal void when the directrix forms a close curve. NOTE Entity adapted from swept disk solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE The attribute StartParam and EndParam have been made optional. .spec head Informal Propositions 1. If the Directrix curve definition is not tangent continuous, the transition between the segments has to be within an acceptable limit of tangent discontinuity. Very sharp edges may result in nearly impossible miter. Implementer agreements may define acceptable limits for tangent discontinuity. 2. The segments of the Directrix shall be long enough to apply the Radius . In case of an arc segment forming part of the Directrix , its radius shall be greater then the disk Radius 3. The Directrix shall not be based on an intersecting curve."

#:IFC.xml:11106
msgid "IfcSweptDiskSolid_Directrix"
msgstr "Директрикс"

msgid "IfcSweptDiskSolid_Directrix_DEFINITION"
msgstr "Кривая, используемая для определения операции перекачивания тела, образуется путем смещения круглого диска по директрису ."

#:IFC.xml:11084
msgid "IfcSweptDiskSolid_EndParam"
msgstr "ЭндПарам"

msgid "IfcSweptDiskSolid_EndParam_DEFINITION"
msgstr "Значение параметра Directrix в котором заканчивается операция подкрашивания. Если значение не получено, то конец операции пересадки находится в конце режиссера . .change ifc2x4 IFC4 CHANGE Атрибут был изменен на OPTIONAL с совместимостью вверх для обмена файлами."

#:IFC.xml:11089
msgid "IfcSweptDiskSolid_InnerRadius"
msgstr "InnerRadius"

msgid "IfcSweptDiskSolid_InnerRadius_DEFINITION"
msgstr "Этот атрибут является необязательным, если он задает радиус круглой дыры в центре диска."

#:IFC.xml:11094
msgid "IfcSweptDiskSolid_Radius"
msgstr "Radius"

msgid "IfcSweptDiskSolid_Radius_DEFINITION"
msgstr "Радиус кругового диска, который должен быть перемещен по директрису , обозначает внешний радиус при наличии внутреннего радиуса."

#:IFC.xml:11099
msgid "IfcSweptDiskSolid_StartParam"
msgstr "StartParam"

msgid "IfcSweptDiskSolid_StartParam_DEFINITION"
msgstr "Значение параметра Directrix начинается с операции подкрашивания. Если значение не задано, то начало операции подражания в начале режиссера . .change ifc2x4 IFC4 CHANGE Атрибут был изменен на OPTIONAL с совместимостью вверх для обмена файлами."

#:IFC.xml:11118
msgid "IfcSweptDiskSolidPolygonal"
msgstr "IfcSweptDiskSolidPolygonal"

msgid "IfcSweptDiskSolidPolygonal_DEFINITION"
msgstr "[[IfcSweptDiskSolidPolygonal]] — это [[IfcSweptDiskSolid]], когда Directrix ограничено только полированной линией. Можно установить необязательный атрибут FilletRadius, который будет применяться в качестве фильтра ко всем переходам между сегментами полиуретановой линии. ЗАМЕЧАНИЕ геометрической позиции [[IfcIndexedPolyCurve]] обеспечивает более компактное представление по сравнению с [[IfcPolyline]] . Поэтому это предпочтительное представление кривой Directrix . [[IfcIndexedPolyCurve]] не должен иметь определенных сегментов, переставляя их только на полимерную линию. HISTORY New entity in IFC4, .spec head Informal Propositions 1. Радиус файла , если он предусмотрен, должно быть меньше или равно длине начала и конечного сегмента [[IfcPolyline]], и меньше или равно половине длины самого короткого внутреннего звена."

#:IFC.xml:11119
msgid "IfcSweptDiskSolidPolygonal_FilletRadius"
msgstr "Радиус файла"

msgid "IfcSweptDiskSolidPolygonal_FilletRadius_DEFINITION"
msgstr "Филе равномерно применяется ко всем переходам между звеньями [[IfcPolyline]] , предоставление геометрического представления для Directrix . Если опущено, то к звеньям не применяется ни один филе."

#:IFC.xml:11126
msgid "IfcTaperedSweptAreaProfiles__StartArea"
msgstr "IfcTaperedSweptAreaProfiles StartArea"

#:IFC.xml:11134
msgid "IfcTessellatedFaceSet"
msgstr "IfcTessellatedFaceSet"

msgid "IfcTessellatedFaceSet_DEFINITION"
msgstr "[[IfcTessellatedFaceSet]] это топологическая модель границы, ограниченная плоскостями и прямыми краями. Она может представлять собой аппроксимацию аналитической поверхности или твердого материала, которая может быть представлена в дополнение к ее тестированию в качестве отдельного представления формы. [[IfcTessellatedFaceSet]] предоставляет компактное представление соединенного набора лиц с использованием индексов в упорядоченные списки вершин, нормальные, цветовые и текстурные карты. ПРИМЕЧАНИЕ. Компактное представление позволяет использовать небольшие наборы данных, несмотря на потенциально большие наборы лиц, края и вершины, необходимые для представления теселлеров с аналитическими поверхностями и твердыми веществами, и несмотря на большие комплекты информации о цвете и текстуре для нотации тестируемых лиц. [[IfcTessellatedFaceSet]] — абстрактный супертип яичника, устанавливающий каждое навязывающее конкретные ограничения на образование лица для тестирования, Триангуляция с полосками и вентиляторами , четырёхугольники или многоугольные лица с внутренними петлями или без них . ПРИМЕЧАНИЕ Не все различные ограничения на наборы лиц включены в качестве конкретных подтипов в этот выпуск спецификации. Следующие атрибуты применяются ко всем подтипам Координаты являются упорядоченным списком декартовых точек, представляющих вершины отнесенного пункта. Список индексов, определяемый на уровне подтипов, использует точки, идентифицированные по позиции индекса, для построения полилиний, представляющих лица. Обратная связь HasColours содержит индексированную цветовую карту с соответствующим списком показателей, обеспечивающих цвет для каждой стороны тусельного набора лица. Обратная связь HasTextures обеспечивает инверсную текстуру индексированной картой с соответствующим списком показателей, обеспечивающих координаты текстуры, сопоставляемые с геометрическими координатами полилиний, представляющих лица. Каждая поверхность нагнетаемого нагнетаемого лица должна иметь по меньшей мере три вершины несовпадающих вертикалей, определяющие вертикали планарных многоугольников, определяющие самопересекающийся многоугольник. ПРИМЕЧАНИЕ определение [[IfcTessellatedFaceSet]] основано на indexedFaceSet , определенном в ISO IEC 19775 1 ИСТОРИЯ Новая сущность в IFC4."

#:IFC.xml:10506
msgid "IfcTessellatedFaceSet_Coordinates"
msgstr "Координаты"

msgid "IfcTessellatedFaceSet_Coordinates_DEFINITION"
msgstr "упорядоченный список декартовых точек, используемых координатным индексом, определенным в подтипах [[IfcTessellatedFaceSet]]."

#:IFC.xml:11148
msgid "IfcTessellatedFaceSet_HasColours"
msgstr "Часы цвета"

msgid "IfcTessellatedFaceSet_HasColours_DEFINITION"
msgstr "Ссылка на индексированную цветовую карту с соответствующими значениями RGB для граней подтипов [[IfcTessellatedFaceSet]] ."

#:IFC.xml:11162
msgid "IfcTessellatedFaceSet_HasTextures"
msgstr "Текстуры"

msgid "IfcTessellatedFaceSet_HasTextures_DEFINITION"
msgstr "Ссылка на индексированную карту текстуры, обеспечивающую координаты текстуры к вершинам, граничащим с поверхностями подтипов [[IfcTessellatedFaceSet]]."

#:IFC.xml:11135
msgid "IfcTessellatedFaceSet_Dim"
msgstr "Dim"

msgid "IfcTessellatedFaceSet_Dim_DEFINITION"
msgstr "The space dimensionality of this geometric representation item, it is always 3."

#:IFC.xml:11140
msgid "IfcTessellatedFaceSet_Closed"
msgstr "Закрыто"

msgid "IfcTessellatedFaceSet_Closed_DEFINITION"
msgstr "Закрыто"

#:IFC.xml:11176
msgid "IfcTessellatedItem"
msgstr "IfcTessellatedItem"

msgid "IfcTessellatedItem_DEFINITION"
msgstr "[[IfcTessellatedItem]] — абстрактный супертип всех испытанных геометрических моделей. ИСТОРИЯ Новая сущность в IFC4."

#:IFC.xml:11179
msgid "IfcTextureCoordinateIndices"
msgstr "Индексы IfcTextureкоординат"

#:IFC.xml:10705
msgid "IfcTextureCoordinateIndices_TexCoordsOf"
msgstr "TexCoordsOf"

msgid "IfcTextureCoordinateIndices_TexCoordsOf_DEFINITION"
msgstr "TexCoordsOf"

#:IFC.xml:10730
msgid "IfcTextureCoordinateIndices_ToTexMap"
msgstr "Карта текста"

msgid "IfcTextureCoordinateIndices_ToTexMap_DEFINITION"
msgstr "Карта текста"

#:IFC.xml:11180
msgid "IfcTextureCoordinateIndices_TexCoordIndex"
msgstr "TexCoordIndex"

msgid "IfcTextureCoordinateIndices_TexCoordIndex_DEFINITION"
msgstr "TexCoordIndex"

#:IFC.xml:11186
msgid "IfcTextureCoordinateIndicesWithVoids"
msgstr "IfcTextureCoordinateIndicesWithVoids"

#:IFC.xml:11187
msgid "IfcTextureCoordinateIndicesWithVoids_InnerTexCoordIndices"
msgstr "Индексы InnerTexTexes"

msgid "IfcTextureCoordinateIndicesWithVoids_InnerTexCoordIndices_DEFINITION"
msgstr "Индексы InnerTexTexes"

#:IFC.xml:11194
msgid "IfcTriangulatedFaceSet"
msgstr "IfcTriangulatedFaceSet"

msgid "IfcTriangulatedFaceSet_DEFINITION"
msgstr "The [[IfcTriangulatedFaceSet]] is a tessellated face set with all faces being bound by triangles. The faces are constructed by implicit polylines defined by three Cartesian points. Depending on the value of the attribute Closed the instance of [[IfcTriangulatedFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The coordinates of each point are provided by a one based index into an ordered list of Cartesian points provided by the two dimensional list CoordIndex , where the first dimension of the two dimensional list addresses the list of triangular faces the second dimension of the two dimensional list provides exactly three indices. Each index points to a Cartesian point being a vertex of the triangle. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifctriangulatedfaceset 03.png Figure 1 Use of PnIndex See Figure 2 for using the [[IfcTriangulatedFaceSet]] without as default and with using the PnIndex . [[IfcTriangulatedFaceSet]] 01 .. .. .. .. figures ifctriangulatedfaceset 01.png Figure 2 Triangulated face set Optionally normals can be provided. Only normals per vector are supported allowing for visually curved triangles when the three normals of the corresponding three vertices of a triangle are not co linear to the normal of the triangular face. If they are identical, normals shall be omited. NOTE In case of a body representation having triangular faces with curvature, different normals for all three vertices in context of this triangles are exported, describing the curvature for smooth visualisation. In case of triangular faces with no curvature, the three vertex based normals are identical and could always be computed from the face. Therefore vertices should only be exported to support smooth visualisation by curvature of triangles. In case of faceted representation no vertices should be exported. Normals are provided by the two dimensional list Normals , where the first dimension of the two dimensional list addresses the corresponding list of vertex indices of the triangular faces the second dimension of the two dimensional list provides exactly three real values to determine the direction of the normal at this vertex of the triangle. The indices in the CoordIndex point into the list of Normals . The indices of CoordIndex are applied to both points, either directly directly, or via the PnIndex and normals. See Figure 3 for handling of normals. [[IfcTriangulatedFaceSet]] 02 .. .. .. .. figures ifctriangulatedfaceset 02.png Figure 3 Triangulated face set with normals NOTE Using corresponding lists of points and normals allows to use only a single list of indices into both at the expense of having non unique collections of vertices. Figure 4 shows the use of [[IfcTriangulatedFaceSet]] without annotation. The diagram of the [[IfcTriangulatedFaceSet]] represents the indices and the ordered list into which the indices point. The index starts with 1 indexed as 1 to N , if the greatest index in CoordIndex in N, then the [[IfcCartesianPointList]] shall have N lists of 3 3 coordinates. Figure 168 shows an [[IfcTriangulatedFaceSet]] represented by CoordIndex 1,6,5 , 1,2,6 , 6,2,7 , 7,2,3 , 7,8,6 , 6,8,5 , 5,8,1 , 1,8,4 , 4,2,1 , 2,4,3 , 4,8,7 , 7,3,4 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 4 Triangulated face set geometry NOTE The definition of [[IfcTriangulatedFaceSet]] is based on the indexedFaceSet and indexedTriangleSet defined in ISO IEC 19775 1. The use of PnIndex has been adopted from triangulated surface set defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two boundaries of faces the topological normal at each point on the boundary of the triangulated face set shall point away from the mater ial of the solid."

#:IFC.xml:11195
msgid "IfcTriangulatedFaceSet_NumberOfTriangles"
msgstr "Количество треугольников"

msgid "IfcTriangulatedFaceSet_NumberOfTriangles_DEFINITION"
msgstr "Задуманное количество треугольников, используемых для этого треугольника."

#:IFC.xml:11200
msgid "IfcTriangulatedFaceSet_CoordIndex"
msgstr "CoordIndex"

msgid "IfcTriangulatedFaceSet_CoordIndex_DEFINITION"
msgstr "Двумерный список для индексированных треугольников, где первое измерение представляет треугольники от 1 до N Второе измерение имеет точно три значения, представляющие индексы до трех вершин от 1 до 3 . ПРИМЕЧАНИЕ Координаты вершин предоставляются в индексированном списке SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList ."

#:IFC.xml:11205
msgid "IfcTriangulatedFaceSet_Normals"
msgstr "Нормалы"

msgid "IfcTriangulatedFaceSet_Normals_DEFINITION"
msgstr "Организованный список трех направлений для нормальных – двухмерный список направлений, предоставляемых тремя параметрами. Первое измерение соответствует вершинным индексам Coordindex У второго измерения ровно три значения, 1 направление х, 2 направление оси y и 3 направления оси z"

#:IFC.xml:11210
msgid "IfcTriangulatedFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcTriangulatedFaceSet_PnIndex_DEFINITION"
msgstr "Список целых чисел, определяющих местоположение в [[IfcCartesianPointList3D]], чтобы получить координаты точки для индексов без индекса CoordIndex . Если PnIndex не указан, то точка указателей непосредственно на [[IfcCartesianPointList3D]] ."

#:IFC.xml:11217
msgid "IfcTriangulatedIrregularNetwork"
msgstr "IfcTriangulatedIrregularNetwork"

msgid "IfcTriangulatedIrregularNetwork_DEFINITION"
msgstr "[[IfcTriangulatedIrregularNetwork]] — это трехугольный набор лица для представления горизонтальных поверхностей одной уникальной координаты Z для всех координат X и Y в пределах домена с дополнительными флагами для каждой грани с указанием разделительных линий между гранями или обозначением в качестве отверстия или недействительной. Треугольники определяются вертикалями в обратном порядке по часовой стрелке как просмотр сверху слева правая рука . Для визуализации приложения не должны отображать границы, где флаги выставлены отрицательными либо запятыми, либо недействительными, или возможным будущим расширением . Флаг Бездны используется для указания на то, что лица должны быть исключены без падения на любую другую геометрию. Такое обозначение может быть использовано для частей участка под зданием или другой структурой. Флаг Уол используется для указания на то, что лица должны быть исключены, но они могут возвращаться на другую геометрию. Для сценариев комбинирования множественных поверхностей, используемых в качестве входного материала, такое обозначение может быть использовано для тех частей предлагаемого участка, которые должны оставаться неизменными; любые треугольники, обозначенные как недействительные, в то время как любые треугольники, обозначенные как отверстия, должны быть переопределены, если на другой поверхности имеется видимая геометрия, определенная в том же горизонтальном положении."

#:IFC.xml:11218
msgid "IfcTriangulatedIrregularNetwork_Flags"
msgstr "Флаги"

msgid "IfcTriangulatedIrregularNetwork_Flags_DEFINITION"
msgstr "Указывает атрибуты каждого треугольника в компактной форме, следующим образом 2 невидимые отверстия 1 невидимые отверстия 0 без разделительной линии 1 на краю 1 2 разделительная линия на краях 2 3 разделительной линии на краях 1 и 2 4 деления на краях 3 5 девальвационная линия на краях 1 и 3 6 девальвационная линия на краях 2 и 3 7 девальвационной линии на краях 1, 2 и 3."

