msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Portuguese\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: pt\n"
"X-Crowdin-File: /master/IfcGeometricModelResource.pot\n"
"X-Crowdin-File-ID: 44\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: pt_PT\n"
"PO-Revision-Date: 2022-02-01 14:17\n"

#:IFC.xml:9830
msgid "IfcAdvancedBrep"
msgstr "IfcAdvancedBrep"

msgid "IfcAdvancedBrep_DEFINITION"
msgstr "An advanced B rep is a boundary representation model in which all faces, edges and vertices are explicitly represented. It is a solid with explicit topology and elementary or free form geometry. The faces of the B rep are of type [[IfcAdvancedFace]] . An advanced B rep has to meet the same topological constraints as the manifold solid B rep. NOTE The advanced B rep has been introduced in order to support the increasing number of applications that can define and exchange B rep models based on NURBS or other b spline surfaces. Figure 1 illustrates use of [[IfcAdvancedBrep]] for boundary representation models with b spline surfaces. The diagram shows the topological and geometric representation items that are used for advanced B reps, based on [[IfcAdvancedFace]]. Figure 1 Advanced Brep, b spline surface Figure 2 illustrates use of [[IfcAdvancedBrep]] for boundary representation models with elementary surfaces. The diagram shows the topological and geometric representation items that are used for advanced B reps, based on [[IfcAdvancedFace]]. It shows the use of [[IfcIntersectionCurve]] to provide the geometric representation of the edge curve both as 3D curve and as u,v pcurve in the parametric space of the adjacent surfaces. Figure 2 Advanced Brep, elementary surface NOTE Entity adapted from advanced brep shape representation defined in ISO 10303 514. HISTORY New entity in IFC4 .spec head Informal Propositions 1. each face is a face surface 2. each face surface has its geometry defined by an elementary surface, swept surface or a b spline surface 3. the edges used to define the boundaries of the face shall all reference an edge curve 4. each curve used to define the geometry of the faces and face bounds shall be either a conic, or a line or a polyline or a b spline curve 5. the edges used to define the face boundaries shall all be trimmed by vertices of type vertex point 6. no loop used to define a face bound shall be of the oriented subtype Formal Propositions HasAdvancedFaces Each face of the advanced B rep shall be of type [[IfcAdvancedFace]] ."

#:IFC.xml:9833
msgid "IfcAdvancedBrepWithVoids"
msgstr "IfcAdvancedBrepWithVoids"

msgid "IfcAdvancedBrepWithVoids_DEFINITION"
msgstr "The [[IfcAdvancedBrepWithVoids]] is a specialization of an advanced B rep which contains one or more voids in its interior. The voids are represented as closed shells which are defined so that the shell normal point into the void. NOTE Entity adapted from advanced brep shape representation defined in ISO 10303 42. HISTORY New entity in IFC4 .spec head Informal Propositions 1. Each void shell shall be disjoint from the outer shell and from every other void shell 2. Each void shell shall be enclosed within the outer shell but not within any other void shell. In particular the outer shell is not in the set of void shells 3. Each shell in the [[IfcManifoldSolidBrep]] shall be referenced only once. 4. All the faces of all the shells in the [[IfcAdvancedBrep]] and the [[IfcAdvancedBrepWithVoids]].Voids shall be of type [[IfcAdvancedFace]] ."

#:IFC.xml:9836
msgid "IfcAdvancedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcAdvancedBrepWithVoids_Voids_DEFINITION"
msgstr "Voids"

#:IFC.xml:9848
msgid "IfcBlock"
msgstr "Bloco"

msgid "IfcBlock_DEFINITION"
msgstr "The [[IfcBlock]] is a Construction Solid Geometry CSG 3D primitive. It is defined by a position and a positve distance along the three orthogonal axes. The inherited Position attribute has the IfcAxisPlacement3D type and provides SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The block has one vertex at location and the edges are aligned with the placement axes in the positive sense. The XLength , YLength , and ZLength attributes define the size of the [[IfcBlock]] along the three axes. Figure 1 illustrates geometric parameters of a block where the block positioned within its own placement coordinate system. The values for XLength, YLength, and ZLength are applied to the positive direction of the X, Y, and Z axis. Figure 1 Block geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A block is a solid rectangular parallelepiped, defined with a location and placement coordinate system. The block is specified by the positive lengths x, y, and z along the axes of the placement coordinate system, and has one vertex at the origin of the placement coordinate system. NOTE Entity adapted from block defined in ISO 10303 42. HISTORY New entity in IFC2x3. .use head Texture definition On each side face, textures are aligned facing upright. On the top and bottom faces, textures are aligned facing front to back. Textures are stretched or repeated to the extent of each face according to RepeatS and RepeatT . Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Left X 0 YLength 0 Y Z Right X XLength 0 0 Y Z Front Y 0 0 0 X Z Back Y XLength YLength 0 X Z Bottom Z 0 YLength 0 X Y Top Z 0 0 ZLength X Y Figure 2 Block textures"

#:IFC.xml:9849
msgid "IfcBlock_XLength"
msgstr "Comprimento"

msgid "IfcBlock_XLength_DEFINITION"
msgstr "O tamanho do bloco ao longo do eixo X do posicionamento. Ele é fornecido pelo posicionamento do eixo herdado através de SELF [[IfcCsgPrimitive3D]].Position.P 1."

#:IFC.xml:9854
msgid "IfcBlock_YLength"
msgstr "Comprimento"

msgid "IfcBlock_YLength_DEFINITION"
msgstr "O tamanho do bloco ao longo do eixo de posicionamento Y. Ele é fornecido pelo posicionamento do eixo herdado através de SELF [[IfcCsgPrimitive3D]].Position.P 2."

#:IFC.xml:9859
msgid "IfcBlock_ZLength"
msgstr "Comprimento"

msgid "IfcBlock_ZLength_DEFINITION"
msgstr "O tamanho do bloco ao longo do eixo Z da colocação. Ele é fornecido pelo posicionamento do eixo herdado através de SELF [[IfcCsgPrimitive3D]].Position.P 3."

#:IFC.xml:9866
msgid "IfcBooleanClippingResult"
msgstr "Resultado do IfcBooleanClipping"

msgid "IfcBooleanClippingResult_DEFINITION"
msgstr "A clipping result is defined as a special subtype of the general [[IfcBooleanResult]] . It constrains the operands and the operator of the Boolean result. A clipping result is the Boolean difference between a swept solid and a half space solid, or between the result of the Boolean difference and a half space solid. Hence more than one difference operation can be applied to achieve the final Boolean result. HISTORY New entity in IFC2x. Formal Propositions FirstOperandType The first operand of the Boolean clipping operation shall be either an [[IfcSweptAreaSolid]] or in case of more than one clipping an [[IfcBooleanResult]]. SecondOperandType The second operand of the Boolean clipping operation shall be an [[IfcHalfSpaceSolid]]. OperatorType The Boolean operator for clipping is always Difference ."

#:IFC.xml:9869
msgid "IfcBooleanOperand"
msgstr "IfcBooleanOperand"

#:IFC.xml:9870
msgid "IfcBooleanOperator"
msgstr "IfcBooleanOperator"

msgid "IfcBooleanOperator_DEFINITION"
msgstr "Boolean operators that apply to the first and second Boolean operands. .extDef NOTE Definition according to ISO CD 10303 42 1992 This type defines the three Boolean operators used in the definition of CSG solids. NOTE Entity adapted from boolean operator defined in ISO 10303 42. HISTORY New entity in IFC1.5.1. Items UNION INTERSECTION The operation of constructing the regularised set theoretic intersection of the volumes defined by two solids. DIFFERENCE The regularised set theoretic difference between the volumes defined by two solids."

#:IFC.xml:9871
msgid "IfcBooleanOperator_DIFFERENCE"
msgstr "DIFERÊNCIA"

msgid "IfcBooleanOperator_DIFFERENCE_DEFINITION"
msgstr "The regularised set theoretic difference between the volumes defined by two solids."

#:IFC.xml:9872
msgid "IfcBooleanOperator_INTERSECTION"
msgstr "INTERSECÇÃO"

msgid "IfcBooleanOperator_INTERSECTION_DEFINITION"
msgstr "The operation of constructing the regularised set theoretic intersection of the volumes defined by two solids."

#:IFC.xml:9873
msgid "IfcBooleanOperator_UNION"
msgstr "DESFAZER"

msgid "IfcBooleanOperator_UNION_DEFINITION"
msgstr "DESFAZER"

#:IFC.xml:9875
msgid "IfcBooleanResult"
msgstr "Resultado IfcBooleanAnalógico"

msgid "IfcBooleanResult_DEFINITION"
msgstr "The [[IfcBooleanResult]] is the result of applying a Boolean operation to two operands being solids. EXAMPLE If the first operand is a block and the second operand is a solid cylinder of suitable dimensions and location, the boolean result produced with the difference operator would be a block with a circular hole. .extDef NOTE Definition according to ISO CD 10303 42 1992 A Boolean result is the result of a regularized operation on two solids to create a new solid. Valid operations are regularized union, regularized intersection, and regularized difference. For purpose of Boolean operations, a solid is considered to be a regularized set of points. The final Boolean result depends upon the operation and the two operands. In the case of the difference operator the order of the operands is also significant. The operator can be either union, intersection or difference. The effect of these operators is described below Union on two solids is the new solid that is the regularization of the set of all points that are in either the first operand or the second operand or in both. Intersection on two solids is the new solid that is the regularization of the set of all points that are in both the first operand and the second operand. The result of the difference operation on two solids is the regularization of the set of all points which are in the first operand, but not in the second operand. NOTE Corresponding STEP type boolean result defined in ISO 10303 42. HISTORY New entity in IFC1.5.1."

#:IFC.xml:9876
msgid "IfcBooleanResult_Dim"
msgstr "Dim"

msgid "IfcBooleanResult_Dim_DEFINITION"
msgstr "A dimensão espacial desta entidade. É idêntica à dimensão espacial da primeira operação. Uma regra onde garante que os dois operários tenham a mesma dimensão espacial. Proposições formais"

#:IFC.xml:9881
msgid "IfcBooleanResult_FirstOperand"
msgstr "Primeiro Operário"

msgid "IfcBooleanResult_FirstOperand_DEFINITION"
msgstr "O primeiro operador a ser operado pela operação Booleana."

#:IFC.xml:9886
msgid "IfcBooleanResult_Operator"
msgstr "Operador"

msgid "IfcBooleanResult_Operator_DEFINITION"
msgstr "O operador booleano usou na operação para criar o resultado."

#:IFC.xml:9891
msgid "IfcBooleanResult_SecondOperand"
msgstr "Operador Secundário"

msgid "IfcBooleanResult_SecondOperand_DEFINITION"
msgstr "O segundo operador especificado para a operação."

#:IFC.xml:9900
msgid "IfcBoundingBox"
msgstr "IfcBoundingBox"

msgid "IfcBoundingBox_DEFINITION"
msgstr "The [[IfcBoundingBox]] defines an orthogonal box oriented parallel to the axes of the object coordinate system in which it is defined. It is defined by a Corner being a three dimensional Cartesian point and three length measures defining the X, Y and Z parameters of the box in the direction of the positive axes. NOTE Any subtype of [[IfcProduct]] having a product shape representation may have a bounding box representation. The Box representation identifier defined at [[IfcShapeRepresentation]] utilizes the [[IfcBoundingBox]] as the simpliest 3D shape representation. As shown in Figure 1, the [[IfcBoundingBox]] is defined with its own location which can be used to place the [[IfcBoundingBox]] relative to the geometric coordinate system. The [[IfcBoundingBox]] is defined by the lower left corner Corner and the upper right corner XDim, YDim, ZDim measured within the parent co ordinate system . Figure 1 Bounding box NOTE Corresponding STEP type box domain defined in ISO 10303 42. HISTORY New entity in IFC1.0."

#:IFC.xml:9923
msgid "IfcBoundingBox_Corner"
msgstr "Canto"

msgid "IfcBoundingBox_Corner_DEFINITION"
msgstr "Location of the bottom left corner having the minimum values ."

#:IFC.xml:9901
msgid "IfcBoundingBox_Dim"
msgstr "Dim"

msgid "IfcBoundingBox_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:9906
msgid "IfcBoundingBox_XDim"
msgstr "XDim"

msgid "IfcBoundingBox_XDim_DEFINITION"
msgstr "Comprimento do atributo medido ao longo da aresta paralelo para o eixo X"

#:IFC.xml:9911
msgid "IfcBoundingBox_YDim"
msgstr "YDim"

msgid "IfcBoundingBox_YDim_DEFINITION"
msgstr "Largura do atributo medido ao longo da borda paralelo ao eixo Y"

#:IFC.xml:9916
msgid "IfcBoundingBox_ZDim"
msgstr "Zescurecimento"

msgid "IfcBoundingBox_ZDim_DEFINITION"
msgstr "Atributo de altura medido ao longo da borda paralelo ao eixo Z."

#:IFC.xml:9947
msgid "IfcBoxedHalfSpace"
msgstr "IfcBoxedHalfSpace"

msgid "IfcBoxedHalfSpace_DEFINITION"
msgstr "The [[IfcBoxedHalfSpace]] is used as its supertype [[IfcHalfSpaceSolid]] only within Boolean operations. It divides the domain into exactly two subsets, where the domain in question is that of the attribute Enclosure . The purpose of the attribute Enclosure is to provide a search box for the other operand in the Boolean operation. It shall be sufficiently large to fully enclose the resulting solid after the Boolean operation with the half space. It however does not alter the final result. The result of the Boolean operation would be the same, as if executed by the supertype [[IfcHalfSpaceSolid]] . See Figure 1 below. correct use of enclosure .. .. .. .. figures ifcboxedhalfspace 01.png Figure 1 Boxed half space operands The [[IfcBoundingBox]] that provides the enclosure is given for the convenience of the receiving application to enable the use of size box comparison for efficiency for example, to check first whether size boxes intersect, if not no calculations has to be done to check whether the solids of the entities intersect . The Enclosure therefore helps to prevent dealing with infinite size related issues. The enclosure box is positioned within the object coordinate system, established by the ObjectPlacement of the element represented for example, by [[IfcLocalPlacement]] . Figure 2 shows the Enclosure box being sufficiently large to fully enclose the Boolean result. Figure 2 Boxed half space geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 This entity is a subtype of the half space solid which is trimmed by a surrounding rectangular box. The box has its edges parallel to the coordinate axes of the geometric coordinate system. The purpose of the box is to facilitate CSG computations by producing a solid of finite size. NOTE Entity adapted from boxed half space defined in ISO 10303 42. HISTORY New entity in IFC1.5.1 .change ifc2x4 IFC4 CHANGE Usage correct, position coordinate system for Enclosure is the object coordinate system."

#:IFC.xml:9935
msgid "IfcBoxedHalfSpace_Enclosure"
msgstr "Anexo"

msgid "IfcBoxedHalfSpace_Enclosure_DEFINITION"
msgstr "A caixa que limita o sólido resultado da operação booleana que envolve o sólido espaço de meio espaço apenas para fins computacionais. Proposições formais"

#:IFC.xml:9950
msgid "IfcCartesianPointList"
msgstr "Lista de IfcCartesianPoint"

msgid "IfcCartesianPointList_DEFINITION"
msgstr "The [[IfcCartesianPointList]] is the abstract supertype of list of points. NOTE The [[IfcCartesianPointList]] is introduced to provide a compact representation of potentially larger list of points, such as in point clouds, and in indexable representation of points. HISTORY New entity in IFC4."

#:IFC.xml:9951
msgid "IfcCartesianPointList_Dim"
msgstr "Dim"

msgid "IfcCartesianPointList_Dim_DEFINITION"
msgstr "The space dimensionality of this class, either 2 or 3, depending on the sub type."

#:IFC.xml:9970
msgid "IfcCartesianPointList2D"
msgstr "IfcCartesianPointList2D"

msgid "IfcCartesianPointList2D_DEFINITION"
msgstr "The [[IfcCartesianPointList2D]] defines an ordered collection of two dimentional Cartesian points. Each Cartesian point is provided as an two dimensional point by a fixed list of two coordinates. The attribute CoordList is a two dimensional list, where first dimension is an unbounded list representing each 2D Cartesian point second dimension is a fixed list of two list members, where 1 is the x coordinate, and 2 the y coordinate of the Cartesian point. NOTE The [[IfcCartesianPointList2D]] is introduced to provide a compact representation of larger list of points, such as in indexable representation of points used as vertices in poly curves. HISTORY New entity in IFC4 ADD1."

#:IFC.xml:9971
msgid "IfcCartesianPointList2D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList2D_CoordList_DEFINITION"
msgstr "Duas listas de pontos cartesianos apresentados por duas coordenadas."

#:IFC.xml:9976
msgid "IfcCartesianPointList2D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList2D_TagList_DEFINITION"
msgstr "Lista de tags correspondentes a cada ponto que pode ser usado para identificar uma curva de base de acordo com o atributo Tag em [[IfcOffsetCurveByDistances]] ou IfcAlinnmentCurve ."

#:IFC.xml:9983
msgid "IfcCartesianPointList3D"
msgstr "IfcCartesianPointList3D"

msgid "IfcCartesianPointList3D_DEFINITION"
msgstr "The [[IfcCartesianPointList3D]] defines an ordered collection of three dimentional Cartesian points. Each Cartesian point is provided as an three dimensional point by a fixed list of three coordinates. The attribute CoordList is a two dimensional list, where first dimension is an unbounded list representing each 3D Cartesian point second dimension is a fixed list of three list members, where 1 is the x coordinate, 2 the y coordinate and 3 the z coordinate of the Cartesian point. NOTE The [[IfcCartesianPointList]] is introduced to provide a compact representation of larger list of points, such as in point clouds, and in indexable representation of points used as vertices in tessellated items or poly curves. HISTORY New entity in IFC4."

#:IFC.xml:9984
msgid "IfcCartesianPointList3D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList3D_CoordList_DEFINITION"
msgstr "Duas listas de pontos cartesianos fornecidos por três coordenadas."

#:IFC.xml:9989
msgid "IfcCartesianPointList3D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList3D_TagList_DEFINITION"
msgstr "Lista de tags correspondentes a cada ponto que pode ser usado para identificar uma curva de base de acordo com o atributo Tag em [[IfcOffsetCurveByDistances]] ou IfcAlinnmentCurve ."

#:IFC.xml:10008
msgid "IfcCsgPrimitive3D"
msgstr "IfcCsgPrimitive3D"

msgid "IfcCsgPrimitive3D_DEFINITION"
msgstr "[[IfcCsgPrimitive3D]] is an abstract supertype of all three dimensional primitives used as either tree root item, or as Boolean results within a CSG solid model. All 3D CSG primitives are defined within a three dimensional placement coordinate system. HISTORY New entity in IFC2x3."

#:IFC.xml:10018
msgid "IfcCsgPrimitive3D_Position"
msgstr "Posição"

msgid "IfcCsgPrimitive3D_Position_DEFINITION"
msgstr "The placement coordinate system to which the parameters of each individual CSG primitive apply."

#:IFC.xml:10009
msgid "IfcCsgPrimitive3D_Dim"
msgstr "Dim"

msgid "IfcCsgPrimitive3D_Dim_DEFINITION"
msgstr "The space dimensionality of this geometric representation item, it is always 3."

#:IFC.xml:10030
msgid "IfcCsgSelect"
msgstr "IfcCsgSelect"

#:IFC.xml:10031
msgid "IfcCsgSolid"
msgstr "IfcCsgSolid"

msgid "IfcCsgSolid_DEFINITION"
msgstr "An [[IfcCsgSolid]] is the representation of a 3D shape using constructive solid geometry model. It is represented by a single 3D CSG primitive, or as a result of a Boolean operation. The operants of a Boolean operation can be Boolean operations themselves forming a CSG tree. The following volumes can be parts of the CSG tree Boundary representation models, such as [[IfcFacetedBrep]] , [[IfcFacetedBrepWithVoids]] , Closed tesselated representation modles, such as [[IfcPolygonalFaceSet]] , [[IfcTriangulatedFaceSet]] , Swept area solids, such as [[IfcExtrudedAreaSolid]] , [[IfcRevolvedAreaSolid]] , and their subtypes for tapering, Advanced swept area solids, such as [[IfcSurfaceCurveSweptAreaSolid]] , [[IfcFixedReferenceSweptAreaSolid]] , [[IfcSweptDiskSolid]] Half space solids, such as [[IfcHalfSpaceSolid]] and its subtypes , and CSG primitives, the subtypes of [[IfcCsgPrimitive3D]] . .extDef NOTE Definition according to ISO CD 10303 42 1992 A solid represented as a CSG model is defined by a collection of so called primitive solids, combined using regularized Boolean operations. The allowed operations are intersection, union, and difference. As a special case a CSG solid can also consists of a single CSG primitive. A CSG solid requires two kinds of information for its complete definition geometric and structural. The geometric information is conveyed by solid models. These typically primitive volumes such as cylinders, wedges and extrusions, but can include general B Rep models. Solid models can also be half space solids. The structural information is in a tree strictly an acyclic directed graph of Boolean result and CSG solids, which represent a recipe for building the solid. The terminal nodes are the geometric primitives and other solids. Every CSG solid has precisely one Boolean result associated with it which is the root of the tree that defines the solid. There may be further Boolean results within the tree as operands . The significance of a CSG solid entity is that the solid defined by the associated tree is thus identified as a significant object itself, and in this way it is distinguished from other Boolean result entities representing intermediate results during the construction process. NOTE Entity adapted from csg solid is defined in ISO 10303 42. HISTORY New entity in IFC1.5.1"

#:IFC.xml:10032
msgid "IfcCsgSolid_TreeRootExpression"
msgstr "Expressão"

msgid "IfcCsgSolid_TreeRootExpression_DEFINITION"
msgstr "Expressão booleana dos primitivos e dos operadores regularizados que descrevem os sólidos. A raiz da árvore das expressões booleanas é dada explicitamente como uma entidade [[IfcBooleanResult]] ou como um subtipo primitivo de [[IfcCsgPrimitive3D]]."

#:IFC.xml:10039
msgid "IfcDirectrixDerivedReferenceSweptAreaSolid"
msgstr "IfcDirectrixDerivedReferenceSweptAreaSolid"

#:IFC.xml:10042
msgid "IfcExtrudedAreaSolid"
msgstr "IfcExtrudedAreaSólida"

msgid "IfcExtrudedAreaSolid_DEFINITION"
msgstr "The [[IfcExtrudedAreaSolid]] is defined by sweeping a cross section provided by a profile definition. The direction of the extrusion is given by the ExtrudedDirection attribute and the length of the extrusion is given by the Depth attribute. If the planar area has inner boundaries holes defined , then those holes shall be swept into holes of the solid. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the extruded solid. If not provided, it defaults to the current object coordinate system. The ExtrudedDirection is given within the position coordinate system as defined by [[IfcSweptAreaSolid]] . Position . The extruded direction can be any direction which is not perpendicular to the z axis of the position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The result is a solid. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. Figure 1 Extruded area solid geometry EXAMPLE Figure 2 illustrates geometric parameters and additional positioning parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the y axis. Figure 2 Repositioned extruded area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 An extruded area solid is a solid defined by sweeping a bounded planar surface. The direction of translation is defined by a direction vector, and the length of the translation is defined by a distance depth. The planar area may have holes which will sweep into holes in the solid. NOTE Entity adapted from extruded area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .use head Texture use definition For side faces, textures are aligned facing upright continuously along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the extrusion axis according to RepeatT . For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. EXAMPLE Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcExtrudedAreaSolid]] having a profile of [[IfcIShapeProfileDef]], the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth . Figure 3 Extruded area solid textures"

#:IFC.xml:10050
msgid "IfcExtrudedAreaSolid_ExtrudedDirection"
msgstr "Direção extrtrudadaformat@@0"

msgid "IfcExtrudedAreaSolid_ExtrudedDirection_DEFINITION"
msgstr "The direction in which the surface, provided by SweptArea is to be swept."

#:IFC.xml:10043
msgid "IfcExtrudedAreaSolid_Depth"
msgstr "Profundidade"

msgid "IfcExtrudedAreaSolid_Depth_DEFINITION"
msgstr "A distância que a superfície deve ser varrida pela ExtrudedDirection . Proposições formais"

#:IFC.xml:10062
msgid "IfcExtrudedAreaSolidTapered"
msgstr "IfcExtrudedAreaSolidTapered"

msgid "IfcExtrudedAreaSolidTapered_DEFINITION"
msgstr "[[IfcExtrudedAreaSolidTapered]] is defined by sweeping a cross section along a linear spine. The cross section may change along the sweep from the shape of the start cross section into the shape of the end cross section. The resulting solid is bounded by three or more faces A start face, an end face each defined by start and end planes and sections , and one or more lateral faces. Each lateral face is a ruled surface defined by a pair of corresponding edges of the start and end section. NOTE Given that the start and end section is provided by a polygon, the corresponding vertices of the start and end cross section are connected, forming a quadrilateral polygon between each pair of corresponding vertices. The surface defined by the bounding quadrilateral polygon is a ruled surface, that could be approximated by triangulation. The linear spine is defined by Start point SELF [[IfcSweptAreaSolid]].Position.Location Direction SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection Distance SELF [[IfcExtrudedAreaSolid]].Depth The start cross section is defined by SELF [[IfcSweptAreaSolid]].SweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by SELF [[IfcSweptAreaSolid]].Position.P 1 and SELF [[IfcSweptAreaSolid]].Position.P 2 The linear spine starts at the plane of the start cross section. The spine is not necessarily perpendicular to the plane. The end cross section is defined by EndSweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by translating the start position coordinates provided by SELF [[IfcSweptAreaSolid]].Position along the spine direction by the spine distance. The plane of the end cross section is coplanar to the plane of the start cross section. The end cross section is topologically similar to the start cross section i.e. having the same number of vertices and edges . The end cross section can either be defined by the same paramteric profile using different parameter values, or by a 2D Cartesian transformation of the start profile within the end cross section plane. In case of two parameterized profiles the shape is constructed as follows The end profile, defined by a cross section based on the same profile paramterization as the start profile, is translated by the spine distance along the spine direction. It may be shifted within the XY plane of the end postion coordinate system and may be twisted using the rotation parameter. The shift and rotation parameter are provided by the end cross section being of type [[IfcParameterizedProfileDef]] , where Shift is EndSweptArea [[IfcParameterizedProfileDef]].Position.Location Rotation is EndSweptArea [[IfcParameterizedProfileDef]].Position.RefDirection Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. In case of Cartesian transformation of the start cross section the shape is constructed as follows The cross section curve, which starts as a curve in the XY plane of the position coordinate system, is first scaled about the origin by the scale parameter. It is then translated by the spine distance along the spine direction. It maybe twisted by using the rotation parameter. The scale and rotation parameter are provided by the end cross section being of type [[IfcDerivedProfileDef]] , where Scale is EndSweptArea [[IfcDerivedProfileDef]].Operator.Scale Rotation is EndSweptArea [[IfcDerivedProfileDef]].Operator.Axis1 Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. HISTORY New entity in IFC4. .spec head Informal Propositions 1. Mirroring within [[IfcDerivedProfileDef]].Operator shall not be used"

#:IFC.xml:10065
msgid "IfcExtrudedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcExtrudedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "A superfície que define o fim da área varreda. É dada como uma definição de perfil. O sistema de coordenadas de posição da EndSwptArea é gerado traduzindo o SELF [[IfcSweptAreaSolid]]. osição ao longo do SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection pela distância de SELF [[IfcExtrudedAreaSolid]].Proposições formais"

#:IFC.xml:10077
msgid "IfcFaceBasedSurfaceModel"
msgstr "IfcFaceBasedSurfaceModel"

msgid "IfcFaceBasedSurfaceModel_DEFINITION"
msgstr "The [[IfcFaceBasedSurfaceModel]] represents the a shape by connected face sets. The connected faces have a dimensionality 2 and are placed in a coordinate space of dimensionality 3. .extDef NOTE Definition according to ISO CD 10303 42 1992 A face based surface model is described by a set of connected face sets of dimensionality 2. The connected face sets shall not intersect except at edges and vertices, except that a face in one connected face set may overlap a face in another connected face set, provided the face boundaries are identical. There shall be at least one connected face set. A connected face set may exist independently of a surface model. NOTE Entity adapted from face based surface model defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The connected face sets shall not overlap or intersect except at common faces, edges or vertices. 2. The fbsm faces have dimensionality 2. .deprecated IFC4 CHANGE The entity has been deprecated and shall not be used. The entity [[IfcFacetedBrep]] shall be used instead."

#:IFC.xml:10086
msgid "IfcFaceBasedSurfaceModel_FbsmFaces"
msgstr "Faces"

msgid "IfcFaceBasedSurfaceModel_FbsmFaces_DEFINITION"
msgstr "The set of connected face sets comprising the face based surface model."

#:IFC.xml:10078
msgid "IfcFaceBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcFaceBasedSurfaceModel_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:10098
msgid "IfcFacetedBrep"
msgstr "Brep"

msgid "IfcFacetedBrep_DEFINITION"
msgstr "The [[IfcFacetedBrep]] is a manifold solid brep with the restriction that all faces are planar and bounded polygons. NOTE Use of [[IfcFacetedBrep]] is restricted for boundary representation models with planar surfaces only. Those surfaces are implicitly represented by the bounding polygons. The diagram shows the topological and geometric representation items that are used for faceted breps. Each [[IfcCartesianPoint]], used within the [[IfcFacetedBrep]] shall be referenced three times by an [[IfcPolyLoop]] bounding a different [[IfcFace]]. Figure 1 Diagram showing the use of [[IfcFacetedBrep]] .extDef NOTE Definition according to ISO CD 10303 42 1992 A faceted B rep is a simple form of boundary representation model in which all faces are planar and all edges are straight lines. Unlike the B rep model, edges and vertices are not represented explicitly in the model but are implicitly available through the poly loop entity. A faceted B rep has to meet the same topological constraints as the manifold solid B rep. .extDef The faceted B rep has been introduced in order to support the larger number of systems that allow boundary type solid representations with planar surfaces only. NOTE Entity adapted from manifold solid brep defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. All the bounding loops of all the faces of all the shells in the [[IfcFacetedBrep]] shall be of type [[IfcPolyLoop]] . 2. All vertices shall be referenced by all polyloops, sharing the vertex. I.e., each Cartesian point shall be references by at least three polyloops."

#:IFC.xml:10101
msgid "IfcFacetedBrepWithVoids"
msgstr "IfcFacetedBrepWithVoids"

msgid "IfcFacetedBrepWithVoids_DEFINITION"
msgstr "The [[IfcFacetedBrepWithVoids]] is a specialization of a faceted B rep which contains one or more voids in its interior. The voids are represented as closed shells which are defined so that the shell normal point into the void. NOTE Entity adapted from brep with voids AND faceted brep defined in ISO 10303 42. HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE Subtyping changed from [[IfcManifoldSolidBrep]] to [[IfcFacetedBrep]] with upward compatibility for file based exchange. .spec head Informal Propositions 1. Each void shell shall be disjoint from the outer shell and from every other void shell 2. Each void shell shall be enclosed within the outer shell but not within any other void shell. In particular the outer shell is not in the set of void shells 3. Each shell in the [[IfcManifoldSolidBrep]] shall be referenced only once. 4. All the bounding loops of all the faces of all the shells in the [[IfcFacetedBrep]] shall be of type [[IfcPolyLoop]] ."

#:IFC.xml:10104
msgid "IfcFacetedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcFacetedBrepWithVoids_Voids_DEFINITION"
msgstr "Set of closed shells defining voids within the solid."

#:IFC.xml:10116
msgid "IfcFixedReferenceSweptAreaSolid"
msgstr "IfcFixedReferenceSweptAreaSolid"

msgid "IfcFixedReferenceSweptAreaSolid_DEFINITION"
msgstr "An [[IfcFixedReferenceSweptAreaSolid]] is a type of swept area solid which is the result of sweeping an area along a Directrix . The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the start tangent of the directrix at this point, and the profile s x axis agrees to the orthogonal projection of the FixedReference direction within the plane of start tangent and Fixed Reference . The orientation of the curve during the sweeping operation is controlled by the FixedReference direction. The SweptArea is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the projection of FixedReference onto the normal plane to the directrix at this point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The resulting swept solid is placed by the Position coordinate system. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no EndParam is provided the end defaults to the end of the directrix. NOTE The StartParam and the EndParam , if provided as a parameter value, are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. NOTE In the case of a curve composed of [[IfcCurveSegment]] , the [[IfcSweptAreaSolid]] Position is dependent on the [[IfcCurveSegment]] StartPlacement and the type of BasisCurve which defines the name function between the start and end explicitly defined as the start point of the next segment points of the segment EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In many cases, it is a surface of extrusion. The directrix lies on the surface, often defined as a p curve at this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the FixedReference direction. The Axis2 the y axis, or v is constructed. In this case the resulting swept solid is not repositioned. The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a CartesianTransformationOperator3d with attributes LocalOrigin as point 0 0 0 , Axis1 as the orthogonal projection of the FixedReference onto the normal plane defined by Axis3 . Axis3 as the direction of the tangent vector t at the point of the Directrix with parameter u . The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the Directrix parameter u . NOTE The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE Entity adapted from fixed reference swept surface defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. The SweptArea shall lie in the plane z 0. 2. The FixedReference shall not be parallel to a tangent vector to the directrix at any point along this curve. 3. The Directrix curve shall be tangent continuous."

#:IFC.xml:10119
msgid "IfcFixedReferenceSweptAreaSolid_FixedReference"
msgstr "FixedReference"

msgid "IfcFixedReferenceSweptAreaSolid_FixedReference_DEFINITION"
msgstr "FixedReference"

#:IFC.xml:10131
msgid "IfcGeometricCurveSet"
msgstr "IfcGeometricCurveSet"

msgid "IfcGeometricCurveSet_DEFINITION"
msgstr "A [[IfcGeometricCurveSet]] é usada para a troca de representação da forma, consistindo de uma coleção de pontos e curvas 2D ou 3D. xtA definição de NOTA de acordo com o CD ISO 10303 42 1992 Um conjunto de curva geométrica é uma coleção de dois ou três pontos e curvas de dimensão NOTE Entidade adaptada da curva geométrica definida no ISO 10303 42. HISTÓRIA nova entidade na IFC2x2. Proposições formais NoSurfaces Nenhuma superfície será incluída neste conjunto geométrico."

#:IFC.xml:10134
msgid "IfcGeometricSet"
msgstr "IfcGeometrização"

msgid "IfcGeometricSet_DEFINITION"
msgstr "O [[IfcGeometricSet]] é usado para a troca de representação da forma que consiste de pontos 2D ou 3D, curvas e superfícies, que não tem uma estrutura topológica como conjuntos de rosto conectados ou conchas , não são testaduras e não são modelos sólidos como o varredo sólido, o CSG ou a Brep. .extDef NOTA de CD ISO 10303 42 Esta entidade é destinada à transferência de modelos quando uma estrutura topológica não está disponível. NOTE Entidade adaptada de conjunto geométrico definido na ISO 10303 42. HISTÓRIA nova entidade na IFC2x."

#:IFC.xml:10135
msgid "IfcGeometricSet_Dim"
msgstr "Dim"

msgid "IfcGeometricSet_Dim_DEFINITION"
msgstr "A dimensão espacial desta classe, é idêntica ao primeiro elemento do conjunto. Uma regra onde garante que todos os elementos tenham a mesma dimensionalidade. Proposições formais"

#:IFC.xml:10140
msgid "IfcGeometricSet_Elements"
msgstr "Elementos"

msgid "IfcGeometricSet_Elements_DEFINITION"
msgstr "Os elementos geométricos que formam o set geométrico, podem ser pontos, curvas ou superfícies, mas são necessárias para coordenar a mesma dimensão espacial."

#:IFC.xml:10147
msgid "IfcGeometricSetSelect"
msgstr "IfcGeometricSetSelecione"

#:IFC.xml:10148
msgid "IfcHalfSpaceSolid"
msgstr "IfcHalfSpaceSolid"

msgid "IfcHalfSpaceSolid_DEFINITION"
msgstr "Um espaço de meio divide o domínio em dois por uma superfície de base. Normalmente, a superfície de base é um avião e desvia o espaço infinito em dois e indica o lado do meio espaço, concordando ou discordando do normal do avião. Figura 1 ilustra a definição de [[IfcHalfSpaceSolid]] dentro de um sistema de coordenadas determinado. A superfície base é dada por um plano sem limites, o limite vermelho é mostrado para fins de visualização apenas. meio espaço sólido.. .. figura ifchalfspacesolid layout1.gif Figura 1 Meio espaço de geometria sólida. xtDef NOTE Definição de acordo com CD ISO 10303 42 1992 Um sólido espaço de meio é definido pelo meio espaço que é o subconjunto regular do domínio que se encontra em um lado de uma superfície sem limites. O lado da superfície que se situa no meio espaço é determinado pela superfície normal e pela bandeira do acordo. Se a bandeira do acordo for \"TRUE\", então o subconjunto é aquele de que o país se depara normalmente. Se a bandeira do acordo for FALSE, então o subconjunto é o único ponto em que assenta o acordo. Para um espaço válido e sólido a superfície deve dividir o domínio em exatamente dois subsetos. Além disso, dentro do domínio a superfície deve ser múltipla e todas as normas de superfície devem apontar para o mesmo subconjunto. OBSERVAÇÃO que um espaço meio não é um subtipo de modelo sólido, os sólidos de meio espaço só são úteis como operadoras em expressões booleanas. NOTE Entidade adaptada do sólido de meio espaço definido em ISO 10303 42. Nova entidade de HISTORY em IFC1.5 .spec head Propositions Informais 1. A superfície de base deve dividir o domínio em exatamente dois subconjuntos. Se o espaço principal for sólido com subtipo agrupado com meio espaço [[IfcBoxedHalfSpace]], o domínio em questão é o do atributo inclusivo. Em todos os outros casos, o domínio é todo espacial, e a superfície de base deve ser ilimitada. 2. A superfície de base deve ser um subtipo de superfície ilimitado de [[IfcElementarySurface]]."

#:IFC.xml:10162
msgid "IfcHalfSpaceSolid_BaseSurface"
msgstr "Superfície"

msgid "IfcHalfSpaceSolid_BaseSurface_DEFINITION"
msgstr "Superfície definindo lado do meio espaço."

#:IFC.xml:10149
msgid "IfcHalfSpaceSolid_Dim"
msgstr "Dim"

msgid "IfcHalfSpaceSolid_Dim_DEFINITION"
msgstr "A dimensão espacial desta classe, é sempre 3"

#:IFC.xml:10154
msgid "IfcHalfSpaceSolid_AgreementFlag"
msgstr "Bandeira"

msgid "IfcHalfSpaceSolid_AgreementFlag_DEFINITION"
msgstr "A bandeira do acordo é VERDADEIRA se a superfície normal apontar para longe do material do [[IfcHalfSpaceSolid]]. Caso contrário, será FALSO."

#:IFC.xml:10174
msgid "IfcIndexedPolygonalFace"
msgstr "IfcIndexedpolygonalFace"

msgid "IfcIndexedPolygonalFace_DEFINITION"
msgstr "A [[IfcIndexedPolygonalFace]] é uma representação compacta de uma face plana que faz parte de um conjunto de rostos. Os vértices da face planar poligonal são fornecidos por 3 ou mais pontos cartesianos, definido por índices que apontam para uma [[IfcCartesianPointList3D]] , diretamente, ou através do PnÍndice , se fornecido em [[IfcPolygonalFaceSet]]. Figura 1 mostra um [[IfcIndexedPolygonalFace]] em um [[IfcPolygonalFaceSet]] que não está usando PnIndex o padrão. [[IfcIndexedPolygonalFace]] .. .. .. figura ifcindexedpolygonalface 01. ng Figura 1 Geometria de rosto poligonal fornecida por índices em uma lista de pontos Figura 2 mostra um [[IfcIndexedPolygonalFace]] em um [[IfcPolygonalFaceSet]] usando PnÍndice . [[IfcIndexedPolygonalFace]] Nós estamos mostrando PnÍndice.. .. .. figuras ifcindexedpolygonalface 02. ng Figura 2 Geometria de rosto poligonal fornecida pelos índices em uma lista de pontos HISTORY Nova entidade no Adendo IFC4 2."

#:IFC.xml:10182
msgid "IfcIndexedPolygonalFace_ToFaceSet"
msgstr "ToFaceSet"

msgid "IfcIndexedPolygonalFace_ToFaceSet_DEFINITION"
msgstr "Referência para o [[IfcPolygonalFaceSet]] ao qual este rosto está associado."

#:IFC.xml:10175
msgid "IfcIndexedPolygonalFace_CoordIndex"
msgstr "CoordIndex"

msgid "IfcIndexedPolygonalFace_CoordIndex_DEFINITION"
msgstr "Uma lista de dimensão com os índices para os três ou mais pontos, que definem os vértices do laço externo. Se o conjunto de rostos testsellated for fechado, indicado por SELF [[IfcTessellatedFaceSet]]. perdido, em seguida, os pontos, definindo o laço externo, conectará a contagem no sentido horário, visto fora do corpo, para que o normal resultado aponte para fora. NOTA: As coordenadas dos vértices são fornecidas pela lista indexada de SELF [[IfcTessellatedFaceSet]].Coordenadas.CoordList . Se o SELF [[IfcTessellatedFaceSet]].PnIndex for fornecido, os índices apontam para ele, caso contrário diretamente para o [[IfcCartesianPointList3D]]."

#:IFC.xml:10196
msgid "IfcIndexedPolygonalFaceWithVoids"
msgstr "IfcIndexedPolygonalFaceWithVoids"

msgid "IfcIndexedPolygonalFaceWithVoids_DEFINITION"
msgstr "A [[IfcIndexedPolygonalFaceWithVoids]] é uma representação compacta de uma face plana com laços internos, fazendo parte de um conjunto de rostos. HISTÓRIA Nova entidade no Adendo IFC4 2."

#:IFC.xml:10197
msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices"
msgstr "InnerCoordIndices"

msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices_DEFINITION"
msgstr "Lista de duas dimensões onde a primeira dimensão representa cada laço interno de 1 a N e a segunda dimensão os índices para três ou mais pontos que definem os vértices de cada laço interno. Se o conjunto de rostos testsellated for fechado, indicado por SELF [[IfcTessellatedFaceSet]]. Perdido , em seguida, os pontos, definindo os laços internos, devem conectar no sentido horário, como visto fora do corpo. NOTA: As coordenadas dos vértices são fornecidas pela lista indexada de SELF [[IfcTessellatedFaceSet]]. oordinates.CoordList . Se o SELF [[IfcTessellatedFaceSet]].PnIndex é fornecido, os índices apontam para ele, caso contrário diretamente para o [[IfcCartesianPointList3D]] ."

#:IFC.xml:10204
msgid "IfcManifoldSolidBrep"
msgstr "IfcManifoldSolidBrep"

msgid "IfcManifoldSolidBrep_DEFINITION"
msgstr "The [[IfcManifoldSolidBrep]] is a solid represented as a collection of connected surfaces that delimit the solid from the surrounding non solid. Instances of type [[IfcManifoldSolidBrep]] shall be of type [[IfcFacetedBrep]] , using only [[IfcPolyLoop]] for the bounds of [[IfcFaceBound]] , or of type [[IfcAdvancedBrep]] , using only [[IfcAdvancedFace]] for the face geometry, and [[IfcEdgeCurve]] for the edges. .extDef NOTE Definition according to ISO CD 10303 42 1992 A manifold solid b rep is a finite, arcwise connected volume bounded by one or more surfaces, each of which is a connected, oriented, finite, closed 2 manifold. There is no restriction on the genus of the volume, nor on the number of voids within the volume. The Boundary Representation B rep of a manifold solid utilizes a graph of edges and vertices embedded in a connected, oriented, finite, closed two manifold surface. The embedded graph divides the surface into arcwise connected areas known as faces. The edges and vertices, therefore, form the boundaries of the face and the domain of a face does not include its boundaries. The embedded graph may be disconnected and may be a pseudo graph. The graph is labeled that is, each entity in the graph has a unique identity. The geometric surface definition used to specify the geometry of a face shall be 2 manifold embeddable in the plane within the domain of the face. In other words, it shall be connected, oriented, finite, non self intersecting, and of surface genus 0. Faces do not intersect except along their boundaries. Each edge along the boundary of a face is shared by at most one other face in the assemblage. The assemblage of edges in the B rep do not intersect except at their boundaries i.e., vertices . The geometry curve definition used to specify the geometry of an edge shall be arcwise connected and shall not self intersect or overlap within the domain of the edge. The geometry of an edge shall be consistent with the geometry of the faces of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. A B rep is represented by one or more closed shells which shall be disjoint. One shell, the outer, shall completely enclose all the other shells and no other shell may enclose a shell. The facility to define a B rep with one or more internal voids is provided by a subtype. The following version of the Euler formula shall be satisfied, math .. .. .. .. figures ifcmanifoldsolidbrep math1.gif where V, E, F, L l and S are the numbers of unique vertices, edges, faces, loop uses and shells in the model and G s is the sum of the genus of the shells. NOTE Entity adapted from manifold solid brep defined in ISO 10303 42. HISTORY New entity in IFC Release 1.0 Informal proposition 1. The dimensionality of a manifold solid brep shall be 3. 2. The extent of the manifold solid brep shall be finite and non zero. 3. All elements of the manifold solid brep shall have defined associated geometry. 4. The shell normals shall agree with the B rep normal and point away from the solid represented by the B rep. 5. Each face shall be referenced only once by the shells of the manifold solid brep. 6. The Euler equation shall be satisfied for the boundary representation, where the genus term shell term us the sum of the genus values for the shells of the brep."

#:IFC.xml:10207
msgid "IfcManifoldSolidBrep_Outer"
msgstr "Externo"

msgid "IfcManifoldSolidBrep_Outer_DEFINITION"
msgstr "Uma concha fechada definindo a borda exterior do sólido. A concha normal deve apontar para o interior do sólido."

#:IFC.xml:10219
msgid "IfcPointListDim__PointList"
msgstr "IfcPointListDim PointList"

#:IFC.xml:10227
msgid "IfcPolygonalBoundedHalfSpace"
msgstr "IfcPolygonalBoundedHalfSpace"

msgid "IfcPolygonalBoundedHalfSpace_DEFINITION"
msgstr "The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary. The base surface of the half space is positioned by its normal relative to the object coordinate system as defined at the supertype [[IfcHalfSpaceSolid]] , and its polygonal with or without arc segments boundary is defined in the XY plane of the position coordinate system established by the Position attribute, the subtraction body is extruded perpendicular to the XY plane of the position coordinate system, that is, into the direction of the positive Z axis defined by the Position attribute. The boundary is defined by a 2 dimensional polyline or 2 dimensional composite curve, consisting of straight segments and circular arc segments within the XY plane of the position coordinate system. The side of the surface which is in the half space is determined by the surface normal and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normal points away from. If the agreement flag is FALSE, then the subset is the one the normal points into. NOTE A polygonal bounded half space is not a subtype of [[IfcSolidModel]] , half space solids are only useful as operands in Boolean expressions. Figure 1 illustrates a polygonal bounded half space. Black coordinates indicate the object coordinate system usually provided by [[IfcLocalPlacement]] . Green coordinates indicate the position coordinate system the PolygonalBoundary is given within this coordinate system. It is provided by [[IfcPolygonalBoundedHalfSpace]].Position. This coordinate system is relative to the object coordinate system. The extrusion direction of the subtraction body is the positive Z axis. Red coordinates indicate the normal of the plane. It is provided by the BaseSurface [[IfcSurface]].Position . This normal is also relative to the object coordinate system. Figure 1 Polygonal half space geometry The polygonal bounded half space is used to limit the volume of the half space in Boolean difference expressions. Only the part that is defined by a theoretical intersection between the half space solid and an extruded area solid, defined by extruding the polygonal boundary, is used for Boolean expressions. The PolygonalBoundary defines the 2D polyline which bounds the effectiveness of the half space in Boolean expressions. The BaseSurface is defined by a plane, and the normal of the plane together with the AgreementFlag defines the side of the material of the half space. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The [[IfcPolyline]] or the [[IfcCompositeCurve]] providing the PolygonalBoundary shall be closed. 2. If the PolygonalBoundary is given by an [[IfcCompositeCurve]] , it shall only have [[IfcCompositeCurveSegment]] s of type [[IfcPolyline]] , or [[IfcTrimmedCurve]] having a BasisCurve of type [[IfcLine]] , or [[IfcCircle]] 3. The BaseSurface defined at supertype [[IfcHalfSpaceSolid]] shall be of type [[IfcPlane]] 4. The normal of the plane, being the BaseSurface , shall not be perpendicular to the z axis of the position coordinate system"

#:IFC.xml:10230
msgid "IfcPolygonalBoundedHalfSpace_Position"
msgstr "Posição"

msgid "IfcPolygonalBoundedHalfSpace_Position_DEFINITION"
msgstr "Definição do sistema de coordenadas de posição para a polilinha delimitadora e a superfície de base."

#:IFC.xml:10242
msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary"
msgstr "Limite"

msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary_DEFINITION"
msgstr "A curva arredondada de dois polilins dimensionais, definida no plano xi do sistema de coordenadas de posição. hange ifc2x3 IFC2x3 CHANGE O tipo de atributo foi alterado de [[IfcPolyline]] para seu supertipo [[IfcBoundedCurve]] com compatibilidade para cima para troca baseada em arquivos. Proposições formais"

#:IFC.xml:10254
msgid "IfcPolygonalFaceSet"
msgstr "IfcPolygonalFaceSet"

msgid "IfcPolygonalFaceSet_DEFINITION"
msgstr "The [[IfcPolygonalFaceSet]] is a tessellated face set with all faces being bound by polygons. The planar faces are constructed by implicit polylines defined by three or more Cartesian points. Each planar face is defined by an instance of [[IfcIndexedPolygonalFace]] , or in case of faces with inner loops by [[IfcIndexedPolygonalFaceWithVoids]] . Depending on the value of the attribute Closed the instance of [[IfcPolygonalFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The attribute Faces refers to a list of [[IfcIndexedPolygonalFace]] s having an one based CoordIndex that provides three or more indices. If the face has inner loops, the [[IfcIndexedPolygonalFaceWithVoids]] has a two dimensional, one based list, where the first dimension of the two dimensional list addresses the list of inner loops the second dimension of the two dimensional list provides three or more indices each being a vertex of the planar polygon representing the inner loop. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifcpolygonalfaceset 01.png Figure 1 Use of PnIndex NOTE If the [[IfcPolygonalFaceSet]] is closed, the face vertices of the [[IfcIndexedPolygonalFace]] s shall connect counterclock wise when seen from the outside of the closed shell to guarantee that the face normal points away from the material of the shell. Inner loops, provided by the [[IfcIndexedPolygonalFaceWithVoids]] , shall connect clock wise. Figure 2 shows an IfcFacetedFaceSet represented by 1 [[IfcIndexedPolygonalFace]] 1, 2, 3, 4 2 [[IfcIndexedPolygonalFace]] 6, 2, 3, 7 3 [[IfcIndexedPolygonalFace]] 7, 3, 4, 8 4 [[IfcIndexedPolygonalFace]] 8, 4, 1, 5 5 [[IfcIndexedPolygonalFace]] 1, 4, 3, 2 6 [[IfcIndexedPolygonalFace]] 6, 7, 8, 5 7 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 2 Polygonal face set geometry NOTE The definition of IfcFacetedFaceSet is based on the indexedFaceSet defined in ISO IEC 19775 1 HISTORY New entity in IFC4 Addendum 2. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two outer or inner boundaries of faces the topological normal at each point on the boundary of the polygonal face set shall point away from the material of the solid."

#:IFC.xml:10182
msgid "IfcPolygonalFaceSet_Faces"
msgstr "Rosto"

msgid "IfcPolygonalFaceSet_Faces_DEFINITION"
msgstr "A lista de faces poligonais, com ou sem laços internos, que vinculavam o conjunto de faces fachadas."

#:IFC.xml:10255
msgid "IfcPolygonalFaceSet_Closed"
msgstr "Fechado"

msgid "IfcPolygonalFaceSet_Closed_DEFINITION"
msgstr "Indicar se o [[IfcPolygonalFaceSet]] é um shell fechado ou não. Se omitido nenhuma informação desse tipo poderá ser fornecida."

#:IFC.xml:10260
msgid "IfcPolygonalFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcPolygonalFaceSet_PnIndex_DEFINITION"
msgstr "Lista de inteiros que definem os locais na [[IfcCartesianPointList3D]] para obter as coordenadas dos pontos para os índices nas faces poligonal indexadas. Se o Índice PnIndex não é fornecido os índices nos rostos poligonal indexados apontam diretamente para [[IfcCartesianPointList3D]]."

#:IFC.xml:10267
msgid "IfcRectangularPyramid"
msgstr "IfcRectangularPirâmide"

msgid "IfcRectangularPyramid_DEFINITION"
msgstr "O [[IfcRectangularPyramid]] é um Primitivo 3D de geometria sólida. É um sólido com uma base retangular e um ponto chamado apex como o topo. Os toques da base para o topo. O eixo do centro da base até o ápice é perpendicular à base. O atributo herdado de posição define o IfcAxisPlacement3D e fornece a localização e a orientação da pirâmide SELF [[IfcCsgPrimitive3D]]. A localização e orientação do sistema de eixo para o primitivo. SELF [[IfcCsgPrimitive3D]]. osition.Location O centro da área circular sendo a face inferior do cone. SELF [[IfcCsgPrimitive3D]].Posição. A osição 3 O eixo z do sistema de coordenadas de posicionamento herdado fornece o eixo central do [[IfcRightCircularCone]] , e o apex está no valor de altura aplicado à direção positiva do eixo z. O BottomRadius define a base circular no plano da xícara do sistema de coordenadas de colocação. Como mostrado na Figura 1, a pirâmide está posicionada dentro do seu próprio sistema de coordenadas de colocação. A origem é o centro do retângulo inferior, que está no avião XY. O apex está no eixo z positivo em 0, altura . Pirâmide .. .. .. figuras ifcrectangularpyramid layout1.png Figura 1 pirâmide de geometria retangular HISTORY Nova entidade em IFC2x3. a definição de uso de Textura head Em cada face triangular, as texturas estão alinhadas viradas para uprite. As texturas são esticadas ou repetidas na extensão da base de cada rosto de acordo com as Repetidoras. Texturas são esticadas ou repetidas em direção ao ponto superior de acordo com a repetição T, onde o ponto superior tem coordenadas de 0,5,1.0 se a Repetição é falsa. Na parte inferior, as texturas estão alinhadas de frente para trás. Figura 2 ilustra o mapeamento de texturas padrão com uma Repetição de textura clamada e Repetir Falso A imagem da esquerda mostra a textura em que o eixo S aponta para a direita e o eixo T aponta para cima. A imagem à direita mostra a textura aplicada à geometria em que o eixo X aponta de volta à direita, o eixo Y aponta para a esquerda e o eixo Z aponta para cima. ridtable Side Origin X Origin Y Origin Z S Axis T Axis Left X 0 YLength 0 Y to top point Right X Xlength 0 Y to top point 0 0 0 Y to top Front Y 0 0 0 X to top point Y X Length YLength 0 X to top point Bottom Z XLength 0 X Y Figure 2 Rectangular texturas da pirâmide"

#:IFC.xml:10268
msgid "IfcRectangularPyramid_Height"
msgstr "Altura"

msgid "IfcRectangularPyramid_Height_DEFINITION"
msgstr "A altura do ápice acima do plano da base, medida na direção do eixo Z do posicionamento, o SELF [[IfcCsgPrimitive3D]]. osition.P 2."

#:IFC.xml:10273
msgid "IfcRectangularPyramid_XLength"
msgstr "Comprimento"

msgid "IfcRectangularPyramid_XLength_DEFINITION"
msgstr "O comprimento da base medida ao longo do eixo de posicionamento X. Ele é fornecido pelo posicionamento do eixo herdado através do SELF [[IfcCsgPrimitive3D]].Position.P 1."

#:IFC.xml:10278
msgid "IfcRectangularPyramid_YLength"
msgstr "Comprimento"

msgid "IfcRectangularPyramid_YLength_DEFINITION"
msgstr "O comprimento da base medida ao longo do eixo de posicionamento Y. Ele é fornecido pelo posicionamento do eixo herdado através do SELF [[IfcCsgPrimitive3D]].Position.P 2."

#:IFC.xml:10285
msgid "IfcRevolvedAreaSolid"
msgstr "IfcRevolvedAreaSolid"

msgid "IfcRevolvedAreaSolid_DEFINITION"
msgstr "An [[IfcRevolvedAreaSolid]] is a solid created by revolving a cross section provided by a profile definition about an axis. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the revolved solid. If not provided, it defaults to the current object coordinate system. The axis and the cross section shall be in the same plane, prior to any repositioning. NOTE Both the axis and the cross section are required to lie in the xy plane of the object position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the revolved solid. The revolved area solid defines the revolution of a 2D area given by a profile definition by an axis and angle. The result is a solid. The swept area is given by a profile definition. The profile is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. The AxisLine can have any orientation within the XY plane, it does not have to be parallel to the y axis as shown in the illustration. Figure 1 Revolved area solid geometry EXAMPLE Figure 1 illustrates geometric parameters and additional positioning parameters of the revolved area solid. The revolved area solid defines the rotation of a 2D area by an axis and angle. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the x axis. Figure 2 Repositioned revolved area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A revolved area solid is a solid formed by revolving a planar bounded surface about an axis. The axis shall be in the plane of the surface and the axis shall not intersect the interior of the bounded surface. The bounded surface may have holes which will sweep into holes in the solid. The direction of revolution is clockwise when viewed along the axis in the positive direction. More precisely if A is the axis location and d is the axis direction and C is an arc on the surface of revolution generated by an arbitrary point p on the boundary of the swept area, then C leaves p in direction d x p A as the area is revolved. NOTE Entity adapted from revolved area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .spec head Informal Propositions 1. The AxisLine shall lie in the plane of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 2. The AxisLine shall not intersect the interior of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 3. The Angle shall be between 0 and 360 , or 0 and 2π depending on the unit type for [[IfcPlaneAngleMeasure]] . .use head Texture Use Definition For side faces, textures are aligned facing upright along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the outermost longest revolution path according to RepeatT , where coordinates are compressed towards the axis of revolution. For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcRevolvedAreaSolid]] having a profile of [[IfcTShapeProfileDef]] and revolved at 22.5 degrees, the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth . Figure 3 Revolved area solid textures"

#:IFC.xml:10297
msgid "IfcRevolvedAreaSolid_Axis"
msgstr "Eixo"

msgid "IfcRevolvedAreaSolid_Axis_DEFINITION"
msgstr "Eixo sobre qual será a revolução."

#:IFC.xml:10286
msgid "IfcRevolvedAreaSolid_AxisLine"
msgstr "AxisLine"

msgid "IfcRevolvedAreaSolid_AxisLine_DEFINITION"
msgstr "A linha do eixo da revolução. Proposições formais"

#:IFC.xml:10290
msgid "IfcRevolvedAreaSolid_Angle"
msgstr "Ângulo"

msgid "IfcRevolvedAreaSolid_Angle_DEFINITION"
msgstr "O ângulo através do qual os varredores serão feitos. Este ângulo é medido a partir do plano da área de varredura fornecida pelo plano XY do sistema de coordenadas de posição."

#:IFC.xml:10309
msgid "IfcRevolvedAreaSolidTapered"
msgstr "IfcRevolvedAreaSolidTapeed"

msgid "IfcRevolvedAreaSolidTapered_DEFINITION"
msgstr "[[IfcRevolvedAreaSolidTapered]] é definida girando uma seção cruzada ao longo de um arco circular. A parte transversal pode mudar ao longo da varredura giratória da forma da parte inicial de cruz para a forma da seção final da cruz. Serão então conectados os vértices correspondentes das seções cruzadas de início e fim. A superfície coberta pode ter buracos que vão até buracos nos sólidos. O eixo de rotação é definido pelo ponto inicial SELF [[IfcSweptAreaSolid]]. Osition.Location Direction SELF [[IfcRevolvedAreaSolid]].Eixo de Rotação do Eixo SELF [[IfcRevolvedAreaSolid]]. xisLine , criada a partir do ponto inicial e da direção, aplicando uma magnitude de 1 unidade. Ângulos orientadores positivos são aplicados no sentido horário ao olhar para a direção positiva do eixo de rotação. A seção transversal de início é definida por SELF [[IfcSweptAreaSolid]]. weptArea Uma superfície plana coberta deitada no plano XY do sistema de coordenadas de posição definido por SELF [[IfcSweptAreaSolid]]. osition.P 1 e SELF [[IfcSweptAreaSolid]]. osition.P 2 O eixo de rotação está no plano da cruz inicial, mas não intercepta o interior da cruz inicial. A seção de cruz de fim é definida por EndSweptArea A superfície planar coberta localizada no plano XY do sistema de coordenadas de posição definido girando as coordenadas da posição inicial fornecidas por SELF [[IfcSweptAreaSolid]]. osição em torno do eixo de rotação pelo ângulo dado por SELF [[IfcRevolvedAreaSolid]].Ângulo . A seção de cruz de fim é muito semelhante à de início com o mesmo número de vértices e bordas. A seção de cruzamento de fim pode ser definida pelo mesmo perfil paramérico usando diferentes valores de parâmetro. ou por uma transformação cartesiana em 2D do perfil inicial dentro do plano final de corte entre as partes. O sólido é gerado transformando a seção de início transversal em para finalizar seção transversal. Um rosto inicial, um rosto final definido por cada seções iniciais e finais e um ou mais rostos laterais. Cada face lateral é uma superfície regrada definida por um par de bordas correspondentes da seção de início e fim. As superfícies governadas são construídas no espaço de coordenadas cilíndricas definido pelo supertipo [[IfcRevolvedAreaSolid]]. Nova entidade de HISTÓRIA no IFC4. Especificações de cabeça Proposições Informais 1. Espelhando dentro de [[IfcDerivedProfileDef]].Operador não será utilizado"

#:IFC.xml:10312
msgid "IfcRevolvedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcRevolvedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "EndSweptArea"

#:IFC.xml:10324
msgid "IfcRightCircularCone"
msgstr "IfcRightCircularCone"

msgid "IfcRightCircularCone_DEFINITION"
msgstr "O [[IfcRightCircularCone]] é um Primitivo 3D de geometria sólida. É um documento sólido com uma base circular e um ponto chamado apex de topo. Os toques da base para o topo. O eixo do centro da base circular para o ápice é perpendicular à base. A posição herdada define o IfcAxisPlacement3D e fornece a localização e orientação do cone SELF [[IfcCsgPrimitive3D]]. A localização e orientação do sistema de eixo para o primitivo. SELF [[IfcCsgPrimitive3D]]. osition.Location O centro da área circular sendo a face inferior do cone. SELF [[IfcCsgPrimitive3D]].Posição. A osição 3 O eixo z do sistema de coordenadas de posicionamento herdado fornece o eixo central do [[IfcRightCircularCone]] , e o apex está no valor de altura aplicado à direção positiva do eixo z. O BottomRadius define a base circular no plano da xícara do sistema de coordenadas de colocação. A figura 1 ilustra parâmetros geométricos do cone. O cone está posicionado dentro de seu próprio sistema de coordenadas de colocação. A origem é o centro do disco circular inferior, que está no plano XY. O ápice se encontra sobre o eixo z positivo em 0, 0, altura . cone1 .. .. números ifcrightcircularcone layout1. ng Figura 1 Cone circular de geometria direita NOTE Entidade adaptada da cone circular direita definida em ISO 10303 42. HISTORY Nova entidade em IFC2x3. a definição de uso de Textura head do lado circular, texturas estão alinhadas viradas de frente com a origem na direção traseira Y girando contra sentido horário. As texturas são esticadas ou repetidas na extensão da circunferência base de acordo com as Repetições. As texturas são comprimidas linearmente indo para cima, de acordo com o RepeatT. Na parte inferior, as texturas são alinhadas de frente para trás, com o centro do círculo alinhado ao centro da textura. Figura 2 ilustra o mapeamento de texturas padrão com uma Repetição de textura clamada e Repetir Falso A imagem da esquerda mostra a textura em que o eixo S aponta para a direita e o eixo T aponta para cima. A imagem à direita mostra a textura aplicada à geometria em que o eixo X aponta de volta à direita, o eixo Y aponta para a esquerda e o eixo Z aponta para cima. .gridtable Side Origem Normal X Origin Y Origin Z S Exis T Axis Sxis Y 0 Radius 0 X na direção do ponto superior inferior Z Radius 0 X X Figura 2 Texturas de cone circular direita"

#:IFC.xml:10325
msgid "IfcRightCircularCone_BottomRadius"
msgstr "Inferior"

msgid "IfcRightCircularCone_BottomRadius_DEFINITION"
msgstr "O raio do cone na base."

#:IFC.xml:10330
msgid "IfcRightCircularCone_Height"
msgstr "Altura"

msgid "IfcRightCircularCone_Height_DEFINITION"
msgstr "A distância entre a base do cone e o apex."

#:IFC.xml:10337
msgid "IfcRightCircularCylinder"
msgstr "IfcRightCircularClinder"

msgid "IfcRightCircularCylinder_DEFINITION"
msgstr "The [[IfcRightCircularCylinder]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a circular base and top. The cylindrical surface between if formed by points at a fixed distance from the axis of the cylinder. The inherited Position attribute defines the IfcAxisPlacement3D and provides SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cylinder. SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis provides the center axis and the height is measured from the origin along the positive direction of the z axis. Figure 1 illustrates geometric parameters of the cylinder. The cylinder is positioned within its own placement coordiante system. The origin is the center of the bottom circular disk, that lies in the XY plane. The center of the top circular disk is on the positive z axis at 0, 0, Height . cylinder .. .. .. .. figures ifcrightcircularcylinder layout1.png Figure 1 Right circular cylinder geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A right circular cylinder is a CSG primitive in the form of a solid cylinder of finite height. It is defined by an axis point at the centre of one planar circular face, an axis, a height, and a radius. The faces are perpendicular to the axis and are circular discs with the specified radius. The height is the distance from the first circular face centre in the positive direction of the axis to the second circular face centre. NOTE Entity adapted from right circular cylinder defined in ISO 10303 42. HISTORY New entity in IFC2x3. .use head Texture use definition On the circular side, textures are aligned facing upright with origin at the back Y direction revolving counter clockwise. Textures are stretched or repeated to the extent of the circumference according to RepeatS. Textures are stretched or repeated to the extent of the Height according to RepeatT. On the top and bottom faces, textures are aligned facing front to back, with the center of the circle aligned to the center of the texture. Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Side Y 0 Radius 0 X Z Bottom Z Radius Radius 0 X Y Top Z Radius Radius Height X Y Figure 2 Right circular cylinder textures"

#:IFC.xml:10338
msgid "IfcRightCircularCylinder_Height"
msgstr "Altura"

msgid "IfcRightCircularCylinder_Height_DEFINITION"
msgstr "A distância entre as faces circulares planas do cilindro."

#:IFC.xml:10343
msgid "IfcRightCircularCylinder_Radius"
msgstr "Radius"

msgid "IfcRightCircularCylinder_Radius_DEFINITION"
msgstr "O raio do cilindro."

#:IFC.xml:10350
msgid "IfcSectionedSolid"
msgstr "Sólida"

msgid "IfcSectionedSolid_DEFINITION"
msgstr "Uma [[IfcSectionedSolid]] é um tipo de base abstrata para sólidos construídos ao longo de diretriz horizontal potencialmente variável."

#:IFC.xml:10353
msgid "IfcSectionedSolid_Directrix"
msgstr "Diretriz"

msgid "IfcSectionedSolid_Directrix_DEFINITION"
msgstr "A curva usada para definir a operação de abrangência."

#:IFC.xml:10365
msgid "IfcSectionedSolid_CrossSections"
msgstr "Intersecções"

msgid "IfcSectionedSolid_CrossSections_DEFINITION"
msgstr "Lista de seções cruzadas em ordem sequencial ao longo da Directriz. Proposições formais"

#:IFC.xml:10377
msgid "IfcSectionedSolidHorizontal"
msgstr "IfcSectionedSolidHorizontal"

msgid "IfcSectionedSolidHorizontal_DEFINITION"
msgstr "Um [[IfcSectionedSolidHorizontal]] é um modelo sólido construído ao longo de uma curva horizontal, abrangendo seções cruzadas potencialmente variáveis. O sólido é gerado varrendo as interpolações entre CrossSectionPositions com interpolação linear de pontos de perfil, onde o perfil normal concorda com a tangente da Diretriz, o eixo X do perfil está orientado perpendicularmente à esquerda da Directrix da mesma direção que LateralOffset em [[IfcPointByDistanceExpression]] que está virado para frente ao longo do trix direto, e o eixo do perfil Y está orientado para cima de acordo com a FixedAxisVertical . Para seções que rotacionaram de acordo com uma única super elevação, [[IfcDerivedProfileDef]] pode ser usado para indicar tal rotação com cada Perfil Pai referente ao mesmo perfil subjacente. Para seções que tenham sido transformadas de acordo com múltiplas elevações super com pontos que variam de forma independente, cada perfil pode ser de uma instância diferente, mas do mesmo tipo, por exemplo, [[IfcArbitraryClosedProfileDef]] , e opcionalmente pode ter pontos de seção cruzados associados às curvas de guias de linhas de string usando [[IfcIndexedPolyCurve]] com IfcCartesianPointList2DLabelled . Figura 1 ilustra quatro garotas de uma ponte que têm um perfil constantemente parametrizado, dois guardões tendo um perfil arbitrário constante um deles espelhado , e um baralho de ponte com um perfil variável arbitrário. estrutura espacial.. .. .. figuras ifcsectionedsolidhorizontal.png Figura 1 Secionou Proposições informais sólidas horizontais horizontais 1. Não há duas seções consecutivas que se cruzem. 2. Se o tipo de seções não for [[IfcParameterizedProfileDef]] ou seja, um perfil arbitrário , em seguida, o número de pontos e bordas deve ser o mesmo para dois perfis consecutivos 3. Se o diretrix não é tangente continuidade, o sólido resultante é criado por um meio-ângulo a um meio-ângulo entre os dois segmentos. 4. Bordas muito nítidas podem resultar em acordos intermediários quase impossíveis de implementar, podem definir limites aceitáveis para uma descontinuidade tangente ou exigem que a trix diretriz seja tangente contínua. 5. O diretriz não se cruzará"

#:IFC.xml:10380
msgid "IfcSectionedSolidHorizontal_CrossSectionPositions"
msgstr "Posições"

msgid "IfcSectionedSolidHorizontal_CrossSectionPositions_DEFINITION"
msgstr "Lista de expressões à distância em ordem crescente sequencialmente emparelhada com CrossSections, indicando a posição da seção correspondente ao longo do Directrix."

#:IFC.xml:10392
msgid "IfcSectionedSpine"
msgstr "Espinha"

msgid "IfcSectionedSpine_DEFINITION"
msgstr "An [[IfcSectionedSpine]] is a representation of the shape of a three dimensional object composed by a number of planar cross sections, and a spine curve. The shape is defined between the first element of cross sections and the last element of the cross sections. A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. All cross sections have to define areas by a closed profile to allow for the representation of a solid. All cross sections have to define curves by an open or closed profile to allow for the representation of a surface. The cross sections are defined by subtypes of [[IfcProfileDef]] , where the consecutive profiles may be derived by a transformation of the start profile or the previous consecutive profile. The spine curve shall be of type [[IfcCompositeCurve]] , each of its segments represented by [[IfcCompositeCurveSegment]] shall correspond to the part between exactly two consecutive cross sections. Figure 1 illustrates an example of an [[IfcSectionedSpine]] . The SpineCurve is given by an [[IfcCompositeCurve]] with two Segments . The Segments 1 has a ParentCurve of type [[IfcPolyline]] and a Transition CONTSAMEGRADIENT. The Segments 2 has a ParentCurve of type [[IfcTrimmedCurve]] and a Transition DISCONTINUOUS. Each CrossSectionPosition lies at a start or end point of the Segments . Each CrossSections are inserted by the CrossSectionPositions . The first two cross sections are of type [[IfcRectangleProfileDef]] , the third is of type [[IfcDerivedProfileDef]] . spine 1 .. .. .. .. figures ifcsectionedspine layout1.gif Figure 1 Sectioned spine geometry Figure 2 illustrates the final result of the [[IfcSectionedSpine]] . The body shown transparently is not fully defined by the exchange definition. render .. .. .. .. figures ifcsectionedspine.jpg Figure 2 Sectioned spine result .extDef NOTE Definition according to ISO CD 10303 42 1992 A sectioned spine is a representation of the shape of a three dimensional object composed of a spine curve and a number of planar cross sections. The shape is defined between the first element of cross sections and the last element of this set. NOTE A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. For the representation of a solid all cross sections are closed curves. NOTE Entity adapted from sectioned spine defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. none of the cross sections, after being placed by the cross section positions, shall intersect 2. none of the cross sections, after being placed by the cross section positions, shall lie in the same plane 3. the local origin of each cross section position shall lie at the beginning or end of a composite curve segment."

#:IFC.xml:10400
msgid "IfcSectionedSpine_SpineCurve"
msgstr "CurvaEspinha"

msgid "IfcSectionedSpine_SpineCurve_DEFINITION"
msgstr "Uma única curva composta, que define a curva de espinha. Cada um dos segmentos de curva composta corresponde à parte entre duas seções de cruzamento."

#:IFC.xml:10412
msgid "IfcSectionedSpine_CrossSections"
msgstr "Intersecções"

msgid "IfcSectionedSpine_CrossSections_DEFINITION"
msgstr "Uma lista de pelo menos duas seções cruzadas, cada uma delas definida dentro do plano xelina do sistema de coordenadas de posição da seção cruzada. O sistema de coordenadas de posição é dado pelas posições de CrossSectionPositions de lista correspondentes."

#:IFC.xml:10424
msgid "IfcSectionedSpine_CrossSectionPositions"
msgstr "Posições"

msgid "IfcSectionedSpine_CrossSectionPositions_DEFINITION"
msgstr "Posiciona sistemas de coordenadas para as seções cruzadas que formam a espinha seccionada. Os perfis que definem as seções cruzadas estão posicionados dentro do plano praxi do sistema de coordenadas de posição correspondente."

#:IFC.xml:10393
msgid "IfcSectionedSpine_Dim"
msgstr "Dim"

msgid "IfcSectionedSpine_Dim_DEFINITION"
msgstr "A dimensão da curva de coluna é sempre 3. Proposições formais"

#:IFC.xml:10436
msgid "IfcSectionedSurface"
msgstr "Superfície"

msgid "IfcSectionedSurface_DEFINITION"
msgstr "Um tipo de superfície construída através de amplas seções de cruzamento abertas potencialmente variando ao longo de uma curva horizontal ou próxima à horizontal. A superfície é gerada ao varrer as Seções de Transição entre Interpolação linear de CrossSectionPositions, a menos que as curvas de transição entre pontos de seção são indicadas pelo OpenCrossProfileDef. idades. As seções de cruzamento são orientadas com o eixo Y de cada perfil virado para cima na direção Z ou verticalmente perpendicular ao Directrix, dependendo do atributo FixedAxisVertical. superfície seccionada .. .. .. figuras [[IfcSectionedSurface]] 1. ng Figura 1 de superfície Seccionada usando [[IfcOpenCrossProfileDef]] Em caso de quebra longitudinal, a Superfície pode usar instâncias OpenCrossProfileDef com um número variado de pontos de seção. Nesse caso, o ponto em duas seções cruzadas consecutivas que estão conectadas são identificadas pelo mesmo valor de tag. superfície seccionada .. .. .. figuras [[IfcSectionedSurface]] 2. ng Figura 1 Seccionada com proposições formais de linhas de quebra longitudinais de galho. A entidade que é a diretriz subjacente terá a dimensão de 3. O tipo de perfil deve ser CURVE dentro da lista de perfis que definem as seções cruzadas. O tipo de entidade para cada seção deve ser o mesmo. A lista de seções cruzadas e a lista de posições entre seções devem ter o mesmo tamanho. Propostas informais Não se cruzarão duas seções consecutivas. Se a diretrix não é tangente contínua, a superfície resultante é criada por um meio-ângulo entre os dois segmentos. Bordas muito nítidas podem resultar em acordos intermediários quase impossíveis de implementar, podem definir limites aceitáveis para a descontinuidade tangente ou exigem que a trix diretrix seja tangente contínua. O diretrix não se cruzará"

#:IFC.xml:10439
msgid "IfcSectionedSurface_Directrix"
msgstr "Diretriz"

msgid "IfcSectionedSurface_Directrix_DEFINITION"
msgstr "A curva usada para definir a operação de varredura"

#:IFC.xml:10451
msgid "IfcSectionedSurface_CrossSections"
msgstr "Intersecções"

msgid "IfcSectionedSurface_CrossSections_DEFINITION"
msgstr "Lista de seções cruzadas em ordem sequencial ao longo da Diretriz"

#:IFC.xml:10463
msgid "IfcSectionedSurface_CrossSectionPositions"
msgstr "Posições"

msgid "IfcSectionedSurface_CrossSectionPositions_DEFINITION"
msgstr "Lista de expressões à distância em ordem crescente sequencialmente emparelhada com CrossSections, indicando a posição da seção correspondente ao longo do Directrix."

#:IFC.xml:10475
msgid "IfcShellBasedSurfaceModel"
msgstr "IfcShellBasedSurfaceModel"

msgid "IfcShellBasedSurfaceModel_DEFINITION"
msgstr "Um [[IfcShellBasedSurfaceModel]] representa a forma por um conjunto de conchas abertas ou fechadas. As faces ligadas dentro do casco têm uma dimensão 2 e são colocadas num espaço coordenado de dimensão 3. A definição de NOTA xtDef de acordo com o CD ISO 10303 42 1992 A modelo de superfície baseado em shell é descrito por um conjunto de conchas abertas ou fechadas de dimensionalidade 2. As conchas não se cruzam exceto em bordas e vértices. Em particular, faces distintas podem não se cruzar. Uma face completa de um shell pode ser compartilhada com outro shell. Partes coincidentes de conchas devem fazer referência às mesmas faces, arestas e vértices que definem a região coincidente. Haverá pelo menos uma concha. Um casco pode existir independentemente de um modelo de superfície. NOTE Entidade adaptada a partir de modelo de superfície baseado em shell definido no ISO 10303 42. Nova entidade de HISTÓRIA em IFC2x. Especificações de cabeça de Proposições Informais 1. A dimensão do modelo de superfície baseado em casca é 2. 2. Os conchas não devem se sobrepor ou se interceptar exceto em rostos, bordas ou vértices comuns."

#:IFC.xml:10476
msgid "IfcShellBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcShellBasedSurfaceModel_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:10481
msgid "IfcShellBasedSurfaceModel_SbsmBoundary"
msgstr "EsbsmBoundary"

msgid "IfcShellBasedSurfaceModel_SbsmBoundary_DEFINITION"
msgstr "EsbsmBoundary"

#:IFC.xml:10488
msgid "IfcSolidModel"
msgstr "IfcSolidModel"

msgid "IfcSolidModel_DEFINITION"
msgstr "Uma [[IfcSolidModel]] representa a forma 3D por diferentes tipos de representações de modelos sólidos. É o supertipo abstracto comum de representação de Limite, representação de CSG, representação abrangente e outros sistemas de representação sólidos e adequados. *xtDef NOTE Definição de acordo com CD ISO 10303 42 1992 Um modelo sólido é uma representação completa da forma nominal de um produto tal que todos os pontos no interior estão conectados. Qualquer ponto pode ser classificado como estando lá dentro, lá fora ou na fronteira de um sólido. Existem vários tipos diferentes de representações de modelos sólidos. NOTE Entidade adaptada de um modelo sólido definido no ISO 10303 42. HISTÓRIA Nova entidade no IFC1.5"

#:IFC.xml:10489
msgid "IfcSolidModel_Dim"
msgstr "Dim"

msgid "IfcSolidModel_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:10498
msgid "IfcSphere"
msgstr "IfcSphere"

msgid "IfcSphere_DEFINITION"
msgstr "O [[IfcSphere]] é um Primitivo 3D de geometria sólida. É sólido onde todos os pontos da superfície têm a mesma distância do ponto central. O atributo de Posição herdada define o IfcAxisPlacement3D e fornece SELF [[IfcCsgPrimitive3D]]. A localização e a orientação do sistema de eixo para o primitivo. SELF [[IfcCsgPrimitive3D]].Position.Location O centro da esfera. SELF [[IfcCsgPrimitive3D]].Posição. O eixo z aponta na sua direcção de pólo norte para o eixo norte, e pelas suas orientações negativas para o pólo sul. A Figura EXAMPLE 1 ilustra parâmetros geométricos da esfera. A esfera está posicionada dentro de seu próprio sistema de colocação coordiante em relação ao sistema de coordenadas de objetos. A origem é o centro da esfera. Figura 1 Geometria Esfera. A definição de NOTA xtDef de acordo com a esfera de CD ISO 10303 42 1992 é uma esfera primitiva CSG com uma forma esférica definida por um centro e um raio. NOTE Entidade adaptada a partir da esfera definida em ISO 10303 42. HISTÓRIA nova entidade no IFC2x3. se o uso de Texturas de Texturas de Textura de cabeça está alinhado na direção traseira Y que gira contra o sentido horário. As texturas são esticadas ou repetidas na extensão da circunferência no equador de acordo com a Repetição e a Repetição. Figura 2 ilustra o mapeamento de texturas padrão com uma Repetição de textura clamada e Repetir Falso A imagem da esquerda mostra a textura em que o eixo S aponta para a direita e o eixo T aponta para cima. A imagem à direita mostra a textura aplicada à geometria em que o eixo X aponta de volta à direita, o eixo Y aponta para a esquerda e o eixo Z aponta para cima. .gridtable Side Origem Normal X Origem Y Origem Z S Exis T Exis Y 0 Radius 0 X, então curvando contador no sentido horário Z, então curvando para as texturas da Figura 2 da Esfera"

#:IFC.xml:10499
msgid "IfcSphere_Radius"
msgstr "Radius"

msgid "IfcSphere_Radius_DEFINITION"
msgstr "O raio da esfera."

#:IFC.xml:10506
msgid "IfcSurfaceCurveSweptAreaSolid"
msgstr "IfcSurfaceCurveSweptAreaSolid"

msgid "IfcSurfaceCurveSweptAreaSolid_DEFINITION"
msgstr "The [[IfcSurfaceCurveSweptAreaSolid]] is the result of sweeping an area along a directrix that lies on a reference surface. The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the tangent of the directrix at this point, and the profile s x axis agrees to the surface normal. At any point along the directrix, the swept profile origin lies on the directrix, the profile s normal points towards the tangent of the directrix, and the profile s x axis is identical to the surface normal at this point. NOTE The profile area s normal has to be identical to the tangent of the directrix at any given point. In case of a directrix having a linear segment at the start point, the segment has to be perpendicular to the profile at start. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , the parameter value is provided based on the curve parameterization. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , the parameter value is provided based on the curve parameterization. If no EndParam is provided the end defaults to the end of the directrix. The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE The StartParam and the EndParam are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. In case of a closed curve, such as [[IfcCircle]] or [[IfcEllipse]] , as the directrix, StartParam and the EndParam shall not exceed the parametic range, they shall not be 360 . EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In most cases, it is a plane or a surface of extrusion. The directrix lies on the surface, in case of a plane it might be defined as a polyline or composite curve, in case of a cylindrical or other non planer reference surface it might often be defined as a p curve on this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system of the implicit plane lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the normal of the reference surface at this point. The Axis2 the y axis, or v is constructed. The resulting body of the swept solid is not repositioned if the inherited Position attribute is omitted. Otherwise the coordinate system established by the Position attribute is used to reposition the body relative to the object coordinate system. EXAMPLE Figure 1 illustrates an example using a cylindrical reference surface and a p curve for sweeping a rectangle. The Postion is not provided and therefore it does not reposition the resulting swept solid. Figure 2 shows the expected result.NOTE The start of the directrix lies at the origin of the object coordinate system, as shown in the illustration,only by coincidence. The start of the directrix and thereby the start of the sweeping operation might be at any point within the object coordinate system and only depends on the position of the directrix.Figure 1 Surface curve wept area solid parameter Figure 2 Surface curve wept area solid results .extDef NOTE Definition according to ISO CD 10303 42 1992 A surface curve swept area solid is a type of swept area solid which is the result of sweeping a face along a Directrix lying on a ReferenceSurface . The orientation of the SweptArea is related to the direction of the surface normal. The SweptArea is required to be a curve bounded surface lying in the plane z 0 and this is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the normal to the ReferenceSurface at the current point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a Cartesian Transformation Operator 3D with attributes Local origin as point 0., 0., 0 , Axis 1 as the normal N to the reference surface at the point of the directrix with parameter u. Axis 3 as the direction of the tangent vector t at the point of the directrix with parameter u. The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the directrix parameter u. NOTE Entity adapted from surface curve swept area solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The SweptArea shall lie in the implicit plane z 0. 2. The Directrix shall lie on the ReferenceSurface ."

#:IFC.xml:10509
msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface"
msgstr "Superfície"

msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface_DEFINITION"
msgstr "Superfície"

#:IFC.xml:10521
msgid "IfcSweptAreaSolid"
msgstr "IfcSweptAreaSolid"

msgid "IfcSweptAreaSolid_DEFINITION"
msgstr "Um [[IfcSweptAreaSolid]] representa a forma 3D através de um esquema de representação abrangente que permite uma intersecção planetária duas dimensões varrer pelo espaço. A área de varredura é definida por uma seção de cruzamento, representada por um subtipo se [[IfcProfileDef]] , isto é fornecido como uma fronteira duas dimensões fechada em um avião implícito. A área de varredura é definida no avião da xícara do sistema de coordenadas de objetos. A operação de varredura é aplicada à área de varredura conforme definida nos subtipos de [[IfcSweptAreaSolid]], alguns subtipos requerem uma transformação implícita da área varrida para a posição inicial da varredura. O sistema de coordenadas Positio n opcional permite que o posicionamento do sólido resultante seja varrido em relação ao sistema de coordenadas do objeto. .extDef NOTE Definição de acordo com CD ISO 10303 42 1992 A entidade sólida da área de varredura coleta as entidades que são definidas processualmente através de uma ação abrangente sobre superfícies cobertas planas. A posição é o espaço varrido do sólido dependerá da posição da área varrida. A área varreda será uma face da área varrida resultante, sólida, exceto o caso de uma área girada sólida com ângulo igual a 2,ou 360 graus. NOTE Entidade adaptada do sólido de área varredura definido no ISO 10303 42. HISTORY Nova entidade no IFC1.5 .change ifc2x4 IFC4 CHANGE A posição do atributo foi alterada para OPTIONAL com compatibilidade ascendente para a troca baseada em arquivos."

#:IFC.xml:10524
msgid "IfcSweptAreaSolid_SweptArea"
msgstr "SweptArea"

msgid "IfcSweptAreaSolid_SweptArea_DEFINITION"
msgstr "A superfície que define a área a ser varrida. É dada como uma definição de perfil dentro do plano xeque do sistema de coordenação de posição."

#:IFC.xml:10536
msgid "IfcSweptAreaSolid_Position"
msgstr "Posição"

msgid "IfcSweptAreaSolid_Position_DEFINITION"
msgstr "O sistema de coordenadas de posição para a consequente varredura da operação abrangente. O sistema de coordenadas de posição permite o posicionamento do sólido varredo. Se não for fornecido, o sólido varrido permanece dentro da posição determinada pela seção de cruz ou pela diretriz utilizada para a operação de massa. .change ifc2x4 IFC4 CHANGE O atributo foi alterado para OPTIONAL com compatibilidade para cima para a troca de arquivos com base em fórmulas. Proposições formais"

#:IFC.xml:10548
msgid "IfcSweptDiskSolid"
msgstr "IfcSweptDiskSolid"

msgid "IfcSweptDiskSolid_DEFINITION"
msgstr "An [[IfcSweptDiskSolid]] represents the 3D shape by a sweeping representation scheme allowing a two dimensional circularly bounded plane to sweep along a three dimensional Directrix through space. The StartParam and EndParam parameter are optional, if not provided they default to the start and end of the Directrix . Only if the Directrix is given by a bounded or by a closed curve, it is permissible to omit the values of StartParam and EndParam . If the transitions between consecutive segments of the Directrix are not tangent continuous, the resulting solid is created by a miter at half angle between the two segments. Informal proposition restricts the permissible angle between two non tangent continuous segments. Figure 1 illustrates an example. Directrix given as [[IfcIndexedPolyCurve]] , having linear and circular arc segments, that are tangent continuous between each segments Directrix being a bounded and open curve No StartParam and EndParam are provided, start and end default to start and end of the bounded curve of the Directrix NOTE Although the example shows a Directrix as a poly curve on a planar reference surface, the definition of [[IfcSweptDiskSolid]] is not restricted to be based on planer curves. However view definitions or implementer agreements may provide restrictions. NOTE The geometric item [[IfcIndexedPolyCurve]] provides a more compact representation compared with [[IfcCompositeCurve]] as is therefore the prefered curve representation for the Directrix . disk solid .. .. .. .. figures ifcsweptdisksolid layout1.png Figure 1 Swept disk solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A swept disk solid is the solid produced by sweeping a circular disk along a three dimensional curve. During the sweeping operation the normal to the plane of the circular disk is in the direction of the tangent to the directrix curve and the center of the disk lies on the directrix. The circular disk may, optionally, have a central hole, in this case the resulting solid has a through hole, or, an internal void when the directrix forms a close curve. NOTE Entity adapted from swept disk solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE The attribute StartParam and EndParam have been made optional. .spec head Informal Propositions 1. If the Directrix curve definition is not tangent continuous, the transition between the segments has to be within an acceptable limit of tangent discontinuity. Very sharp edges may result in nearly impossible miter. Implementer agreements may define acceptable limits for tangent discontinuity. 2. The segments of the Directrix shall be long enough to apply the Radius . In case of an arc segment forming part of the Directrix , its radius shall be greater then the disk Radius 3. The Directrix shall not be based on an intersecting curve."

#:IFC.xml:10571
msgid "IfcSweptDiskSolid_Directrix"
msgstr "Diretriz"

msgid "IfcSweptDiskSolid_Directrix_DEFINITION"
msgstr "A curva usada para definir a operação de abrangência. A sólida é gerada através da revisão de um disco circular ao longo da Directriz."

#:IFC.xml:10549
msgid "IfcSweptDiskSolid_EndParam"
msgstr "Finalizar Param"

msgid "IfcSweptDiskSolid_EndParam_DEFINITION"
msgstr "O valor do parâmetro no Directrix em que a operação de varredura termina. Se não houver nenhum valor, o fim da operação de grande alcance será no final da Directriz. .change ifc2x4 IFC4 CHANGE O atributo foi alterado para OPTIONAL com compatibilidade para cima para a troca de arquivos com base em fórmulas. Proposições formais"

#:IFC.xml:10554
msgid "IfcSweptDiskSolid_InnerRadius"
msgstr "InnerRadius"

msgid "IfcSweptDiskSolid_InnerRadius_DEFINITION"
msgstr "Este atributo é opcional, se presente define o raio de um buraco circular no centro do disco."

#:IFC.xml:10559
msgid "IfcSweptDiskSolid_Radius"
msgstr "Radius"

msgid "IfcSweptDiskSolid_Radius_DEFINITION"
msgstr "O raio do disco circular a ser varrido pelo diretriz . Denota o raio externo, se um InnerRadius for aplicado."

#:IFC.xml:10564
msgid "IfcSweptDiskSolid_StartParam"
msgstr "StartParam"

msgid "IfcSweptDiskSolid_StartParam_DEFINITION"
msgstr "O valor do parâmetro na Directriz em que a operação abrangente se inicia. Se não houver nenhum valor, o início da operação de grande alcance estará no início da Directriz. .change ifc2x4 IFC4 CHANGE O atributo foi alterado para OPTIONAL com compatibilidade para cima para a troca com base em arquivos."

#:IFC.xml:10583
msgid "IfcSweptDiskSolidPolygonal"
msgstr "IfcSweptDiskSolidPolygonal"

msgid "IfcSweptDiskSolidPolygonal_DEFINITION"
msgstr "A [[IfcSweptDiskSolidPolygonal]] é uma [[IfcSweptDiskSolid]] onde a Directriz é restrita a ser fornecida apenas por uma linha poly . Um atributo FilletRadius opcional pode ser afirmado, ele é aplicado como um filete para todas as transições entre os segmentos da linha poly. NOTA: O item geométrico [[IfcIndexedPolyCurve]] fornece uma representação mais compacta em comparação com [[IfcPolyline]]. Portanto, é a representação da curva anterior para a Directriz. A [[IfcIndexedPolyCurve]] não deve ter Segmentos definidos, remarcando-o apenas para uma linha poly HISTÓRIA Nova entidade no IFC4. Especificações de cabeça Proposições Informais 1. O FilletRadius, se fornecido, tem que ser menor que ou igual ao comprimento do segmento de início e fim do [[IfcPolyline]], e menor ou igual a metade do tamanho do segmento interno mais curto."

#:IFC.xml:10584
msgid "IfcSweptDiskSolidPolygonal_FilletRadius"
msgstr "FilletRadius"

msgid "IfcSweptDiskSolidPolygonal_FilletRadius_DEFINITION"
msgstr "O filete que é igualmente aplicado a todas as transições entre os segmentos do [[IfcPolyline]], providenciando a representação geométrica da Directriz. Se omitido, nenhum filete é aplicado aos segmentos. Proposições formais"

#:IFC.xml:10591
msgid "IfcTaperedSweptAreaProfiles__StartArea"
msgstr "IfcTaperedSweptAreaProfiles StartArea"

#:IFC.xml:10599
msgid "IfcTessellatedFaceSet"
msgstr "IfcTessellatedFaceSet"

msgid "IfcTessellatedFaceSet_DEFINITION"
msgstr "A [[IfcTessellatedFaceSet]] é um modelo topológico de representação de limites limitado a faces planas e arestas retas. Pode representar uma aproximação de uma superfície analítica ou sólida que pode ser fornecida, para além da sua tesselação, como representação de uma forma separada. A [[IfcTessellatedFaceSet]] fornece uma representação compacta de dados de um conjunto de rosto conectado, usando índices em listas ordenadas de vértices, normais, cores e mapas de textura. NOTA: A representação compacta foi escolhida para habilitar pequenos conjuntos de dados apesar de potenciais grandes conjuntos de faces, bordas e vértices necessários para representar tessellações de superfícies analíticas e sólidos, e apesar de grandes conjuntos de informações de cor e textura para anotar as faces testsellacionadas. O [[IfcTessellatedFaceSet]] é um supertipo abstracto de rosto testado define cada imposição específica sobre a geração de face para tessellação, como a triangulação com ou sem tiras e fãs ou quadriláteros, ou faces poligonais com ou sem laços internos. NOTA: Nem todas as diferentes restrições nos conjuntos de rosto são incluídas como subtipos específicos nesta versão da especificação. Os seguintes atributos se aplicam a todos os subtipos As Coordenadas são a lista ordenada de pontos Cartesianos representando os vértices do item tesselado. Uma lista de índice, definida no nível de subtipos, usa os pontos, identificado pela posição de indexação, para construir as polilinhas que representam as faces. A relação entre HasColoras fornece um mapa de cor indexado com uma lista correspondente de índices que fornecem uma cor para cada face do conjunto de rosto testselado. A HasTextures é inversa relação fornece um mapa de textura indexado com uma lista correspondente de índices que fornecem coordenadas de textura que mapeiam para as coordenadas geométricas das polilinhas que representam as faces. Cada face do conjunto de face tesselada terá pelo menos três vértices não coincidentes que definem um polígono planar que define um polígono não auto-penetrante. NOTE A definição de [[IfcTessellatedFaceSet]] é baseada no indexedFaceSet definido em ISO IEC 19775 1 HISTORY Nova entidade na IFC4."

#:IFC.xml:9996
msgid "IfcTessellatedFaceSet_Coordinates"
msgstr "Coordenadas"

msgid "IfcTessellatedFaceSet_Coordinates_DEFINITION"
msgstr "Uma lista ordenada de pontos cartesianos usados pelo índice de coordenadas definido nos subtipos de [[IfcTessellatedFaceSet]]."

#:IFC.xml:10608
msgid "IfcTessellatedFaceSet_HasColours"
msgstr "Cores"

msgid "IfcTessellatedFaceSet_HasColours_DEFINITION"
msgstr "Referência para o mapa de cores indexado fornecendo os valores RGB de cor correspondentes para os rostos dos subtipos de [[IfcTessellatedFaceSet]]."

#:IFC.xml:10622
msgid "IfcTessellatedFaceSet_HasTextures"
msgstr "HasTextures"

msgid "IfcTessellatedFaceSet_HasTextures_DEFINITION"
msgstr "Referência para o mapa de textura indexado fornecendo as coordenadas de textura correspondentes aos vértices limitando os rostos dos subtipos de [[IfcTessellatedFaceSet]]."

#:IFC.xml:10600
msgid "IfcTessellatedFaceSet_Dim"
msgstr "Dim"

msgid "IfcTessellatedFaceSet_Dim_DEFINITION"
msgstr "The space dimensionality of this geometric representation item, it is always 3."

#:IFC.xml:10636
msgid "IfcTessellatedItem"
msgstr "IfcTessellatedItem"

msgid "IfcTessellatedItem_DEFINITION"
msgstr "A [[IfcTessellatedItem]] é o supertipo abstrato de todos os modelos geométricos tesselados. HISTÓRIA Nova entidade na IFC4."

#:IFC.xml:10639
msgid "IfcTriangulatedFaceSet"
msgstr "IfcTrianguladoFaceSet"

msgid "IfcTriangulatedFaceSet_DEFINITION"
msgstr "The [[IfcTriangulatedFaceSet]] is a tessellated face set with all faces being bound by triangles. The faces are constructed by implicit polylines defined by three Cartesian points. Depending on the value of the attribute Closed the instance of [[IfcTriangulatedFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The coordinates of each point are provided by a one based index into an ordered list of Cartesian points provided by the two dimensional list CoordIndex , where the first dimension of the two dimensional list addresses the list of triangular faces the second dimension of the two dimensional list provides exactly three indices. Each index points to a Cartesian point being a vertex of the triangle. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifctriangulatedfaceset 03.png Figure 1 Use of PnIndex See Figure 2 for using the [[IfcTriangulatedFaceSet]] without as default and with using the PnIndex . [[IfcTriangulatedFaceSet]] 01 .. .. .. .. figures ifctriangulatedfaceset 01.png Figure 2 Triangulated face set Optionally normals can be provided. Only normals per vector are supported allowing for visually curved triangles when the three normals of the corresponding three vertices of a triangle are not co linear to the normal of the triangular face. If they are identical, normals shall be omited. NOTE In case of a body representation having triangular faces with curvature, different normals for all three vertices in context of this triangles are exported, describing the curvature for smooth visualisation. In case of triangular faces with no curvature, the three vertex based normals are identical and could always be computed from the face. Therefore vertices should only be exported to support smooth visualisation by curvature of triangles. In case of faceted representation no vertices should be exported. Normals are provided by the two dimensional list Normals , where the first dimension of the two dimensional list addresses the corresponding list of vertex indices of the triangular faces the second dimension of the two dimensional list provides exactly three real values to determine the direction of the normal at this vertex of the triangle. The indices in the CoordIndex point into the list of Normals . The indices of CoordIndex are applied to both points, either directly directly, or via the PnIndex and normals. See Figure 3 for handling of normals. [[IfcTriangulatedFaceSet]] 02 .. .. .. .. figures ifctriangulatedfaceset 02.png Figure 3 Triangulated face set with normals NOTE Using corresponding lists of points and normals allows to use only a single list of indices into both at the expense of having non unique collections of vertices. Figure 4 shows the use of [[IfcTriangulatedFaceSet]] without annotation. The diagram of the [[IfcTriangulatedFaceSet]] represents the indices and the ordered list into which the indices point. The index starts with 1 indexed as 1 to N , if the greatest index in CoordIndex in N, then the [[IfcCartesianPointList]] shall have N lists of 3 3 coordinates. Figure 168 shows an [[IfcTriangulatedFaceSet]] represented by CoordIndex 1,6,5 , 1,2,6 , 6,2,7 , 7,2,3 , 7,8,6 , 6,8,5 , 5,8,1 , 1,8,4 , 4,2,1 , 2,4,3 , 4,8,7 , 7,3,4 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 4 Triangulated face set geometry NOTE The definition of [[IfcTriangulatedFaceSet]] is based on the indexedFaceSet and indexedTriangleSet defined in ISO IEC 19775 1. The use of PnIndex has been adopted from triangulated surface set defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two boundaries of faces the topological normal at each point on the boundary of the triangulated face set shall point away from the mater ial of the solid."

#:IFC.xml:10640
msgid "IfcTriangulatedFaceSet_NumberOfTriangles"
msgstr "NúmeroDeTriângulos"

msgid "IfcTriangulatedFaceSet_NumberOfTriangles_DEFINITION"
msgstr "Número derivado de triângulos usados para essa triângulo."

#:IFC.xml:10645
msgid "IfcTriangulatedFaceSet_Closed"
msgstr "Fechado"

msgid "IfcTriangulatedFaceSet_Closed_DEFINITION"
msgstr "Indicar se o [[IfcTriangulatedFaceSet]] é um shell fechado ou não. Se omitido nenhuma informação desse tipo poderá ser fornecida."

#:IFC.xml:10650
msgid "IfcTriangulatedFaceSet_CoordIndex"
msgstr "CoordIndex"

msgid "IfcTriangulatedFaceSet_CoordIndex_DEFINITION"
msgstr "Duas listas de dimensão para os triângulos indexados, onde a primeira dimensão representa os triângulos de 1 a N A segunda dimensão tem exatamente três valores que representam os índices para três pontos vértices, de 1 a 3. NOTA: As coordenadas dos vértices são fornecidas pela lista indexada de SELF [[IfcTessellatedFaceSet]].Coordenadas.CoordList ."

#:IFC.xml:10655
msgid "IfcTriangulatedFaceSet_Normals"
msgstr "Normais"

msgid "IfcTriangulatedFaceSet_Normals_DEFINITION"
msgstr "Uma lista ordenada de três direções para os normais. É uma lista duas dimensões de direções fornecida por três valores de parâmetro. A primeira dimensão corresponde aos índices vértices do índice Coordindex A segunda dimensão tem exatamente três valores, 1 a direção x, 2 a direção y e 3 a direção z"

#:IFC.xml:10660
msgid "IfcTriangulatedFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcTriangulatedFaceSet_PnIndex_DEFINITION"
msgstr "Lista de inteiros que definem as localizações na [[IfcCartesianPointList3D]] para obter as coordenadas dos pontos para os índices com a participação do Índice CoordÍndice . Se o Índice PnIndex não for fornecido, o ponto de índices diretamente para o [[IfcCartesianPointList3D]]."

#:IFC.xml:10667
msgid "IfcTriangulatedIrregularNetwork"
msgstr "IfcTrianguladoIrregularNetwork"

msgid "IfcTriangulatedIrregularNetwork_DEFINITION"
msgstr "A [[IfcTriangulatedIrregularNetwork]] é um conjunto de rosto triangulado para representar superfícies horizontais uma coordenada Z única para todas as coordenadas X e Y dentro do domínio com bandeiras adicionais para cada rosto indicando as linhas de quebra entre faces ou designações como um buraco ou vazio. Os triângulos devem ser definidos com vértices na ordem anti-horário como visualização a partir da regra acima à direita. Para visualização, aplicativos não devem exibir faces onde bandeiras são definidas como um buraco, vazio ou uma possível extensão futura. A bandeira Vazio deve ser usada para indicar que rostos devem ser excluídos sem cair em qualquer outra geometria. Essa designação poderia ser utilizada em partes de um local abaixo de uma construção ou outra estrutura. A bandeira Hole será usada para indicar que rostos devem ser excluídos, mas que podem cair noutras geometrias. Tal designação poderia ser usada para partes de um local proposto que devem permanecer inalterado, conformando com um local existente que também pode ser definido para cenários em que múltiplas superfícies usadas como entrada devem ser combinadas, quaisquer triângulos marcados como Vazio serão mantidos como vazios, enquanto quaisquer triângulos marcados como Hole serão substituídos se outra superfície tiver geometria visível definida dentro do mesmo local horizontal."

#:IFC.xml:10668
msgid "IfcTriangulatedIrregularNetwork_Flags"
msgstr "Bandeiras"

msgid "IfcTriangulatedIrregularNetwork_Flags_DEFINITION"
msgstr "Indica atributos de cada triângulo em uma forma compacta como segue 2 void invisível sem furo invisível 0 nenhuma linha de quebra 1 linha de quebra na aresta 1 2 linha de quebra na aresta 2 3 linha de quebra nas bordas 1 e 2 4 linha de quebra na aresta 3 5 linha de quebra nas arestas 1 e 3 6 linhas de quebra nas arestas 2 e 3 linhas de quebra nas arestas 1 e 3 7 nas arestas de limite 1, 2 e 3. Proposições formais"

