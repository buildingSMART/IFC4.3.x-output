msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Japanese\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/IfcKernel.pot\n"
"X-Crowdin-File-ID: 50\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: ja_JP\n"
"PO-Revision-Date: 2022-02-12 21:43\n"

#:IFC.xml:20474
msgid "IfcActor"
msgstr "IfcActor"

msgid "IfcActor_DEFINITION"
msgstr "[[IfcActor]]は、プロジェクトに参加するすべてのアクターまたは人間のエージェントをそのライフサイクルの間に定義します。 IFCオブジェクトモデルのリソース部分における個人および組織定義の使用を容易にします。 名前、住所、通信アドレス、役割が含まれます。 HISTORY IFC2.0内の新しいエンティティ"

#:IFC.xml:20500
msgid "IfcActor_IsActingUpon"
msgstr "IsActingOn"

msgid "IfcActor_IsActingUpon_DEFINITION"
msgstr "アクターをオブジェクトに関連付ける関係を参照します。"

#:IFC.xml:20475
msgid "IfcActor_TheActor"
msgstr "TheActor"

msgid "IfcActor_TheActor_DEFINITION"
msgstr "役者に関する情報。"

#:IFC.xml:20514
msgid "IfcComplexPropertyTemplate"
msgstr "IfcComplexPropertyTemplate"

msgid "IfcComplexPropertyTemplate_DEFINITION"
msgstr "[[IfcComplexPropertyTemplate]] は、[[IfcComplexProperty]] s または [[IfcPhysicalComplexQuantity]] s のいずれかの複合プロパティのテンプレートを定義します。 個々の複合プロパティテンプレートは、Name属性とオプションのUsageName属性に従って解釈されます。 HISTORY IFC4の新しいエンティティ。"

#:IFC.xml:20522
msgid "IfcComplexPropertyTemplate_TemplateType"
msgstr "テンプレートタイプ"

msgid "IfcComplexPropertyTemplate_TemplateType_DEFINITION"
msgstr "テンプレートタイプ"

#:IFC.xml:20534
msgid "IfcComplexPropertyTemplate_HasPropertyTemplates"
msgstr "HasPropertyTemplates"

msgid "IfcComplexPropertyTemplate_HasPropertyTemplates_DEFINITION"
msgstr "プロパティ テンプレートのセットへの参照。PropertyType が COMPLEXに設定されている場合にのみ提供されるべきです。"

#:IFC.xml:20515
msgid "IfcComplexPropertyTemplate_UsageName"
msgstr "UsageName"

msgid "IfcComplexPropertyTemplate_UsageName_DEFINITION"
msgstr "UsageName"

#:IFC.xml:20548
msgid "IfcComplexPropertyTemplateTypeEnum"
msgstr "IfcComplexPropertyTemplateTypeEnum"

msgid "IfcComplexPropertyTemplateTypeEnum_DEFINITION"
msgstr "This enumeration defines the applicable subtype of instances of [[IfcComplexProperty]] or [[IfcPhysicalComplexQuantity]] that may be created and defined by an [[IfcComplexPropertyTemplate]] . HISTORY New enumeration in IFC4. Items P Q COMPLEX"

#:IFC.xml:21586
msgid "IfcComplexPropertyTemplateTypeEnum_P_COMPLEX"
msgstr "P Complex"

msgid "IfcComplexPropertyTemplateTypeEnum_P_COMPLEX_DEFINITION"
msgstr "P Complex"

#:IFC.xml:21649
msgid "IfcComplexPropertyTemplateTypeEnum_Q_COMPLEX"
msgstr "Q COMPLEX"

msgid "IfcComplexPropertyTemplateTypeEnum_Q_COMPLEX_DEFINITION"
msgstr "Q COMPLEX"

#:IFC.xml:20551
msgid "IfcContext"
msgstr "IfcContext"

msgid "IfcContext_DEFINITION"
msgstr "[[IfcContext]] is the generalization of a project context in which objects, type objects, property sets, and properties are defined. The [[IfcProject]] as subtype of [[IfcContext]] provides the context for all information on a construction project, it may include one or several [[IfcProjectLibrary]] s as subtype of [[IfcContext]] to register the included libraries for the project. A library of products that is referenced is declared within the [[IfcProjectLibrary]] as the context of that library. Context definitions can be named, using the inherited Name attribute, which should be a user recognizable key or number for the context. The LongName can add a full name. Further explanations to the context can be given using the inherited Description attribute. A Context is declared by the relationship object [[IfcRelDeclares]] that refers to the corresponding objects within the context. More specific relationships are introduced at the level of subtypes. HISTORY New abstract entity in IFC4."

#:IFC.xml:20569
msgid "IfcContext_RepresentationContexts"
msgstr "RepresentationContexts"

msgid "IfcContext_RepresentationContexts_DEFINITION"
msgstr "コンテキスト内で使用される表現のコンテキスト。 コンテキストがプロジェクトであり、コンポーネントの形状表示が含まれている場合。 例えば、1つまたは複数の幾何学的表現コンテキストを定義する必要があります 世界座標系座標空間の寸法や精度の要素があります hangeのifc2x4 IFC4の変更 属性はオプションに変更されました。ファイルベースの交換に対する上向きの互換性を持つ変更を行いました。"

#:IFC.xml:20581
msgid "IfcContext_UnitsInContext"
msgstr "UnitsInContext"

msgid "IfcContext_UnitsInContext_DEFINITION"
msgstr "コンテキスト内で使用されるタイプを測定するためにグローバルに割り当てられた単位。 hangeのifc2x4 IFC4の変更 属性はオプションに変更されました。ファイルベースの交換に対する上向きの互換性を持つ変更を行いました。"

#:IFC.xml:20593
msgid "IfcContext_Declares"
msgstr "宣言"

msgid "IfcContext_Declares_DEFINITION"
msgstr "Reference to the [[IfcRelDeclares]] relationship that assigns the uppermost entities of includes hierarchies to this context instance. NOTE The spatial hiearchy is assigned to [[IfcProject]] using the [[IfcRelAggregates]] relationship. This is a single exception due to compatibility reasons with earlier releases."

#:IFC.xml:20607
msgid "IfcContext_IsDefinedBy"
msgstr "IsDefinedBy"

msgid "IfcContext_IsDefinedBy_DEFINITION"
msgstr "このコンテキストに添付されたプロパティセット定義へのリレーションシップのセット。 静的または動的に定義されたプロパティには、コンテキストをさらに定義する英数字情報コンテンツが含まれます。 .change ifc2x4 IFC4 変更点 データ型は [[IfcRelDefines]] から [[IfcRelDefinesByProperties]] に変更され、ファイルベースの取引所では上方互換性があります。"

#:IFC.xml:20552
msgid "IfcContext_LongName"
msgstr "LongName"

msgid "IfcContext_LongName_DEFINITION"
msgstr "参照目的で使用されるコンテキストの長い名前。"

#:IFC.xml:20557
msgid "IfcContext_ObjectType"
msgstr "オブジェクトタイプ"

msgid "IfcContext_ObjectType_DEFINITION"
msgstr "オブジェクト タイプは、オブジェクトをさらに示す特定の型を示します。使用は、インスタンス化可能なサブタイプのレベルで確立する必要があります。 注 [[IfcContext]] のサブタイプは、PredefinedType 属性を導入していません。 そのため、ObjectType の使用は、PredefinedType 列挙内の USERDEFINED の選択にバインドされません。"

#:IFC.xml:20562
msgid "IfcContext_Phase"
msgstr "段階"

msgid "IfcContext_Phase_DEFINITION"
msgstr "現在のプロジェクトフェーズ、またはこのプロジェクトのライフサイクルフェーズ。適用可能な値は、定義または実装者契約を表示することによって合意される必要があります。"

#:IFC.xml:20619
msgid "IfcControl"
msgstr "IfcControl"

msgid "IfcControl_DEFINITION"
msgstr "[[IfcControl]] は、一般的に製品、プロセス、またはリソースの使用を制御または制約するすべての概念の抽象的な一般化です。 これは、製品に適用される規制、コストスケジュール、要求または注文、またはその他の要件と見ることができます。 要件と規定が満たされなければならないプロセスやリソース。 例: アクション要求、コストスケジュール、プロジェクト注文、作業計画、および作業カレンダーが含まれます。 HISTORY IFC1.0に新しいエンティティが追加されました。.change ifc2x4 IFC4 属性識別が追加されました。"

#:IFC.xml:20627
msgid "IfcControl_Controls"
msgstr "コントロール"

msgid "IfcControl_Controls_DEFINITION"
msgstr "制御されているオブジェクトに制御を関連付ける関係を参照します。"

#:IFC.xml:20620
msgid "IfcControl_Identification"
msgstr "識別"

msgid "IfcControl_Identification_DEFINITION"
msgstr "コントロールに与えられた識別番号は、オカレンスレベルでの識別子です。 hrange ifc2x4 IFC4 [[IfcControl]] のさまざまなサブタイプから促進することによって統一された属性を変更."

#:IFC.xml:20641
msgid "IfcCorrectObjectAssignment"
msgstr "IfcCorrectObjectAssignment"

#:IFC.xml:20649
msgid "IfcDefinitionSelect"
msgstr "IfcDefinitionSelect"

#:IFC.xml:20650
msgid "IfcGroup"
msgstr "IfcGroup"

msgid "IfcGroup_DEFINITION"
msgstr "[[IfcGroup]] is an generalization of any arbitrary group. A group is a logical collection of objects. It does not have its own position, nor can it hold its own shape representation. Therefore a group is an aggregation under some non geometrical topological grouping aspects. EXAMPLE An example for a group is a system, since it groups elements under the aspect of their role, regardless of their position in a building. One of the most important usage of a group representing a system is the [[IfcDistributionSystem]] , that groups distribution components, such as space heaters and valves into a heating system. A group can hold any collection of objects, the relationship [[IfcRelAssignsToGroup]] is used to establish the group collection. Objects within a group are products, processes, controls, resources, actors or other groups, thus groups can be nested. An object can be part of zero, one, or many groups. Grouping relationships are not required to be hierarchical nor do they imply a dependency. Groups are assigned to other objects such as a process or a resource by the relationship object that refers to the corresponding object Process assigned using [[IfcRelAssignsToProcess]] Resource assigned using [[IfcRelAssignsToResource]] Controls affecting the group using [[IfcRelAssignsToControl]] A group can be exchanged without having already objects within the group collection. [[IfcGroup]] does not define an own object coordinate system, nor does it have an independent shape representation. NOTE Use [[IfcRelAggregates]] together with the appropriate subtypes of [[IfcProduct]] to define an aggregation of products that may have its own position and shape representation. This relationship shall be used to create a product breakdown structure. HISTORY New entity in IFC1.0. .change ifc2x4 IFC4 CHANGE The inverse IsGroupedBy relationship is set to 0..n"

#:IFC.xml:20654
msgid "IfcGroup_ReferencedInStructures"
msgstr "ReferencedInStructures"

msgid "IfcGroup_ReferencedInStructures_DEFINITION"
msgstr "ReferencedInStructures"

#:IFC.xml:20666
msgid "IfcGroup_IsGroupedBy"
msgstr "IsGroupedBy"

msgid "IfcGroup_IsGroupedBy_DEFINITION"
msgstr "Reference to the relationship [[IfcRelAssignsToGroup]] that assigns the one to many group members to the [[IfcGroup]] object. .change ifc2x4 IFC4 CHANGE The cardinality has been changed from 1..1 to 0.. in order to allow the exchange of a group concept without having already group members assigned. It now also allows the use of many instances of [[IfcRelAssignsToGroup]] to assign the group members. The change has been done with upward compatibility for file based exchange."

#:IFC.xml:20680
msgid "IfcObject"
msgstr "IfcObject"

msgid "IfcObject_DEFINITION"
msgstr "An [[IfcObject]] is the generalization of any semantically treated thing or process. Objects are things as they appear i.e. occurrences. NOTE Examples of [[IfcObject]] include physically tangible items such as wall, beam or covering, physically existing items such as spaces, or conceptual items such as grids or virtual boundaries. It also stands for processes such as work tasks, for controls such as cost items, or for actors such as persons involved in the design process. Objects can be named, using the inherited Name attribute, which should be a user recognizable label for the object occurrance. Further explanations to the object can be given using the inherited Description attribute. The ObjectType attribute is used to store the user defined value for all subtypes of [[IfcObject]] , where a PredefinedType attribute is given, and its value is set to USERDEFINED. to provide a type information could be seen as a very lightweight classifier of the subtype of [[IfcObject]] , if no PredefinedType attribute is given. This is often the case, if no comprehensive list of predefined types is available. Objects are independent pieces of information that might contain or reference other pieces of information. There are several relationships in which objects can be involved Association to external internal resource information an association relationship that refers to external internal sources of information. See supertype [[IfcObjectDefinition]] for more information. Assignment of other objects an assignment relationship that refers to other types of objects. See supertype [[IfcObjectDefinition]] for more information. Aggregation of other objects an aggregation relationship that establishes a whole part relation. Objects can either be a whole, or a part, or both. See supertype [[IfcObjectDefinition]] for more information. Assignment of a type IsTypedBy a definition relationship [[IfcRelDefinesByType]] that uses a type definition to define the common characteristics of this occurrences, potentially including the common shape representation and common properties of all object occurrences assigned to this type. It is a specific occurrence relationship with implied dependencies as the occurrence properties depend on the properties of the type, but may override them . Assignment of a partial type IsDeclaredBy , Declares a definition relationship [[IfcRelDefinesByObject]] that uses a component of a type definition a part of a type, called the declaring part to define a component of an occurence part of occurrence, called the reflected part . This is also refered to as a deep copy . The common characteristics of all parts in the occurrence are defined by parts in the type. It is a specific occurrence relationship with implied dependencies as the occurrence properties depend on the properties of the type, but may override them . Assignment of property sets IsDefinedBy a definition relationship [[IfcRelDefinesByProperties]] that assignes property set definitions to the object occurrence. NOTE See [[IfcRelDefinesByType]] for an explanatory figure. Also see there for how to override type properties by occurrence properties. See [[IfcRelDefinesByObject]] for an explanatory figure for the assignment of a partial type. HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE The inverse relationships Declares , IsDeclaredBy , and IsTypedBy have been added, types are not longer included in the IsDefinesBy relationship. [[IfcProject]] has been promoted to be a subtype of [[IfcObjectDefinition]] [[IfcContext]] . .spec head Informal Propositions 1. A partial type assignment, i.e. the inverse attribute IsDeclaredBy , or Declares shall only be used, if the object is part of a decomposition, i.e. if either IsDecomposedBy , or Decomposes is exerted."

#:IFC.xml:20688
msgid "IfcObject_IsDeclaredBy"
msgstr "IsDeclaredBy"

msgid "IfcObject_IsDeclaredBy_DEFINITION"
msgstr "Link to the relationship object pointing to the declaring object that provides the object definitions for this object occurrence. The declaring object has to be part of an object type decomposition. The associated [[IfcObject]] , or its subtypes, contains the specific information as part of a type, or style, definition , that is common to all reflected instances of the declaring [[IfcObject]] , or its subtypes. .change ifc2x4 IFC4 CHANGE New inverse relationship, change made with upward compatibility for file based exchange."

#:IFC.xml:20702
msgid "IfcObject_Declares"
msgstr "宣言"

msgid "IfcObject_Declares_DEFINITION"
msgstr "Link to the relationship object pointing to the reflected object s that receives the object definitions. The reflected object has to be part of an object occurrence decomposition. The associated [[IfcObject]] , or its subtypes, provides the specific information as part of a type, or style, definition , that is common to all reflected instances of the declaring [[IfcObject]] , or its subtypes. .change ifc2x4 IFC4 CHANGE New inverse relationship, change made with upward compatibility for file based exchange."

#:IFC.xml:20716
msgid "IfcObject_IsTypedBy"
msgstr "IsTypedBy"

msgid "IfcObject_IsTypedBy_DEFINITION"
msgstr "Set of relationships to the object type that provides the type definitions for this object occurrence. The then associated [[IfcTypeObject]] , or its subtypes, contains the specific information or type, or style , that is common to all instances of [[IfcObject]] , or its subtypes, referring to the same type. .change ifc2x4 IFC4 CHANGE New inverse relationship, the link to [[IfcRelDefinesByType]] had previously be included in the inverse relationship [[IfcRelDefines]] . Change made with upward compatibility for file based exchange."

#:IFC.xml:20730
msgid "IfcObject_IsDefinedBy"
msgstr "IsDefinedBy"

msgid "IfcObject_IsDefinedBy_DEFINITION"
msgstr "このオブジェクトに添付されているプロパティセット定義へのリレーションシップのセット。 静的または動的に定義されたプロパティには、オブジェクトをさらに定義する英数字情報コンテンツが含まれます。 .change ifc2x4 IFC4 変更点 データ型は [[IfcRelDefines]] から [[IfcRelDefinesByProperties]] に変更され、ファイルベースの取引所では上方互換性があります。"

#:IFC.xml:20681
msgid "IfcObject_ObjectType"
msgstr "オブジェクトタイプ"

msgid "IfcObject_ObjectType_DEFINITION"
msgstr "この型はオブジェクトをさらに示す特定の型を示します。使用はインスタンス化可能なサブタイプのレベルで確立する必要があります。 特に、PredefinedType 属性の列挙が USERDEFINED に設定されている場合、ユーザー定義型を保持します。"

#:IFC.xml:20742
msgid "IfcObjectDefinition"
msgstr "IfcObjectDefinition"

msgid "IfcObjectDefinition_DEFINITION"
msgstr "An [[IfcObjectDefinition]] is the generalization of any semantically treated thing or process, either being a type or an occurrences. Object defintions can be named, using the inherited Name attribute, which should be a user recognizable label for the object occurrance. Further explanations to the object can be given using the inherited Description attribute. A context is a specific kind of object definition as it provides the project or library context in which object types and object occurrences are defined. Objects are independent pieces of information that might contain or reference other pieces of information. There are four essential kinds of relationships in which object definitons by their instantiable subtypes can be involved Assignment of other objects an assignment relationship [[IfcRelAssigns]] that refers to other types of objects and creates a bi directional association. The semantic of the assignment is established at the level of the subtypes of the general [[IfcRelAssigns]] relationship. There is no dependency implied a priori by the assignment. Association to external resources an association relationship [[IfcRelAssociates]] that refers to external sources of information most notably a classification or document and creates a uni directional association. There is no dependency implied by the association. Aggregation of other objects an aggregation relationship [[IfcRelAggregates]] that establishes an unordered, spatial whole part relation and creates a bi directional relation. There is an implied dependency established. Nesting of other objects a nesting relationship [[IfcRelNests]] that establishes an ordered, non spatial whole part relation and creates a bi directional relation. There is an implied dependency established. Declaration within a context a relationship [[IfcRelDeclares]] of the uppermost object definition within the object definition tree e.g. the summary object within an object nesting tree to the context a project or project library . It applies the units, representation context and other context information to this object definition and all dependent ones. NOTE The link between the uppermost object in the spatial structure tree, that is [[IfcSite]] or ifcBuilding , and the context provided by [[IfcProject]] is created using the [[IfcRelAggregates]] relationship. See [[IfcProject]] for more information. HISTORY New abstract entity in IFC2x3. .change ifc2x4 IFC4 CHANGE The new subtype [[IfcContext]] and the relationship to context HasContext has been added . The decomposition relationship is split into ordered nesting Nests , IsNestedBy and un ordered aggregating Decomposes , IsDecomposedBy ."

#:IFC.xml:20746
msgid "IfcObjectDefinition_IsDecomposedBy"
msgstr "IsDecompposedBy"

msgid "IfcObjectDefinition_IsDecomposedBy_DEFINITION"
msgstr "分解関係を集約として参照することにより、このオブジェクトの定義は、部品の全分解関係内の全体であることが判断されます。 オブジェクト定義は、他の複数のオブジェクトの発生または部品によって集計することができます。 hrange ifc2x4 IFC4 変更点 逆属性データ型は supertype [[IfcRelDecomposes]] から subtype [[IfcRelAggregates]] に変更されました。"

#:IFC.xml:20760
msgid "IfcObjectDefinition_Decomposes"
msgstr "分解する"

msgid "IfcObjectDefinition_Decomposes_DEFINITION"
msgstr "分解関係を集約として参照し、このオブジェクトの定義は、部品の全分解関係内の部品であることを決定します。 オブジェクト定義は、階層構造のみを可能にするために、単一の分解の一部にすることができます。 hrange ifc2x4 IFC4 変更点 逆属性データ型は supertype [[IfcRelDecomposes]] から subtype [[IfcRelAggregates]] に変更されました。"

#:IFC.xml:20774
msgid "IfcObjectDefinition_HasAssignments"
msgstr "HasAssignments"

msgid "IfcObjectDefinition_HasAssignments_DEFINITION"
msgstr "関連リレーションによって割り当てられるリレーションオブジェクトを参照します。他のサブタイプの[[IfcObject]]。 例として、製品、プロセス、コントロール、リソース、またはグループとの関連付けがあります。"

#:IFC.xml:20800
msgid "IfcObjectDefinition_IsNestedBy"
msgstr "IsNestedBy"

msgid "IfcObjectDefinition_IsNestedBy_DEFINITION"
msgstr "ネストである分解関係への参照. このオブジェクトの定義は,部品の全分解関係内の全体であることを決定する. オブジェクトまたはオブジェクトの型は、いくつかの他のオブジェクトの発生または型によってネストすることができます。 hrange ifc2x4 IFC4 変更点 逆属性データ型が追加され、[[IfcObjectDefinition]] で定義されたIsDecomposedBy から分離されました。"

#:IFC.xml:20814
msgid "IfcObjectDefinition_Nests"
msgstr "巣の数"

msgid "IfcObjectDefinition_Nests_DEFINITION"
msgstr "ネストである分解関係への参照. このオブジェクトの定義は、順序付けられた部品全体の分解関係内の部品であることを決定する. オブジェクトの発生または型は、階層構造のみを可能にする単一の分解の一部であることができます。 hrange ifc2x4 IFC4 変更点 [[IfcObjectDefinition]] で定義された逆属性データ型が追加され、分解から分離されました。"

#:IFC.xml:20828
msgid "IfcObjectDefinition_HasContext"
msgstr "HasContext"

msgid "IfcObjectDefinition_HasContext_DEFINITION"
msgstr "プロジェクト単位や表示コンテキストなどのコンテキスト情報を提供するコンテキストへの参照。 .change ifc2x4 IFC4 変更点 逆属性データ型が追加されました。"

#:IFC.xml:20840
msgid "IfcObjectDefinition_HasAssociations"
msgstr "HasAssociations"

msgid "IfcObjectDefinition_HasAssociations_DEFINITION"
msgstr "リレーションシップオブジェクトを参照し、外部参照やその他のリソース定義をオブジェクトに関連付けます.. 例えば、ライブラリ、ドキュメント、または分類への関連付けです。"

#:IFC.xml:20852
msgid "IfcObjectTypeEnum"
msgstr "IfcObjectTypeEnum"

msgid "IfcObjectTypeEnum_DEFINITION"
msgstr "この列挙は、該当するオブジェクトカテゴリを定義します。 オブジェクトに添付されている場合は、エンティティを参照している [[IfcObject]] のどのサブタイプに準拠するかを示します。 HISTORY IFC1.0の新しいエンティティ。.deprecated DEPRECATION この列挙の使用はIFC2x3以降推奨されていません。"

#:IFC.xml:20853
msgid "IfcObjectTypeEnum_ACTOR"
msgstr "取付者"

msgid "IfcObjectTypeEnum_ACTOR_DEFINITION"
msgstr "取付者"

#:IFC.xml:20854
msgid "IfcObjectTypeEnum_CONTROL"
msgstr "コントロール"

msgid "IfcObjectTypeEnum_CONTROL_DEFINITION"
msgstr "コントロール"

#:IFC.xml:20855
msgid "IfcObjectTypeEnum_GROUP"
msgstr "グループ"

msgid "IfcObjectTypeEnum_GROUP_DEFINITION"
msgstr "グループ"

#:IFC.xml:20856
msgid "IfcObjectTypeEnum_NOTDEFINED"
msgstr "注記されました"

msgid "IfcObjectTypeEnum_NOTDEFINED_DEFINITION"
msgstr "注記されました"

#:IFC.xml:20857
msgid "IfcObjectTypeEnum_PROCESS"
msgstr "プロセス"

msgid "IfcObjectTypeEnum_PROCESS_DEFINITION"
msgstr "プロセス"

#:IFC.xml:20858
msgid "IfcObjectTypeEnum_PRODUCT"
msgstr "製品"

msgid "IfcObjectTypeEnum_PRODUCT_DEFINITION"
msgstr "製品"

#:IFC.xml:20859
msgid "IfcObjectTypeEnum_PROJECT"
msgstr "プロジェクト"

msgid "IfcObjectTypeEnum_PROJECT_DEFINITION"
msgstr "プロジェクト"

#:IFC.xml:20860
msgid "IfcObjectTypeEnum_RESOURCE"
msgstr "リソース"

msgid "IfcObjectTypeEnum_RESOURCE_DEFINITION"
msgstr "リソース"

#:IFC.xml:20862
msgid "IfcPreDefinedPropertySet"
msgstr "IfcPreDefinedPropertySet"

msgid "IfcPreDefinedPropertySet_DEFINITION"
msgstr "[[IfcPreDefinedPropertySet]] is a generalization of all statically defined property sets that are assigned to an object or type object. The statically or pre defined property sets are entities with a fixed list of attributes having particular defined data types. Property sets are related to other objects by using the relationship object that refers to the corresponding object Occurrence Object [[IfcRelDefinesByProperties]] using the inverse attribute DefinesOccurrence . Type Object using a direct link by inverse attribute DefinesType . [[IfcPreDefinedPropertySet]] s can be assigned to objects and object types but do not have a defining property set template. HISTORY New entity in IFC4"

#:IFC.xml:20865
msgid "IfcProcess"
msgstr "IfcProcess"

msgid "IfcProcess_DEFINITION"
msgstr "[[IfcProcess]] is defined as one individual activity or event, that is ordered in time, that has sequence relationships with other processes, which transforms input in output, and may connect to other other processes through input output relationships. An [[IfcProcess]] can be an activity or task , or an event. It takes usually place in building construction with the intent of designing, costing, acquiring, constructing, or maintaining products or other and similar tasks or procedures. Figure 1 illustrates process relationships. .extDef NOTE Definition according to ISO9000 A process is a set of activities that are interrelated or that interact with one another. Processes use resources to transform inputs into outputs. Processes are interconnected because the output from one process becomes the input for another process. In effect, processes are glued together by means of such input output relationships. icon diagram .. .. .. .. figures ifcprocess icon fig.png Figure 1 Process relationships and the ICON process diagram. Process information relates to other objects by establishing the following relationships Nesting of processes [[IfcRelNests]] A process can contain sub processes and thereby be nested. Sequencing of processes [[IfcRelSequence]] Processes can be placed in sequence including overlapping for parallel tasks , and have predecessors and successors. Assigning process to schedules [[IfcRelAssignsToControl]] Activities such as tasks, and predominately summary tasks, are assigned to a work schedule. Having a product assigned to the process as input [[IfcRelAssignsToProcess]] Products can be assigned as input to a process, such as for construction process planning. Having a product assigned to the process as output [[IfcRelAssignsToProduct]] Products can be assigned as output to a process, such as for construction process planning. Having a control assigned to the process as process control [[IfcRelAssignsToProcess]] Items that act as a control onto the process can be assigned to a process, such as for cost management a cost item assigned to a work task . Having a resource assigned to the process as consumed by the process [[IfcRelAssignsToProcess]] Items that act as a mechanism to a process, such as labor, material and equipment in cost calculations. HISTORY New entity in IFC1.0. .change ifc2x IFC2x CHANGE The attribute Productivity has been removed. .change ifc2x4 IFC4 CHANGE The attribute Identification has been promoted from subtypes [[IfcTask]] and others."

#:IFC.xml:20879
msgid "IfcProcess_IsPredecessorTo"
msgstr "IsPredecessorTo"

msgid "IfcProcess_IsPredecessorTo_DEFINITION"
msgstr "2つの活動間の依存性は、この活動が前任者であるその後の活動を指します。 2つのアクティビティ間のリンクはリンクタイプとラグタイムを含めることができます。"

#:IFC.xml:20893
msgid "IfcProcess_IsSuccessorFrom"
msgstr "IsSuccessorFrom"

msgid "IfcProcess_IsSuccessorFrom_DEFINITION"
msgstr "2つのアクティビティ間の依存性は、このアクティビティが後継者である以前のアクティビティを指します。 2つのアクティビティ間のリンクはリンクタイプとラグタイムを含めることができます。"

#:IFC.xml:20907
msgid "IfcProcess_OperatesOn"
msgstr "OperatesOn"

msgid "IfcProcess_OperatesOn_DEFINITION"
msgstr "プロセスによって操作される製品、プロセス、制御、リソースまたはアクターなどの他のオブジェクトへのリレーションシップのセット。"

#:IFC.xml:20866
msgid "IfcProcess_Identification"
msgstr "識別"

msgid "IfcProcess_Identification_DEFINITION"
msgstr "プロセスまたはアクティビティに指定された識別子。これはオカレンスレベルでの識別子である。.change ifc2x4 IFC4 変更属性はサブタイプから促進される。"

#:IFC.xml:20871
msgid "IfcProcess_LongDescription"
msgstr "LongDescription"

msgid "IfcProcess_LongDescription_DEFINITION"
msgstr ".change ifc2x4 IFC4 は新しい属性を変更する。"

#:IFC.xml:20919
msgid "IfcProcessSelect"
msgstr "IfcProcessSelect"

#:IFC.xml:20920
msgid "IfcProduct"
msgstr "IfcProduct"

msgid "IfcProduct_DEFINITION"
msgstr "The [[IfcProduct]] is an abstract representation of any object that relates to a geometric or spatial context. An [[IfcProduct]] occurs at a specific location in space if it has a geometric representation assigned. It can be placed relatively to other products, but ultimately relative to the project coordinate system. The ObjectPlacement attribute establishes the coordinate system in which all points and directions used by the geometric representation items under Representation are founded. The Representation is provided by an [[IfcProductDefinitionShape]] being either a geometric shape representation, or a topology representation with or without underlying geometry of the topological items . Products include manufactured, supplied or created objects referred to as elements for incorporation into an AEC FM project. This also includes objects that are created indirectly by other products, as spaces are defined by bounding elements. Products can be designated for permanent use or temporary use, an example for the latter is formwork. Products are defined by their properties and representations. In addition to physical products covered by the subtype [[IfcElement]] and spatial items covered by the subtype [[IfcSpatialElement]] the [[IfcProduct]] also includes non physical items, that relate to a geometric or spatial contexts, such as grid, port, annotation, structural actions, etc. Any instance of [[IfcProduct]] defines a particular occurrence of a product, the common type information, that relates to many similar or identical occurrences of [[IfcProduct]] , is handled by the [[IfcTypeProduct]] and its subtypes , assigned to one or many occurrences of [[IfcProduct]] by using the objectified relationship [[IfcRelDefinesByType]] . The [[IfcTypeProduct]] may provide, in addition to common properties, also a common geometric representation for all occurrences. NOTE See [[IfcTypeProduct]] for how to use a common geometric representation and [[IfcRelDefinesByType]] for using and overriding common properties. On a generic level products can be assigned to processes, controls, resources, project by using the relationship objects that refer to the corresponding object Having a control applied assigned using [[IfcRelAssignsToControl]] linking the [[IfcProduct]] to an [[IfcControl]] Being assigned to a process assigned using [[IfcRelAssignsToProcess]] linking the [[IfcProduct]] to an [[IfcProcess]] Being assigned to a resource assigned using [[IfcRelAssignsToResource]] linking the [[IfcProduct]] to an [[IfcResource]] EXAMPLE An example of the control relationship is the assignment of a performance history to a distribution element. An example of process assignment relationship is the assignment of products like wall, slab, column to a contruction task for construction planning. And an example of resource assignment relationship is the assignment of products to a construction resource that consumes the product. HISTORY New entity in IFC1.0"

#:IFC.xml:10244
msgid "IfcProduct_ObjectPlacement"
msgstr "オブジェクト配置"

msgid "IfcProduct_ObjectPlacement_DEFINITION"
msgstr "空間における製品の配置、配置はワールド座標系に対して絶対であることができます 他の製品のオブジェクト配置に対する相対参照、または制約など。 を選択します。 [[IfcObjectPlacement]]のサブタイプによって決まります。 は、オブジェクト座標系の変換を決定する軸配置情報を含みます。"

#:IFC.xml:20925
msgid "IfcProduct_Representation"
msgstr "表現"

msgid "IfcProduct_Representation_DEFINITION"
msgstr "製品の表現への参照 表現[[IfcProductRepresentation]]または特殊なケースとして形状表現[[IfcProductDefinitionShape]]のいずれかです。 製品定義の図形は、同じオブジェクト 座標系内のオブジェクトの shape プロパティの複数の幾何学的表現を提供します。 オブジェクトの配置で定義されます。"

#:IFC.xml:20961
msgid "IfcProduct_PositionedRelativeTo"
msgstr "PositionedRelativeTo"

msgid "IfcProduct_PositionedRelativeTo_DEFINITION"
msgstr "PositionedRelativeTo"

#:IFC.xml:20975
msgid "IfcProduct_ReferencedBy"
msgstr "参照元"

msgid "IfcProduct_ReferencedBy_DEFINITION"
msgstr "Reference to the [[IfcRelAssignsToProduct]] relationship, by which other products, processes, controls, resources or actors as subtypes of [[IfcObjectDefinition]] can be related to this product."

#:IFC.xml:20987
msgid "IfcProduct_ReferencedInStructures"
msgstr "ReferencedInStructures"

msgid "IfcProduct_ReferencedInStructures_DEFINITION"
msgstr "ReferencedInStructures"

#:IFC.xml:20999
msgid "IfcProductSelect"
msgstr "IfcProductSelect"

#:IFC.xml:21000
msgid "IfcProject"
msgstr "IfcProject"

msgid "IfcProject_DEFINITION"
msgstr "[[IfcProject]] indicates the undertaking of some design, engineering, construction, or maintenance activities leading towards a product. The project establishes the context for information to be exchanged or shared, and it may represent a construction project but does not have to. The [[IfcProject]] s main purpose in an exchange structure is to provide the root instance and the context for all other information items included. The context provided by the [[IfcProject]] includes the default units the geometric representation context for exchange structures including shape representations the project coordinate system the coordinate space dimension the precision used within the geometric representations optionally the indication of the true north optionally the map conversion between the project coordinate system and the geospatial coordinate reference system. HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE The attributes RepresentationContexts and UnitsInContext are made optional and are promoted to supertype [[IfcContext]] . .spec head Informal Propositions 1. There shall only be one project within the exchange context. This is enforced by the global rule [[IfcSingleProjectInstance]] . Formal Propositions HasName The Name attribute has to be provided for [[IfcProject]] . It is the short name for the project. CorrectContext If a RepresentationContexts relation is provided then there shall be no instance of [[IfcGeometricRepresentationSubContext]] directly included in the set of RepresentationContexts . NoDecomposition The [[IfcProject]] represents the root of the any decomposition tree. It shall therefore not be used to decompose any other object definition. Concepts Project Classification Information Project Declaration The [[IfcProject]] is also the context for other information about the construction project such as a work plan. Non product structures are assigned by their first level object to [[IfcProject]] using the [[IfcRelDeclares]] relationship. The [[IfcProject]] provides the context for work plans or other non product based descriptions of the construction project. It is handled by the objectified relationship [[IfcRelDeclares]]. NOTE The spatial structure and the schedule structure can be decomposed. For example the [[IfcBuilding]] can be decomposed into [[IfcBuildingStorey]] s, and the [[IfcWorkPlan]] can be decomposed into [[IfcWorkSchedule]] s. NOTE The products and tasks can be decomposed further. For example the [[IfcCurtainWall]] can be decomposed into [[IfcMember]] and [[IfcPlate]], the [[IfcTask]] can be decomposed into other [[IfcTask]] s. NOTE The products and tasks can have direct linking relationships. For example the [[IfcCurtainWall]] can be assigned to a [[IfcTask]] as an input or output for a construction schedule. Figure 128 illustrates the use of [[IfcProject]] as context for work plans or work schedules. project relationships .. .. .. .. figures ifcproject fig 1.png Figure 128 Project spatial and work plan structure Project Document Information Project Global Positioning The representation context of the project refers to a global positioning, i.e. the local engineering coordinate system of the project has a mapping to a defined projected coordinate system a rectangular map coordinate system, as used in GIS systems Project Library Information Project Representation Context Project Units Spatial Decomposition The [[IfcProject]] is used to reference the root of the spatial structure of a building or other construction project that serves as the primary project breakdown and is required to be hierarchical . The spatial structure elements are linked together, and to the [[IfcProject]], by using the objectified relationship [[IfcRelAggregates]]. The following constraints are applied to using the relationshio [[IfcRelAggregates]] in context of [[IfcProject]] NOTE The anomaly to use the composition structure through [[IfcRelAggregates]] for assigning the uppermost spatial container to [[IfcProject]] is due to upward compatibility reasons with earlier releases of this standard. [[IfcProject]].Decomposes it shall be NIL, i.e. the [[IfcProject]] shall be on top of the root of the spatial structure tree. [[IfcProject]].IsDecomposedBy referencing [[IfcSite]] [[IfcBuilding]] [[IfcSpatialZone]] by using [[IfcRelAggregates]].RelatedObjects. The [[IfcSite]], [[IfcBuilding]], or [[IfcSpatialZone]] being referenced shall be the root of the spatial structure. Figure 129 illustrates project relationships with spatial structures, elements, and element type libraries. spatial decomposition relationships .. .. .. .. figures ifcproject fig 2.png Figure 129 Project spatial structure, products and product type library"

#:IFC.xml:21027
msgid "IfcProjectLibrary"
msgstr "IfcProjectLibrary"

msgid "IfcProjectLibrary_DEFINITION"
msgstr "An [[IfcProjectLibrary]] collects all library elements that are included within a referenced project data set. Examples for project libraries include type libraries also called style or family libraries a collection of subtypes of [[IfcTypeObject]] property definition libraries a collections of [[IfcPropertySetTemplate]] or IfcPropertyTemplates The inherited attributes RepresentationContext and UnitsInContext have the following meaning Context of the representations used within the project library. When the project library includes shape representations for its library type objects, one or several geometric representation contexts need to be included that define the coordinate system, the coordinate space dimensions, and or the precision factor, Units locally assigned to measure types used within the context of this project library. NOTE It is generally discouraged to use a different length measure and plane angle measure in an included project library compared with the project itself. It may lead to unexpected results for the shape representation of items included in the project library. Instances of [[IfcProjectLibrary]] are assigned to the project context using the [[IfcRelDeclares]] relationship and accessible through the inverse attribute HasContext . Individual object types and property set templates are assigned to the [[IfcProjectLibrary]] using the [[IfcRelDeclares]] relationship and are accessible through the inverse attribute Declares . An [[IfcProjectLibrary]] may be decomposed into sub libraries using the relationship [[IfcRelNests]] . Sub libraries are accessed by the [[IfcProjectLibrary]] through the inverse attribute IsNestedBy . HISTORY New entity in IFC4."

#:IFC.xml:21030
msgid "IfcPropertyDefinition"
msgstr "IfcPropertyDefinition"

msgid "IfcPropertyDefinition_DEFINITION"
msgstr "[[IfcPropertyDefinition]] defines the generalization of all characteristics i.e. a grouping of individual properties , that may be assigned to objects. Currently, subtypes of [[IfcPropertyDefinition]] include property set occurrences, property set templates, and property templates. Property set template [[IfcPropertySetTemplate]] , a collection of property templates that determine the definition of properties used within a project context. Property template [[IfcPropertyTemplate]] , a single template that determines the definition of a particular property used in the same project context. The template may determine the name, description, data type, the unit, or a standard expression for each property that is based on that template. Property set occurrence [[IfcPropertySet]] , a set of individual properties that may or may not be determined by a property template holding individual values, measure types and units, and are associated to an object occurrence or object type. NOTE The subtype hierarchy of [[IfcPropertyDefinition]] also includes statically defined property sets as [[IfcPreDefinedPropertySet]] . Those are rarely used collections of fixed attributes combined in an entity definition. The [[IfcPreDefinedPropertySet]] can not be determined by an [[IfcPropertySetTemplate]] . NOTE Individual properties, subtypes of [[IfcProperty]] , are currently not included in the subtype hierarchy of [[IfcPropertyDefinition]] . This anomaly is due to upward compatibility reasons with earlier releases of this standard. Property definitions define information that is shared among multiple instances of objects, either object occurrences or object types. [[IfcPropertyDefinition]] s by their instantiable subtypes can participate within the following relationships Assignment to a project context an HasContext relationship to [[IfcRelDeclares]] that establishes the project context in which this property definition is declared. This relationship is predominately applicable to subtypes of [[IfcPropertyTemplateDefinition]] . Association to external resources an HasAssociation relationship to [[IfcRelAssociates]] that refers to external sources of information most notably a classification or document and creates a uni directional association. There is no dependency implied by the association. Subtypes are included in more specific relationships, see [[IfcPropertySetDefinition]] and [[IfcPropertyTemplateDefinition]] for details. HISTORY New entity in IFC2.0"

#:IFC.xml:21034
msgid "IfcPropertyDefinition_HasContext"
msgstr "HasContext"

msgid "IfcPropertyDefinition_HasContext_DEFINITION"
msgstr "HasContext"

#:IFC.xml:21046
msgid "IfcPropertyDefinition_HasAssociations"
msgstr "HasAssociations"

msgid "IfcPropertyDefinition_HasAssociations_DEFINITION"
msgstr "関連[[IfcRelAssociates]]と外部で定義された概念を参照してください。 物件の定義に関連する分類や書類や図書館の情報などです"

#:IFC.xml:21058
msgid "IfcPropertySet"
msgstr "IfcPropertySet"

msgid "IfcPropertySet_DEFINITION"
msgstr "The [[IfcPropertySet]] is a container that holds properties within a property tree. These properties are interpreted according to their name attribute. Each individual property has a significant name string. Some property sets are included in the specification of this standard and have a predefined set of properties indicated by assigning a significant name. These property sets are listed under property sets within this specification. Property sets applicable to certain objects are listed in the object specification. The naming convention Pset Xxx applies to all those property sets that are defined as part of this specification and it shall be used as the value of the Name attribute. In addition any user defined property set can be captured. Property sets that are not declared as part of the IFC specification shall have a Name value not including the Pset prefix. [[IfcPropertySet]] can be assigned to object occurrences and object types. An [[IfcPropertySet]] assigned to an object type is shared among all occurrences of the same object type. NOTE See [[IfcRelDefinesByType]] for how to override property sets assigned to an object type within the object occurrence. An [[IfcPropertySetTemplate]] may define the underlying structure, i.e. the required name, the applicable object or object types to which the property set can be attached, and the individual properties that can be included. Property sets are related to other objects by using the relationship object that refers to the corresponding object Occurrence Object [[IfcRelDefinesByProperties]] using the inverse attribute DefinesOccurrence . Type Object using a direct link by inverse attribute DefinesType . Underlying template [[IfcRelDefinesByTemplate]] using the inverse attribute IsDefinedBy . External reference subtypes of [[IfcRelAssociates]] are used to provide a link to a classification system, or external library providing further reference to the property set. Accessible by inverse attribute HasAssociations . HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE All statically defined property set entities are no longer subtypes of [[IfcPropertySet]] ."

#:IFC.xml:21061
msgid "IfcPropertySet_HasProperties"
msgstr "HasProperties"

msgid "IfcPropertySet_HasProperties_DEFINITION"
msgstr "プロパティのセットが含まれています。 IFC Object モデルの一部として定義されているプロパティセットの場合、プロパティセット内のプロパティオブジェクトは標準の一部として定義されます。 定義済みプロパティのセットにプロパティが含まれていない場合、その値はこの時点で設定されません。"

#:IFC.xml:21075
msgid "IfcPropertySetDefinition"
msgstr "IfcPropertySetDefinition"

msgid "IfcPropertySetDefinition_DEFINITION"
msgstr "[[IfcPropertySetDefinition]] is a generalization of all individual property sets that can be assigned to an object or type object. The property set definition can be either Dynamically extendable property sets [[IfcPropertySet]] , a set of properties for which the IFC specification only provides a kind of meta model , to be further declared by agreement. This means no entity definition of the properties exists within the IFC specification. The declaration is done by assigning a significant string value to the Name attribute of the entity as defined in the entity [[IfcPropertySet]] and at each subtype of [[IfcProperty]] , referenced by the property set. Dynamically defined property sets may have an underlying template provided by [[IfcPropertySetTemplate]] . Statically defined property sets [[IfcPreDefinedPropertySet]] , a property set entity that exists within the IFC specification. The semantic meaning of each statically defined property set is declared by its entity type and the meaning of the properties is defined by the name and data type of the explicit attribute representing it. Property set definitions define information that is shared among multiple instances of objects, either object occurrences or object types. [[IfcPropertySetDefinition]] s by their instantiable subtypes can participate within the following relationships Assignment to object types an DefinesType direct relationship to [[IfcTypeObject]] that applies the property set, with all included properties, to the object type. Those properties apply to all object occurrences having the same object type. Assignment to object occurrences an DefinesOccurrence relationship to [[IfcRelDefinesByProperties]] that applies the property set, with all included properties, to the object occurrence. NOTE Properties assigned to object occurrences may override properties assigned to the object type. See [[IfcRelDefinesByType]] for further information. HISTORY New entity in IFC2x .change ifc2x4 IFC4 CHANGE The subtype [[IfcPreDefinedPropertySet]] has been added."

#:IFC.xml:21079
msgid "IfcPropertySetDefinition_IsDefinedBy"
msgstr "IsDefinedBy"

msgid "IfcPropertySetDefinition_IsDefinedBy_DEFINITION"
msgstr "プロパティセットテンプレートとの関係は、客観的な関係 [[IfcRelDefinesByTemplate]] を介して、 指定された場合、プロパティセットまたは数量セットとそのプロパティの定義テンプレートが提供されます。 .change ifc2x4 IFC4 変更点 新しい逆関係、ファイルベースの取引所の上方互換性を持つ変更。"

#:IFC.xml:21093
msgid "IfcPropertySetDefinition_DefinesType"
msgstr "DefinesType"

msgid "IfcPropertySetDefinition_DefinesType_DEFINITION"
msgstr "The type object to which the property set is assigned. The property set acts as a shared property set to all occurrences of the type object. NOTE The relationship between the [[IfcPropertySetDefinition]] and the [[IfcTypeObject]] is a direct relationship, not utilizing [[IfcRelDefinesByProperties]] , for maintaining compatibility with earlier releases of this standard. .change ifc2x4 IFC4 CHANGE The cardinality has been changed from 0 1 to 0 with upward compatibility for file based exchange."

#:IFC.xml:21107
msgid "IfcPropertySetDefinition_DefinesOccurrence"
msgstr "DefinesOccrance"

msgid "IfcPropertySetDefinition_DefinesOccurrence_DEFINITION"
msgstr "プロパティセット定義によって特徴づけられる1つまたは多数のオブジェクト発生への関係を参照します。 単一のプロパティセットは、異なる関係IfcRefDefinesByProperties を使用して、複数のオブジェクトの発生に割り当てることができます。 .change ifc2x4 IFC4 変更点 PropertyDefinitionOf ファイルベースの取引所の上向きの互換性を持つ逆属性の名前を変更しました。"

#:IFC.xml:21119
msgid "IfcPropertySetDefinitionSelect"
msgstr "IfcPropertySetDefinitionSelect"

#:IFC.xml:21120
msgid "IfcPropertySetTemplate"
msgstr "IfcPropertySetTemplate"

msgid "IfcPropertySetTemplate_DEFINITION"
msgstr "[[IfcPropertySetTemplate]] defines the template for all dynamically extensible property sets represented by [[IfcPropertySet]] . The property set template is a container of property templates within a property tree. The individual property templates are interpreted according to their Name attribute and shall have no values assigned. NOTE By convention an [[IfcPropertySetTemplate]] can also be used as a template for an [[IfcElementQuantity]] , being a particular type of a property set definition. Property set templates can form part of a property library used and declared within a project. Depending on the TemplateType the [[IfcPropertySetTemplate]] defines a template for Pset occurrences of [[IfcPropertySet]] QTO occurrences of [[IfcElementQuantity]] The inherited HasContext inverse relation to [[IfcRelDeclares]] is used to declare the [[IfcPropertySetTemplate]] within a project library. If included in an exchange data set it can then be traversed through the [[IfcProjectLibrary]] . The Defines inverse relation to [[IfcRelDefinesByTemplate]] is provided to keep the definition relationship between the [[IfcPropertySetTemplate]] and the one to many [[IfcPropertySet]] s, for which it provides the template. Figure 1 illustrates relationships used for property set templates. property set template .. .. .. .. figures ifcpropertysettemplate fig 1.png Figure 1 Property set template relationships Between [[IfcProperty]] s within the HasProperties set of [[IfcPropertySet]] having the same Name attribute value as the [[IfcPropertyTemplate]] s within the HasPropertyTemplates set of [[IfcPropertySetTemplate]] an implicit definition relationship is established that assigns the template to the individual properties. HISTORY New entity in IFC4."

#:IFC.xml:21128
msgid "IfcPropertySetTemplate_TemplateType"
msgstr "テンプレートタイプ"

msgid "IfcPropertySetTemplate_TemplateType_DEFINITION"
msgstr "Property set type defining whether the property set is applicable to a type subtypes of [[IfcTypeObject]] , to an occurrence subtypes of [[IfcObject]] , or as a special case to a performance history. The attribute ApplicableEntity may further refine the applicability to a single or multiple entity type s ."

#:IFC.xml:21140
msgid "IfcPropertySetTemplate_HasPropertyTemplates"
msgstr "HasPropertyTemplates"

msgid "IfcPropertySetTemplate_HasPropertyTemplates_DEFINITION"
msgstr "[[IfcPropertyTemplate]] のスコープ内で定義されている [[IfcPropertySetTemplate]] s のセット。"

#:IFC.xml:21154
msgid "IfcPropertySetTemplate_Defines"
msgstr "定義"

msgid "IfcPropertySetTemplate_Defines_DEFINITION"
msgstr "プロパティセットとの関連性は、オブジェクト化された関係 [[IfcRelDefinesByTemplate]] を介して、与えられた場合、定義テンプレートを利用します。"

#:IFC.xml:21121
msgid "IfcPropertySetTemplate_ApplicableEntity"
msgstr "該当するエンティティ"

msgid "IfcPropertySetTemplate_ApplicableEntity_DEFINITION"
msgstr "The attribute optionally defines the data type of the applicable type or occurrence object, to which the assigned property set template can relate. If not present, no instruction is given to which type or occurrence object the property set template is applicable. The following conventions are used The IFC entity name of the applicable entity using the IFC naming convention, CamelCase with IFC prefix It can be optionally followed by the predefined type after the separator forward slash , using upper case If a performance history object of a particular distribution object is attributes by the property set template, then the entity name and potentially amended by the predefined type is expanded by adding PerformanceHistory If one property set template is applicable to many type and or occurrence objects, then those object names should be separate by comma , forming a comma separated string. EXAMPLE Refering to a boiler type as applicable entity would be expressed as [[IfcBoilerType]] , refering to a steam boiler type as applicable entity would be expressed as [[IfcBoilerType]] STEAM , refering to a wall and wall standard case and a wall type would be expressed as [[IfcWall]], [[IfcWallStandardCase]], [[IfcWallType]] . An applicable [[IfcPerformanceHistory]] assigned to an occurrence or type object would be indicated by [[IfcBoilerType]] PerformanceHistory , or respectively [[IfcBoilerType]] STEAM PerformanceHistory ."

#:IFC.xml:21168
msgid "IfcPropertySetTemplateTypeEnum"
msgstr "IfcPropertySetTemplateTypeEnum"

msgid "IfcPropertySetTemplateTypeEnum_DEFINITION"
msgstr "This enumeration defines the general applicability of instances of [[IfcPropertySet]] , or [[IfcElementQuantity]] defined by this [[IfcPropertySetTemplate]] , to subtypes of [[IfcObjectDefinition]] . HISTORY New enumeration in IFC4. Items PSET TYPEDRIVENONLY The property sets defined by this [[IfcPropertySetTemplate]] can only be assigned to subtypes of [[IfcTypeObject]] . PSET PSET OCCURRENCEDRIVEN The property sets defined by this [[IfcPropertySetTemplate]] can only be assigned to subtypes of [[IfcObject]] . PSET QTO TYPEDRIVENONLY The element quantity defined by this [[IfcPropertySetTemplate]] can only be assigned to subtypes of [[IfcTypeObject]] . QTO QTO OCCURRENCEDRIVEN The element quantity defined by this [[IfcPropertySetTemplate]] can only be assigned to subtypes of [[IfcObject]] . NOTDEFINED No restriction provided, the property sets defined by this [[IfcPropertySetTemplate]] can be assigned to any entity, if not otherwise restricted by the ApplicableEntity attribute."

msgid "IfcPropertySetTemplateTypeEnum_NOTDEFINED"
msgstr "注記されました"

msgid "IfcPropertySetTemplateTypeEnum_NOTDEFINED_DEFINITION"
msgstr "注記されました"

#:IFC.xml:21169
msgid "IfcPropertyTemplate"
msgstr "IfcPropertyTemplate"

msgid "IfcPropertyTemplate_DEFINITION"
msgstr "The [[IfcPropertyTemplate]] is an abstract supertype comprising the templates for all dynamically extensible properties, either as an [[IfcComplexPropertyTemplate]] , or an [[IfcSimplePropertyTemplate]] . These templates determine the structure of in case of [[IfcComplexPropertyTemplate]] an [[IfcComplexProperty]] an [[IfcPhysicalComplexQuantity]] in case of [[IfcSimplePropertyTemplate]] a subtype of [[IfcSimpleProperty]] a subtype of [[IfcPhysicalSimpleQuantity]] The individual property templates are interpreted according to their Name attribute and may have a predefined property type, property unit, and property data type. A template however shall not have measure values, or quantity values assigned. NOTE Property templates can form part of a property library used and attached as part of a project library. In general the [[IfcPropertySetTemplate]] , containing the subtypes of [[IfcPropertyTemplate]] would be directly linked to the [[IfcProjectLibrary]] . HISTORY New entity in IFC4."

#:IFC.xml:20534
msgid "IfcPropertyTemplate_PartOfComplexTemplate"
msgstr "PartOfComplexTemplate"

msgid "IfcPropertyTemplate_PartOfComplexTemplate_DEFINITION"
msgstr "複合プロパティテンプレートへの参照。参照先の複合プロパティテンプレートのPropertyTypeがCOMPLEXに設定されている場合にのみ提供すべきです。"

#:IFC.xml:21140
msgid "IfcPropertyTemplate_PartOfPsetTemplate"
msgstr "PartOfPsetTemplate"

msgid "IfcPropertyTemplate_PartOfPsetTemplate_DEFINITION"
msgstr "Reference to the [[IfcPropertySetTemplate]] that defines the scope for the [[IfcPropertyTemplate]] . A single [[IfcPropertyTemplate]] can be defined within the scope of zero, one or many [[IfcPropertySetTemplate]] ."

#:IFC.xml:21172
msgid "IfcPropertyTemplateDefinition"
msgstr "IfcPropertyTemplate定義"

msgid "IfcPropertyTemplateDefinition_DEFINITION"
msgstr "[[IfcPropertyTemplateDefinition]] is a generalization of all property and property set templates. Templates define the collection, types, names, applicable measure types and units of individual properties used in a project. The property template definition can be either Property set template [[IfcPropertySetTemplate]] , a collection of property templates that determine the definition of properties used within a project context. Property template [[IfcPropertyTemplate]] , a single template that determines the definition of a particular property used in the same project context. The template may determine the name, description, data type, the unit, or a standard expression for each property that is based on that template. The subtypes of [[IfcPropertyTemplateDefinition]] are declared within a project context. The uppermost template definition e.g. the [[IfcPropertySetTemplate]] including several [[IfcPropertyTemplate]] s should be related to the context, either [[IfcProject]] , or [[IfcProjectLibrary]] , using the inherited HasContext inverse attribute. HISTORY New entity in IFC4."

#:IFC.xml:21175
msgid "IfcQuantitySet"
msgstr "IfcQuantitySet"

msgid "IfcQuantitySet_DEFINITION"
msgstr "[[IfcQuantitySet]] is the the abstract supertype for all quantity sets attached to objects. The quantity set is a container class that holds the individual quantities within a quantity tree. These quantities are interpreted according to their name attribute and classified according to their measure type. Some quantity sets are included in the IFC specification and have a predefined set of quantities indicated by assigning a significant name. These quantity sets are listed as quantity sets within this specification. Quantity sets applicable to certain objects are listed in the object specification. An [[IfcPropertySetTemplate]] may define the underlying structure, i.e. the required name, the applicable object or object types to which the quantity set can be attached, and the individual quantities that maybe included. Quantity sets are related to other objects by using the relationship object that refers to the corresponding object Occurrence Object [[IfcRelDefinesByProperties]] using the inverse attribute DefinesOccurrence . Type Object using a direct link by inverse attribute DefinesType . Underlying template [[IfcRelDefinesByTemplate]] using the inverse attribute IsDefinedBy . External reference subtypes of [[IfcRelAssociates]] are used to provide a link to a classification system, or external library providing further reference to the quantity set. Accessible by inverse attribute HasAssociations . HISTORY New entity in IFC4."

#:IFC.xml:21178
msgid "IfcRelAggregates"
msgstr "IfcRelAggregates"

msgid "IfcRelAggregates_DEFINITION"
msgstr "The aggregation relationship [[IfcRelAggregates]] is a special type of the general composition decomposition or whole part relationship [[IfcRelDecomposes]] . The aggregation relationship can be applied to all subtypes of [[IfcObjectDefinition]] . In cases of aggregation of physical elements into a physical aggregate the shape representation of the whole within the same representation identifier can be taken from the sum of the shape representations of the parts. EXAMPLE A roof is the aggregation of the roof elements, such as roof slabs, rafters, purlins, etc. Within the same representation identifier such as the body geometric representation , the shape representation of the roof is given by the shape representation of its parts. Decompositions imply a dependency, implying that the whole depends on the definition of the parts and the parts depend on the existence of the whole. The behaviour that is implied from the dependency relationship has to be established inside the applications. HISTORY New entity in IFC2x. .change ifc2x4 IFC4 CHANGE The attributes RelatingObject and RelatedObjects are demoted from the supertype [[IfcRelDecomposes]] ."

#:IFC.xml:20746
msgid "IfcRelAggregates_RelatingObject"
msgstr "RelatingObject"

msgid "IfcRelAggregates_RelatingObject_DEFINITION"
msgstr "オブジェクトの定義は、オブジェクトの型またはオブジェクトの発生のいずれかで、集計を表します。これは、部品全体の関係内の全体です。 .change ifc2x4 IFC4 変更点 属性はスーパータイプ [[IfcRelDecomposes]] から降格され、非順序の集計関係を定義します。"

#:IFC.xml:20760
msgid "IfcRelAggregates_RelatedObjects"
msgstr "関連オブジェクト"

msgid "IfcRelAggregates_RelatedObjects_DEFINITION"
msgstr "集計されているオブジェクト定義、オブジェクトの発生、またはオブジェクト型。 彼らは、部品全体の関係で部品として定義されています. .change ifc2x4 IFC4 変更点 属性はスーパータイプ [[IfcRelDecomposes]] から降格され、集約内の部品の非順序セットを定義します。"

#:IFC.xml:21181
msgid "IfcRelAssigns"
msgstr "IfcRelAssignes"

msgid "IfcRelAssigns_DEFINITION"
msgstr "The assignment relationship, [[IfcRelAssigns]] , is a generalization of link relationships among instances of [[IfcObject]] and its various 1 st level subtypes. A link denotes the specific association through which one object the client applies the services of other objects the suppliers , or through which one object may navigate to other objects. The client is denoted as the relating object and is established at the level of the specific, instantiable subtypes of [[IfcRelAssigns]] . The suppliers are denoted as the related objects and they are established by the RelatedObjects attribute. NOTE The terms client and supplier are used in a general concept and do not imply any meaning for implementations of systems like client server . EXAMPLE A resource may receive information about its nature of representing real building products by establishing a link between [[IfcResource]] and IfcBuildingElement subtype of [[IfcProduct]] through the assignment relationship [[IfcRelAssignsToResource]] . The resource is then the client that applies the services of other objects here building elements to express the particular view of elements to be consumed as a resource in a process. The assignment relationship establishs a bi directional relationship among the participating objects and does not imply any dependency. The subtypes of [[IfcRelAssigns]] establishes the particular semantic meaning of the assignment relationship. HISTORY New entity in IFC2x."

#:IFC.xml:20774
msgid "IfcRelAssigns_RelatedObjects"
msgstr "関連オブジェクト"

msgid "IfcRelAssigns_RelatedObjects_DEFINITION"
msgstr "関連するオブジェクト。単一のオブジェクトに割り当てられます。 単一または関連するオブジェクトの型は、[[IfcRelAssigns] ] のサブタイプで定義されます。"

#:IFC.xml:21182
msgid "IfcRelAssigns_RelatedObjectsType"
msgstr "RelatedObjectsType"

msgid "IfcRelAssigns_RelatedObjectsType_DEFINITION"
msgstr "特定の割り当て関係のタイプ。RelatedObjects のロール内で使用される、該当するオブジェクトタイプを制限することができます。 .change ifc2x4 IFC4 変更 属性は非推奨であり、もはや使用されない。NIL 値は常に割り当てられるべきである。"

#:IFC.xml:21189
msgid "IfcRelAssignsToActor"
msgstr "IfcRelAssignsToActor"

msgid "IfcRelAssignsToActor_DEFINITION"
msgstr "The objectified relationship [[IfcRelAssignsToActor]] handles the assignment of objects subtypes of [[IfcObject]] to an actor subtypes of [[IfcActor]] . The [[IfcRelAssignsToActor]] objectified relationship defines a relationship between an [[IfcActor]] and one or many objects. A particular role of the actor played in that relationship can be associated. If specified, it takes priority over the role that may be directly assigned to the person or organization. EXAMPLE An occupant as an actor may rent a flat as a collection of spaces or a zone . This would be an application of this generic relationship. Reference to the objects or single object on which the actor acts upon in a certain role if given is specified in the inherited RelatedObjects attribute. HISTORY New entity in IFC2.0. Has been renamed from IfcRelActsUpon in IFC2x."

#:IFC.xml:77
msgid "IfcRelAssignsToActor_ActingRole"
msgstr "ActingRole"

msgid "IfcRelAssignsToActor_ActingRole_DEFINITION"
msgstr "オブジェクトs への割り当てのコンテキスト内で実行されるアクターのロール。"

#:IFC.xml:20500
msgid "IfcRelAssignsToActor_RelatingActor"
msgstr "RelatingActor"

msgid "IfcRelAssignsToActor_RelatingActor_DEFINITION"
msgstr "役者に関する情報を参照します. これは、人または組織とその住所に関する情報を含みます."

#:IFC.xml:21192
msgid "IfcRelAssignsToControl"
msgstr "IfcRelAssignsToControl"

msgid "IfcRelAssignsToControl_DEFINITION"
msgstr "The objectified relationship [[IfcRelAssignsToControl]] handles the assignment of a control represented by subtypes of [[IfcControl]] to other objects represented by subtypes of [[IfcObject]] , with the exception of controls . EXAMPLE The assignment of a performance history as subtype of [[IfcControl]] for a building service element as subtype of [[IfcObject]] is an application of this generic relationship. HISTORY New entity in IFC2.0. .change ifc2x IFC2x CHANGE Entity has been renamed from IfcRelControls ."

#:IFC.xml:20627
msgid "IfcRelAssignsToControl_RelatingControl"
msgstr "RelatingControl"

msgid "IfcRelAssignsToControl_RelatingControl_DEFINITION"
msgstr "オブジェクトにコントロールを適用する [[IfcControl]] を参照します。"

#:IFC.xml:21195
msgid "IfcRelAssignsToGroup"
msgstr "IfcRelAssignsToGroup"

msgid "IfcRelAssignsToGroup_DEFINITION"
msgstr "The objectified relationship [[IfcRelAssignsToGroup]] handles the assignment of object definitions individual object occurrences as subtypes of [[IfcObject]] , and object types as subtypes of [[IfcTypeObject]] to a group subtypes of [[IfcGroup]] . The relationship handles the assignment of group members to the group object. It allows for grouping arbitrary objects within a group, including other groups. The grouping relationship can be applied in a recursive manner. The resulting group is of type [[IfcGroup]] . NOTE Examples of groups include zones as a grouping of spaces, distribution systems as a grouping of building service components, or structural analysis models as a grouping of structural items. The inherited attribute RelatedObjects gives the references to the objects, which are the elements within the group. The RelatingGroup is the group that comprises all elements. The same object or object type can be included in zero, one or many groups. Grouping relationships are not hierarchical. .spec head Informal Propositions 1. The group assignment relationship shall be acyclic, that is, a group shall not participate in its own grouping relationship. HISTORY New entity in IFC1.0. It has been renamed from IfcRelGroups in IFC2x."

#:IFC.xml:20666
msgid "IfcRelAssignsToGroup_RelatingGroup"
msgstr "RelatingGroup"

msgid "IfcRelAssignsToGroup_RelatingGroup_DEFINITION"
msgstr "割り当てられたすべてのグループメンバーを含むグループを参照します。"

#:IFC.xml:21198
msgid "IfcRelAssignsToGroupByFactor"
msgstr "IfcRelAssignsToGroupByFactor"

msgid "IfcRelAssignsToGroupByFactor_DEFINITION"
msgstr "The objectified relationship [[IfcRelAssignsToGroupByFactor]] is a specialization of the general grouping mechanism. It allows to add a factor to define the ratio that applies to the assignment of object definitions individual object occurrences as subtypes of [[IfcObject]] and object types as subtypes of [[IfcTypeObject]] to a group subtypes of [[IfcGroup]] . The ratio can be used to define a percentage assignment. For example, a Factor of 0.8 would indicate that the object is assigned by 80 to the group, or a Factor of 2.5 would indicate the object is assigned with a weight factor of 2.5 to the group. NOTE Examples of factored groups include the assignment of load cases in a load combination in structural analysis, or the assignment of spaces by percentage to different rental zones. The same object or object type may be included with the same or different Factor values to many groups. Grouping relationships are not hierarchical. HISTORY New entity in IFC4."

#:IFC.xml:21199
msgid "IfcRelAssignsToGroupByFactor_Factor"
msgstr "係数"

msgid "IfcRelAssignsToGroupByFactor_Factor_DEFINITION"
msgstr "グループ割り当てに適用される分数または加重係数を識別する比率尺度として提供されます。"

#:IFC.xml:21206
msgid "IfcRelAssignsToProcess"
msgstr "IfcRelAssignsToProcess"

msgid "IfcRelAssignsToProcess_DEFINITION"
msgstr "The objectified relationship [[IfcRelAssignsToProcess]] handles the assignment of one or many objects to a process or activity. An object can be a product that is the item the process operates on. Processes and activities can operate on things other than products, and can operate in ways other than input and output. EXAMPLE It may be common to define processes during estimating or scheduling that describe design tasks resulting in documents , procurement tasks resulting in construction materials , planning tasks resulting in processes , etc. Furthermore, the ways in which process can operate on something might include installs , finishes , transports , removes , etc. The ways are described as operation types. The inherited attribute RelatedObjects gives the references to the objects, or object type, which the process operates on. The RelatingProcess is the process or process type, that operates on the object. The operation types are captured in the inherited attribute Name . NOTE The agreement on valid and recognizable values for the Name attribute is part of view definitions and implementer agreements. HISTORY New entity in IFC1.5. Has been renamed from IfcRelProcessOperatesOn in IFC2x. .change ifc2x4 IFC4 CHANGE The data type RelatingProcess has been extended to cover also [[IfcTypeProcess]]"

#:IFC.xml:21214
msgid "IfcRelAssignsToProcess_QuantityInProcess"
msgstr "QuantityInProcess"

msgid "IfcRelAssignsToProcess_QuantityInProcess_DEFINITION"
msgstr "このプロセスによって操作に固有のオブジェクトの数。"

#:IFC.xml:21207
msgid "IfcRelAssignsToProcess_RelatingProcess"
msgstr "RelatingProcess"

msgid "IfcRelAssignsToProcess_RelatingProcess_DEFINITION"
msgstr "オブジェクトが割り当てられているプロセスへの参照。 hangeのifc2x4 IFC4の変更 [[IfcProcess]] と [[IfcTypeProcess]] を含むようにデータ型を展開しました。"

#:IFC.xml:21238
msgid "IfcRelAssignsToProduct"
msgstr "IfcRelAssignsToProduct"

msgid "IfcRelAssignsToProduct_DEFINITION"
msgstr "The objectified relationship [[IfcRelAssignsToProduct]] handles the assignment of objects subtypes of [[IfcObject]] to a product subtypes of [[IfcProduct]] . The Name attribute should be used to classify the usage of the [[IfcRelAssignsToProduct]] objectified relationship. The following Name values are proposed Context Assignment of a context specific representation, such as of structural members to a different context representation with potentially different decomposition breakdown such as of building elements for a specific context specific representation. View Assignment of a product via RelatingProduct that is decomposed according to a discipline view, to another product via RelatedObjects that is decomposed according to a different discipline view. An example is the assignment of the architectural slab to a different decomposition of the pre manufactured sections of a slab under a precast concrete discipline view . HISTORY New entity in IFC2x .change ifc2x3 IFC2x3 CHANGE The reference of a product within a spatial structure is now handled by a new relationship object [[IfcRelReferencedInSpatialStructure]] . The [[IfcRelAssignsToProduct]] shall not be used to represent this relation from IFC2x3 onwards."

#:IFC.xml:21239
msgid "IfcRelAssignsToProduct_RelatingProduct"
msgstr "関連製品"

msgid "IfcRelAssignsToProduct_RelatingProduct_DEFINITION"
msgstr "オブジェクトが割り当てられている製品または製品タイプへの参照。 hangeのifc2x4 IFC4の変更 [[IfcProduct]] と [[IfcTypeProduct]] を含むようにデータ型を展開しました。"

#:IFC.xml:21258
msgid "IfcRelAssignsToResource"
msgstr "IfcRelAssignsToResource"

msgid "IfcRelAssignsToResource_DEFINITION"
msgstr "The objectified relationship [[IfcRelAssignsToResource]] handles the assignment of objects as subtypes of [[IfcObject]] , acting as a resource usage or consumption, to a resource as subtypes of [[IfcResource]] . EXAMPLE The assignment of a resource usage to a construction resource is an application of this generic relationship. It could be an actor, as person or organization assigned to a labor resource, or a raw product assigned to a construction product or material resource . HISTORY New entity in IFC2x."

#:IFC.xml:21259
msgid "IfcRelAssignsToResource_RelatingResource"
msgstr "RelatingResource"

msgid "IfcRelAssignsToResource_RelatingResource_DEFINITION"
msgstr "オブジェクトが割り当てられているリソースへの参照。 hangeのifc2x4 IFC4の変更 [[IfcResource]] と [[IfcTypeResource]] を含むようにデータ型を展開しました。"

#:IFC.xml:21290
msgid "IfcRelAssociates"
msgstr "IfcRelAssociates"

msgid "IfcRelAssociates_DEFINITION"
msgstr "The association relationship [[IfcRelAssociates]] refers to sources of information most notably a classification, library, document, approval, contraint, or material . The information associated may reside internally or externally of the project data. There is no dependency implied by the association. EXAMPLE Further external information may be provided to the tank equipment as subtype of [[IfcProduct]] in terms of its classification and instruction documents, the source of the additional information is held external to the project data model. Association relationships can be established to objects occurrences as subtypes of [[IfcObject]] or to types as subtypes of [[IfcTypeObject]] . Some associations such as approval, or document may also be applied to property templates as subtypes of [[IfcPropertyDefinition]] . EXAMPLE The classification information for the storage tank equipment may be associated to the [[IfcTankType]] subtype of [[IfcTypeObject]] , defining the specific information for all occurencies of that tank in the project. Therefore the association of the Uniclass notation L6814 may be associated by a subtype of [[IfcRelAssociates]] to the type information. EXAMPLE The classification information for a particular space within a building may be associated to the [[IfcSpace]] object subtype of [[IfcObject]] , defining a particular occurrence of space. Therefore the association of the DIN notation NF 1.5 may be associated by a subtype of [[IfcRelAssociates]] to the object. The association relationship establishs an association between one to many objects or property templates and the associated information. The subtypes of [[IfcRelAssociates]] establish the particular semantic meaning of the association relationship. HISTORY New entity in IFC2x. .change ifc2x4 IFC4 CHANGE Entity has been changed into an ABSTRACT supertype"

#:IFC.xml:21291
msgid "IfcRelAssociates_RelatedObjects"
msgstr "関連オブジェクト"

msgid "IfcRelAssociates_RelatedObjects_DEFINITION"
msgstr "外部参照または情報が関連付けられているオブジェクトまたはプロパティ定義のセット。 オブジェクトと型オブジェクト、プロパティセットテンプレート、プロパティセットとプロパティセットとコンテキストが含まれます。 .change ifc2x4 IFC4 変更点 属性データ型が [[IfcRoot]] から [[IfcDefinitionSelect]] に変更されました。"

#:IFC.xml:21298
msgid "IfcRelAssociatesClassification"
msgstr "IfcRelatesClassification"

msgid "IfcRelAssociatesClassification_DEFINITION"
msgstr "[[IfcRelAssociatesClassification]] は、[[IfcClassificationSelect]] のサブタイプまたは[[IfcObject]] のサブタイプのオブジェクトに対して、select [[IfcTypeObject]] の分類項目の割り当てを行います。 この関係は、分類項目、または分類システム自体をオブジェクトに割り当てるために使用されます。 RelatingClassificationの種類によっては、外部分類システム内の分類項目への参照となります。 または、分類システム自体への参照 注 分類項目への参照には、項目が宣言されている分類システムへのリンクが含まれます。 分類項目の意味をオブジェクトのオカレンスまたはタイプ に割り当てます。 分類システムへの参照は、オブジェクトの発生または型が分類システムによって管理されている情報を提供しますが、特定の項目の割り当てはまだ行われていません。 継承された属性 RelatedObjects は、分類が適用されるオブジェクトまたはオブジェクト タイプを定義します。 属性RelatingClassificationは、分類への参照であり、オブジェクト s に適用されます。 1つのRelatingClassificationは、それによって1つまたは複数のオブジェクトに適用することができます. HISTORYIFC2xの新しいエンティティ."

#:IFC.xml:21299
msgid "IfcRelAssociatesClassification_RelatingClassification"
msgstr "関連する分類"

msgid "IfcRelAssociatesClassification_RelatingClassification_DEFINITION"
msgstr "オブジェクトに適用される分類。"

#:IFC.xml:21306
msgid "IfcRelAssociatesDocument"
msgstr "IfcRelatesDocument"

msgid "IfcRelAssociatesDocument_DEFINITION"
msgstr "[[IfcRelAssociatesDocument]] は、[[IfcDocumentSelect]] のサブタイプや[[IfcObject]] のサブタイプのオブジェクトに対して、select [[IfcTypeObject]] のドキュメント情報項目の割り当てを行います。 このリレーションシップは、ドキュメント参照や詳細なドキュメント情報をオブジェクトに割り当てるために使用されます。 単一のドキュメント参照を複数のオブジェクトに適用できます。継承された属性 RelatedObjects は、ドキュメントの関連付けが適用されるオブジェクトを定義します。 RelatingDocument 属性は、ドキュメント参照への参照であり、オブジェクト s に適用されます。"

#:IFC.xml:21307
msgid "IfcRelAssociatesDocument_RelatingDocument"
msgstr "RelatingDocument"

msgid "IfcRelAssociatesDocument_RelatingDocument_DEFINITION"
msgstr "オブジェクトに適用されるドキュメント情報または参照。"

#:IFC.xml:21314
msgid "IfcRelAssociatesLibrary"
msgstr "IfcRelatesLibrary"

msgid "IfcRelAssociatesLibrary_DEFINITION"
msgstr "[[IfcRelAssociatesLibrary]] は、[[IfcLibrarySelect]] または [[IfcObjectDefinition]] のサブタイプに対して、select [[IfcPropertyDefinition]] のライブラリ項目の割り当てを処理します。 リレーションシップは、ライブラリ参照やライブラリ情報へのより詳細なリンクをオブジェクト、プロパティセット、または型に割り当てるために使用されます。 単一のライブラリ参照を複数の項目に適用することができます。継承された属性 RelatedObjects は、ライブラリ関連付けが適用される項目を定義します。 属性RelatingLibraryはライブラリ参照への参照であり、アイテムs に適用されます。"

#:IFC.xml:21315
msgid "IfcRelAssociatesLibrary_RelatingLibrary"
msgstr "RelatingLibrary"

msgid "IfcRelAssociatesLibrary_RelatingLibrary_DEFINITION"
msgstr "プロパティセットの定義が取られているライブラリへの参照。"

#:IFC.xml:21322
msgid "IfcRelationship"
msgstr "IfcRelationship"

msgid "IfcRelationship_DEFINITION"
msgstr "[[IfcRelationship]] is the abstract generalization of all objectified relationships in IFC. Objectified relationships are the preferred way to handle relationships among objects. This allows to keep relationship specific properties directly at the relationship and opens the possibility to later handle relationship specific behavior. There are two different types of relationships, 1 to 1 relationships and 1 to many relationship. used within the subtypes of [[IfcRelationship]] . The following convention applies to all subtypes The two sides of the objectified relationship are named Relating and Related In case of the 1 to many relationship, the related side of the relationship shall be an aggregate being a set 1 N HISTORY New entity in IFC1.0."

#:IFC.xml:21325
msgid "IfcRelConnects"
msgstr "IfcRelts"

msgid "IfcRelConnects_DEFINITION"
msgstr "[[IfcRelConnects]] は、何らかの基準でオブジェクトを接続する接続関係です。 一般的な接続として、それは制約を意味しません。 しかしその関係のサブタイプは 接続の関係と 特定の接続の意味を定義する 歴史 IFC2xに新しいエンティティが追加されました。"

#:IFC.xml:21328
msgid "IfcRelDeclares"
msgstr "IfcRelDeclares"

msgid "IfcRelDeclares_DEFINITION"
msgstr "The objectified relationship [[IfcRelDeclares]] handles the declaration of objects subtypes of [[IfcObject]] or properties subtypes of [[IfcPropertyDefinition]] to a project or project library represented by [[IfcProject]] , or [[IfcProjectLibrary]] . The relationship handles the assignment of other objects, like [[IfcActor]] , or [[IfcTypeObject]] to the project, or project libary. The attribute RelatedDefinitions provides the references to the first level objects, that are the elements within the context. All other objects that relate to the first level objects are also defined in the context. NOTE Every object as subtype of [[IfcObject]] has to be declared within the context of a single [[IfcProject]] , or of a [[IfcProjectLibrary]] assigned to a single [[IfcProject]] . This declaration is transitive. For example the [[IfcWorkPlan]] as first level object is declared within the context of [[IfcProject]] via [[IfcRelDeclares]] , all related [[IfcWorkSchedule]] s are related to the context in a transitive way through [[IfcWorkPlan]] . NOTE The assignment excludes subtypes of [[IfcProduct]] s, these are assigned to the [[IfcProject]] using the spatial structure approach through [[IfcSpatialStructureElement]] s , where the outer container element such as [[IfcSite]] or [[IfcBuilding]] has an [[IfcRelAggregates]] relationship with the [[IfcProject]] . The RelatingContext is the project, or project library that comprises all elements. The unit assignments and the presentation contexts defined at [[IfcProject]] or [[IfcProjectLibrary]] apply to all these elements. HISTORY New entity in IFC4."

#:IFC.xml:20593
msgid "IfcRelDeclares_RelatingContext"
msgstr "RelatingContext"

msgid "IfcRelDeclares_RelatingContext_DEFINITION"
msgstr "追加情報が割り当てられている[[IfcProject]]を参照します。"

#:IFC.xml:21329
msgid "IfcRelDeclares_RelatedDefinitions"
msgstr "RelatedDefinitions"

msgid "IfcRelDeclares_RelatedDefinitions_DEFINITION"
msgstr "コンテキストに割り当てられ、コンテキストの単位と表示コンテキスト定義が適用されるオブジェクトまたはプロパティ定義のセット。"

#:IFC.xml:21336
msgid "IfcRelDecomposes"
msgstr "IfcRelDecompose"

msgid "IfcRelDecomposes_DEFINITION"
msgstr "The decomposition relationship, [[IfcRelDecomposes]] , defines the general concept of elements being composed or decomposed. The decomposition relationship denotes a whole part hierarchy with the ability to navigate from the whole the composition to the parts and vice versa. Decompositions may be constrained by requiring both, the whole and its parts, to be of the same type thus establishing a nesting relationship. Or they may require some form of physical containment, thus establishing special types of aggregation relationships. NOTE There are two special names for decomposition, which are linguistically distinguished, nesting and aggregation. The subtypes of [[IfcRelDecomposes]] will introduce either the nesting or aggregation convention see [[IfcRelNests]] and [[IfcRelAggregates]] . EXAMPLE A cost element is a nest of other cost elements. Or a structural frame is an aggregation of beams and columns. Both are applications of decomposition relationship. Decompositions imply a dependency, i.e. the definition of the whole depends on the definition of the parts and the parts depend on the existence of the whole. The decomposition relationship can be applied in a recursive manner, i.e. a decomposed element can be part in another decomposition. Cyclic references have to be prevented at application level. HISTORY New entity in IFC1.5, it is a generalisation of the IFC2.0 entity [[IfcRelNests]] . .change ifc2x4 IFC4 CHANGE The differentiation between the aggregation and nesting is determined to be a non ordered or an ordered collection of parts. The attributes RelatingObject and RelatedObjects have been demoted to the subtypes."

#:IFC.xml:21339
msgid "IfcRelDefines"
msgstr "IfcRelDefines"

msgid "IfcRelDefines_DEFINITION"
msgstr "A generic and abstract relationship which subtypes are used to assign a object type to an object occurrence assign a property set to an object instance assign a property set template to a property set EXAMPLE Several instances of windows within the IFC project model may be of the same catalogue or manufacturer type. Thereby they share the same properties. This relationship is established by the subtype [[IfcRelDefinesByType]] of [[IfcRelDefines]] relationship assigning an [[IfcWindowStyle]] to multiple occurrences [[IfcWindow]] . EXAMPLE The same property set, e.g. Pset ProductManufacturerInfo, keeping the manufacturer name, label and production year of a product, can be assigned to one, or many instances of furnishing. This relationship is established by the subtype [[IfcRelDefinesByProperties]] of [[IfcRelDefines]] relationship assigning an [[IfcPropertySet]] to one or more instances of [[IfcFurnishingElement]] . HISTORY New entity in IFC2x. .change ifc2x4 IFC4 CHANGE The attribute RelatedObjects had been demoted to the subtypes [[IfcRelDefinesByProperties]] and [[IfcRelDefinesByType]] ."

#:IFC.xml:21342
msgid "IfcRelDefinesByObject"
msgstr "IfcRelDefinesByObject"

msgid "IfcRelDefinesByObject_DEFINITION"
msgstr "The objectified relationship [[IfcRelDefinesByObject]] defines the relationship between an object taking part in an object type decomposition and an object occurrences taking part in an occurrence decomposition of that type. The [[IfcRelDefinesByObject]] is a 1 to N relationship, as it allows for the assignment of one declaring object information to a single or to many reflected objects. Those objects then share the same object property sets and, for subtypes of [[IfcProduct]] , the eventually assigned representation maps. Only objects that take part in a type decomposition and in an occurrence decomposition of the same type can be connected by the [[IfcRelDefinesByObject]] relationship. The [[IfcRelDefinesByObject]] links the decomposed object type part, also called the declaring part with the occurrence of that part inside the occurrence of the decomposed type, also called the reflected part , as shown in Figure 1. instance diagram .. .. .. .. figures ifcreldefinesbyobject fig 1.png Figure 1 Part definition relationships The [[IfcRelDefinesByObject]] can be used together with the shape representations of the product type as shown in Figure 2. The [[IfcShapeRepresentation]] of the declaring part is referenced by the reflected part . The [[IfcObjectPlacement]] of the model occurrence the whole determines the position within the project context. geometry diagram .. .. .. .. figures ifcreldefinesbyobject fig 2.png Figure 2 Part definition relationships with shape representation HISTORY New entity in IFC4."

#:IFC.xml:20688
msgid "IfcRelDefinesByObject_RelatedObjects"
msgstr "関連オブジェクト"

msgid "IfcRelDefinesByObject_RelatedObjects_DEFINITION"
msgstr "オブジェクトの発生分解の一部であるオブジェクトは、リレーションの反射部分として機能します。"

#:IFC.xml:20702
msgid "IfcRelDefinesByObject_RelatingObject"
msgstr "RelatingObject"

msgid "IfcRelDefinesByObject_RelatingObject_DEFINITION"
msgstr "オブジェクトはオブジェクト型分解の一部であり、リレーションの宣言部分として機能します。"

#:IFC.xml:21345
msgid "IfcRelDefinesByProperties"
msgstr "IfcRelDefinesByProperties"

msgid "IfcRelDefinesByProperties_DEFINITION"
msgstr "The objectified relationship [[IfcRelDefinesByProperties]] defines the relationships between property set definitions and objects. Properties are aggregated in property sets. Property sets can be either directly assigned to occurrence objects using this relationship, or assigned to an object type and assigned via that type to occurrence objects. The assignment of an [[IfcPropertySet]] to an [[IfcTypeObject]] is not handled via this objectified relationship, but through the direct relationship HasPropertySets at [[IfcTypeObject]] . The [[IfcRelDefinesByProperties]] is an N to N relationship, as it allows for the assignment of one or more property sets to one or more objects. Those objects then share the same property definition. HISTORY New entity in IFC2.0. Has been renamed from IfcRelAssignsProperties in IFC2x. .change ifc2x4 IFC4 CHANGE The attribute RelatedObjects had been demoted from the supertype [[IfcRelDefines]] to [[IfcRelDefinesByProperties]] . This relationship has been modified to support multiple property sets referenced by a single relationship."

#:IFC.xml:20788
msgid "IfcRelDefinesByProperties_RelatedObjects"
msgstr "関連オブジェクト"

msgid "IfcRelDefinesByProperties_RelatedObjects_DEFINITION"
msgstr "プロパティ定義が適用されるオブジェクトまたは単一オブジェクトへの参照。 .change ifc2x4 IFC4 変更点 サブタイプ [[IfcObject]] からプロモートされたデータ型。"

#:IFC.xml:21346
msgid "IfcRelDefinesByProperties_RelatingPropertyDefinition"
msgstr "関連プロパティ定義"

msgid "IfcRelDefinesByProperties_RelatingPropertyDefinition_DEFINITION"
msgstr "そのオブジェクトまたはオブジェクトの集合のプロパティセット定義への参照。"

#:IFC.xml:21353
msgid "IfcRelDefinesByTemplate"
msgstr "IfcRelDefinesByTemplate"

msgid "IfcRelDefinesByTemplate_DEFINITION"
msgstr "The objectified relationship [[IfcRelDefinesByTemplate]] defines the relationships between property set template and property sets. Common information about property sets, e.g. the applicable name, description, contained properties, is defined by the property set template and assigned to all property sets. NOTE The assignment of an [[IfcPropertySetTemplate]] is supported for [[IfcPropertySet]] and [[IfcQuantitySet]] . The [[IfcRelDefinesByTemplate]] is a 1 to N relationship, as it allows for the assignment of one property set template to a single or to many property sets or quantity sets. Those property sets then share the same property set template definition. HISTORY New entity in IFC4."

#:IFC.xml:21079
msgid "IfcRelDefinesByTemplate_RelatedPropertySets"
msgstr "関連するプロパティセット"

msgid "IfcRelDefinesByTemplate_RelatedPropertySets_DEFINITION"
msgstr "単一のプロパティ セット テンプレートから定義を取得する 1 つまたは複数のプロパティ セットまたは数量セット。"

#:IFC.xml:21154
msgid "IfcRelDefinesByTemplate_RelatingTemplate"
msgstr "関連テンプレート"

msgid "IfcRelDefinesByTemplate_RelatingTemplate_DEFINITION"
msgstr "関連するプロパティセットの共通定義を提供するプロパティセットテンプレート。"

#:IFC.xml:21356
msgid "IfcRelDefinesByType"
msgstr "IfcRelDefinesByType"

msgid "IfcRelDefinesByType_DEFINITION"
msgstr "The objectified relationship [[IfcRelDefinesByType]] defines the relationship between an object type and object occurrences. The [[IfcRelDefinesByType]] is a 1 to N relationship, as it allows for the assignment of one type information to a single or to many objects. Those objects then share the same object type, and the property sets and properties assigned to the object type. The [[IfcRelDefinesByType]] links the object type definition with the object occurrence. Both may define properties by assigning an [[IfcPropertySet]] , including one or many subtypes of [[IfcProperty]] to either the object type or object occurrence, as shown in Figure 1. There are several scenarios to define the same property set on the object type definition and object occurrence side 1. All properties for all object occurrences of a common object type have the same value then only the object type definition has a property set assigned. 2. All properties for all object occurrences are different, that is there are no common property values for the object type definition then each of the object occurrence has a property set assigned. 3. Some properties within the same property set have common values and are assigned to the object type definition and some are occurrence specific and assigned with potentially different values to the object occurrences then The sum of all properties within a given property set applicable to an object occurrence is the union of properties assigned to the object type definition plus the properties assigned to the object occurrence. If the object occurrence has a property with the same [[IfcProperty]].Name in an [[IfcPropertySet]] , as the corresponding object type definition, then the occurrence property value overrides the type property value. Figure 1 Type definition relationships The following table provides an example of assigning properties assigned to [[IfcWall]] properties assigned to [[IfcWallType]] resulting property value for individual wall Pset WallCommon Pset WallCommon ExtendToStructure TRUE TRUE ThermalTransmittance 0.375 0.375 ExtendToStructure FALSE ExtendToStructure TRUE FALSE HISTORY New entity in IFC2x. .change ifc2x4 IFC4 CHANGE The attribute RelatedObjects had been demoted from the supertype [[IfcRelDefines]] to [[IfcRelDefinesByType]] ."

#:IFC.xml:20716
msgid "IfcRelDefinesByType_RelatedObjects"
msgstr "関連オブジェクト"

msgid "IfcRelDefinesByType_RelatedObjects_DEFINITION"
msgstr "関連オブジェクト"

#:IFC.xml:21359
msgid "IfcRelDefinesByType_RelatingType"
msgstr "RelatingType"

msgid "IfcRelDefinesByType_RelatingType_DEFINITION"
msgstr "オブジェクトまたはオブジェクトのセットのタイプまたはスタイル情報を参照します。"

#:IFC.xml:21373
msgid "IfcRelNests"
msgstr "IfcRelNest"

msgid "IfcRelNests_DEFINITION"
msgstr "The nesting relationship [[IfcRelNests]] is a special type of the general composition decomposition or whole part relationship [[IfcRelDecomposes]] . The nesting relationship can be applied to all non physical subtypes of object and object types, namely processes, controls like cost items , and resources. It can also be applied to physical subtypes of object and object types, namely elements having ports. The nesting implies an order among the nested parts. EXAMPLE A nesting of costs items in an [[IfcCostSchedule]] is the composition of complex cost items from other cost items. The order of the nested cost items underneath the parent cost item is determined by the order of the list of RelatedObjects . EXAMPLE A nesting of [[IfcTask]] s within a work schedule is the composition of a parent work task from more specific sub work tasks. The order of the sub tasks underneath the parent task is determined by the order of the list of RelatedObjects . EXAMPLE A series of [[IfcDistributionPort]] s can be nested within an [[IfcDistributionElement]] . They decompose the distribution element and have an implied order. Decompositions imply a dependency, i.e. the definition of the whole depends on the definition of the parts and the parts depend on the existence of the whole. The behaviour that is implied from the dependency has to be established inside the applications. HISTORY New entity in IFC2.0 .change ifc2x4 IFC4 CHANGE The attributes RelatingObject and RelatedObjects are demoted from the supertype [[IfcRelDecomposes]] , and RelatedObjects is refined to be a list. The use of [[IfcRelNests]] is repurposed to be a nesting of an ordered collections of parts."

#:IFC.xml:20800
msgid "IfcRelNests_RelatingObject"
msgstr "RelatingObject"

msgid "IfcRelNests_RelatingObject_DEFINITION"
msgstr "オブジェクトの定義は、製品以外のオブジェクトタイプまたは製品以外のオブジェクト発生のいずれかで、巣を表します。 それは全体の部分の関係内の全体である。 .change ifc2x4 IFC4 変更点 属性はスーパータイプ [[IfcRelDecomposes]] から降格され、順序付けられたネスト関係を定義します。"

#:IFC.xml:20814
msgid "IfcRelNests_RelatedObjects"
msgstr "関連オブジェクト"

msgid "IfcRelNests_RelatedObjects_DEFINITION"
msgstr "製品以外のオブジェクトの発生または製品以外のオブジェクトタイプのいずれかがネストされているオブジェクト定義。 これらは、順序付けられた部品全体の関係、すなわち部品として定義されます。 RelatedObjects のリスト内の位置によって表される部品間には暗黙の順序があります。 hangeのifc2x4 IFC4の変更 属性はスーパータイプ [[IfcRelDecomposes]] から降格され、ネスト内の部品の順序付けセットを定義します。"

#:IFC.xml:21376
msgid "IfcResource"
msgstr "IfcResource"

msgid "IfcResource_DEFINITION"
msgstr "[[IfcResource]] contains the information needed to represent the costs, schedule, and other impacts from the use of a thing in a process. It is not intended to use [[IfcResource]] to model the general properties of the things themselves, while an optional linkage from [[IfcResource]] to the things to be used can be specified specifically, the relationship from subtypes of [[IfcResource]] to [[IfcProduct]] through the [[IfcRelAssignsToResource]] relationship . There are two basic intended uses of [[IfcResource]] . First, if the attributes of the thing are not needed for the purpose of the use of [[IfcResource]] , or the types of things are not explicitly modeled in IFC yet, then the linkage between the resource and the thing doesn t have to be instantiated in the system. That is, the attributes of [[IfcResource]] or its subtypes alone are sufficient to represent the use of the thing as a resource for the purpose of the project. EXAMPLE construction equipment such as earth moving vehicles or tools are not currently modeled within the IFC. For the purpose of estimating and scheduling, these can be represented using subtypes of [[IfcResource]] alone. Second, if the attributes of the thing are needed for the use of [[IfcResource]] objects, and they are modeled explicitly as objects, then the [[IfcResource]] instances can be linked to the instances of the type of the things being referenced. Things that might be used as resources and that are already modeled in the IFC include physical products, people and organizations, and materials. The relationship object [[IfcRelAssignsToResource]] is provided for this approach. The inherited attribute ObjectType is used as a textual code that identifies the resource type. HISTORY New entity in IFC1.0 .change ifc2x IFC2x CHANGE The attributes BaseUnit and ResourceConsumption have been removed from the abstract entity they are reintroduced at a lower level in the hierarchy."

#:IFC.xml:21266
msgid "IfcResource_ResourceOf"
msgstr "ResourceOf"

msgid "IfcResource_ResourceOf_DEFINITION"
msgstr "製品、プロセス、コントロール、リソース、アクターなどの他のオブジェクトへのリレーションシップセット。このリソースオブジェクトはリソースです。"

#:IFC.xml:21377
msgid "IfcResource_Identification"
msgstr "識別"

msgid "IfcResource_Identification_DEFINITION"
msgstr "リソースに与えられた識別番号。これは発生レベルの識別子です。 .change ifc2x4 IFC4 サブタイプ [[IfcConstructionResource]] から昇格された属性 を変更する。"

#:IFC.xml:21382
msgid "IfcResource_LongDescription"
msgstr "LongDescription"

msgid "IfcResource_LongDescription_DEFINITION"
msgstr "リソースの詳細な説明、例えば労働者のスキルセット。 hangeのifc2x4 IFC4の変更 LongDescription属性はサブタイプ[[IfcConstructionResource]]でResourceGroup属性を置き換えるように追加されました。"

#:IFC.xml:21390
msgid "IfcResourceSelect"
msgstr "IfcResourceSelect"

#:IFC.xml:21391
msgid "IfcRoot"
msgstr "IfcRoot"

msgid "IfcRoot_DEFINITION"
msgstr "[[IfcRoot]] is the most abstract and root class for all entity definitions that roots in the kernel or in subsequent layers of the IFC specification. It is therefore the common supertype of all IFC entities, beside those defined in an IFC resource schema. All entities that are subtypes of [[IfcRoot]] can be used independently, whereas resource schema entities, that are not subtypes of [[IfcRoot]] , are not supposed to be independent entities. NOTE View definitions and implementation agreement may impose additional restrictions on the use of the OwnerHistory to handle object versioning. HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE The attribute OwnerHistory has been made OPTIONAL."

#:IFC.xml:21408
msgid "IfcRoot_OwnerHistory"
msgstr "所有者履歴"

msgid "IfcRoot_OwnerHistory_DEFINITION"
msgstr "所有アクター、アプリケーションを含む、そのオブジェクトの現在の所有権に関する情報の割り当て オブジェクトの最近の変更について捕捉されたローカル識別と情報、NOTEは追加、削除、または変更のいずれかとして保存された最後の変更のみです。 .change ifc2x4 IFC4 変更点 属性はオプションに変更されました。"

#:IFC.xml:21392
msgid "IfcRoot_Description"
msgstr "説明"

msgid "IfcRoot_Description_DEFINITION"
msgstr "有益なコメントを交換するための任意の説明。"

#:IFC.xml:21397
msgid "IfcRoot_GlobalId"
msgstr "GlobalId"

msgid "IfcRoot_GlobalId_DEFINITION"
msgstr "ソフトウェアの世界でグローバルに一意な識別子を割り当てます。"

#:IFC.xml:21402
msgid "IfcRoot_Name"
msgstr "名前"

msgid "IfcRoot_Name_DEFINITION"
msgstr "参加ソフトウェアシステムまたはユーザーが使用するための任意の名前。 [[IfcRoot]] のサブタイプによっては、Name 属性の挿入が必要になる場合があります。これは、where ルールによって強制されます。"

#:IFC.xml:21420
msgid "IfcSimplePropertyTemplate"
msgstr "IfcSimplePropertyTemplate"

msgid "IfcSimplePropertyTemplate_DEFINITION"
msgstr "The [[IfcSimplePropertyTemplate]] defines the template for all dynamically extensible properties, either the subtypes of [[IfcSimpleProperty]] , or the subtypes of [[IfcPhysicalSimpleQuantity]] . The individual property templates are interpreted according to their Name attribute and may have a predefined template type, property units, and property measure types. The correct interpretation of the attributes PrimaryUnit SecondaryUnit PrimaryMeasureType SecondaryMeasureType is determined by the TemplateType . The attributes Enumerators and Expression only apply to instances of [[IfcSimplePropertyTemplate]] having a particular TemplateType . The TemplateType also controls, which subtype of either [[IfcSimpleProperty]] or [[IfcPhysicalSimpleQuantity]] shall be used for property occurrences corresponding to this template. The [[IfcSimplePropertyTemplate]] is part of the set of templates included in the [[IfcPropertySetTemplate]] . The template can be accessed throught the inverse attribute PartOfPsetTemplate The [[IfcPropertySetTemplate]] may define one or several instances of [[IfcPropertySet]] or [[IfcElementQuantity]] . The definition assignment is established by the objectified relationship [[IfcRelDefinesByTemplate]] as shown in Figure 1. There is no direct link between an [[IfcSimplePropertyTemplate]] and a subtype of either [[IfcSimpleProperty]] or [[IfcPhysicalSimpleQuantity]] . The definition relationship between the template and the individual properties or quantities is established by the Name attributes. NOTE Constraints at [[IfcPropertySetTemplate]] and [[IfcPropertySet]] and [[IfcElementQuantity]] guarantee that the Name attributes of included property templates and individual properties are unique. [[IfcSimplePropertyTemplate]] figure 1 .. .. .. .. figures ifcsimplepropertytemplate fig 1.png Figure 1 Property template relationships HISTORY New entity in IFC4."

#:IFC.xml:21453
msgid "IfcSimplePropertyTemplate_TemplateType"
msgstr "テンプレートタイプ"

msgid "IfcSimplePropertyTemplate_TemplateType_DEFINITION"
msgstr "プロパティテンプレートが単一の値でプロパティを定義するかどうかを定義するプロパティタイプ 境界値、リスト値、テーブル値、列挙値、または参照値です。 または、テンプレートが長さ、面積、ボリューム、重量、または時間値を持つ数量を定義するかどうかを定義する数量タイプです。 注 このプロパティの値は、PrimaryUnit 、 SecondaryDataType 、 SecondaryDataType 、 および Expression 属性の正しい使用を決定します。"

#:IFC.xml:21465
msgid "IfcSimplePropertyTemplate_Enumerators"
msgstr "列挙型"

msgid "IfcSimplePropertyTemplate_Enumerators_DEFINITION"
msgstr "プロパティ列挙の名前、選択可能な値であるすべての有効な列挙子のリスト、プロパティの定義に割り当てられています。 プロパティタイプが P ENUMERATEDVALUE に設定されている場合にのみ、この属性を提供する必要があります。"

#:IFC.xml:21421
msgid "IfcSimplePropertyTemplate_AccessState"
msgstr "AccessState"

msgid "IfcSimplePropertyTemplate_AccessState_DEFINITION"
msgstr "プロパティのアクセス状態に関する情報。 特定の知識を持たない受信アプリケーションでプロパティを表示または変更するかどうかを決定します。 [[IfcStateEnum]] READWRITE 属性の定義 このテンプレートのプロパティは読み取り可能で書き込み可能です。 これらは、どのアプリケーションのユーザーによっても表示および変更できます。これらは、ユーザーによって設定された典型的な情報プロパティです。 READONLY このテンプレートのプロパティは読み取り専用です。 彼らは、どのアプリケーションのユーザーによっても表示されますが、変更されません。アプリケーションは、そのような値を生成することができます。 これらは表示されるべき典型的な自動生成されたプロパティですが、書き戻されません。このテンプレートの LOCKED プロパティはロックされています。 これらは、プロパティセットテンプレートのパブリッシャーを所有しているアプリケーションによってのみアクセスできます。 これらは一般的にアプリケーションに依存し、公開されるべきではない内部プロパティです。 READWRITELOCKED このテンプレートのプロパティはロックされ、読み取り可能で、書き込み可能です。所有するアプリケーションによってのみアクセスできます。 READONLYLOCKED このテンプレートのプロパティはロックされ読み取り専用です。所有しているアプリケーションだけがアクセスできます。"

#:IFC.xml:21426
msgid "IfcSimplePropertyTemplate_Expression"
msgstr "式"

msgid "IfcSimplePropertyTemplate_Expression_DEFINITION"
msgstr "プロパティテンプレートの追加情報を保存するために使用される式は PropertyType に応じて使用されます。 以下の定義が必要です。 PropertyType が P TABLEVALUE に設定されている場合、定義された値と定義された値との相関を定義するために評価できる式を指定します。 Q LENGTH, Q AREA, Q VOLUME, Q COUNT, Q WEIGTH, Q 数量の計算に使用する数式 注 プロパティタイプが上記に記載されていない場合、値はアサートされません。"

#:IFC.xml:21431
msgid "IfcSimplePropertyTemplate_PrimaryMeasureType"
msgstr "プライマリメジャータイプ"

msgid "IfcSimplePropertyTemplate_PrimaryMeasureType_DEFINITION"
msgstr "Primary measure type assigned to the definition of the property. It should be provided, if the PropertyType is set to P SINGLEVALUE determining the measure type of [[IfcPropertySingleValue]].NominalValue P ENUMERATEDVALUE determining the measure type of [[IfcPropertyEnumeratedValue]].EnumerationValues P BOUNDEDVALUE determining the measure type of [[IfcPropertyBoundedValue]].LowerBoundValue P LISTVALUE determining the measure type of [[IfcPropertyListValue]].ListValues P TABLEVALUE determining the measure type of [[IfcPropertyTableValue]].DefiningValues P REFERENCEVALUE determining the measure type of [[IfcPropertyTableValue]].PropertyReference NOTE The value range of the measure type is within the select type [[IfcValue]] for all PropertyType s with the exeption of P REFERENCEVALUE. Here it is within the select type [[IfcObjectReferenceSelect]] ."

#:IFC.xml:21436
msgid "IfcSimplePropertyTemplate_PrimaryUnit"
msgstr "PrimaryUnit"

msgid "IfcSimplePropertyTemplate_PrimaryUnit_DEFINITION"
msgstr "Primary unit assigned to the definition of the property. It should be provided, if the PropertyType is set to P SINGLEVALUE determining the [[IfcPropertySingleValue]].Unit P ENUMERATEDVALUE determining the [[IfcPropertyEnumeration]].Unit P BOUNDEDVALUE determining the [[IfcPropertyBoundedValue]].Unit P LISTVALUE determining the [[IfcPropertyListValue]].Unit P TABLEVALUE determining the [[IfcPropertyTableValue]].DefiningUnit"

#:IFC.xml:21441
msgid "IfcSimplePropertyTemplate_SecondaryMeasureType"
msgstr "SecondaryMeasureType"

msgid "IfcSimplePropertyTemplate_SecondaryMeasureType_DEFINITION"
msgstr "Secondary measure type assigned to the definition of the property. It should be provided, if the PropertyType is set to P BOUNDEDVALUE determining the measure type of [[IfcPropertyBoundedValue]].UpperBoundValue P TABLEVALUE determining the measure type of [[IfcPropertyTableValue]].DefinedValues The value range of the measure type is within the select type [[IfcValue]] for all PropertyType s with the exeption of P ENUMERATEDVALUE. Here it is the comma delimited list of enumerators. NOTE The measure type of [[IfcPropertyEnumeration]].EnumerationValues is provided as PrimaryDataType ."

#:IFC.xml:21446
msgid "IfcSimplePropertyTemplate_SecondaryUnit"
msgstr "SecondaryUnit"

msgid "IfcSimplePropertyTemplate_SecondaryUnit_DEFINITION"
msgstr "プロパティの定義に割り当てられた副単位。 PropertyType が P TABLEVALUE に設定されている場合、[[IfcPropertyTableValue]].DefinedUnit を指定する必要があります。"

#:IFC.xml:21477
msgid "IfcSimplePropertyTemplateTypeEnum"
msgstr "IfcSimplePropertyTemplateTypeEnum"

msgid "IfcSimplePropertyTemplateTypeEnum_DEFINITION"
msgstr "This enumeration defines the correct subtype of instances of [[IfcSimpleProperty]] or [[IfcPhysicalSimpleQuantity]] that are created and are assigned to this [[IfcSimplePropertyTemplate]] . It also determines how the attributes of [[IfcPropertyTemplate]] , PrimaryUnit , SecondaryUnit , Enumerators , PrimaryDataType , SecondaryDataType , should be used. HISTORY New enumeration in IFC4. Items P SINGLEVALUE The properties defined by this [[IfcPropertyTemplate]] are of type [[IfcPropertySingleValue]] . P ENUMERATEDVALUE The properties defined by this [[IfcPropertyTemplate]] are of type [[IfcPropertyEnumeratedValue]] . P BOUNDEDVALUE The properties defined by this [[IfcPropertyTemplate]] are of type [[IfcPropertyBoundedValue]] . P LISTVALUE The properties defined by this [[IfcPropertyTemplate]] are of type [[IfcPropertyListValue]] . P TABLEVALUE The properties defined by this [[IfcPropertyTemplate]] are of type [[IfcPropertyTableValue]] . P Q Q AREA The properties defined by this [[IfcPropertyTemplate]] are of type [[IfcQuantityArea]] . Q VOLUME The properties defined by this [[IfcPropertyTemplate]] are of type [[IfcQuantityVolume]] . Q COUNT The properties defined by this [[IfcPropertyTemplate]] are of type [[IfcQuantityCount]] . Q WEIGHT The properties defined by this [[IfcPropertyTemplate]] are of type [[IfcQuantityWeight]] . Q TIME The properties defined by this [[IfcPropertyTemplate]] are of type [[IfcQuantityTime]] ."

#:IFC.xml:21590
msgid "IfcSimplePropertyTemplateTypeEnum_P_SINGLEVALUE"
msgstr "歌詞(P)"

msgid "IfcSimplePropertyTemplateTypeEnum_P_SINGLEVALUE_DEFINITION"
msgstr "この [[IfcPropertyTemplate]] で定義されているプロパティは、[[IfcPropertySingleValue]] 型です。"

#:IFC.xml:21587
msgid "IfcSimplePropertyTemplateTypeEnum_P_ENUMERATEDVALUE"
msgstr "Pのエネルギー値"

msgid "IfcSimplePropertyTemplateTypeEnum_P_ENUMERATEDVALUE_DEFINITION"
msgstr "この [[IfcPropertyTemplate]] で定義されているプロパティは、[[IfcPropertyEnumeratedValue]] 型です。"

#:IFC.xml:21585
msgid "IfcSimplePropertyTemplateTypeEnum_P_BOUNDEDVALUE"
msgstr "P境界値"

msgid "IfcSimplePropertyTemplateTypeEnum_P_BOUNDEDVALUE_DEFINITION"
msgstr "この [[IfcPropertyTemplate]] で定義されているプロパティは、[[IfcPropertyBoundedValue]] 型です。"

#:IFC.xml:21588
msgid "IfcSimplePropertyTemplateTypeEnum_P_LISTVALUE"
msgstr "P LISTALUE"

msgid "IfcSimplePropertyTemplateTypeEnum_P_LISTVALUE_DEFINITION"
msgstr "この [[IfcPropertyTemplate]] で定義されているプロパティは、[[IfcPropertyListValue]] 型です。"

#:IFC.xml:21591
msgid "IfcSimplePropertyTemplateTypeEnum_P_TABLEVALUE"
msgstr "テーブル値"

msgid "IfcSimplePropertyTemplateTypeEnum_P_TABLEVALUE_DEFINITION"
msgstr "この [[IfcPropertyTemplate]] で定義されているプロパティは、[[IfcPropertyTableValue]] 型です。"

#:IFC.xml:21589
msgid "IfcSimplePropertyTemplateTypeEnum_P_REFERENCEVALUE"
msgstr "P リファレンス値"

msgid "IfcSimplePropertyTemplateTypeEnum_P_REFERENCEVALUE_DEFINITION"
msgstr "P リファレンス値"

#:IFC.xml:21651
msgid "IfcSimplePropertyTemplateTypeEnum_Q_LENGTH"
msgstr "Qの長さ"

msgid "IfcSimplePropertyTemplateTypeEnum_Q_LENGTH_DEFINITION"
msgstr "Qの長さ"

#:IFC.xml:21648
msgid "IfcSimplePropertyTemplateTypeEnum_Q_AREA"
msgstr "Qエリア"

msgid "IfcSimplePropertyTemplateTypeEnum_Q_AREA_DEFINITION"
msgstr "この [[IfcPropertyTemplate]] で定義されているプロパティは、[[IfcQuantityArea]] 型です。"

#:IFC.xml:21653
msgid "IfcSimplePropertyTemplateTypeEnum_Q_VOLUME"
msgstr "Q VOLUME"

msgid "IfcSimplePropertyTemplateTypeEnum_Q_VOLUME_DEFINITION"
msgstr "この [[IfcPropertyTemplate]] で定義されているプロパティは、[[IfcQuantityVolume]] 型です。"

#:IFC.xml:21650
msgid "IfcSimplePropertyTemplateTypeEnum_Q_COUNT"
msgstr "Q COUNT"

msgid "IfcSimplePropertyTemplateTypeEnum_Q_COUNT_DEFINITION"
msgstr "この [[IfcPropertyTemplate]] で定義されているプロパティは、[[IfcQuantityCount]] 型です。"

#:IFC.xml:21654
msgid "IfcSimplePropertyTemplateTypeEnum_Q_WEIGHT"
msgstr "Q重量"

msgid "IfcSimplePropertyTemplateTypeEnum_Q_WEIGHT_DEFINITION"
msgstr "この [[IfcPropertyTemplate]] で定義されているプロパティは、[[IfcQuantityWeight]] 型です。"

#:IFC.xml:21652
msgid "IfcSimplePropertyTemplateTypeEnum_Q_TIME"
msgstr "Qタイム"

msgid "IfcSimplePropertyTemplateTypeEnum_Q_TIME_DEFINITION"
msgstr "この [[IfcPropertyTemplate]] で定義されているプロパティは、[[IfcQuantityTime]] 型です。"

#:IFC.xml:21490
msgid "IfcSingleProjectInstance"
msgstr "IfcSingleProjectInstance"

#:IFC.xml:21498
msgid "IfcTypeObject"
msgstr "IfcTypeObject"

msgid "IfcTypeObject_DEFINITION"
msgstr "The object type defines the specific information about a type, being common to all occurrences of this type. It refers to the specific level of the well recognized generic specific occurrance modeling paradigm. The [[IfcTypeObject]] gets assigned to the individual object instances the occurrences via the [[IfcRelDefinesByType]] relationship. NOTE The terms Type and Style are often used interchangeably. The object type is represented by a set of property set definitions. The attached property sets describe the available alpha numeric information about the object type. and are used to define all common properties that apply to all object occurrences of that type. NOTE If a property having having the same name is used within the [[IfcPropertySet]] assigned to an [[IfcTypeObject]] and subtypes and to an occurrence of that type, then the occurrence property overrides the type property. See [[IfcRelDefinesByType]] for an explanatory figure. Object types may be exchanged without being already assigned to objects. An object type may have an indication of the library or catalogue from which its definition originates. This association is handled by the inherited HasAssociations relationship pointing to [[IfcRelAssociatesLibrary]] . HISTORY New entity in IFC2x .change ifc2x3 IFC2x3 CHANGE The [[IfcTypeObject]] is now subtyped from the new supertype [[IfcObjectDefinition]] , and the attribute HasPropertySets has been changed from a LIST into a SET. .change ifc2x4 IFC4 CHANGE The entity [[IfcTypeObject]] shall not be instantiated from IFC4 onwards. It will be changed into an ABSTRACT supertype in future releases of IFC. The inverse attribute Types has been renamed from ObjectTypeOf ."

#:IFC.xml:21093
msgid "IfcTypeObject_HasPropertySets"
msgstr "HasPropertySets"

msgid "IfcTypeObject_HasPropertySets_DEFINITION"
msgstr "オブジェクトの種類に関連付けられ、この種類を参照するすべてのオブジェクトの発生に共通する一意のプロパティセットのリストを設定します。 .change ifc2x3 IFC2x3 CHANGE 属性集約型がLISTからSETに変更されました。"

#:IFC.xml:21359
msgid "IfcTypeObject_Types"
msgstr "タイプ"

msgid "IfcTypeObject_Types_DEFINITION"
msgstr "関係への参照 IfcRelDefinedByType と、このタイプで定義されているこれらの出現オブジェクトへの参照。"

#:IFC.xml:21499
msgid "IfcTypeObject_ApplicableOccurrence"
msgstr "適用される発生"

msgid "IfcTypeObject_ApplicableOccurrence_DEFINITION"
msgstr "The attribute optionally defines the data type of the occurrence object, to which the assigned type object can relate. If not present, no instruction is given to which occurrence object the type object is applicable. The following conventions are used The IFC entity name of the applicable occurrence using the IFC naming convention, CamelCase with IFC prefix It can be optionally followed by the predefined type after the separator forward slash , using uppercase If one type object is applicable to many occurrence objects, then those occurrence object names should be separate by comma , forming a comma separated string. EXAMPLE Refering to a furniture as applicable occurrence entity would be expressed as [[IfcFurnishingElement]] , refering to a brace as applicable entity would be expressed as [[IfcMember]] BRACE , refering to a wall and wall standard case would be expressed as [[IfcWall]], [[IfcWallStandardCase]] ."

#:IFC.xml:21506
msgid "IfcTypeProcess"
msgstr "IfcTypeProcess"

msgid "IfcTypeProcess_DEFINITION"
msgstr "[[IfcTypeProcess]] defines a specific or type definition of a process or activity without being assigned to a schedule or a time. It is used to define a process or activity specification, that is, the specific process or activity information that is common to all occurrences that are defined for that process or activity type. An [[IfcTypeProcess]] may have a list of property set attached. Values of these properties are common to all occurrences of that process or activity type. The type occurrence relationship is realized using the objectified relationship [[IfcRelDefinesByType]] . Subtypes of [[IfcTypeProcess]] may be exchanged without being already assigned to subtypes of [[IfcProcess]] . HISTORY New entity in IFC4."

#:IFC.xml:21226
msgid "IfcTypeProcess_OperatesOn"
msgstr "OperatesOn"

msgid "IfcTypeProcess_OperatesOn_DEFINITION"
msgstr "プロセス タイプによって操作される製品、プロセス、コントロール、リソース、またはアクターなどの他のオブジェクトへのリレーションシップのセット。 HISTORY IFC4における新しい逆関係。"

#:IFC.xml:21507
msgid "IfcTypeProcess_Identification"
msgstr "識別"

msgid "IfcTypeProcess_Identification_DEFINITION"
msgstr "プロセス タイプに指定された識別名称。"

#:IFC.xml:21512
msgid "IfcTypeProcess_LongDescription"
msgstr "LongDescription"

msgid "IfcTypeProcess_LongDescription_DEFINITION"
msgstr "アクティビティを詳細に記述する長い説明またはテキストです。注意 継承された SELF [[IfcRoot]].Description 属性は、短い説明として使用されます。"

#:IFC.xml:21517
msgid "IfcTypeProcess_ProcessType"
msgstr "プロセスタイプ"

msgid "IfcTypeProcess_ProcessType_DEFINITION"
msgstr "この型はプロセスをさらに示す特定の型を示します。使用はインスタンス化可能なサブタイプのレベルで確立する必要があります。 特に、PredefinedType 属性の列挙が USERDEFINED に設定されている場合、ユーザー定義型を保持します。"

#:IFC.xml:21525
msgid "IfcTypeProduct"
msgstr "IfcTypeProduct"

msgid "IfcTypeProduct_DEFINITION"
msgstr "[[IfcTypeProduct]] defines a type definition of a product without being already inserted into a project structure without having a placement , and not being included in the geometric representation context of the project. It is used to define a product specification, that is, the specific product information that is common to all occurrences of that product type. An [[IfcTypeProduct]] may have a list of property set attached and an optional set of product representations. Values of these properties and the representation maps are common to all occurrences of that product type. The type occurrence relationship is realized using the objectified relationship [[IfcRelDefinesByType]] . NOTE The product representations are defined as representation maps, which may be assigned by a product instance through the representation item s being an [[IfcShapeRepresentation]] and having Items of type [[IfcMappedItem]] . The representations at the occurrence level represented by subtypes of [[IfcProduct]] can override the specific representations at the type level for geometric representations, a Cartesian transformation operator can be applied at the occurrence level. for property sets, a property within an occurrence property set, assigned at the product occurrence, overrides the same property assigned to the product type. An [[IfcTypeProduct]] may be exchanged without being already assigned to subtypes of [[IfcProduct]] . HISTORY New entity in IFC2x. .change ifc2x4 IFC4 CHANGE The entity [[IfcTypeProduct]] shall not be instantiated from IFC4 onwards. It will be changed into an ABSTRACT supertype in future releases of IFC."

#:IFC.xml:13078
msgid "IfcTypeProduct_RepresentationMaps"
msgstr "RepresentationMaps"

msgid "IfcTypeProduct_RepresentationMaps_DEFINITION"
msgstr "ユニークな表示マップのリスト。各表示マップは、製品スタイルの形状のブロック定義を表します。 複数の表示マップを提供することで、マルチビューブロック定義を与えることができます。"

#:IFC.xml:21246
msgid "IfcTypeProduct_ReferencedBy"
msgstr "参照元"

msgid "IfcTypeProduct_ReferencedBy_DEFINITION"
msgstr "Reference to the [[IfcRelAssignsToProduct]] relationship, by which other products, processes, controls, resources or actors as subtypes of [[IfcObjectDefinition]] can be related to this product type. .change ifc2x4 IFC4 CHANGE New inverse relationship."

#:IFC.xml:21526
msgid "IfcTypeProduct_Tag"
msgstr "タグ"

msgid "IfcTypeProduct_Tag_DEFINITION"
msgstr "製品の特定のタイプのタグまたはラベル識別子。例: EANのような記事番号です。これは特定のレベルの識別子です。"

#:IFC.xml:21534
msgid "IfcTypeResource"
msgstr "IfcTypeResource"

msgid "IfcTypeResource_DEFINITION"
msgstr "[[IfcTypeResource]] defines a specific or type definition of a resource. It is used to define a resource specification the specific resource, that is common to all occurrences that are defined for that resource and could act as a resource template. An [[IfcTypeResource]] may have a list of property sets attached. Values of these properties are common to all occurrences of that resource type. The type occurrence relationship is realized using the objectified relationship [[IfcRelDefinesByType]] . Subtypes of [[IfcTypeResource]] may be exchanged without being already assigned to subtypes of [[IfcResource]] . HISTORY New entity in IFC4."

#:IFC.xml:21278
msgid "IfcTypeResource_ResourceOf"
msgstr "ResourceOf"

msgid "IfcTypeResource_ResourceOf_DEFINITION"
msgstr "他のオブジェクトへのリレーションシップのセット。例えば、 このリソースタイプがリソースである製品、プロセス、コントロール、リソースまたはアクター。 HISTORY IFC4の新しい逆関係。"

#:IFC.xml:21535
msgid "IfcTypeResource_Identification"
msgstr "識別"

msgid "IfcTypeResource_Identification_DEFINITION"
msgstr "リソースタイプに指定された識別名称。"

#:IFC.xml:21540
msgid "IfcTypeResource_LongDescription"
msgstr "LongDescription"

msgid "IfcTypeResource_LongDescription_DEFINITION"
msgstr "リソースを詳細に記述する長い説明またはテキストです。注意 継承された SELF [[IfcRoot]].Description 属性は、短い説明として使用されます。"

#:IFC.xml:21545
msgid "IfcTypeResource_ResourceType"
msgstr "リソースタイプ"

msgid "IfcTypeResource_ResourceType_DEFINITION"
msgstr "この型は、リソースをさらに示す特定の型を示します。使用はインスタンス化可能なサブタイプのレベルで確立する必要があります。 特に、PredefinedType 属性の列挙が USERDEFINED に設定されている場合、ユーザー定義型を保持します。"

#:IFC.xml:21553
msgid "IfcUniqueDefinitionNames__Relations"
msgstr "IfcUniqueDefinitionNames Relations"

#:IFC.xml:21561
msgid "IfcUniquePropertyName__Properties"
msgstr "IfcUniquePropertyName プロパティ"

#:IFC.xml:21569
msgid "IfcUniquePropertySetNames__Properties"
msgstr "IfcUniquePropertySetNames プロパティ"

#:IFC.xml:21577
msgid "IfcUniquePropertyTemplateNames__Properties"
msgstr "IfcUniquePropertyTemplateNames プロパティ"

#:IFC.xml:21599
msgid "Pset_ActorCommon"
msgstr "Pset ActorCommon"

msgid "Pset_ActorCommon_DEFINITION"
msgstr "人口に多数の役者を指定する能力など、役者をさらに分類することができる物件。 [[IfcActor] ]の多くのインスタンスを集計するのではなく、単一の値として扱われるプロパティとして指定される数。"

#:IFC.xml:21600
msgid "ActorCategory"
msgstr "ActorCategory"

msgid "ActorCategory_DEFINITION"
msgstr "ActorCategory"

#:IFC.xml:21605
msgid "NumberOfActors"
msgstr "NumberOfActors"

msgid "NumberOfActors_DEFINITION"
msgstr "集団の中で一緒に扱われるべき俳優の数。"

#:IFC.xml:21610
msgid "SkillLevel"
msgstr "スキルレベル"

msgid "SkillLevel_DEFINITION"
msgstr "俳優によって表示され、彼らが行動することができるアーティファクトにアクションを実行する能力の範囲を示すスキルレベル。"

#:IFC.xml:21616
msgid "Pset_ProjectCommon"
msgstr "Pset ProjectCommon"

msgid "Pset_ProjectCommon_DEFINITION"
msgstr "[[IfcProject] ] のすべての出現に高レベルのプロジェクト情報を適用するためのプロパティ設定"

#:IFC.xml:21617
msgid "FundingSource"
msgstr "FundingSource"

msgid "FundingSource_DEFINITION"
msgstr "投資調達元"

#:IFC.xml:21622
msgid "NetEarnedValue"
msgstr "NetEarnedValue"

msgid "NetEarnedValue_DEFINITION"
msgstr "純獲得値"

#:IFC.xml:21627
msgid "PaybackPeriod"
msgstr "PaybackPeriod"

msgid "PaybackPeriod_DEFINITION"
msgstr "投資回収期間"

#:IFC.xml:21632
msgid "ProjectInvestmentEstimate"
msgstr "ProjectInvestmentEstimate"

msgid "ProjectInvestmentEstimate_DEFINITION"
msgstr "投資コストの推定値"

#:IFC.xml:21637
msgid "ProjectType"
msgstr "プロジェクトタイプ"

msgid "ProjectType_DEFINITION"
msgstr "プロジェクトのタイプを追加"

#:IFC.xml:21642
msgid "ROI"
msgstr "ROI"

msgid "ROI_DEFINITION"
msgstr "投資収益率"

#:IFC.xml:21689
msgid "IfcPropertySetDefinitionSet"
msgstr "IfcPropertySetDefinitionSet"

msgid "IfcPropertySetDefinitionSet_DEFINITION"
msgstr "The purpose of this defined type is enabling the assignment of a set of [[IfcPropertySetDefinition]] s to an [[IfcRelDefinesByProperties]] relationship. NOTE The sole purpose of this defined type is to enable an upward compatible enhancement of the objectified relationship [[IfcRelDefinesByProperties]] in order to assign multiple [[IfcPropertySet]] s, [[IfcElementQuantity]] s or other subtypes of [[IfcPropertySetDefinition]] to objects using a single instance of [[IfcRelDefinesByProperties]] . HISTORY New type in IFC4."

