msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Japanese\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/IfcTopologyResource.pot\n"
"X-Crowdin-File-ID: 100\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: ja_JP\n"
"PO-Revision-Date: 2022-02-20 14:53\n"

#:IFC.xml:49099
msgid "IfcAdvancedFace"
msgstr "IfcAdvancedFace"

msgid "IfcAdvancedFace_DEFINITION"
msgstr "An advanced face is a specialization of a face surface that has to meet requirements on using particular topological and geometric representation items for the definition of the faces, edges and vertices. An [[IfcAdvancedFace]] is restricted to have a face surface geometry of type [[IfcElementarySurface]] , [[IfcSweptSurface]] or [[IfcBSplineSurface]] , have one [[IfcFaceOuterBound]] as the bound of the face, with the exception of closed surfaces, have all faces to be bound by [[IfcEdgeLoop]] or [[IfcVertexLoop]] , have all edges to have an edge curve geometry, have the edge curve geometry restricted to [[IfcLine]] , [[IfcConic]] , [[IfcPolyline]] , or [[IfcBSplineCurve]] In case of closed faces with periodic surfaces, such as cylindrical or spherical surfaces, the following applies the edges of the closed surface, in case of a cylindrical surface the upper and lower cap, refer to the same instance of [[IfcVertexPoint]] twice, no [[IfcFaceOuterBound]] is provided, or the [[IfcFaceOuterBound]] is constructed using an [[IfcSeamCurve]] at the periodic end of the underlying closed surface, in case of a cylindrical surface at 0. 360. degree. cylindrical surface .. .. .. .. figures ifcadvancedface 01.png Figure 1 Use of [[IfcCylindricalSurface]] as underlying surface of an [[IfcAdvancedFace]] NOTE Entity adapted from advanced face defined in ISO 10303 511. HISTORY New entity in IFC4 Formal Propositions ApplicableSurface The geometry used in the definition of the face shall be restricted. The face geometry shall be an [[IfcElementarySurface]] , [[IfcSweptSurface]] , or [[IfcBSplineSurface]] . RequiresEdgeCurve The geometry of all bounding edges of the face shall be fully defined as [[IfcEdgeCurve]] s. ApplicableEdgeCurves The types of curve used to define the geometry of edges shall be restricted to [[IfcLine]] , [[IfcConic]] , [[IfcPolyline]] , or [[IfcBSplineCurve]] ."

#:IFC.xml:49102
msgid "IfcBooleanChoose__B"
msgstr "IfcBooleanChoose B"

#:IFC.xml:49110
msgid "IfcClosedShell"
msgstr "IfcClosedShell"

msgid "IfcClosedShell_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A closed shell is a shell of the dimensionality 2 which typically serves as a bound for a region in R3. A closed shell has no boundary, and has non zero finite extent. If the shell has a domain with coordinate space R3, it divides that space into two connected regions, one finite and the other infinite. In this case, the topological normal of the shell is defined as being directed from the finite to the infinite region. The shell is represented by a collection of faces. The domain of the shell, if present, contains all those faces, together with their bounds. Associated with each face in the shell is a logical value which indicates whether the face normal agrees with TRUE or is opposed to FALSE the shell normal. The logical value can be applied directly as a BOOLEAN attribute of an oriented face, or be defaulted to TRUE if the shell boundary attribute member is a face without the orientation attribute. The combinatorial restrictions on closed shells and geometrical restrictions on their domains are designed to ensure that any domain associated with a closed shell is a closed, orientable manifold. The domain of a closed shell, if present, is a connected, closed, oriented 2 manifold. It is always topologically equivalent to an H fold torus for some H 0. The number H is referred to as the surface genus of the shell. If a shell of genus H has a domain within coordinate space R 3 , then the finite region of space inside it is topologically equivalent to a solid ball with H tunnels drilled through it. The Euler equation applies with B 0, because in this case there are no holes. As in the case of open shells, the surface genus H may not be known a priori, but shall be an integer 0. Thus a necessary, but not sufficient, condition for a well formed closed shell is the following Image .. .. .. .. figures ifcopenshell math1.gif NOTE Entity adapted from closed shell defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. Every edge shall be referenced exactly twice by the loops of the face. 2. Each oriented edge shall be unique. 3. No edge shall be referenced by more than two faces. 4. Distinct faces of the shell do not intersect, but may share edges or vertices. 5. Distinct edges do not intersect but may share vertices. 6. Each face reference shall be unique. 7. The loops of the shell shall not be a mixture of poly loop and other loop types. Note this is given, since only poly loop is defined as face bound definition. 8. The closed shell shall be an oriented arcwise connected 2 manifold. 9. The Euler equation shall be satisfied. Note Please refer to ISO 10303 42 for the equation."

#:IFC.xml:49115
msgid "IfcConnectedFaceSet"
msgstr "IfcConnectedFaceSet"

msgid "IfcConnectedFaceSet_DEFINITION"
msgstr ".extDef NOTE ISO CD 10303 42 1992 接続された面セットは、面の境界エッジと頂点が接続されているような面セットです。 注記エンティティは、ISO 10303に定義されている接続面セットから適応されています 42. HISTORY IFC1.0 の新しいエンティティ。 ペックヘッド 非公式な提案 1 顔とその境界ループの領域の結合は、アークワイズ接続されなければならない。"

#:IFC.xml:49118
msgid "IfcConnectedFaceSet_CfsFaces"
msgstr "CfsFaces"

msgid "IfcConnectedFaceSet_CfsFaces_DEFINITION"
msgstr "共通エッジまたは頂点に沿って接続された円弧方向の面セット。"

#:IFC.xml:49130
msgid "IfcEdge"
msgstr "IfcEdge"

msgid "IfcEdge_DEFINITION"
msgstr "An [[IfcEdge]] defines two vertices being connected topologically. The geometric representation of the connection between the two vertices defaults to a straight line if no curve geometry is assigned using the subtype [[IfcEdgeCurve]] . The [[IfcEdge]] can therefore be used to exchange straight edges without an associated geometry provided by [[IfcLine]] or [[IfcPolyline]] thought [[IfcEdgeCurve]].EdgeGeometry . EXAMPLE Figure 1 illustrates an example where the bounds of the [[IfcEdge]] are given by the EdgeStart and EdgeEnd this also determines the direction of the edge. The location within a coordinate space is determined by the [[IfcVertexPoint]] type for EdgeStart and EdgeEnd. Since no edge geometry is assigned, it defaults to a straight line agreeing to the direction sense. Figure 1 Edge representation .extDef NOTE Definition according to ISO CD 10303 42 1992 An edge is the topological construct corresponding to the connection of two vertices. More abstractly, it may stand for a logical relationship between two vertices. The domain of an edge, if present, is a finite, non self intersecting open curve in R M , that is, a connected 1 dimensional manifold. The bounds of an edge are two vertices, which need not be distinct. The edge is oriented by choosing its traversal direction to run from the first to the second vertex. If the two vertices are the same, the edge is a self loop. The domain of the edge does not include its bounds, and 0 Ξ . Associated with an edge may be a geometric curve to locate the edge in a coordinate space this is represented by the edge curve subtype. The curve shall be finite and non self intersecting within the domain of the edge. An edge is a graph, so its multiplicity M and graph genus G e may be determined by the graph traversal algorithm. Since M E 1, the Euler equation 1 reduces in the case to Image .. .. .. .. figures ifcedge math1.gif where V 1 or 2, and G e 1 or 0. Specifically, the topological edge defining data shall satisfy an edge has two vertices Image .. .. .. .. figures ifcedge math2.gif the vertices need not be distinct Image .. .. .. .. figures ifcedge math3.gif Equation shall hold Image .. .. .. .. figures ifcedge math4.gif NOTE Entity adapted from edge defined in ISO 10303 42. HISTORY New entity in IFC2.0 .spec head Informal Propositions 1. The edge has dimensionality 1. 2. The extent of an edge shall be finite and nonzero."

#:IFC.xml:49133
msgid "IfcEdge_EdgeStart"
msgstr "EdgeStart"

msgid "IfcEdge_EdgeStart_DEFINITION"
msgstr "端の開始点の頂点。"

#:IFC.xml:49145
msgid "IfcEdge_EdgeEnd"
msgstr "EdgeEnd"

msgid "IfcEdge_EdgeEnd_DEFINITION"
msgstr "エッジの終点頂点。同じ頂点は、EdgeStartとEdgeEndの両方に使用できます。"

#:IFC.xml:49181
msgid "IfcEdgeCurve"
msgstr "IfcEdgeCurve"

msgid "IfcEdgeCurve_DEFINITION"
msgstr "An [[IfcEdgeCurve]] defines two vertices being connected topologically including the geometric representation of the connection. NOTE The topology is used to trim the geometry of the edge. There is no need to geometrically trim the edge to match the topology. EXAMPLE Figure 1 illustrates an example where the edge geometry is given by an unbounded curve, here [[IfcCircle]]. The bounds are provided by the EdgeStart and EdgeEnd, the topological direction of the [[IfcEdgeCurve]] opposes the direction of the [[IfcCircle]] by SameSense FALSE. Figure 1 Edge curve .extDef NOTE Definition according to ISO CD 10303 42 1992 An edge curve is a special subtype of edge which has its geometry fully defined. The geometry is defined by associating the edge with a curve which may be unbounded. As the topological and geometric directions may be opposed, an indicator same sense is used to identify whether the edge and curve directions agree or are opposed. The Boolean value indicates whether the curve direction agrees with TRUE or is in the opposite direction FALSE to the edge direction. Any geometry associated with the vertices of the edge shall be consistent with the edge geometry. Multiple edges can reference the same curve. NOTE Entity adapted from edge curve defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The domain of the edge curve is formally defined to be the domain of its edge geometry as trimmed by the vertices. This domain does not include the vertices. 2. An edge curve has non zero finite extent. 3. An edge curve is a manifold. 4. An edge curve is arcwise connected. 5. The edge start is not a part of the edge domain. 6. The edge end is not a part of the edge domain. 7. Vertex geometry shall be consistent with edge geometry."

#:IFC.xml:12242
msgid "IfcEdgeCurve_EdgeGeometry"
msgstr "EdgeGeometry"

msgid "IfcEdgeCurve_EdgeGeometry_DEFINITION"
msgstr "エッジの形状と空間位置を定義する曲線。 この曲線は境界がなく、エッジドメインを定義するエッジの頂点によって暗黙的にトリミングされます。 複数のエッジが同じ曲線を参照できます。"

#:IFC.xml:49182
msgid "IfcEdgeCurve_SameSense"
msgstr "SameSense"

msgid "IfcEdgeCurve_SameSense_DEFINITION"
msgstr "この論理フラグは、TRUE を、エッジジオメトリを定義する曲線とエッジの感覚が同じかどうかを示します。 エッジの感覚は、エッジ開始頂点からエッジ終点までであり、カーブの感覚はパラメータを増やす方向にあります。"

#:IFC.xml:49190
msgid "IfcEdgeLoop"
msgstr "IfcEdgeLoop"

msgid "IfcEdgeLoop_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 An edge loop is a loop with nonzero extent. It is a path in which the start and end vertices are the same. Its domain, if present, is a closed curve. An edge loop may overlap itself. NOTE Entity adapted from edge loop defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The genus of the [[IfcEdgeLoop]] shall be 1 or greater. 2. The Euler formula shall be satisfied number of vertices genus number of edges 1 3. No edge may be referenced more than once by the same [[IfcEdgeLoop]] with the same sense. For this purpose, an edge which is not an oriented edge is considered to be referenced with the sense TRUE."

#:IFC.xml:49198
msgid "IfcEdgeLoop_EdgeList"
msgstr "EdgeList"

msgid "IfcEdgeLoop_EdgeList_DEFINITION"
msgstr "このパスを形成するために連結される指向エッジエンティティのリスト。"

#:IFC.xml:49191
msgid "IfcEdgeLoop_Ne"
msgstr "該当なし"

msgid "IfcEdgeLoop_Ne_DEFINITION"
msgstr "エッジリスト内の要素数。"

#:IFC.xml:49210
msgid "IfcFace"
msgstr "IfcFace"

msgid "IfcFace_DEFINITION"
msgstr "An [[IfcFace]] is topological entity used to define surface, bounded by loops, of a shell. NOTE In a correctly constructed boundary representation model the face normals will point out of the solid and every single edge is used twice once forwards and once backwards. The face normal is solely defined by the consequitive orientations of the [[IfcEdge]] s and [[IfcOrientedEdge]] s that bound the face. If all the edges of the face are connected in a counter clockwise manner following the edge orientations the face normal will point outward. The orientation of the [[IfcFaceSurface]] , or the value of the [[IfcFaceSurface]].SameSense attribute have no effect on the orientation of the face. .extDef NOTE Definition according to ISO CD 10303 42 1992 A face is a topological entity of dimensionality 2 corresponding to the intuitive notion of a piece of surface bounded by loops. Its domain, if present, is an oriented, connected, finite 2 manifold in R m . A face domain shall not have handles but it may have holes, each hole bounded by a loop. The domain of the underlying geometry of the face, if present, does not contain its bounds, and 0 Ξ . A face is represented by its bounding loops, which are defined as face bounds. A face has a topological normal n and the tangent to a loop is t. For a loop bounding a face with defined geometry, the cross product n x t points toward the interior of the face. That is, each loop runs counter clockwise around the face when viewed from above, if we consider the normal n to point up. With each loop is associated a BOOLEAN flag to signify whether the loop direction is oriented with respect to the face normal TRUE or should be reversed FALSE . A face shall have at least one bound, and the loops shall not intersect. One loop is optionally distinguished as the outer loop of the face. If so, it establishes a preferred way of embedding the face domain in the plane, in which the other bounding loops of the face are inside the outer bound. Because the face domain is arcwise connected, no inner loop will contain any other loop. This is true regardless of which embedding in the plane is chosen. The edges and vertices referenced by the loops of a face form a graph, of which the individual loops are the connected components. The Euler equation 1 for this graph becomes Image .. .. .. .. figures ifcface math1.gif where G l i is the graph genus of the i th loop. NOTE Entity adapted from face defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. No edge shall be referenced by the face more than twice. 2. Distinct face bounds of the face shall have no common vertices. 3. If geometry is present, distinct loops of the same face shall not intersect. 4. The face shall satisfy the Euler Equation number of vertices number of edges number of loops sum of genus for loops 0."

#:IFC.xml:27144
msgid "IfcFace_HasTextureMaps"
msgstr "HasTextureMaps"

msgid "IfcFace_HasTextureMaps_DEFINITION"
msgstr "HasTextureMaps"

#:IFC.xml:49213
msgid "IfcFace_Bounds"
msgstr "バウンド数"

msgid "IfcFace_Bounds_DEFINITION"
msgstr "顔の境界。"

#:IFC.xml:49225
msgid "IfcFaceBound"
msgstr "IfcFaceBound"

msgid "IfcFaceBound_DEFINITION"
msgstr ".extDef NOTE ISO CD 10303に準拠した定義 42 1992 フェースバインドは、面をバウンディングするために使用されるループです。 注記エンティティは、ISO 10303で定義されている面から適応されています 42. HISTORYIFC1.0 の新しいエンティティ"

#:IFC.xml:49233
msgid "IfcFaceBound_Bound"
msgstr "バインドされています"

msgid "IfcFaceBound_Bound_DEFINITION"
msgstr "面境界として使用されるループ。"

#:IFC.xml:49226
msgid "IfcFaceBound_Orientation"
msgstr "方向"

msgid "IfcFaceBound_Orientation_DEFINITION"
msgstr "これは、「TRUE」か「FALSE」かを示しています。ループが最初に定義された場合と同じ意味を持ちます。 sense が FALSE の場合、コンポーネント指向のすべてのエッジのセンサーは顔に使用されると暗黙的に反転されます。"

#:IFC.xml:49245
msgid "IfcFaceOuterBound"
msgstr "IfcFaceOuterBound"

msgid "IfcFaceOuterBound_DEFINITION"
msgstr ".extDef NOTE ISO CD 10303に準拠した定義 42 1992 面外側バインドは、顔に外側の境界を定義するための追加の意味を持つバインドされた特殊なサブタイプです。 このタイプの顔の境界線は複数ありません。 注記エンティティは、ISO 10303で定義された面外側から適応されています 42. HISTORY IFC1.0 の新しいエンティティ"

#:IFC.xml:49248
msgid "IfcFaceSurface"
msgstr "IfcFaceSurface"

msgid "IfcFaceSurface_DEFINITION"
msgstr "[[IfcFaceSurface]] では、表面に関連する表面の基礎となる形状を定義します。 注 トポロジは、サーフェスのジオメトリをトリミングするために使用されます。 トポロジーに合わせて表面を幾何学的にトリミングする必要はありません。 xtDef NOTE ISO CD 10303による定義 42 1992 面面は、ジオメトリが関連するサーフェスによって定義されるサブタイプの面です。 顔によって使用される表面の部分は、おそらく穴のあるオープンディスクとして平面に埋め込むことができます。 ただし、境界ループの端と頂点を持つ面の組合せは平面に埋め込む必要はありません。 それは、例えば、球体やトーラス全体をカバーすることができます。 面と幾何学面の両方が正常な方向を定義しているように、 BOOLEAN フラグは、サーフェスの通常が TRUE と一致するか、またはフェイスの通常方向を FALSE することに反対することを示すために使用されます。 顔のループのいずれかのコンポーネントに関連付けられた形状は、表面形状と一致する必要があります。 すべての頂点点とエッジ曲線の領域が面形状面に含まれているという意味です 複数の面サーフェスでサーフェスを参照することができます。 注意 ISO 10303に定義された顔面から適応したエンティティ 42. 履歴 IFC2x .spec ヘッド 非公式の提案 1. フェイスサーフェスのドメインは、ループによってトリミングされると、フェイスジオメトリのドメインとして正式に定義されます。 このドメインには境界ループは含まれていません 2. 面は有限範囲がゼロでない 3. 面はマニホールドであり 4. 面はアークワイズで接続されている。 5. フェイス表面には表面属性がある 6. ループはフェイスドメインの一部ではありません。 7. ループ幾何学は面幾何学と一致します。 これは、面表面を境界するループを定義する際に使用されるエッジ曲線または頂点点が面形状上にあることを意味します。 8 顔の輪は交差してはならない。"

#:IFC.xml:13270
msgid "IfcFaceSurface_FaceSurface"
msgstr "FaceSurf"

msgid "IfcFaceSurface_FaceSurface_DEFINITION"
msgstr "面の内部形状を定義するサーフェス。このサーフェスはバインドされていない可能性があります。 面のドメインは、このサーフェスと継承された SELF FaceBounds 属性の境界ループによって定義されます。"

#:IFC.xml:49249
msgid "IfcFaceSurface_SameSense"
msgstr "SameSense"

msgid "IfcFaceSurface_SameSense_DEFINITION"
msgstr "このフラグは、正常な表面の感覚が TRUE と一致するかどうかを示します。 または、顔に対するトポロジカル正常の感覚「FALSE」に対抗します。"

#:IFC.xml:49257
msgid "IfcLoop"
msgstr "IfcLoop"

msgid "IfcLoop_DEFINITION"
msgstr ".extDef NOTE ISO CD 10303 42 1992 ループは単一の頂点から構築されたトポロジカル実体です。 接続された方向のエッジまたは線形のセグメントを同じ頂点で始まったり終わったりすることです 通常、表面に横たわって顔を結合するために使用されます。 ループは 0 または 1 の次元を持ちます。0 次元ループの領域は 1 つの点です。 1次元ループの領域は、接続された方向曲線ですが、マニホールドである必要はありません。 ループが円であるため、始点の位置は任意です。 ループのドメインには、0 <unk> が含まれます。 ループは単一の頂点、または指向エッジの順序付きコレクション、または点の順序付きコレクションで表されます。 ループはグラフであるため、MとGのグラフ属性はグラフトラバーサルアルゴリズムによって決まります。 M 1以来、オイラー方程式1は、この場合にはイメージに.. .. .. .. ..の図ifcloop数学1。 V と E l が一意の頂点の数であり、ループ内の方向のエッジの数であり、G l がループの属である場合。 注 ISO 10303 42 で定義されているループから適応されたエンティティ。 歴史 IFC2xの新しいエンティティ。.spec head 非公式提案 1. ループには有限範囲があります。 2. ループは、一致する開始点と終了点を持つ閉じたトポロジカル曲線を記述します。"

#:IFC.xml:49260
msgid "IfcLoopHeadToTail__ALoop"
msgstr "IfcLoopHeadTail ALoop"

#:IFC.xml:49268
msgid "IfcOpenShell"
msgstr "IfcOpenShell"

msgid "IfcOpenShell_DEFINITION"
msgstr ".extDef NOTE ISO CD 10303による定義 42 1992 オープンシェルは寸法のシェルである 2. そのドメインが存在する場合、有限であり、接続されていて、指向性があり、境界を持つ2多様体であるが、閉じた表面ではない。 1つ以上の穴を開けた閉じた殻と考えられる。 オープンシェルのドメインは 0 <unk> 1 を満たします。 オープンシェルは、ドメインがハンドルを持つことができるため、顔よりも機能的に一般的です。 シェルは、指向性のある面の集合によって定義されます。 指向を考慮した後、各顔の感覚は、以下に定義されたように通常のシェルと一致しなければならない。 オリエンテーションは、指向面の BOOLEAN 属性として直接提供できます。 またはシェルメンバーが orientation 属性を持たない面の場合は TRUE をデフォルトにしてください。 オープンシェルに対する以下の組み合わせ制約と、ドメインに対する幾何学的制約が設計されています。 非公式の提案と共にオープンシェルに関連するあらゆる領域が 指向性多様体であることを保証するために 各フェイスの参照は一意でなければなりません。開いたシェルは少なくとも1つの面を持つものとします。 特定の顔は複数の開いた殻に存在する可能性があります。 開いているシェルの境界は、その面の面境界ループによって一度だけ参照されるエッジで構成されます。 全ての頂点と一緒になっています オープンシェルのドメインが存在する場合、面のすべてのエッジと頂点が含まれます。 注 これは、その限界のどれも含まれていないフェイスドメインの定義とは若干異なることに注意してください。 例えば、フェイスドメインは、絶縁された点またはラインセグメントを除外することができます。オープンなシェルドメインはそうでない可能性があります。以下の計算のためのアルゴリズムを参照してください。 注記エンティティは、ISO 10303 42で定義された開いているシェルから適応されています。 HISTORYIFC2x.spec ヘッド 非公式提案 1. すべてのエッジは、顔の顔の境界によって正確に2回参照されなければなりません。 各指向エッジは一意でなければならない 3. エッジは2つ以上の面で参照してはならない。 4. シェルの個別面は交差しませんが、エッジや頂点を共有することがあります。 5. エッジは交差しませんが頂点を共有することができます 6. 7. シェルのループはポリループとその他のループタイプの混合物ではない。 ポリループのみが面結合定義として定義されるため、これが与えられることに注意してください。 閉じたシェルは、2マニホールドに接続されたアークワイズアークワイズでなければなりません。"

#:IFC.xml:49272
msgid "IfcOrientedEdge"
msgstr "IfcOrientedEdge"

msgid "IfcOrientedEdge_DEFINITION"
msgstr "The [[IfcOrientedEdge]] represents an [[IfcEdge]] with an Orientation flag applied. It allows to reuse the same [[IfcEdge]] when traversed exactly twice, once forwards and once backwards. NOTE The sense of the normal to the [[IfcFace]] is solely determined from the edges. If all the edges of the face are connected in a counter clockwise manner following the edge orientations the face normal will point outward. The normal to the underlying [[IfcFaceSurface]] representing the geometry of that face has no relevance to this. The purpose of the [[IfcFaceSurface]].SameSense attribute is to give additional information for verification purposes. SameSense TRUE means surface normal and face normal are the same, SameSense FALSE means they are in opposite directions. The reused edge with a geometric representation as [[IfcEdgeCurve]] defines the edge in 3D coordinate space. In some cases, particularly when using elementary or swept surfaces, there is the risk of imprecise mapping of the 3D x, y, z [[IfcEdgeCurve]] onto the adjacent surfaces to determine the boundaries of these surfaces. The optional CurveOnSurface defines the 2D u, v edge within the parametric space of the surface. It could be used to determine the correctness of the mapping of the 3D [[IfcEdgeCurve]] onto this surface. EXAMPLE Figure 1 illustrates an example where the CurveOnSurface is provided in addition to the curve geometry of the [[IfcEdgeCurve]]. Figure 1 Curve on surface representation of an [[IfcOrientedEdge]] .extDef NOTE Definition according to ISO CD 10303 42 1992 An oriented edge is an edge constructed from another edge and contains a BOOLEAN direction flag to indicate whether or not the orientation of the constructed edge agrees with the orientation of the original edge. Except for perhaps orientation, the oriented edge is equivalent to the original edge. A common practice is solid modelling systems is to have an entity that represents the use or traversal of an edge. This use entity explicitly represents the requirement in a manifold solid that each edge must be traversed exactly twice, once in each direction. The use functionality is provided by the edge subtype oriented edge. NOTE Entity adapted from oriented edge defined in ISO 10303 42. HISTORY New entity in IFC2.0. .change ifc2x4 IFC4 Add2 CHANGE The attribute CurveOnSurface has been added."

#:IFC.xml:49157
msgid "IfcOrientedEdge_EdgeElement"
msgstr "EdgeElement"

msgid "IfcOrientedEdge_EdgeElement_DEFINITION"
msgstr "この指向エッジを構築するために使用されるエッジエンティティ。"

#:IFC.xml:49273
msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeEnd"
msgstr "SELF IfcEdge EdgeEnd"

msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeEnd_DEFINITION"
msgstr "SELF [[IfcEdge]].EdgeEnd"

#:IFC.xml:49277
msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeStart"
msgstr "SELF IfcEdge EdgeStart"

msgid "IfcOrientedEdge_SELF_IfcEdge_EdgeStart_DEFINITION"
msgstr "SELF [[IfcEdge]].EdgeStart"

#:IFC.xml:49281
msgid "IfcOrientedEdge_Orientation"
msgstr "方向"

msgid "IfcOrientedEdge_Orientation_DEFINITION"
msgstr "BOOLEAN (BOOLEAN) 使用されているトポロジカル方向が format@@0 の場合、エッジ要素の始点から終点までの方向と一致します。format@@1"

#:IFC.xml:49300
msgid "IfcPath"
msgstr "IfcPath"

msgid "IfcPath_DEFINITION"
msgstr ".extDef NOTE ISO CD 10303 42 1992 パスは、指向エッジの順序付けられたコレクションからなるトポロジカルエンティティです。 それぞれのエッジの始点が前のエッジの終点と一致するようにします パスは、最初の方向のエッジの始点から最後のエッジの終点まで順序付けられます。 指向エッジの BOOLEAN 値センスは、エッジ方向がパスの TRUE の方向と一致するか、または FALSE の逆方向であるかを示します。 個々のエッジは、個々のパスによって一度だけ参照することができます エッジは、複数のパスによって参照することができます。 エッジは、パスとは独立して存在することができます。ISO 10303 42 で定義されているパスから適応された注記エンティティ。 歴史 IFC2.0の新しいエンティティ .spec head 非公式命題1. パスに寸法性がある 1. パスはアークワイズ接続されている。 3. パスのエッジは、共通の頂点を除いて交差しません。 4. パスは有限でゼロではありません。"

#:IFC.xml:49288
msgid "IfcPath_EdgeList"
msgstr "EdgeList"

msgid "IfcPath_EdgeList_DEFINITION"
msgstr "このパスを形成するために連結された指向エッジのリスト。"

#:IFC.xml:49303
msgid "IfcPathHeadToTail__APath"
msgstr "IfcPathHeadTail APath"

#:IFC.xml:49311
msgid "IfcPolyLoop"
msgstr "IfcPolyLoop"

msgid "IfcPolyLoop_DEFINITION"
msgstr ".extDef NOTE Definition according to ISO CD 10303 42 1992 A poly loop is a loop with straight edges bounding a planar region in space. A poly loop is a loop of genus 1 where the loop is represented by an ordered coplanar collection of points forming the vertices of the loop. The loop is composed of straight line segments joining a point in the collection to the succeeding point in the collection. The closing segment is from the last to the first point in the collection. The direction of the loop is in the direction of the line segments. A poly loop shall conform to the following topological constraints the loop has the genus of one. the following equation shall be satisfied Image .. .. .. .. figures ifcpolyloop math1.gif The [[IfcPolyLoop]] is always closed and the last segment is from the last [[IfcCartesianPoint]] in the list of Polygon s to the first [[IfcCartesianPoint]] . Therefore the first point shall not be repeated at the end of the list, neither by referencing the same instance, nor by using an additional instance of [[IfcCartesianPoint]] having the coordinates as the first point. NOTE This entity exists primarily to facilitate the efficient communication of faceted B rep models. NOTE Entity adapted from poly loop defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. All the points in the polygon defining the poly loop shall be coplanar. 2. The first and the last Polygon shall be different by value."

#:IFC.xml:11859
msgid "IfcPolyLoop_Polygon"
msgstr "多角形（多角形）"

msgid "IfcPolyLoop_Polygon_DEFINITION"
msgstr "ループを定義する点のリスト リストには繰り返される点はありません。"

#:IFC.xml:49314
msgid "IfcShell"
msgstr "IfcShell"

#:IFC.xml:49315
msgid "IfcSubedge"
msgstr "IFcSubedge"

msgid "IfcSubedge_DEFINITION"
msgstr ".extDef NOTE ISO CD 10303 42 1992 サブエッジは、既存のエッジのドメインの接続部分であるエッジです。 サブエッジ上のトポロジカル制約は、エッジ上のトポロジカル制約と同じです。 注 ISO 10303 42に定義されているサブエッジから適応したエンティティ HISTORY IFC2x2の新しいエンティティ。 ペックヘッド 非公式な提案 1. サブエッジのドメインは、親エッジのドメインとして正式に定義されます。 で指定します。 2 開始頂点と終了頂点は、親エッジの頂点の領域と親エッジの領域の結合の範囲内でなければならない ."

#:IFC.xml:49169
msgid "IfcSubedge_ParentEdge"
msgstr "ParentEdge"

msgid "IfcSubedge_ParentEdge_DEFINITION"
msgstr "エッジ、またはサブエッジを含むサブエッジ。"

#:IFC.xml:49318
msgid "IfcTopologicalRepresentationItem"
msgstr "IfcTopologicalRepresentationItem"

msgid "IfcTopologicalRepresentationItem_DEFINITION"
msgstr ".extDef NOTE ISO CD 10303 42 1992 トポロジ表示アイテムはジオメトリリソース内のすべてのトポロジ表示アイテムのスーパータイプです。 注記エンティティは ISO 10303 42に定義されているトポロジカル表現アイテムから適応されています。"

#:IFC.xml:49321
msgid "IfcVertex"
msgstr "IfcVertex"

msgid "IfcVertex_DEFINITION"
msgstr ".extDef NOTE ISO CD 10303 42 1992 頂点は点に対応するトポロジカル構造です。 それは次元0と次元0を持っています。 頂点の領域が存在する場合、m寸法実空間R Mの点であり、頂点のサブタイプによって表されます。 注記エンティティは、ISO 10303に定義されている頂点から適応しました 42. 履歴 IFC2.0の新しいエンティティ .spec ヘッド 非公式の提案 1. 頂点は次元性0を持っています. これは頂点の基本的な特性です. 2. 頂点の範囲はゼロであると定義されています."

#:IFC.xml:49336
msgid "IfcVertexLoop"
msgstr "IfcVertexLoop"

msgid "IfcVertexLoop_DEFINITION"
msgstr ".extDef NOTE ISO CD 10303 42 1992 頂点ループは、1 つの頂点からなるゼロ属のループです。 頂点は頂点ループとは独立して存在することができます. トポロジデータは、次の制約画像を満たすものとします.. .. ifcvertexloop math1.gif NOTE ISO 10303で定義された頂点ループから適応した実体。HISTORY IFC2x2に新しい実体。 .spec ヘッド 非公式の提案 1. 頂点ループは、0の範囲と次元を持ちます。2. 頂点ループは属性0を持ちます。"

#:IFC.xml:49324
msgid "IfcVertexLoop_LoopVertex"
msgstr "LoopVertex"

msgid "IfcVertexLoop_LoopVertex_DEFINITION"
msgstr "ループ全体を定義する頂点。"

#:IFC.xml:49339
msgid "IfcVertexPoint"
msgstr "IfcVertexPoint"

msgid "IfcVertexPoint_DEFINITION"
msgstr ".extDef NOTE ISO CD 10303 42 1992 頂点は点として定義されているジオメトリを持つ頂点です。 注記エンティティは、ISO 10303 42 で定義されている頂点から適応しています。 歴史 IFC2x.spec ヘッド 非公式提案 1. 頂点の領域は正式に頂点の領域として定義されます。"

#:IFC.xml:12830
msgid "IfcVertexPoint_VertexGeometry"
msgstr "頂点ジオメトリー"

msgid "IfcVertexPoint_VertexGeometry_DEFINITION"
msgstr "頂点の幾何学的空間の位置を定義する幾何学的点。"

