msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Norwegian\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: no\n"
"X-Crowdin-File: /master/IfcGeometricModelResource.pot\n"
"X-Crowdin-File-ID: 44\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: no_NO\n"
"PO-Revision-Date: 2021-09-27 10:22\n"

#:IFC.xml:8861
msgid "IfcAdvancedBrep"
msgstr "IfcAdvancedBrep"

msgid "IfcAdvancedBrep_DEFINITION"
msgstr "En avansert B rep er en grenselinjemodell der alle flater, kanter og vertikaler er uttrykkelig representert. Den er en solid med eksplisitt topologi og elementær eller fri formgeometri. Avtalene på B-representanten er av type [[IfcAdvancedFace]] . En avansert B rep må oppfylle de samme topologiske begrensningene som manifold solid B rep. X 0D X 0D MERKNAD Det er innført avansert B rep for å støtte det økende antallet applikasjoner som kan definere og utveksle B-rep basert på NURBS eller andre b splinte overflater. X 0D X 0D X 0D X 0D X 0D X 0D figur 1 illustrerer bruk av [[IfcAdvancedBrep]for grenserelaterte modeller med b splinelle overflater. Diagrammet viser den topologiske og geometriske representasjonen elementene som brukes for avanserte B-reps, basert på [[IfcAdvancedFace]]. X 0D X 0D X 0D X 0D X 0D figur 1 Avansert rep, b X-0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D Figur 2 illustrerer bruk av [[IfcAdvancedBrep]] for gjengivelsesmodeller med elementære overflater. Diagrammet viser de topologiske og geometriske fremstillingselementene som brukes for avanserte B-reps, basert på [[IfcAdvancedFace]]. Den viser bruk av [[IfcIntersectionCurve]] for å gi den geometriske representasjonen av kantkurven både som 3D-kurve og som u, pkurve i det parametriske rommet til de tilstøtende overflatene. X 0D X 0D X 0D X 0D X 0D figur 2 Avansert rep, elementær flate X 0D X 0D X 0D X 0D X 0D X 0D 0D NOTE Entity tilpasset fra avansert profilform definert i ISO 10303 514. X 0D X 0D HISTORY Ny enhet i IFC4 X 0D X 0D . pec hode X 0D uformelle posisjoner X 0D X 0D 1. Hver flate er en flate X 0D 2. hver flate har geometrien definert av en elementær overflate, en sveipturoverflate eller en b splinoverflate X 0D 3. kantene som brukes til å definere flatens grenser skal alle referere til en kantkurve X 0D 4. hver kurve som brukes til å definere geometrien til flatene og flategrensene, skal enten være en konisk, eller en linje eller en polylinje eller en b splinkurve X 0D 5. kantene som brukes til å definere flategrensene skal alle beskjæres av vertikaltypen vertex punkt X 0D 6. ingen sløyfe som brukes til å definere en flate som er bundet skal være av den orienterte undertypeSI-dokumentasjonen"

#:IFC.xml:8864
msgid "IfcAdvancedBrepWithVoids"
msgstr "IfcAdvancedBrepWithVoids"

msgid "IfcAdvancedBrepWithVoids_DEFINITION"
msgstr "[[IfcAdvancedBrepWithVoids]] er en spesialisering av en avansert B rep som inneholder ett eller flere hulrom i dens interiør. Stykkene er representert som lukkede skjell som er definert som at skallet normalt peker inn i hulrommet. X 0D X 0D MERKNAD Entity tilpasset fra avansert utforming definert i NS-EN ISO 10303 42. X 0D X 0D HISTORY S Ny enhet i IFC4 X 0D X 0D .spec head X 0D uformell posisjon X 0D X 0D 1. Hvert hulrom skal fjernes fra ytre skall, og fra hvert annet hulrom X 0D 2. Hvert hulrom skal være innesluttet i det ytre skallet, men ikke i noe annet hulrom. Spesielt er ikke ytre skall i settet med hulrom X 0D 3. Hvert skall i [[IfcManifoldSolidBrep]] skal refereres til bare én gang. X 0D 4. Alle flatene på alle skall i [[IfcAdvancedBrep]] og [[IfcAdvancedBrepWithVoids]]. oider skal være av type [[IfcAdvancedFace]] .bSI dokumentasjon"

#:IFC.xml:8867
msgid "IfcAdvancedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcAdvancedBrepWithVoids_Voids_DEFINITION"
msgstr "Voids"

#:IFC.xml:8879
msgid "IfcBlock"
msgstr "Slovenija"

msgid "IfcBlock_DEFINITION"
msgstr "The [[IfcBlock]] is a Construction Solid Geometry CSG 3D primitive. It is defined by a position and a positve distance along the three orthogonal axes. The inherited Position attribute has the IfcAxisPlacement3D type and provides X 0D X 0D SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. X 0D SELF [[IfcCsgPrimitive3D]].Position.Location The block has one vertex at location and the edges are aligned with the placement axes in the positive sense. X 0D X 0D The XLength , YLength , and ZLength attributes define the size of the [[IfcBlock]] along the three axes. X 0D X 0D X 0D X 0D X 0D X 0D Figure 1 illustrates geometric parameters of a block where the block positioned within its own placement X 0D coordinate system. The values for XLength, YLength, and ZLength are applied to the positive X 0D direction of the X, Y, and Z axis. X 0D X 0D X 0D X 0D X 0D Figure 1 Block geometry X 0D X 0D X 0D X 0D X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D A block is a solid rectangular parallelepiped, defined with a location and placement coordinate system. The block is specified by the positive lengths x, y, and z along the axes of the placement coordinate system, and has one vertex at the origin of the placement coordinate system. X 0D X 0D NOTE Entity adapted from block defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC2x3. X 0D X 0D .use head X 0D Texture definition X 0D X 0D On each side face, textures are aligned facing upright. On the top and bottom faces, textures are aligned facing front to back. Textures are stretched or repeated to the extent of each face according to RepeatS and RepeatT . X 0D X 0D Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. X 0D X 0D X 0D X 0D .gridtable X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D Side X 0D Normal X 0D Origin X X 0D Origin Y X 0D Origin Z X 0D S Axis X 0D T Axis X 0D X 0D X 0D Left X 0D X X 0D 0 X 0D YLength X 0D 0 X 0D Y X 0D Z X 0D X 0D X 0D Right X 0D X X 0D XLength X 0D 0 X 0D 0 X 0D Y X 0D Z X 0D X 0D X 0D Front X 0D Y X 0D 0 X 0D 0 X 0D 0 X 0D X X 0D Z X 0D X 0D X 0D Back X 0D Y X 0D XLength X 0D YLength X 0D 0 X 0D X X 0D Z X 0D X 0D X 0D Bottom X 0D Z X 0D 0 X 0D YLength X 0D 0 X 0D X X 0D Y X 0D X 0D X 0D Top X 0D Z X 0D 0 X 0D 0 X 0D ZLength X 0D X X 0D Y X 0D X 0D X 0D X 0D X 0D X 0D X 0D Figure 2 Block textures X 0D X 0D X 0D bSI Documentation"

#:IFC.xml:8880
msgid "IfcBlock_XLength"
msgstr "XLengde"

msgid "IfcBlock_XLength_DEFINITION"
msgstr "Kvartalets størrelse langs X-aksen. Den er gitt av den arvede akseplasseringen gjennom SELF [[IfcCsgPrimitive3D]].Position.P 1 ."

#:IFC.xml:8885
msgid "IfcBlock_YLength"
msgstr "Lengde"

msgid "IfcBlock_YLength_DEFINITION"
msgstr "Kvartalets størrelse langs plasseringsaksen Y-. Den er gitt av den arvede akseplasseringen gjennom SELF [[IfcCsgPrimitive3D]].Posisjon.P 2 ."

#:IFC.xml:8890
msgid "IfcBlock_ZLength"
msgstr "ZLengde"

msgid "IfcBlock_ZLength_DEFINITION"
msgstr "Kvartalets størrelse langs Z-aksen. Den er gitt av den arvede akseplasseringen gjennom SELF [[IfcCsgPrimitive3D]].Position.P 3 ."

#:IFC.xml:8897
msgid "IfcBooleanClippingResult"
msgstr "IfcBooleanClippingResult"

msgid "IfcBooleanClippingResult_DEFINITION"
msgstr "Et klipp resultat er definert som en spesiell undertype av den generelle [[IfcBooleanResult]] . Det begrenser operandene og operatøren av boolsk resultat. X 0D X 0D Et klipperesultat er den bolske forskjellen mellom et fastmontert sveip og et halvt romsolid, eller mellom resultatet av den boolske forskjellen og et halvt romsolid. Derfor kan en operasjon med mer enn én forskjell brukes for å oppnå det endelige boolske resultatet. X 0D X 0D HISTORY Ny enhet i IFC2x.bSI Dokumentasjon"

#:IFC.xml:8900
msgid "IfcBooleanOperand"
msgstr "IfcBooleanOperand"

msgid "IfcBooleanOperand_DEFINITION"
msgstr "Velg type, inkludert alle geometriske representasjonselementer som kan delta i en Bolsk operasjon for å danne en CSG-solid. Det omfatter faste modeller, halve romsolider og CSG-primitiver. Boolske resultater kan også brukes som operander og muliggjør boolske operasjoner X 0D . xtDef X 0D NOTE Definisjon fra NS-EN ISO 10303 42 X 0D Dette velger alle typer enheter som kan delta i en boolsk operasjon for å danne en CSG-fast funksjon. X 0D X 0D MERKNAD Tilsvarende STEP type boolsk operand definert i NS-EN ISO 10303 42. X 0D X 0D HISTORY Ny type i IFC1. .1. X 0D X 0D .change ifc2x4 X 0D IFC4 CHANGE item [[IfcTessellatedFaceSet]] har blitt lagt til i utvalget."

#:IFC.xml:8901
msgid "IfcBooleanOperator"
msgstr "IfcBooleanOperator"

msgid "IfcBooleanOperator_DEFINITION"
msgstr "Boolske operander som gjelder for de første og andre boolske operandene. X 0D X 0D . xtDef X 0D MERKNAD Definisjon etter ISO CD 10303 42 1992 X 0D Denne typen definerer de tre Bolske operatørene som brukes til definisjon av CSG-faste stoffer. X 0D X 0D MERKNAD Entity tilpasset fra boolsk operatør definert i ISO 10303 42. X 0D X 0D HISTORY Ny enhet i IFC1.5.1.bSI dokumentasjon"

#:IFC.xml:8906
msgid "IfcBooleanResult"
msgstr "IfcBooleanResult"

msgid "IfcBooleanResult_DEFINITION"
msgstr "Den [[IfcBooleanResult]] er resultatet av at en Boolean operasjon utføres på to operander som har solid drift. X 0D X 0D EXAMPLE hvis den første driften er en blokk, og den andre driften er en fast sylinder med egnede dimensjoner og plassering, det bolske resultatet som er produsert med forskjellsoperatøren ville være en blokk med et sirkulært hull. X X 0D . xtDef X 0D MERKNAD Definisjon etter ISO CD 10303 42 1992 X 0D A Boolean resultat av en regularisert operasjon på to faste stoffer for å lage en ny fast form. Gyldige operasjoner er regulariserte ikke regelmessige, regulerte kryss og regularisert forskjell. Til formål for bolske operasjoner anses et solid sett med faste punkter. Det siste boolske resultatet avhenger av operasjonen og de to operandene. Når det gjelder forskjellsoperatører, er rekkefølgen av operandene også betydelig. Operatøren kan være enten union, kryss eller forskjell. Effekten av disse operatørene er beskrevet under unionen på to solider er den nye solide og reguleringen av settet med alle punkter som enten er i den første operasjonen eller i den andre driften eller i begge deler. X 0D kryss av to faste stoffer er den nye tilstanden som er reguleringen av settet med alle punkter som er i både den første operasjonen og den andre operasjonen. X 0D Forskjellen i driften av to faste stoffer er regularisering av settet med alle punkter som er i den første driften; men ikke i den andre operanden. X 0D X 0D MERKNAD Tilsvarende STEP type boolsk resultat definert i ISO 10303 42. X 0D X 0D HISTORY Ny enhet i IFC1.5.1.bSI dokumentasjon"

#:IFC.xml:8907
msgid "IfcBooleanResult_Operator"
msgstr "Operatør"

msgid "IfcBooleanResult_Operator_DEFINITION"
msgstr "Den boolske operatøren brukte i operasjonen for å skape resultatet."

#:IFC.xml:8912
msgid "IfcBooleanResult_FirstOperand"
msgstr "FirstOperand"

msgid "IfcBooleanResult_FirstOperand_DEFINITION"
msgstr "Den første operatoren skal opereres ved hjelp av den Bolske operasjonen."

#:IFC.xml:8917
msgid "IfcBooleanResult_SecondOperand"
msgstr "Sekundær operand"

msgid "IfcBooleanResult_SecondOperand_DEFINITION"
msgstr "Den andre operasjonen ble oppgitt for operasjonen."

#:IFC.xml:8922
msgid "IfcBooleanResult_Dim"
msgstr "Dim"

msgid "IfcBooleanResult_Dim_DEFINITION"
msgstr "Dim"

#:IFC.xml:8931
msgid "IfcBoundingBox"
msgstr "IfcBoundingBox"

msgid "IfcBoundingBox_DEFINITION"
msgstr "[[IfcBoundingBox]] definerer en ortogonal boks orientert parallelt med aksene til objektkoordinatsystemet der den blir definert. Den er definert av en hjørne som et tredimensjonalt kartongpunkt og tre lengdetiltak som definerer X, Y og Z parametere for boksen i retning av positive akser. X 0D X 0D MERKNAD Alle undertyper av [[IfcProduct]] med en produktform som framstilling kan ha en merkeboks. I faktaboks representasjonsidentifikatoren som er definert i [[IfcShapeRepresentation]] benyttes [[IfcBoundingBox]] som den letteste 3D-form-representasjonen. X 0D X 0D X 0D X 0D X 0D X 0D som vist på figur 1, [[IfcBoundingBox]] er definert med sitt eget sted som kan brukes til å plassere X 0D [[IfcBoundingBox]] i forhold til det geometriske koordinatsystemet. [[IfcBoundingBox]] er definert av X 0D nedre venstre hjørne og øvre høyre hjørne XDim, YDim, ZDim målt i overordnet X 0D koordinatsystem . X 0D X 0D X 0D X 0D X 0D figur 1 loddboks X 0D X 0D X 0D X 0D X 0D X 0D X 0D NOTE Tilsvarende STEP type rammedomdømme definert i ISO 10303 42. X 0D 0D HISTORY Ny enhet i IFC1.0.bSI dokumentasjon"

#:IFC.xml:8954
msgid "IfcBoundingBox_Corner"
msgstr "Hjørne"

msgid "IfcBoundingBox_Corner_DEFINITION"
msgstr "Hjørne"

#:IFC.xml:8932
msgid "IfcBoundingBox_XDim"
msgstr "XDim"

msgid "IfcBoundingBox_XDim_DEFINITION"
msgstr "Lengdeattributt målt langs kanten parallelt med X-aksen"

#:IFC.xml:8937
msgid "IfcBoundingBox_YDim"
msgstr "YDim"

msgid "IfcBoundingBox_YDim_DEFINITION"
msgstr "Breddeattributt målt langs kanten parallelt med Y-aksen"

#:IFC.xml:8942
msgid "IfcBoundingBox_ZDim"
msgstr "Zdim"

msgid "IfcBoundingBox_ZDim_DEFINITION"
msgstr "Høydeattributtet målt langs kanten parallelt med Z-aksen."

#:IFC.xml:8947
msgid "IfcBoundingBox_Dim"
msgstr "Dim"

msgid "IfcBoundingBox_Dim_DEFINITION"
msgstr "Dim"

#:IFC.xml:8978
msgid "IfcBoxedHalfSpace"
msgstr "IfcBoxedHalfSpace"

msgid "IfcBoxedHalfSpace_DEFINITION"
msgstr "[[IfcBoxedHalfSpace]] brukes som supertype [[IfcHalfSpaceSolid]] bare innenfor boolske operasjoner. Det er domenet i nøyaktig to delsett, der det aktuelle domenet er attributtet vedlegg. X 0D X 0D Deklarasjonens formål er å oppgi en søkeboks for den andre operatoren i den boolske operasjonen. Det skal være tilstrekkelig stor til å lukke resulterende solid helt etter den Bolske operasjonen i halvrommet. Samtidig endrer ikke det endelige resultatet. Resultatet av den boolske operasjonen ville være det samme, som om den ble utført av supertypen [[IfcHalfSpaceSolid]] . Se figur 1 nedenfor. X 0D X 0D korrekt bruk av omhylling.. .. .. .. figurene ifcboxedhalfspace 01. ng Figur 1 Bokset halv romoperasjoner X 0D X 0D The [[IfcBoundingBox]] som gir kapslingen er angitt for den praktiske anvendelsen for å muliggjøre bruk av dimensjonsbokssammenligning for eksempel med hensyn til effektivitet. For å først kontrollere om størrelsesboksene krysser eller ikke skal det gjøres noen beregninger for å kontrollere om enhetenes faste verdier krysser . X 0D X 0D X 0D X 0D X 0D Avhukningen derfor hjelper deg å forhindre at problemer med å håndtere uendelig størrelse. Avsluttingsboksen er X 0D plassert i systemet med objektkoordinater, etablert av objektPlacement for elementet representert X 0D for eksempel med [[IfcLocalPlacement]] . Figur 2 viser at lokkingsboksen er tilstrekkelig stor til at X 0D holder fast ved det Bolske resultatet helt. X 0D X 0D X 0D X 0D figur 2 Boksed halv plasss geometri X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D . xtDef X 0D MERKNAD Definisjon etter ISO CD 10303 42 1992 X 0D denne enheten er en undertype av halvrommets faste rom som trimmes av en omkringliggende rektangulær boks. Boksen har sine kanter parallelt med koordinataksene til det geometriske koordinatsystemet. X 0D Formålet med boksen er å lette beregning av CSG-er ved å produsere en solid finitestørrelse. X 0D X 0D MERKNAD Entity tilpasset fra et koket halv plass, definert i ISO 10303 42. X 0D 0D HISTORIE Ny enhet i IFC1.5.1 X 0D X 0D . hange ifc2x4 X 0D IFC4 BYGGE brukskorrekt, posisjonskoordinatsystem for Enclosure er objektkoordinatsystemet.bSI dokumentasjon"

#:IFC.xml:8966
msgid "IfcBoxedHalfSpace_Enclosure"
msgstr "Kabinett"

msgid "IfcBoxedHalfSpace_Enclosure_DEFINITION"
msgstr "Kabinett"

#:IFC.xml:8981
msgid "IfcCartesianPointList"
msgstr "IfcCartesianPointList"

msgid "IfcCartesianPointList_DEFINITION"
msgstr "[[IfcCartesianPointList]] er den abstrakte overtypen elementer over punkter. X 0D X 0D MERKNAD The [[IfcCartesianPointList]] er introdusert for å gi en kompakt representasjon av potensielt større liste over punkter, slik som i punktskyer og i en indekserbar representasjon av punkter. X 0D 0D HISTORY Ny enhet i IFC4.bSI-dokumentasjonen"

#:IFC.xml:8982
msgid "IfcCartesianPointList_Dim"
msgstr "Dim"

msgid "IfcCartesianPointList_Dim_DEFINITION"
msgstr "Dim"

#:IFC.xml:9001
msgid "IfcCartesianPointList2D"
msgstr "IfcCartesianPointList2D"

msgid "IfcCartesianPointList2D_DEFINITION"
msgstr "[[IfcCartesianPointList2D]] definerer en ordnet samling av to dimensjonale kartongpunkter. Hvert kartesisk punkt er forsynt med et to dimensjonspunkt ved en fast liste med to koordinater. Attributtet CoordList er en todimensjonal liste, der X 0D X 0D første dimensjon er en liste uten grense som representerer hver 2D kartongpunkt X 0D andre dimensjon er en fast liste over to listeelementer, der 1 er x-koordinaten, og 2 y-koordinatene av det kartesiske punktet. X 0D X 0D MERKNAD The [[IfcCartesianPointList2D]] er introdusert for å gi en kompakt representasjon av større liste over punkter, som en indekserbar representasjon av punkter som brukes som punkter i høfskrummene. X 0D 0D HISTORY Ny enhet i IFC4 ADD1.bSI dokumentasjon"

#:IFC.xml:9002
msgid "IfcCartesianPointList2D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList2D_CoordList_DEFINITION"
msgstr "To dimensjonal liste over kartongpunkter som er oppgitt av to koordinater."

#:IFC.xml:9007
msgid "IfcCartesianPointList2D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList2D_TagList_DEFINITION"
msgstr "Liste over tagger som tilsvarer hvert punkt som kan brukes til å identifisere en basiskurve i henhold til Tag attributtet i [[IfcOffsetCurveByDistances]] eller IfcAlignmentCurve ."

#:IFC.xml:9014
msgid "IfcCartesianPointList3D"
msgstr "IfcCartesianPointList3D"

msgid "IfcCartesianPointList3D_DEFINITION"
msgstr "[[IfcCartesianPointList3D]] definerer en ordnet samling av tre dimensjonale kartongpunkter. Hvert kartesisk punkt er tilgjengelig som et tredimensjonalt punkt med en fast liste over tre koordinater. Attributtet CoordList er en todimensjonal liste, der X 0D X 0D første dimensjon er en ikke-grenset liste som representerer hvert 3D kartongpunkt X 0D andre dimensjon er en fast liste over tre listemedlemmer, der 1 er x-koordinaten, 2 y-koordinatene og 3 koordinatene av kartesisk punkt. X 0D X 0D MERKNAD The [[IfcCartesianPointList]] er introdusert for å gi en kompakt representasjon av større liste over punkter, som i punktskyer, og i indekserbar visning av punkter som brukes som vertikaler i velstellerte elementer eller poly-kurver. X 0D 0D HISTORY Ny enhet i IFC4.bSI-dokumentasjonen"

#:IFC.xml:9015
msgid "IfcCartesianPointList3D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList3D_CoordList_DEFINITION"
msgstr "To dimensjonal liste over kartongpunkter som leveres av tre koordinater."

#:IFC.xml:9020
msgid "IfcCartesianPointList3D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList3D_TagList_DEFINITION"
msgstr "Liste over tagger som tilsvarer hvert punkt som kan brukes til å identifisere en basiskurve i henhold til Tag attributtet i [[IfcOffsetCurveByDistances]] eller IfcAlignmentCurve ."

#:IFC.xml:9039
msgid "IfcCsgPrimitive3D"
msgstr "IfcCsgPrimitive3D"

msgid "IfcCsgPrimitive3D_DEFINITION"
msgstr "[[IfcCsgPrimitive3D]] er en abstrakt supertype av alle tre primitiver som brukes som enten rot til tre; eller som boolske resultater i en CSG-solid modell. Alle 3D CSG primitiver er definert innenfor et system med tre dimensjonelle plasseringskoordinater. X 0D HISTORY Ny enhet i IFC2x3.bSI Dokumentasjon"

#:IFC.xml:9049
msgid "IfcCsgPrimitive3D_Position"
msgstr "Posisjon"

msgid "IfcCsgPrimitive3D_Position_DEFINITION"
msgstr "Posisjon"

#:IFC.xml:9040
msgid "IfcCsgPrimitive3D_Dim"
msgstr "Dim"

msgid "IfcCsgPrimitive3D_Dim_DEFINITION"
msgstr "Dim"

#:IFC.xml:9061
msgid "IfcCsgSelect"
msgstr "IfcCsgSelect"

msgid "IfcCsgSelect_DEFINITION"
msgstr "Velg typen som aktiverer valget mellom [[IfcBooleanResult]] og undertyper av [[IfcCsgPrimitive3D]] som potensielt rottreuttrykk på [[IfcCsgSolid]] . X X 0D . xtDef X 0D NOTE Definisjon etter NS-EN ISO 10303 42 X 0D Denne typen identifiserer typen enhet som kan velges som roten av et CSG-tre, inkludert et enkelt CSG-primitiv som et spesielt tilfelle. X 0D X 0D MERKNAD Tilsvarende STEP-type csg er definert i NS-EN ISO 10303 42. X 0D X 0D HISTORY ny type i IFC1.5.1."

#:IFC.xml:9062
msgid "IfcCsgSolid"
msgstr "IfcCsgSolid"

msgid "IfcCsgSolid_DEFINITION"
msgstr "En [[IfcCsgSolid]] er representasjon av en 3D-form ved hjelp av konstruktiv solid geometrimodell. Den representeres med én enkelt 3D-CSG primitiv, eller som et resultat av en Bolsk operasjon. Operantene til en boolsk operasjon kan være boolske operasjoner selv til et CSG-tre. Følgende volumer kan være deler av CSG-treet X 0D X 0D Boundary representasjonsmodeller, som [[IfcFacetedBrep]] , [[IfcFacetedBrepWithVoids]] X 0D Stengte forfalte gjengivelsesmodeller, som [[IfcPolygonalFaceSet]] , [[IfcTriangulatedFaceSet]] , X 0D Swept areal solids, som [[IfcExtrudedAreaSolid]] , [[IfcRevolvedAreaSolid]] , og undertypene for taping, X 0D Advanced swept area solids, som [[IfcSurfaceCurveSweptAreaSolid]] , [[IfcFixedReferenceSweptAreaSolid]] , [[IfcSweptDiskSolid]] X 0D half romsolider, som [[IfcHalfSpaceSolid]] og dens undertyper , og X 0D CSG-primitiver, undertypene av [[IfcCsgPrimitive3D]] . X X 0D . xtDef X 0D MERKNAD Definisjon etter ISO CD 10303 42 1992 X 0D En solid representert som en CSG-modell er definert ved en samling av såkalte primitive faste faste masser, kombinert med regelmessig boolsk operasjon. De tillatte operasjonene er kryssetning, union og forskjell. Ettersom et CSG stort sett også kan bestå av én enkelt CSG primitiv. X 0D X 0D En CSG solid krever to typer informasjon for den komplette definisjonens geometriske og strukturelle. Den geometriske informasjonen formidles fra solide modeller. Disse primitive volumene som sylindere, kiler og ekstruderinger, men kan omfatte generelle B Rep modeller. Solide modeller kan også være halve romsolider. X 0D Strukturinformasjonen er i et tre strengt et asyklisk regissert diagram for Boolean resultat og CSG solids, som representerer en oppskrift for å bygge massen. Terminalen noder er geometrisk primitiver og andre faste stoffer. Hvert CSG solid har nøyaktig ett boolsk resultat knyttet til det, som er roten av treet som definerer massen. Det kan være ytterligere boolske resultater i treet som operandet . Betydningen av en CSG solid enhet er at det faste definert av det tilknyttede treet dermed identifiseres som et betydelig objekt i seg selv. og slik skiller den seg fra andre boolske resulterende enheter som representerer formete resultater underveis i byggeprosessen. X 0D X 0D MERKNAD Entity tilpasset csg solid er definert i NS-EN ISO 10303 42. X 0D X 0D HISTORY Ny enhet i IFC1.5.1bSI dokumentasjon"

#:IFC.xml:9063
msgid "IfcCsgSolid_TreeRootExpression"
msgstr "TreeRootExpression"

msgid "IfcCsgSolid_TreeRootExpression_DEFINITION"
msgstr "Boolsk uttrykk for primitiver og regulariserte operatører som beskriver fast masse. Roten av treet i boolske uttrykk gis eksplisitt som et [[IfcBooleanResult]] helhet, eller som et primitivt undertyper av [[IfcCsgPrimitive3D]] ."

#:IFC.xml:9070
msgid "IfcDirectrixDerivedReferenceSweptAreaSolid"
msgstr "IfcDirectrixDerivedReferenceSweptAreaSolid"

msgid "IfcDirectrixDerivedReferenceSweptAreaSolid_DEFINITION"
msgstr "bSI dokumentasjon"

#:IFC.xml:9073
msgid "IfcExtrudedAreaSolid"
msgstr "IfcExtrudedAreaSolid"

msgid "IfcExtrudedAreaSolid_DEFINITION"
msgstr "The [[IfcExtrudedAreaSolid]] is defined by sweeping a cross section provided by a profile definition. The direction of the extrusion is given by the ExtrudedDirection attribute and the length of the extrusion is given by the Depth attribute. If the planar area has inner boundaries holes defined , then those holes shall be swept into holes of the solid. X 0D X 0D The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the extruded solid. If not provided, it defaults to the current object coordinate system. The ExtrudedDirection is given within the position coordinate system as defined by [[IfcSweptAreaSolid]] . Position . The extruded direction can be any direction which is not perpendicular to the z axis of the position coordinate system. X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D EXAMPLE Figure 1 illustrates geometric parameters of the extruded area solid. The extruded area solid defines the X 0D extrusion of a 2D area by an direction and depth. The result is a solid. X 0D X 0D The profile to be swept is defined X 0D X 0D as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system X 0D since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation X 0D X 0D The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. X 0D X 0D X 0D X 0D X 0D X 0D Figure 1 Extruded area solid geometry X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D EXAMPLE Figure 2 illustrates geometric parameters and additional positioning parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. X 0D X 0D The profile to be swept is defined X 0D X 0D as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system X 0D a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle X 0D X 0D The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the y axis. X 0D X 0D X 0D X 0D X 0D X 0D Figure 2 Repositioned extruded area solid geometry X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D An extruded area solid is a solid defined by sweeping a bounded planar surface. The direction of translation is defined by a direction vector, and the length of the translation is defined by a distance depth. The planar area may have holes which will sweep into holes in the solid. X 0D X 0D NOTE Entity adapted from extruded area solid defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC1.5 X 0D X 0D .use head X 0D Texture use definition X 0D X 0D For side faces, textures are aligned facing upright continuously along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the extrusion axis according to RepeatT . X 0D X 0D For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . X 0D X 0D For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D EXAMPLE Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . X 0D The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows X 0D the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and X 0D the Z axis points up. For an [[IfcExtrudedAreaSolid]] having a profile of [[IfcIShapeProfileDef]], the side X 0D texture coordinate origin is the first corner counter clockwise from the Y axis, which equals X 0D 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth , while the top end cap texture X 0D coordinates start at 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth . X 0D X 0D X 0D X 0D X 0D Figure 3 Extruded area solid textures X 0D X 0D X 0D X 0D bSI Documentation"

#:IFC.xml:9081
msgid "IfcExtrudedAreaSolid_ExtrudedDirection"
msgstr "Ekstrudering"

msgid "IfcExtrudedAreaSolid_ExtrudedDirection_DEFINITION"
msgstr "Ekstrudering"

#:IFC.xml:9074
msgid "IfcExtrudedAreaSolid_Depth"
msgstr "Dybde"

msgid "IfcExtrudedAreaSolid_Depth_DEFINITION"
msgstr "Avstanden mellom overflaten skal sveipes langs ekstrafraksjonen ."

#:IFC.xml:9093
msgid "IfcExtrudedAreaSolidTapered"
msgstr "IfcExtrudedAreaSolidTapered"

msgid "IfcExtrudedAreaSolidTapered_DEFINITION"
msgstr "[[IfcExtrudedAreaSolidTapered]] is defined by sweeping a cross section along a linear spine. The cross section may change along the sweep from the shape of the start cross section into the shape of the end cross section. The resulting solid is bounded by three or more faces A start face, an end face each defined by start and end planes and sections , and one or more lateral faces. Each lateral face is a ruled surface defined by a pair of corresponding edges of the start and end section. X 0D X 0D NOTE Given that the start and end section is provided by a polygon, the corresponding vertices of the start and end cross section are connected, forming a quadrilateral polygon between each pair of corresponding vertices. The surface defined by the bounding quadrilateral polygon is a ruled surface, that could be approximated by triangulation. X 0D X 0D The linear spine is defined by X 0D X 0D Start point SELF [[IfcSweptAreaSolid]].Position.Location X 0D Direction SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection X 0D Distance SELF [[IfcExtrudedAreaSolid]].Depth X 0D X 0D The start cross section is defined by SELF [[IfcSweptAreaSolid]].SweptArea X 0D X 0D A bounded planar surface lying in the XY plane of the position coordinate system defined by SELF [[IfcSweptAreaSolid]].Position.P 1 and SELF [[IfcSweptAreaSolid]].Position.P 2 X 0D The linear spine starts at the plane of the start cross section. The spine is not necessarily perpendicular to the plane. X 0D X 0D The end cross section is defined by EndSweptArea X 0D X 0D A bounded planar surface lying in the XY plane of the position coordinate system defined by translating the start position coordinates provided by SELF [[IfcSweptAreaSolid]].Position along the spine direction by the spine distance. The plane of the end cross section is coplanar to the plane of the start cross section. X 0D X 0D The end cross section is topologically similar to the start cross section i.e. having the same number of vertices and edges . X 0D The end cross section can either be defined by the same paramteric profile using different parameter values, or by a 2D Cartesian transformation of the start profile within the end cross section plane. X 0D X 0D In case of two parameterized profiles the shape is constructed as follows X 0D X 0D The end profile, defined by a cross section based on the same profile paramterization as the start profile, is translated by the spine distance along the spine direction. X 0D It may be shifted within the XY plane of the end postion coordinate system and may be twisted using the rotation parameter. X 0D The shift and rotation parameter are provided by the end cross section being of type [[IfcParameterizedProfileDef]] , where X 0D Shift is EndSweptArea [[IfcParameterizedProfileDef]].Position.Location X 0D Rotation is EndSweptArea [[IfcParameterizedProfileDef]].Position.RefDirection X 0D Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. X 0D X 0D In case of Cartesian transformation of the start cross section the shape is constructed as follows X 0D X 0D The cross section curve, which starts as a curve in the XY plane of the position coordinate system, is first scaled about the origin by the scale parameter. It is then translated by the spine distance along the spine direction. It maybe twisted by using the rotation parameter. X 0D The scale and rotation parameter are provided by the end cross section being of type [[IfcDerivedProfileDef]] , where X 0D Scale is EndSweptArea [[IfcDerivedProfileDef]].Operator.Scale X 0D Rotation is EndSweptArea [[IfcDerivedProfileDef]].Operator.Axis1 X 0D Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. X 0D X 0D HISTORY New entity in IFC4. X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. Mirroring within [[IfcDerivedProfileDef]].Operator shall not be usedbSI Documentation"

#:IFC.xml:9096
msgid "IfcExtrudedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcExtrudedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "EndSweptArea"

#:IFC.xml:9108
msgid "IfcFaceBasedSurfaceModel"
msgstr "IfcFaceBasedSurfaceModel"

msgid "IfcFaceBasedSurfaceModel_DEFINITION"
msgstr "Den [[IfcFaceBasedSurfaceModel]] representerer en form ved hjelp av tilkoblede ansiktssett. De tilkoblede flatene har en dimensjonalitet 2 og plasseres i et koordinatrom av dimensjonalitet 3. X X 0D . xtDef X 0D MERKNAD Definisjon etter ISO CD 10303 42 1992 X 0D En ansiktsbasert overflatemodell er beskrevet med et sett med sammenkoblede flatemåter med dimensjonalitet 2. De tilkoblede flatesettene skal ikke skjære bortsett fra ved kanter og vertikaler, bortsett fra at en flate i ett sammenkoblede flater kan overlappe en flate i en annen sammenkoblet flate forutsatt at ansiktsgrensene er identiske. Det skal være minst ett sett av tilkoblede flater. X 0D Et forbundet flate sett kan finnes uavhengig av en overflatemodell. X 0D X 0D merknad tilpasset fra overflatebasert overflatemodell definert i ISO 10303 42. X 0D 0D HISTORY Ny enhet i IFC2x. X 0D X 0D .spec hodet X 0D uformelle Propositions X 0D 1. De tilkoblede flatesettene skal ikke overlappe eller krysse bortsett fra på vanlige flater, kanter eller vertikaler. X 0D 2. Fbsm-flatene har dimensjonalitet 2. X 0D X 0D X 0D . eprecated X 0D IFC4 CHANGE enheten har blitt utdatert og skal ikke brukes. Objektet [[IfcFacetedBrep]skal brukes i stedet.bSI Dokumentasjon"

#:IFC.xml:9117
msgid "IfcFaceBasedSurfaceModel_FbsmFaces"
msgstr "Fbsmurker"

msgid "IfcFaceBasedSurfaceModel_FbsmFaces_DEFINITION"
msgstr "Fbsmurker"

#:IFC.xml:9109
msgid "IfcFaceBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcFaceBasedSurfaceModel_Dim_DEFINITION"
msgstr "Dim"

#:IFC.xml:9129
msgid "IfcFacetedBrep"
msgstr "IfcFacetedBrep"

msgid "IfcFacetedBrep_DEFINITION"
msgstr "[[IfcFacetedBrep]] er et manifold solid databruk med begrensning som alle flater er plane og avgrensede polygoner. X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D MERKNAD Use of [[IfcFacetedBrep]] er bare begrenset X 0D for grenseoverskridende modeller med plane overflater X 0D Disse overflatene framstilles implisitt ved hjelp av X 0D-grenser av polygoner. Diagrammet viser de topologiske X 0D og den geometriske framstillingselementene som brukes for X 0D fastholdt brøl. X 0D X 0D Hver [[IfcCartesianPoint]], brukes innenfor X 0D [[IfcFacetedBrep]] skal det refereres til tre ganger X 0D med en [[IfcPolyLoop]] begrensning en annen X 0D [[IfcFace]X 0D X 0D X 0D X 0D X 0D X 0D Figur 1 viser bruk av X 0D [[IfcFacetedBrep]X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D . xtDef X 0D MERKNAD Definisjon etter ISO CD 10303 42 1992 X 0D A faset B rep er en enkel form for grensepassering der alle ansikter er plane og alle kanter er rette linjer. I motsetning til B rep modell, kantene og vertiticene er ikke eksplisitt representert i modellen, men er implisitt tilgjengelig gjennom enheten Poly-løkke. En ansiktsutsatt B rep må oppfylle de samme topologiske begrensningene som det manifoldede solide B rep. X X 0D . xtDef X 0D Det ansiktede B rep er blitt innført for å støtte det større antallet systemer som bare tillater massiv grensetype med plane overflater. X 0D X 0D MERKNAD Entity tilpasset fra manifold solid bre, definert i NS-EN ISO 10303 42. X 0D X 0D HISTORY Ny enhet i IFC1.0 X 0D X 0D X 0D X 0D . pec hode X 0D uformelle posisjoner X 0D X 0D 1. Alle grenseløkker på alle sider av alle skall i [[IfcFacetedBrep]] skal være av type [[IfcPolyLoop]] . X 0D 2. Alle vertikalt skal refereres til med alle polylooper, som deler verten. F.eks. skal hvert kartesisk poeng være referert med minst tre polylooper.bSI Dokumentasjon"

#:IFC.xml:9132
msgid "IfcFacetedBrepWithVoids"
msgstr "IfcFacetBrepWithVoider"

msgid "IfcFacetedBrepWithVoids_DEFINITION"
msgstr "The [[IfcFacetedBrepWithVoids]] is a specialization of a faceted B rep som inneholder ett eller flere voids in its interior. Stykkene er representert som lukkede skjell som er definert som at skallet normalt peker inn i hulrommet. X 0D X 0D MERKNAD Entity tilpasset fra databruk med hulrom OG faktisk bås definert i NS-EN ISO 10303 42. X 0D X 0D HISTORY Ny enhet i IFC1.0 X 0D X 0D . hange ifc2x4 X 0D IFC4 CHANGE subtyping endret fra [[IfcManifoldSolidBrep]til [[IfcFacetedBrep]] med oppadrettet kompatibilitet for filbasert utveksling. X 0D X 0D X 0D X 0D . pec hode X 0D uformelle posisjoner X 0D X 0D 1. Hvert hulrom skal fjernes fra ytre skall, og fra hvert annet hulrom X 0D 2. Hvert hulrom skal være innesluttet i det ytre skallet, men ikke i noe annet hulrom. Spesielt er ikke ytre skall i settet med hulrom X 0D 3. Hvert skall i [[IfcManifoldSolidBrep]] skal bare refereres til. X 0D 4. Alle grenseløkker på alle sideflater på alle skall i [[IfcFacetedBrep]] skal være av type [[IfcPolyLoop]] . SI dokumentasjon"

#:IFC.xml:9135
msgid "IfcFacetedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcFacetedBrepWithVoids_Voids_DEFINITION"
msgstr "Voids"

#:IFC.xml:9147
msgid "IfcFixedReferenceSweptAreaSolid"
msgstr "IfcFixedReferenceSweptAreaSolid"

msgid "IfcFixedReferenceSweptAreaSolid_DEFINITION"
msgstr "An [[IfcFixedReferenceSweptAreaSolid]] is a type of swept area solid which is the result of sweeping an area along a Directrix . The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the start tangent of the directrix at this point, and the profile s x axis agrees to the orthogonal projection of the FixedReference direction within the plane of start tangent and Fixed Reference . The orientation of the curve during the sweeping operation is controlled by the FixedReference direction. X 0D X 0D The SweptArea is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the projection of FixedReference onto the normal plane to the directrix at this point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The resulting swept solid is placed by the Position coordinate system. X 0D X 0D The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no EndParam is provided the end defaults to the end of the directrix. X 0D X 0D NOTE The StartParam and the EndParam , if provided as a parameter value, are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. X 0D X 0D NOTE In the case of a curve composed of [[IfcCurveSegment]] , the [[IfcSweptAreaSolid]] Position is dependent on the [[IfcCurveSegment]] StartPlacement and the type of BasisCurve which defines the name function between the start and end explicitly defined as the start point of the next segment points of the segment X 0D X 0D EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In many cases, it is a surface of extrusion. The directrix lies on the surface, often defined as a p curve at this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the FixedReference direction. The Axis2 the y axis, or v is constructed. In this case the resulting swept solid is not repositioned. X 0D X 0D The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a CartesianTransformationOperator3d with attributes X 0D X 0D LocalOrigin as point 0 0 0 , X 0D Axis1 as the orthogonal projection of the FixedReference onto the normal plane defined by Axis3 . X 0D Axis3 as the direction of the tangent vector t at the point of the Directrix with parameter u . X 0D X 0D The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the Directrix parameter u . X 0D X 0D NOTE The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . X 0D X 0D NOTE Entity adapted from fixed reference swept surface defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC4. X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. The SweptArea shall lie in the plane z 0. X 0D 2. The FixedReference shall not be parallel to a tangent vector to the directrix at any point along this curve. X 0D 3. The Directrix curve shall be tangent continuous.bSI Documentation"

#:IFC.xml:9150
msgid "IfcFixedReferenceSweptAreaSolid_FixedReference"
msgstr "FixedReference"

msgid "IfcFixedReferenceSweptAreaSolid_FixedReference_DEFINITION"
msgstr "FixedReference"

#:IFC.xml:9162
msgid "IfcGeometricCurveSet"
msgstr "IfcGeometricCurveSet"

msgid "IfcGeometricCurveSet_DEFINITION"
msgstr "[[IfcGeometricCurveSet]] brukes til å utveksle formgjengivelse som består av en samling av bare 2D-eller 3D-punkter, og kurver. X X 0D . xtDef X 0D MERKNAD Definisjon etter ISO CD 10303 42 1992 X 0D Et geometrisk kurvesett er en samling av to eller tre dimensjonspunkter og kurver. X 0D X 0D MERKNAD Entity tilpasset fra geometrisk kurvesett, definert i NS-ISO 10303 42. X 0D X 0D HISTORY Ny enhet i IFC2x2.bSI dokumentasjon"

#:IFC.xml:9165
msgid "IfcGeometricSet"
msgstr "IfcGeometrisset"

msgid "IfcGeometricSet_DEFINITION"
msgstr "[[IfcGeometricSet]] brukes til representasjon av form som består av 2D eller 3D-punkter, kurver og overflater, – som ikke har en topologisk struktur, som sammenkoblede ansiktssett eller skall ikke er essellert og ikke er solide modeller som f.eks. søtstillinger, CSG eller Brep. X X 0D . xtDef X 0D MERKNAD Definisjon fra ISO CD 10303 42 X 0D Denne enheten er ment for overføring av modeller når en topologisk konstruksjon ikke er tilgjengelig. X 0D X 0D NOTE Entity tilpasset fra geometrisk sett definert i ISO 10303 42. X 0D X 0D HISTORY Ny enhet i IFC2x.bSI Dokumentasjon"

#:IFC.xml:9166
msgid "IfcGeometricSet_Elements"
msgstr "Elementer"

msgid "IfcGeometricSet_Elements_DEFINITION"
msgstr "De geometriske elementene som utgjør det geometriske settet, kan være punkter, kurver eller overflater, men må være av samme koordinatdimensjonalitet."

#:IFC.xml:9171
msgid "IfcGeometricSet_Dim"
msgstr "Dim"

msgid "IfcGeometricSet_Dim_DEFINITION"
msgstr "Dim"

#:IFC.xml:9178
msgid "IfcGeometricSetSelect"
msgstr "IfcGeometricSetVelg"

msgid "IfcGeometricSetSelect_DEFINITION"
msgstr "[[IfcGeometricSetSelect]] inneholder de geometriske representasjonselementene som gjelder for å være del av det geometriske settet X 0D X 0D . xtDef X 0D MERKNAD Definisjon fra ISO10303 42 X 0D Denne valgte typen identifiserer de typer enheter som kan forekomme i et geometrisk sett. X 0D X 0D MERKNAD Tilsvarende STEP-type geometrisk sett er definert i NS-EN ISO 10303 42. X 0D X 0D 0D HISTORY ny type i IFC2x."

#:IFC.xml:9179
msgid "IfcHalfSpaceSolid"
msgstr "IfcHalfSpaceSolid"

msgid "IfcHalfSpaceSolid_DEFINITION"
msgstr "Et halvt romsfest, splitter domenet inn i to ved hjelp av en bunnoverflate. Normalt Bunnflaten er et plan og deler det uendelige rommet inn i to og angir siden på halvrommet ved å bli enig om eller uenig om det normale av planet. X 0D X 0D figur 1 illustrerer definisjonen av [[IfcHalfSpaceSolid]] i et gitt koordinatsystem. Basen er gitt av et ubegrenset plan, og den røde grensen vises bare for visualiseringsformål. X 0D X 0D halv plass ... .. .. .. .. .. ... Talltall ifchalfolid layout1.gif på figur 1 Halvplastisk fast geometri X 0D X 0D . xtDef X 0D MERKNAD Definisjon etter ISO CD 10303 42 1992 X 0D Et halvt mellomrom er definert av det vanlige delsettet av domenet som ligger på én side av en ubundet overflate. På siden av underlaget som er i halve rommet, bestemmes normalt på underlaget og avtaleflagget. Dersom avtaleflagget er SANDET er delsettet det som ligger til grunn for en avstand fra avtaleflagget. Dersom avtaleflagget er FALSE, er delsettet det som er det normale punktet i. X 0D X 0D for gyldig halv rom skal overflaten dele det inn i nøyaktig to delsett. I tillegg skal overflaten være manifold, og alle overflatenormer skal peke i samme underlag. X 0D X 0D MERKNAD En halv plass er ikke en undertype for solid modell. halvromsolider er bare nyttige som operander i boolske uttrykk. X 0D X 0D merkeenhet tilpasset fra et halvt romsolid, definert i NS-ISO 10303 42. X 0D X 0D HISTORY Ny enhet i IFC1.5 X 0D X 0D .spec head X 0D uformelle Propositions X 0D X 0D 1. Basen skal dele opp domenet i nøyaktig to delsett. Hvis det halve rommet er solid av undertypen bodet halvplass [[IfcBoxedHalfSpace]], er det aktuelle domenet at attributtet skal lukkes. I alle andre tilfeller skal hele området og bunnflaten være ubegrensert. X 0D 2. Basen skal være en ubundet overflateundertype av [[IfcElementarySurface]] .bSI dokumentasjon"

#:IFC.xml:9193
msgid "IfcHalfSpaceSolid_BaseSurface"
msgstr "BaseOverflate"

msgid "IfcHalfSpaceSolid_BaseSurface_DEFINITION"
msgstr "BaseOverflate"

#:IFC.xml:9180
msgid "IfcHalfSpaceSolid_AgreementFlag"
msgstr "Avtaleflag"

msgid "IfcHalfSpaceSolid_AgreementFlag_DEFINITION"
msgstr "Avtalen flagget er TRUE hvis det er vanlig med BaseSurface points away from the material of the [[IfcHalfSpaceSolid]]. Ellers er det FALSE."

#:IFC.xml:9185
msgid "IfcHalfSpaceSolid_Dim"
msgstr "Dim"

msgid "IfcHalfSpaceSolid_Dim_DEFINITION"
msgstr "Dim"

#:IFC.xml:9205
msgid "IfcIndexedPolygonalFace"
msgstr "IfcIndexedPolygonalFace"

msgid "IfcIndexedPolygonalFace_DEFINITION"
msgstr "[[IfcIndexedPolygonalFace]] er en kompakt framstilling av en plane flate som en del av et ansiktssett. Vertikene på mangekantet flate er angitt med 3 eller flere kartongespunkter, definert av indekser som peker inn i en [[IfcCartesianPointList3D]], enten direkte eller via PnIndex , hvis gitt på [[IfcPolygonalFaceSet]] . X 0D X 0D Figur 1 viser en [[IfcIndexedPolygonalFace]] med en [[IfcPolygonalFaceSet]] som ikke bruker PnIndex standard . X 0D X 0D [[IfcIndexedPolygonalFace]] .. .. .. .. .. .. .. .. .. .. Tall ifcindexedpolygonalface 01. ng Figur 1 Polygonal ansiktsgeometri oppgitt ved indekser inn i en punktliste X 0D X 0D X 0D X 0D figur 2 viser en [[IfcIndexedPolygonalFace]] på en [[IfcPolygonalFaceSet]] ved å bruke PnIndex . X 0D X 0D [[IfcIndexedPolygonalFace]] oss X 0D valgindeks .. .. .. .. .. .. ... figurer ifcindexedpolygonalface 02. ng Figur 2 Polygonal ansiktsgeometri oppgitt av indekser til en punktliste X 0D X 0D HISTORY Ny enhet i IFC4 Addendum 2.bSI dokumentasjon"

#:IFC.xml:9213
msgid "IfcIndexedPolygonalFace_ToFaceSet"
msgstr "ToFaceSet"

msgid "IfcIndexedPolygonalFace_ToFaceSet_DEFINITION"
msgstr "ToFaceSet"

#:IFC.xml:9206
msgid "IfcIndexedPolygonalFace_CoordIndex"
msgstr "CoordIndex"

msgid "IfcIndexedPolygonalFace_CoordIndex_DEFINITION"
msgstr "En dimensjonsliste med indeksene for de tre eller flere punktene som definerer vertikalene i den ytre løkken. Hvis det tessellerte flatesettet er lukket, angitt med SELF [[IfcTessellatedFaceSet]]. tapt, så skal punktene som definerer den ytre løkken, kobles mot klokken. som sett fra utsiden av kroppen, slik at normalen vil peke utover. X 0D MERKNAD Koordinatene til vertikalene er gitt av listen over indeksert SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList . Dersom SELF [[IfcTessellatedFaceSet]].PnIndex er oppgitt, vil indeksene peke inn i den ellers direkte i [[IfcCartesianPointList3D]] ."

#:IFC.xml:9227
msgid "IfcIndexedPolygonalFaceWithVoids"
msgstr "IfcIndexedPolygonalFaceWithVoids"

msgid "IfcIndexedPolygonalFaceWithVoids_DEFINITION"
msgstr "[[IfcIndexedPolygonalFaceWithVoids]] er en kompakt framstilling av en planar med indre løkker, som er en del av et ansiktssett. X 0D X 0D HISTORY Ny enhet i IFC4 Addendum 2.bSI dokumentasjon"

#:IFC.xml:9228
msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices"
msgstr "InnerCoordIndices"

msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices_DEFINITION"
msgstr "To dimensjonal liste, der den første dimensjonen representerer hver indre løkke fra 1 til N, og den andre dimensjonen består av indeksene til tre eller flere punkter som definerer vertikalene i hver indre løkke. Hvis det tessellerte flatesettet er lukket, angitt med SELF [[IfcTessellatedFaceSet]]. tapt, så skal punktene som definerer de indre løkkene, forbinde med klokkene, som vist fra utsiden av kroppen. X 0D MERKNAD Koordinatene til vertikalene finnes i listen over indeksert SELF [[IfcTessellatedFaceSet]]. oordinates.CoordList . Hvis SELF [[IfcTessellatedFaceSet]].PnIndex er oppgitt, gis indeksene i denne, ellers direkte inn i [[IfcCartesianPointList3D]] ."

#:IFC.xml:9235
msgid "IfcManifoldSolidBrep"
msgstr "IfcManifoldSolidBrep"

msgid "IfcManifoldSolidBrep_DEFINITION"
msgstr "The [[IfcManifoldSolidBrep]] is a solid represented as a collection of connected surfaces that delimit the solid from the surrounding non solid. X 0D X 0D Instances of type [[IfcManifoldSolidBrep]] shall be of type [[IfcFacetedBrep]] , using only [[IfcPolyLoop]] for the bounds of [[IfcFaceBound]] , or of type [[IfcAdvancedBrep]] , using only [[IfcAdvancedFace]] for the face geometry, and [[IfcEdgeCurve]] for the edges. X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D A manifold solid b rep is a finite, arcwise connected volume bounded by one or more surfaces, each of which is a connected, oriented, finite, closed 2 manifold. There is no restriction on the genus of the volume, nor on the number of voids within the volume. X 0D X 0D The Boundary Representation B rep of a manifold solid utilizes a graph of edges and vertices embedded in a connected, oriented, finite, closed two manifold surface. The embedded graph divides the surface into arcwise connected areas known as faces. The edges and vertices, therefore, form the boundaries of the face and the domain of a face does not include its boundaries. The embedded graph may be disconnected and may be a pseudo graph. The graph is labeled that is, each entity in the graph has a unique identity. The geometric surface definition used to specify the geometry of a face shall be 2 manifold embeddable in the plane within the domain of the face. In other words, it shall be connected, oriented, finite, non self intersecting, and of surface genus 0. X 0D X 0D Faces do not intersect except along their boundaries. Each edge along the boundary of a face is shared by at most one other face in the assemblage. The assemblage of edges in the B rep do not intersect except at their boundaries i.e., vertices . The geometry curve definition used to specify the geometry of an edge shall be arcwise connected and shall not self intersect or overlap within the domain of the edge. The geometry of an edge shall be consistent with the geometry of the faces of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. X 0D X 0D The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. X 0D X 0D A B rep is represented by one or more closed shells which shall be disjoint. One shell, the outer, shall completely enclose all the other shells and no other shell may enclose a shell. The facility to define a B rep with one or more internal voids is provided by a subtype. The following version of the Euler formula shall be satisfied, X 0D X 0D math .. .. .. .. .. .. figures ifcmanifoldsolidbrep math1.gif X 0D where V, E, F, L X 7El X 7E and S are the numbers of unique vertices, edges, faces, loop uses and shells in the model and G s is the sum of the genus of the shells. X 0D X 0D X 0D X 0D NOTE Entity adapted from manifold solid brep defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC Release 1.0 X 0D X 0D X 0D X 0D Informal proposition X 0D X 0D 1. The dimensionality of a manifold solid brep shall be 3. X 0D 2. The extent of the manifold solid brep shall be finite and non zero. X 0D 3. All elements of the manifold solid brep shall have defined associated geometry. X 0D 4. The shell normals shall agree with the B rep normal and point away from the solid represented by the B rep. X 0D 5. Each face shall be referenced only once by the shells of the manifold solid brep. X 0D 6. The Euler equation shall be satisfied for the boundary representation, where the genus term shell term us the sum of the genus values for the shells of the brep.bSI Documentation"

#:IFC.xml:9238
msgid "IfcManifoldSolidBrep_Outer"
msgstr "Ytre"

msgid "IfcManifoldSolidBrep_Outer_DEFINITION"
msgstr "Ytre"

#:IFC.xml:9250
msgid "IfcPointListDim__PointList"
msgstr "IfcPointListDim PointList"

msgid "IfcPointListDim__PointList_DEFINITION"
msgstr "Denne funksjonen bestemmer dimensjonaliteten i en kartesisk punktliste."

#:IFC.xml:9258
msgid "IfcPolygonalBoundedHalfSpace"
msgstr "IfcPolygonalBoundedHalfSpace"

msgid "IfcPolygonalBoundedHalfSpace_DEFINITION"
msgstr "The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary. The base surface of the half space is positioned by its normal relative to the object coordinate system as defined at the supertype [[IfcHalfSpaceSolid]] , and its polygonal with or without arc segments boundary is defined in the XY plane of the position coordinate system established by the Position attribute, the subtraction body is extruded perpendicular to the XY plane of the position coordinate system, that is, into the direction of the positive Z axis defined by the Position attribute. X 0D X 0D The boundary is defined by a 2 dimensional polyline or 2 dimensional composite curve, consisting of straight segments and circular arc segments within the XY plane of the position coordinate system. The side of the surface which is in the half space is determined by the surface normal and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normal points away from. If the agreement flag is FALSE, then the subset is the one the normal points into. X 0D X 0D NOTE A polygonal bounded half space is not a subtype of [[IfcSolidModel]] , half space solids are only useful as operands in Boolean expressions. X 0D X 0D Figure 1 illustrates a polygonal bounded half space. X 0D X 0D X 0D X 0D X 0D X 0D X 0D Black coordinates indicate the object coordinate system usually provided by [[IfcLocalPlacement]] . X 0D Green coordinates indicate the position coordinate system the PolygonalBoundary is given within this X 0D coordinate system. It is provided by [[IfcPolygonalBoundedHalfSpace]].Position. This coordinate system is relative X 0D to the object coordinate system. The extrusion direction of the subtraction body is the positive Z axis. X 0D Red coordinates indicate the normal of the plane. It is provided by the BaseSurface X 0D [[IfcSurface]].Position . This normal is also relative to the object coordinate system. X 0D X 0D X 0D X 0D X 0D X 0D Figure 1 Polygonal half space geometry X 0D X 0D X 0D X 0D X 0D X 0D The polygonal bounded half space is used to limit the volume of the half space in Boolean difference expressions. Only the part that is defined by a theoretical intersection between the half space solid and an extruded area solid, defined by extruding the polygonal boundary, is used for Boolean expressions. X 0D X 0D The PolygonalBoundary defines the 2D polyline which bounds the effectiveness of the half space in Boolean expressions. The BaseSurface is defined by a plane, and the normal of the plane together with the AgreementFlag defines the side of the material of the half space. X 0D X 0D HISTORY New entity in IFC2x. X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. The [[IfcPolyline]] or the [[IfcCompositeCurve]] providing the PolygonalBoundary shall be closed. X 0D 2. If the PolygonalBoundary is given by an [[IfcCompositeCurve]] , it shall only have [[IfcCompositeCurveSegment]] s of type [[IfcPolyline]] , or [[IfcTrimmedCurve]] having a BasisCurve of type [[IfcLine]] , or [[IfcCircle]] X 0D 3. The BaseSurface defined at supertype [[IfcHalfSpaceSolid]] shall be of type [[IfcPlane]] X 0D 4. The normal of the plane, being the BaseSurface , shall not be perpendicular to the z axis of the position coordinate systembSI Documentation"

#:IFC.xml:9261
msgid "IfcPolygonalBoundedHalfSpace_Position"
msgstr "Posisjon"

msgid "IfcPolygonalBoundedHalfSpace_Position_DEFINITION"
msgstr "Posisjon"

#:IFC.xml:9273
msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary"
msgstr "PolygonalBoundary"

msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary_DEFINITION"
msgstr "PolygonalBoundary"

#:IFC.xml:9285
msgid "IfcPolygonalFaceSet"
msgstr "IfcPolygonalFaceSet"

msgid "IfcPolygonalFaceSet_DEFINITION"
msgstr "The [[IfcPolygonalFaceSet]] is a tessellated face set with all faces being bound by polygons. The planar faces are constructed by implicit polylines defined by three or more Cartesian points. Each planar face is defined by an instance of [[IfcIndexedPolygonalFace]] , or in case of faces with inner loops by [[IfcIndexedPolygonalFaceWithVoids]] . X 0D X 0D Depending on the value of the attribute Closed the instance of [[IfcPolygonalFaceSet]] represents X 0D X 0D if TRUE, a boundary represention or B rep X 0D if FALSE, a face based surface representation. X 0D X 0D X 0D X 0D The attribute Faces refers to a list of [[IfcIndexedPolygonalFace]] s having an one based CoordIndex that provides three or more indices. If the face has inner loops, the [[IfcIndexedPolygonalFaceWithVoids]] has a two dimensional, one based list, where the first dimension of the two dimensional list addresses the list of inner loops X 0D the second dimension of the two dimensional list provides three or more indices each being a vertex of the planar polygon representing the inner loop. X 0D X 0D Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. X 0D X 0D PnIndex .. .. .. .. .. .. figures ifcpolygonalfaceset 01.png Figure 1 Use of PnIndex X 0D X 0D NOTE If the [[IfcPolygonalFaceSet]] is closed, the face vertices of the [[IfcIndexedPolygonalFace]] s shall connect counterclock wise when seen from the outside of the closed shell to guarantee that the face normal points away from the material of the shell. Inner loops, provided by the [[IfcIndexedPolygonalFaceWithVoids]] , shall connect clock wise. X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D Figure 2 shows an IfcFacetedFaceSet represented by X 0D X 0D 1 [[IfcIndexedPolygonalFace]] 1, 2, 3, 4 X 0D 2 [[IfcIndexedPolygonalFace]] 6, 2, 3, 7 X 0D 3 [[IfcIndexedPolygonalFace]] 7, 3, 4, 8 X 0D 4 [[IfcIndexedPolygonalFace]] 8, 4, 1, 5 X 0D 5 [[IfcIndexedPolygonalFace]] 1, 4, 3, 2 X 0D 6 [[IfcIndexedPolygonalFace]] 6, 7, 8, 5 X 0D 7 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. X 0D X 0D X 0D X 0D X 0D Figure 2 Polygonal face set geometry X 0D X 0D X 0D X 0D X 0D NOTE The definition of IfcFacetedFaceSet is based on the indexedFaceSet defined in ISO IEC 19775 1 X 0D X 0D HISTORY New entity in IFC4 Addendum 2. X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular X 0D each face shall be unique X 0D each edge shall be used by exactly two outer or inner boundaries of faces X 0D the topological normal at each point on the boundary of the polygonal face set shall point away from the material of the solid.bSI Documentation"

#:IFC.xml:9213
msgid "IfcPolygonalFaceSet_Faces"
msgstr "Flater"

msgid "IfcPolygonalFaceSet_Faces_DEFINITION"
msgstr "Flater"

#:IFC.xml:9286
msgid "IfcPolygonalFaceSet_Closed"
msgstr "Lukket"

msgid "IfcPolygonalFaceSet_Closed_DEFINITION"
msgstr "Det kan angis om [[IfcPolygonalFaceSet]] er et lukket skall eller ikke. Hvis det ikke er mulig å gi noen slik informasjon."

#:IFC.xml:9291
msgid "IfcPolygonalFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcPolygonalFaceSet_PnIndex_DEFINITION"
msgstr "Listen over heltall som definerer stedene i [[IfcCartesianPointList3D]] for å få punktkoordinatene til indeksene på de indekserte polygonale flatene. Dersom PnIndex ikke er oppgitt vil indeksene i det indekserte mangekantet flateflater direkte inn i [[IfcCartesianPointList3D]] ."

#:IFC.xml:9298
msgid "IfcRectangularPyramid"
msgstr "IfcRectangularPyramid"

msgid "IfcRectangularPyramid_DEFINITION"
msgstr "The [[IfcRectangularPyramid]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a rectangular base and a point called apex as the top. The tapers from the base to the top. The axis from the center of the base to the apex is perpendicular to the base. The inherited Position attribute defines the IfcAxisPlacement3D and provides the location and orientation of the pyramid X 0D X 0D SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. X 0D SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cone. X 0D SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis of the inherited placement coordinate system provides the center axis of the [[IfcRightCircularCone]] , and the apex is at the Height value applied to the positive direction of the z axis. The BottomRadius defines the circular base at the xy plane of the placement coordinate system. X 0D X 0D As shown in Figure 1, the pyramid is positioned within its own placement coordinate system. The origin is the center of the bottom rectangle, that lies in the XY plane. The apex lies on the positive z axis at 0, 0, Height . X 0D X 0D pyramid .. .. .. .. .. .. figures ifcrectangularpyramid layout1.png Figure 1 Rectangular pyramid geometry X 0D X 0D HISTORY New entity in IFC2x3 X 0D X 0D .use head X 0D Texture use definition X 0D X 0D On each triangular side face, textures are aligned facing upright. Textures are stretched or repeated to the extent of the base of each face according to RepeatS. Textures are stretched or repeated towards the top point according to Repeat T, where the top point has coordinates of 0.5,1.0 if RepeatT is False. X 0D X 0D On the bottom face, textures are aligned facing front to back. X 0D X 0D Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. X 0D X 0D X 0D X 0D .gridtable X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D Side X 0D Normal X 0D Origin X X 0D Origin Y X 0D Origin Z X 0D S Axis X 0D T Axis X 0D X 0D X 0D Left X 0D X X 0D 0 X 0D YLength X 0D 0 X 0D Y X 0D towards top point X 0D X 0D X 0D Right X 0D X X 0D Xlength X 0D 0 X 0D 0 X 0D Y X 0D towards top point X 0D X 0D X 0D Front X 0D Y X 0D 0 X 0D 0 X 0D 0 X 0D X X 0D towards top point X 0D X 0D X 0D Back X 0D Y X 0D XLength X 0D YLength X 0D 0 X 0D X X 0D towards top point X 0D X 0D X 0D Bottom X 0D Z X 0D XLength X 0D 0 X 0D 0 X 0D X X 0D Y X 0D X 0D X 0D X 0D X 0D X 0D X 0D Figure 2 Rectangular pyramid textures X 0D X 0D X 0D bSI Documentation"

#:IFC.xml:9299
msgid "IfcRectangularPyramid_XLength"
msgstr "XLengde"

msgid "IfcRectangularPyramid_XLength_DEFINITION"
msgstr "Lengden på fundamentet målt langs X-aksen. Den leveres av den arvede akseplasseringen gjennom SELF [[IfcCsgPrimitive3D]].Position.P 1 ."

#:IFC.xml:9304
msgid "IfcRectangularPyramid_YLength"
msgstr "Lengde"

msgid "IfcRectangularPyramid_YLength_DEFINITION"
msgstr "Lengden av fundamentet målt langs plasseringen Y aksen. Den leveres av den arvede akseplasseringen gjennom SELF [[IfcCsgPrimitive3D]].Position.P 2 ."

#:IFC.xml:9309
msgid "IfcRectangularPyramid_Height"
msgstr "Høyde"

msgid "IfcRectangularPyramid_Height_DEFINITION"
msgstr "Apehøyden over basens plan, målt i retning av plasseringen Z aksen, SELF [[IfcCsgPrimitive3D]]. osition.P 2 ."

#:IFC.xml:9316
msgid "IfcRevolvedAreaSolid"
msgstr "IfcRevolvedAreaSolid"

msgid "IfcRevolvedAreaSolid_DEFINITION"
msgstr "An [[IfcRevolvedAreaSolid]] is a solid created by revolving a cross section provided by a profile definition about an axis. X 0D X 0D The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the revolved solid. If not provided, it defaults to the current object coordinate system. The axis and the cross section shall be in the same plane, prior to any repositioning. X 0D X 0D NOTE Both the axis and the cross section are required to lie in the xy plane of the object position coordinate system. X 0D X 0D X 0D X 0D X 0D EXAMPLE Figure 1 illustrates geometric parameters of the revolved solid. The revolved area solid defines the revolution of a 2D area given by a profile definition by an axis and angle. The result is a solid. The swept area is given by a X 0D profile definition. X 0D X 0D X 0D The profile is defined X 0D as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system X 0D since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation X 0D X 0D The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. X 0D X 0D X 0D The AxisLine can have any orientation within the XY plane, it does not have to be parallel to the y axis as X 0D shown in the illustration. X 0D X 0D X 0D X 0D X 0D Figure 1 Revolved area solid geometry X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D EXAMPLE Figure 1 illustrates geometric parameters and additional positioning parameters of the revolved area solid. The revolved area solid defines the rotation of a 2D area by an axis and angle. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. X 0D X 0D The profile to be swept is defined X 0D X 0D as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system X 0D a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle X 0D X 0D The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the x axis. X 0D X 0D X 0D X 0D X 0D X 0D Figure 2 Repositioned revolved area solid geometry X 0D X 0D X 0D X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D A revolved area solid is a solid formed by revolving a planar bounded surface about an axis. The axis shall be in the plane of the surface and the axis shall not intersect the interior of the bounded surface. The bounded surface may have holes which will sweep into holes in the solid. The direction of revolution is clockwise when viewed along the axis in the positive direction. More precisely if A is the axis location and d is the axis direction and C is an arc on the surface of revolution generated by an arbitrary point p on the boundary of the swept area, then C leaves p in direction d x p A as the area is revolved. X 0D X 0D NOTE Entity adapted from revolved area solid defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC1.5 X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. The AxisLine shall lie in the plane of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . X 0D 2. The AxisLine shall not intersect the interior of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . X 0D 3. The Angle shall be between 0 and 360 , or 0 and 2π depending on the unit type for [[IfcPlaneAngleMeasure]] . X 0D X 0D .use head X 0D Texture Use Definition X 0D X 0D For side faces, textures are aligned facing upright along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the outermost longest revolution path according to RepeatT , where coordinates are compressed towards the axis of revolution. X 0D X 0D For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . X 0D X 0D For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. X 0D X 0D X 0D X 0D X 0D X 0D Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on X 0D the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows X 0D the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and X 0D the Z axis points up. For an [[IfcRevolvedAreaSolid]] having a profile of [[IfcTShapeProfileDef]] and X 0D revolved at 22.5 degrees, the side texture coordinate origin is the first corner counter clockwise from the Y axis, X 0D which equals 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth , while the top end cap X 0D texture coordinates start at 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth . X 0D X 0D X 0D X 0D X 0D Figure 3 Revolved area solid textures X 0D X 0D X 0D bSI Documentation"

#:IFC.xml:9328
msgid "IfcRevolvedAreaSolid_Axis"
msgstr "Akse"

msgid "IfcRevolvedAreaSolid_Axis_DEFINITION"
msgstr "Akse"

#:IFC.xml:9317
msgid "IfcRevolvedAreaSolid_Angle"
msgstr "Vinkel"

msgid "IfcRevolvedAreaSolid_Angle_DEFINITION"
msgstr "Den vinkelen som den fang skal lages gjennom. Denne vinkelen måles fra svingningsarealet gitt av XY-planet til posisjonskoordinatsystemet."

#:IFC.xml:9322
msgid "IfcRevolvedAreaSolid_AxisLine"
msgstr "AxisLine"

msgid "IfcRevolvedAreaSolid_AxisLine_DEFINITION"
msgstr "AxisLine"

#:IFC.xml:9340
msgid "IfcRevolvedAreaSolidTapered"
msgstr "IfcRevolvedAreaSolidTapered"

msgid "IfcRevolvedAreaSolidTapered_DEFINITION"
msgstr "[[IfcRevolvedAreaSolidTapered]] is defined by revolving a cross section along a circular arc. The cross section may change along the revolving sweep from the shape of the start cross section into the shape of the end cross section. Corresponding vertices of the start and end cross sections are then connected. The bounded surface may have holes which will sweep into holes in the solid. X 0D X 0D The rotation axis is defined by X 0D X 0D Start point SELF [[IfcSweptAreaSolid]].Position.Location X 0D Direction SELF [[IfcRevolvedAreaSolid]].Axis X 0D Rotation axis SELF [[IfcRevolvedAreaSolid]].AxisLine , created from start point and direction by appying a 1 unit magnitude. X 0D Orientation Positive angles are applied clockwise when looking into the positive direction of the rotation axis. X 0D X 0D The start cross section is defined by SELF [[IfcSweptAreaSolid]].SweptArea X 0D X 0D A bounded planar surface lying in the XY plane of the position coordinate system defined by SELF [[IfcSweptAreaSolid]].Position.P 1 and SELF [[IfcSweptAreaSolid]].Position.P 2 X 0D The rotation axis lies in the plane of the start cross section but shall not intersect the interior of the start cross section. X 0D X 0D The end cross section is defined by EndSweptArea X 0D X 0D A bounded planar surface lying in the XY plane of the position coordinate system defined by rotating the start position coordinates provided by SELF [[IfcSweptAreaSolid]].Position around the rotation axis by the angle given by SELF [[IfcRevolvedAreaSolid]].Angle . X 0D X 0D The end cross section is topologically similar to the start cross section having the same number of vertices and edges . X 0D The end cross section can either be defined by the same paramteric profile using different parameter values, or by a 2D Cartesian transformation of the start profile within the end cross section plane. X 0D X 0D The solid is generated by transforming the start cross section into to end cross section. A start face, an end face each defined by start and end cross sections , and one or more lateral faces. Each lateral face is a ruled surface defined by a pair of corresponding edges of the start and end section. The ruled surfaces are constructed in the cylindrical coordinate space defined by the supertype [[IfcRevolvedAreaSolid]] . X 0D X 0D HISTORY New entity in IFC4. X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. Mirroring within [[IfcDerivedProfileDef]].Operator shall not be usedbSI Documentation"

#:IFC.xml:9343
msgid "IfcRevolvedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcRevolvedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "EndSweptArea"

#:IFC.xml:9355
msgid "IfcRightCircularCone"
msgstr "IfcRightCircularCone"

msgid "IfcRightCircularCone_DEFINITION"
msgstr "The [[IfcRightCircularCone]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a circular base and a point called apex as the top. The tapers from the base to the top. The axis from the center of the circular base to the apex is perpendicular to the base. The inherited Position attribute defines the IfcAxisPlacement3D and provides the location and orientation of the cone X 0D X 0D SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. X 0D SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cone. X 0D SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis of the inherited placement coordinate system provides the center axis of the [[IfcRightCircularCone]] , and the apex is at the Height value applied to the positive direction of the z axis. The BottomRadius defines the circular base at the xy plane of the placement coordinate system. X 0D X 0D Figure 1 illustrates geometric parameters of the cone. The cone is positioned within its own placement coordinate system. The origin is the center of the bottom circular disk, that lies in the XY plane. The apex lies on the positive z axis at 0, 0, Height . X 0D X 0D cone1 .. .. .. .. .. .. figures ifcrightcircularcone layout1.png Figure 1 Right circular cone geometry X 0D X 0D NOTE Entity adapted from right circular cone defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC2x3 X 0D X 0D .use head X 0D Texture use definition X 0D X 0D On the circular side, textures are aligned facing upright with origin at the back Y direction revolving counter clockwise. Textures are stretched or repeated to the extent of the base circumference according to RepeatS. Textures are compressed linearly going upwards towards the top point according to RepeatT. X 0D X 0D On the bottom face, textures are aligned facing front to back, with the center of the circle aligned to the center of the texture. X 0D X 0D Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. X 0D X 0D .gridtable X 0D X 0D X 0D X 0D X 0D X 0D Side X 0D Normal X 0D Origin X X 0D Origin Y X 0D Origin Z X 0D S Axis X 0D T Axis X 0D X 0D X 0D Side X 0D Y X 0D 0 X 0D Radius X 0D 0 X 0D X X 0D towards top point X 0D X 0D X 0D Bottom X 0D Z X 0D Radius X 0D Radius X 0D 0 X 0D X X 0D Y X 0D X 0D X 0D X 0D Figure 2 Right circular cone textures X 0D bSI Documentation"

#:IFC.xml:9356
msgid "IfcRightCircularCone_Height"
msgstr "Høyde"

msgid "IfcRightCircularCone_Height_DEFINITION"
msgstr "Avstanden mellom bunnen av kontapet og eplet."

#:IFC.xml:9361
msgid "IfcRightCircularCone_BottomRadius"
msgstr "BunnRadius"

msgid "IfcRightCircularCone_BottomRadius_DEFINITION"
msgstr "Radiusen til konusen i underlaget."

#:IFC.xml:9368
msgid "IfcRightCircularCylinder"
msgstr "IfcRightCircularCylinder"

msgid "IfcRightCircularCylinder_DEFINITION"
msgstr "The [[IfcRightCircularCylinder]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a circular base and top. The cylindrical surface between if formed by points at a fixed distance from the axis of the cylinder. The inherited Position attribute defines the IfcAxisPlacement3D and provides X 0D X 0D SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. X 0D SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cylinder. X 0D SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis provides the center axis and the height is measured from the origin along the positive direction of the z axis. X 0D X 0D Figure 1 illustrates geometric parameters of the cylinder. The cylinder is positioned within its own placement coordiante system. The origin is the center of the bottom circular disk, that lies in the XY plane. The center of the top circular disk is on the positive z axis at 0, 0, Height . X 0D X 0D cylinder .. .. .. .. .. .. figures ifcrightcircularcylinder layout1.png Figure 1 Right circular cylinder geometry X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D A right circular cylinder is a CSG primitive in the form of a solid cylinder of finite height. It is defined by an axis point at the centre of one planar circular face, an axis, a height, and a radius. The faces are perpendicular to the axis and are circular discs with the specified radius. The height is the distance from the first circular face centre in the positive direction of the axis to the second circular face centre. X 0D X 0D NOTE Entity adapted from right circular cylinder defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC2x3. X 0D X 0D .use head X 0D Texture use definition X 0D X 0D On the circular side, textures are aligned facing upright with origin at the back Y direction revolving counter clockwise. Textures are stretched or repeated to the extent of the circumference according to RepeatS. Textures are stretched or repeated to the extent of the Height according to RepeatT. X 0D X 0D On the top and bottom faces, textures are aligned facing front to back, with the center of the circle aligned to the center of the texture. X 0D X 0D Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. X 0D X 0D .gridtable X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D Side X 0D Normal X 0D Origin X X 0D Origin Y X 0D Origin Z X 0D S Axis X 0D T Axis X 0D X 0D X 0D Side X 0D Y X 0D 0 X 0D Radius X 0D 0 X 0D X X 0D Z X 0D X 0D X 0D Bottom X 0D Z X 0D Radius X 0D Radius X 0D 0 X 0D X X 0D Y X 0D X 0D X 0D Top X 0D Z X 0D Radius X 0D Radius X 0D Height X 0D X X 0D Y X 0D X 0D X 0D X 0D X 0D X 0D X 0D Figure 2 Right circular cylinder textures X 0D X 0D X 0D bSI Documentation"

#:IFC.xml:9369
msgid "IfcRightCircularCylinder_Height"
msgstr "Høyde"

msgid "IfcRightCircularCylinder_Height_DEFINITION"
msgstr "Avstanden mellom de plane sirkulære flatene på sylinderen."

#:IFC.xml:9374
msgid "IfcRightCircularCylinder_Radius"
msgstr "Radius"

msgid "IfcRightCircularCylinder_Radius_DEFINITION"
msgstr "Radiusen til sylinderen."

#:IFC.xml:9381
msgid "IfcSectionedSolid"
msgstr "IfcSectionedSolid"

msgid "IfcSectionedSolid_DEFINITION"
msgstr "An [[IfcSectionedSolid]] is an abstract base type for solids constructed by sweeping potentially variable cross sections along a directrix.bSI Documentation"

#:IFC.xml:9384
msgid "IfcSectionedSolid_Directrix"
msgstr "Direktør"

msgid "IfcSectionedSolid_Directrix_DEFINITION"
msgstr "Direktør"

#:IFC.xml:9396
msgid "IfcSectionedSolid_CrossSections"
msgstr "Kryssseksjoner"

msgid "IfcSectionedSolid_CrossSections_DEFINITION"
msgstr "Kryssseksjoner"

#:IFC.xml:9408
msgid "IfcSectionedSolidHorizontal"
msgstr "IfcSectionedSolidHorisontal"

msgid "IfcSectionedSolidHorizontal_DEFINITION"
msgstr "An [[IfcSectionedSolidHorizontal]] is a solid model constructed by sweeping potentially varying cross sections along a curve horizontally. X 0D X 0D The solid is generated by sweeping the CrossSections between CrossSectionPositions with linear interpolation of profile points, where the profile normal agrees with the tangent of the Directrix , the profile X axis is oriented perpendicularly to the left of the Directrix same direction as LateralOffset at [[IfcPointByDistanceExpression]] as facing forward along the directrix, and the profile Y axis is oriented upwards according to FixedAxisVertical . X 0D X 0D For sections having cross section rotated according to a single super elevation, [[IfcDerivedProfileDef]] may be used to indicate such rotation with each ParentProfile referring to the same underlying profile. For sections having cross section transformed according to multiple super elevations with points varying independently, each profile may be of a different instance but of same type e.g. [[IfcArbitraryClosedProfileDef]] , and may optionally have cross section points associated to string lines X2 201C X0 guide curves X2 201D X0 using [[IfcIndexedPolyCurve]] with IfcCartesianPointList2DLabelled . X 0D X 0D Figure 1 illustrates four girders of a bridge having a constant parameterized profile, two guardrails having a constant arbitrary profile one of them mirrored , and a bridge deck having a variable arbitrary profile. X 0D X 0D spatial structure .. .. .. .. .. .. figures ifcsectionedsolidhorizontal.png Figure 1 Sectioned solid horizontal X 0D X 0D Informal Propositions X 0D X 0D 1. No two consecutive sections shall intersect. X 0D 2. If the type of sections is not [[IfcParameterizedProfileDef]] i.e. an arbitrary profile , then the number of points and edges should be the same for two consecutive profiles X 0D 3. If the directrix is not tangent continuous, the resulting solid is created by a miter at half angle between the two segments. X 0D 4. Very sharp edges may result in nearly impossible miter implementer agreements may define acceptable limits for tangent discontinuity or require the directrix to be tangent continuous. X 0D 5. The directrix shall not intersectbSI Documentation"

#:IFC.xml:9416
msgid "IfcSectionedSolidHorizontal_CrossSectionPositions"
msgstr "Kryssseksjoner"

msgid "IfcSectionedSolidHorizontal_CrossSectionPositions_DEFINITION"
msgstr "Kryssseksjoner"

#:IFC.xml:9409
msgid "IfcSectionedSolidHorizontal_FixedAxisVertical"
msgstr "Fiks loddrett"

msgid "IfcSectionedSolidHorizontal_FixedAxisVertical_DEFINITION"
msgstr "Angir om avsnitt er orientert med Y-aksen til hver profil som vender oppover i Z retning True , eller vertikalt vinkelrett på Directrix som varierer etter skråning False ."

#:IFC.xml:9428
msgid "IfcSectionedSpine"
msgstr "IfcSectionedSpine"

msgid "IfcSectionedSpine_DEFINITION"
msgstr "An [[IfcSectionedSpine]] is a representation of the shape of a three dimensional object composed by a number of planar cross sections, and a spine curve. The shape is defined between the first element of cross sections and the last element of the cross sections. A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. X 0D X 0D All cross sections have to define areas by a closed profile to allow for the representation of a solid. All cross sections have to define curves by an open or closed profile to allow for the representation of a surface. The cross sections are defined by subtypes of [[IfcProfileDef]] , where the consecutive profiles may be derived by a transformation of the start profile or the previous consecutive profile. X 0D X 0D The spine curve shall be of type [[IfcCompositeCurve]] , each of its segments represented by [[IfcCompositeCurveSegment]] shall correspond to the part between exactly two consecutive cross sections. X 0D X 0D Figure 1 illustrates an example of an [[IfcSectionedSpine]] . X 0D X 0D The SpineCurve is given by an [[IfcCompositeCurve]] with two Segments . The Segments 1 has a ParentCurve of type [[IfcPolyline]] and a Transition CONTSAMEGRADIENT. The Segments 2 has a ParentCurve of type [[IfcTrimmedCurve]] and a Transition DISCONTINUOUS. X 0D Each CrossSectionPosition lies at a start or end point of the Segments . X 0D Each CrossSections are inserted by the CrossSectionPositions . The first two cross sections are of type [[IfcRectangleProfileDef]] , the third is of type [[IfcDerivedProfileDef]] . X 0D X 0D spine 1 .. .. .. .. .. .. figures ifcsectionedspine layout1.gif Figure 1 Sectioned spine geometry X 0D X 0D Figure 2 illustrates the final result of the [[IfcSectionedSpine]] . The body shown transparently is not fully defined by the exchange definition. X 0D X 0D render .. .. .. .. .. .. figures ifcsectionedspine.jpg Figure 2 Sectioned spine result X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D A sectioned spine is a representation of the shape of a three dimensional object composed of a spine curve and a number of planar cross sections. The shape is defined between the first element of cross sections and the last element of this set. X 0D X 0D NOTE A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. For the representation of a solid all cross sections are closed curves. X 0D X 0D NOTE Entity adapted from sectioned spine defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC2x. X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. none of the cross sections, after being placed by the cross section positions, shall intersect X 0D 2. none of the cross sections, after being placed by the cross section positions, shall lie in the same plane X 0D 3. the local origin of each cross section position shall lie at the beginning or end of a composite curve segment.bSI Documentation"

#:IFC.xml:9436
msgid "IfcSectionedSpine_SpineCurve"
msgstr "Angripende"

msgid "IfcSectionedSpine_SpineCurve_DEFINITION"
msgstr "Angripende"

#:IFC.xml:9448
msgid "IfcSectionedSpine_CrossSections"
msgstr "Kryssseksjoner"

msgid "IfcSectionedSpine_CrossSections_DEFINITION"
msgstr "Kryssseksjoner"

#:IFC.xml:9460
msgid "IfcSectionedSpine_CrossSectionPositions"
msgstr "Kryssseksjoner"

msgid "IfcSectionedSpine_CrossSectionPositions_DEFINITION"
msgstr "Kryssseksjoner"

#:IFC.xml:9429
msgid "IfcSectionedSpine_Dim"
msgstr "Dim"

msgid "IfcSectionedSpine_Dim_DEFINITION"
msgstr "Dim"

#:IFC.xml:9472
msgid "IfcSectionedSurface"
msgstr "IfcSectionedSurface"

msgid "IfcSectionedSurface_DEFINITION"
msgstr "A kind of surface constructed by sweeping potentially varying open cross sections along a curve horizontally or near horizontally . The surface is generated by sweeping the CrossSections between CrossSectionPositions linear interpolation is assumed, unless transitions curves between cross section points are indicated by OpenCrossProfileDef.Tags. X 0D The CrossSections are oriented with the Y axis of each profile facing upwards in Z direction or vertically perpendicular to the Directrix, depending on the Attribute FixedAxisVertical value. X 0D sectioned surfacequot .. .. .. .. .. .. figures [[IfcSectionedSurface]] 1.png Figure 1 Sectioned surface using [[IfcOpenCrossProfileDef]] X 0D X 0D In case of branching longitudinal breaklines, the SectionedSurface may use OpenCrossProfileDef instances with varying number of cross section points. In that case, the point in two consecutive cross sections that are connected are identified by the same tag value. X 0D sectioned surfacequot .. .. .. .. .. .. figures [[IfcSectionedSurface]] 2.png Figure 1 Sectioned surface with branching longitudinal breaklines X 0D X 0D Formal propositions X 0D The curve entity which is the underlying directrix shall have the dimensionality of 3. X 0D The profile type shall be CURVE within the list of the profiles defining the cross sections. X 0D The entity type for each section must be the same. X 0D The list of cross sections and the list of cross section positions shall be of the same size. X 0D X 0D Informal Propositions No two consecutive sections shall intersect. X 0D If the directrix is not tangent continuous, the resulting surface is created by a miter at half angle between the two segments. X 0D Very sharp edges may result in nearly impossible miter implementer agreements may define acceptable limits for tangent discontinuity or require the directrix to be tangent continuous. X 0D The directrix shall not intersectbSI Documentation"

#:IFC.xml:9480
msgid "IfcSectionedSurface_Directrix"
msgstr "Direktør"

msgid "IfcSectionedSurface_Directrix_DEFINITION"
msgstr "Direktør"

#:IFC.xml:9492
msgid "IfcSectionedSurface_CrossSectionPositions"
msgstr "Kryssseksjoner"

msgid "IfcSectionedSurface_CrossSectionPositions_DEFINITION"
msgstr "Kryssseksjoner"

#:IFC.xml:9504
msgid "IfcSectionedSurface_CrossSections"
msgstr "Kryssseksjoner"

msgid "IfcSectionedSurface_CrossSections_DEFINITION"
msgstr "Kryssseksjoner"

#:IFC.xml:9473
msgid "IfcSectionedSurface_FixedAxisVertical"
msgstr "Fiks loddrett"

msgid "IfcSectionedSurface_FixedAxisVertical_DEFINITION"
msgstr "Angir om avsnitt er orientert med Y-aksen til hver profil som vender oppover i Z retning True , eller vertikalt vinkelrett på Directrix som varierer i forhold til skråning False"

#:IFC.xml:9516
msgid "IfcShellBasedSurfaceModel"
msgstr "IfcShellBasedSurfaceModel"

msgid "IfcShellBasedSurfaceModel_DEFINITION"
msgstr "An [[IfcShellBasedSurfaceModel]] represents the shape by a set of open or closed shells. The connected faces within the shell have a dimensionality 2 and are placed in a coordinate space of dimensionality 3. X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D A shell based surface model is described by a set of open or closed shells of dimensionality 2. The shells shall not intersect except at edges and vertices. In particular, distinct faces may not intersect. A complete face of one shell may be shared with another shell. Coincident portions of shells shall both reference the same faces, edges and vertices defining the coincident region. There shall be at least one shell. A shell may exist independently of a surface model. X 0D X 0D NOTE Entity adapted from shell based surface model defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC2x. X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. The dimensionality of the shell based surface model is 2. X 0D 2. The shells shall not overlap or intersect except at common faces, edges or vertices.bSI Documentation"

#:IFC.xml:9517
msgid "IfcShellBasedSurfaceModel_SbsmBoundary"
msgstr "SbsmBoundary"

#:IFC.xml:9522
msgid "IfcShellBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcShellBasedSurfaceModel_Dim_DEFINITION"
msgstr "Dim"

#:IFC.xml:9529
msgid "IfcSolidModel"
msgstr "IfcSolidModel"

msgid "IfcSolidModel_DEFINITION"
msgstr "An [[IfcSolidModel]] represents the 3D shape by different types of solid model representations. It is the common abstract supertype of Boundary representation, CSG representation, Sweeping representation and other suitable solid representation schemes. X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D A solid model is a complete representation of the nominal shape of a product such that all points in the interior are connected. Any point can be classified as being inside, outside, or on the boundary of a solid. There are several different types of solid model representations. X 0D X 0D NOTE Entity adapted from solid model defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC1.5bSI Documentation"

#:IFC.xml:9530
msgid "IfcSolidModel_Dim"
msgstr "Dim"

msgid "IfcSolidModel_Dim_DEFINITION"
msgstr "Dim"

#:IFC.xml:9539
msgid "IfcSphere"
msgstr "IfcSphere"

msgid "IfcSphere_DEFINITION"
msgstr "The [[IfcSphere]] is a Construction Solid Geometry CSG 3D primitive. It is a solid where all points at the surface have the same distance from the center point. The inherited Position attribute defines the IfcAxisPlacement3D and provides X 0D X 0D SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. X 0D SELF [[IfcCsgPrimitive3D]].Position.Location The center of the sphere. X 0D SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis points at its positve direction towards the north pole, and by its negative directions towards the south pole. X 0D X 0D X 0D X 0D X 0D X 0D X 0D EXAMPLE Figure 1 illustrates geometric parameters of the sphere. The sphere is positioned within its own placement X 0D coordiante system relative to the object coordinate system. The origin is the center of the sphere. X 0D X 0D X 0D X 0D Figure 1 Sphere geometry X 0D X 0D X 0D X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D A sphere is a CSG primitive with a spherical shape defined by a centre and a radius. X 0D X 0D NOTE Entity adapted from sphere defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC2x3. X 0D X 0D .use head X 0D Texture Use Definition X 0D X 0D Textures are aligned facing upright with origin at the back Y direction revolving counter clockwise. Textures are stretched or repeated to the extent of the circumference at the equator according to RepeatS and RepeatT. X 0D X 0D Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. X 0D X 0D .gridtable X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D Side X 0D Normal X 0D Origin X X 0D Origin Y X 0D Origin Z X 0D S Axis X 0D T Axis X 0D X 0D X 0D Side X 0D Y X 0D 0 X 0D Radius X 0D 0 X 0D X, then curving counter clockwise X 0D Z, then curving towards top X 0D X 0D X 0D X 0D X 0D X 0D X 0D Figure 2 Sphere textures X 0D X 0D X 0D bSI Documentation"

#:IFC.xml:9540
msgid "IfcSphere_Radius"
msgstr "Radius"

msgid "IfcSphere_Radius_DEFINITION"
msgstr "Radiusen av sfæren."

#:IFC.xml:9547
msgid "IfcSurfaceCurveSweptAreaSolid"
msgstr "IfcSurfaceCurveSweptAreaSolid"

msgid "IfcSurfaceCurveSweptAreaSolid_DEFINITION"
msgstr "The [[IfcSurfaceCurveSweptAreaSolid]] is the result of sweeping an area along a directrix that lies on a reference surface. The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the tangent of the directrix at this point, and the profile s x axis agrees to the surface normal. At any point along the directrix, the swept profile origin lies on the directrix, the profile s normal points towards the tangent of the directrix, and the profile s x axis is identical to the surface normal at this point. X 0D X 0D NOTE The profile area s normal has to be identical to the tangent of the directrix at any given point. In case of a directrix having a linear segment at the start point, the segment has to be perpendicular to the profile at start. X 0D X 0D The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , the parameter value is provided based on the curve parameterization. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , the parameter value is provided based on the curve parameterization. If no EndParam is provided the end defaults to the end of the directrix. The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . X 0D X 0D NOTE The StartParam and the EndParam are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. In case of a closed curve, such as [[IfcCircle]] or [[IfcEllipse]] , as the directrix, StartParam and the EndParam shall not exceed the parametic range, they shall not be 360 . X 0D X 0D EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In most cases, it is a plane or a surface of extrusion. The directrix lies on the surface, in case of a plane it might be defined as a polyline or composite curve, in case of a cylindrical or other non planer reference surface it might often be defined as a p curve on this reference surface. X 0D X 0D At any point of the directrix, a plane can be constructed. The origin of the position coordinate system of the implicit plane lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the normal of the reference surface at this point. The Axis2 the y axis, or v is constructed. X 0D X 0D The resulting body of the swept solid is not repositioned if the inherited Position attribute is omitted. Otherwise the coordinate system established by the Position attribute is used to reposition the body relative to the object coordinate system. X 0D X 0D X 0D X 0D EXAMPLE Figure 1 illustrates an example using a cylindrical reference surface and a p curve for sweeping a rectangle. The Postion is not provided and therefore it does not reposition the resulting swept solid. Figure 2 shows the expected result.NOTE The start of the directrix lies at the origin of the object coordinate system, as shown in the illustration,only by coincidence. The start of the directrix and thereby the start of the sweeping operation might be at any point within the object coordinate system and only depends on the position of the directrix.Figure 1 Surface curve wept area solid parameter Figure 2 Surface curve wept area solid results X 0D X 0D X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D A surface curve swept area solid is a type of swept area solid which is the result of sweeping a face along a Directrix lying on a ReferenceSurface . The orientation of the SweptArea is related to the direction of the surface normal. X 0D X 0D The SweptArea is required to be a curve bounded surface lying in the plane z 0 and this is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the normal to the ReferenceSurface at the current point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . X 0D X 0D The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a Cartesian Transformation Operator 3D with attributes Local origin as point 0., 0., 0 , X 0D Axis 1 as the normal N to the reference surface at the point of the directrix with parameter u. X 0D Axis 3 as the direction of the tangent vector t at the point of the directrix with parameter u. The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the directrix parameter u. X 0D X 0D NOTE Entity adapted from surface curve swept area solid defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC2x2. X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. The SweptArea shall lie in the implicit plane z 0. X 0D 2. The Directrix shall lie on the ReferenceSurface .bSI Documentation"

#:IFC.xml:9550
msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface"
msgstr "Referanseflate"

msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface_DEFINITION"
msgstr "Referanseflate"

#:IFC.xml:9562
msgid "IfcSweptAreaSolid"
msgstr "IfcSweptAreaSolid"

msgid "IfcSweptAreaSolid_DEFINITION"
msgstr "An [[IfcSweptAreaSolid]] represents the 3D shape by a sweeping representation scheme allowing a two dimensional planar cross section to sweep through space. X 0D X 0D The swept area is defined by a cross section, represented by a subtype if [[IfcProfileDef]] , that is provided as a closed two dimensional boundary on an implicit plane. The swept area is defined in the xy plane of the object coordinate system. The sweeping operation is applied to the swept area as defined within the subtypes of [[IfcSweptAreaSolid]] , some subtypes require an implicit transformation of the swept area to the start position of the sweep. X 0D X 0D The optional Positio n coordinate system allows for re positioning the resulting swept solid relative to the object coordinate system. X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D The swept area solid entity collects the entities which are defined procedurally by sweeping action on planar bounded surfaces. The position is space of the swept solid will be dependent upon the position of the swept area. The swept area will be a face of the resulting swept area solid, except for the case of a revolved area solid with angle equal to 2π or 360 degrees . X 0D X 0D NOTE Entity adapted from swept area solid defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC1.5 X 0D X 0D .change ifc2x4 X 0D IFC4 CHANGE The attribute Position has been changed to OPTIONAL with upward compatibility for file based exchange.bSI Documentation"

#:IFC.xml:9565
msgid "IfcSweptAreaSolid_SweptArea"
msgstr "SweptArea"

msgid "IfcSweptAreaSolid_SweptArea_DEFINITION"
msgstr "SweptArea"

#:IFC.xml:9577
msgid "IfcSweptAreaSolid_Position"
msgstr "Posisjon"

msgid "IfcSweptAreaSolid_Position_DEFINITION"
msgstr "Posisjon"

#:IFC.xml:9589
msgid "IfcSweptDiskSolid"
msgstr "IfcSweptDiskSolid"

msgid "IfcSweptDiskSolid_DEFINITION"
msgstr "An [[IfcSweptDiskSolid]] represents the 3D shape by a sweeping representation scheme allowing a two dimensional circularly bounded plane to sweep along a three dimensional Directrix through space. X 0D X 0D The StartParam and EndParam parameter are optional, if not provided they default to the start and end of the Directrix . Only if the Directrix is given by a bounded or by a closed curve, it is permissible to omit the values of StartParam and EndParam . X 0D X 0D If the transitions between consecutive segments of the Directrix are not tangent continuous, the resulting solid is created by a miter at half angle between the two segments. Informal proposition restricts the permissible angle between two non tangent continuous segments. X 0D X 0D Figure 1 illustrates an example. X 0D X 0D Directrix given as [[IfcIndexedPolyCurve]] , having linear and circular arc segments, that are tangent continuous between each segments X 0D Directrix being a bounded and open curve X 0D No StartParam and EndParam are provided, start and end default to start and end of the bounded curve of the Directrix X 0D X 0D NOTE Although the example shows a Directrix as a poly curve on a planar reference surface, the definition of [[IfcSweptDiskSolid]] is not restricted to be based on planer curves. However view definitions or implementer agreements may provide restrictions. X 0D X 0D NOTE The geometric item [[IfcIndexedPolyCurve]] provides a more compact representation compared with [[IfcCompositeCurve]] as is therefore the prefered curve representation for the Directrix . X 0D X 0D disk solid .. .. .. .. .. .. figures ifcsweptdisksolid layout1.png Figure 1 Swept disk solid geometry X 0D X 0D .extDef X 0D NOTE Definition according to ISO CD 10303 42 1992 X 0D A swept disk solid is the solid produced by sweeping a circular disk along a three dimensional curve. During the sweeping operation the normal to the plane of the circular disk is in the direction of the tangent to the directrix curve and the center of the disk lies on the directrix. The circular disk may, optionally, have a central hole, in this case the resulting solid has a through hole, or, an internal void when the directrix forms a close curve. X 0D X 0D NOTE Entity adapted from swept disk solid defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC2x2. X 0D X 0D .change ifc2x4 X 0D IFC4 CHANGE The attribute StartParam and EndParam have been made optional. X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. If the Directrix curve definition is not tangent continuous, the transition between the segments has to be within an acceptable limit of tangent discontinuity. Very sharp edges may result in nearly impossible miter. Implementer agreements may define acceptable limits for tangent discontinuity. X 0D 2. The segments of the Directrix shall be long enough to apply the Radius . In case of an arc segment forming part of the Directrix , its radius shall be greater then the disk Radius X 0D 3. The Directrix shall not be based on an intersecting curve.bSI Documentation"

#:IFC.xml:9612
msgid "IfcSweptDiskSolid_Directrix"
msgstr "Direktør"

msgid "IfcSweptDiskSolid_Directrix_DEFINITION"
msgstr "Direktør"

#:IFC.xml:9590
msgid "IfcSweptDiskSolid_Radius"
msgstr "Radius"

msgid "IfcSweptDiskSolid_Radius_DEFINITION"
msgstr "Radiusen til den sirkelformede disken som skal sveipes langs retningen. Danter den ytre radius, hvis en innerRadius anvendes."

#:IFC.xml:9595
msgid "IfcSweptDiskSolid_InnerRadius"
msgstr "InnerRadius"

msgid "IfcSweptDiskSolid_InnerRadius_DEFINITION"
msgstr "Denne egenskapen er valgfritt, hvis den angir radiusen til et sirkulært hull i midten av disken."

#:IFC.xml:9600
msgid "IfcSweptDiskSolid_StartParam"
msgstr "StartParam"

msgid "IfcSweptDiskSolid_StartParam_DEFINITION"
msgstr "The parameter value on the Directrix at which the sweeping operation commences. If no value is provided the start of the sweeping operation is at the start of the Directrix . X 0D X 0D .change ifc2x4 X 0D IFC4 CHANGE The attribute has been changed to OPTIONAL with upward compatibility for file based exchange."

#:IFC.xml:9605
msgid "IfcSweptDiskSolid_EndParam"
msgstr "Endepunkt"

msgid "IfcSweptDiskSolid_EndParam_DEFINITION"
msgstr "The parameter value on the Directrix at which the sweeping operation ends. If no value is provided the end of the sweeping operation is at the end of the Directrix . X 0D X 0D .change ifc2x4 X 0D IFC4 CHANGE The attribute has been changed to OPTIONAL with upward compatibility for file based exchange."

#:IFC.xml:9624
msgid "IfcSweptDiskSolidPolygonal"
msgstr "IfcSweptDiskSolidPolygonal"

msgid "IfcSweptDiskSolidPolygonal_DEFINITION"
msgstr "The [[IfcSweptDiskSolidPolygonal]] is a [[IfcSweptDiskSolid]] where the Directrix is restricted to be provided by an poly line only. An optional FilletRadius attribute can be asserted, it is then applied as a fillet to all transitions between the segments of the poly line. X 0D X 0D NOTE The geometric item [[IfcIndexedPolyCurve]] provides a more compact representation compared with [[IfcPolyline]] . Therefore it is the prefered curve representation for the Directrix . The [[IfcIndexedPolyCurve]] shall not have Segments defined, resticting it to a poly line only. X 0D X 0D HISTORY New entity in IFC4. X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. The FilletRadius , if provided, has to be smaller then or equal to the length of the start and end segment of the [[IfcPolyline]] , and smaller then or equal to one half of the lenght of the shortest inner segment.bSI Documentation"

#:IFC.xml:9625
msgid "IfcSweptDiskSolidPolygonal_FilletRadius"
msgstr "FilletRadius"

msgid "IfcSweptDiskSolidPolygonal_FilletRadius_DEFINITION"
msgstr "Fileten som gjelder like mye for alle overganger mellom segmentene i [[IfcPolyline]] , angi den geometriske representasjonen for Directrix . Hvis utelatt, gjelder ingen filet for segmentene."

#:IFC.xml:9632
msgid "IfcTaperedSweptAreaProfiles__StartArea"
msgstr "IfcTaperedSweptAreaProfiles StartArea"

msgid "IfcTaperedSweptAreaProfiles__StartArea_DEFINITION"
msgstr "This function checks whether the start and end profile in a tapered extrusion are topologically similar, i.e. whether both have the same number of vertices and edges. X 0D X 0D It returnes TRUE if X 0D X 0D The start profile is defined by a paramterized profile definition and X 0D the end profile is either a derived profile, using the start profile as its parent profile, or X 0D the end profile is besed on the same subtype of the paramterized profile definition as the start profile X 0D The start profile is defined by an arbitrary bounded curve bounding a plane and X 0D the end profile is a derived profile using the start profile as its parent profile X 0D X 0D HISTORY S New function in X 0D IFC2x Edition 4."

#:IFC.xml:9640
msgid "IfcTessellatedFaceSet"
msgstr "IfcTessellatedFaceSet"

msgid "IfcTessellatedFaceSet_DEFINITION"
msgstr "The [[IfcTessellatedFaceSet]] is a boundary representation topological model limited to planar faces and straight edges. It may represent an approximation of an analytical surface or solid that may be provided in addition to its tessellation as a separate shape representation. The [[IfcTessellatedFaceSet]] provides a compact data representation of an connected face set using indices into ordered lists of vertices, normals, colours, and texture maps. X 0D X 0D NOTE The compact representation has been chosen to enable small data sets despite potentially large sets of faces, edges and vertices needed to represent tessellations of analyticals surfaces and solids, and despite large sets of colour and texture information to annotate the tessellated faces. X 0D X 0D The [[IfcTessellatedFaceSet]] is an abstract supertype of tesselated face sets each imposing specific constraints on face generation for tessellation, such as triangulation with or without strip and fans , or quadrilaterals, or polygonal faces with or without inner loops . X 0D X 0D NOTE Not all different constraints on face sets are included as specific subtypes in this release of the specification. X 0D X 0D The following attributes apply to all subtypes X 0D X 0D The Coordinates are the ordered list of Cartesian points representing the vertices of the tessellated item. An index list, defined at the level of subtypes, uses the points, identified by index position, to construct the polylines that represent the faces. X 0D The HasColours inverse relation provides an indexed colour map with an corresponding list of indices providing a colour for each face of the tessellated face set. X 0D The HasTextures inverse relation provides an indexed texture map with an corresponding list of indices providing texture coordinates that map to the geometric coordinates of the polylines representing the faces. X 0D X 0D Each face of the tessellated face set shall have X 0D X 0D at least three non coincident vertices X 0D vertices that define a planar polygon X 0D vertices that define a non self intersecting polygon. X 0D X 0D NOTE The definition of [[IfcTessellatedFaceSet]] is based on the indexedFaceSet defined in ISO IEC 19775 1 X 0D X 0D HISTORY New entity in IFC4.bSI Documentation"

#:IFC.xml:9027
msgid "IfcTessellatedFaceSet_Coordinates"
msgstr "Koordinater"

msgid "IfcTessellatedFaceSet_Coordinates_DEFINITION"
msgstr "Koordinater"

#:IFC.xml:9649
msgid "IfcTessellatedFaceSet_HasColours"
msgstr "Farger"

msgid "IfcTessellatedFaceSet_HasColours_DEFINITION"
msgstr "Farger"

#:IFC.xml:9663
msgid "IfcTessellatedFaceSet_HasTextures"
msgstr "HasTextures"

msgid "IfcTessellatedFaceSet_HasTextures_DEFINITION"
msgstr "HasTextures"

#:IFC.xml:9641
msgid "IfcTessellatedFaceSet_Dim"
msgstr "Dim"

msgid "IfcTessellatedFaceSet_Dim_DEFINITION"
msgstr "Dim"

#:IFC.xml:9677
msgid "IfcTessellatedItem"
msgstr "IfcTessellatedItem"

msgid "IfcTessellatedItem_DEFINITION"
msgstr "The [[IfcTessellatedItem]] is the abstract supertype of all tessellated geometric models. X 0D X 0D HISTORY New entity in IFC4.bSI Documentation"

#:IFC.xml:9680
msgid "IfcTriangulatedFaceSet"
msgstr "IfcTriangulatedFaceSet"

msgid "IfcTriangulatedFaceSet_DEFINITION"
msgstr "The [[IfcTriangulatedFaceSet]] is a tessellated face set with all faces being bound by triangles. The faces are constructed by implicit polylines defined by three Cartesian points. Depending on the value of the attribute Closed the instance of [[IfcTriangulatedFaceSet]] represents X 0D X 0D if TRUE, a boundary represention or B rep X 0D if FALSE, a face based surface representation. X 0D X 0D The coordinates of each point are provided by a one based index into an ordered list of Cartesian points provided by the two dimensional list CoordIndex , where X 0D X 0D the first dimension of the two dimensional list addresses the list of triangular faces X 0D the second dimension of the two dimensional list provides exactly three indices. Each index points to a Cartesian point being a vertex of the triangle. X 0D X 0D Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. X 0D X 0D PnIndex .. .. .. .. .. .. figures ifctriangulatedfaceset 03.png Figure 1 Use of PnIndex X 0D X 0D See Figure 2 for using the [[IfcTriangulatedFaceSet]] without as default and with using the PnIndex . X 0D X 0D [[IfcTriangulatedFaceSet]] 01 .. .. .. .. .. .. figures ifctriangulatedfaceset 01.png Figure 2 Triangulated face set X 0D X 0D Optionally normals can be provided. Only normals per vector are supported allowing for visually curved triangles when the three normals of the corresponding three vertices of a triangle are not co linear to the normal of the triangular face. If they are identical, normals shall be omited. X 0D X 0D NOTE In case of a body representation having triangular faces with curvature, different normals for all three vertices in context of this triangles are exported, describing the curvature for smooth visualisation. In case of triangular faces with no curvature, the three vertex based normals are identical and could always be computed from the face. Therefore vertices should only be exported to support smooth visualisation by curvature of triangles. In case of faceted representation no vertices should be exported. X 0D X 0D Normals are provided by the two dimensional list Normals , where X 0D X 0D the first dimension of the two dimensional list addresses the corresponding list of vertex indices of the triangular faces X 0D the second dimension of the two dimensional list provides exactly three real values to determine the direction of the normal at this vertex of the triangle. X 0D X 0D The indices in the CoordIndex point into the list of Normals . The indices of CoordIndex are applied to both points, either directly directly, or via the PnIndex and normals. See Figure 3 for handling of normals. X 0D X 0D [[IfcTriangulatedFaceSet]] 02 .. .. .. .. .. .. figures ifctriangulatedfaceset 02.png Figure 3 Triangulated face set with normals X 0D X 0D NOTE Using corresponding lists of points and normals allows to use only a single list of indices into both at the expense of having non unique collections of vertices. X 0D X 0D Figure 4 shows the use of [[IfcTriangulatedFaceSet]] without annotation. The diagram of the [[IfcTriangulatedFaceSet]] represents the indices and the ordered list into which the indices point. The index starts with 1 indexed as 1 to N , if the greatest index in CoordIndex in N, then the [[IfcCartesianPointList]] shall have N lists of 3 3 coordinates. X 0D X 0D X 0D X 0D X 0D X 0D X 0D X 0D Figure 168 shows an [[IfcTriangulatedFaceSet]] represented by X 0D X 0D CoordIndex 1,6,5 , 1,2,6 , 6,2,7 , 7,2,3 , 7,8,6 , 6,8,5 , 5,8,1 , 1,8,4 , 4,2,1 , 2,4,3 , 4,8,7 , 7,3,4 X 0D [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. X 0D X 0D X 0D X 0D X 0D Figure 4 Triangulated face set geometry X 0D X 0D X 0D X 0D X 0D NOTE The definition of [[IfcTriangulatedFaceSet]] is based on the indexedFaceSet and indexedTriangleSet defined in ISO IEC 19775 1. The use of PnIndex has been adopted from triangulated surface set defined in ISO 10303 42. X 0D X 0D HISTORY New entity in IFC4. X 0D X 0D .spec head X 0D Informal Propositions X 0D X 0D 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular X 0D each face shall be unique X 0D each edge shall be used by exactly two boundaries of faces X 0D the topological normal at each point on the boundary of the triangulated face set shall point away from the mater ial of the solid.bSI Documentation"

#:IFC.xml:9681
msgid "IfcTriangulatedFaceSet_Normals"
msgstr "Normaler"

msgid "IfcTriangulatedFaceSet_Normals_DEFINITION"
msgstr "En ordnet liste over tre retninger for normaler. Det er en todimensjonal liste over retninger gitt med tre parameter X 0D-verdier. X 0D Den første dimensjonen tilsvarer vertex-indeksene i Coordindex X 0D Den andre dimensjonen har nøyaktig tre verdier, 1 x retning, 2 y-retningen og 3 z-retningene"

#:IFC.xml:9686
msgid "IfcTriangulatedFaceSet_Closed"
msgstr "Lukket"

msgid "IfcTriangulatedFaceSet_Closed_DEFINITION"
msgstr "Det kan angis om [[IfcTriangulatedFaceSet]] er et lukket skall eller ikke. Hvis det ikke er mulig å gi noen slik informasjon."

#:IFC.xml:9691
msgid "IfcTriangulatedFaceSet_CoordIndex"
msgstr "CoordIndex"

msgid "IfcTriangulatedFaceSet_CoordIndex_DEFINITION"
msgstr "To dimensjonale lister for de indekserte baserte trekantene, der X 0D Den første dimensjonen representerer trekantene fra 1 til N X 0D Den andre dimensjonen har nøyaktig tre verdier som representerer indeksene til tre vertex punkter fra 1 til 3 . X 0D X 0D MERKNAD Koordinatene til vertikalene er gitt av listen over indeksert SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList ."

#:IFC.xml:9696
msgid "IfcTriangulatedFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcTriangulatedFaceSet_PnIndex_DEFINITION"
msgstr "Listen over tall som definerer plasseringene i [[IfcCartesianPointList3D]] for å få punktkoordinatene til indeksene utenom CoordIndex . Hvis PnIndex ikke er angitt direkte inn i indeksene [[IfcCartesianPointList3D]."

#:IFC.xml:9701
msgid "IfcTriangulatedFaceSet_NumberOfTriangles"
msgstr "NummerOfTriangler"

msgid "IfcTriangulatedFaceSet_NumberOfTriangles_DEFINITION"
msgstr "NummerOfTriangler"

#:IFC.xml:9708
msgid "IfcTriangulatedIrregularNetwork"
msgstr "IfcTriangulatedIrregularNetwork"

msgid "IfcTriangulatedIrregularNetwork_DEFINITION"
msgstr "The [[IfcTriangulatedIrregularNetwork]] is a triangulated face set for representing horizontal surfaces one unique Z coordinate for all X and Y coordinates within domain with additional flags for each face indicating breaklines between faces or designation as a hole or void. Triangles shall be defined with vertices in counterclockwise order as viewing from above following right hand rule . X 0D X 0D For visualization, applications should not display faces where flags are set as negative either a hole, void, or possible future extension . X 0D X 0D The flag Void shall be used to indicate that faces are to be excluded without falling back on any other geometry. Such designation could be used for portions of a site beneath a building or other structure. X 0D X 0D The flag Hole shall be used to indicate that faces are to be excluded but may fall back on other geometry. Such designation could be used for portions of a proposed site that are to remain unchanged conforming to an existing site that may also be defined X 0D X 0D For scenarios where multiple surfaces used as input are to be combined, any triangles marked Void shall be retained as voids, while any triangles marked as Hole shall be overridden if another surface has visible geometry defined within the same horizontal location.bSI Documentation"

#:IFC.xml:9709
msgid "IfcTriangulatedIrregularNetwork_Flags"
msgstr "Flagg"

msgid "IfcTriangulatedIrregularNetwork_Flags_DEFINITION"
msgstr "Indikerer attributter for hver trekant i en kompakt form som følger 2 usynlig hultall 1 usynlig heltall 0 ingen brytningslinjer 1 bruddlinje ved kant 2 3 delestrek ved kanter 1 og 2 4 delestrek ved kant 3 5 delestrek ved kanter 1 og 3 delestrek ved kant 2 og 3 7 brytelinje ved kant 1, 2 og 3."

