msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: German\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: de\n"
"X-Crowdin-File: /master/IfcGeometricModelResource.pot\n"
"X-Crowdin-File-ID: 44\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: de_DE\n"
"PO-Revision-Date: 2022-01-13 13:10\n"

#:IFC.xml:9868
msgid "IfcAdvancedBrep"
msgstr "IfcAdvancedBrep"

msgid "IfcAdvancedBrep_DEFINITION"
msgstr "Ein fortgeschrittener B-Rep ist ein Randrepräsentation Modell, in dem alle Gesichter, Kanten und Knoten explizit dargestellt werden. Es ist eine solide mit expliziter Topologie und elementarer oder freier Formgeometrie. Die Gesichter des B Rep sind vom Typ [[IfcAdvancedFace]] . Ein fortgeschrittener B-Rep muss den gleichen topologischen Einschränkungen wie der vielseitige Solid B Rep begegnen. HINWEIS: Der fortschrittliche B Rep wurde eingeführt, um die zunehmende Anzahl von Anwendungen zu unterstützen, die auf NURBS oder anderen b Spline-Oberflächen basierende Modelle definieren und austauschen können. Abbildung 1 illustriert die Verwendung von [[IfcAdvancedBrep]] für Grenzdarstellungsmodelle mit b Spline-Oberflächen. Das Diagramm zeigt die topologischen und geometrischen Darstellungselemente, die für fortgeschrittene B-Reperaturen verwendet werden, basierend auf [[IfcAdvancedFace]]. Abbildung 1 Advanced Brep, b Splintoberfläche Abbildung 2 illustriert die Verwendung von [[IfcAdvancedBrep]] für Grenzdarstellungsmodelle mit elementaren Oberflächen. Das Diagramm zeigt die topologischen und geometrischen Darstellungselemente, die für fortgeschrittene B-Reperaturen verwendet werden, basierend auf [[IfcAdvancedFace]]. Es zeigt die Verwendung von [[IfcIntersectionCurve]] an, um die geometrische Darstellung der Kantenkurve sowohl als 3D-Kurve als auch als u, pcurve im parametrischen Raum der angrenzenden Oberflächen. Abbildung 2 Advanced Brep, elementare Oberfläche NOTE Entität, angepasst durch erweiterte Brepform-Darstellung, die in ISO 10303 514 definiert ist. HISTORY New entity in IFC4 .spec head Informal Propositions 1. Jedes Gesicht ist eine Fläche 2. Jede Oberfläche hat ihre Geometrie definiert durch eine elementare Oberfläche, hinreichende Oberfläche oder eine b Spline-Oberfläche 3. die Kanten zur Definition der Flächengrenzen sollen alle eine Kantenkurve 4 referenzieren. jede Kurve, die verwendet wird, um die Geometrie der Gesichter und Gesichter zu definieren, soll entweder ein Konisch sein oder eine Linie oder eine Polylinie oder eine b Spline-Kurve 5. die Kanten, die zur Definition der Gesichtergrenzen verwendet werden, sollen alle durch Knoten des Typ-Scheitelpunktes 6 beschnitten werden. keine Schleife, die zur Definition einer Gesichterbindung verwendet wird, soll der orientierte Untertyp Formvorschläge HasAdvancedFaces sein. Jedes Gesicht des fortgeschrittenen B-Rep soll vom Typ [[IfcAdvancedFace]] sein."

#:IFC.xml:9871
msgid "IfcAdvancedBrepWithVoids"
msgstr "IfcAdvancedBrepWithVoids"

msgid "IfcAdvancedBrepWithVoids_DEFINITION"
msgstr "Das [[IfcAdvancedBrepWithVoids]] ist eine Spezialisierung auf einen fortgeschrittenen B-Rep, der eine oder mehrere Leerzeichen im Inneren enthält. Die Leerräume werden als geschlossene Schalen dargestellt, die so definiert sind, dass die Shell normal in die Leere. HISTORY New entity in IFC4 .spec head Informal Propositions 1. Jede leere Schale soll von der äußeren Schale und von jeder anderen leeren Schale 2 getrennt werden. Jede leere Schale soll in die äußere Schale eingeschlossen sein, aber nicht in einer anderen leeren Schale eingeschlossen sein. Insbesondere ist die äußere Schale nicht in der Menge der Leerschalen 3. Jede Shell in der [[IfcManifoldSolidBrep]] wird nur einmal referenziert. 4. Alle Gesichter aller Shells in den [[IfcAdvancedBrep]] und den [[IfcAdvancedBrepWithVoids]]. oide sollen vom Typ [[IfcAdvancedFace]] sein."

#:IFC.xml:9874
msgid "IfcAdvancedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcAdvancedBrepWithVoids_Voids_DEFINITION"
msgstr "Voids"

#:IFC.xml:9886
msgid "IfcBlock"
msgstr "IfcBlock"

msgid "IfcBlock_DEFINITION"
msgstr "Die [[IfcBlock]] ist ein Bau-Solid Geometry CSG 3D primitiv. Sie wird durch eine Position und einen Positionsabstand entlang der drei orthogonalen Achsen definiert. Das geerbte Positionsattribut hat den Typ IfcAxisPlacement3D und bietet SELF [[IfcCsgPrimitive3D]]. osition Der Standort und die Ausrichtung des Achsensystems für das primitive. SELF [[IfcCsgPrimitive3D]].Position. ocation Der Block hat einen Scheitelpunkt an der Position und die Kanten werden an den Positivachsen im positiven Sinne ausgerichtet. Die Attribute XLength , YLength und ZLength definieren die Größe der [[IfcBlock]] entlang der drei Achsen. Abbildung 1 illustriert geometrische Parameter eines Blocks, in dem der Block innerhalb seines eigenen Platzierung Koordinatensystems positioniert ist. Die Werte für XLength, YLänge und ZLänge werden auf die positive Richtung der X-, Y- und Z-Achse angewendet. xtDef NOTE Definition gemäß ISO CD 10303 42 1992 A block is a solid rectangular parallelepited, defined with a location and placement coordinate system. Der Block wird durch die positiven Längen x, y und z entlang der Achsen des Platzierung Koordinatensystems angegeben und hat einen Scheitelpunkt am Ursprung des Koordinatensystems. HISTORY New Entity in IFC2x3. .use Kopf Textur Definition auf jeder Seite Gesichter, Texturen sind ausgerichtet nach aufrecht ausgerichtet. An den oberen und unteren Gesichtern sind die Texturen nach vorne nach hinten ausgerichtet. Die Texturen werden nach RepeatS und RepeatT gestreckt oder wiederholt. Abbildung 2 zeigt die Standardtextur-Zuordnung mit einer Klemmtextur RepeatS False und RepeatT False . Das Bild auf der linken Seite zeigt die Textur, wo die S Achse nach rechts und die T Achse nach oben zeigt. Das Bild auf der rechten Seite zeigt die Textur, die auf die Geometrie angewendet wird, wobei die X-Achse nach rechts zeigt die Y-Achse nach links und die Z-Achse nach oben zeigt. .gridtable Normal Origin X Origin Z S Ursprung T Achse T Achse Linke X 0 YLength 0 Y Z Rechts X XLength 0 Y Z Front Y 0 0 0 X Z Rückseite Y XLength YLength 0 X Z unten Z 0 YLength 0 X Y Top Z 0 0 ZLength X Y Y Y Y Y Figure 2 Block Texturen"

#:IFC.xml:9887
msgid "IfcBlock_XLength"
msgstr "XL-Länge"

msgid "IfcBlock_XLength_DEFINITION"
msgstr "Die Größe des Blocks entlang der Platzierung X-Achse. Sie wird durch die geerbte Achsenplatzierung durch SELF [[IfcCsgPrimitive3D]].Position.P 1 bereitgestellt."

#:IFC.xml:9892
msgid "IfcBlock_YLength"
msgstr "Länge"

msgid "IfcBlock_YLength_DEFINITION"
msgstr "Die Größe des Blocks entlang der Platzierung Y. Sie wird durch die geerbte Achsenplatzierung durch SELF [[IfcCsgPrimitive3D]].Position.P 2 bereitgestellt."

#:IFC.xml:9897
msgid "IfcBlock_ZLength"
msgstr "ZLänge"

msgid "IfcBlock_ZLength_DEFINITION"
msgstr "Die Größe des Blocks entlang der Platzierung Z. Sie wird durch die geerbte Achsenplatzierung durch SELF [[IfcCsgPrimitive3D]].Position.P 3 bereitgestellt."

#:IFC.xml:9904
msgid "IfcBooleanClippingResult"
msgstr "IfcBooleanClippingErgebnis"

msgid "IfcBooleanClippingResult_DEFINITION"
msgstr "Ein Clippingergebnis wird als spezieller Untertyp des Generals [[IfcBooleanResult]] definiert. Es beschränkt die Operanden und den Operator des booleschen Ergebnisses. Ein Clipping-Ergebnis ist der boolesche Unterschied zwischen einem gepeitschten soliden und einem halben Raum solid, oder zwischen dem Ergebnis der boolschen Differenz und einem halben Raum solid. So können mehr als eine Differenzoperation angewendet werden, um das Endboolesche Ergebnis zu erzielen. GESCHICHTE Neue Einheit in IFC2x. Formale Angebote FirstOperandType Der erste Operand der boolschen Clipping-Operation soll entweder ein [[IfcSweptAreaSolid]] oder im Falle von mehr als einer Clipping an [[IfcBooleanResult]] sein. SecondOperandType Der zweite Operand der booleschen Clipping-Operation soll ein [[IfcHalfSpaceSolid]] sein. OperatorType Der Boolesche Operator für Clipping ist immer Differenz ."

#:IFC.xml:9907
msgid "IfcBooleanOperand"
msgstr "IfcBooleanOperand"

#:IFC.xml:9908
msgid "IfcBooleanOperator"
msgstr "IfcBooleanOperator"

msgid "IfcBooleanOperator_DEFINITION"
msgstr "Boolesche Operatoren, die für die ersten und zweiten booleschen Operanden gelten. xtDef NOTE Definition gemäß ISO CD 10303 42 1992 Dieser Typ definiert die drei booleschen Operatoren, die bei der Definition von CSG-Festkörpern verwendet werden. HINWEISE Entität, angepasst an boolesche Bediener, definiert in ISO 10303 42. GESCHICHTE Neue Einheit in IFC1.5.1. Artikel UNION INTERSECTION Der Betrieb des regulären Satzes theoretische Schnittstellen der von zwei Festkörpern definierten Volumen. DIFFERENCE Der regularisierte Satz theoretische Unterschied zwischen den Volumen, die von zwei Festkörpern definiert werden."

#:IFC.xml:9909
msgid "IfcBooleanOperator_DIFFERENCE"
msgstr "DIFFERENZE"

msgid "IfcBooleanOperator_DIFFERENCE_DEFINITION"
msgstr "Der regularisierte Satz theoretische Unterschied zwischen den Volumen, die von zwei Festkörpern definiert werden."

#:IFC.xml:9910
msgid "IfcBooleanOperator_INTERSECTION"
msgstr "ABSCHNITT"

msgid "IfcBooleanOperator_INTERSECTION_DEFINITION"
msgstr "Der Betrieb des regularisierten Satzwechsels der Volumen, der von zwei Festkörpern definiert wird."

#:IFC.xml:9911
msgid "IfcBooleanOperator_UNION"
msgstr "UNION"

msgid "IfcBooleanOperator_UNION_DEFINITION"
msgstr "UNION"

#:IFC.xml:9913
msgid "IfcBooleanResult"
msgstr "IfcBooleanErgebnis"

msgid "IfcBooleanResult_DEFINITION"
msgstr "Das [[IfcBooleanResult]] ist das Ergebnis einer booleschen Operation auf zwei Festkörperoperationen. EXAMPLE Wenn der erste Operand ein Block und der zweite Operand ist ein fester Zylinder von geeigneten Dimensionen und Standorten das boolesche Ergebnis mit dem Differenz-Operator wäre ein Block mit einem kreisförmigen Loch. xtDef NOTE Definition nach ISO CD 10303 42 1992 Ein boolesisches Ergebnis ist das Ergebnis einer regelmässigen Operation auf zwei Festkörpern zur Schaffung eines neuen Festkörpers. Gültige Operationen sind regularisierte Gewerkschaften, regularisierte Kreuzung und regularisierte Differenz. Für boolesche Operationen gilt ein Solid als regularisierte Punkteanzahl. Das endgültige boolesche Ergebnis hängt von der Operation und den beiden Operaten ab. Im Falle des Differenzbetreibers ist auch die Reihenfolge der Operanden signifikant, wobei der Operator entweder geeint, Kreuzung oder Differenz sein kann. Der Effekt dieser Operatoren wird unterhalb der Union auf zwei Festkörpern beschrieben, ist das neue Solid, das die Regularisierung des Satzes aller Punkte, die sich entweder im ersten Operand oder im zweiten Operand befinden oder in beiden. Schnittpunkt auf zwei Festkörpern ist die neue solide ist, dass die Regularisierung des Satzes aller Punkte, die sowohl im ersten Operand als auch in der zweiten Operand. Das Ergebnis der Differenzoperation auf zwei Festkörpern ist die Regularisierung des Satzes aller Punkte, die sich im ersten Operand, aber nicht im zweiten Operand. HISTORY New entity in IFC1.5.1."

#:IFC.xml:9914
msgid "IfcBooleanResult_Dim"
msgstr "Dim"

msgid "IfcBooleanResult_Dim_DEFINITION"
msgstr "Die Raumdimensionalität dieser Entität, die mit der Raumdimensionalität des ersten Operanden identisch ist. Eine Regel, die sicherstellt, dass beide Operanden die gleiche Raumdimensionalität haben."

#:IFC.xml:9919
msgid "IfcBooleanResult_FirstOperand"
msgstr "Erster Operand"

msgid "IfcBooleanResult_FirstOperand_DEFINITION"
msgstr "Die erste Operation, die durch die Boolsche Operation bedient wird."

#:IFC.xml:9924
msgid "IfcBooleanResult_Operator"
msgstr "Operator"

msgid "IfcBooleanResult_Operator_DEFINITION"
msgstr "Der boolesche Operator, der in der Operation verwendet wird, um das Ergebnis zu erzeugen."

#:IFC.xml:9929
msgid "IfcBooleanResult_SecondOperand"
msgstr "Sekundäroperand"

msgid "IfcBooleanResult_SecondOperand_DEFINITION"
msgstr "Der zweite Operand für die Operation spezifiziert."

#:IFC.xml:9938
msgid "IfcBoundingBox"
msgstr "IfcBoundingbox"

msgid "IfcBoundingBox_DEFINITION"
msgstr "Die [[IfcBoundingBox]] definiert eine orthogonale Box parallel zu den Achsen des Objektkoordinatensystems, in dem sie definiert ist. Es wird durch eine Ecke definiert, die ein dreidimensionaler kartesianischer Punkt und drei Längenmessungen ist, die das X definieren Y- und Z-Parameter der Box in Richtung der Positivachsen. HINWEIS: Jeder Untertyp von [[IfcProduct]], der eine Produktform-Darstellung hat, kann eine Box-Darstellung haben. Der unter [[IfcShapeRepresentation]] definierte Box-Repräsentation identifiziert die [[IfcBoundingBox]] als einfachste 3D-Darstellung. Wie in Abbildung 1 gezeigt das [[IfcBoundingBox]] ist mit einem eigenen Standort definiert, mit dem das [[IfcBoundingBox]] relativ zum geometrischen Koordinatensystem platziert werden kann. Die [[IfcBoundingBox]] ist definiert durch die linke untere Ecke und die obere rechte Ecke XDim, YDim, ZDim gemessen innerhalb des übergeordneten co ordinate Systems . Abbildung 1 Bounding Box NOTE Korrespondenz STEP type box domain definiert in ISO 10303 42. HISTORY New entity in IFC1.0."

#:IFC.xml:9961
msgid "IfcBoundingBox_Corner"
msgstr "Ecken"

msgid "IfcBoundingBox_Corner_DEFINITION"
msgstr "Position der unteren linken Ecke mit den Mindestwerten ."

#:IFC.xml:9939
msgid "IfcBoundingBox_Dim"
msgstr "Dim"

msgid "IfcBoundingBox_Dim_DEFINITION"
msgstr "Die Raumdimensionalität dieser Klasse, sie ist immer 3."

#:IFC.xml:9944
msgid "IfcBoundingBox_XDim"
msgstr "XDim"

msgid "IfcBoundingBox_XDim_DEFINITION"
msgstr "Längenattribut gemessen am Rand parallel zur X-Achse"

#:IFC.xml:9949
msgid "IfcBoundingBox_YDim"
msgstr "JDim"

msgid "IfcBoundingBox_YDim_DEFINITION"
msgstr "Breitenattribut gemessen am Rand parallel zur Y-Achse"

#:IFC.xml:9954
msgid "IfcBoundingBox_ZDim"
msgstr "ZDim"

msgid "IfcBoundingBox_ZDim_DEFINITION"
msgstr "Höhenattribut gemessen am Rand parallel zur Z-Achse ."

#:IFC.xml:9985
msgid "IfcBoxedHalfSpace"
msgstr "IfcBoxedHalfSpace"

msgid "IfcBoxedHalfSpace_DEFINITION"
msgstr "Das [[IfcBoxedHalfSpace]] wird als Supertyp [[IfcHalfSpaceSolid]] nur in booleschen Operationen verwendet. Es teilt die Domäne in genau zwei Untergruppen, wo die fragliche Domäne ist die des Attributs Enclosure . Ziel des Attributs Enclosure ist es, ein Suchfeld für den anderen Operand in der boolschen Operation zur Verfügung zu stellen. Er soll groß genug sein, um das Ergebnis nach dem booleschen Betrieb mit dem Halbraum vollständig einzuschließen. Das Endergebnis ändert sich jedoch nicht. Das Ergebnis der booleschen Operation wäre das gleiche, als ob sie vom Supertyp [[IfcHalfSpaceSolid]] ausgeführt würde. Siehe Abbildung 1 unten. korrekte Verwendung von Gehäuse .. .. .. .. Zahlen ifcboxedhalfspace 01. ng Abbildung 1 Boxed halb space operands The [[IfcBoundingBox]], die das Gehäuse für die Bequemlichkeit der empfangenen Anwendung zur Verfügung stellt, um zum Beispiel die Verwendung des Größenkastenvergleichs für Effizienz zu ermöglichen um zunächst zu überprüfen, ob sich die Größen der Felder kreuzen, wenn nicht gar keine Berechnungen durchgeführt werden müssen, um zu überprüfen, ob sich die Feststoffe der Entitäten überschneiden . Die Enclosure trägt daher dazu bei, den Umgang mit unendlich großen Problemen zu verhindern. Das Gehäuse wird innerhalb des Objektkoordinatensystems positioniert, das beispielsweise durch die Objektplatzierung des Elementes durch [[IfcLocalPlacement]] repräsentiert wird. Abbildung 2 zeigt die Umschlußbox mit ausreichend großer Größe an, um das boolesche Ergebnis vollständig einzuschließen. xtDef NOTE Definition gemäß ISO CD 10303 42 1992 Diese Entität ist ein Subtyp der Halbraumsolide, die durch eine umgebende rechteckige Box getrimmt wird. Die Box hat ihre Kanten parallel zu den Koordinatenachsen des geometrischen Koordinatensystems. Der Zweck der Box ist es, CSG-Berechnungen zu erleichtern, indem eine solide von endlicher Größe. HISTORY New entity in IFC1.5.1 . hange ifc2x4 IFC4 CHANGE Ausnutzung korrekt, Position Koordinatensystem für Enclosure ist das Objektkoordinatensystem."

#:IFC.xml:9973
msgid "IfcBoxedHalfSpace_Enclosure"
msgstr "Schränke"

msgid "IfcBoxedHalfSpace_Enclosure_DEFINITION"
msgstr "Das Kästchen, das das Ergebnis des Boolschen Betriebs unter Berücksichtigung des Halbraumes nur zu Rechenzwecken begrenzt."

#:IFC.xml:9988
msgid "IfcCartesianPointList"
msgstr "IfcCartesianPointList"

msgid "IfcCartesianPointList_DEFINITION"
msgstr "Das [[IfcCartesianPointList]] ist der abstrakte Supertyp der Punkteliste. HINWEIS: Die [[IfcCartesianPointList]] wird eingeführt, um eine kompakte Darstellung einer möglichen größeren Liste von Punkten zu ermöglichen. wie in Punktwolken und in indizierbarer Darstellung von Punkten. GESCHICHTE Neue Entität in IFC4."

#:IFC.xml:9989
msgid "IfcCartesianPointList_Dim"
msgstr "Dim"

msgid "IfcCartesianPointList_Dim_DEFINITION"
msgstr "Die Raumdimensionalität dieser Klasse, entweder 2 oder 3, abhängig vom Untertyp."

#:IFC.xml:10008
msgid "IfcCartesianPointList2D"
msgstr "IfcCartesianPointList2D"

msgid "IfcCartesianPointList2D_DEFINITION"
msgstr "Die [[IfcCartesianPointList2D]] definiert eine sortierte Sammlung von zwei kartesischen Punkten. Jeder kartesische Punkt wird als zweidimensionaler Punkt durch eine feste Liste von zwei Koordinaten zur Verfügung gestellt. Das Attribut CoordList ist eine zweidimensionale Liste wobei die erste Dimension eine unbegrenzte Liste ist, die jede 2D kartesische Punkt zweite Dimension darstellt, ist eine feste Liste von zwei Listenmitgliedern wobei 1 die x-Koordinate und 2 die y-Koordinate des kartesischen Punktes ist. HINWEIS: Die [[IfcCartesianPointList2D]] wird eingeführt, um eine kompakte Darstellung einer größeren Liste von Punkten zu ermöglichen. z.B. in indizierbarer Darstellung von Punkten, die als Punkte in Poly-Kurven verwendet werden. GESCHICHTE Neue Entität in IFC4 ADD1."

#:IFC.xml:10009
msgid "IfcCartesianPointList2D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList2D_CoordList_DEFINITION"
msgstr "Zwei-dimensionale Liste der kartesischen Punkte, die von zwei Koordinaten zur Verfügung gestellt werden."

#:IFC.xml:10014
msgid "IfcCartesianPointList2D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList2D_TagList_DEFINITION"
msgstr "Liste der Tags, die jedem Punkt entsprechen, mit dem eine Grundkurve gemäß dem Tag-Attribut unter [[IfcOffsetCurveByDistances]] oder IfcAlignmentCurve identifiziert werden kann."

#:IFC.xml:10021
msgid "IfcCartesianPointList3D"
msgstr "IfcCartesianPointList3D"

msgid "IfcCartesianPointList3D_DEFINITION"
msgstr "Die [[IfcCartesianPointList3D]] definiert eine bestellte Sammlung von drei kartesischen Punkten. Jeder kartesische Punkt wird als dreidimensionaler Punkt durch eine feste Liste von drei Koordinaten zur Verfügung gestellt. Das Attribut CoordList ist eine zweidimensionale Liste wobei die erste Dimension eine unbegrenzte Liste ist, die jede 3D kartesische Punkt zweite Dimension repräsentiert, ist eine feste Liste von drei Listenmitgliedern wobei 1 die x-Koordinate ist, 2 die y-Koordinate und 3 die z-Koordinate des kartesischen Punktes. HINWEIS: Die [[IfcCartesianPointList]] wird eingeführt, um eine kompakte Darstellung einer größeren Liste von Punkten zu ermöglichen. B. in Punktwolken und in indizierbarer Darstellung von Punkten, die als Punkte in gerösteten Elementen oder Poly-Kurven verwendet werden. GESCHICHTE Neue Entität in IFC4."

#:IFC.xml:10022
msgid "IfcCartesianPointList3D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList3D_CoordList_DEFINITION"
msgstr "Zwei-dimensionale Liste der kartesischen Punkte, die von drei Koordinaten zur Verfügung gestellt werden."

#:IFC.xml:10027
msgid "IfcCartesianPointList3D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList3D_TagList_DEFINITION"
msgstr "Liste der Tags, die jedem Punkt entsprechen, mit dem eine Grundkurve gemäß dem Tag-Attribut unter [[IfcOffsetCurveByDistances]] oder IfcAlignmentCurve identifiziert werden kann."

#:IFC.xml:10046
msgid "IfcCsgPrimitive3D"
msgstr "IfcCsgPrimitive3D"

msgid "IfcCsgPrimitive3D_DEFINITION"
msgstr "[[IfcCsgPrimitive3D]] ist ein abstrakter Supertyp aller dreidimensionalen Primitive, die als eines der beiden Baumwurzelelemente verwendet werden, oder als boolesche Ergebnisse innerhalb eines CSG soliden Modells. Alle 3D CSG Primitive sind innerhalb eines dreidimensionalen Platzierung Koordinatensystems definiert."

#:IFC.xml:10056
msgid "IfcCsgPrimitive3D_Position"
msgstr "Pset_ActuatorPHistory_Position"

msgid "IfcCsgPrimitive3D_Position_DEFINITION"
msgstr "Das Platzierung Koordinatensystem, auf das die Parameter der einzelnen CSG primitiv zutreffen."

#:IFC.xml:10047
msgid "IfcCsgPrimitive3D_Dim"
msgstr "Dim"

msgid "IfcCsgPrimitive3D_Dim_DEFINITION"
msgstr "Die Raumdimensionalität dieses geometrischen Repräsentation Element, es ist immer 3."

#:IFC.xml:10068
msgid "IfcCsgSelect"
msgstr "IfcCsgSelect"

#:IFC.xml:10069
msgid "IfcCsgSolid"
msgstr "IfcCsgSolid"

msgid "IfcCsgSolid_DEFINITION"
msgstr "Eine [[IfcCsgSolid]] ist die Darstellung einer 3D-Form anhand eines konstruktiven soliden Geometriemodells. Es wird durch ein einzelnes 3D CSG primitiv, oder als Ergebnis einer booleschen Operation. Die Operanten einer booleschen Operation können boolesche Operationen sein, die selbst einen CSG-Baum bilden. Die folgenden Volumes können Teile der CSG-Baum-Darstellungsmodelle sein, wie z.B. [[IfcFacetedBrep]] , [[IfcFacetedBrepWithVoids]] , Geschlossene gestesselte Reprätionsmodelle wie [[IfcPolygonalFaceSet]] , [[IfcTriangulatedFaceSet]] , Flächenfeste wie [[IfcExtrudedAreaSolid]] , [[IfcRevolvedAreaSolid]] , und ihre Untertypen für die Dämpfung, Fortgeschrittene Kehrflächen wie [[IfcSurfaceCurveSweptAreaSolid]] , [[IfcFixedReferenceSweptAreaSolid]] , [[IfcSweptDiskSolid]] Halbraumsolide, wie zum Beispiel [[IfcHalfSpaceSolid]] und seine Subtypen , und CSG primitive, die Subtypen von [[IfcCsgPrimitive3D]] . .extDef NOTE Definition nach ISO CD 10303 42 1992 Ein solides Modell als CSG-Modell wird durch eine Sammlung sogenannter primitiver Feststoffe, definiert kombiniert mit regelmässigen booleschen Operationen. Die erlaubten Operationen sind Kreuzung, Einheit und Unterschied. Ein CSG Solid benötigt zwei Arten von Informationen für seine vollständige Definition geometrisch und strukturell. Diese sind typischerweise primitive Volumen, wie Zylinder, Keile und Extrusionen, können aber auch allgemeine B Rep Modelle enthalten. Feste Modelle können auch Halbraumfeste sein. Die Strukturinformationen sind in einem Baum streng akyklisch geleitetes Graphen von boolesischem Ergebnis und CSG Festkörpern, die ein Rezept für den Bau der Festigkeit darstellen. Die Terminalknoten sind die geometrischen Primitive und andere Feststoffe. Jedes CSG Solid hat genau ein boolesches Ergebnis, welches die Wurzel des Baumes ist, der das Solid definiert. Es kann weitere boolesche Ergebnisse innerhalb des Baumes als Operanden geben. Die Bedeutung einer CSG soliden Entität ist, dass der vom assoziierten Baum definierte Solid als signifikantes Objekt selbst identifiziert wird. und auf diese Weise unterscheidet er sich von anderen booleschen Ergebniseinheiten, die Zwischenresultate während des Bauprozesses darstellen. HINWEISE Entität, angepasst von csg solid ist in ISO 10303 42 definiert. HISTORY New Entity in IFC1.5.1"

#:IFC.xml:10070
msgid "IfcCsgSolid_TreeRootExpression"
msgstr "Baumwurzelausdruck"

msgid "IfcCsgSolid_TreeRootExpression_DEFINITION"
msgstr "Boolescher Ausdruck von Primitiven und regularisierten Operatoren, die die Festkörpern beschreiben. Die Wurzel des Baumes boolscher Ausdrücke wird explizit als [[IfcBooleanResult]] Entität oder als primitive Untertypen von [[IfcCsgPrimitive3D]] angegeben."

#:IFC.xml:10077
msgid "IfcDirectrixDerivedReferenceSweptAreaSolid"
msgstr "IfcDirectrixDerivedReferenceSweptAreaSolid"

#:IFC.xml:10080
msgid "IfcExtrudedAreaSolid"
msgstr "IfcExtrudedAreaSolid"

msgid "IfcExtrudedAreaSolid_DEFINITION"
msgstr "The [[IfcExtrudedAreaSolid]] is defined by sweeping a cross section provided by a profile definition. The direction of the extrusion is given by the ExtrudedDirection attribute and the length of the extrusion is given by the Depth attribute. If the planar area has inner boundaries holes defined , then those holes shall be swept into holes of the solid. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the extruded solid. If not provided, it defaults to the current object coordinate system. The ExtrudedDirection is given within the position coordinate system as defined by [[IfcSweptAreaSolid]] . Position . The extruded direction can be any direction which is not perpendicular to the z axis of the position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The result is a solid. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. Figure 1 Extruded area solid geometry EXAMPLE Figure 2 illustrates geometric parameters and additional positioning parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the y axis. Figure 2 Repositioned extruded area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 An extruded area solid is a solid defined by sweeping a bounded planar surface. The direction of translation is defined by a direction vector, and the length of the translation is defined by a distance depth. The planar area may have holes which will sweep into holes in the solid. NOTE Entity adapted from extruded area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .use head Texture use definition For side faces, textures are aligned facing upright continuously along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the extrusion axis according to RepeatT . For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. EXAMPLE Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcExtrudedAreaSolid]] having a profile of [[IfcIShapeProfileDef]], the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth . Figure 3 Extruded area solid textures"

#:IFC.xml:10088
msgid "IfcExtrudedAreaSolid_ExtrudedDirection"
msgstr "Extrudierte Richtung"

msgid "IfcExtrudedAreaSolid_ExtrudedDirection_DEFINITION"
msgstr "Die Richtung, in der die Oberfläche von SweptArea bereitgestellt wird, ist zu wischen."

#:IFC.xml:10081
msgid "IfcExtrudedAreaSolid_Depth"
msgstr "Tiefe"

msgid "IfcExtrudedAreaSolid_Depth_DEFINITION"
msgstr "Der Abstand der Oberfläche ist entlang der ExtrudedDirection zu fegen."

#:IFC.xml:10100
msgid "IfcExtrudedAreaSolidTapered"
msgstr "IfcExtrudedAreaSolidTapered"

msgid "IfcExtrudedAreaSolidTapered_DEFINITION"
msgstr "[[IfcExtrudedAreaSolidTapered]] is defined by sweeping a cross section along a linear spine. The cross section may change along the sweep from the shape of the start cross section into the shape of the end cross section. The resulting solid is bounded by three or more faces A start face, an end face each defined by start and end planes and sections , and one or more lateral faces. Each lateral face is a ruled surface defined by a pair of corresponding edges of the start and end section. NOTE Given that the start and end section is provided by a polygon, the corresponding vertices of the start and end cross section are connected, forming a quadrilateral polygon between each pair of corresponding vertices. The surface defined by the bounding quadrilateral polygon is a ruled surface, that could be approximated by triangulation. The linear spine is defined by Start point SELF [[IfcSweptAreaSolid]].Position.Location Direction SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection Distance SELF [[IfcExtrudedAreaSolid]].Depth The start cross section is defined by SELF [[IfcSweptAreaSolid]].SweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by SELF [[IfcSweptAreaSolid]].Position.P 1 and SELF [[IfcSweptAreaSolid]].Position.P 2 The linear spine starts at the plane of the start cross section. The spine is not necessarily perpendicular to the plane. The end cross section is defined by EndSweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by translating the start position coordinates provided by SELF [[IfcSweptAreaSolid]].Position along the spine direction by the spine distance. The plane of the end cross section is coplanar to the plane of the start cross section. The end cross section is topologically similar to the start cross section i.e. having the same number of vertices and edges . The end cross section can either be defined by the same paramteric profile using different parameter values, or by a 2D Cartesian transformation of the start profile within the end cross section plane. In case of two parameterized profiles the shape is constructed as follows The end profile, defined by a cross section based on the same profile paramterization as the start profile, is translated by the spine distance along the spine direction. It may be shifted within the XY plane of the end postion coordinate system and may be twisted using the rotation parameter. The shift and rotation parameter are provided by the end cross section being of type [[IfcParameterizedProfileDef]] , where Shift is EndSweptArea [[IfcParameterizedProfileDef]].Position.Location Rotation is EndSweptArea [[IfcParameterizedProfileDef]].Position.RefDirection Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. In case of Cartesian transformation of the start cross section the shape is constructed as follows The cross section curve, which starts as a curve in the XY plane of the position coordinate system, is first scaled about the origin by the scale parameter. It is then translated by the spine distance along the spine direction. It maybe twisted by using the rotation parameter. The scale and rotation parameter are provided by the end cross section being of type [[IfcDerivedProfileDef]] , where Scale is EndSweptArea [[IfcDerivedProfileDef]].Operator.Scale Rotation is EndSweptArea [[IfcDerivedProfileDef]].Operator.Axis1 Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. HISTORY New entity in IFC4. .spec head Informal Propositions 1. Mirroring within [[IfcDerivedProfileDef]].Operator shall not be used"

#:IFC.xml:10103
msgid "IfcExtrudedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcExtrudedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "Die Oberfläche, die das Ende des gefegten Bereichs definiert, wird als Profildefinition angegeben. Das Positionskoordinatensystem des EndSwptArea wird durch die Übersetzung des SELF [[IfcSweptAreaSolid]] generiert. osition entlang der SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection durch die Entfernung von SELF [[IfcExtrudedAreaSolid]].Tiefe ."

#:IFC.xml:10115
msgid "IfcFaceBasedSurfaceModel"
msgstr "IfcFaceBasedSurfaceModel"

msgid "IfcFaceBasedSurfaceModel_DEFINITION"
msgstr "Die [[IfcFaceBasedSurfaceModel]] repräsentiert die Form durch angeschlossene Flächensätze. Die angeschlossenen Flächen haben eine Dimensionalität 2 und sind in einem Koordinatenraum der Dimensionalität 3 platziert. .extDef NOTE Definition gemäß ISO CD 10303 42 1992 Ein flächenbasiertes Oberflächenmodell wird durch einen Satz angeschlossener Gesichtersätze der Dimensionalität 2 beschrieben. Die angeschlossenen Gesichtersätze sollen sich nur an Kanten und Punkten durchschneiden, ausser dass sich ein Gesicht in einem verbundenen Gesichtersatz in einem anderen verbundenen Gesichtersatz überlappen kann, sofern die Gesichtergrenzen identisch sind. Es soll mindestens ein angeschlossenes Flächenset geben. Ein angeschlossenes Flächenset kann unabhängig vom Oberflächenmodell existieren. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. Die angeschlossenen Flächensets sollen sich nicht überlappen oder schneiden, außer bei gemeinsamen Gesichtern, Kanten oder Vertiken. .veraltete IFC4 CHANGE Die Entität wurde veraltet und sollte nicht verwendet werden. Die Entität [[IfcFacetedBrep]] soll stattdessen verwendet werden."

#:IFC.xml:10124
msgid "IfcFaceBasedSurfaceModel_FbsmFaces"
msgstr "FbsmFaces"

msgid "IfcFaceBasedSurfaceModel_FbsmFaces_DEFINITION"
msgstr "Der Satz der angeschlossenen Flächensets besteht aus dem Oberflächenmodell."

#:IFC.xml:10116
msgid "IfcFaceBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcFaceBasedSurfaceModel_Dim_DEFINITION"
msgstr "Die Raumdimensionalität dieser Klasse, sie ist immer 3."

#:IFC.xml:10136
msgid "IfcFacetedBrep"
msgstr "IfcFacetedBrep"

msgid "IfcFacetedBrep_DEFINITION"
msgstr "Das [[IfcFacetedBrep]] ist ein vielseitiger Vollbrett mit der Einschränkung, dass alle Gesichter planarer und eingegrenzter Polygone sind. HINWEISE Benutzung von [[IfcFacetedBrep]] ist nur für Randdarstellungsmodelle mit planaren Oberflächen beschränkt. Diese Oberflächen werden implizit durch die Begrenzungspolygone repräsentiert, das Diagramm zeigt die topologischen und geometrischen Darstellungsgegenstände, die für facettierte Brüste verwendet werden. Jedes [[IfcCartesianPoint]], innerhalb des [[IfcFacetedBrep]] verwendet wird, wird dreimal von einem [[IfcPolyLoop]] referenziert, der eine andere [[IfcFace]] begrenzt. Abbildung 1 Diagramm mit der Verwendung von [[IfcFacetedBrep]] . xtDef NOTE Definition nach ISO CD 10303 42 1992 Ein faceted B rep ist eine einfache Form von Grenzrepräsentation Modell, in dem alle Gesichter planar sind und alle Kanten gerade Linien sind. Im Gegensatz zum Modell B sind Kanten und Knoten nicht explizit im Modell dargestellt, sondern implizit über die Poly-Loop-Entität verfügbar. Ein facettierter B-Rep muss den gleichen topologischen Zwängen wie der vielseitige feste B-Rep begegnen. .extDef Der facettierte B-Rep wurde eingeführt, um die größere Anzahl von Systemen zu unterstützen, die eine Randtyp-feste Darstellung nur mit planaren Oberflächen erlauben. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. Alle Begrenzungsschleifen aller Flächen der Muscheln in der [[IfcFacetedBrep]] sollen vom Typ [[IfcPolyLoop]] sein. (2) Alle Knoten werden von allen Polyloopen gemeinsam mit dem Scheitelpunkt referenziert, d.h. jeder kartesische Punkt ist mindestens drei Polyloops."

#:IFC.xml:10139
msgid "IfcFacetedBrepWithVoids"
msgstr "IfcFacetedBrepWithVoids"

msgid "IfcFacetedBrepWithVoids_DEFINITION"
msgstr "Das [[IfcFacetedBrepWithVoids]] ist eine Spezialisierung auf ein facettiertes B-Rep, das eine oder mehrere Leerzeichen im Inneren enthält. Die Leerräume werden als geschlossene Schalen dargestellt, die so definiert sind, dass die Shell normal in die Leere. HISTORY New entity in IFC1.0 . hange ifc2x4 IFC4 CHANGE Subtyping geändert von [[IfcManifoldSolidBrep]] auf [[IfcFacetedBrep]] mit Upware-Kompatibilität für den Dateiaustausch. pec head Informal Propositions 1. Jede leere Schale soll von der äußeren Schale und von jeder anderen leeren Schale 2 getrennt werden. Jede leere Schale soll in die äußere Schale eingeschlossen sein, aber nicht in einer anderen leeren Schale eingeschlossen sein. Insbesondere ist die äußere Schale nicht in der Menge der Leerschalen 3. Jede Shell in der [[IfcManifoldSolidBrep]] wird nur einmal referenziert. 4. Alle Begrenzungsschleifen aller Gesichter der Muscheln in der [[IfcFacetedBrep]] sind vom Typ [[IfcPolyLoop]] ."

#:IFC.xml:10142
msgid "IfcFacetedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcFacetedBrepWithVoids_Voids_DEFINITION"
msgstr "Set von geschlossenen Muscheln, die Leerräume innerhalb des Körpers definieren."

#:IFC.xml:10154
msgid "IfcFixedReferenceSweptAreaSolid"
msgstr "IfcFixedReferenceSweptAreaSolid"

msgid "IfcFixedReferenceSweptAreaSolid_DEFINITION"
msgstr "An [[IfcFixedReferenceSweptAreaSolid]] is a type of swept area solid which is the result of sweeping an area along a Directrix . The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the start tangent of the directrix at this point, and the profile s x axis agrees to the orthogonal projection of the FixedReference direction within the plane of start tangent and Fixed Reference . The orientation of the curve during the sweeping operation is controlled by the FixedReference direction. The SweptArea is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the projection of FixedReference onto the normal plane to the directrix at this point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The resulting swept solid is placed by the Position coordinate system. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no EndParam is provided the end defaults to the end of the directrix. NOTE The StartParam and the EndParam , if provided as a parameter value, are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. NOTE In the case of a curve composed of [[IfcCurveSegment]] , the [[IfcSweptAreaSolid]] Position is dependent on the [[IfcCurveSegment]] StartPlacement and the type of BasisCurve which defines the name function between the start and end explicitly defined as the start point of the next segment points of the segment EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In many cases, it is a surface of extrusion. The directrix lies on the surface, often defined as a p curve at this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the FixedReference direction. The Axis2 the y axis, or v is constructed. In this case the resulting swept solid is not repositioned. The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a CartesianTransformationOperator3d with attributes LocalOrigin as point 0 0 0 , Axis1 as the orthogonal projection of the FixedReference onto the normal plane defined by Axis3 . Axis3 as the direction of the tangent vector t at the point of the Directrix with parameter u . The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the Directrix parameter u . NOTE The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE Entity adapted from fixed reference swept surface defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. The SweptArea shall lie in the plane z 0. 2. The FixedReference shall not be parallel to a tangent vector to the directrix at any point along this curve. 3. The Directrix curve shall be tangent continuous."

#:IFC.xml:10157
msgid "IfcFixedReferenceSweptAreaSolid_FixedReference"
msgstr "FixedReference"

msgid "IfcFixedReferenceSweptAreaSolid_FixedReference_DEFINITION"
msgstr "FixedReference"

#:IFC.xml:10169
msgid "IfcGeometricCurveSet"
msgstr "IfcGeometricCurveSet"

msgid "IfcGeometricCurveSet_DEFINITION"
msgstr "Die [[IfcGeometricCurveSet]] wird nur für den Austausch von Formendarstellungen verwendet, die aus einer Sammlung von 2D- oder 3D-Punkten und Kurven bestehen. xtDef NOTE Definition gemäß ISO CD 10303 42 1992 Ein geometrisches Kurvenset ist eine Sammlung von zwei oder drei Dimensionspunkten und Kurven. HISTORY New Entity in IFC2x2. Formale Vorschläge NoOberflächen In diesem geometrischen Set ist keine Oberfläche enthalten."

#:IFC.xml:10172
msgid "IfcGeometricSet"
msgstr "IfcGeometrie-Set"

msgid "IfcGeometricSet_DEFINITION"
msgstr "Die [[IfcGeometricSet]] wird für den Austausch von Darstellungsformen verwendet, die aus 2D- oder 3D-Punkten, Kurven und Oberflächen bestehen die keine topologische Struktur haben, wie zum Beispiel verbundene Gesichter oder Muscheln , sind nicht zesselliert und sind keine festen Modelle wie Swept Solids, CSG oder Brep . .extDef NOTE Definition von ISO CD 10303 42 Diese Einheit ist für den Transfer von Modellen gedacht, wenn eine topologische Struktur nicht verfügbar ist. HISTORY New Entity in IFC2x."

#:IFC.xml:10173
msgid "IfcGeometricSet_Dim"
msgstr "Dim"

msgid "IfcGeometricSet_Dim_DEFINITION"
msgstr "Die Raumdimensionalität dieser Klasse, sie ist identisch mit dem ersten Element des Satzes. Eine Regel, die sicherstellt, dass alle Elemente die gleiche Dimensionalität haben."

#:IFC.xml:10178
msgid "IfcGeometricSet_Elements"
msgstr "Elemente"

msgid "IfcGeometricSet_Elements_DEFINITION"
msgstr "Die geometrischen Elemente, die den geometrischen Satz ausmachen, können Punkte sein Kurven oder Oberflächen, aber müssen von der gleichen Koordinatendimensionalität sein."

#:IFC.xml:10185
msgid "IfcGeometricSetSelect"
msgstr "IfcGeometricSetauswahl"

#:IFC.xml:10186
msgid "IfcHalfSpaceSolid"
msgstr "IfcHalfSpaceSolid"

msgid "IfcHalfSpaceSolid_DEFINITION"
msgstr "Ein halber Raum massiv teilt die Domäne in zwei durch eine Grundfläche. Normalerweise Die Grundfläche ist eine Ebene und teilt den unendlichen Raum in zwei und zeigt die Seite des Halbraumes, indem man sich auf die normale Ebene einigt. Abbildung 1 illustriert die Definition des [[IfcHalfSpaceSolid]] innerhalb eines gegebenen Koordinatensystems. Die Grundfläche wird durch ein unbegrenztes Flugzeug gegeben, die rote Grenze wird nur für Visualisierungszwecke gezeigt .. .. .. .. figuren ifchalfspacesolid layout1.gif Abbildung 1 Halbraum solide Geometrie . xtDef NOTE Definition gemäß ISO CD 10303 42 1992 Ein halbes Raumkörper wird durch den Halbraum definiert, der die reguläre Teilmenge der Domäne auf einer Seite einer unbegrenzten Fläche ist. Die Seite der Oberfläche, die sich im Halbraum befindet, wird durch die normale Oberfläche und die vereinbarte Flagge bestimmt. Wenn die Einigungsflagge TRUE ist, dann ist die Untermenge, von der die normale entfernt ist. Wenn die \"Agreement\"-Flagge FALSE ist, dann ist die Untermenge, in die die normale gesetzt wird. Für einen gültigen Halbraum soll die Oberfläche die Domäne in genau zwei Untergruppen unterteilen. Auch innerhalb der Domäne soll die Oberfläche vielfältig sein und alle Oberflächennormen in die gleiche Untermenge zeigen. HINWEIS Ein halber Raum ist kein Subtyp von solidem Modell, halb Platz Festkörpern sind nur nützlich wie Operanden in booleschen Ausdrücken. HINWEISE Entität, angepasst aus Halbraummassiv, definiert in ISO 10303 42. HISTORY New entity in IFC1.5 .spec head Informal Propositions 1. Die Grundfläche soll die Domäne in genau zwei Untergruppen unterteilen. Wenn der Festwert des halben Platzhalters von einem untertypisierten halben Platz [[IfcBoxedHalfSpace]] ist, ist die betreffende Domäne die des Attributgehäuses. In allen anderen Fällen ist die Domäne nur Platz und die Grundfläche ist unbegrenzt. 2. Die Grundfläche soll ein unbegrenzter Untergrund von [[IfcElementarySurface]] sein."

#:IFC.xml:10200
msgid "IfcHalfSpaceSolid_BaseSurface"
msgstr "Grundfläche"

msgid "IfcHalfSpaceSolid_BaseSurface_DEFINITION"
msgstr "Oberfläche definiert Seite des Halbraums."

#:IFC.xml:10187
msgid "IfcHalfSpaceSolid_Dim"
msgstr "Dim"

msgid "IfcHalfSpaceSolid_Dim_DEFINITION"
msgstr "Die Raumdimensionalität dieser Klasse, sie ist immer 3"

#:IFC.xml:10192
msgid "IfcHalfSpaceSolid_AgreementFlag"
msgstr "Übereinstimmungsflagge"

msgid "IfcHalfSpaceSolid_AgreementFlag_DEFINITION"
msgstr "Die Einigungsflagge ist TRUE, wenn die Normale zur BaseSurface vom Material des [[IfcHalfSpaceSolid]] entfernt ist. Sonst ist sie FALSE."

#:IFC.xml:10212
msgid "IfcIndexedPolygonalFace"
msgstr "IfcIndexedPolygonalFace"

msgid "IfcIndexedPolygonalFace_DEFINITION"
msgstr "Die [[IfcIndexedPolygonalFace]] ist eine kompakte Darstellung einer flachen Fläche als Teil eines Gesichtersatzes. Die Eckpunkte der polygonalen Ebenenfläche werden mit 3 oder mehr kartesischen Punkten versorgt definiert durch Indizes , die in eine [[IfcCartesianPointList3D]] , entweder direkt oder über den PnIndex , falls angegeben unter [[IfcPolygonalFaceSet]] . Abbildung 1 zeigt einen [[IfcIndexedPolygonalFace]] bei einem [[IfcPolygonalFaceSet]] an, der PnIndex nicht als Standard verwendet. [[IfcIndexedPolygonalFace]] .. .. .. Zahlen ifcindexedpolygonalface 01. ng Abbildung 1 Polygonale Gesichtsgeometrie, die von Indizes in eine Punkteliste aufgenommen wird, zeigt eine [[IfcIndexedPolygonalFace]] in einem [[IfcPolygonalFaceSet]] unter Verwendung von PnIndex . [[IfcIndexedPolygonalFace]] uns ing PnIndex .. .. .. Zahlen ifcindexedpolygonalface 02. ng Abbildung 2 Polygonale Gesichtsgeometrie von Indizes in eine Punkteliste HISTORY Neue Entität in IFC4 Addendum 2."

#:IFC.xml:10220
msgid "IfcIndexedPolygonalFace_ToFaceSet"
msgstr "ToFaceSet"

msgid "IfcIndexedPolygonalFace_ToFaceSet_DEFINITION"
msgstr "Referenz auf das [[IfcPolygonalFaceSet]], für das dieses Gesicht zugeordnet ist."

#:IFC.xml:10213
msgid "IfcIndexedPolygonalFace_CoordIndex"
msgstr "CoordIndex"

msgid "IfcIndexedPolygonalFace_CoordIndex_DEFINITION"
msgstr "Eine dimensionale Liste mit den Indizes für die drei oder mehr Punkte, die die Knoten der äußeren Schleife definieren. Wenn der gestreckte Gesichtssatz geschlossen ist, wird durch SELF [[IfcTessellatedFaceSet]] angezeigt. verloren , dann werden die Punkte, die die äußere Schleife definieren, gegen den Uhrzeigersinn verbinden wie von der Außenseite des Körpers gesehen, so dass die daraus resultierende Normalität nach außen zeigt. HINWEIS Die Koordinaten der Knoten werden von der indizierten Liste von SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList bereitgestellt. Wenn der SELF [[IfcTessellatedFaceSet]].PnIndex zur Verfügung gestellt wird, verweisen die Indizes darauf, ansonsten direkt in die [[IfcCartesianPointList3D]] ."

#:IFC.xml:10234
msgid "IfcIndexedPolygonalFaceWithVoids"
msgstr "IfcIndexedPolygonalFaceWithVoids"

msgid "IfcIndexedPolygonalFaceWithVoids_DEFINITION"
msgstr "Das [[IfcIndexedPolygonalFaceWithVoids]] ist eine kompakte Darstellung einer flachen Fläche mit inneren Schleifen, die Teil eines Gesichtssatzes ist. GESCHICHTE Neue Entität in IFC4 Addendum 2."

#:IFC.xml:10235
msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices"
msgstr "InnerCoordIndizes"

msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices_DEFINITION"
msgstr "Zwei-dimensionale Liste wobei die erste Dimension jede innere Schleife von 1 bis N repräsentiert und die zweite Dimension die Indizes zu drei oder mehr Punkten, die die Eckpunkte jeder inneren Schleife definieren. Wenn der gestreckte Gesichtssatz geschlossen ist, wird durch SELF [[IfcTessellatedFaceSet]] angezeigt. verloren , dann die Punkte, die die inneren Schleifen definieren, werden im Uhrzeigersinn, wie von der Außenseite des Körpers zu sehen. HINWEIS Die Koordinaten der Knoten werden von der indizierten Liste der SELF [[IfcTessellatedFaceSet]] bereitgestellt. oordinates.CoordList . Wenn der SELF [[IfcTessellatedFaceSet]].PnIndex zur Verfügung gestellt wird, verweisen die Indizes darauf, ansonsten direkt in die [[IfcCartesianPointList3D]] ."

#:IFC.xml:10242
msgid "IfcManifoldSolidBrep"
msgstr "IfcManifoldSolidBrep"

msgid "IfcManifoldSolidBrep_DEFINITION"
msgstr "The [[IfcManifoldSolidBrep]] is a solid represented as a collection of connected surfaces that delimit the solid from the surrounding non solid. Instances of type [[IfcManifoldSolidBrep]] shall be of type [[IfcFacetedBrep]] , using only [[IfcPolyLoop]] for the bounds of [[IfcFaceBound]] , or of type [[IfcAdvancedBrep]] , using only [[IfcAdvancedFace]] for the face geometry, and [[IfcEdgeCurve]] for the edges. .extDef NOTE Definition according to ISO CD 10303 42 1992 A manifold solid b rep is a finite, arcwise connected volume bounded by one or more surfaces, each of which is a connected, oriented, finite, closed 2 manifold. There is no restriction on the genus of the volume, nor on the number of voids within the volume. The Boundary Representation B rep of a manifold solid utilizes a graph of edges and vertices embedded in a connected, oriented, finite, closed two manifold surface. The embedded graph divides the surface into arcwise connected areas known as faces. The edges and vertices, therefore, form the boundaries of the face and the domain of a face does not include its boundaries. The embedded graph may be disconnected and may be a pseudo graph. The graph is labeled that is, each entity in the graph has a unique identity. The geometric surface definition used to specify the geometry of a face shall be 2 manifold embeddable in the plane within the domain of the face. In other words, it shall be connected, oriented, finite, non self intersecting, and of surface genus 0. Faces do not intersect except along their boundaries. Each edge along the boundary of a face is shared by at most one other face in the assemblage. The assemblage of edges in the B rep do not intersect except at their boundaries i.e., vertices . The geometry curve definition used to specify the geometry of an edge shall be arcwise connected and shall not self intersect or overlap within the domain of the edge. The geometry of an edge shall be consistent with the geometry of the faces of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. A B rep is represented by one or more closed shells which shall be disjoint. One shell, the outer, shall completely enclose all the other shells and no other shell may enclose a shell. The facility to define a B rep with one or more internal voids is provided by a subtype. The following version of the Euler formula shall be satisfied, math .. .. .. .. figures ifcmanifoldsolidbrep math1.gif where V, E, F, L l and S are the numbers of unique vertices, edges, faces, loop uses and shells in the model and G s is the sum of the genus of the shells. NOTE Entity adapted from manifold solid brep defined in ISO 10303 42. HISTORY New entity in IFC Release 1.0 Informal proposition 1. The dimensionality of a manifold solid brep shall be 3. 2. The extent of the manifold solid brep shall be finite and non zero. 3. All elements of the manifold solid brep shall have defined associated geometry. 4. The shell normals shall agree with the B rep normal and point away from the solid represented by the B rep. 5. Each face shall be referenced only once by the shells of the manifold solid brep. 6. The Euler equation shall be satisfied for the boundary representation, where the genus term shell term us the sum of the genus values for the shells of the brep."

#:IFC.xml:10245
msgid "IfcManifoldSolidBrep_Outer"
msgstr "Äußere"

msgid "IfcManifoldSolidBrep_Outer_DEFINITION"
msgstr "Eine geschlossene Schale, die die Außengrenze des Festkörpers definiert."

#:IFC.xml:10257
msgid "IfcPointListDim__PointList"
msgstr "IfcPointListDim PointList"

#:IFC.xml:10265
msgid "IfcPolygonalBoundedHalfSpace"
msgstr "IfcPolygonalBoundHalfSpace"

msgid "IfcPolygonalBoundedHalfSpace_DEFINITION"
msgstr "The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary. The base surface of the half space is positioned by its normal relative to the object coordinate system as defined at the supertype [[IfcHalfSpaceSolid]] , and its polygonal with or without arc segments boundary is defined in the XY plane of the position coordinate system established by the Position attribute, the subtraction body is extruded perpendicular to the XY plane of the position coordinate system, that is, into the direction of the positive Z axis defined by the Position attribute. The boundary is defined by a 2 dimensional polyline or 2 dimensional composite curve, consisting of straight segments and circular arc segments within the XY plane of the position coordinate system. The side of the surface which is in the half space is determined by the surface normal and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normal points away from. If the agreement flag is FALSE, then the subset is the one the normal points into. NOTE A polygonal bounded half space is not a subtype of [[IfcSolidModel]] , half space solids are only useful as operands in Boolean expressions. Figure 1 illustrates a polygonal bounded half space. Black coordinates indicate the object coordinate system usually provided by [[IfcLocalPlacement]] . Green coordinates indicate the position coordinate system the PolygonalBoundary is given within this coordinate system. It is provided by [[IfcPolygonalBoundedHalfSpace]].Position. This coordinate system is relative to the object coordinate system. The extrusion direction of the subtraction body is the positive Z axis. Red coordinates indicate the normal of the plane. It is provided by the BaseSurface [[IfcSurface]].Position . This normal is also relative to the object coordinate system. Figure 1 Polygonal half space geometry The polygonal bounded half space is used to limit the volume of the half space in Boolean difference expressions. Only the part that is defined by a theoretical intersection between the half space solid and an extruded area solid, defined by extruding the polygonal boundary, is used for Boolean expressions. The PolygonalBoundary defines the 2D polyline which bounds the effectiveness of the half space in Boolean expressions. The BaseSurface is defined by a plane, and the normal of the plane together with the AgreementFlag defines the side of the material of the half space. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The [[IfcPolyline]] or the [[IfcCompositeCurve]] providing the PolygonalBoundary shall be closed. 2. If the PolygonalBoundary is given by an [[IfcCompositeCurve]] , it shall only have [[IfcCompositeCurveSegment]] s of type [[IfcPolyline]] , or [[IfcTrimmedCurve]] having a BasisCurve of type [[IfcLine]] , or [[IfcCircle]] 3. The BaseSurface defined at supertype [[IfcHalfSpaceSolid]] shall be of type [[IfcPlane]] 4. The normal of the plane, being the BaseSurface , shall not be perpendicular to the z axis of the position coordinate system"

#:IFC.xml:10268
msgid "IfcPolygonalBoundedHalfSpace_Position"
msgstr "Pset_ActuatorPHistory_Position"

msgid "IfcPolygonalBoundedHalfSpace_Position_DEFINITION"
msgstr "Definition des Positionskoordinatensystems für die Begrenzungspoline und die Grundfläche ."

#:IFC.xml:10280
msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary"
msgstr "Polygonalgrenze"

msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary_DEFINITION"
msgstr "Die in der xy- Ebene des Positionskoordinatensystems definierte zweidimensionale eingegrenzte Polylinienkurve . hange ifc2x3 IFC2x3 CHANGE Der Attributtyp wurde von [[IfcPolyline]] auf seinen Supertyp [[IfcBoundedCurve]] mit Upware-Kompatibilität für den Dateiaustausch geändert."

#:IFC.xml:10292
msgid "IfcPolygonalFaceSet"
msgstr "IfcPolygonalFaceSet"

msgid "IfcPolygonalFaceSet_DEFINITION"
msgstr "The [[IfcPolygonalFaceSet]] is a tessellated face set with all faces being bound by polygons. The planar faces are constructed by implicit polylines defined by three or more Cartesian points. Each planar face is defined by an instance of [[IfcIndexedPolygonalFace]] , or in case of faces with inner loops by [[IfcIndexedPolygonalFaceWithVoids]] . Depending on the value of the attribute Closed the instance of [[IfcPolygonalFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The attribute Faces refers to a list of [[IfcIndexedPolygonalFace]] s having an one based CoordIndex that provides three or more indices. If the face has inner loops, the [[IfcIndexedPolygonalFaceWithVoids]] has a two dimensional, one based list, where the first dimension of the two dimensional list addresses the list of inner loops the second dimension of the two dimensional list provides three or more indices each being a vertex of the planar polygon representing the inner loop. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifcpolygonalfaceset 01.png Figure 1 Use of PnIndex NOTE If the [[IfcPolygonalFaceSet]] is closed, the face vertices of the [[IfcIndexedPolygonalFace]] s shall connect counterclock wise when seen from the outside of the closed shell to guarantee that the face normal points away from the material of the shell. Inner loops, provided by the [[IfcIndexedPolygonalFaceWithVoids]] , shall connect clock wise. Figure 2 shows an IfcFacetedFaceSet represented by 1 [[IfcIndexedPolygonalFace]] 1, 2, 3, 4 2 [[IfcIndexedPolygonalFace]] 6, 2, 3, 7 3 [[IfcIndexedPolygonalFace]] 7, 3, 4, 8 4 [[IfcIndexedPolygonalFace]] 8, 4, 1, 5 5 [[IfcIndexedPolygonalFace]] 1, 4, 3, 2 6 [[IfcIndexedPolygonalFace]] 6, 7, 8, 5 7 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 2 Polygonal face set geometry NOTE The definition of IfcFacetedFaceSet is based on the indexedFaceSet defined in ISO IEC 19775 1 HISTORY New entity in IFC4 Addendum 2. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two outer or inner boundaries of faces the topological normal at each point on the boundary of the polygonal face set shall point away from the material of the solid."

#:IFC.xml:10220
msgid "IfcPolygonalFaceSet_Faces"
msgstr "Gesicht"

msgid "IfcPolygonalFaceSet_Faces_DEFINITION"
msgstr "Die Liste der polygonalen Gesichter, mit oder ohne Innenschleifen, die das facettierte Gesichtsfeld binden."

#:IFC.xml:10293
msgid "IfcPolygonalFaceSet_Closed"
msgstr "Geschlossen"

msgid "IfcPolygonalFaceSet_Closed_DEFINITION"
msgstr "Gibt an, ob die [[IfcPolygonalFaceSet]] eine geschlossene Shell ist oder nicht. Wenn keine solchen Informationen angegeben werden können."

#:IFC.xml:10298
msgid "IfcPolygonalFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcPolygonalFaceSet_PnIndex_DEFINITION"
msgstr "Die Liste der Integer, die die Positionen im [[IfcCartesianPointList3D]] definieren, um die Punktkoordinaten für die Indizes an den indizierten polygonalen Flächen zu erhalten. Wenn der PnIndex nicht zur Verfügung gestellt wird, zeigen die Indizes an den indizierten polygonalen Flächen direkt in die [[IfcCartesianPointList3D]] ."

#:IFC.xml:10305
msgid "IfcRectangularPyramid"
msgstr "IfcRectangularPyramide"

msgid "IfcRectangularPyramid_DEFINITION"
msgstr "Die [[IfcRectangularPyramid]] ist ein Bau-Solid Geometry CSG 3D primitiv. Es ist ein fester mit einer rechteckigen Basis und einem Punkt namens Spitze als oben. Die Achse von der Basis bis zur Spitze ist senkrecht zur Unterseite ausgerichtet. Das geerbte Positionsattribut definiert das IfcAxisPlacement3D und gibt die Position und Ausrichtung der Pyramide SELF [[IfcCsgPrimitive3D]]. osition Die Position und Ausrichtung des Achsensystems für das primitive. SELF [[IfcCsgPrimitive3D]]. Osition.Location The center of the circular area being the bottom face of the cone. SELF [[IfcCsgPrimitive3D]].Position. osition 3 Die z-Achse des vererbten Koordinatensystems liefert die Mittelachse der [[IfcRightCircularCone]] , und der Spitzenwert wird auf die positive Richtung der Z-Achse angewendet. Der BottomRadius definiert die kreisförmige Basis auf der xyebene des Platzierung Koordinatensystems. Wie in Abbildung 1 dargestellt, ist die Pyramide innerhalb ihres eigenen Positionierungskoordinatensystems positioniert. Der Ursprung ist das Zentrum des unteren Rechtecks, das in der XY-Ebene liegt. Die Spitze liegt auf der positiven Z-Achse bei 0, Höhe .. .. figuren ifcrectangularpyramid layout1.png Figure 1 Rechteckige Pyramidengeometrie GESCHICHTE Neue Entität in IFC2x3 . se Kopf Textur verwenden Definition Auf jeder dreieckigen Seite Gesichter, Texturen sind ausgerichtet nach aufrecht ausgerichtet. Texturen werden gestreckt oder wiederholt in den Umfang der Basis der einzelnen Gesichter nach RepeatS. Texturen werden gestreckt oder wiederholt in Richtung des oberen Punktes nach Wiederholen T, wo der obere Punkt hat Koordinaten von 0,5,1,0 wenn RepeatT ist false. Auf der Unterseite sind die Texturen nach vorne nach hinten ausgerichtet. Abbildung 2 zeigt die Standardtextur-Zuordnung mit einer Klemmtextur RepeatS False und RepeatT False . Das Bild auf der linken Seite zeigt die Textur, wo die S Achse nach rechts und die T Achse nach oben zeigt. Das Bild auf der rechten Seite zeigt die Textur, die auf die Geometrie angewendet wird, wobei die X-Achse nach rechts zeigt die Y-Achse nach links und die Z-Achse nach oben zeigt. ridtable Normal Origin X Ursprung Y Origin Z S Achse T Achse Linke X 0 YLength 0 Y Richtung oberster Punkt Rechte X Xlength 0 Y Richtung Oberpunkt Front Y 0 0 0 0 X Richtung Oberpunkt Y XLength YLength 0 X Richtung oberster Punkt Z XLength 0 0 X Y Figure 2 Rechteckige Pyramidentexturen"

#:IFC.xml:10306
msgid "IfcRectangularPyramid_Height"
msgstr "Höhe"

msgid "IfcRectangularPyramid_Height_DEFINITION"
msgstr "Die Höhe der Spitze über der Basisebene, gemessen in Richtung der Platzierung Z-Achse, SELF [[IfcCsgPrimitive3D]]. osition.P 2 ."

#:IFC.xml:10311
msgid "IfcRectangularPyramid_XLength"
msgstr "XL-Länge"

msgid "IfcRectangularPyramid_XLength_DEFINITION"
msgstr "Die Länge der Basis, die entlang der Platzierung X-Achse gemessen wird. Sie wird von der geerbten Achsenplatzierung durch SELF [[IfcCsgPrimitive3D]].Position.P 1 bereitgestellt."

#:IFC.xml:10316
msgid "IfcRectangularPyramid_YLength"
msgstr "Länge"

msgid "IfcRectangularPyramid_YLength_DEFINITION"
msgstr "Die Länge der Basis, die entlang der Platzierung Y-Achse gemessen wird. Sie wird von der geerbten Achsenplatzierung durch SELF [[IfcCsgPrimitive3D]].Position.P 2 bereitgestellt."

#:IFC.xml:10323
msgid "IfcRevolvedAreaSolid"
msgstr "IfcRevolvedAreaSolid"

msgid "IfcRevolvedAreaSolid_DEFINITION"
msgstr "An [[IfcRevolvedAreaSolid]] is a solid created by revolving a cross section provided by a profile definition about an axis. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the revolved solid. If not provided, it defaults to the current object coordinate system. The axis and the cross section shall be in the same plane, prior to any repositioning. NOTE Both the axis and the cross section are required to lie in the xy plane of the object position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the revolved solid. The revolved area solid defines the revolution of a 2D area given by a profile definition by an axis and angle. The result is a solid. The swept area is given by a profile definition. The profile is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. The AxisLine can have any orientation within the XY plane, it does not have to be parallel to the y axis as shown in the illustration. Figure 1 Revolved area solid geometry EXAMPLE Figure 1 illustrates geometric parameters and additional positioning parameters of the revolved area solid. The revolved area solid defines the rotation of a 2D area by an axis and angle. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the x axis. Figure 2 Repositioned revolved area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A revolved area solid is a solid formed by revolving a planar bounded surface about an axis. The axis shall be in the plane of the surface and the axis shall not intersect the interior of the bounded surface. The bounded surface may have holes which will sweep into holes in the solid. The direction of revolution is clockwise when viewed along the axis in the positive direction. More precisely if A is the axis location and d is the axis direction and C is an arc on the surface of revolution generated by an arbitrary point p on the boundary of the swept area, then C leaves p in direction d x p A as the area is revolved. NOTE Entity adapted from revolved area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .spec head Informal Propositions 1. The AxisLine shall lie in the plane of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 2. The AxisLine shall not intersect the interior of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 3. The Angle shall be between 0 and 360 , or 0 and 2π depending on the unit type for [[IfcPlaneAngleMeasure]] . .use head Texture Use Definition For side faces, textures are aligned facing upright along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the outermost longest revolution path according to RepeatT , where coordinates are compressed towards the axis of revolution. For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcRevolvedAreaSolid]] having a profile of [[IfcTShapeProfileDef]] and revolved at 22.5 degrees, the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth . Figure 3 Revolved area solid textures"

#:IFC.xml:10335
msgid "IfcRevolvedAreaSolid_Axis"
msgstr "Achse"

msgid "IfcRevolvedAreaSolid_Axis_DEFINITION"
msgstr "Achse, welche Revolution stattfinden wird."

#:IFC.xml:10324
msgid "IfcRevolvedAreaSolid_AxisLine"
msgstr "AxisLine"

msgid "IfcRevolvedAreaSolid_AxisLine_DEFINITION"
msgstr "Die Linie der Achse der Revolution."

#:IFC.xml:10328
msgid "IfcRevolvedAreaSolid_Angle"
msgstr "Winkel"

msgid "IfcRevolvedAreaSolid_Angle_DEFINITION"
msgstr "Der Winkel, durch den der Sweep gemacht wird. Dieser Winkel wird von der Ebene des gepeitschten Bereichs gemessen, die von der XY-Ebene des Positionskoordinatensystems zur Verfügung gestellt wird."

#:IFC.xml:10347
msgid "IfcRevolvedAreaSolidTapered"
msgstr "IfcRevolvedAreaSolidTapered"

msgid "IfcRevolvedAreaSolidTapered_DEFINITION"
msgstr "[[IfcRevolvedAreaSolidTapered]] wird durch Drehen eines Querschnitts entlang eines Kreisbogens definiert. Der Querschnitt kann entlang der Drehung von der Form des Startkreuzes in die Form des Endquerschnitts wechseln. Entsprechende Punkte des Start- und Endabschnitts werden dann miteinander verbunden. Die eingegrenzte Oberfläche kann Löcher haben, die sich in Löcher im Feststoff einfügen. Die Drehachse wird durch Startpunkt SELF [[IfcSweptAreaSolid]] definiert. osition.Standortrichtung SELF [[IfcRevolvedAreaSolid]].Achsendrehung SELF [[IfcRevolvedAreaSolid]]. xisLine , erstellt aus Startpunkt und Richtung durch Auftragen einer 1 Einheit Magnitude. Positive Winkel werden im Uhrzeigersinn angewendet, wenn man in die positive Richtung der Rotationsachse schaut. Der Querschnitt wird durch SELF [[IfcSweptAreaSolid]] definiert. weptArea A begrenzte planare Oberfläche liegt in der XY-Ebene des von SELF definierten Positionskoordinatensystems [[IfcSweptAreaSolid]]. osition.P 1 und SELF [[IfcSweptAreaSolid]]. osition.P 2 Die Rotationsachse liegt in der Ebene des Startkreuzes, soll aber nicht das Innere des Startkreuzabschnitts überschreiten. Der Endquerschnitt wird durch EndSweptArea A definiert, der in der XY-Ebene des Koordinatensystems durch Drehen der von SELF angegebenen Startpositionskoordinaten [[IfcSweptAreaSolid]] liegt. osition um die Rotationsachse durch den Winkel von SELF [[IfcRevolvedAreaSolid]].Winkel . Der Endquerschnitt ist topologisch ähnlich wie der Startquerschnitt mit der gleichen Anzahl von Knoten und Kanten . Der Endquerschnitt kann entweder durch das gleiche paramterische Profil mit verschiedenen Parameterwerten definiert werden oder durch eine 2D kartesische Transformation des Startprofils innerhalb der Endebene. Der Vollkorn wird durch Umwandlung des Startkreuzabschnitts in einen Querschnitt erzeugt. Ein Start- und Endfeld, jeweils durch Start- und Endquerschnitte und ein oder mehrere seitliche Gesichter definiert. Jedes seitliche Gesicht ist eine regulierte Oberfläche, die durch ein Paar von entsprechenden Kanten des Start- und Endabschnitts definiert wird. Die beherrscht Oberflächen sind im zylindrischen Koordinatenraum konstruiert, der vom Supertyp [[IfcRevolvedAreaSolid]] definiert ist. GESCHICHTE Neue Entität in IFC4. .spec Kopf Informelle Vorschläge 1. Spiegeln innerhalb [[IfcDerivedProfileDef]].Operator darf nicht verwendet werden"

#:IFC.xml:10350
msgid "IfcRevolvedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcRevolvedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "EndSweptArea"

#:IFC.xml:10362
msgid "IfcRightCircularCone"
msgstr "IfcRightCircularCone"

msgid "IfcRightCircularCone_DEFINITION"
msgstr "Die [[IfcRightCircularCone]] ist ein Bau-Solid Geometry CSG 3D primitiv. Es ist ein fester mit einer kreisförmigen Basis und einem Punkt namens Spitze als oben. Die Achse von der Basis bis zur Spitze ist senkrecht zur Unterseite ausgerichtet. Das geerbte Positionsattribut definiert das IfcAxisPlacement3D und gibt die Position und Ausrichtung des Kegels SELF [[IfcCsgPrimitive3D]]. osition Die Position und Ausrichtung des Achsensystems für das primitive. SELF [[IfcCsgPrimitive3D]]. Osition.Location The center of the circular area being the bottom face of the cone. SELF [[IfcCsgPrimitive3D]].Position. osition 3 Die z-Achse des vererbten Koordinatensystems liefert die Mittelachse der [[IfcRightCircularCone]] , und der Spitzenwert wird auf die positive Richtung der Z-Achse angewendet. Der BottomRadius definiert die kreisförmige Basis auf der xyebene des Platzierung Koordinatensystems. Abbildung 1 illustriert geometrische Parameter des Kegels. Der Ursprung ist das Zentrum der unteren kreisförmigen Scheibe, die in der XY-Ebene liegt. Die Spitze liegt auf der positiven Z-Achse bei 0, Höhe .. .. figuren ifcrightcircularcone layout1. Ng Abbildung 1 Rechtes Rundkegelgeometrie NOTE Entity angepasst aus rechtem Rundkegel definiert in ISO 10303 42. se head Texture Definition Auf der kreisförmigen Seite sind Texturen ausgerichtet mit dem Ursprung auf der Rückseite Y Richtung drehen gegen den Uhrzeigersinn. Texturen werden gestreckt oder im Umfang des Grundumfangs nach RepeatS wiederholt. Texturen sind komprimiert linear nach oben nach oben nach oben nach RepeatT. Auf der Unterseite sind Texturen nach vorne nach hinten ausgerichtet, wobei die Mitte des Kreises zur Mitte der Textur ausgerichtet ist. Abbildung 2 zeigt die Standardtextur-Zuordnung mit einer Klemmtextur RepeatS False und RepeatT False . Das Bild auf der linken Seite zeigt die Textur, wo die S Achse nach rechts und die T Achse nach oben zeigt. Das Bild auf der rechten Seite zeigt die Textur, die auf die Geometrie angewendet wird, wobei die X-Achse nach rechts zeigt die Y-Achse nach links und die Z-Achse nach oben zeigt. .gridtable Normal Origin X Ursprung Y Origin Z S Achse T Achse Y 0 Radius 0 X Richtung oberster Punkt Radius 0 X Radius 0 X Y Abbildung 2 Rechter Kreiskegel Texturen"

#:IFC.xml:10363
msgid "IfcRightCircularCone_BottomRadius"
msgstr "Unterer Radius"

msgid "IfcRightCircularCone_BottomRadius_DEFINITION"
msgstr "Der Radius des Kegels an der Basis."

#:IFC.xml:10368
msgid "IfcRightCircularCone_Height"
msgstr "Höhe"

msgid "IfcRightCircularCone_Height_DEFINITION"
msgstr "Der Abstand zwischen der Unterseite des Kegels und der Spitze."

#:IFC.xml:10375
msgid "IfcRightCircularCylinder"
msgstr "IfcRightCircularCylinder"

msgid "IfcRightCircularCylinder_DEFINITION"
msgstr "The [[IfcRightCircularCylinder]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a circular base and top. The cylindrical surface between if formed by points at a fixed distance from the axis of the cylinder. The inherited Position attribute defines the IfcAxisPlacement3D and provides SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cylinder. SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis provides the center axis and the height is measured from the origin along the positive direction of the z axis. Figure 1 illustrates geometric parameters of the cylinder. The cylinder is positioned within its own placement coordiante system. The origin is the center of the bottom circular disk, that lies in the XY plane. The center of the top circular disk is on the positive z axis at 0, 0, Height . cylinder .. .. .. .. figures ifcrightcircularcylinder layout1.png Figure 1 Right circular cylinder geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A right circular cylinder is a CSG primitive in the form of a solid cylinder of finite height. It is defined by an axis point at the centre of one planar circular face, an axis, a height, and a radius. The faces are perpendicular to the axis and are circular discs with the specified radius. The height is the distance from the first circular face centre in the positive direction of the axis to the second circular face centre. NOTE Entity adapted from right circular cylinder defined in ISO 10303 42. HISTORY New entity in IFC2x3. .use head Texture use definition On the circular side, textures are aligned facing upright with origin at the back Y direction revolving counter clockwise. Textures are stretched or repeated to the extent of the circumference according to RepeatS. Textures are stretched or repeated to the extent of the Height according to RepeatT. On the top and bottom faces, textures are aligned facing front to back, with the center of the circle aligned to the center of the texture. Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Side Y 0 Radius 0 X Z Bottom Z Radius Radius 0 X Y Top Z Radius Radius Height X Y Figure 2 Right circular cylinder textures"

#:IFC.xml:10376
msgid "IfcRightCircularCylinder_Height"
msgstr "Höhe"

msgid "IfcRightCircularCylinder_Height_DEFINITION"
msgstr "Der Abstand zwischen den planaren Kreisflächen des Zylinders."

#:IFC.xml:10381
msgid "IfcRightCircularCylinder_Radius"
msgstr "Radius"

msgid "IfcRightCircularCylinder_Radius_DEFINITION"
msgstr "Der Radius des Zylinders."

#:IFC.xml:10388
msgid "IfcSectionedSolid"
msgstr "IfcSectionedSolid"

msgid "IfcSectionedSolid_DEFINITION"
msgstr "Ein [[IfcSectionedSolid]] ist ein abstrakter Basistyp für Feststoffe, der durch das Umkehren potenziell variabler Querschnitte entlang eines Direktoriums konstruiert wird."

#:IFC.xml:10391
msgid "IfcSectionedSolid_Directrix"
msgstr "Directrix"

msgid "IfcSectionedSolid_Directrix_DEFINITION"
msgstr "Die Kurve definiert den Kehrvorgang."

#:IFC.xml:10403
msgid "IfcSectionedSolid_CrossSections"
msgstr "Querschnitte"

msgid "IfcSectionedSolid_CrossSections_DEFINITION"
msgstr "Liste der Querschnitte in sequentieller Reihenfolge entlang der Directrix ."

#:IFC.xml:10415
msgid "IfcSectionedSolidHorizontal"
msgstr "IfcSectionedSolidHorizontal"

msgid "IfcSectionedSolidHorizontal_DEFINITION"
msgstr "Ein [[IfcSectionedSolidHorizontal]] ist ein solides Modell, das durch das Kehren potenziell variabler Querschnitte horizontal entlang einer Kurve konstruiert wird. Der Vollkorn wird durch das Umkehren der Querschnitte zwischen Querschnittspositionen mit linearer Interpolation der Profilpunkte generiert wobei das Profil normal mit dem Tangent der Directrix übereinstimmt, die Profil-X-Achse ist senkrecht nach links vom Directrix ausgerichtet wie LateralOffset bei [[IfcPointByDistanceExpression]] wie nach vorne entlang des Directrix, und die Y-Achse ist nach oben nach FixedAxisVertical ausgerichtet. Für Abschnitte mit Querschnitt gedreht nach einer einzigen Superhöhe, [[IfcDerivedProfileDef]] kann verwendet werden, um eine solche Rotation mit jedem ParentProfil anzugeben, das auf das gleiche zugrunde liegende Profil verweist. Für Abschnitte mit Querschnitt nach mehreren Superhöhen mit unabhängig voneinander unterschiedlichen Punkten, Jedes Profil kann von einer anderen Instanz sein, aber von demselben Typ wie z. [[IfcArbitraryClosedProfileDef]] und kann optional Querschnittspunkte für Leitlinienkurven mit [[IfcIndexedPolyCurve]] mit IfcCartesianPointList2DLabelled haben. Abbildung 1 illustriert vier Gitter einer Brücke mit einem konstanten parametrierten Profil, zwei Wächter mit einem konstanten willkürlichen Profil, eines von ihnen gespiegelt , und ein Brückendeck mit einem variablen beliebigen Profil. räumliche Struktur .. .. .. Zahlen ifcsectionedsolidhorizontal.png Abbildung 1 Abgeschnittene horizontale horizontale Vorschläge 1. 2. Wenn der Typ der Abschnitte nicht [[IfcParameterizedProfileDef]] ist, d.h. ein willkürliches Profil , dann sollte die Anzahl der Punkte und Kanten für zwei aufeinander folgende Profile gleich sein. Wenn die Direktrix nicht ständig tangiert wird, wird das Ergebnis durch einen miter mit Halbwinkel zwischen den beiden Segmenten erzeugt. 4. Sehr scharfe Kanten können dazu führen, dass nahezu unmögliche Durchführungsverträge akzeptable Grenzwerte für tangierte Diskontinuität festlegen können oder verlangen, dass der Direktorium ständig tangent ist. 5. Das Direktorium überschreitet nicht"

#:IFC.xml:10418
msgid "IfcSectionedSolidHorizontal_CrossSectionPositions"
msgstr "Querschnittspositionen"

msgid "IfcSectionedSolidHorizontal_CrossSectionPositions_DEFINITION"
msgstr "Liste der Distanzausdrücke in Folge steigender Reihenfolge, gepaart mit CrossSections , zeigt die Position des entsprechenden Abschnitts entlang der Directrix ."

#:IFC.xml:10430
msgid "IfcSectionedSpine"
msgstr "IfcSectionedSpine"

msgid "IfcSectionedSpine_DEFINITION"
msgstr "An [[IfcSectionedSpine]] is a representation of the shape of a three dimensional object composed by a number of planar cross sections, and a spine curve. The shape is defined between the first element of cross sections and the last element of the cross sections. A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. All cross sections have to define areas by a closed profile to allow for the representation of a solid. All cross sections have to define curves by an open or closed profile to allow for the representation of a surface. The cross sections are defined by subtypes of [[IfcProfileDef]] , where the consecutive profiles may be derived by a transformation of the start profile or the previous consecutive profile. The spine curve shall be of type [[IfcCompositeCurve]] , each of its segments represented by [[IfcCompositeCurveSegment]] shall correspond to the part between exactly two consecutive cross sections. Figure 1 illustrates an example of an [[IfcSectionedSpine]] . The SpineCurve is given by an [[IfcCompositeCurve]] with two Segments . The Segments 1 has a ParentCurve of type [[IfcPolyline]] and a Transition CONTSAMEGRADIENT. The Segments 2 has a ParentCurve of type [[IfcTrimmedCurve]] and a Transition DISCONTINUOUS. Each CrossSectionPosition lies at a start or end point of the Segments . Each CrossSections are inserted by the CrossSectionPositions . The first two cross sections are of type [[IfcRectangleProfileDef]] , the third is of type [[IfcDerivedProfileDef]] . spine 1 .. .. .. .. figures ifcsectionedspine layout1.gif Figure 1 Sectioned spine geometry Figure 2 illustrates the final result of the [[IfcSectionedSpine]] . The body shown transparently is not fully defined by the exchange definition. render .. .. .. .. figures ifcsectionedspine.jpg Figure 2 Sectioned spine result .extDef NOTE Definition according to ISO CD 10303 42 1992 A sectioned spine is a representation of the shape of a three dimensional object composed of a spine curve and a number of planar cross sections. The shape is defined between the first element of cross sections and the last element of this set. NOTE A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. For the representation of a solid all cross sections are closed curves. NOTE Entity adapted from sectioned spine defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. none of the cross sections, after being placed by the cross section positions, shall intersect 2. none of the cross sections, after being placed by the cross section positions, shall lie in the same plane 3. the local origin of each cross section position shall lie at the beginning or end of a composite curve segment."

#:IFC.xml:10438
msgid "IfcSectionedSpine_SpineCurve"
msgstr "Rückenkurve"

msgid "IfcSectionedSpine_SpineCurve_DEFINITION"
msgstr "Eine einzige Composite-Kurve, die die Rückenkurve definiert. Jedes der Composite-Kurvensegmente entspricht dem Teil zwischen zwei Querschnitten."

#:IFC.xml:10450
msgid "IfcSectionedSpine_CrossSections"
msgstr "Querschnitte"

msgid "IfcSectionedSpine_CrossSections_DEFINITION"
msgstr "Eine Liste von mindestens zwei Querschnitten, die jeweils innerhalb der xy-Ebene des Positionskoordinatensystems des Querschnitts definiert werden. Das Positions-Koordinatensystem wird durch die entsprechende Liste CrossSectionPositions angegeben."

#:IFC.xml:10462
msgid "IfcSectionedSpine_CrossSectionPositions"
msgstr "Querschnittspositionen"

msgid "IfcSectionedSpine_CrossSectionPositions_DEFINITION"
msgstr "Positionskoordinensysteme für die Querschnitte, die den gespaltenen Rücken bilden. Die Profile, die die Querschnitte definieren, werden innerhalb der xy-Ebene des entsprechenden Positionskoordinatensystems positioniert."

#:IFC.xml:10431
msgid "IfcSectionedSpine_Dim"
msgstr "Dim"

msgid "IfcSectionedSpine_Dim_DEFINITION"
msgstr "Die Dimensionalität der Rückenkurve ist immer 3."

#:IFC.xml:10474
msgid "IfcSectionedSurface"
msgstr "IfcSectionedOberfläche"

msgid "IfcSectionedSurface_DEFINITION"
msgstr "Eine Art von Oberfläche, die durch Kehren von potentiell unterschiedlichen offenen Querschnitten entlang einer Kurve horizontal oder nahe horizontal konstruiert wird. Die Oberfläche wird durch das Umkehren der Querschnittssektionen zwischen CrossSectionPositions lineare Interpolation erzeugt, es sei denn, Übergänge kurven zwischen Querschnittspunkten werden von OpenCrossProfileDef angegeben. Die Querschnittsbereiche orientieren sich an der Y-Achse jedes Profils nach oben in Z-Richtung oder vertikal senkrecht zum Directrix, je nach Attribut FixedAxisVertical wert. separierte Oberflächengleichwert .. .. .. .. Zahlen [[IfcSectionedSurface]] 1. ng Abbildung 1 Abschnittsfläche mit [[IfcOpenCrossProfileDef]] Bei Verzweigung von Längsabbrüchen, die SectionedSurface kann OpenCrossProfileDef Instanzen mit unterschiedlicher Anzahl von Querschnittspunkten verwenden. In diesem Fall wird der Punkt in zwei aufeinander folgenden Querschnitten, die verbunden sind, durch den gleichen Tagwert identifiziert. separierte Oberflächengleichwert .. .. .. .. Abbildung [[IfcSectionedSurface]] 2. ng Abbildung 1 Sektionierte Oberfläche mit verzweigten Längsabbrüchen Formale Sätze Die Kurve Entität ist die zugrunde liegende Direktrix soll die Dimensionalität von 3 haben. Der Profiltyp soll CURVE innerhalb der Liste der Profile sein, die die Querschnitte definieren. Der Entitätstyp für jeden Abschnitt muss identisch sein. Die Liste der Querschnitte und die Liste der Querschnittspositionen sollen gleich groß sein. Informelle Vorschläge Nr. zwei aufeinander folgende Abschnitte sind zu überschneiden. Wenn die Direktrix nicht ständig tangiert wird, wird die resultierende Oberfläche durch einen mittigen Winkel zwischen den beiden Segmenten erzeugt. Sehr scharfe Kanten können dazu führen, dass nahezu unmögliche Vereinbarungen über die Umsetzer können akzeptable Grenzen für die tangente Diskontinuität definieren oder verlangen, dass die Direktrix ständig tangent ist. Der Direktorium soll sich nicht kreuzen."

#:IFC.xml:10477
msgid "IfcSectionedSurface_Directrix"
msgstr "Directrix"

msgid "IfcSectionedSurface_Directrix_DEFINITION"
msgstr "Die Kurve zur Definition der Kehroperation"

#:IFC.xml:10489
msgid "IfcSectionedSurface_CrossSections"
msgstr "Querschnitte"

msgid "IfcSectionedSurface_CrossSections_DEFINITION"
msgstr "Liste der Querschnitte in sequentieller Reihenfolge entlang des Directrix"

#:IFC.xml:10501
msgid "IfcSectionedSurface_CrossSectionPositions"
msgstr "Querschnittspositionen"

msgid "IfcSectionedSurface_CrossSectionPositions_DEFINITION"
msgstr "Liste der Distanzausdrücke in Folge steigender Reihenfolge, gepaart mit CrossSections, zeigt die Position des entsprechenden Abschnitts entlang des Directrix."

#:IFC.xml:10513
msgid "IfcShellBasedSurfaceModel"
msgstr "IfcShellBasedSurfaceModel"

msgid "IfcShellBasedSurfaceModel_DEFINITION"
msgstr "Eine [[IfcShellBasedSurfaceModel]] repräsentiert die Form durch einen Satz offener oder geschlossener Shells. Die angeschlossenen Flächen innerhalb der Shell haben eine Dimensionalität 2 und sind in einem Koordinatenraum der Dimensionalität 3 platziert. xtDef NOTE Definition gemäß ISO CD 10303 42 1992 Ein Shell-basiertes Oberflächenmodell wird durch eine Reihe offener oder geschlossener Schalen der Dimensionalität 2 beschrieben. Die Schalen dürfen sich nur an Kanten und Eckpunkten kreuzen, insbesondere dürfen sich die verschiedenen Gesichter nicht durchschneiden. Ein vollständiges Gesicht einer Shell kann mit einer anderen Shell geteilt werden. Die Zufallsbereiche der Schalen sollen sowohl auf die gleichen Gesichter, Kanten und Eckpunkte Bezug nehmen, die das Zufallsgebiet definieren. Eine Shell kann unabhängig von einem Oberflächenmodell existieren. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The dimensionality of the shell based surface model is 2. (2) Die Schalen überlappen sich nicht oder überschneiden sich, außer bei gewöhnlichen Gesichtern, Kanten oder Ecken."

#:IFC.xml:10514
msgid "IfcShellBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcShellBasedSurfaceModel_Dim_DEFINITION"
msgstr "Die Raumdimensionalität dieser Klasse, sie ist immer 3."

#:IFC.xml:10519
msgid "IfcShellBasedSurfaceModel_SbsmBoundary"
msgstr "SbsmBoundary"

msgid "IfcShellBasedSurfaceModel_SbsmBoundary_DEFINITION"
msgstr "SbsmBoundary"

#:IFC.xml:10526
msgid "IfcSolidModel"
msgstr "IfcSolidModel"

msgid "IfcSolidModel_DEFINITION"
msgstr "Eine [[IfcSolidModel]] repräsentiert die 3D-Form durch verschiedene Arten von festen Modell-Darstellungen. Es ist der gemeinsame abstrakte Supertyp der Grenzrepräsentation, der CSG-Repräsentation, der Sweeping Repräsentation und anderer geeigneter solider Repräsentation . xtDef NOTE Definition nach ISO CD 10303 42 1992 Ein solides Modell ist eine vollständige Darstellung der nominalen Form eines Produkts, so dass alle Punkte im Inneren verbunden sind. Jeder Punkt kann als innen eingestuft werden, außerhalb oder an der Grenze zu einem Festkörper. HINWEISE Entität, angepasst von solidem Modell, definiert in ISO 10303 42. HISTORY New Entity in IFC1.5"

#:IFC.xml:10527
msgid "IfcSolidModel_Dim"
msgstr "Dim"

msgid "IfcSolidModel_Dim_DEFINITION"
msgstr "Die Raumdimensionalität dieser Klasse, sie ist immer 3."

#:IFC.xml:10536
msgid "IfcSphere"
msgstr "IfcSphere"

msgid "IfcSphere_DEFINITION"
msgstr "Die [[IfcSphere]] ist ein Bau-Solid Geometry CSG 3D primitiv. Es ist ein fester Punkt, bei dem alle Punkte an der Oberfläche den gleichen Abstand vom Mittelpunkt haben. Das geerbte Positionsattribut definiert das IfcAxisPlacement3D und stellt SELF [[IfcCsgPrimitive3D]] zur Verfügung. osition Der Standort und die Ausrichtung des Achsensystems für das Primitiv. SELF [[IfcCsgPrimitive3D]].Position.Position Der Mittelpunkt der Kugel. SELF [[IfcCsgPrimitive3D]].Position. osition 3 Die Z-Achse zeigt in ihrer Positionsrichtung Richtung Nordpol und durch ihre negative Richtung zum Südpol. EXAMPLE Abbildung 1 illustriert geometrische Parameter der Kugel. Der Ursprung ist der Mittelpunkt der Kugel. xtDef NOTE Definition gemäß ISO CD 10303 42 1992 A Kugel ist ein primitives CSG mit einer kugelförmigen Form von Zentrum und Radius. HISTORY New Entity in IFC2x3 . se head Texture Use Definition Texturen sind ausgerichtet nach aufrecht mit Ursprung auf der Rückseite Y Richtung drehen gegen den Uhrzeigersinn. Die Texturen werden entsprechend RepeatS und RepeatT im Umfang des Umfangs am Äquator gestreckt oder wiederholt. Abbildung 2 zeigt die Standardtextur-Zuordnung mit einer Klemmtextur RepeatS False und RepeatT False . Das Bild auf der linken Seite zeigt die Textur, wo die S Achse nach rechts und die T Achse nach oben zeigt. Das Bild auf der rechten Seite zeigt die Textur, die auf die Geometrie angewendet wird, wobei die X-Achse nach rechts zeigt die Y-Achse nach links und die Z-Achse nach oben zeigt. .gridtable Normal Origin X Ursprung Y Origin Z S Achse T Achse Y 0 Radius 0 X, dann kurvend im Uhrzeigersinn Z, dann kurvend in Richtung Top Figure 2 Sphere Texturen"

#:IFC.xml:10537
msgid "IfcSphere_Radius"
msgstr "Radius"

msgid "IfcSphere_Radius_DEFINITION"
msgstr "Der Radius der Kugel."

#:IFC.xml:10544
msgid "IfcSurfaceCurveSweptAreaSolid"
msgstr "IfcSurfaceCurveSweptAreaSolid"

msgid "IfcSurfaceCurveSweptAreaSolid_DEFINITION"
msgstr "The [[IfcSurfaceCurveSweptAreaSolid]] is the result of sweeping an area along a directrix that lies on a reference surface. The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the tangent of the directrix at this point, and the profile s x axis agrees to the surface normal. At any point along the directrix, the swept profile origin lies on the directrix, the profile s normal points towards the tangent of the directrix, and the profile s x axis is identical to the surface normal at this point. NOTE The profile area s normal has to be identical to the tangent of the directrix at any given point. In case of a directrix having a linear segment at the start point, the segment has to be perpendicular to the profile at start. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , the parameter value is provided based on the curve parameterization. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , the parameter value is provided based on the curve parameterization. If no EndParam is provided the end defaults to the end of the directrix. The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE The StartParam and the EndParam are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. In case of a closed curve, such as [[IfcCircle]] or [[IfcEllipse]] , as the directrix, StartParam and the EndParam shall not exceed the parametic range, they shall not be 360 . EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In most cases, it is a plane or a surface of extrusion. The directrix lies on the surface, in case of a plane it might be defined as a polyline or composite curve, in case of a cylindrical or other non planer reference surface it might often be defined as a p curve on this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system of the implicit plane lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the normal of the reference surface at this point. The Axis2 the y axis, or v is constructed. The resulting body of the swept solid is not repositioned if the inherited Position attribute is omitted. Otherwise the coordinate system established by the Position attribute is used to reposition the body relative to the object coordinate system. EXAMPLE Figure 1 illustrates an example using a cylindrical reference surface and a p curve for sweeping a rectangle. The Postion is not provided and therefore it does not reposition the resulting swept solid. Figure 2 shows the expected result.NOTE The start of the directrix lies at the origin of the object coordinate system, as shown in the illustration,only by coincidence. The start of the directrix and thereby the start of the sweeping operation might be at any point within the object coordinate system and only depends on the position of the directrix.Figure 1 Surface curve wept area solid parameter Figure 2 Surface curve wept area solid results .extDef NOTE Definition according to ISO CD 10303 42 1992 A surface curve swept area solid is a type of swept area solid which is the result of sweeping a face along a Directrix lying on a ReferenceSurface . The orientation of the SweptArea is related to the direction of the surface normal. The SweptArea is required to be a curve bounded surface lying in the plane z 0 and this is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the normal to the ReferenceSurface at the current point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a Cartesian Transformation Operator 3D with attributes Local origin as point 0., 0., 0 , Axis 1 as the normal N to the reference surface at the point of the directrix with parameter u. Axis 3 as the direction of the tangent vector t at the point of the directrix with parameter u. The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the directrix parameter u. NOTE Entity adapted from surface curve swept area solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The SweptArea shall lie in the implicit plane z 0. 2. The Directrix shall lie on the ReferenceSurface ."

#:IFC.xml:10547
msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface"
msgstr "Referenz-Oberfläche"

msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface_DEFINITION"
msgstr "Referenz-Oberfläche"

#:IFC.xml:10559
msgid "IfcSweptAreaSolid"
msgstr "IfcSweptAreaSolid"

msgid "IfcSweptAreaSolid_DEFINITION"
msgstr "Ein [[IfcSweptAreaSolid]] repräsentiert die 3D-Form durch ein weit reichendes Darstellungsschema, das es einem zweidimensionalen Querschnitt ermöglicht, durch den Weltraum zu fegen. Der Swept-Bereich wird durch einen Querschnitt definiert, der durch einen Subtyp dargestellt wird, wenn [[IfcProfileDef]] , , die als geschlossene zweidimensionale Grenze auf einer impliziten Ebene zur Verfügung gestellt wird. Der Swept-Bereich ist in der xyebene des Objektkoordinatensystems definiert. Die Kehroperation wird auf den in den Untertypen [[IfcSweptAreaSolid]] definierten Bereich angewendet einige Untertypen erfordern eine implizite Umwandlung des gefegten Bereichs in die Startposition des Sweeps. Das optionale Positio n Koordinatensystem ermöglicht die erneute Positionierung des resultierenden gepeitschten Festkörpers relativ zum Objektkoordinatensystem. .extDef NOTE Definition gemäß ISO CD 10303 42 1992 Der gefegte Bereich Solide Entität sammelt die Entitäten, die prozedural definiert sind durch Kehrmaßnahmen auf flachen begrenzten Oberflächen. Die Position ist Platz des gefegten Festkörpers wird abhängig von der Position des gefegten Bereichs. Der gepeitschte Bereich wird ein Gesicht der sich daraus ergebenden feuchten Fläche sein, ausgenommen für den Fall einer drehbaren Fläche solide mit Winkel von 2<unk> oder 360 Grad . HINWEISE Entität, angepasst aus feuchtem, massivem Bereich nach ISO 10303 42. HISTORY Neue Entität in IFC1.5 .change ifc2x4 IFC4 CHANGE Das Attribut Position wurde in OPTIONAL mit Upward Kompatibilität für den Dateiaustausch geändert."

#:IFC.xml:10562
msgid "IfcSweptAreaSolid_SweptArea"
msgstr "SweptArea"

msgid "IfcSweptAreaSolid_SweptArea_DEFINITION"
msgstr "Die Fläche, die die zu ziehende Fläche definiert, wird als Profildefinition innerhalb der xy- Ebene des Positionskoordinatensystems angegeben."

#:IFC.xml:10574
msgid "IfcSweptAreaSolid_Position"
msgstr "Pset_ActuatorPHistory_Position"

msgid "IfcSweptAreaSolid_Position_DEFINITION"
msgstr "Positionskoordinatensystem für das sich daraus ergebende Kehrgerüst des Kehrbetriebs, das die Positionierung des Kehrfestes ermöglicht. Falls nicht angegeben, bleibt der gekehrte Feststoff innerhalb der Position, wie sie vom Querschnitt oder vom für den Kehrbetrieb verwendeten Direktrix bestimmt wird. .change ifc2x4 IFC4 CHANGE Das Attribut wurde in OPTIONAL mit Up-Kompatibilität für den Dateiaustausch geändert."

#:IFC.xml:10586
msgid "IfcSweptDiskSolid"
msgstr "IfcSweptDiskSolid"

msgid "IfcSweptDiskSolid_DEFINITION"
msgstr "An [[IfcSweptDiskSolid]] represents the 3D shape by a sweeping representation scheme allowing a two dimensional circularly bounded plane to sweep along a three dimensional Directrix through space. The StartParam and EndParam parameter are optional, if not provided they default to the start and end of the Directrix . Only if the Directrix is given by a bounded or by a closed curve, it is permissible to omit the values of StartParam and EndParam . If the transitions between consecutive segments of the Directrix are not tangent continuous, the resulting solid is created by a miter at half angle between the two segments. Informal proposition restricts the permissible angle between two non tangent continuous segments. Figure 1 illustrates an example. Directrix given as [[IfcIndexedPolyCurve]] , having linear and circular arc segments, that are tangent continuous between each segments Directrix being a bounded and open curve No StartParam and EndParam are provided, start and end default to start and end of the bounded curve of the Directrix NOTE Although the example shows a Directrix as a poly curve on a planar reference surface, the definition of [[IfcSweptDiskSolid]] is not restricted to be based on planer curves. However view definitions or implementer agreements may provide restrictions. NOTE The geometric item [[IfcIndexedPolyCurve]] provides a more compact representation compared with [[IfcCompositeCurve]] as is therefore the prefered curve representation for the Directrix . disk solid .. .. .. .. figures ifcsweptdisksolid layout1.png Figure 1 Swept disk solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A swept disk solid is the solid produced by sweeping a circular disk along a three dimensional curve. During the sweeping operation the normal to the plane of the circular disk is in the direction of the tangent to the directrix curve and the center of the disk lies on the directrix. The circular disk may, optionally, have a central hole, in this case the resulting solid has a through hole, or, an internal void when the directrix forms a close curve. NOTE Entity adapted from swept disk solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE The attribute StartParam and EndParam have been made optional. .spec head Informal Propositions 1. If the Directrix curve definition is not tangent continuous, the transition between the segments has to be within an acceptable limit of tangent discontinuity. Very sharp edges may result in nearly impossible miter. Implementer agreements may define acceptable limits for tangent discontinuity. 2. The segments of the Directrix shall be long enough to apply the Radius . In case of an arc segment forming part of the Directrix , its radius shall be greater then the disk Radius 3. The Directrix shall not be based on an intersecting curve."

#:IFC.xml:10609
msgid "IfcSweptDiskSolid_Directrix"
msgstr "Directrix"

msgid "IfcSweptDiskSolid_Directrix_DEFINITION"
msgstr "Die Kurve zur Definition des Kehrvorgangs wird durch das Kehren einer Rundscheibe entlang der Directrix erzeugt."

#:IFC.xml:10587
msgid "IfcSweptDiskSolid_EndParam"
msgstr "Endparam"

msgid "IfcSweptDiskSolid_EndParam_DEFINITION"
msgstr "Der Parameterwert auf dem Directrix, bei dem die Kehroperation beendet wird. Wird kein Wert angegeben, so liegt das Ende der Kehroperation am Ende der Directrix . .change ifc2x4 IFC4 CHANGE Das Attribut wurde in OPTIONAL mit Up-Kompatibilität für den Dateiaustausch geändert."

#:IFC.xml:10592
msgid "IfcSweptDiskSolid_InnerRadius"
msgstr "InnerRadius"

msgid "IfcSweptDiskSolid_InnerRadius_DEFINITION"
msgstr "Dieses Attribut ist optional, wenn vorhanden, definiert es den Radius eines kreisförmigen Loch in der Mitte der Festplatte."

#:IFC.xml:10597
msgid "IfcSweptDiskSolid_Radius"
msgstr "Radius"

msgid "IfcSweptDiskSolid_Radius_DEFINITION"
msgstr "Der Radius der kreisförmigen Scheibe, die entlang der Direktrix gefegt werden soll, bezeichnet den äußeren Radius, wenn ein InnerRadius angewendet wird."

#:IFC.xml:10602
msgid "IfcSweptDiskSolid_StartParam"
msgstr "StartParam"

msgid "IfcSweptDiskSolid_StartParam_DEFINITION"
msgstr "Der Parameterwert auf der Directrix, bei der die Kehroperation beginnt. Wird kein Wert angegeben, so beginnt der Kehrvorgang am Anfang der Directrix . .change ifc2x4 IFC4 CHANGE Das Attribut wurde in OPTIONAL mit Up-Kompatibilität für den Dateiaustausch geändert."

#:IFC.xml:10621
msgid "IfcSweptDiskSolidPolygonal"
msgstr "IfcSweptDiskSolidPolygonal"

msgid "IfcSweptDiskSolidPolygonal_DEFINITION"
msgstr "Das [[IfcSweptDiskSolidPolygonal]] ist ein [[IfcSweptDiskSolid]], in dem die Directrix nur über eine Poly-Zeile zur Verfügung gestellt werden kann. Ein optionales FilletRadius-Attribut kann geltend gemacht werden, es wird dann als Fillet auf alle Übergänge zwischen den Segmenten der Poly-Linie angewendet. HINWEIS Das geometrische Element [[IfcIndexedPolyCurve]] bietet eine kompaktere Darstellung im Vergleich zu [[IfcPolyline]] . Daher ist es die bevorzugte Kurvendarstellung für die Directrix . Die [[IfcIndexedPolyCurve]] darf keine Segmente definiert haben, die nur auf eine Poly-Linie zurückgeführt werden. HISTORY New entity in IFC4. .spec head Informal Propositions 1. Der FilletRadius , falls vorhanden, muss kleiner als oder gleich der Länge des Start- und Endsegments des [[IfcPolyline]] sein, und kleiner als oder gleich einer Hälfte der Länge des kürzesten Innensegments."

#:IFC.xml:10622
msgid "IfcSweptDiskSolidPolygonal_FilletRadius"
msgstr "FilletRadius"

msgid "IfcSweptDiskSolidPolygonal_FilletRadius_DEFINITION"
msgstr "Das Fillett, das gleichermaßen für alle Übergänge zwischen den Segmenten des [[IfcPolyline]] angewendet wird, die geometrische Darstellung der Directrix . Wenn sie weggelassen werden, wird kein Fillet auf die Segmente angewendet."

#:IFC.xml:10629
msgid "IfcTaperedSweptAreaProfiles__StartArea"
msgstr "IfcTaperedSweptAreaProfiles StartArea"

#:IFC.xml:10637
msgid "IfcTessellatedFaceSet"
msgstr "IfcTessellatedFaceSet"

msgid "IfcTessellatedFaceSet_DEFINITION"
msgstr "Das [[IfcTessellatedFaceSet]] ist ein topologisches Modell der Grenzdarstellung, das auf planare Flächen und gerade Kanten beschränkt ist. Es kann eine Annäherung einer analytischen Oberfläche oder eines festen Körpers darstellen, die zusätzlich zur Tessellation als separate Formdarstellung zur Verfügung gestellt werden kann. Das [[IfcTessellatedFaceSet]] bietet eine kompakte Datenrepräsentation eines angeschlossenen Gesichtersatzes mittels Indizes in geordnete Listen von Knoten normale, farbenfrohe und Texturkarten. HINWEIS Die kompakte Darstellung wurde gewählt, um trotz potenziell großer Gesichter kleine Datensätze zu ermöglichen Kanten und Eckpunkte zur Darstellung von Tessellationen von Oberflächen und Festkörpern und trotz großer Farb- und Texturinformationen, um die zersetzten Gesichter zu kommentieren. Das [[IfcTessellatedFaceSet]] ist ein abstrakter Supertyp von gesättigten Gesichtern, der die Gesichtsgenerierung zur Tessellation mit spezifischen Einschränkungen belegt B. Triangulation mit oder ohne Streifen und Ventilatoren oder Quadrilaterale oder polygonale Gesichter mit oder ohne Innenschleifen . HINWEIS: Nicht alle unterschiedlichen Einschränkungen auf Gesichtersätzen sind als spezifische Untertypen in dieser Version der Spezifikation enthalten. Die folgenden Attribute gelten für alle Untertypen Die Koordinaten sind die geordnete Liste der kartesischen Punkte, die die Eckpunkte des zusammengesetzten Elements darstellen. Eine Indexliste, die auf der Ebene der Untertypen definiert ist, verwendet die Punkte, die anhand der Indexposition ermittelt werden, um die Polylines zu konstruieren, die die Gesichter repräsentieren. Die HasColours Inverse-Relation stellt eine indizierte Farbkarte mit einer entsprechenden Liste von Indizes zur Verfügung, die eine Farbe für jedes Gesicht des zessellierten Gesichtssets enthalten. Die HasTextures Inversee-Relation stellt eine indizierte Textur-Karte mit einer entsprechenden Liste von Indizes zur Verfügung, die Textur-Koordinaten zur Abbildung der geometrischen Koordinaten der Polylinien, die die Gesichter darstellen. Jede Fläche des gesättigten Gesichtersatzes soll mindestens drei nicht zufällige Knotenpunkte haben, die einen planaren Polygonpunkt definieren, der ein nicht-selbst-sich durchschneidendes Polygon definiert. HINWEIS: Die Definition von [[IfcTessellatedFaceSet]] basiert auf dem indexedFaceSet definiert in ISO IEC 19775 1 HISTORY New entity in IFC4."

#:IFC.xml:10034
msgid "IfcTessellatedFaceSet_Coordinates"
msgstr "Koordinaten"

msgid "IfcTessellatedFaceSet_Coordinates_DEFINITION"
msgstr "Eine geordnete Liste der kartesischen Punkte, die durch den Koordinatenindex verwendet werden, der bei den Untertypen [[IfcTessellatedFaceSet]] definiert wird."

#:IFC.xml:10646
msgid "IfcTessellatedFaceSet_HasColours"
msgstr "Hasfarben"

msgid "IfcTessellatedFaceSet_HasColours_DEFINITION"
msgstr "Verweis auf die indizierte Farbtabelle mit den entsprechenden Farb-RGB-Werten auf die Gesichter der Untertypen von [[IfcTessellatedFaceSet]] ."

#:IFC.xml:10660
msgid "IfcTessellatedFaceSet_HasTextures"
msgstr "HasTexturen"

msgid "IfcTessellatedFaceSet_HasTextures_DEFINITION"
msgstr "Verweis auf die indizierte Texturkarte mit den entsprechenden Texturkoordinaten zu den Punkten, die die Flächen der Untertypen von [[IfcTessellatedFaceSet]] begrenzen."

#:IFC.xml:10638
msgid "IfcTessellatedFaceSet_Dim"
msgstr "Dim"

msgid "IfcTessellatedFaceSet_Dim_DEFINITION"
msgstr "Die Raumdimensionalität dieses geometrischen Repräsentation Element, es ist immer 3."

#:IFC.xml:10674
msgid "IfcTessellatedItem"
msgstr "IfcTessellatedItem"

msgid "IfcTessellatedItem_DEFINITION"
msgstr "Die [[IfcTessellatedItem]] ist der abstrakte Supertyp aller aufwändigen geometrischen Modelle. HISTORY New Entity in IFC4."

#:IFC.xml:10677
msgid "IfcTriangulatedFaceSet"
msgstr "IfcTriangulatedFaceSet"

msgid "IfcTriangulatedFaceSet_DEFINITION"
msgstr "The [[IfcTriangulatedFaceSet]] is a tessellated face set with all faces being bound by triangles. The faces are constructed by implicit polylines defined by three Cartesian points. Depending on the value of the attribute Closed the instance of [[IfcTriangulatedFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The coordinates of each point are provided by a one based index into an ordered list of Cartesian points provided by the two dimensional list CoordIndex , where the first dimension of the two dimensional list addresses the list of triangular faces the second dimension of the two dimensional list provides exactly three indices. Each index points to a Cartesian point being a vertex of the triangle. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifctriangulatedfaceset 03.png Figure 1 Use of PnIndex See Figure 2 for using the [[IfcTriangulatedFaceSet]] without as default and with using the PnIndex . [[IfcTriangulatedFaceSet]] 01 .. .. .. .. figures ifctriangulatedfaceset 01.png Figure 2 Triangulated face set Optionally normals can be provided. Only normals per vector are supported allowing for visually curved triangles when the three normals of the corresponding three vertices of a triangle are not co linear to the normal of the triangular face. If they are identical, normals shall be omited. NOTE In case of a body representation having triangular faces with curvature, different normals for all three vertices in context of this triangles are exported, describing the curvature for smooth visualisation. In case of triangular faces with no curvature, the three vertex based normals are identical and could always be computed from the face. Therefore vertices should only be exported to support smooth visualisation by curvature of triangles. In case of faceted representation no vertices should be exported. Normals are provided by the two dimensional list Normals , where the first dimension of the two dimensional list addresses the corresponding list of vertex indices of the triangular faces the second dimension of the two dimensional list provides exactly three real values to determine the direction of the normal at this vertex of the triangle. The indices in the CoordIndex point into the list of Normals . The indices of CoordIndex are applied to both points, either directly directly, or via the PnIndex and normals. See Figure 3 for handling of normals. [[IfcTriangulatedFaceSet]] 02 .. .. .. .. figures ifctriangulatedfaceset 02.png Figure 3 Triangulated face set with normals NOTE Using corresponding lists of points and normals allows to use only a single list of indices into both at the expense of having non unique collections of vertices. Figure 4 shows the use of [[IfcTriangulatedFaceSet]] without annotation. The diagram of the [[IfcTriangulatedFaceSet]] represents the indices and the ordered list into which the indices point. The index starts with 1 indexed as 1 to N , if the greatest index in CoordIndex in N, then the [[IfcCartesianPointList]] shall have N lists of 3 3 coordinates. Figure 168 shows an [[IfcTriangulatedFaceSet]] represented by CoordIndex 1,6,5 , 1,2,6 , 6,2,7 , 7,2,3 , 7,8,6 , 6,8,5 , 5,8,1 , 1,8,4 , 4,2,1 , 2,4,3 , 4,8,7 , 7,3,4 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 4 Triangulated face set geometry NOTE The definition of [[IfcTriangulatedFaceSet]] is based on the indexedFaceSet and indexedTriangleSet defined in ISO IEC 19775 1. The use of PnIndex has been adopted from triangulated surface set defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two boundaries of faces the topological normal at each point on the boundary of the triangulated face set shall point away from the mater ial of the solid."

#:IFC.xml:10678
msgid "IfcTriangulatedFaceSet_NumberOfTriangles"
msgstr "NumberOfDreiecke"

msgid "IfcTriangulatedFaceSet_NumberOfTriangles_DEFINITION"
msgstr "Abgeleitete Anzahl der Dreiecke, die für diese Dreiecksberechnung verwendet werden."

#:IFC.xml:10683
msgid "IfcTriangulatedFaceSet_Closed"
msgstr "Geschlossen"

msgid "IfcTriangulatedFaceSet_Closed_DEFINITION"
msgstr "Gibt an, ob die [[IfcTriangulatedFaceSet]] eine geschlossene Shell ist oder nicht. Wenn keine solchen Informationen angegeben werden können."

#:IFC.xml:10688
msgid "IfcTriangulatedFaceSet_CoordIndex"
msgstr "CoordIndex"

msgid "IfcTriangulatedFaceSet_CoordIndex_DEFINITION"
msgstr "Zwei-dimensionale Liste für die indizierten Dreiecke, wobei die erste Dimension die Dreiecke von 1 bis N repräsentiert. Die zweite Dimension hat genau drei Werte, die die Indizes zu drei Scheitelpunkten von 1 bis 3 repräsentieren. HINWEIS Die Koordinaten der Knoten werden von der indizierten Liste der SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList bereitgestellt."

#:IFC.xml:10693
msgid "IfcTriangulatedFaceSet_Normals"
msgstr "Normale"

msgid "IfcTriangulatedFaceSet_Normals_DEFINITION"
msgstr "Eine geordnete Liste von drei Richtungen für Normalität; eine zweidimensionale Liste von Richtungen, die mit drei Parameterwerten angegeben werden. Die erste Dimension entspricht den Vertex-Indizes des Coordindex Die zweite Dimension hat genau drei Werte. 1 die x Richtung, 2 die y Richtung und 3 die z Richtungen"

#:IFC.xml:10698
msgid "IfcTriangulatedFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcTriangulatedFaceSet_PnIndex_DEFINITION"
msgstr "Die Liste der Integer, die die Standorte in der [[IfcCartesianPointList3D]] definieren, um die Punktkoordinaten für die Indizes ohne den CoordIndex zu erhalten. Wenn der PnIndex nicht zur Verfügung gestellt wird, zeigen die Indizes direkt in die [[IfcCartesianPointList3D]] ."

#:IFC.xml:10705
msgid "IfcTriangulatedIrregularNetwork"
msgstr "IfcTriangulatedIrregularNetwork"

msgid "IfcTriangulatedIrregularNetwork_DEFINITION"
msgstr "Die [[IfcTriangulatedIrregularNetwork]] ist ein dreieckiges Flächenset für horizontale Oberflächen und eine eindeutige Z-Koordinate für alle X- und Y-Koordinaten innerhalb der Domäne mit zusätzlichen Flaggen für jede Fläche, die Trennlinien zwischen den Gesichtern anzeigt oder als Loch oder Leerzeichen bezeichnet. Dreiecke sollen mit Eckpunkten im Gegenzeigersinn definiert werden, wie sie von oben nach rechts angeordnet sind. Für die Visualisierung sollten Anwendungen keine Flächen anzeigen, in denen Flaggen als negativ gesetzt werden, entweder als Loch, Leerzeichen oder mögliche zukünftige Erweiterung . Die Flagge Leere soll verwendet werden, um zu signalisieren, dass Gesichter ausgeschlossen werden sollen, ohne auf eine andere Geometrie zurückzufallen. Eine solche Bezeichnung könnte für Teile eines Standortes unter einem Gebäude oder einer anderen Struktur verwendet werden. Das Flaggenloch soll verwendet werden, um anzugeben, dass Gesichter ausgenommen werden sollen, aber auf andere Geometrie zurückfallen können. Eine solche Bezeichnung könnte für Teile einer vorgeschlagenen Website verwendet werden, die unverändert mit einer existierenden Site konform bleiben sollen, die auch für Szenarien definiert werden kann, bei denen mehrere als Eingaben verwendete Oberflächen kombiniert werden sollen, alle Dreiecke als Leere markiert werden als Leerzeichen beibehalten, während alle Dreiecke, die als Loch markiert sind, überschrieben werden, wenn eine andere Fläche mit sichtbarer Geometrie innerhalb derselben horizontalen Position definiert ist."

#:IFC.xml:10706
msgid "IfcTriangulatedIrregularNetwork_Flags"
msgstr "Flaggen"

msgid "IfcTriangulatedIrregularNetwork_Flags_DEFINITION"
msgstr "Zeigt die Attribute jedes Dreiecks in kompakter Form wie folgt an: 2 unsichtbare Lücke 1 unsichtbares Loch 0 keine Trennlinien 1 Trennlinie 1 Trennlinie 1 Trennlinie 2 Trennlinie 2 Trennlinie an den Kanten 1 und 2 4 Trennlinie am Rand 3 5 Trennlinie 1 und 3 6 Trennlinie an den Kanten 2 und 3 7 Trennlinie an den Kanten 1 und 1 2, und 3."

