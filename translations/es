msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Spanish\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: es\n"
"X-Crowdin-File: /master/IfcGeometricModelResource.pot\n"
"X-Crowdin-File-ID: 44\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: es_ES\n"
"PO-Revision-Date: 2021-07-27 16:52\n"

#:IFC.xml:9815
msgid "IfcAdvancedBrep"
msgstr "IfcAdvancedBrep"

msgid "IfcAdvancedBrep_DEFINITION"
msgstr "Un rep B avanzado es un modelo de representación límite en el que todas las caras, bordes y vértices están representados explícitamente. Es un sólido con topología explícita y geometría elemental o libre de formas. Las caras del representante B son de tipo [[IfcAdvancedFace]] . Un representante B avanzado tiene que cumplir con las mismas restricciones topológicas que el multiplo sólido B rep. NOTA El representante B avanzado ha sido introducido para soportar el creciente número de aplicaciones que pueden definir e intercambiar modelos de representantes B basados en NURBS u otras superficies de curva b . Figura 1 ilustra el uso de [[IfcAdvancedBrep]] para modelos de representación límite con superficies de b spline. El diagrama muestra los elementos topológicos y de representación geométrica que se utilizan para los representantes B avanzados, basados en [[IfcAdvancedFace]]. Figura 1 Advanced Brep, b spline surface Figure 2 ilustrates uso de [[IfcAdvancedBrep]] para modelos de representación de límites con superficies elementales. El diagrama muestra los elementos topológicos y de representación geométrica que se utilizan para los representantes B avanzados, basados en [[IfcAdvancedFace]]. Muestra el uso de [[IfcIntersectionCurve]] para proporcionar la representación geométrica de la curva de bordes tanto como curva 3D como u, pcurve en el espacio paramétrico de las superficies adyacentes. Figura 2 Brep Avanzado, Superficie de NOTA adaptada a partir de la representación avanzada de forma brep definida en ISO 10303 514. HISTORY Nueva entidad en IFC4 .spec head Informal Propositions 1. cada cara es una superficie 2. cada superficie de la cara tiene su geometría definida por una superficie elemental, superficie barrida o una superficie b spline 3. los bordes utilizados para definir los límites de la cara toda referencia de una curva de borde 4. cada curva utilizada para definir la geometría de las caras y los límites de las caras será una cónica, o una línea o un polínea o una curva de b curva de curva 5. los bordes utilizados para definir los límites de la cara serán todos recortados por vértices de tipo punto de vértices 6. ningún bucle usado para definir un enlace facial debe ser del subtipo orientado de documentación bSI"

#:IFC.xml:9822
msgid "IfcAdvancedBrepWithVoids"
msgstr "IfcAdvancedBrepWithVoids"

msgid "IfcAdvancedBrepWithVoids_DEFINITION"
msgstr "El [[IfcAdvancedBrepWithVoids]] es una especialización de un miembro B avanzado que contiene uno o más vacíos en su interior. Los vacíos están representados como conchas cerradas que se definen de manera que el shell normal apunte al vacío. NOTA Entidad adaptada de la representación avanzada de forma brep definida en ISO 10303 42. Cada cáscara vacía se separará del caparazón exterior y de cualquier otro caparazón vacío 2. Cada cáscara vacía se encerrará dentro del proyectil externo pero no dentro de ningún otro proyectil vacío. En particular, la concha externa no está en el conjunto de cartuchos vacíos 3. Cada shell en el [[IfcManifoldSolidBrep]] se referirá sólo una vez. 4. Todas las caras de todos los proyectiles en el [[IfcAdvancedBrep]] y el [[IfcAdvancedBrepWithVoids]]. los oids deberán ser de tipo [[IfcAdvancedFace]] ."

#:IFC.xml:9829
msgid "IfcAdvancedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcAdvancedBrepWithVoids_Voids_DEFINITION"
msgstr "Voids"

#:IFC.xml:9841
msgid "IfcBlock"
msgstr "Bloque Ifc"

msgid "IfcBlock_DEFINITION"
msgstr "El [[IfcBlock]] es un primitivo CSG 3D de Geometría Solida de Construcción. Se define por una posición y una distancia positva a lo largo de los tres ejes ortogonales. El atributo Posición heredada tiene el tipo IfcAxisPlacement3D y proporciona SELF [[IfcCsgPrimitive3D]]. osición La ubicación y orientación del sistema de ejes para el primitivo. SELF [[IfcCsgPrimitive3D]].Position. ocation El bloque tiene un vértice en la ubicación y los bordes están alineados con los ejes de colocación en el sentido positivo. Los atributos XLength , YLength y ZLength definen el tamaño del [[IfcBlock]] a lo largo de los tres ejes. La figura 1 ilustra los parámetros geométricos de un bloque donde el bloque posicionado dentro de su propio sistema de coordenadas de posición. Los valores para XLength, YLength, y ZLength se aplican a la dirección positiva del eje X, Y y Z. Figura 1 Bloque geometría . xtDef NOTE Definición según ISO CD 10303 42 1992 Un bloque es un paralelepito rectangular sólido, definido con un sistema de coordenadas de ubicación y colocación. El bloque se especifica por las longitudes positivas x, y z a lo largo de los ejes del sistema de coordenadas de colocación, y tiene un vértice en el origen del sistema de coordenadas de colocación. NOTA Entidad adaptada del bloque definido en ISO 10303 42. .use definición de textura de cabeza En cada cara lateral, las texturas están alineadas de cara vertical. En la parte superior e inferior de la cara, las texturas están alineadas frente a la parte trasera. Las texturas se estiran o se repiten en la medida de cada cara de acuerdo a Repetir y Repetir . La figura 2 ilustra el mapeo predeterminado de texturas con una repetición de textura y repetición False de textura con pinceladas . La imagen a la izquierda muestra la textura donde el eje S apunta a la derecha y el eje T apunta hacia arriba. La imagen a la derecha muestra la textura aplicada a la geometría donde el eje X vuelve a la derecha, el eje Y apunta de vuelta a la izquierda, y el eje Z apunta hacia arriba. .gridtable Origin X Origin Y Origin Z S Eje T Eje Left X 0 YLength 0 Y Z Right X XLength 0 Y Z Front Y 0 0 0 X Back Y XLength YLength 0 X Z Bottom Z 0 YLength 0 X Y Top Z 0 0 ZLength X Y Figura 2 Texturas bSI Documentación"

#:IFC.xml:9842
msgid "IfcBlock_XLength"
msgstr "XLongitud"

msgid "IfcBlock_XLength_DEFINITION"
msgstr "El tamaño del bloque a lo largo del eje X de posición. Es proporcionado por la posición del eje heredado a través de SELF [[IfcCsgPrimitive3D]].Position.P 1 ."

#:IFC.xml:9847
msgid "IfcBlock_YLength"
msgstr "Longitud"

msgid "IfcBlock_YLength_DEFINITION"
msgstr "El tamaño del bloque a lo largo del eje Y de posición. Se proporciona mediante la colocación del eje heredado a través de SELF [[IfcCsgPrimitive3D]].Position.P 2 ."

#:IFC.xml:9852
msgid "IfcBlock_ZLength"
msgstr "ZLength"

msgid "IfcBlock_ZLength_DEFINITION"
msgstr "El tamaño del bloque a lo largo del eje Z de posición. Se proporciona mediante la colocación del eje heredado a través de SELF [[IfcCsgPrimitive3D]].Position.P 3 ."

#:IFC.xml:9859
msgid "IfcBooleanClippingResult"
msgstr "IfcBooleanClipingResultado"

msgid "IfcBooleanClippingResult_DEFINITION"
msgstr "Un resultado de recorte se define como un subtipo especial del general [[IfcBooleanResult]] . Restringe los operandos y el operador del resultado booleano. Un resultado de recorte es la diferencia booleana entre un sólido barrido y medio de espacio sólido, o entre el resultado de la diferencia booleana y un espacio medio sólido. Por lo tanto, se puede aplicar más de una operación de diferencia para lograr el resultado booleano final. HISTORY nueva entidad en IFC2x."

#:IFC.xml:9874
msgid "IfcBooleanOperator"
msgstr "IfcBooleanOperator"

msgid "IfcBooleanOperator_DEFINITION"
msgstr "Operadores booleanos que se aplican a la primera y segunda operaciones booleanas. Definición de xtDef NOTE según ISO CD 10303 42 1992 Este tipo define los tres operadores booleanos utilizados en la definición de sólidos CSG. NOTA Entidad adaptada del operador booleano definido en ISO 10303 42."

#:IFC.xml:9879
msgid "IfcBooleanResult"
msgstr "IfcBooleanResult"

msgid "IfcBooleanResult_DEFINITION"
msgstr "El [[IfcBooleanResult]] es el resultado de aplicar una operación booleana a dos operandos siendo sólidos. EXAMPLE Si el primer operando es un bloque y el segundo operando es un cilindro sólido de dimensiones y ubicación adecuadas, el resultado booleano producido con el operador de diferencia sería un bloque con un agujero circular. Definición de xtDef NOTE según ISO CD 10303 42 1992 Un resultado booleano es el resultado de una operación regularizada en dos sólidos para crear un nuevo sólido. Las operaciones válidas se regularizan el sindicato, la intersección regularizada y la diferencia regularizada. Para propósitos de operaciones booleanas, un sólido se considera un conjunto regularizado de puntos. El resultado final booleano depende de la operación y de los dos operadores. En el caso del operador de diferencias, el orden de los operarios también es significativo, ya sea de unión, de intersección o de diferencia. El efecto de estos operadores se describe por debajo de la Unión sobre dos sólidos es el nuevo sólido que es la regularización del conjunto de todos los puntos que están en el primer operador, o en el segundo operador, o en ambos. Intersección sobre dos sólidos es el nuevo sólido que es la regularización del conjunto de todos los puntos que están tanto en el primer operando como en el segundo operador. El resultado de la operación de diferencia en dos sólidos es la regularización del conjunto de todos los puntos que están en el primer operador, pero no en el segundo operador. NOTA STEP Correspondiente tipo booleano definido en ISO 10303 42."

#:IFC.xml:9892
msgid "IfcBooleanResult_Operator"
msgstr "Operador"

msgid "IfcBooleanResult_Operator_DEFINITION"
msgstr "El operador booleano utilizado en la operación para crear el resultado."

#:IFC.xml:9897
msgid "IfcBooleanResult_FirstOperand"
msgstr "Primaveral"

msgid "IfcBooleanResult_FirstOperand_DEFINITION"
msgstr "El primer operario operado por la operación booleana."

#:IFC.xml:9902
msgid "IfcBooleanResult_SecondOperand"
msgstr "Secundaria"

msgid "IfcBooleanResult_SecondOperand_DEFINITION"
msgstr "El segundo operando especificado para la operación."

#:IFC.xml:9907
msgid "IfcBooleanResult_Dim"
msgstr "Dim"

msgid "IfcBooleanResult_Dim_DEFINITION"
msgstr "La dimensión espacial de esta entidad, es idéntica a la dimensión espacial del primer operador. Una regla donde se garantiza que ambos operandos tengan la misma dimensión espacial."

#:IFC.xml:9916
msgid "IfcBoundingBox"
msgstr "IfcBoundingBox"

msgid "IfcBoundingBox_DEFINITION"
msgstr "El [[IfcBoundingBox]] define una caja ortogonal orientada paralela a los ejes del sistema de coordenadas de objeto en la que está definida. Está definido por un Esquina siendo un punto tridimensional cartesiano y tres medidas de longitud que definen la X, Parámetros Y y Z de la caja en la dirección de los ejes positivos. NOTA Cualquier subtipo de [[IfcProduct]] que tenga una forma de representación del producto puede tener una representación de cuadro de delimitación. El identificador de representación Box definido en [[IfcShapeRepresentation]] utiliza el [[IfcBoundingBox]] como la representación 3D más simple. Como se muestra en la Figura 1, el [[IfcBoundingBox]] se define con su propia ubicación que puede utilizarse para colocar el [[IfcBoundingBox]] relativo al sistema de coordenadas geométricas. El [[IfcBoundingBox]] está definido por la esquina inferior izquierda y la esquina superior derecha XDim, YDim, ZDim medido dentro del sistema de coordenadas padre . Figura 1 Bounding box NOTE Correspondiendo STEP tipo dominio de caja definido en ISO 10303 42. HISTORY Nueva entidad en IFC1.0."

#:IFC.xml:9939
msgid "IfcBoundingBox_Corner"
msgstr "Esquina"

msgid "IfcBoundingBox_Corner_DEFINITION"
msgstr "Esquina"

#:IFC.xml:9917
msgid "IfcBoundingBox_XDim"
msgstr "XDim"

msgid "IfcBoundingBox_XDim_DEFINITION"
msgstr "Atributo de longitud medido a lo largo del borde paralelo al eje X"

#:IFC.xml:9922
msgid "IfcBoundingBox_YDim"
msgstr "Dim"

msgid "IfcBoundingBox_YDim_DEFINITION"
msgstr "Atributo ancho medido a lo largo del borde paralelo al eje Y"

#:IFC.xml:9927
msgid "IfcBoundingBox_ZDim"
msgstr "ZDim"

msgid "IfcBoundingBox_ZDim_DEFINITION"
msgstr "Atributo de altura medido a lo largo del borde paralelo al eje Z ."

#:IFC.xml:9932
msgid "IfcBoundingBox_Dim"
msgstr "Dim"

msgid "IfcBoundingBox_Dim_DEFINITION"
msgstr "La dimensión espacial de esta clase, siempre es 3."

#:IFC.xml:9963
msgid "IfcBoxedHalfSpace"
msgstr "Espacio IfcBoxedHalfSpace"

msgid "IfcBoxedHalfSpace_DEFINITION"
msgstr "El [[IfcBoxedHalfSpace]] se utiliza como su supertipo [[IfcHalfSpaceSolid]] sólo en operaciones booleanas. Divida el dominio en exactamente dos subconjuntos, donde el dominio en cuestión es el del atributo Encloser . El propósito del recinto del atributo es proporcionar un cuadro de búsqueda para el otro operario en la operación booleana. Será lo suficientemente grande como para encerrar completamente el sólido resultante después de la operación booleana con el medio espacio. Sin embargo, no altera el resultado final. El resultado de la operación booleana sería el mismo, como si fuera ejecutado por el supertipo [[IfcHalfSpaceSolid]] . Ver la figura 1 a continuación. correcto uso del recinto .. .. .. .. .. cifras ifcboxedhalfspace 01. ng Figura 1 Óperas de medio espacio Boost [[IfcBoundingBox]] que proporciona el recinto para la conveniencia de la aplicación receptora para permitir el uso de la comparación de caja de tamaño para la eficiencia, por ejemplo, para comprobar si las cajas de tamaño se intersecan, si no hay cálculos que hacer para comprobar si los sólidos de las entidades se intersecan . Por lo tanto, el recinto contribuye a evitar que se aborden cuestiones relacionadas con el tamaño indefinido. La casilla de adjuntado está posicionada dentro del sistema de coordenadas de objetos, establecido por el ObjectPlacement del elemento representado por ejemplo, por [[IfcLocalPlacement]] . La Figura 2 muestra que la caja del recinto es lo suficientemente grande como para encerrar completamente el resultado booleano. Definición de xtDef NOTE según ISO CD 10303 42 1992 Esta entidad es un subtipo de medio espacio sólido que es recortado por una caja rectangular circundante. La caja tiene sus bordes paralelos a los ejes de coordenadas del sistema geométrico. El propósito de la caja es facilitar los cálculos CSG mediante la producción de un sólido de tamaño finito. NOTA Entidad adaptada desde el medio espacio boxido definida en ISO 10303 42, HISTORY Nueva entidad en IFC1.5.1 . hange ifc2x4 IFC4 CHANGE uso correcto, sistema de coordenadas de posición para el recinto es el sistema de coordenadas de objeto. BSI Documentation"

#:IFC.xml:9951
msgid "IfcBoxedHalfSpace_Enclosure"
msgstr "Armario"

msgid "IfcBoxedHalfSpace_Enclosure_DEFINITION"
msgstr "Armario"

#:IFC.xml:9970
msgid "IfcCartesianPointList"
msgstr "Lista de puntos de IfcCartesiana"

msgid "IfcCartesianPointList_DEFINITION"
msgstr "El [[IfcCartesianPointList]] es el supertipo abstracto de la lista de puntos. NOTA El [[IfcCartesianPointList]] es introducido para proporcionar una representación compacta de una lista de puntos potencialmente más grande. como en las nubes de puntos, y en la representación indexable de puntos. Nueva entidad HISTORY en IFC4. BSI Documentation"

#:IFC.xml:9971
msgid "IfcCartesianPointList_Dim"
msgstr "Dim"

msgid "IfcCartesianPointList_Dim_DEFINITION"
msgstr "La dimensión espacial de esta clase, sea 2 o 3, dependiendo del subtipo."

#:IFC.xml:9990
msgid "IfcCartesianPointList2D"
msgstr "IfcCartesianPointList2D"

msgid "IfcCartesianPointList2D_DEFINITION"
msgstr "El [[IfcCartesianPointList2D]] define una colección ordenada de dos puntos dimensionales cartesianos. Cada punto cartesiano se proporciona como un punto en dos dimensiones mediante una lista fija de dos coordenadas. El atributo CoordList es una lista de dos dimensiones, donde la primera dimensión es una lista sin límites que representa cada segundo punto cartesiano 2D es una lista fija de dos miembros de la lista, donde 1 es la coordenada x, y 2 la coordenada y del punto cartesiano. NOTA El [[IfcCartesianPointList2D]] es introducido para proporcionar una representación compacta de la lista de puntos más grande. como en la representación indexable de los puntos utilizados como vértices en polígonos. Nueva entidad HISTORY en IFC4 ADD1. Documentation bSI"

#:IFC.xml:9991
msgid "IfcCartesianPointList2D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList2D_CoordList_DEFINITION"
msgstr "Lista de dos dimensiones de los puntos cartesianos proporcionados por dos coordenadas."

#:IFC.xml:9996
msgid "IfcCartesianPointList2D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList2D_TagList_DEFINITION"
msgstr "Lista de etiquetas correspondientes a cada punto que se puede utilizar para identificar una curva base según el atributo Tag en [[IfcOffsetCurveByDistances]] o IfcAlignmentCurve ."

#:IFC.xml:10003
msgid "IfcCartesianPointList3D"
msgstr "IfcCartesianPointList3D"

msgid "IfcCartesianPointList3D_DEFINITION"
msgstr "El [[IfcCartesianPointList3D]] define una colección ordenada de tres puntos tridimensionales cartesianos. Cada punto cartesiano se proporciona como un punto tridimensional mediante una lista fija de tres coordenadas. El atributo CoordList es una lista de dos dimensiones, donde la primera dimensión es una lista sin límites que representa cada segunda dimensión del punto 3D Cartesiano es una lista fija de tres miembros de la lista, donde 1 es la coordenada x, 2 la coordenada y 3 la coordenada z del punto cartesiano. NOTA El [[IfcCartesianPointList]] es introducido para proporcionar una representación compacta de la lista de puntos más grande. como en las nubes de puntos, y en la representación indexable de los puntos utilizados como vértices en objetos tessellados o en curvas poligonales. Nueva entidad HISTORY en IFC4. BSI Documentation"

#:IFC.xml:10004
msgid "IfcCartesianPointList3D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList3D_CoordList_DEFINITION"
msgstr "Lista de dos dimensiones de los puntos cartesianos proporcionados por tres coordenadas."

#:IFC.xml:10009
msgid "IfcCartesianPointList3D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList3D_TagList_DEFINITION"
msgstr "Lista de etiquetas correspondientes a cada punto que se puede utilizar para identificar una curva base según el atributo Tag en [[IfcOffsetCurveByDistances]] o IfcAlignmentCurve ."

#:IFC.xml:10028
msgid "IfcCsgPrimitive3D"
msgstr "IfcCsgPrimitive3D"

msgid "IfcCsgPrimitive3D_DEFINITION"
msgstr "[[IfcCsgPrimitive3D]] es un supertipo abstracto de los primitivos tridimensionales utilizados como elemento raíz de cualquier árbol, o como resultados booleanos dentro de un modelo sólido CSG. Todas las primitivas 3D CSG se definen dentro de un sistema de coordenadas de colocación tridimensional. HISTORY Nueva entidad en IFC2x3. BSI Documentation"

#:IFC.xml:10036
msgid "IfcCsgPrimitive3D_Position"
msgstr "Posición"

msgid "IfcCsgPrimitive3D_Position_DEFINITION"
msgstr "Posición"

#:IFC.xml:10029
msgid "IfcCsgPrimitive3D_Dim"
msgstr "Dim"

msgid "IfcCsgPrimitive3D_Dim_DEFINITION"
msgstr "La dimensión espacial de este elemento geométrico, siempre es 3."

#:IFC.xml:10050
msgid "IfcCsgSolid"
msgstr "IfcCsgSolid"

msgid "IfcCsgSolid_DEFINITION"
msgstr "Un [[IfcCsgSolid]] es la representación de una forma 3D utilizando un modelo de geometría sólida y constructivo. Está representado por un solo CSG 3D, o como resultado de una operación booleana. Los operadores de una operación booleana pueden ser operaciones booleanas mismas formando un árbol CSG. Los siguientes volúmenes pueden ser parte de los modelos de representación de límites de árbol CSG, como [[IfcFacetedBrep]] , [[IfcFacetedBrepWithVoids]] , Cerrados modulos de representación tesselados, como [[IfcPolygonalFaceSet]] , [[IfcTriangulatedFaceSet]] , Swept area sólidos, como [[IfcExtrudedAreaSolid]] , [[IfcRevolvedAreaSolid]] , y sus subtipos para el ajuste de sólidos de área barrida avanzada, como [[IfcSurfaceCurveSweptAreaSolid]] , [[IfcFixedReferenceSweptAreaSolid]] , [[IfcSweptDiskSolid]] Sólidos de espacio medio, como [[IfcHalfSpaceSolid]] y sus subtipos , y primitivos CSG, los subtipos de [[IfcCsgPrimitive3D]] . .extDef NOTE Definición según ISO CD 10303 42 1992 Un sólido representado como un modelo CSG es definido por una colección de sólidos primitivos, combinado usando operaciones Booleanas regularizadas. Las operaciones permitidas son intersección, unión y diferencia. Un CSG sólido requiere dos tipos de información para su definición geométrica y estructural. La información geométrica es transmitida por modelos sólidos. Estos volúmenes típicamente primitivos como cilindros, cuñas y extrusiones, pero pueden incluir modelos generales B Rep. Los modelos sólidos también pueden ser sólidos medio espacio. La información estructural está en un árbol estrictamente un gráfico dirigido acíclico de resultados booleanos y sólidos CSG, que representan una receta para construir el sólido. Los nodos terminales son los primitivos geométricos y otros sólidos. Cada CSG sólido tiene exactamente un resultado booleano asociado con él, que es la raíz del árbol que define el sólido. Puede haber más resultados booleanos dentro del árbol como óperas . La importancia de una entidad sólida CSG es que el sólido definido por el árbol asociado se identifica así como un objeto significativo en sí. y de esta forma se distingue de otras entidades booleanas de resultados que representan resultados intermedios durante el proceso de construcción. NOTA Entidad adaptada de csg sólido se define en ISO 10303 42. HISTORY Nueva Entidad en IFC1.5.1 BSI Documentation"

#:IFC.xml:10051
msgid "IfcCsgSolid_TreeRootExpression"
msgstr "Expresión raíz del árbol"

msgid "IfcCsgSolid_TreeRootExpression_DEFINITION"
msgstr "Expresión booleana de primitivos y operadores regularizados que describen el sólido. La raíz del árbol de expresiones booleanas se da explícitamente como una entidad [[IfcBooleanResult]] o como un subtipo primitivo de [[IfcCsgPrimitive3D]] ."

#:IFC.xml:10058
msgid "IfcExtrudedAreaSolid"
msgstr "IfcAreasólido extraído"

msgid "IfcExtrudedAreaSolid_DEFINITION"
msgstr "The [[IfcExtrudedAreaSolid]] is defined by sweeping a cross section provided by a profile definition. The direction of the extrusion is given by the ExtrudedDirection attribute and the length of the extrusion is given by the Depth attribute. If the planar area has inner boundaries holes defined , then those holes shall be swept into holes of the solid. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the extruded solid. If not provided, it defaults to the current object coordinate system. The ExtrudedDirection is given within the position coordinate system as defined by [[IfcSweptAreaSolid]] . Position . The extruded direction can be any direction which is not perpendicular to the z axis of the position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The result is a solid. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. Figure 1 Extruded area solid geometry EXAMPLE Figure 2 illustrates geometric parameters and additional positioning parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the y axis. Figure 2 Repositioned extruded area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 An extruded area solid is a solid defined by sweeping a bounded planar surface. The direction of translation is defined by a direction vector, and the length of the translation is defined by a distance depth. The planar area may have holes which will sweep into holes in the solid. NOTE Entity adapted from extruded area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .use head Texture use definition For side faces, textures are aligned facing upright continuously along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the extrusion axis according to RepeatT . For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. EXAMPLE Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcExtrudedAreaSolid]] having a profile of [[IfcIShapeProfileDef]], the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth . Figure 3 Extruded area solid textures bSI Documentation"

#:IFC.xml:10070
msgid "IfcExtrudedAreaSolid_ExtrudedDirection"
msgstr "Dirección extraída"

msgid "IfcExtrudedAreaSolid_ExtrudedDirection_DEFINITION"
msgstr "Dirección extraída"

#:IFC.xml:10063
msgid "IfcExtrudedAreaSolid_Depth"
msgstr "Profundidad"

msgid "IfcExtrudedAreaSolid_Depth_DEFINITION"
msgstr "La distancia que la superficie debe ser barrida a lo largo de la ExtrudedDirección ."

#:IFC.xml:10082
msgid "IfcExtrudedAreaSolidTapered"
msgstr "IfcExtrudedAreaSolidTapered"

msgid "IfcExtrudedAreaSolidTapered_DEFINITION"
msgstr "[[IfcExtrudedAreaSolidTapered]] is defined by sweeping a cross section along a linear spine. The cross section may change along the sweep from the shape of the start cross section into the shape of the end cross section. The resulting solid is bounded by three or more faces A start face, an end face each defined by start and end planes and sections , and one or more lateral faces. Each lateral face is a ruled surface defined by a pair of corresponding edges of the start and end section. NOTE Given that the start and end section is provided by a polygon, the corresponding vertices of the start and end cross section are connected, forming a quadrilateral polygon between each pair of corresponding vertices. The surface defined by the bounding quadrilateral polygon is a ruled surface, that could be approximated by triangulation. The linear spine is defined by Start point SELF [[IfcSweptAreaSolid]].Position.Location Direction SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection Distance SELF [[IfcExtrudedAreaSolid]].Depth The start cross section is defined by SELF [[IfcSweptAreaSolid]].SweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by SELF [[IfcSweptAreaSolid]].Position.P 1 and SELF [[IfcSweptAreaSolid]].Position.P 2 The linear spine starts at the plane of the start cross section. The spine is not necessarily perpendicular to the plane. The end cross section is defined by EndSweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by translating the start position coordinates provided by SELF [[IfcSweptAreaSolid]].Position along the spine direction by the spine distance. The plane of the end cross section is coplanar to the plane of the start cross section. The end cross section is topologically similar to the start cross section i.e. having the same number of vertices and edges . The end cross section can either be defined by the same paramteric profile using different parameter values, or by a 2D Cartesian transformation of the start profile within the end cross section plane. In case of two parameterized profiles the shape is constructed as follows The end profile, defined by a cross section based on the same profile paramterization as the start profile, is translated by the spine distance along the spine direction. It may be shifted within the XY plane of the end postion coordinate system and may be twisted using the rotation parameter. The shift and rotation parameter are provided by the end cross section being of type [[IfcParameterizedProfileDef]] , where Shift is EndSweptArea [[IfcParameterizedProfileDef]].Position.Location Rotation is EndSweptArea [[IfcParameterizedProfileDef]].Position.RefDirection Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. In case of Cartesian transformation of the start cross section the shape is constructed as follows The cross section curve, which starts as a curve in the XY plane of the position coordinate system, is first scaled about the origin by the scale parameter. It is then translated by the spine distance along the spine direction. It maybe twisted by using the rotation parameter. The scale and rotation parameter are provided by the end cross section being of type [[IfcDerivedProfileDef]] , where Scale is EndSweptArea [[IfcDerivedProfileDef]].Operator.Scale Rotation is EndSweptArea [[IfcDerivedProfileDef]].Operator.Axis1 Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. HISTORY New entity in IFC4. .spec head Informal Propositions 1. Mirroring within [[IfcDerivedProfileDef]].Operator shall not be used bSI Documentation"

#:IFC.xml:10089
msgid "IfcExtrudedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcExtrudedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "EndSweptArea"

#:IFC.xml:10101
msgid "IfcFaceBasedSurfaceModel"
msgstr "Modelo basado en superficie Ifcface"

msgid "IfcFaceBasedSurfaceModel_DEFINITION"
msgstr "El [[IfcFaceBasedSurfaceModel]] representa una forma mediante conjuntos de caras conectadas. Las caras conectadas tienen una dimensión 2 y están situadas en un espacio de coordenada de dimensión 3. .extDef NOTE Definición según ISO CD 10303 42 1992 Un modelo de superficie basado en caras es descrito por un conjunto de conjuntos conectados de caras de dimensión 2. Los conjuntos de caras conectadas no se intersecarán excepto en los bordes y vértices, excepto que una cara en un conjunto de caras conectado puede superponerse a una cara en otro conjunto de caras conectado, siempre que los límites de cara sean idénticos. Debe haber al menos una cara conectada. Un conjunto de caras conectadas puede existir independientemente de un modelo de superficie. NOTA Entidad adaptada del modelo de superficie basado en caras definido en ISO 10303 42. HISTORY Nueva entidad en IFC2x. Los conjuntos de caras conectados no se superpondrán ni se intersecarán excepto en caras comunes, bordes o vértices. 2. Las caras fbsm tienen dimensión 2. eprecated IFC4 CHANGE The entity has been deprecated and shall not be used. The entity [[IfcFacetedBrep]] shall be used instead. bSI Documentation"

#:IFC.xml:10110
msgid "IfcFaceBasedSurfaceModel_FbsmFaces"
msgstr "FbsmFaces"

msgid "IfcFaceBasedSurfaceModel_FbsmFaces_DEFINITION"
msgstr "FbsmFaces"

#:IFC.xml:10102
msgid "IfcFaceBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcFaceBasedSurfaceModel_Dim_DEFINITION"
msgstr "La dimensión espacial de esta clase, siempre es 3."

#:IFC.xml:10122
msgid "IfcFacetedBrep"
msgstr "IfcFacetedBrep"

msgid "IfcFacetedBrep_DEFINITION"
msgstr "El [[IfcFacetedBrep]] es una mezcla de polígonos sólidos con la restricción de que todas las caras son polígonos planas y delimitados. El uso de NOTA de [[IfcFacetedBrep]] está restringido para modelos de representación límite con superficies planas solamente. El diagrama muestra los elementos topológicos y geométricos que se utilizan para los breps facetados. Cada [[IfcCartesianPoint]], usado dentro del [[IfcFacetedBrep]] debe ser referenciado tres veces por un [[IfcPolyLoop]] delimitando un [[IfcFace]] diferente ]. Diagrama de la figura 1 que muestra el uso de [[IfcFacetedBrep]] . xtDef NOTE Definition according to ISO CD 10303 42 1992 A faceted B Rep is a simple form of limit representation model in which all faces are planar and all edges are straight lines. A diferencia del modelo B, los bordes y vértices no están representados explícitamente en el modelo, pero están disponibles implícitamente a través de la entidad de bucle poly. Un representante B facetado tiene que cumplir las mismas restricciones topológicas que el multiplo sólido B rep. .extDef El componente B faceted ha sido introducido para soportar el mayor número de sistemas que permiten representaciones sólidas tipo límite con superficies planas solamente. NOTA Entidad adaptada de múltiples brep sólido definida en ISO 10303 42, HISTORY Nueva entidad en IFC1.0 .spec head Informal Propositions 1. Todos los bucles delgados de todas las caras de todas las caras de los proyectiles del [[IfcFacetedBrep]] deberán ser de tipo [[IfcPolyLoop]] . 2. Todos los policos harán referencia a todos los vértices, compartiendo el vértice. cada punto cartesiano serán referencias de al menos tres poliocios. Documentación bSI"

#:IFC.xml:10125
msgid "IfcFacetedBrepWithVoids"
msgstr "IfcFacetedBrepWithVoids"

msgid "IfcFacetedBrepWithVoids_DEFINITION"
msgstr "El [[IfcFacetedBrepWithVoids]] es una especialización de un miembro B facetado que contiene uno o más vacíos en su interior. Los vacíos están representados como conchas cerradas que se definen de manera que el shell normal apunte al vacío. NOTA Entidad adaptada de brep con vacíos y brep facetado definidos en ISO 10303 42, entidad nueva en IFC1.0 . hange ifc2x4 IFC4 CHANGE Subtyping cambió de [[IfcManifoldSolidBrep]] a [[IfcFacetedBrep]] con compatibilidad ascendente para el intercambio basado en archivos. Proposiciones informales de cabeza pec 1. Cada cáscara vacía se separará del caparazón exterior y de cualquier otro caparazón vacío 2. Cada cáscara vacía se encerrará dentro del proyectil externo pero no dentro de ningún otro proyectil vacío. En particular, la concha externa no está en el conjunto de cartuchos vacíos 3. Cada shell en el [[IfcManifoldSolidBrep]] solo se hace referencia una vez. 4. Todos los bucles delgados de todas las caras de todos los proyectiles del [[IfcFacetedBrep]] deberán ser de tipo [[IfcPolyLoop]] . documentación bSI"

#:IFC.xml:10128
msgid "IfcFacetedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcFacetedBrepWithVoids_Voids_DEFINITION"
msgstr "Voids"

#:IFC.xml:10140
msgid "IfcFixedReferenceSweptAreaSolid"
msgstr "IfcFixedReferenceSweptAreaSolid"

msgid "IfcFixedReferenceSweptAreaSolid_DEFINITION"
msgstr "An [[IfcFixedReferenceSweptAreaSolid]] is a type of swept area solid which is the result of sweeping an area along a Directrix . The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the tangent of the directrix at this point, and the profile s x axis agrees to the FixedReference direction. The orientation of the curve during the sweeping operation is controlled by the FixedReference direction. The SweptArea is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local X axis is in the direction of the projection of FixedReference onto the normal plane to the directrix at this point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The resulting swept solid is placed by the Position coordinate system. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , the parameter value is provided based on the curve parameterization. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , the parameter value is provided based on the curve parameterization. If no EndParam is provided the end defaults to the end of the directrix. NOTE The StartParam and the EndParam are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In many cases, it is a surface of extrusion. The directrix lies on the surface, often defined as a p curve at this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the FixedReference direction. The Axis2 the y axis, or v is constructed. In this case the resulting swept solid is not repositioned. The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a CartesianTransformationOperator3d with attributes LocalOrigin as point 0 0 0 , Axis1 as the FixedReference . Axis3 as the direction of the tangent vector t at the point of the Directrix with parameter u . The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the Directrix parameter u . NOTE The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE Entity adapted from fixed reference swept surface defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. The SweptArea shall lie in the plane z 0. 2. The FixedReference shall not be parallel to a tangent vector to the directrix at any point along this curve. 3. The Directrix curve shall be tangent continuous. bSI Documentation"

#:IFC.xml:10143
msgid "IfcFixedReferenceSweptAreaSolid_FixedReference"
msgstr "FixedReference"

msgid "IfcFixedReferenceSweptAreaSolid_FixedReference_DEFINITION"
msgstr "FixedReference"

#:IFC.xml:10155
msgid "IfcGeometricCurveSet"
msgstr "IfcGeometricCurveSet"

msgid "IfcGeometricCurveSet_DEFINITION"
msgstr "El [[IfcGeometricCurveSet]] se utiliza únicamente para el intercambio de la representación de la forma que consiste en una colección de puntos 2D o 3D y curvas. xtDef NOTE Definición según ISO CD 10303 42 1992 Un conjunto de curvas geométricas es una colección de dos o tres puntos y curvas dimensionales. NOTA Entidad adaptada de la curva geométrica definida en ISO 10303 42."

#:IFC.xml:10162
msgid "IfcGeometricSet"
msgstr "Conjunto geométrico Ifc"

msgid "IfcGeometricSet_DEFINITION"
msgstr "El [[IfcGeometricSet]] se utiliza para el intercambio de la representación de la forma consistente en puntos 2D o 3D, curvas y superficies, que no tienen una estructura topológica como conjuntos de caras o proyectiles conectados , no son vendidos y no son modelos sólidos como sólidos barridos, CSG o Brep . .extDef NOTE Definición de ISO CD 10303 42 Esta entidad está destinada a la transferencia de modelos cuando una estructura topológica no está disponible. NOTA Entidad adaptada del conjunto geométrico definido en ISO 10303 42. HISTORY Nueva entidad en IFC2x. BSI Documentation"

#:IFC.xml:10167
msgid "IfcGeometricSet_Elements"
msgstr "Elementos"

msgid "IfcGeometricSet_Elements_DEFINITION"
msgstr "Los elementos geométricos que componen el conjunto geométrico, pueden ser puntos, curvas o superficies pero son necesarias para ser de la misma dimensión de espacio de coordenadas."

#:IFC.xml:10172
msgid "IfcGeometricSet_Dim"
msgstr "Dim"

msgid "IfcGeometricSet_Dim_DEFINITION"
msgstr "La dimensión espacial de esta clase, es idéntica al primer elemento del conjunto. Una regla en la que se garantice que todos los elementos tengan la misma dimensionalidad."

#:IFC.xml:10179
msgid "IfcHalfSpaceSolid"
msgstr "IfcHalfSpaceSolid"

msgid "IfcHalfSpaceSolid_DEFINITION"
msgstr "Un medio espacio sólido divide el dominio en dos por una superficie base. Normalmente, la superficie base es un avión y despliega el espacio infinitivo en dos e indica el lado del medio espacio al acordar o no estar de acuerdo con la normal del avión. La figura 1 ilustra la definición del [[IfcHalfSpaceSolid]] dentro de un sistema de coordenadas determinado. La superficie base es dada por un plano sin límites, el límite rojo se muestra sólo con fines de visualización. medio espacio sólido .. .. .. .. .. .. .. .. figuras ifchalfspacesolid layout1.gif Figura 1 Espacio medio geometry sólido . Definición de xtDef NOTE según ISO CD 10303 42 1992 Un medio espacio sólido se define por el medio espacio que es el subconjunto regular del dominio que se encuentra a un lado de una superficie sin límites. El lado de la superficie que está en el medio espacio está determinado por la superficie normal y la bandera del acuerdo. Si la bandera de acuerdo es TRUE, entonces el subconjunto es el que se aleja normalmente. Si la bandera de acuerdo es FALSE, entonces el subconjunto es el que indica normalmente. Para un medio espacio válido sólido, la superficie dividirá el dominio en dos subconjuntos exactamente. Además, dentro del dominio la superficie será múltiple y todas las normales de superficie indicarán en el mismo subet. NOTA Un medio espacio no es un subtipo de modelo sólido, los sólidos de medio espacio sólo son útiles como operandos en expresiones booleanas. NOTA Entidad adaptada desde medio espacio sólido definida en ISO 10303 42. HISTORY Nueva entidad en IFC1.5 .spec head Informal Propositions 1. Si el medio espacio sólido es de subtipo medio espacio [[IfcBoxedHalfSpace]] , el dominio en cuestión es el del recinto del atributo. En todos los demás casos el dominio es todo el espacio y la superficie base será libre 2. La superficie base debe ser un subtipo de superficie sin límite de [[IfcElementarySurface]] . documentación bSI"

#:IFC.xml:10192
msgid "IfcHalfSpaceSolid_BaseSurface"
msgstr "Superficie base"

msgid "IfcHalfSpaceSolid_BaseSurface_DEFINITION"
msgstr "Superficie base"

#:IFC.xml:10180
msgid "IfcHalfSpaceSolid_AgreementFlag"
msgstr "Bandera de acuerdo"

msgid "IfcHalfSpaceSolid_AgreementFlag_DEFINITION"
msgstr "La bandera de acuerdo es TRUE si la normal de la superficie base apunta lejos del material del [[IfcHalfSpaceSolid]]. De lo contrario, es FALSE."

#:IFC.xml:10185
msgid "IfcHalfSpaceSolid_Dim"
msgstr "Dim"

msgid "IfcHalfSpaceSolid_Dim_DEFINITION"
msgstr "La dimensión espacial de esta clase, siempre es 3"

#:IFC.xml:10205
msgid "IfcIndexedPolygonalFace"
msgstr "IfcIndexado Cara Poligonal"

msgid "IfcIndexedPolygonalFace_DEFINITION"
msgstr "El [[IfcIndexedPolygonalFace]] es una representación compacta de una cara planar que forma parte de una cara. Los vértices de la cara plano poligonal son proporcionados por 3 o más puntos cartesianos. definidos por índices que apuntan a un [[IfcCartesianPointList3D]] , ya sea direcly, o a través del PnIndex , si se proporciona en [[IfcPolygonalFaceSet]] . La figura 1 muestra un [[IfcIndexedPolygonalFace]] en un [[IfcPolygonalFaceSet]] no usando PnIndex por defecto . [[IfcIndexedPolygonalFace]] .. .. .. .. figuras ifcindexedpolygonalface 01. ng Figura 1 Geometría de la cara poligonal proporcionada por los índices en una lista de puntos Figura 2 muestra un [[IfcIndexedPolygonalFace]] en un [[IfcPolygonalFaceSet]] usando PnIndex . [[IfcIndexedPolygonalFace]] nosotros ing PnIndex .. .. .. .. .. figuras ifcindexedpolygonalface 02. ng Figura 2 Geometría del rostro poligonal proporcionada por los índices en una lista de puntos HISTORY Nueva entidad en IFC4 Agregación 2. BSI Documentation"

#:IFC.xml:10213
msgid "IfcIndexedPolygonalFace_ToFaceSet"
msgstr "ToFaceSet"

msgid "IfcIndexedPolygonalFace_ToFaceSet_DEFINITION"
msgstr "ToFaceSet"

#:IFC.xml:10206
msgid "IfcIndexedPolygonalFace_CoordIndex"
msgstr "CoordIndex"

msgid "IfcIndexedPolygonalFace_CoordIndex_DEFINITION"
msgstr "Una lista dimensional con los índices para los tres o más puntos, que definen los vértices del bucle exterior. Si el conjunto de la cara sellada está cerrado, indicado por SELF [[IfcTessellatedFaceSet]]. perdió , luego los puntos, definiendo el bucle exterior, conectará en sentido contrario a las agujas del reloj como se ve desde el exterior del cuerpo, para que la normalidad resultante apunte hacia afuera. X 0D NOTA Las coordenadas de los vértices son proporcionadas por la lista indexada de SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList . Si se proporciona el SELF [[IfcTessellatedFaceSet]].PnIndex, los índices lo señalan, de lo contrario directamente en el [[IfcCartesianPointList3D]] ."

#:IFC.xml:10227
msgid "IfcIndexedPolygonalFaceWithVoids"
msgstr "IfcIndexedPolygonalFaceWithVoids"

msgid "IfcIndexedPolygonalFaceWithVoids_DEFINITION"
msgstr "El [[IfcIndexedPolygonalFaceWithVoids]] es una representación compacta de una cara planar con bucles internos, siendo parte de un conjunto de caras. HISTORY Nueva entidad en IFC4 Agrega 2. Documentación bSI"

#:IFC.xml:10228
msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices"
msgstr "Indices InnerCoords"

msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices_DEFINITION"
msgstr "Lista de dos dimensiones donde la primera dimensión representa cada bucle interno de 1 a N y la segunda dimensión los índices a tres o más puntos que definen los vértices de cada bucle interior. Si el conjunto de la cara sellada está cerrado, indicado por SELF [[IfcTessellatedFaceSet]]. perdió , luego los puntos, definiendo los bucles internos, se conectarán en el sentido de las agujas del reloj, como se ve desde el exterior del cuerpo. X 0D NOTA Las coordenadas de los vértices son proporcionadas por la lista indexada de SELF [[IfcTessellatedFaceSet]]. oordinates.CoordList . Si se proporciona el SELF [[IfcTessellatedFaceSet]].PnIndex, los índices apuntan en él, de lo contrario directamente en el [[IfcCartesianPointList3D]] ."

#:IFC.xml:10235
msgid "IfcManifoldSolidBrep"
msgstr "IfcManifoldSolidBrep"

msgid "IfcManifoldSolidBrep_DEFINITION"
msgstr "The [[IfcManifoldSolidBrep]] is a solid represented as a collection of connected surfaces that delimit the solid from the surrounding non solid. Instances of type [[IfcManifoldSolidBrep]] shall be of type [[IfcFacetedBrep]] , using only [[IfcPolyLoop]] for the bounds of [[IfcFaceBound]] , or of type [[IfcAdvancedBrep]] , using only [[IfcAdvancedFace]] for the face geometry, and [[IfcEdgeCurve]] for the edges. .extDef NOTE Definition according to ISO CD 10303 42 1992 A manifold solid b rep is a finite, arcwise connected volume bounded by one or more surfaces, each of which is a connected, oriented, finite, closed 2 manifold. There is no restriction on the genus of the volume, nor on the number of voids within the volume. The Boundary Representation B rep of a manifold solid utilizes a graph of edges and vertices embedded in a connected, oriented, finite, closed two manifold surface. The embedded graph divides the surface into arcwise connected areas known as faces. The edges and vertices, therefore, form the boundaries of the face and the domain of a face does not include its boundaries. The embedded graph may be disconnected and may be a pseudo graph. The graph is labeled that is, each entity in the graph has a unique identity. The geometric surface definition used to specify the geometry of a face shall be 2 manifold embeddable in the plane within the domain of the face. In other words, it shall be connected, oriented, finite, non self intersecting, and of surface genus 0. Faces do not intersect except along their boundaries. Each edge along the boundary of a face is shared by at most one other face in the assemblage. The assemblage of edges in the B rep do not intersect except at their boundaries i.e., vertices . The geometry curve definition used to specify the geometry of an edge shall be arcwise connected and shall not self intersect or overlap within the domain of the edge. The geometry of an edge shall be consistent with the geometry of the faces of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. A B rep is represented by one or more closed shells which shall be disjoint. One shell, the outer, shall completely enclose all the other shells and no other shell may enclose a shell. The facility to define a B rep with one or more internal voids is provided by a subtype. The following version of the Euler formula shall be satisfied, math .. .. .. .. .. .. figures ifcmanifoldsolidbrep math1.gif where V, E, F, L X 7El X 7E and S are the numbers of unique vertices, edges, faces, loop uses and shells in the model and G s is the sum of the genus of the shells. NOTE Entity adapted from manifold solid brep defined in ISO 10303 42. HISTORY New entity in IFC Release 1.0 Informal proposition 1. The dimensionality of a manifold solid brep shall be 3. 2. The extent of the manifold solid brep shall be finite and non zero. 3. All elements of the manifold solid brep shall have defined associated geometry. 4. The shell normals shall agree with the B rep normal and point away from the solid represented by the B rep. 5. Each face shall be referenced only once by the shells of the manifold solid brep. 6. The Euler equation shall be satisfied for the boundary representation, where the genus term shell term us the sum of the genus values for the shells of the brep. bSI Documentation"

#:IFC.xml:10238
msgid "IfcManifoldSolidBrep_Outer"
msgstr "Martín"

msgid "IfcManifoldSolidBrep_Outer_DEFINITION"
msgstr "Martín"

#:IFC.xml:10250
msgid "IfcPointListDim__PointList"
msgstr "IfcPointListDim PointList"

msgid "IfcPointListDim__PointList_DEFINITION"
msgstr "Esta función determina la dimensión de una lista de puntos cartesianos."

#:IFC.xml:10258
msgid "IfcPolygonalBoundedHalfSpace"
msgstr "Espacio delimitado IfcPoligonal"

msgid "IfcPolygonalBoundedHalfSpace_DEFINITION"
msgstr "The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary. The base surface of the half space is positioned by its normal relative to the object coordinate system as defined at the supertype [[IfcHalfSpaceSolid]] , and its polygonal with or without arc segments boundary is defined in the XY plane of the position coordinate system established by the Position attribute, the subtraction body is extruded perpendicular to the XY plane of the position coordinate system, that is, into the direction of the positive Z axis defined by the Position attribute. The boundary is defined by a 2 dimensional polyline or 2 dimensional composite curve, consisting of straight segments and circular arc segments within the XY plane of the position coordinate system. The side of the surface which is in the half space is determined by the surface normal and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normal points away from. If the agreement flag is FALSE, then the subset is the one the normal points into. NOTE A polygonal bounded half space is not a subtype of [[IfcSolidModel]] , half space solids are only useful as operands in Boolean expressions. Figure 1 illustrates a polygonal bounded half space. Black coordinates indicate the object coordinate system usually provided by [[IfcLocalPlacement]] . Green coordinates indicate the position coordinate system the PolygonalBoundary is given within this coordinate system. It is provided by [[IfcPolygonalBoundedHalfSpace]].Position. This coordinate system is relative to the object coordinate system. The extrusion direction of the subtraction body is the positive Z axis. Red coordinates indicate the normal of the plane. It is provided by the BaseSurface [[IfcSurface]].Position . This normal is also relative to the object coordinate system. Figure 1 Polygonal half space geometry The polygonal bounded half space is used to limit the volume of the half space in Boolean difference expressions. Only the part that is defined by a theoretical intersection between the half space solid and an extruded area solid, defined by extruding the polygonal boundary, is used for Boolean expressions. The PolygonalBoundary defines the 2D polyline which bounds the effectiveness of the half space in Boolean expressions. The BaseSurface is defined by a plane, and the normal of the plane together with the AgreementFlag defines the side of the material of the half space. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The [[IfcPolyline]] or the [[IfcCompositeCurve]] providing the PolygonalBoundary shall be closed. 2. If the PolygonalBoundary is given by an [[IfcCompositeCurve]] , it shall only have [[IfcCompositeCurveSegment]] s of type [[IfcPolyline]] , or [[IfcTrimmedCurve]] having a BasisCurve of type [[IfcLine]] , or [[IfcCircle]] 3. The BaseSurface defined at supertype [[IfcHalfSpaceSolid]] shall be of type [[IfcPlane]] 4. The normal of the plane, being the BaseSurface , shall not be perpendicular to the z axis of the position coordinate system bSI Documentation"

#:IFC.xml:10269
msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary"
msgstr "Límite poligonal"

msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary_DEFINITION"
msgstr "Límite poligonal"

#:IFC.xml:10281
msgid "IfcPolygonalBoundedHalfSpace_Position"
msgstr "Posición"

msgid "IfcPolygonalBoundedHalfSpace_Position_DEFINITION"
msgstr "Posición"

#:IFC.xml:10293
msgid "IfcPolygonalFaceSet"
msgstr "IfcPolygonalFaceSet"

msgid "IfcPolygonalFaceSet_DEFINITION"
msgstr "The [[IfcPolygonalFaceSet]] is a tessellated face set with all faces being bound by polygons. The planar faces are constructed by implicit polylines defined by three or more Cartesian points. Each planar face is defined by an instance of [[IfcIndexedPolygonalFace]] , or in case of faces with inner loops by [[IfcIndexedPolygonalFaceWithVoids]] . Depending on the value of the attribute Closed the instance of [[IfcPolygonalFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The attribute Faces refers to a list of [[IfcIndexedPolygonalFace]] s having an one based CoordIndex that provides three or more indices. If the face has inner loops, the [[IfcIndexedPolygonalFaceWithVoids]] has a two dimensional, one based list, where the first dimension of the two dimensional list addresses the list of inner loops the second dimension of the two dimensional list provides three or more indices each being a vertex of the planar polygon representing the inner loop. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. .. .. figures ifcpolygonalfaceset 01.png Figure 1 Use of PnIndex NOTE If the [[IfcPolygonalFaceSet]] is closed, the face vertices of the [[IfcIndexedPolygonalFace]] s shall connect counterclock wise when seen from the outside of the closed shell to guarantee that the face normal points away from the material of the shell. Inner loops, provided by the [[IfcIndexedPolygonalFaceWithVoids]] , shall connect clock wise. Figure 2 shows an IfcFacetedFaceSet represented by 1 [[IfcIndexedPolygonalFace]] 1, 2, 3, 4 2 [[IfcIndexedPolygonalFace]] 6, 2, 3, 7 3 [[IfcIndexedPolygonalFace]] 7, 3, 4, 8 4 [[IfcIndexedPolygonalFace]] 8, 4, 1, 5 5 [[IfcIndexedPolygonalFace]] 1, 4, 3, 2 6 [[IfcIndexedPolygonalFace]] 6, 7, 8, 5 7 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 2 Polygonal face set geometry NOTE The definition of IfcFacetedFaceSet is based on the indexedFaceSet defined in ISO IEC 19775 1 HISTORY New entity in IFC4 Addendum 2. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two outer or inner boundaries of faces the topological normal at each point on the boundary of the polygonal face set shall point away from the material of the solid. bSI Documentation"

#:IFC.xml:10213
msgid "IfcPolygonalFaceSet_Faces"
msgstr "Caras"

msgid "IfcPolygonalFaceSet_Faces_DEFINITION"
msgstr "Caras"

#:IFC.xml:10294
msgid "IfcPolygonalFaceSet_Closed"
msgstr "Cerrado"

msgid "IfcPolygonalFaceSet_Closed_DEFINITION"
msgstr "Indica si el [[IfcPolygonalFaceSet]] es una shell cerrada o no. Si se omite, no se puede proporcionar tal información."

#:IFC.xml:10299
msgid "IfcPolygonalFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcPolygonalFaceSet_PnIndex_DEFINITION"
msgstr "La lista de enteros que definen las ubicaciones en el [[IfcCartesianPointList3D]] para obtener las coordenadas de puntos para los índices en las caras poligonales indexadas. Si el PnIndex no se proporciona, los índices en las caras poligonales indexadas apuntan directamente al [[IfcCartesianPointList3D]] ."

#:IFC.xml:10306
msgid "IfcRectangularPyramid"
msgstr "IfcRectangularpiramida"

msgid "IfcRectangularPyramid_DEFINITION"
msgstr "El [[IfcRectangularPyramid]] es un primitivo CSG 3D de Geometría Solida de Construcción. Es un sólido con una base rectangular y un punto llamado apex como la parte superior. El eje del centro de la base a la apex es perpendicular a la base. El atributo Posición heredada define el IfcAxisPlacement3D y proporciona la ubicación y orientación del SELF de la pirámides [[IfcCsgPrimitive3D]]. osición La ubicación y orientación del sistema de ejes para el primitivo. SELF [[IfcCsgPrimitive3D]].Position. localización El centro del área circular es la cara inferior del cono. SELF [[IfcCsgPrimitive3D]]. osión. osición 3 El eje z del sistema de coordenadas de colocación heredado proporciona el eje central del [[IfcRightCircularCone]] , y el ápex está a la altura aplicada a la dirección positiva del eje z. El BottomRadius define la base circular en el plano xy del sistema de coordenadas de colocación. Como se muestra en la Figura 1, la pirámides está posicionada dentro de su propio sistema de coordenadas de posición. El origen es el centro del rectángulo inferior, que se encuentra en el plano XY. La apex se encuentra en el eje z positivo en 0, 0, Altura , pyramid .. .. .. figuras ifcrectangularpyramid layout1. ng Figura 1 Pyramid geometry HISTORY Nueva entidad en IFC2x3 . se La textura de la cabeza utiliza la definición de cada cara de lado triangular, las texturas están alineadas de cara vertical. Las texturas se estiran o se repiten hasta el punto de la base de cada cara de acuerdo a Repetirs. Las texturas se estiran o se repiten hacia el punto superior de acuerdo con Repetir T, donde el punto superior tiene coordenadas de 0.5,1.0 si Repetir es False. En la cara inferior, las texturas están alineadas frente a la parte trasera. La figura 2 ilustra el mapeo predeterminado de texturas con una repetición de textura y repetición False de textura con pinceladas . La imagen a la izquierda muestra la textura donde el eje S apunta a la derecha y el eje T apunta hacia arriba. La imagen a la derecha muestra la textura aplicada a la geometría donde el eje X vuelve a la derecha, el eje Y apunta de vuelta a la izquierda, y el eje Z apunta hacia arriba. ridtable Origin X Origin X Origin Y Origin Z S Eje T Eje X 0 YLength 0 Y hacia el punto superior derecho X Xlength 0 0 Y hacia el punto superior Front Y 0 0 0 0 X hacia el punto superior Back Y XLength YLength 0 X hacia el punto superior Bottom Z XLength 0 0 X Y Figura 2 Pyramid texturas bSI Documentación"

#:IFC.xml:10307
msgid "IfcRectangularPyramid_XLength"
msgstr "XLongitud"

msgid "IfcRectangularPyramid_XLength_DEFINITION"
msgstr "La longitud de la base medida a lo largo del eje X de colocación. Es proporcionado por la colocación del eje heredado a través de SELF [[IfcCsgPrimitive3D]].Position.P 1 ."

#:IFC.xml:10312
msgid "IfcRectangularPyramid_YLength"
msgstr "Longitud"

msgid "IfcRectangularPyramid_YLength_DEFINITION"
msgstr "La longitud de la base medida a lo largo del eje Y de la colocación. Es proporcionado por la colocación del eje heredado a través de SELF [[IfcCsgPrimitive3D]].Position.P 2 ."

#:IFC.xml:10317
msgid "IfcRectangularPyramid_Height"
msgstr "Altura"

msgid "IfcRectangularPyramid_Height_DEFINITION"
msgstr "La altura de la apex sobre el plano de la base, medida en la dirección del eje Z de colocación, el SELF [[IfcCsgPrimitive3D]]. osition.P 2 ."

#:IFC.xml:10324
msgid "IfcRevolvedAreaSolid"
msgstr "IfcRevolvedAreaSolid"

msgid "IfcRevolvedAreaSolid_DEFINITION"
msgstr "An [[IfcRevolvedAreaSolid]] is a solid created by revolving a cross section provided by a profile definition about an axis. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the revolved solid. If not provided, it defaults to the current object coordinate system. The axis and the cross section shall be in the same plane, prior to any repositioning. NOTE Both the axis and the cross section are required to lie in the xy plane of the object position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the revolved solid. The revolved area solid defines the revolution of a 2D area given by a profile definition by an axis and angle. The result is a solid. The swept area is given by a profile definition. The profile is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. The AxisLine can have any orientation within the XY plane, it does not have to be parallel to the y axis as shown in the illustration. Figure 1 Revolved area solid geometry EXAMPLE Figure 1 illustrates geometric parameters and additional positioning parameters of the revolved area solid. The revolved area solid defines the rotation of a 2D area by an axis and angle. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the x axis. Figure 2 Repositioned revolved area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A revolved area solid is a solid formed by revolving a planar bounded surface about an axis. The axis shall be in the plane of the surface and the axis shall not intersect the interior of the bounded surface. The bounded surface may have holes which will sweep into holes in the solid. The direction of revolution is clockwise when viewed along the axis in the positive direction. More precisely if A is the axis location and d is the axis direction and C is an arc on the surface of revolution generated by an arbitrary point p on the boundary of the swept area, then C leaves p in direction d x p A as the area is revolved. NOTE Entity adapted from revolved area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .spec head Informal Propositions 1. The AxisLine shall lie in the plane of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 2. The AxisLine shall not intersect the interior of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 3. The Angle shall be between 0 and 360 , or 0 and 2π depending on the unit type for [[IfcPlaneAngleMeasure]] . .use head Texture Use Definition For side faces, textures are aligned facing upright along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the outermost longest revolution path according to RepeatT , where coordinates are compressed towards the axis of revolution. For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcRevolvedAreaSolid]] having a profile of [[IfcTShapeProfileDef]] and revolved at 22.5 degrees, the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth . Figure 3 Revolved area solid textures bSI Documentation"

#:IFC.xml:10344
msgid "IfcRevolvedAreaSolid_Axis"
msgstr "Eje"

msgid "IfcRevolvedAreaSolid_Axis_DEFINITION"
msgstr "Eje"

#:IFC.xml:10333
msgid "IfcRevolvedAreaSolid_Angle"
msgstr "Ángulo"

msgid "IfcRevolvedAreaSolid_Angle_DEFINITION"
msgstr "El ángulo a través del cual se hará el barrido. Este ángulo se mide desde el plano del área barrida proporcionada por el plano XY del sistema de coordenadas de posición."

#:IFC.xml:10338
msgid "IfcRevolvedAreaSolid_AxisLine"
msgstr "AxisLine"

msgid "IfcRevolvedAreaSolid_AxisLine_DEFINITION"
msgstr "Línea del eje de revolución."

#:IFC.xml:10356
msgid "IfcRevolvedAreaSolidTapered"
msgstr "IfcRevolvedAreaSolidTapered"

msgid "IfcRevolvedAreaSolidTapered_DEFINITION"
msgstr "[[IfcRevolvedAreaSolidTapered]] se define por desplazar una sección cruzada a lo largo de un arco circular. La sección transversal puede cambiar a lo largo de la parte trasera de salida, desde la forma de la sección de cruz de salida. Después se conectan los vértices correspondientes de las secciones cruzadas de inicio y fin. La superficie delimitada puede tener agujeros que se barren en agujeros en el sólido. El eje de rotación es definido por el punto de inicio SELF [[IfcSweptAreaSolid]]. osition.Location Direction SELF [[IfcRevolvedAreaSolid]].Eje de rotación SELF [[IfcRevolvedAreaSolid]]. xisLine , creado a partir del punto de partida y dirección por una unidad de tamaño de 1 unidad. Los ángulos orientativos positivos se aplican en el sentido de las agujas del reloj cuando se mira la dirección positiva del eje de rotación. La sección cruza de inicio está definida por SELF [[IfcSweptAreaSolid]]. weptArea Superficie plano delimitada en el plano XY del sistema de coordenadas de posición definido por SELF [[IfcSweptAreaSolid]]. osition.P 1 y SELF [[IfcSweptAreaSolid]]. osition.P 2 El eje de rotación se encuentra en el plano de la sección de cruz de salida, pero no se interseca el interior de la sección de cruz de salida. La sección cruzada final es definida por EndSweptArea Una superficie planar límite situada en el plano XY del sistema de coordenadas de posición definida por la rotación de las coordenadas de posición proporcionadas por SELF [[IfcSweptAreaSolid]]. osición alrededor del eje de rotación por el ángulo dado por SELF [[IfcRevolvedAreaSolid]].Angle . La sección final de la cruz es topológicamente similar a la sección de la cruz inicial que tiene el mismo número de vértices y bordes . La sección cruza final puede definirse por el mismo perfil paramétrico usando diferentes valores de parámetro. o por una transformación cartesiana 2D del perfil de inicio dentro del plano de sección transversal final. El sólido se genera transformando la sección de la cruz de inicio en la sección final de la cruz. Una cara inicial, una cara final definida por secciones cruzadas de inicio y final y una o más caras laterales. Cada cara lateral es una superficie regida definida por un par de bordes correspondientes de la sección inicial y final. Las superficies regidas se construyen en el espacio de coordenadas cilíndricas definido por el supertipo [[IfcRevolvedAreaSolid]] . HISTORY Nueva entidad en IFC4. .spec head Informal Propositions 1. Mirroring within [[IfcDerivedProfileDef]].Operator shall not be used bSI Documentation"

#:IFC.xml:10363
msgid "IfcRevolvedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcRevolvedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "EndSweptArea"

#:IFC.xml:10375
msgid "IfcRightCircularCone"
msgstr "IfcRightCircularCone"

msgid "IfcRightCircularCone_DEFINITION"
msgstr "El [[IfcRightCircularCone]] es un primitivo CSG 3D de Geometría Solida de Construcción. Es un sólido con una base circular y un punto llamado apex como la parte superior. El eje del centro de la base circular al apex es perpendicular a la base. El atributo de Posición heredada define el IfcAxisPlacement3D y proporciona la ubicación y orientación del cono SELF [[IfcCsgPrimitive3D]]. osición La ubicación y orientación del sistema de ejes para el primitivo. SELF [[IfcCsgPrimitive3D]].Position. localización El centro del área circular es la cara inferior del cono. SELF [[IfcCsgPrimitive3D]]. osión. osición 3 El eje z del sistema de coordenadas de colocación heredado proporciona el eje central del [[IfcRightCircularCone]] , y el ápex está a la altura aplicada a la dirección positiva del eje z. El BottomRadius define la base circular en el plano xy del sistema de coordenadas de colocación. La figura 1 ilustra los parámetros geométricos del cono. El origen es el centro del disco circular de fondo, que se encuentra en el plano XY. La apex se encuentra en el eje z positivo a 0, 0, altura 1 .. .. .. .. figuras ifcrightcircularcone layout1. Ng Figura 1 Cono recto circular geometry NOTE Entidad adaptada desde cono circular derecho definido en ISO 10303 42. se La textura de la cabeza utiliza la definición En el lado circular, las texturas están alineadas de cara vertical con el origen en la dirección de la espalda Y en sentido opuesto. Las texturas se estiran o se repiten en la medida de la circunstancia base de acuerdo a RepeatS. Las texturas se comprimen linealmente hacia arriba según RepeatT. En la cara inferior, las texturas están alineadas frente a la espalda, con el centro del círculo alineado al centro de la textura. La figura 2 ilustra el mapeo predeterminado de texturas con una repetición de textura y repetición False de textura con pinceladas . La imagen a la izquierda muestra la textura donde el eje S apunta a la derecha y el eje T apunta hacia arriba. La imagen a la derecha muestra la textura aplicada a la geometría donde el eje X vuelve a la derecha, el eje Y apunta de vuelta a la izquierda, y el eje Z apunta hacia arriba. ridtable Origin X Origin y Origin X Origin Z S Eje T Eje Lado Y 0 Radio 0 X hacia el punto superior Bottom Z Radius Radius 0 X Y Figura 2 texturas circulares rectas bSI Documentación"

#:IFC.xml:10376
msgid "IfcRightCircularCone_Height"
msgstr "Altura"

msgid "IfcRightCircularCone_Height_DEFINITION"
msgstr "La distancia entre la base del cono y la apex."

#:IFC.xml:10381
msgid "IfcRightCircularCone_BottomRadius"
msgstr "BottomRadio"

msgid "IfcRightCircularCone_BottomRadius_DEFINITION"
msgstr "El radio del cono en la base."

#:IFC.xml:10388
msgid "IfcRightCircularCylinder"
msgstr "CircularCylinder IfcDerecho"

msgid "IfcRightCircularCylinder_DEFINITION"
msgstr "The [[IfcRightCircularCylinder]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a circular base and top. The cylindrical surface between if formed by points at a fixed distance from the axis of the cylinder. The inherited Position attribute defines the IfcAxisPlacement3D and provides SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cylinder. SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis provides the center axis and the height is measured from the origin along the positive direction of the z axis. Figure 1 illustrates geometric parameters of the cylinder. The cylinder is positioned within its own placement coordiante system. The origin is the center of the bottom circular disk, that lies in the XY plane. The center of the top circular disk is on the positive z axis at 0, 0, Height . cylinder .. .. .. .. .. .. figures ifcrightcircularcylinder layout1.png Figure 1 Right circular cylinder geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A right circular cylinder is a CSG primitive in the form of a solid cylinder of finite height. It is defined by an axis point at the centre of one planar circular face, an axis, a height, and a radius. The faces are perpendicular to the axis and are circular discs with the specified radius. The height is the distance from the first circular face centre in the positive direction of the axis to the second circular face centre. NOTE Entity adapted from right circular cylinder defined in ISO 10303 42. HISTORY New entity in IFC2x3. .use head Texture use definition On the circular side, textures are aligned facing upright with origin at the back Y direction revolving counter clockwise. Textures are stretched or repeated to the extent of the circumference according to RepeatS. Textures are stretched or repeated to the extent of the Height according to RepeatT. On the top and bottom faces, textures are aligned facing front to back, with the center of the circle aligned to the center of the texture. Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Side Y 0 Radius 0 X Z Bottom Z Radius Radius 0 X Y Top Z Radius Radius Height X Y Figure 2 Right circular cylinder textures bSI Documentation"

#:IFC.xml:10389
msgid "IfcRightCircularCylinder_Height"
msgstr "Altura"

msgid "IfcRightCircularCylinder_Height_DEFINITION"
msgstr "La distancia entre las caras circulares planas del cilindro."

#:IFC.xml:10394
msgid "IfcRightCircularCylinder_Radius"
msgstr "Radius"

msgid "IfcRightCircularCylinder_Radius_DEFINITION"
msgstr "El radio del cilindro."

#:IFC.xml:10401
msgid "IfcSectionedSolid"
msgstr "IfcSólido seccionado"

msgid "IfcSectionedSolid_DEFINITION"
msgstr "Un [[IfcSectionedSolid]] es un tipo de base abstracta para sólidos construidos al barrir secciones transversales potencialmente variables a lo largo de una directriz. Documentación bSI"

#:IFC.xml:10416
msgid "IfcSectionedSolid_Directrix"
msgstr "Directriz"

msgid "IfcSectionedSolid_Directrix_DEFINITION"
msgstr "Directriz"

#:IFC.xml:10428
msgid "IfcSectionedSolid_CrossSections"
msgstr "Secciones cruzadas"

msgid "IfcSectionedSolid_CrossSections_DEFINITION"
msgstr "Secciones cruzadas"

#:IFC.xml:10440
msgid "IfcSectionedSolidHorizontal"
msgstr "IfcSolidHorizontal Seccionado"

msgid "IfcSectionedSolidHorizontal_DEFINITION"
msgstr "Un [[IfcSectionedSolidHorizontal]] es un modelo sólido construido al barrir las secciones cruzadas potencialmente variantes a lo largo de una curva horizontalmente. El sólido se genera al barrir las Secciones Crosas entre Secciones Crosadas con interpolación lineal de puntos de perfil, donde el perfil normal está de acuerdo con la tangente de la Directriz, el eje X del perfil está orientado perpendicularmente a la izquierda de la Dirección misma dirección que el Desplazamiento posterior en IfcDistanceExpression como mirando hacia adelante a lo largo de la directriz, y el eje Y del perfil está orientado hacia arriba de acuerdo con FixedAxisvertical . Para las secciones que tienen sección transversal rotada de acuerdo a una única superelevación, [[IfcDerivedProfileDef]] puede utilizarse para indicar dicha rotación con cada perfil ParentProfile que se refiera al mismo perfil subyacente. Para las secciones que han sido transformadas según múltiples superelevaciones con puntos que varían independientemente, cada perfil puede ser de una instancia diferente, pero del mismo tipo p.ej. [[IfcArbitraryClosedProfileDef]] , y puede tener opcionalmente puntos de sección asociados a las líneas de cadenas X2 201C X0 guía curvas X2 201D X0 usando [[IfcIndexedPolyCurve]] con IfcCartesianPointList2DLabelled . La figura 1 ilustra cuatro cilindros de un puente con un perfil paramétrico constante, dos guardrails que tienen un perfil arbitrario constante, uno de ellos espejo , y una cubierta de puente con un perfil arbitrario variable. estructura espacial .. .. .. .. .. .. figuras ifcsectionedsolidhorizontal.png Figura 1 Seccionada sólida horizontal Proposiciones Informales 1. No se intersecarán dos secciones consecutivas: 2. Si el tipo de secciones no es [[IfcParameterizedProfileDef]] i.e. un perfil arbitrario , entonces el número de puntos y bordes debería ser el mismo para dos perfiles consecutivos 3. Si la directriz no es tangente continua, el sólido resultante es creado por un miter con un ángulo medio entre los dos segmentos. 4 - Los bordes muy nítidos pueden resultar en acuerdos casi imposibles de implementadores miter pueden definir límites aceptables para la discontinuidad tangente o requerir que la dirección sea continua tangente. 5. La directriz no intervendrá con la documentación bSI"

#:IFC.xml:10456
msgid "IfcSectionedSolidHorizontal_CrossSectionPositions"
msgstr "Grupos de posiciones"

msgid "IfcSectionedSolidHorizontal_CrossSectionPositions_DEFINITION"
msgstr "Grupos de posiciones"

#:IFC.xml:10449
msgid "IfcSectionedSolidHorizontal_FixedAxisVertical"
msgstr "Eje fijo vertical"

msgid "IfcSectionedSolidHorizontal_FixedAxisVertical_DEFINITION"
msgstr "Indica si las secciones están orientadas con el eje Y de cada perfil mirando hacia arriba en dirección Z True , o verticalmente perpendicular a la Directriz, que varía según la pendiente False ."

#:IFC.xml:10468
msgid "IfcSectionedSpine"
msgstr "IfcSectionedSpine"

msgid "IfcSectionedSpine_DEFINITION"
msgstr "An [[IfcSectionedSpine]] is a representation of the shape of a three dimensional object composed by a number of planar cross sections, and a spine curve. The shape is defined between the first element of cross sections and the last element of the cross sections. A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. All cross sections have to define areas by a closed profile to allow for the representation of a solid. All cross sections have to define curves by an open or closed profile to allow for the representation of a surface. The cross sections are defined by subtypes of [[IfcProfileDef]] , where the consecutive profiles may be derived by a transformation of the start profile or the previous consecutive profile. The spine curve shall be of type [[IfcCompositeCurve]] , each of its segments represented by [[IfcCompositeCurveSegment]] shall correspond to the part between exactly two consecutive cross sections. Figure 1 illustrates an example of an [[IfcSectionedSpine]] . The SpineCurve is given by an [[IfcCompositeCurve]] with two Segments . The Segments 1 has a ParentCurve of type [[IfcPolyline]] and a Transition CONTSAMEGRADIENT. The Segments 2 has a ParentCurve of type [[IfcTrimmedCurve]] and a Transition DISCONTINUOUS. Each CrossSectionPosition lies at a start or end point of the Segments . Each CrossSections are inserted by the CrossSectionPositions . The first two cross sections are of type [[IfcRectangleProfileDef]] , the third is of type [[IfcDerivedProfileDef]] . spine 1 .. .. .. .. .. .. figures ifcsectionedspine layout1.gif Figure 1 Sectioned spine geometry Figure 2 illustrates the final result of the [[IfcSectionedSpine]] . The body shown transparently is not fully defined by the exchange definition. render .. .. .. .. .. .. figures ifcsectionedspine.jpg Figure 2 Sectioned spine result .extDef NOTE Definition according to ISO CD 10303 42 1992 A sectioned spine is a representation of the shape of a three dimensional object composed of a spine curve and a number of planar cross sections. The shape is defined between the first element of cross sections and the last element of this set. NOTE A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. For the representation of a solid all cross sections are closed curves. NOTE Entity adapted from sectioned spine defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. none of the cross sections, after being placed by the cross section positions, shall intersect 2. none of the cross sections, after being placed by the cross section positions, shall lie in the same plane 3. the local origin of each cross section position shall lie at the beginning or end of a composite curve segment. bSI Documentation"

#:IFC.xml:10488
msgid "IfcSectionedSpine_CrossSectionPositions"
msgstr "Grupos de posiciones"

msgid "IfcSectionedSpine_CrossSectionPositions_DEFINITION"
msgstr "Grupos de posiciones"

#:IFC.xml:10500
msgid "IfcSectionedSpine_SpineCurve"
msgstr "Curva espinosa"

msgid "IfcSectionedSpine_SpineCurve_DEFINITION"
msgstr "Curva espinosa"

#:IFC.xml:10512
msgid "IfcSectionedSpine_CrossSections"
msgstr "Secciones cruzadas"

msgid "IfcSectionedSpine_CrossSections_DEFINITION"
msgstr "Secciones cruzadas"

#:IFC.xml:10481
msgid "IfcSectionedSpine_Dim"
msgstr "Dim"

msgid "IfcSectionedSpine_Dim_DEFINITION"
msgstr "La dimensión de la curva de la columna es siempre 3."

#:IFC.xml:10524
msgid "IfcSectionedSurface"
msgstr "Superficie seccionada Ifc"

msgid "IfcSectionedSurface_DEFINITION"
msgstr "Una especie de superficie construida al barrer secciones de cruz abierta potencialmente variando a lo largo de una curva horizontal o cerca de horizontalmente . La superficie se genera al barrir las secciones CrossSections entre interpolación lineal CrossSectionPositions es asumida, a menos que las curvas de transición entre puntos de sección cruzada sean indicadas por OpenCrossProfileDef.Tags. Los CrossSections están orientados con el eje Y de cada perfil mirando hacia arriba en dirección Z o verticalmente perpendicular a la Directriz, dependiendo del atributo FixedAxistical valor. [[IfcSectionedSurface]] 1 Figura 1 SecciónSurface usando OpenCrossProfileDef en caso de ramificación de quiebre longitudinal, la SectionedSurface puede usar instancias OpenCrossProfileDef con un número variable de puntos de sección cruzada. En ese caso, el punto en dos secciones cruzadas consecutivas que están conectadas se identifica con el mismo valor de etiqueta. [[IfcSectionedSurface]] 2 Figura 1 SectionedSurface con la rama de las líneas de ruptura longitudinal Proposiciones Formales La entidad de la curva que es la dirección subyacente tendrá la dimensión de 3. El tipo de perfil será CURVO dentro de la lista de perfiles que definen las secciones cruzadas. El tipo de entidad para cada sección debe ser el mismo. La lista de secciones cruzadas y la lista de posiciones de sección cruzada serán del mismo tamaño. Propuestas Informales Nº dos secciones consecutivas se entrecruzarán. Si la directriz no es tangente continua, la superficie resultante es creada por un miter con un ángulo medio entre los dos segmentos. Los bordes muy nítidos pueden resultar en acuerdos casi imposibles de implementadores miter pueden definir límites aceptables para la discontinuidad tangente o requerir que la dirección sea continua tangente. La directriz no se intersecará"

#:IFC.xml:10525
msgid "IfcSectionedSurface_Directrix"
msgstr "Directriz"

msgid "IfcSectionedSurface_Directrix_DEFINITION"
msgstr "La curva utilizada para definir la operación de barrido"

#:IFC.xml:10530
msgid "IfcSectionedSurface_CrossSectionPositions"
msgstr "Grupos de posiciones"

msgid "IfcSectionedSurface_CrossSectionPositions_DEFINITION"
msgstr "Lista de expresiones a distancia en orden secuencialmente creciente emparejadas con Secciones Crosas, indicando la posición de la sección correspondiente a lo largo de la Directriz."

#:IFC.xml:10535
msgid "IfcSectionedSurface_CrossSections"
msgstr "Secciones cruzadas"

msgid "IfcSectionedSurface_CrossSections_DEFINITION"
msgstr "Lista de secciones cruzadas en orden secuencial a lo largo de la Directriz"

#:IFC.xml:10540
msgid "IfcSectionedSurface_FixedAxisVertical"
msgstr "Eje fijo vertical"

msgid "IfcSectionedSurface_FixedAxisVertical_DEFINITION"
msgstr "Indica si las secciones están orientadas con el eje Y de cada perfil mirando hacia arriba en dirección Z True , o perpendicular verticalmente a la Directriz variando según False pendiente"

#:IFC.xml:10547
msgid "IfcShellBasedSurfaceModel"
msgstr "Modelo de superficie IfcBasedBased"

msgid "IfcShellBasedSurfaceModel_DEFINITION"
msgstr "Un [[IfcShellBasedSurfaceModel]] representa la forma por un conjunto de conchas abiertas o cerradas. Las caras conectadas dentro del intérprete tienen una dimensión 2 y están situadas en un espacio de coordenada de dimensión 3. Definición de xtDef NOTE según ISO CD 10303 42 1992 Un modelo de superficie basado en el shell es descrito por un conjunto de shells abiertos o cerrados de dimensionalidad 2. Los proyectiles no se intersecarán excepto en los bordes y vértices. Una cara completa de un proyectil puede ser compartida con otro. Las partes coincidentes de los proyectiles se referirán a las mismas caras, bordes y vértices que definan la región correspondiente. Un shell puede existir independientemente de un modelo de superficie. NOTA Entidad adaptada del modelo de superficie basado en el shell definido en ISO 10303 42. HISTORY Nueva entidad en IFC2x. .spec head Informal Propositions 1. La dimensión del modelo de superficie basado en el shell es 2. 2. Los proyectiles no se superpondrán o se intersecarán excepto en caras comunes, bordes o vértices. BSI Documentation"

#:IFC.xml:10548
msgid "IfcShellBasedSurfaceModel_SbsmBoundary"
msgstr "Límite Sbsms"

#:IFC.xml:10553
msgid "IfcShellBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcShellBasedSurfaceModel_Dim_DEFINITION"
msgstr "La dimensión espacial de esta clase, siempre es 3."

#:IFC.xml:10560
msgid "IfcSolidModel"
msgstr "IfcSolidModel"

msgid "IfcSolidModel_DEFINITION"
msgstr "Un [[IfcSolidModel]] representa la forma 3D mediante diferentes tipos de representaciones de modelos sólidos. Es el supertipo abstracto común de representación de límites, representación CSG, representación de barridos y otros esquemas de representación sólida adecuados. .extDef NOTE Definición según ISO CD 10303 42 1992 Un modelo sólido es una representación completa de la forma nominal de un producto tal que todos los puntos en el interior están conectados. Cualquier punto se puede clasificar como interior, exterior o en el límite de un sólido, hay varios tipos diferentes de representaciones de modelos sólidos. NOTA Entidad adaptada del modelo sólido definido en ISO 10303 42. HISTORY Nueva entidad en IFC1.5 bSI Documentation"

#:IFC.xml:10561
msgid "IfcSolidModel_Dim"
msgstr "Dim"

msgid "IfcSolidModel_Dim_DEFINITION"
msgstr "La dimensión espacial de esta clase, siempre es 3."

#:IFC.xml:10570
msgid "IfcSphere"
msgstr "IfcSphere"

msgid "IfcSphere_DEFINITION"
msgstr "El [[IfcSphere]] es un primitivo CSG 3D de Geometría Solida de Construcción. Es un sólido donde todos los puntos de la superficie tienen la misma distancia desde el punto central. El atributo de Posición heredada define el IfcAxisPlacement3D y proporciona SELF [[IfcCsgPrimitive3D]]. osición La ubicación y orientación del sistema de ejes para el primitivo. SELF [[IfcCsgPrimitive3D]].Position.Location El centro de la esfera. SELF [[IfcCsgPrimitive3D]].Position. osición 3 El eje z apunta a su dirección positva hacia el polo norte, y por sus direcciones negativas hacia el polo sur. EXAMPLE Figura 1 ilustra los parámetros geométricos de la esfera. El origen es el centro de la esfera. xtDef NOTE Definición según ISO CD 10303 42 1992 Una esfera es un CSG primitivo con una forma esférica definida por un centro y un radio. NOTA Entidad adaptada de la esfera definida en ISO 10303 42, entidad nueva en IFC2x3. Las Texturas de uso de la textura de la cabeza están alineadas hacia arriba con el origen en la dirección de la parte trasera Y en sentido opuesto. Las texturas se estiran o se repiten en la medida de la circunstancia en el ecuador de acuerdo con RepeatS y RepeatT. La figura 2 ilustra el mapeo predeterminado de texturas con una repetición de textura y repetición False de textura con pinceladas . La imagen a la izquierda muestra la textura donde el eje S apunta a la derecha y el eje T apunta hacia arriba. La imagen a la derecha muestra la textura aplicada a la geometría donde el eje X vuelve a la derecha, el eje Y apunta de vuelta a la izquierda, y el eje Z apunta hacia arriba. .gridtable Origin X Origin Y Origin X Origin Z S Eje T Eje lateral Y 0 Radio 0 X, luego curvando en sentido horario Z, luego curvando hacia la Figura 2 texturas bSI de la esfera superior"

#:IFC.xml:10571
msgid "IfcSphere_Radius"
msgstr "Radius"

msgid "IfcSphere_Radius_DEFINITION"
msgstr "El radio de la esfera."

#:IFC.xml:10578
msgid "IfcSurfaceCurveSweptAreaSolid"
msgstr "IfcSurfaceCurveSweptAreaSolid"

msgid "IfcSurfaceCurveSweptAreaSolid_DEFINITION"
msgstr "The [[IfcSurfaceCurveSweptAreaSolid]] is the result of sweeping an area along a directrix that lies on a reference surface. The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the tangent of the directrix at this point, and the profile s x axis agrees to the surface normal. At any point along the directrix, the swept profile origin lies on the directrix, the profile s normal points towards the tangent of the directrix, and the profile s x axis is identical to the surface normal at this point. NOTE The profile area s normal has to be identical to the tangent of the directrix at any given point. In case of a directrix having a linear segment at the start point, the segment has to be perpendicular to the profile at start. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , the parameter value is provided based on the curve parameterization. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , the parameter value is provided based on the curve parameterization. If no EndParam is provided the end defaults to the end of the directrix. The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE The StartParam and the EndParam are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. In case of a closed curve, such as [[IfcCircle]] or [[IfcEllipse]] , as the directrix, StartParam and the EndParam shall not exceed the parametic range, they shall not be 360 . EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In most cases, it is a plane or a surface of extrusion. The directrix lies on the surface, in case of a plane it might be defined as a polyline or composite curve, in case of a cylindrical or other non planer reference surface it might often be defined as a p curve on this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system of the implicit plane lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the normal of the reference surface at this point. The Axis2 the y axis, or v is constructed. The resulting body of the swept solid is not repositioned if the inherited Position attribute is omitted. Otherwise the coordinate system established by the Position attribute is used to reposition the body relative to the object coordinate system. EXAMPLE Figure 1 illustrates an example using a cylindrical reference surface and a p curve for sweeping a rectangle. The Postion is not provided and therefore it does not reposition the resulting swept solid. Figure 2 shows the expected result. NOTE The start of the directrix lies at the origin of the object coordinate system, as shown in the illustration, only by coincidence. The start of the directrix and thereby the start of the sweeping operation might be at any point within the object coordinate system and only depends on the position of the directrix. Figure 1 Surface curve wept area solid parameter Figure 2 Surface curve wept area solid results .extDef NOTE Definition according to ISO CD 10303 42 1992 A surface curve swept area solid is a type of swept area solid which is the result of sweeping a face along a Directrix lying on a ReferenceSurface . The orientation of the SweptArea is related to the direction of the surface normal. The SweptArea is required to be a curve bounded surface lying in the plane z 0 and this is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the normal to the ReferenceSurface at the current point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a Cartesian Transformation Operator 3D with attributes Local origin as point 0., 0., 0 , Axis 1 as the normal N to the reference surface at the point of the directrix with parameter u. Axis 3 as the direction of the tangent vector t at the point of the directrix with parameter u. The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the directrix parameter u. NOTE Entity adapted from surface curve swept area solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The SweptArea shall lie in the implicit plane z 0. 2. The Directrix shall lie on the ReferenceSurface . bSI Documentation"

#:IFC.xml:10581
msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface"
msgstr "Referenciar superficie"

msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface_DEFINITION"
msgstr "Referenciar superficie"

#:IFC.xml:10593
msgid "IfcSweptAreaSolid"
msgstr "IfcSweptAreaSolid"

msgid "IfcSweptAreaSolid_DEFINITION"
msgstr "Un [[IfcSweptAreaSolid]] representa la forma 3D mediante un esquema de representación barrida que permite que una sección de cruz planar dimensional barre a través del espacio. El área barrida se define por una sección cruzada, representada por un subtipo si [[IfcProfileDef]] , que se proporciona como un límite de dos dimensiones cerrado en un plano implícito. El área barrida se define en el plano xy del sistema de coordenadas de objetos. La operación de barrido se aplica al área de barrido según se define dentro de los subtipos de [[IfcSweptAreaSolid]] , algunos subtipos requieren una transformación implícita del área barrida a la posición inicial del barrido. El sistema opcional de coordenadas Positio n permite reposicionar el sólido barrido resultante en relación al sistema de coordenadas del objeto. .extDef NOTE Definición según ISO CD 10303 42 1992 La entidad sólida del área barrida recoge las entidades que están definidas de forma conjunta mediante la acción de barrido en superficies planas. La posición es el espacio del sólido barrido dependerá de la posición del área barrida. El área barrida será una cara del área barrida resultante sólida, excepto para el caso de una zona cubierta sólida con ángulo igual a 2 o 360 grados. NOTA Entidad adaptada de área barrida sólida definida en ISO 10303 42. HISTORY Nueva entidad en IFC1.5 . hange ifc2x4 IFC4 CHANGE La posición de atributo se ha cambiado a OPCIONAL con compatibilidad ascendente para el intercambio basado en archivos. BSI Documentation"

#:IFC.xml:10600
msgid "IfcSweptAreaSolid_SweptArea"
msgstr "SweptArea"

msgid "IfcSweptAreaSolid_SweptArea_DEFINITION"
msgstr "SweptArea"

#:IFC.xml:10612
msgid "IfcSweptAreaSolid_Position"
msgstr "Posición"

msgid "IfcSweptAreaSolid_Position_DEFINITION"
msgstr "Posición"

#:IFC.xml:10624
msgid "IfcSweptDiskSolid"
msgstr "IfcSweptDiskSolid"

msgid "IfcSweptDiskSolid_DEFINITION"
msgstr "An [[IfcSweptDiskSolid]] represents the 3D shape by a sweeping representation scheme allowing a two dimensional circularly bounded plane to sweep along a three dimensional Directrix through space. The StartParam and EndParam parameter are optional, if not provided they default to the start and end of the Directrix . Only if the Directrix is given by a bounded or by a closed curve, it is permissible to omit the values of StartParam and EndParam . If the transitions between consecutive segments of the Directrix are not tangent continuous, the resulting solid is created by a miter at half angle between the two segments. Informal proposition restricts the permissible angle between two non tangent continuous segments. Figure 1 illustrates an example. Directrix given as [[IfcIndexedPolyCurve]] , having linear and circular arc segments, that are tangent continuous between each segments Directrix being a bounded and open curve No StartParam and EndParam are provided, start and end default to start and end of the bounded curve of the Directrix NOTE Although the example shows a Directrix as a poly curve on a planar reference surface, the definition of [[IfcSweptDiskSolid]] is not restricted to be based on planer curves. However view definitions or implementer agreements may provide restrictions. NOTE The geometric item [[IfcIndexedPolyCurve]] provides a more compact representation compared with [[IfcCompositeCurve]] as is therefore the prefered curve representation for the Directrix . disk solid .. .. .. .. .. .. figures ifcsweptdisksolid layout1.png Figure 1 Swept disk solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A swept disk solid is the solid produced by sweeping a circular disk along a three dimensional curve. During the sweeping operation the normal to the plane of the circular disk is in the direction of the tangent to the directrix curve and the center of the disk lies on the directrix. The circular disk may, optionally, have a central hole, in this case the resulting solid has a through hole, or, an internal void when the directrix forms a close curve. NOTE Entity adapted from swept disk solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE The attribute StartParam and EndParam have been made optional. .spec head Informal Propositions 1. If the Directrix curve definition is not tangent continuous, the transition between the segments has to be within an acceptable limit of tangent discontinuity. Very sharp edges may result in nearly impossible miter. Implementer agreements may define acceptable limits for tangent discontinuity. 2. The segments of the Directrix shall be long enough to apply the Radius . In case of an arc segment forming part of the Directrix , its radius shall be greater then the disk Radius 3. The Directrix shall not be based on an intersecting curve. bSI Documentation"

#:IFC.xml:10659
msgid "IfcSweptDiskSolid_Directrix"
msgstr "Directriz"

msgid "IfcSweptDiskSolid_Directrix_DEFINITION"
msgstr "Directriz"

#:IFC.xml:10637
msgid "IfcSweptDiskSolid_Radius"
msgstr "Radius"

msgid "IfcSweptDiskSolid_Radius_DEFINITION"
msgstr "El Radius del disco circular, que será barrido a lo largo de la directriz , denota el radio exterior, si se aplica un InnerRadius."

#:IFC.xml:10642
msgid "IfcSweptDiskSolid_InnerRadius"
msgstr "InnerRadius"

msgid "IfcSweptDiskSolid_InnerRadius_DEFINITION"
msgstr "Este atributo es opcional, si está presente define el radio de un agujero circular en el centro del disco."

#:IFC.xml:10647
msgid "IfcSweptDiskSolid_StartParam"
msgstr "StartParam"

msgid "IfcSweptDiskSolid_StartParam_DEFINITION"
msgstr "El valor del parámetro en la Directriz, en la que comienza la operación de barrido. Si no se proporciona ningún valor el inicio de la operación de barrido se encuentra al principio de la Directriz. X 0D X 0D .change ifc2x4 X 0D IFC4 CHANGE El atributo se ha cambiado a OPCIONAL con compatibilidad ascendente para el intercambio basado en archivos."

#:IFC.xml:10652
msgid "IfcSweptDiskSolid_EndParam"
msgstr "Parámetro final"

msgid "IfcSweptDiskSolid_EndParam_DEFINITION"
msgstr "Valor del parámetro en la Directriz, en la que termina la operación de barrido. Si no se proporciona ningún valor el final de la operación de barrido está al final de la Directriz. X 0D X 0D .change ifc2x4 X 0D IFC4 CHANGE El atributo se ha cambiado a OPCIONAL con compatibilidad ascendente para el intercambio basado en archivos."

#:IFC.xml:10671
msgid "IfcSweptDiskSolidPolygonal"
msgstr "IfcSweptDiskSolidPolygonal"

msgid "IfcSweptDiskSolidPolygonal_DEFINITION"
msgstr "El [[IfcSweptDiskSolidPolygonal]] es un [[IfcSweptDiskSolid]] donde el Directorio está restringido a ser proporcionado únicamente por una línea poly. Un atributo opcional FilletRadius puede ser verificado, luego se aplica como un filete a todas las transiciones entre los segmentos de la línea poly. NOTA El elemento geométrico [[IfcIndexedPolyCurve]] proporciona una representación más compacta en comparación con [[IfcPolyline]] . Por lo tanto es la curva de representación preferida para el Directrix . El [[IfcIndexedPolyCurve]] no tendrá segmentos definidos, resticándolos únicamente a una línea políglota. Nueva entidad HISTORY en IFC4. .spec head informal Propositions 1. El FilletRadius , si se proporciona, tiene que ser menor entonces o igual a la longitud del segmento de inicio y final del [[IfcPolyline]] , y más pequeño entonces o igual a una mitad de la longitud del segmento interior más corto. documentación bSI"

#:IFC.xml:10680
msgid "IfcSweptDiskSolidPolygonal_FilletRadius"
msgstr "Radio de relleno"

msgid "IfcSweptDiskSolidPolygonal_FilletRadius_DEFINITION"
msgstr "El archivo que se aplica equitativamente a todas las transiciones entre los segmentos del [[IfcPolyline]] , proporcionando la representación geométrica de la Directriz. Si se omite, no se aplica ningún filete a los segmentos."

#:IFC.xml:10687
msgid "IfcTaperedSweptAreaProfiles__StartArea"
msgstr "IfcTaperedSweptAreaProfiles StartArea"

msgid "IfcTaperedSweptAreaProfiles__StartArea_DEFINITION"
msgstr "Esta función comprueba si el perfil inicial y final en una extrusión reducida es topológicamente similar, i. , si ambos tienen el mismo número de vértices y bordes. Devuelve TRUE si el perfil inicial está definido por una definición paramétrica del perfil y el perfil final es un perfil derivado, usando el perfil de inicio como su perfil padre, o el perfil final está desbordado en el mismo subtipo de la definición paramétrica del perfil de inicio El perfil inicial es definido por una curva límite arbitraria que delimita un plano y el perfil final es un perfil derivado usando el perfil inicial como su perfil padre HISTORY S Nueva función en IFC2x Edición 4."

#:IFC.xml:10695
msgid "IfcTessellatedFaceSet"
msgstr "IfcTessellatedFaceSet"

msgid "IfcTessellatedFaceSet_DEFINITION"
msgstr "El [[IfcTessellatedFaceSet]] es un modelo topológico de representación límite limitado a caras planas y bordes rectos. Puede representar una aproximación de una superficie analítica o sólida que se puede proporcionar además de su teselación como forma de representación separada. El [[IfcTessellatedFaceSet]] proporciona una representación compacta de datos de un conjunto de caras conectado usando índices en listas ordenadas de vértices, normales, colores y mapas de texturas. NOTA La representación compacta ha sido elegida para permitir conjuntos de datos pequeños a pesar de conjuntos de caras potencialmente grandes, bordes y vértices necesarios para representar tessellaciones de superficies analíticas y sólidas, y a pesar de los grandes conjuntos de colores y texturas, información para anotar las caras tesselladas. El [[IfcTessellatedFaceSet]] es un supertipo abstracto de la cara tesselada establece cada una de las restricciones específicas sobre la generación de caras para la tessellación, tales como triangulación con o sin tiras y ventiladores , o cuadriláteros, o caras poligonales con o sin bucles internos . NOTA No todas las restricciones diferentes en conjuntos de caras se incluyen como subtipos específicos en esta versión de la especificación. Los siguientes atributos se aplican a todos los subtipos Las Coordenadas son la lista ordenada de puntos cartesianos que representan los vértices del objeto teselado. Una lista de índices, definida a nivel de subtipos, utiliza los puntos, identificados por posición de índice, para construir los polígonos que representan las caras. La relación inversa HasColours proporciona un mapa de color indexado con una lista correspondiente de índices, proporcionando un color para cada cara del conjunto de la cara tesselled. La relación inversa de HasTextures proporciona un mapa de textura indexado con una lista correspondiente de índices, proporcionando coordenadas de textura que se asignan a las coordenadas geométricas de las polilíneas que representan las caras. Cada cara de la cara teselada tendrá al menos tres vértices no coincidentes que definen un polígono plano que defina un polígono no autointersecante. NOTA La definición de [[IfcTessellatedFaceSet]] se basa en el indexedFaceSet definido en ISO IEC 19775 1 HISTORY Nueva entidad en IFC4. BSI Documentation"

#:IFC.xml:10016
msgid "IfcTessellatedFaceSet_Coordinates"
msgstr "Coordenadas"

msgid "IfcTessellatedFaceSet_Coordinates_DEFINITION"
msgstr "Coordenadas"

#:IFC.xml:10704
msgid "IfcTessellatedFaceSet_HasColours"
msgstr "Colores"

msgid "IfcTessellatedFaceSet_HasColours_DEFINITION"
msgstr "Colores"

#:IFC.xml:10718
msgid "IfcTessellatedFaceSet_HasTextures"
msgstr "Texturas Hass"

msgid "IfcTessellatedFaceSet_HasTextures_DEFINITION"
msgstr "Texturas Hass"

#:IFC.xml:10696
msgid "IfcTessellatedFaceSet_Dim"
msgstr "Dim"

msgid "IfcTessellatedFaceSet_Dim_DEFINITION"
msgstr "La dimensión espacial de este elemento geométrico, siempre es 3."

#:IFC.xml:10732
msgid "IfcTessellatedItem"
msgstr "IfcTessellatedItem"

msgid "IfcTessellatedItem_DEFINITION"
msgstr "El [[IfcTessellatedItem]] es el supertipo abstracto de todos los modelos geométricos tessellados. Nueva entidad ALTA en IFC4. Documentación bSI"

#:IFC.xml:10735
msgid "IfcTriangulatedFaceSet"
msgstr "IfcTriangulado conjunto de facetas"

msgid "IfcTriangulatedFaceSet_DEFINITION"
msgstr "The [[IfcTriangulatedFaceSet]] is a tessellated face set with all faces being bound by triangles. The faces are constructed by implicit polylines defined by three Cartesian points. Depending on the value of the attribute Closed the instance of [[IfcTriangulatedFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The coordinates of each point are provided by a one based index into an ordered list of Cartesian points provided by the two dimensional list CoordIndex , where the first dimension of the two dimensional list addresses the list of triangular faces the second dimension of the two dimensional list provides exactly three indices. Each index points to a Cartesian point being a vertex of the triangle. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. .. .. figures ifctriangulatedfaceset 03.png Figure 1 Use of PnIndex See Figure 2 for using the [[IfcTriangulatedFaceSet]] without as default and with using the PnIndex . [[IfcTriangulatedFaceSet]] 01 .. .. .. .. .. .. figures ifctriangulatedfaceset 01.png Figure 2 Triangulated face set Optionally normals can be provided. Only normals per vector are supported allowing for visually curved triangles when the three normals of the corresponding three vertices of a triangle are not co linear to the normal of the triangular face. If they are identical, normals shall be omited. NOTE In case of a body representation having triangular faces with curvature, different normals for all three vertices in context of this triangles are exported, describing the curvature for smooth visualisation. In case of triangular faces with no curvature, the three vertex based normals are identical and could always be computed from the face. Therefore vertices should only be exported to support smooth visualisation by curvature of triangles. In case of faceted representation no vertices should be exported. Normals are provided by the two dimensional list Normals , where the first dimension of the two dimensional list addresses the corresponding list of vertex indices of the triangular faces the second dimension of the two dimensional list provides exactly three real values to determine the direction of the normal at this vertex of the triangle. The indices in the CoordIndex point into the list of Normals . The indices of CoordIndex are applied to both points, either directly directly, or via the PnIndex and normals. See Figure 3 for handling of normals. [[IfcTriangulatedFaceSet]] 02 .. .. .. .. .. .. figures ifctriangulatedfaceset 02.png Figure 3 Triangulated face set with normals NOTE Using corresponding lists of points and normals allows to use only a single list of indices into both at the expense of having non unique collections of vertices. Figure 4 shows the use of [[IfcTriangulatedFaceSet]] without annotation. The diagram of the [[IfcTriangulatedFaceSet]] represents the indices and the ordered list into which the indices point. The index starts with 1 indexed as 1 to N , if the greatest index in CoordIndex in N, then the [[IfcCartesianPointList]] shall have N lists of 3 3 coordinates. Figure 168 shows an [[IfcTriangulatedFaceSet]] represented by CoordIndex 1,6,5 , 1,2,6 , 6,2,7 , 7,2,3 , 7,8,6 , 6,8,5 , 5,8,1 , 1,8,4 , 4,2,1 , 2,4,3 , 4,8,7 , 7,3,4 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 4 Triangulated face set geometry NOTE The definition of [[IfcTriangulatedFaceSet]] is based on the indexedFaceSet and indexedTriangleSet defined in ISO IEC 19775 1. The use of PnIndex has been adopted from triangulated surface set defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two boundaries of faces the topological normal at each point on the boundary of the triangulated face set shall point away from the mater ial of the solid. bSI Documentation"

#:IFC.xml:10736
msgid "IfcTriangulatedFaceSet_Normals"
msgstr "Normales"

msgid "IfcTriangulatedFaceSet_Normals_DEFINITION"
msgstr "Una lista ordenada de tres direcciones para las normales, es una lista de dos dimensiones de direcciones proporcionadas por tres parámetros X 0D. X 0D La primera dimensión corresponde a los índices de vértices del Coordindex X 0D La segunda dimensión tiene exactamente tres valores, 1 dirección x, 2 dirección y 3 direcciones z"

#:IFC.xml:10741
msgid "IfcTriangulatedFaceSet_Closed"
msgstr "Cerrado"

msgid "IfcTriangulatedFaceSet_Closed_DEFINITION"
msgstr "Indica si el [[IfcTriangulatedFaceSet]] es una shell cerrada o no. Si se omite, no se puede proporcionar tal información."

#:IFC.xml:10746
msgid "IfcTriangulatedFaceSet_CoordIndex"
msgstr "CoordIndex"

msgid "IfcTriangulatedFaceSet_CoordIndex_DEFINITION"
msgstr "Lista de dos dimensiones para los triángulos basados en índices, donde X 0D La primera dimensión representa los triángulos de 1 a N X 0D La segunda dimensión tiene exactamente tres valores que representan los índices a tres puntos de vértice de 1 a 3 . X 0D X 0D NOTA Las coordenadas de los vértices son proporcionadas por la lista indexada de SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList ."

#:IFC.xml:10751
msgid "IfcTriangulatedFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcTriangulatedFaceSet_PnIndex_DEFINITION"
msgstr "La lista de enteros que definen las ubicaciones en el [[IfcCartesianPointList3D]] para obtener las coordenadas de puntos para los índices dentro del Índice Coord. Si no se proporciona el PnIndex, los índices apuntan directamente al [[IfcCartesianPointList3D]] ."

#:IFC.xml:10756
msgid "IfcTriangulatedFaceSet_NumberOfTriangles"
msgstr "Número de triángulos"

msgid "IfcTriangulatedFaceSet_NumberOfTriangles_DEFINITION"
msgstr "Número derivado de triángulos usados para esta triangulación."

#:IFC.xml:10763
msgid "IfcTriangulatedIrregularNetwork"
msgstr "IfcTriangulada Red Irregular"

msgid "IfcTriangulatedIrregularNetwork_DEFINITION"
msgstr "El [[IfcTriangulatedIrregularNetwork]] es un conjunto de caras trianguladas para representar superficies horizontales una coordenada Z única para todas las coordenadas X e Y dentro del dominio con banderas adicionales para cada cara que indican rupturas entre caras o diseño como agujero o vacío. Los triángulos serán definidos con vértices en orden contrario a las agujas del reloj como vistos desde arriba siguiendo la regla de la derecha . Para la visualización, las aplicaciones no deben mostrar caras donde las banderas están configuradas como negativas, ya sea un hueco, vacío o posible extensión futura . La bandera del Vacío se utilizará para indicar que las caras deben ser excluidas sin caer en ninguna otra geometría. Tal diseño podría ser utilizado para porciones de un sitio bajo un edificio u otra estructura. El agujero de bandera se utilizará para indicar que las caras deben ser excluidas pero pueden caer en otra geometría. Tal diseño podría ser utilizado para porciones de un sitio propuesto que permanecerán sin cambios conformes a un sitio existente que también puede ser definido para escenarios donde se combinan múltiples superficies usadas como entrada, cualquier triángulo marcado Vacío será retenido como vacíos, mientras que cualquier triángulo marcado como agujero será anulado si otra superficie tiene una geometría visible definida dentro de la misma ubicación horizontal. documentación bSI"

#:IFC.xml:10768
msgid "IfcTriangulatedIrregularNetwork_Flags"
msgstr "Banderas"

msgid "IfcTriangulatedIrregularNetwork_Flags_DEFINITION"
msgstr "Indica los atributos de cada triángulo en una forma compacta de la siguiente manera 2 vacío invisible 1 agujero invisible 0 sin saltos 1 línea de salto en el borde 1 2 de salto al borde 2 3 de salto en los bordes 1 y 2 de salto en el borde 3 5 de salto en los bordes 1 y 3 6 de salto en los bordes 2 y 3 7 de salto en los bordes 1, 2, y 3."

#:IFC.xml:10775
msgid "IfcBooleanOperand"
msgstr "IfcBooleanOperand"

msgid "IfcBooleanOperand_DEFINITION"
msgstr "Seleccione el tipo incluyendo todos los elementos de representación geométrica que pueden participar en una operación booleana para formar un CSG sólido. Incluye modelos sólidos, sólidos de medio espacio y primitivos CSG, los resultados booleanos también se pueden utilizar como operandos permitiendo así operaciones booleanas anidadas. Definición de xtDef NOTE de ISO 10303 42 Este tipo de selección identifica todos los tipos de entidades que pueden participar en una operación booleana para formar un CSG sólido. NOTA Correspondiente STEP tipo booleano definido en ISO 10303 42, HISTORY Nuevo tipo en IFC1. .1. .change ifc2x4 IFC4 CHANGE El elemento [[IfcTessellatedFaceSet]] ha sido añadido a la selección."

#:IFC.xml:10776
msgid "IfcCsgSelect"
msgstr "IfcCsgSelect"

msgid "IfcCsgSelect_DEFINITION"
msgstr "Seleccione el tipo que permite elegir entre [[IfcBooleanResult]] y subtipos de [[IfcCsgPrimitive3D]] como expresión potencial del árbol raíz en [[IfcCsgSolid]] . Definición del NOTE xtDef de ISO 10303 42 Este tipo identifica los tipos de entidad que pueden ser seleccionados como la raíz de un árbol CSG incluyendo un único CSG primitivo como caso especial. NOTA STEP correspondiente tipo csg select defined in ISO 10303 42. HISTORY New type in IFC1.5.1."

#:IFC.xml:10777
msgid "IfcGeometricSetSelect"
msgstr "Selección Geométrica Ifc"

msgid "IfcGeometricSetSelect_DEFINITION"
msgstr "El [[IfcGeometricSetSelect]] incluye los elementos de representación geométrica aplicables para ser parte del conjunto geométrico. xtDef NOTE Definición de ISO10303 42 Este tipo de selección identifica los tipos de entidades que pueden ocurrir en un conjunto geométrico. NOTA Conjunto geométrico de tipo STEP correspondiente seleccionado en ISO 10303 42."

