msgid ""
msgstr ""
"Project-Id-Version: 7478baf291faba855dd524435a261a19\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2020-09-25 10:09+0200\n"
"X-Crowdin-SourceKey: msgstr\n"
"Language-Team: Spanish\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: 7478baf291faba855dd524435a261a19\n"
"X-Crowdin-Project-ID: 2\n"
"X-Crowdin-Language: es\n"
"X-Crowdin-File: /master/IfcGeometricModelResource.pot\n"
"X-Crowdin-File-ID: 44\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: es_ES\n"
"PO-Revision-Date: 2022-02-10 05:15\n"

#:IFC.xml:10340
msgid "IfcAdvancedBrep"
msgstr "IfcAdvancedBrep"

msgid "IfcAdvancedBrep_DEFINITION"
msgstr "An advanced B rep is a boundary representation model in which all faces, edges and vertices are explicitly represented. It is a solid with explicit topology and elementary or free form geometry. The faces of the B rep are of type [[IfcAdvancedFace]] . An advanced B rep has to meet the same topological constraints as the manifold solid B rep. NOTE The advanced B rep has been introduced in order to support the increasing number of applications that can define and exchange B rep models based on NURBS or other b spline surfaces. Figure 1 illustrates use of [[IfcAdvancedBrep]] for boundary representation models with b spline surfaces. The diagram shows the topological and geometric representation items that are used for advanced B reps, based on [[IfcAdvancedFace]]. Figure 1 Advanced Brep, b spline surface Figure 2 illustrates use of [[IfcAdvancedBrep]] for boundary representation models with elementary surfaces. The diagram shows the topological and geometric representation items that are used for advanced B reps, based on [[IfcAdvancedFace]]. It shows the use of [[IfcIntersectionCurve]] to provide the geometric representation of the edge curve both as 3D curve and as u,v pcurve in the parametric space of the adjacent surfaces. Figure 2 Advanced Brep, elementary surface NOTE Entity adapted from advanced brep shape representation defined in ISO 10303 514. HISTORY New entity in IFC4 .spec head Informal Propositions 1. each face is a face surface 2. each face surface has its geometry defined by an elementary surface, swept surface or a b spline surface 3. the edges used to define the boundaries of the face shall all reference an edge curve 4. each curve used to define the geometry of the faces and face bounds shall be either a conic, or a line or a polyline or a b spline curve 5. the edges used to define the face boundaries shall all be trimmed by vertices of type vertex point 6. no loop used to define a face bound shall be of the oriented subtype Formal Propositions HasAdvancedFaces Each face of the advanced B rep shall be of type [[IfcAdvancedFace]] ."

#:IFC.xml:10343
msgid "IfcAdvancedBrepWithVoids"
msgstr "IfcAdvancedBrepWithVoids"

msgid "IfcAdvancedBrepWithVoids_DEFINITION"
msgstr "The [[IfcAdvancedBrepWithVoids]] is a specialization of an advanced B rep which contains one or more voids in its interior. The voids are represented as closed shells which are defined so that the shell normal point into the void. NOTE Entity adapted from advanced brep shape representation defined in ISO 10303 42. HISTORY New entity in IFC4 .spec head Informal Propositions 1. Each void shell shall be disjoint from the outer shell and from every other void shell 2. Each void shell shall be enclosed within the outer shell but not within any other void shell. In particular the outer shell is not in the set of void shells 3. Each shell in the [[IfcManifoldSolidBrep]] shall be referenced only once. 4. All the faces of all the shells in the [[IfcAdvancedBrep]] and the [[IfcAdvancedBrepWithVoids]].Voids shall be of type [[IfcAdvancedFace]] ."

#:IFC.xml:10346
msgid "IfcAdvancedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcAdvancedBrepWithVoids_Voids_DEFINITION"
msgstr "Voids"

#:IFC.xml:10358
msgid "IfcBlock"
msgstr "Bloque Ifc"

msgid "IfcBlock_DEFINITION"
msgstr "The [[IfcBlock]] is a Construction Solid Geometry CSG 3D primitive. It is defined by a position and a positve distance along the three orthogonal axes. The inherited Position attribute has the IfcAxisPlacement3D type and provides SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The block has one vertex at location and the edges are aligned with the placement axes in the positive sense. The XLength , YLength , and ZLength attributes define the size of the [[IfcBlock]] along the three axes. Figure 1 illustrates geometric parameters of a block where the block positioned within its own placement coordinate system. The values for XLength, YLength, and ZLength are applied to the positive direction of the X, Y, and Z axis. Figure 1 Block geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A block is a solid rectangular parallelepiped, defined with a location and placement coordinate system. The block is specified by the positive lengths x, y, and z along the axes of the placement coordinate system, and has one vertex at the origin of the placement coordinate system. NOTE Entity adapted from block defined in ISO 10303 42. HISTORY New entity in IFC2x3. .use head Texture definition On each side face, textures are aligned facing upright. On the top and bottom faces, textures are aligned facing front to back. Textures are stretched or repeated to the extent of each face according to RepeatS and RepeatT . Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Left X 0 YLength 0 Y Z Right X XLength 0 0 Y Z Front Y 0 0 0 X Z Back Y XLength YLength 0 X Z Bottom Z 0 YLength 0 X Y Top Z 0 0 ZLength X Y Figure 2 Block textures"

#:IFC.xml:10359
msgid "IfcBlock_XLength"
msgstr "XLongitud"

msgid "IfcBlock_XLength_DEFINITION"
msgstr "El tamaño del bloque a lo largo del eje X de posición. Es proporcionado por la posición del eje heredado a través de SELF [[IfcCsgPrimitive3D]].Position.P 1 ."

#:IFC.xml:10364
msgid "IfcBlock_YLength"
msgstr "Longitud"

msgid "IfcBlock_YLength_DEFINITION"
msgstr "El tamaño del bloque a lo largo del eje Y de posición. Se proporciona mediante la colocación del eje heredado a través de SELF [[IfcCsgPrimitive3D]].Position.P 2 ."

#:IFC.xml:10369
msgid "IfcBlock_ZLength"
msgstr "ZLength"

msgid "IfcBlock_ZLength_DEFINITION"
msgstr "El tamaño del bloque a lo largo del eje Z de posición. Se proporciona mediante la colocación del eje heredado a través de SELF [[IfcCsgPrimitive3D]].Position.P 3 ."

#:IFC.xml:10376
msgid "IfcBooleanClippingResult"
msgstr "IfcBooleanClipingResultado"

msgid "IfcBooleanClippingResult_DEFINITION"
msgstr "A clipping result is defined as a special subtype of the general [[IfcBooleanResult]] . It constrains the operands and the operator of the Boolean result. A clipping result is the Boolean difference between a swept solid and a half space solid, or between the result of the Boolean difference and a half space solid. Hence more than one difference operation can be applied to achieve the final Boolean result. HISTORY New entity in IFC2x. Formal Propositions FirstOperandType The first operand of the Boolean clipping operation shall be either an [[IfcSweptAreaSolid]] or in case of more than one clipping an [[IfcBooleanResult]]. SecondOperandType The second operand of the Boolean clipping operation shall be an [[IfcHalfSpaceSolid]]. OperatorType The Boolean operator for clipping is always Difference ."

#:IFC.xml:10379
msgid "IfcBooleanOperand"
msgstr "IfcBooleanOperand"

#:IFC.xml:10380
msgid "IfcBooleanOperator"
msgstr "IfcBooleanOperator"

msgid "IfcBooleanOperator_DEFINITION"
msgstr "Boolean operators that apply to the first and second Boolean operands. .extDef NOTE Definition according to ISO CD 10303 42 1992 This type defines the three Boolean operators used in the definition of CSG solids. NOTE Entity adapted from boolean operator defined in ISO 10303 42. HISTORY New entity in IFC1.5.1. Items UNION INTERSECTION The operation of constructing the regularised set theoretic intersection of the volumes defined by two solids. DIFFERENCE The regularised set theoretic difference between the volumes defined by two solids."

#:IFC.xml:10381
msgid "IfcBooleanOperator_DIFFERENCE"
msgstr "DIFFERENCIA"

msgid "IfcBooleanOperator_DIFFERENCE_DEFINITION"
msgstr "The regularised set theoretic difference between the volumes defined by two solids."

#:IFC.xml:10382
msgid "IfcBooleanOperator_INTERSECTION"
msgstr "INTERSECCIÓN"

msgid "IfcBooleanOperator_INTERSECTION_DEFINITION"
msgstr "The operation of constructing the regularised set theoretic intersection of the volumes defined by two solids."

#:IFC.xml:10383
msgid "IfcBooleanOperator_UNION"
msgstr "UNIÓN"

msgid "IfcBooleanOperator_UNION_DEFINITION"
msgstr "UNIÓN"

#:IFC.xml:10385
msgid "IfcBooleanResult"
msgstr "IfcBooleanResult"

msgid "IfcBooleanResult_DEFINITION"
msgstr "The [[IfcBooleanResult]] is the result of applying a Boolean operation to two operands being solids. EXAMPLE If the first operand is a block and the second operand is a solid cylinder of suitable dimensions and location, the boolean result produced with the difference operator would be a block with a circular hole. .extDef NOTE Definition according to ISO CD 10303 42 1992 A Boolean result is the result of a regularized operation on two solids to create a new solid. Valid operations are regularized union, regularized intersection, and regularized difference. For purpose of Boolean operations, a solid is considered to be a regularized set of points. The final Boolean result depends upon the operation and the two operands. In the case of the difference operator the order of the operands is also significant. The operator can be either union, intersection or difference. The effect of these operators is described below Union on two solids is the new solid that is the regularization of the set of all points that are in either the first operand or the second operand or in both. Intersection on two solids is the new solid that is the regularization of the set of all points that are in both the first operand and the second operand. The result of the difference operation on two solids is the regularization of the set of all points which are in the first operand, but not in the second operand. NOTE Corresponding STEP type boolean result defined in ISO 10303 42. HISTORY New entity in IFC1.5.1."

#:IFC.xml:10386
msgid "IfcBooleanResult_Dim"
msgstr "Dim"

msgid "IfcBooleanResult_Dim_DEFINITION"
msgstr "La dimensión espacial de esta entidad, es idéntica a la dimensión espacial del primer operador. Una regla donde se garantiza que ambos operandos tengan la misma dimensión espacial."

#:IFC.xml:10391
msgid "IfcBooleanResult_FirstOperand"
msgstr "Primaveral"

msgid "IfcBooleanResult_FirstOperand_DEFINITION"
msgstr "El primer operario operado por la operación booleana."

#:IFC.xml:10396
msgid "IfcBooleanResult_Operator"
msgstr "Operador"

msgid "IfcBooleanResult_Operator_DEFINITION"
msgstr "El operador booleano utilizado en la operación para crear el resultado."

#:IFC.xml:10401
msgid "IfcBooleanResult_SecondOperand"
msgstr "Secundaria"

msgid "IfcBooleanResult_SecondOperand_DEFINITION"
msgstr "El segundo operando especificado para la operación."

#:IFC.xml:10410
msgid "IfcBoundingBox"
msgstr "IfcBoundingBox"

msgid "IfcBoundingBox_DEFINITION"
msgstr "The [[IfcBoundingBox]] defines an orthogonal box oriented parallel to the axes of the object coordinate system in which it is defined. It is defined by a Corner being a three dimensional Cartesian point and three length measures defining the X, Y and Z parameters of the box in the direction of the positive axes. NOTE Any subtype of [[IfcProduct]] having a product shape representation may have a bounding box representation. The Box representation identifier defined at [[IfcShapeRepresentation]] utilizes the [[IfcBoundingBox]] as the simpliest 3D shape representation. As shown in Figure 1, the [[IfcBoundingBox]] is defined with its own location which can be used to place the [[IfcBoundingBox]] relative to the geometric coordinate system. The [[IfcBoundingBox]] is defined by the lower left corner Corner and the upper right corner XDim, YDim, ZDim measured within the parent co ordinate system . Figure 1 Bounding box NOTE Corresponding STEP type box domain defined in ISO 10303 42. HISTORY New entity in IFC1.0."

#:IFC.xml:10433
msgid "IfcBoundingBox_Corner"
msgstr "Esquina"

msgid "IfcBoundingBox_Corner_DEFINITION"
msgstr "Location of the bottom left corner having the minimum values ."

#:IFC.xml:10411
msgid "IfcBoundingBox_Dim"
msgstr "Dim"

msgid "IfcBoundingBox_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:10416
msgid "IfcBoundingBox_XDim"
msgstr "XDim"

msgid "IfcBoundingBox_XDim_DEFINITION"
msgstr "Atributo de longitud medido a lo largo del borde paralelo al eje X"

#:IFC.xml:10421
msgid "IfcBoundingBox_YDim"
msgstr "Dim"

msgid "IfcBoundingBox_YDim_DEFINITION"
msgstr "Atributo ancho medido a lo largo del borde paralelo al eje Y"

#:IFC.xml:10426
msgid "IfcBoundingBox_ZDim"
msgstr "ZDim"

msgid "IfcBoundingBox_ZDim_DEFINITION"
msgstr "Atributo de altura medido a lo largo del borde paralelo al eje Z ."

#:IFC.xml:10457
msgid "IfcBoxedHalfSpace"
msgstr "Espacio IfcBoxedHalfSpace"

msgid "IfcBoxedHalfSpace_DEFINITION"
msgstr "The [[IfcBoxedHalfSpace]] is used as its supertype [[IfcHalfSpaceSolid]] only within Boolean operations. It divides the domain into exactly two subsets, where the domain in question is that of the attribute Enclosure . The purpose of the attribute Enclosure is to provide a search box for the other operand in the Boolean operation. It shall be sufficiently large to fully enclose the resulting solid after the Boolean operation with the half space. It however does not alter the final result. The result of the Boolean operation would be the same, as if executed by the supertype [[IfcHalfSpaceSolid]] . See Figure 1 below. correct use of enclosure .. .. .. .. figures ifcboxedhalfspace 01.png Figure 1 Boxed half space operands The [[IfcBoundingBox]] that provides the enclosure is given for the convenience of the receiving application to enable the use of size box comparison for efficiency for example, to check first whether size boxes intersect, if not no calculations has to be done to check whether the solids of the entities intersect . The Enclosure therefore helps to prevent dealing with infinite size related issues. The enclosure box is positioned within the object coordinate system, established by the ObjectPlacement of the element represented for example, by [[IfcLocalPlacement]] . Figure 2 shows the Enclosure box being sufficiently large to fully enclose the Boolean result. Figure 2 Boxed half space geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 This entity is a subtype of the half space solid which is trimmed by a surrounding rectangular box. The box has its edges parallel to the coordinate axes of the geometric coordinate system. The purpose of the box is to facilitate CSG computations by producing a solid of finite size. NOTE Entity adapted from boxed half space defined in ISO 10303 42. HISTORY New entity in IFC1.5.1 .change ifc2x4 IFC4 CHANGE Usage correct, position coordinate system for Enclosure is the object coordinate system."

#:IFC.xml:10445
msgid "IfcBoxedHalfSpace_Enclosure"
msgstr "Armario"

msgid "IfcBoxedHalfSpace_Enclosure_DEFINITION"
msgstr "La caja que limita la solidez resultante de la operación booleana que implica el medio espacio sólido sólo para fines computacionales."

#:IFC.xml:10460
msgid "IfcCartesianPointList"
msgstr "Lista de puntos de IfcCartesiana"

msgid "IfcCartesianPointList_DEFINITION"
msgstr "The [[IfcCartesianPointList]] is the abstract supertype of list of points. NOTE The [[IfcCartesianPointList]] is introduced to provide a compact representation of potentially larger list of points, such as in point clouds, and in indexable representation of points. HISTORY New entity in IFC4."

#:IFC.xml:10461
msgid "IfcCartesianPointList_Dim"
msgstr "Dim"

msgid "IfcCartesianPointList_Dim_DEFINITION"
msgstr "The space dimensionality of this class, either 2 or 3, depending on the sub type."

#:IFC.xml:10480
msgid "IfcCartesianPointList2D"
msgstr "IfcCartesianPointList2D"

msgid "IfcCartesianPointList2D_DEFINITION"
msgstr "The [[IfcCartesianPointList2D]] defines an ordered collection of two dimentional Cartesian points. Each Cartesian point is provided as an two dimensional point by a fixed list of two coordinates. The attribute CoordList is a two dimensional list, where first dimension is an unbounded list representing each 2D Cartesian point second dimension is a fixed list of two list members, where 1 is the x coordinate, and 2 the y coordinate of the Cartesian point. NOTE The [[IfcCartesianPointList2D]] is introduced to provide a compact representation of larger list of points, such as in indexable representation of points used as vertices in poly curves. HISTORY New entity in IFC4 ADD1."

#:IFC.xml:10481
msgid "IfcCartesianPointList2D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList2D_CoordList_DEFINITION"
msgstr "Lista de dos dimensiones de los puntos cartesianos proporcionados por dos coordenadas."

#:IFC.xml:10486
msgid "IfcCartesianPointList2D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList2D_TagList_DEFINITION"
msgstr "Lista de etiquetas correspondientes a cada punto que se puede utilizar para identificar una curva base según el atributo Tag en [[IfcOffsetCurveByDistances]] o IfcAlignmentCurve ."

#:IFC.xml:10493
msgid "IfcCartesianPointList3D"
msgstr "IfcCartesianPointList3D"

msgid "IfcCartesianPointList3D_DEFINITION"
msgstr "The [[IfcCartesianPointList3D]] defines an ordered collection of three dimentional Cartesian points. Each Cartesian point is provided as an three dimensional point by a fixed list of three coordinates. The attribute CoordList is a two dimensional list, where first dimension is an unbounded list representing each 3D Cartesian point second dimension is a fixed list of three list members, where 1 is the x coordinate, 2 the y coordinate and 3 the z coordinate of the Cartesian point. NOTE The [[IfcCartesianPointList]] is introduced to provide a compact representation of larger list of points, such as in point clouds, and in indexable representation of points used as vertices in tessellated items or poly curves. HISTORY New entity in IFC4."

#:IFC.xml:10494
msgid "IfcCartesianPointList3D_CoordList"
msgstr "CoordList"

msgid "IfcCartesianPointList3D_CoordList_DEFINITION"
msgstr "Lista de dos dimensiones de los puntos cartesianos proporcionados por tres coordenadas."

#:IFC.xml:10499
msgid "IfcCartesianPointList3D_TagList"
msgstr "TagList"

msgid "IfcCartesianPointList3D_TagList_DEFINITION"
msgstr "Lista de etiquetas correspondientes a cada punto que se puede utilizar para identificar una curva base según el atributo Tag en [[IfcOffsetCurveByDistances]] o IfcAlignmentCurve ."

#:IFC.xml:10518
msgid "IfcCsgPrimitive3D"
msgstr "IfcCsgPrimitive3D"

msgid "IfcCsgPrimitive3D_DEFINITION"
msgstr "[[IfcCsgPrimitive3D]] is an abstract supertype of all three dimensional primitives used as either tree root item, or as Boolean results within a CSG solid model. All 3D CSG primitives are defined within a three dimensional placement coordinate system. HISTORY New entity in IFC2x3."

#:IFC.xml:10528
msgid "IfcCsgPrimitive3D_Position"
msgstr "Posición"

msgid "IfcCsgPrimitive3D_Position_DEFINITION"
msgstr "The placement coordinate system to which the parameters of each individual CSG primitive apply."

#:IFC.xml:10519
msgid "IfcCsgPrimitive3D_Dim"
msgstr "Dim"

msgid "IfcCsgPrimitive3D_Dim_DEFINITION"
msgstr "The space dimensionality of this geometric representation item, it is always 3."

#:IFC.xml:10540
msgid "IfcCsgSelect"
msgstr "IfcCsgSelect"

#:IFC.xml:10541
msgid "IfcCsgSolid"
msgstr "IfcCsgSolid"

msgid "IfcCsgSolid_DEFINITION"
msgstr "An [[IfcCsgSolid]] is the representation of a 3D shape using constructive solid geometry model. It is represented by a single 3D CSG primitive, or as a result of a Boolean operation. The operants of a Boolean operation can be Boolean operations themselves forming a CSG tree. The following volumes can be parts of the CSG tree Boundary representation models, such as [[IfcFacetedBrep]] , [[IfcFacetedBrepWithVoids]] , Closed tesselated representation modles, such as [[IfcPolygonalFaceSet]] , [[IfcTriangulatedFaceSet]] , Swept area solids, such as [[IfcExtrudedAreaSolid]] , [[IfcRevolvedAreaSolid]] , and their subtypes for tapering, Advanced swept area solids, such as [[IfcSurfaceCurveSweptAreaSolid]] , [[IfcFixedReferenceSweptAreaSolid]] , [[IfcSweptDiskSolid]] Half space solids, such as [[IfcHalfSpaceSolid]] and its subtypes , and CSG primitives, the subtypes of [[IfcCsgPrimitive3D]] . .extDef NOTE Definition according to ISO CD 10303 42 1992 A solid represented as a CSG model is defined by a collection of so called primitive solids, combined using regularized Boolean operations. The allowed operations are intersection, union, and difference. As a special case a CSG solid can also consists of a single CSG primitive. A CSG solid requires two kinds of information for its complete definition geometric and structural. The geometric information is conveyed by solid models. These typically primitive volumes such as cylinders, wedges and extrusions, but can include general B Rep models. Solid models can also be half space solids. The structural information is in a tree strictly an acyclic directed graph of Boolean result and CSG solids, which represent a recipe for building the solid. The terminal nodes are the geometric primitives and other solids. Every CSG solid has precisely one Boolean result associated with it which is the root of the tree that defines the solid. There may be further Boolean results within the tree as operands . The significance of a CSG solid entity is that the solid defined by the associated tree is thus identified as a significant object itself, and in this way it is distinguished from other Boolean result entities representing intermediate results during the construction process. NOTE Entity adapted from csg solid is defined in ISO 10303 42. HISTORY New entity in IFC1.5.1"

#:IFC.xml:10542
msgid "IfcCsgSolid_TreeRootExpression"
msgstr "Expresión raíz del árbol"

msgid "IfcCsgSolid_TreeRootExpression_DEFINITION"
msgstr "Expresión booleana de primitivos y operadores regularizados que describen el sólido. La raíz del árbol de expresiones booleanas se da explícitamente como una entidad [[IfcBooleanResult]] o como un subtipo primitivo de [[IfcCsgPrimitive3D]] ."

#:IFC.xml:10549
msgid "IfcDirectrixDerivedReferenceSweptAreaSolid"
msgstr "IfcDirectrixDerivedReferenceSweptAreaSolid"

#:IFC.xml:10552
msgid "IfcExtrudedAreaSolid"
msgstr "IfcAreasólido extraído"

msgid "IfcExtrudedAreaSolid_DEFINITION"
msgstr "The [[IfcExtrudedAreaSolid]] is defined by sweeping a cross section provided by a profile definition. The direction of the extrusion is given by the ExtrudedDirection attribute and the length of the extrusion is given by the Depth attribute. If the planar area has inner boundaries holes defined , then those holes shall be swept into holes of the solid. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the extruded solid. If not provided, it defaults to the current object coordinate system. The ExtrudedDirection is given within the position coordinate system as defined by [[IfcSweptAreaSolid]] . Position . The extruded direction can be any direction which is not perpendicular to the z axis of the position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The result is a solid. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. Figure 1 Extruded area solid geometry EXAMPLE Figure 2 illustrates geometric parameters and additional positioning parameters of the extruded area solid. The extruded area solid defines the extrusion of a 2D area by an direction and depth. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the y axis. Figure 2 Repositioned extruded area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 An extruded area solid is a solid defined by sweeping a bounded planar surface. The direction of translation is defined by a direction vector, and the length of the translation is defined by a distance depth. The planar area may have holes which will sweep into holes in the solid. NOTE Entity adapted from extruded area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .use head Texture use definition For side faces, textures are aligned facing upright continuously along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the extrusion axis according to RepeatT . For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. EXAMPLE Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcExtrudedAreaSolid]] having a profile of [[IfcIShapeProfileDef]], the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcIShapeProfileDef]].OverallWidth, 0.5 [[IfcIShapeProfileDef]].OverallDepth . Figure 3 Extruded area solid textures"

#:IFC.xml:10560
msgid "IfcExtrudedAreaSolid_ExtrudedDirection"
msgstr "Dirección extraída"

msgid "IfcExtrudedAreaSolid_ExtrudedDirection_DEFINITION"
msgstr "The direction in which the surface, provided by SweptArea is to be swept."

#:IFC.xml:10553
msgid "IfcExtrudedAreaSolid_Depth"
msgstr "Profundidad"

msgid "IfcExtrudedAreaSolid_Depth_DEFINITION"
msgstr "La distancia que la superficie debe ser barrida a lo largo de la ExtrudedDirección ."

#:IFC.xml:10572
msgid "IfcExtrudedAreaSolidTapered"
msgstr "IfcExtrudedAreaSolidTapered"

msgid "IfcExtrudedAreaSolidTapered_DEFINITION"
msgstr "[[IfcExtrudedAreaSolidTapered]] is defined by sweeping a cross section along a linear spine. The cross section may change along the sweep from the shape of the start cross section into the shape of the end cross section. The resulting solid is bounded by three or more faces A start face, an end face each defined by start and end planes and sections , and one or more lateral faces. Each lateral face is a ruled surface defined by a pair of corresponding edges of the start and end section. NOTE Given that the start and end section is provided by a polygon, the corresponding vertices of the start and end cross section are connected, forming a quadrilateral polygon between each pair of corresponding vertices. The surface defined by the bounding quadrilateral polygon is a ruled surface, that could be approximated by triangulation. The linear spine is defined by Start point SELF [[IfcSweptAreaSolid]].Position.Location Direction SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection Distance SELF [[IfcExtrudedAreaSolid]].Depth The start cross section is defined by SELF [[IfcSweptAreaSolid]].SweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by SELF [[IfcSweptAreaSolid]].Position.P 1 and SELF [[IfcSweptAreaSolid]].Position.P 2 The linear spine starts at the plane of the start cross section. The spine is not necessarily perpendicular to the plane. The end cross section is defined by EndSweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by translating the start position coordinates provided by SELF [[IfcSweptAreaSolid]].Position along the spine direction by the spine distance. The plane of the end cross section is coplanar to the plane of the start cross section. The end cross section is topologically similar to the start cross section i.e. having the same number of vertices and edges . The end cross section can either be defined by the same paramteric profile using different parameter values, or by a 2D Cartesian transformation of the start profile within the end cross section plane. In case of two parameterized profiles the shape is constructed as follows The end profile, defined by a cross section based on the same profile paramterization as the start profile, is translated by the spine distance along the spine direction. It may be shifted within the XY plane of the end postion coordinate system and may be twisted using the rotation parameter. The shift and rotation parameter are provided by the end cross section being of type [[IfcParameterizedProfileDef]] , where Shift is EndSweptArea [[IfcParameterizedProfileDef]].Position.Location Rotation is EndSweptArea [[IfcParameterizedProfileDef]].Position.RefDirection Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. In case of Cartesian transformation of the start cross section the shape is constructed as follows The cross section curve, which starts as a curve in the XY plane of the position coordinate system, is first scaled about the origin by the scale parameter. It is then translated by the spine distance along the spine direction. It maybe twisted by using the rotation parameter. The scale and rotation parameter are provided by the end cross section being of type [[IfcDerivedProfileDef]] , where Scale is EndSweptArea [[IfcDerivedProfileDef]].Operator.Scale Rotation is EndSweptArea [[IfcDerivedProfileDef]].Operator.Axis1 Corresponding vertices of the start and end cross section are connected. Lateral faces are constructed as ruled surfaces between corresponding edges of start and end cross section. HISTORY New entity in IFC4. .spec head Informal Propositions 1. Mirroring within [[IfcDerivedProfileDef]].Operator shall not be used"

#:IFC.xml:10575
msgid "IfcExtrudedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcExtrudedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "La superficie que define el final del área de barrido. Se da como definición de perfil. El sistema de coordenadas de posición del EndSwptArea se genera traduciendo el SELF [[IfcSweptAreaSolid]]. osición a lo largo del SELF [[IfcExtrudedAreaSolid]].ExtrudedDirection por la distancia de SELF [[IfcExtrudedAreaSolid]].Depth ."

#:IFC.xml:10587
msgid "IfcFaceBasedSurfaceModel"
msgstr "Modelo basado en superficie Ifcface"

msgid "IfcFaceBasedSurfaceModel_DEFINITION"
msgstr "The [[IfcFaceBasedSurfaceModel]] represents the a shape by connected face sets. The connected faces have a dimensionality 2 and are placed in a coordinate space of dimensionality 3. .extDef NOTE Definition according to ISO CD 10303 42 1992 A face based surface model is described by a set of connected face sets of dimensionality 2. The connected face sets shall not intersect except at edges and vertices, except that a face in one connected face set may overlap a face in another connected face set, provided the face boundaries are identical. There shall be at least one connected face set. A connected face set may exist independently of a surface model. NOTE Entity adapted from face based surface model defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The connected face sets shall not overlap or intersect except at common faces, edges or vertices. 2. The fbsm faces have dimensionality 2. .deprecated IFC4 CHANGE The entity has been deprecated and shall not be used. The entity [[IfcFacetedBrep]] shall be used instead."

#:IFC.xml:10596
msgid "IfcFaceBasedSurfaceModel_FbsmFaces"
msgstr "FbsmFaces"

msgid "IfcFaceBasedSurfaceModel_FbsmFaces_DEFINITION"
msgstr "The set of connected face sets comprising the face based surface model."

#:IFC.xml:10588
msgid "IfcFaceBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcFaceBasedSurfaceModel_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:10608
msgid "IfcFacetedBrep"
msgstr "IfcFacetedBrep"

msgid "IfcFacetedBrep_DEFINITION"
msgstr "The [[IfcFacetedBrep]] is a manifold solid brep with the restriction that all faces are planar and bounded polygons. NOTE Use of [[IfcFacetedBrep]] is restricted for boundary representation models with planar surfaces only. Those surfaces are implicitly represented by the bounding polygons. The diagram shows the topological and geometric representation items that are used for faceted breps. Each [[IfcCartesianPoint]], used within the [[IfcFacetedBrep]] shall be referenced three times by an [[IfcPolyLoop]] bounding a different [[IfcFace]]. Figure 1 Diagram showing the use of [[IfcFacetedBrep]] .extDef NOTE Definition according to ISO CD 10303 42 1992 A faceted B rep is a simple form of boundary representation model in which all faces are planar and all edges are straight lines. Unlike the B rep model, edges and vertices are not represented explicitly in the model but are implicitly available through the poly loop entity. A faceted B rep has to meet the same topological constraints as the manifold solid B rep. .extDef The faceted B rep has been introduced in order to support the larger number of systems that allow boundary type solid representations with planar surfaces only. NOTE Entity adapted from manifold solid brep defined in ISO 10303 42. HISTORY New entity in IFC1.0 .spec head Informal Propositions 1. All the bounding loops of all the faces of all the shells in the [[IfcFacetedBrep]] shall be of type [[IfcPolyLoop]] . 2. All vertices shall be referenced by all polyloops, sharing the vertex. I.e., each Cartesian point shall be references by at least three polyloops."

#:IFC.xml:10611
msgid "IfcFacetedBrepWithVoids"
msgstr "IfcFacetedBrepWithVoids"

msgid "IfcFacetedBrepWithVoids_DEFINITION"
msgstr "The [[IfcFacetedBrepWithVoids]] is a specialization of a faceted B rep which contains one or more voids in its interior. The voids are represented as closed shells which are defined so that the shell normal point into the void. NOTE Entity adapted from brep with voids AND faceted brep defined in ISO 10303 42. HISTORY New entity in IFC1.0 .change ifc2x4 IFC4 CHANGE Subtyping changed from [[IfcManifoldSolidBrep]] to [[IfcFacetedBrep]] with upward compatibility for file based exchange. .spec head Informal Propositions 1. Each void shell shall be disjoint from the outer shell and from every other void shell 2. Each void shell shall be enclosed within the outer shell but not within any other void shell. In particular the outer shell is not in the set of void shells 3. Each shell in the [[IfcManifoldSolidBrep]] shall be referenced only once. 4. All the bounding loops of all the faces of all the shells in the [[IfcFacetedBrep]] shall be of type [[IfcPolyLoop]] ."

#:IFC.xml:10614
msgid "IfcFacetedBrepWithVoids_Voids"
msgstr "Voids"

msgid "IfcFacetedBrepWithVoids_Voids_DEFINITION"
msgstr "Set of closed shells defining voids within the solid."

#:IFC.xml:10626
msgid "IfcFixedReferenceSweptAreaSolid"
msgstr "IfcFixedReferenceSweptAreaSolid"

msgid "IfcFixedReferenceSweptAreaSolid_DEFINITION"
msgstr "An [[IfcFixedReferenceSweptAreaSolid]] is a type of swept area solid which is the result of sweeping an area along a Directrix . The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the start tangent of the directrix at this point, and the profile s x axis agrees to the orthogonal projection of the FixedReference direction within the plane of start tangent and Fixed Reference . The orientation of the curve during the sweeping operation is controlled by the FixedReference direction. The SweptArea is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the projection of FixedReference onto the normal plane to the directrix at this point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The resulting swept solid is placed by the Position coordinate system. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , being either the parameter value based on the curve parameterization, or by a length measured along the directrix from its beginning. If no EndParam is provided the end defaults to the end of the directrix. NOTE The StartParam and the EndParam , if provided as a parameter value, are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. NOTE In the case of a curve composed of [[IfcCurveSegment]] , the [[IfcSweptAreaSolid]] Position is dependent on the [[IfcCurveSegment]] StartPlacement and the type of BasisCurve which defines the name function between the start and end explicitly defined as the start point of the next segment points of the segment EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In many cases, it is a surface of extrusion. The directrix lies on the surface, often defined as a p curve at this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the FixedReference direction. The Axis2 the y axis, or v is constructed. In this case the resulting swept solid is not repositioned. The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a CartesianTransformationOperator3d with attributes LocalOrigin as point 0 0 0 , Axis1 as the orthogonal projection of the FixedReference onto the normal plane defined by Axis3 . Axis3 as the direction of the tangent vector t at the point of the Directrix with parameter u . The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the Directrix parameter u . NOTE The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE Entity adapted from fixed reference swept surface defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. The SweptArea shall lie in the plane z 0. 2. The FixedReference shall not be parallel to a tangent vector to the directrix at any point along this curve. 3. The Directrix curve shall be tangent continuous."

#:IFC.xml:10629
msgid "IfcFixedReferenceSweptAreaSolid_FixedReference"
msgstr "FixedReference"

msgid "IfcFixedReferenceSweptAreaSolid_FixedReference_DEFINITION"
msgstr "FixedReference"

#:IFC.xml:10641
msgid "IfcGeometricCurveSet"
msgstr "IfcGeometricCurveSet"

msgid "IfcGeometricCurveSet_DEFINITION"
msgstr "The [[IfcGeometricCurveSet]] is used for the exchange of shape representation consisting of an collection of 2D or 3D points and curves only. .extDef NOTE Definition according to ISO CD 10303 42 1992 A geometric curve set is a collection of two or three dimensional points and curves. NOTE Entity adapted from geometric curve set defined in ISO 10303 42. HISTORY New entity in IFC2x2. Formal Propositions NoSurfaces No surface shall be included in this geometric set."

#:IFC.xml:10644
msgid "IfcGeometricSet"
msgstr "Conjunto geométrico Ifc"

msgid "IfcGeometricSet_DEFINITION"
msgstr "The [[IfcGeometricSet]] is used for the exchange of shape representation consisting of 2D or 3D points, curves, and surfaces, which do not have a topological structure such as connected face sets or shells , are not tessellated and are not solid models such as swept solids, CSG or Brep . .extDef NOTE Definition from ISO CD 10303 42 This entity is intended for the transfer of models when a topological structure is not available. NOTE Entity adapted from geometric set defined in ISO 10303 42. HISTORY New entity in IFC2x."

#:IFC.xml:10645
msgid "IfcGeometricSet_Dim"
msgstr "Dim"

msgid "IfcGeometricSet_Dim_DEFINITION"
msgstr "La dimensión espacial de esta clase, es idéntica al primer elemento del conjunto. Una regla en la que se garantice que todos los elementos tengan la misma dimensionalidad."

#:IFC.xml:10650
msgid "IfcGeometricSet_Elements"
msgstr "Elementos"

msgid "IfcGeometricSet_Elements_DEFINITION"
msgstr "Los elementos geométricos que componen el conjunto geométrico, pueden ser puntos, curvas o superficies pero son necesarias para ser de la misma dimensión de espacio de coordenadas."

#:IFC.xml:10657
msgid "IfcGeometricSetSelect"
msgstr "Selección Geométrica Ifc"

#:IFC.xml:10658
msgid "IfcHalfSpaceSolid"
msgstr "IfcHalfSpaceSolid"

msgid "IfcHalfSpaceSolid_DEFINITION"
msgstr "A half space solid divides the domain into two by a base surface. Normally, the base surface is a plane and devides the infinitive space into two and indicates the side of the half space by agreeing or disagreeing to the normal of the plane. Figure 1 illustrates the definition of the [[IfcHalfSpaceSolid]] within a given coordinate system. The base surface is given by an unbounded plane, the red boundary is shown for visualization purposes only. half space solid .. .. .. .. figures ifchalfspacesolid layout1.gif Figure 1 Half space solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A half space solid is defined by the half space which is the regular subset of the domain which lies on one side of an unbounded surface. The side of the surface which is in the half space is determined by the surface normal and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normal points away from. If the agreement flag is FALSE, then the subset is the one the normal points into. For a valid half space solid the surface shall divide the domain into exactly two subsets. Also, within the domain the surface shall be manifold and all surface normals shall point into the same subset. NOTE A half space is not a subtype of solid model, half space solids are only useful as operands in Boolean expressions. NOTE Entity adapted from half space solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .spec head Informal Propositions 1. The base surface shall divide the domain into exactly two subsets. If the half space solid is of subtype boxed half space [[IfcBoxedHalfSpace]] , the domain in question is that of the attribute enclosure. In all other cases the domain is all of space and the base surface shall be unbounded. 2. The base surface shall be an unbounded surface subtype of [[IfcElementarySurface]] ."

#:IFC.xml:10672
msgid "IfcHalfSpaceSolid_BaseSurface"
msgstr "Superficie base"

msgid "IfcHalfSpaceSolid_BaseSurface_DEFINITION"
msgstr "Surface defining side of half space."

#:IFC.xml:10659
msgid "IfcHalfSpaceSolid_Dim"
msgstr "Dim"

msgid "IfcHalfSpaceSolid_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3"

#:IFC.xml:10664
msgid "IfcHalfSpaceSolid_AgreementFlag"
msgstr "Bandera de acuerdo"

msgid "IfcHalfSpaceSolid_AgreementFlag_DEFINITION"
msgstr "La bandera de acuerdo es TRUE si la normal de la superficie base apunta lejos del material del [[IfcHalfSpaceSolid]]. De lo contrario, es FALSE."

#:IFC.xml:10684
msgid "IfcIndexedPolygonalFace"
msgstr "IfcIndexado Cara Poligonal"

msgid "IfcIndexedPolygonalFace_DEFINITION"
msgstr "The [[IfcIndexedPolygonalFace]] is a compact representation of a planar face being part of a face set. The vertices of the polygonal planar face are provided by 3 or more Cartesian points, defined by indices that point into an [[IfcCartesianPointList3D]] , either direcly, or via the PnIndex , if provided at [[IfcPolygonalFaceSet]] . Figure 1 shows an [[IfcIndexedPolygonalFace]] at an [[IfcPolygonalFaceSet]] not using PnIndex the default . [[IfcIndexedPolygonalFace]] .. .. .. .. figures ifcindexedpolygonalface 01.png Figure 1 Polygonal face geometry provided by indices into a point list Figure 2 shows an [[IfcIndexedPolygonalFace]] at an [[IfcPolygonalFaceSet]] using PnIndex . [[IfcIndexedPolygonalFace]] us ing PnIndex .. .. .. .. figures ifcindexedpolygonalface 02.png Figure 2 Polygonal face geometry provided by indices into a point list HISTORY New entity in IFC4 Addendum 2."

#:IFC.xml:10691
msgid "IfcIndexedPolygonalFace_ToFaceSet"
msgstr "ToFaceSet"

msgid "IfcIndexedPolygonalFace_ToFaceSet_DEFINITION"
msgstr "Reference to the [[IfcPolygonalFaceSet]] for which this face is associated."

#:IFC.xml:10705
msgid "IfcIndexedPolygonalFace_HasTexCoords"
msgstr "HasTexCoords"

msgid "IfcIndexedPolygonalFace_HasTexCoords_DEFINITION"
msgstr "HasTexCoords"

#:IFC.xml:10685
msgid "IfcIndexedPolygonalFace_CoordIndex"
msgstr "CoordIndex"

msgid "IfcIndexedPolygonalFace_CoordIndex_DEFINITION"
msgstr "One dimensional list with the indices for the three or more points, that define the vertices of the outer loop. If the tessellated face set is closed, indicated by SELF [[IfcTessellatedFaceSet]].Closed , then the points, defining the outer loop, shall connect counter clockwise, as seen from the outside of the body, so that the resulting normal will point outwards. NOTE The coordinates of the vertices are provided by the indexed list of SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList . If the SELF [[IfcTessellatedFaceSet]].PnIndex is provided, the indices point into it, otherwise directly into the [[IfcCartesianPointList3D]] ."

#:IFC.xml:10719
msgid "IfcIndexedPolygonalFaceWithVoids"
msgstr "IfcIndexedPolygonalFaceWithVoids"

msgid "IfcIndexedPolygonalFaceWithVoids_DEFINITION"
msgstr "The [[IfcIndexedPolygonalFaceWithVoids]] is a compact representation of a planar face with inner loops, being part of a face set. HISTORY New entity in IFC4 Addendum 2."

#:IFC.xml:10720
msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices"
msgstr "Indices InnerCoords"

msgid "IfcIndexedPolygonalFaceWithVoids_InnerCoordIndices_DEFINITION"
msgstr "Two dimensional list, where the first dimension represents each inner loop from 1 to N and the second dimension the indices to three or more points that define the vertices of each inner loop. If the tessellated face set is closed, indicated by SELF [[IfcTessellatedFaceSet]].Closed , then the points, defining the inner loops, shall connect clockwise, as seen from the outside of the body. NOTE The coordinates of the vertices are provided by the indexed list of SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList . If the SELF [[IfcTessellatedFaceSet]].PnIndex is provided, the indices point into it, otherwise directly into the [[IfcCartesianPointList3D]] ."

#:IFC.xml:10727
msgid "IfcIndexedPolygonalTextureMap"
msgstr "IfcIndexedPolygonalTextureMap"

#:IFC.xml:10730
msgid "IfcIndexedPolygonalTextureMap_TexCoords"
msgstr "TexCoords"

msgid "IfcIndexedPolygonalTextureMap_TexCoords_DEFINITION"
msgstr "TexCoords"

#:IFC.xml:10744
msgid "IfcManifoldSolidBrep"
msgstr "IfcManifoldSolidBrep"

msgid "IfcManifoldSolidBrep_DEFINITION"
msgstr "The [[IfcManifoldSolidBrep]] is a solid represented as a collection of connected surfaces that delimit the solid from the surrounding non solid. Instances of type [[IfcManifoldSolidBrep]] shall be of type [[IfcFacetedBrep]] , using only [[IfcPolyLoop]] for the bounds of [[IfcFaceBound]] , or of type [[IfcAdvancedBrep]] , using only [[IfcAdvancedFace]] for the face geometry, and [[IfcEdgeCurve]] for the edges. .extDef NOTE Definition according to ISO CD 10303 42 1992 A manifold solid b rep is a finite, arcwise connected volume bounded by one or more surfaces, each of which is a connected, oriented, finite, closed 2 manifold. There is no restriction on the genus of the volume, nor on the number of voids within the volume. The Boundary Representation B rep of a manifold solid utilizes a graph of edges and vertices embedded in a connected, oriented, finite, closed two manifold surface. The embedded graph divides the surface into arcwise connected areas known as faces. The edges and vertices, therefore, form the boundaries of the face and the domain of a face does not include its boundaries. The embedded graph may be disconnected and may be a pseudo graph. The graph is labeled that is, each entity in the graph has a unique identity. The geometric surface definition used to specify the geometry of a face shall be 2 manifold embeddable in the plane within the domain of the face. In other words, it shall be connected, oriented, finite, non self intersecting, and of surface genus 0. Faces do not intersect except along their boundaries. Each edge along the boundary of a face is shared by at most one other face in the assemblage. The assemblage of edges in the B rep do not intersect except at their boundaries i.e., vertices . The geometry curve definition used to specify the geometry of an edge shall be arcwise connected and shall not self intersect or overlap within the domain of the edge. The geometry of an edge shall be consistent with the geometry of the faces of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. A B rep is represented by one or more closed shells which shall be disjoint. One shell, the outer, shall completely enclose all the other shells and no other shell may enclose a shell. The facility to define a B rep with one or more internal voids is provided by a subtype. The following version of the Euler formula shall be satisfied, math .. .. .. .. figures ifcmanifoldsolidbrep math1.gif where V, E, F, L l and S are the numbers of unique vertices, edges, faces, loop uses and shells in the model and G s is the sum of the genus of the shells. NOTE Entity adapted from manifold solid brep defined in ISO 10303 42. HISTORY New entity in IFC Release 1.0 Informal proposition 1. The dimensionality of a manifold solid brep shall be 3. 2. The extent of the manifold solid brep shall be finite and non zero. 3. All elements of the manifold solid brep shall have defined associated geometry. 4. The shell normals shall agree with the B rep normal and point away from the solid represented by the B rep. 5. Each face shall be referenced only once by the shells of the manifold solid brep. 6. The Euler equation shall be satisfied for the boundary representation, where the genus term shell term us the sum of the genus values for the shells of the brep."

#:IFC.xml:10747
msgid "IfcManifoldSolidBrep_Outer"
msgstr "Martín"

msgid "IfcManifoldSolidBrep_Outer_DEFINITION"
msgstr "A closed shell defining the exterior boundary of the solid. The shell normal shall point away from the interior of the solid."

#:IFC.xml:10759
msgid "IfcPointListDim__PointList"
msgstr "IfcPointListDim PointList"

#:IFC.xml:10767
msgid "IfcPolygonalBoundedHalfSpace"
msgstr "Espacio delimitado IfcPoligonal"

msgid "IfcPolygonalBoundedHalfSpace_DEFINITION"
msgstr "The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary. The base surface of the half space is positioned by its normal relative to the object coordinate system as defined at the supertype [[IfcHalfSpaceSolid]] , and its polygonal with or without arc segments boundary is defined in the XY plane of the position coordinate system established by the Position attribute, the subtraction body is extruded perpendicular to the XY plane of the position coordinate system, that is, into the direction of the positive Z axis defined by the Position attribute. The boundary is defined by a 2 dimensional polyline or 2 dimensional composite curve, consisting of straight segments and circular arc segments within the XY plane of the position coordinate system. The side of the surface which is in the half space is determined by the surface normal and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normal points away from. If the agreement flag is FALSE, then the subset is the one the normal points into. NOTE A polygonal bounded half space is not a subtype of [[IfcSolidModel]] , half space solids are only useful as operands in Boolean expressions. Figure 1 illustrates a polygonal bounded half space. Black coordinates indicate the object coordinate system usually provided by [[IfcLocalPlacement]] . Green coordinates indicate the position coordinate system the PolygonalBoundary is given within this coordinate system. It is provided by [[IfcPolygonalBoundedHalfSpace]].Position. This coordinate system is relative to the object coordinate system. The extrusion direction of the subtraction body is the positive Z axis. Red coordinates indicate the normal of the plane. It is provided by the BaseSurface [[IfcSurface]].Position . This normal is also relative to the object coordinate system. Figure 1 Polygonal half space geometry The polygonal bounded half space is used to limit the volume of the half space in Boolean difference expressions. Only the part that is defined by a theoretical intersection between the half space solid and an extruded area solid, defined by extruding the polygonal boundary, is used for Boolean expressions. The PolygonalBoundary defines the 2D polyline which bounds the effectiveness of the half space in Boolean expressions. The BaseSurface is defined by a plane, and the normal of the plane together with the AgreementFlag defines the side of the material of the half space. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. The [[IfcPolyline]] or the [[IfcCompositeCurve]] providing the PolygonalBoundary shall be closed. 2. If the PolygonalBoundary is given by an [[IfcCompositeCurve]] , it shall only have [[IfcCompositeCurveSegment]] s of type [[IfcPolyline]] , or [[IfcTrimmedCurve]] having a BasisCurve of type [[IfcLine]] , or [[IfcCircle]] 3. The BaseSurface defined at supertype [[IfcHalfSpaceSolid]] shall be of type [[IfcPlane]] 4. The normal of the plane, being the BaseSurface , shall not be perpendicular to the z axis of the position coordinate system"

#:IFC.xml:10770
msgid "IfcPolygonalBoundedHalfSpace_Position"
msgstr "Posición"

msgid "IfcPolygonalBoundedHalfSpace_Position_DEFINITION"
msgstr "Definition of the position coordinate system for the bounding polyline and the base surface ."

#:IFC.xml:10782
msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary"
msgstr "Límite poligonal"

msgid "IfcPolygonalBoundedHalfSpace_PolygonalBoundary_DEFINITION"
msgstr "Curva delimitada en dos dimensiones, definida en el plano xy del sistema de coordenadas de posición. hange ifc2x3 IFC2x3 CHANGE El tipo de atributo se ha cambiado de [[IfcPolyline]] a su supertipo [[IfcBoundedCurve]] con compatibilidad ascendente para el intercambio basado en archivos."

#:IFC.xml:10794
msgid "IfcPolygonalFaceSet"
msgstr "IfcPolygonalFaceSet"

msgid "IfcPolygonalFaceSet_DEFINITION"
msgstr "The [[IfcPolygonalFaceSet]] is a tessellated face set with all faces being bound by polygons. The planar faces are constructed by implicit polylines defined by three or more Cartesian points. Each planar face is defined by an instance of [[IfcIndexedPolygonalFace]] , or in case of faces with inner loops by [[IfcIndexedPolygonalFaceWithVoids]] . Depending on the value of the attribute Closed the instance of [[IfcPolygonalFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The attribute Faces refers to a list of [[IfcIndexedPolygonalFace]] s having an one based CoordIndex that provides three or more indices. If the face has inner loops, the [[IfcIndexedPolygonalFaceWithVoids]] has a two dimensional, one based list, where the first dimension of the two dimensional list addresses the list of inner loops the second dimension of the two dimensional list provides three or more indices each being a vertex of the planar polygon representing the inner loop. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifcpolygonalfaceset 01.png Figure 1 Use of PnIndex NOTE If the [[IfcPolygonalFaceSet]] is closed, the face vertices of the [[IfcIndexedPolygonalFace]] s shall connect counterclock wise when seen from the outside of the closed shell to guarantee that the face normal points away from the material of the shell. Inner loops, provided by the [[IfcIndexedPolygonalFaceWithVoids]] , shall connect clock wise. Figure 2 shows an IfcFacetedFaceSet represented by 1 [[IfcIndexedPolygonalFace]] 1, 2, 3, 4 2 [[IfcIndexedPolygonalFace]] 6, 2, 3, 7 3 [[IfcIndexedPolygonalFace]] 7, 3, 4, 8 4 [[IfcIndexedPolygonalFace]] 8, 4, 1, 5 5 [[IfcIndexedPolygonalFace]] 1, 4, 3, 2 6 [[IfcIndexedPolygonalFace]] 6, 7, 8, 5 7 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 2 Polygonal face set geometry NOTE The definition of IfcFacetedFaceSet is based on the indexedFaceSet defined in ISO IEC 19775 1 HISTORY New entity in IFC4 Addendum 2. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two outer or inner boundaries of faces the topological normal at each point on the boundary of the polygonal face set shall point away from the material of the solid."

#:IFC.xml:10691
msgid "IfcPolygonalFaceSet_Faces"
msgstr "Caras"

msgid "IfcPolygonalFaceSet_Faces_DEFINITION"
msgstr "The list of polygonal faces, with or without inner loops, that bound the faceted face set."

#:IFC.xml:10795
msgid "IfcPolygonalFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcPolygonalFaceSet_PnIndex_DEFINITION"
msgstr "La lista de enteros que definen las ubicaciones en el [[IfcCartesianPointList3D]] para obtener las coordenadas de puntos para los índices en las caras poligonales indexadas. Si el PnIndex no se proporciona, los índices en las caras poligonales indexadas apuntan directamente al [[IfcCartesianPointList3D]] ."

#:IFC.xml:10802
msgid "IfcRectangularPyramid"
msgstr "IfcRectangularpiramida"

msgid "IfcRectangularPyramid_DEFINITION"
msgstr "The [[IfcRectangularPyramid]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a rectangular base and a point called apex as the top. The tapers from the base to the top. The axis from the center of the base to the apex is perpendicular to the base. The inherited Position attribute defines the IfcAxisPlacement3D and provides the location and orientation of the pyramid SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cone. SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis of the inherited placement coordinate system provides the center axis of the [[IfcRightCircularCone]] , and the apex is at the Height value applied to the positive direction of the z axis. The BottomRadius defines the circular base at the xy plane of the placement coordinate system. As shown in Figure 1, the pyramid is positioned within its own placement coordinate system. The origin is the center of the bottom rectangle, that lies in the XY plane. The apex lies on the positive z axis at 0, 0, Height . pyramid .. .. .. .. figures ifcrectangularpyramid layout1.png Figure 1 Rectangular pyramid geometry HISTORY New entity in IFC2x3 .use head Texture use definition On each triangular side face, textures are aligned facing upright. Textures are stretched or repeated to the extent of the base of each face according to RepeatS. Textures are stretched or repeated towards the top point according to Repeat T, where the top point has coordinates of 0.5,1.0 if RepeatT is False. On the bottom face, textures are aligned facing front to back. Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Left X 0 YLength 0 Y towards top point Right X Xlength 0 0 Y towards top point Front Y 0 0 0 X towards top point Back Y XLength YLength 0 X towards top point Bottom Z XLength 0 0 X Y Figure 2 Rectangular pyramid textures"

#:IFC.xml:10803
msgid "IfcRectangularPyramid_Height"
msgstr "Altura"

msgid "IfcRectangularPyramid_Height_DEFINITION"
msgstr "La altura de la apex sobre el plano de la base, medida en la dirección del eje Z de colocación, el SELF [[IfcCsgPrimitive3D]]. osition.P 2 ."

#:IFC.xml:10808
msgid "IfcRectangularPyramid_XLength"
msgstr "XLongitud"

msgid "IfcRectangularPyramid_XLength_DEFINITION"
msgstr "La longitud de la base medida a lo largo del eje X de colocación. Es proporcionado por la colocación del eje heredado a través de SELF [[IfcCsgPrimitive3D]].Position.P 1 ."

#:IFC.xml:10813
msgid "IfcRectangularPyramid_YLength"
msgstr "Longitud"

msgid "IfcRectangularPyramid_YLength_DEFINITION"
msgstr "La longitud de la base medida a lo largo del eje Y de la colocación. Es proporcionado por la colocación del eje heredado a través de SELF [[IfcCsgPrimitive3D]].Position.P 2 ."

#:IFC.xml:10820
msgid "IfcRevolvedAreaSolid"
msgstr "IfcRevolvedAreaSolid"

msgid "IfcRevolvedAreaSolid_DEFINITION"
msgstr "An [[IfcRevolvedAreaSolid]] is a solid created by revolving a cross section provided by a profile definition about an axis. The resulting solid is positioned by the [[IfcSweptAreaSolid]] . Position relative to the object coordinate system. If provided, it allows to reposition the revolved solid. If not provided, it defaults to the current object coordinate system. The axis and the cross section shall be in the same plane, prior to any repositioning. NOTE Both the axis and the cross section are required to lie in the xy plane of the object position coordinate system. EXAMPLE Figure 1 illustrates geometric parameters of the revolved solid. The revolved area solid defines the revolution of a 2D area given by a profile definition by an axis and angle. The result is a solid. The swept area is given by a profile definition. The profile is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system since no 2D profile position coordinate system is provided, here [[IfcParameterizedProfileDef]].Position NIL, the profile is positioned without transformation into the xy plane of the object coordinate system by default, centric at 0.,0. with no rotation The resulting swept solid is not repositioned, as no position coordinate system is provided, here [[IfcSweptAreaSolid]].Position NIL. The AxisLine can have any orientation within the XY plane, it does not have to be parallel to the y axis as shown in the illustration. Figure 1 Revolved area solid geometry EXAMPLE Figure 1 illustrates geometric parameters and additional positioning parameters of the revolved area solid. The revolved area solid defines the rotation of a 2D area by an axis and angle. The 2D area, provided by a parameterized profile definition, can be positioned relative to the object coordinate system other then by default at 0.,0. with no rotation . The result is a solid that can be repositioned within the object coordinate system. The profile to be swept is defined as a 2D primitive, here [[IfcRectangleProfileDef]], that is placed relative to the xy plane of object coordinate system a 2D profile position coordinate system is provided that positions the profile relative to the xy plane here at a corner of the rectangle The resulting swept solid is repositioned, here it is moved into local z and rotated by 15 along the x axis. Figure 2 Repositioned revolved area solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A revolved area solid is a solid formed by revolving a planar bounded surface about an axis. The axis shall be in the plane of the surface and the axis shall not intersect the interior of the bounded surface. The bounded surface may have holes which will sweep into holes in the solid. The direction of revolution is clockwise when viewed along the axis in the positive direction. More precisely if A is the axis location and d is the axis direction and C is an arc on the surface of revolution generated by an arbitrary point p on the boundary of the swept area, then C leaves p in direction d x p A as the area is revolved. NOTE Entity adapted from revolved area solid defined in ISO 10303 42. HISTORY New entity in IFC1.5 .spec head Informal Propositions 1. The AxisLine shall lie in the plane of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 2. The AxisLine shall not intersect the interior of the SweptArea as defined at supertype [[IfcSweptAreaSolid]] . 3. The Angle shall be between 0 and 360 , or 0 and 2π depending on the unit type for [[IfcPlaneAngleMeasure]] . .use head Texture Use Definition For side faces, textures are aligned facing upright along the sides with origin at the first point of an arbitrary profile, and following the outer bound of the profile counter clockwise as seen from above . For parameterized profiles, the origin is defined at the Y extent for rounded profiles having no sharp edge and the first sharp edge counter clockwise from the Y extent for all other profiles. Textures are stretched or repeated on each side along the outer boundary of the profile according to RepeatS . Textures are stretched or repeated on each side along the outermost longest revolution path according to RepeatT , where coordinates are compressed towards the axis of revolution. For top and bottom caps, textures are aligned facing front to back, with the origin at the minimum X and Y extent. Textures are stretched or repeated on the top and bottom to the extent of each face according to RepeatS and RepeatT . For profiles with voids, textures are aligned facing upright along the inner side with origin at the first point of an arbitrary profile, and following the inner bound of the profile clockwise as seen from above . For parameterized profiles, the origin of inner sides is defined at the Y extent for rounded profiles having no sharp edge such as hollow ellipses or rounded rectangles and the first sharp edge clockwise from the Y extent for all other profiles. Figure 3 illustrates default texture mapping with a repeated texture RepeatS True and RepeatT True . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. For an [[IfcRevolvedAreaSolid]] having a profile of [[IfcTShapeProfileDef]] and revolved at 22.5 degrees, the side texture coordinate origin is the first corner counter clockwise from the Y axis, which equals 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth , while the top end cap texture coordinates start at 0.5 [[IfcTShapeProfileDef]].OverallWidth, 0.5 [[IfcTShapeProfileDef]].OverallDepth . Figure 3 Revolved area solid textures"

#:IFC.xml:10832
msgid "IfcRevolvedAreaSolid_Axis"
msgstr "Eje"

msgid "IfcRevolvedAreaSolid_Axis_DEFINITION"
msgstr "Axis about which revolution will take place."

#:IFC.xml:10821
msgid "IfcRevolvedAreaSolid_AxisLine"
msgstr "AxisLine"

msgid "IfcRevolvedAreaSolid_AxisLine_DEFINITION"
msgstr "Línea del eje de revolución."

#:IFC.xml:10825
msgid "IfcRevolvedAreaSolid_Angle"
msgstr "Ángulo"

msgid "IfcRevolvedAreaSolid_Angle_DEFINITION"
msgstr "El ángulo a través del cual se hará el barrido. Este ángulo se mide desde el plano del área barrida proporcionada por el plano XY del sistema de coordenadas de posición."

#:IFC.xml:10844
msgid "IfcRevolvedAreaSolidTapered"
msgstr "IfcRevolvedAreaSolidTapered"

msgid "IfcRevolvedAreaSolidTapered_DEFINITION"
msgstr "[[IfcRevolvedAreaSolidTapered]] is defined by revolving a cross section along a circular arc. The cross section may change along the revolving sweep from the shape of the start cross section into the shape of the end cross section. Corresponding vertices of the start and end cross sections are then connected. The bounded surface may have holes which will sweep into holes in the solid. The rotation axis is defined by Start point SELF [[IfcSweptAreaSolid]].Position.Location Direction SELF [[IfcRevolvedAreaSolid]].Axis Rotation axis SELF [[IfcRevolvedAreaSolid]].AxisLine , created from start point and direction by appying a 1 unit magnitude. Orientation Positive angles are applied clockwise when looking into the positive direction of the rotation axis. The start cross section is defined by SELF [[IfcSweptAreaSolid]].SweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by SELF [[IfcSweptAreaSolid]].Position.P 1 and SELF [[IfcSweptAreaSolid]].Position.P 2 The rotation axis lies in the plane of the start cross section but shall not intersect the interior of the start cross section. The end cross section is defined by EndSweptArea A bounded planar surface lying in the XY plane of the position coordinate system defined by rotating the start position coordinates provided by SELF [[IfcSweptAreaSolid]].Position around the rotation axis by the angle given by SELF [[IfcRevolvedAreaSolid]].Angle . The end cross section is topologically similar to the start cross section having the same number of vertices and edges . The end cross section can either be defined by the same paramteric profile using different parameter values, or by a 2D Cartesian transformation of the start profile within the end cross section plane. The solid is generated by transforming the start cross section into to end cross section. A start face, an end face each defined by start and end cross sections , and one or more lateral faces. Each lateral face is a ruled surface defined by a pair of corresponding edges of the start and end section. The ruled surfaces are constructed in the cylindrical coordinate space defined by the supertype [[IfcRevolvedAreaSolid]] . HISTORY New entity in IFC4. .spec head Informal Propositions 1. Mirroring within [[IfcDerivedProfileDef]].Operator shall not be used"

#:IFC.xml:10847
msgid "IfcRevolvedAreaSolidTapered_EndSweptArea"
msgstr "EndSweptArea"

msgid "IfcRevolvedAreaSolidTapered_EndSweptArea_DEFINITION"
msgstr "EndSweptArea"

#:IFC.xml:10859
msgid "IfcRightCircularCone"
msgstr "IfcRightCircularCone"

msgid "IfcRightCircularCone_DEFINITION"
msgstr "The [[IfcRightCircularCone]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a circular base and a point called apex as the top. The tapers from the base to the top. The axis from the center of the circular base to the apex is perpendicular to the base. The inherited Position attribute defines the IfcAxisPlacement3D and provides the location and orientation of the cone SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cone. SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis of the inherited placement coordinate system provides the center axis of the [[IfcRightCircularCone]] , and the apex is at the Height value applied to the positive direction of the z axis. The BottomRadius defines the circular base at the xy plane of the placement coordinate system. Figure 1 illustrates geometric parameters of the cone. The cone is positioned within its own placement coordinate system. The origin is the center of the bottom circular disk, that lies in the XY plane. The apex lies on the positive z axis at 0, 0, Height . cone1 .. .. .. .. figures ifcrightcircularcone layout1.png Figure 1 Right circular cone geometry NOTE Entity adapted from right circular cone defined in ISO 10303 42. HISTORY New entity in IFC2x3 .use head Texture use definition On the circular side, textures are aligned facing upright with origin at the back Y direction revolving counter clockwise. Textures are stretched or repeated to the extent of the base circumference according to RepeatS. Textures are compressed linearly going upwards towards the top point according to RepeatT. On the bottom face, textures are aligned facing front to back, with the center of the circle aligned to the center of the texture. Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Side Y 0 Radius 0 X towards top point Bottom Z Radius Radius 0 X Y Figure 2 Right circular cone textures"

#:IFC.xml:10860
msgid "IfcRightCircularCone_BottomRadius"
msgstr "BottomRadio"

msgid "IfcRightCircularCone_BottomRadius_DEFINITION"
msgstr "El radio del cono en la base."

#:IFC.xml:10865
msgid "IfcRightCircularCone_Height"
msgstr "Altura"

msgid "IfcRightCircularCone_Height_DEFINITION"
msgstr "La distancia entre la base del cono y la apex."

#:IFC.xml:10872
msgid "IfcRightCircularCylinder"
msgstr "CircularCylinder IfcDerecho"

msgid "IfcRightCircularCylinder_DEFINITION"
msgstr "The [[IfcRightCircularCylinder]] is a Construction Solid Geometry CSG 3D primitive. It is a solid with a circular base and top. The cylindrical surface between if formed by points at a fixed distance from the axis of the cylinder. The inherited Position attribute defines the IfcAxisPlacement3D and provides SELF [[IfcCsgPrimitive3D]].Position The location and orientation of the axis system for the primitive. SELF [[IfcCsgPrimitive3D]].Position.Location The center of the circular area being the bottom face of the cylinder. SELF [[IfcCsgPrimitive3D]].Position.Position 3 The z axis provides the center axis and the height is measured from the origin along the positive direction of the z axis. Figure 1 illustrates geometric parameters of the cylinder. The cylinder is positioned within its own placement coordiante system. The origin is the center of the bottom circular disk, that lies in the XY plane. The center of the top circular disk is on the positive z axis at 0, 0, Height . cylinder .. .. .. .. figures ifcrightcircularcylinder layout1.png Figure 1 Right circular cylinder geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A right circular cylinder is a CSG primitive in the form of a solid cylinder of finite height. It is defined by an axis point at the centre of one planar circular face, an axis, a height, and a radius. The faces are perpendicular to the axis and are circular discs with the specified radius. The height is the distance from the first circular face centre in the positive direction of the axis to the second circular face centre. NOTE Entity adapted from right circular cylinder defined in ISO 10303 42. HISTORY New entity in IFC2x3. .use head Texture use definition On the circular side, textures are aligned facing upright with origin at the back Y direction revolving counter clockwise. Textures are stretched or repeated to the extent of the circumference according to RepeatS. Textures are stretched or repeated to the extent of the Height according to RepeatT. On the top and bottom faces, textures are aligned facing front to back, with the center of the circle aligned to the center of the texture. Figure 2 illustrates default texture mapping with a clamped texture RepeatS False and RepeatT False . The image on the left shows the texture where the S axis points to the right and the T axis points up. The image on the right shows the texture applied to the geometry where the X axis points back to the right, the Y axis points back to the left, and the Z axis points up. .gridtable Side Normal Origin X Origin Y Origin Z S Axis T Axis Side Y 0 Radius 0 X Z Bottom Z Radius Radius 0 X Y Top Z Radius Radius Height X Y Figure 2 Right circular cylinder textures"

#:IFC.xml:10873
msgid "IfcRightCircularCylinder_Height"
msgstr "Altura"

msgid "IfcRightCircularCylinder_Height_DEFINITION"
msgstr "La distancia entre las caras circulares planas del cilindro."

#:IFC.xml:10878
msgid "IfcRightCircularCylinder_Radius"
msgstr "Radius"

msgid "IfcRightCircularCylinder_Radius_DEFINITION"
msgstr "El radio del cilindro."

#:IFC.xml:10885
msgid "IfcSectionedSolid"
msgstr "IfcSólido seccionado"

msgid "IfcSectionedSolid_DEFINITION"
msgstr "An [[IfcSectionedSolid]] is an abstract base type for solids constructed by sweeping potentially variable cross sections along a directrix."

#:IFC.xml:10888
msgid "IfcSectionedSolid_Directrix"
msgstr "Directriz"

msgid "IfcSectionedSolid_Directrix_DEFINITION"
msgstr "The curve used to define the sweeping operation."

#:IFC.xml:10900
msgid "IfcSectionedSolid_CrossSections"
msgstr "Secciones cruzadas"

msgid "IfcSectionedSolid_CrossSections_DEFINITION"
msgstr "Lista de secciones cruzadas en orden secuencial a lo largo del Directorio ."

#:IFC.xml:10912
msgid "IfcSectionedSolidHorizontal"
msgstr "IfcSolidHorizontal Seccionado"

msgid "IfcSectionedSolidHorizontal_DEFINITION"
msgstr "An [[IfcSectionedSolidHorizontal]] is a solid model constructed by sweeping potentially varying cross sections along a curve horizontally. The solid is generated by sweeping the CrossSections between CrossSectionPositions with linear interpolation of profile points, where the profile normal agrees with the tangent of the Directrix , the profile X axis is oriented perpendicularly to the left of the Directrix same direction as LateralOffset at [[IfcPointByDistanceExpression]] as facing forward along the directrix, and the profile Y axis is oriented upwards according to FixedAxisVertical . For sections having cross section rotated according to a single super elevation, [[IfcDerivedProfileDef]] may be used to indicate such rotation with each ParentProfile referring to the same underlying profile. For sections having cross section transformed according to multiple super elevations with points varying independently, each profile may be of a different instance but of same type e.g. [[IfcArbitraryClosedProfileDef]] , and may optionally have cross section points associated to string lines guide curves using [[IfcIndexedPolyCurve]] with IfcCartesianPointList2DLabelled . Figure 1 illustrates four girders of a bridge having a constant parameterized profile, two guardrails having a constant arbitrary profile one of them mirrored , and a bridge deck having a variable arbitrary profile. spatial structure .. .. .. .. figures ifcsectionedsolidhorizontal.png Figure 1 Sectioned solid horizontal Informal Propositions 1. No two consecutive sections shall intersect. 2. If the type of sections is not [[IfcParameterizedProfileDef]] i.e. an arbitrary profile , then the number of points and edges should be the same for two consecutive profiles 3. If the directrix is not tangent continuous, the resulting solid is created by a miter at half angle between the two segments. 4. Very sharp edges may result in nearly impossible miter implementer agreements may define acceptable limits for tangent discontinuity or require the directrix to be tangent continuous. 5. The directrix shall not intersect"

#:IFC.xml:10915
msgid "IfcSectionedSolidHorizontal_CrossSectionPositions"
msgstr "Grupos de posiciones"

msgid "IfcSectionedSolidHorizontal_CrossSectionPositions_DEFINITION"
msgstr "List of distance expressions in sequentially increasing order paired with CrossSections , indicating the position of the corresponding section along the Directrix ."

#:IFC.xml:10927
msgid "IfcSectionedSpine"
msgstr "IfcSectionedSpine"

msgid "IfcSectionedSpine_DEFINITION"
msgstr "An [[IfcSectionedSpine]] is a representation of the shape of a three dimensional object composed by a number of planar cross sections, and a spine curve. The shape is defined between the first element of cross sections and the last element of the cross sections. A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. All cross sections have to define areas by a closed profile to allow for the representation of a solid. All cross sections have to define curves by an open or closed profile to allow for the representation of a surface. The cross sections are defined by subtypes of [[IfcProfileDef]] , where the consecutive profiles may be derived by a transformation of the start profile or the previous consecutive profile. The spine curve shall be of type [[IfcCompositeCurve]] , each of its segments represented by [[IfcCompositeCurveSegment]] shall correspond to the part between exactly two consecutive cross sections. Figure 1 illustrates an example of an [[IfcSectionedSpine]] . The SpineCurve is given by an [[IfcCompositeCurve]] with two Segments . The Segments 1 has a ParentCurve of type [[IfcPolyline]] and a Transition CONTSAMEGRADIENT. The Segments 2 has a ParentCurve of type [[IfcTrimmedCurve]] and a Transition DISCONTINUOUS. Each CrossSectionPosition lies at a start or end point of the Segments . Each CrossSections are inserted by the CrossSectionPositions . The first two cross sections are of type [[IfcRectangleProfileDef]] , the third is of type [[IfcDerivedProfileDef]] . spine 1 .. .. .. .. figures ifcsectionedspine layout1.gif Figure 1 Sectioned spine geometry Figure 2 illustrates the final result of the [[IfcSectionedSpine]] . The body shown transparently is not fully defined by the exchange definition. render .. .. .. .. figures ifcsectionedspine.jpg Figure 2 Sectioned spine result .extDef NOTE Definition according to ISO CD 10303 42 1992 A sectioned spine is a representation of the shape of a three dimensional object composed of a spine curve and a number of planar cross sections. The shape is defined between the first element of cross sections and the last element of this set. NOTE A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. For the representation of a solid all cross sections are closed curves. NOTE Entity adapted from sectioned spine defined in ISO 10303 42. HISTORY New entity in IFC2x. .spec head Informal Propositions 1. none of the cross sections, after being placed by the cross section positions, shall intersect 2. none of the cross sections, after being placed by the cross section positions, shall lie in the same plane 3. the local origin of each cross section position shall lie at the beginning or end of a composite curve segment."

#:IFC.xml:10935
msgid "IfcSectionedSpine_SpineCurve"
msgstr "Curva espinosa"

msgid "IfcSectionedSpine_SpineCurve_DEFINITION"
msgstr "A single composite curve, that defines the spine curve. Each of the composite curve segments correspond to the part between two cross sections."

#:IFC.xml:10947
msgid "IfcSectionedSpine_CrossSections"
msgstr "Secciones cruzadas"

msgid "IfcSectionedSpine_CrossSections_DEFINITION"
msgstr "Una lista de al menos dos secciones cruzadas, cada una definida dentro del plano xy del sistema de coordenadas de posición de la sección cruzada. El sistema de coordenadas de posición es dado por la lista correspondiente CrossSectionPositions."

#:IFC.xml:10959
msgid "IfcSectionedSpine_CrossSectionPositions"
msgstr "Grupos de posiciones"

msgid "IfcSectionedSpine_CrossSectionPositions_DEFINITION"
msgstr "Posición de los sistemas de coordenadas para las secciones cruzadas que forman el lomo seccionado. Los perfiles que definen las secciones cruzadas se posicionan dentro del plano xy del sistema de coordenadas de posición correspondiente."

#:IFC.xml:10928
msgid "IfcSectionedSpine_Dim"
msgstr "Dim"

msgid "IfcSectionedSpine_Dim_DEFINITION"
msgstr "La dimensión de la curva de la columna es siempre 3."

#:IFC.xml:10971
msgid "IfcSectionedSurface"
msgstr "Superficie seccionada Ifc"

msgid "IfcSectionedSurface_DEFINITION"
msgstr "Una especie de superficie construida al barrer secciones de cruz abierta potencialmente variando a lo largo de una curva horizontal o cerca de horizontalmente . La superficie se genera al barrir las secciones CrossSections entre interpolación lineal de CrossSectionPositions es asumida, a menos que las curvas de transición entre puntos de sección cruzada sean indicadas por OpenCrossProfileDef. ags. Los CrossSections están orientados con el eje Y de cada perfil que mira hacia arriba en dirección Z o verticalmente perpendicular a la Directriz, dependiendo del atributo FixedAxistical valor. sectioned surfacequot .. .. .. figuras [[IfcSectionedSurface]] 1. ng Figura 1 Superficie seccionada usando [[IfcOpenCrossProfileDef]] En caso de ramificación de rupturas longitudinales, la SectionedSurface puede usar instancias OpenCrossProfileDef con un número variable de puntos de sección cruzada. En ese caso, el punto en dos secciones cruzadas consecutivas que están conectadas se identifica con el mismo valor de etiqueta. sectioned surfacequot .. .. .. figuras [[IfcSectionedSurface]] 2. ng Figura 1 Superficie seccionada con ramificaciones de líneas longitudinales Proposiciones Formales La entidad curva que es la dirección subyacente tendrá la dimensión de 3. El tipo de perfil será CURVO dentro de la lista de perfiles que definen las secciones cruzadas. El tipo de entidad para cada sección debe ser el mismo. La lista de secciones cruzadas y la lista de posiciones de sección cruzada serán del mismo tamaño. Propuestas Informales Nº dos secciones consecutivas se entrecruzarán. Si la directriz no es tangente continua, la superficie resultante es creada por un miter con un ángulo medio entre los dos segmentos. Los bordes muy nítidos pueden resultar en acuerdos casi imposibles de implementadores miter pueden definir límites aceptables para la discontinuidad tangente o requerir que la dirección sea continua tangente. La directriz no se intersecará"

#:IFC.xml:10974
msgid "IfcSectionedSurface_Directrix"
msgstr "Directriz"

msgid "IfcSectionedSurface_Directrix_DEFINITION"
msgstr "La curva utilizada para definir la operación de barrido"

#:IFC.xml:10986
msgid "IfcSectionedSurface_CrossSections"
msgstr "Secciones cruzadas"

msgid "IfcSectionedSurface_CrossSections_DEFINITION"
msgstr "Lista de secciones cruzadas en orden secuencial a lo largo de la Directriz"

#:IFC.xml:10998
msgid "IfcSectionedSurface_CrossSectionPositions"
msgstr "Grupos de posiciones"

msgid "IfcSectionedSurface_CrossSectionPositions_DEFINITION"
msgstr "Lista de expresiones a distancia en orden secuencialmente creciente emparejadas con Secciones Crosas, indicando la posición de la sección correspondiente a lo largo de la Directriz."

#:IFC.xml:11010
msgid "IfcShellBasedSurfaceModel"
msgstr "Modelo de superficie IfcBasedBased"

msgid "IfcShellBasedSurfaceModel_DEFINITION"
msgstr "Un [[IfcShellBasedSurfaceModel]] representa la forma por un conjunto de conchas abiertas o cerradas. Las caras conectadas dentro del intérprete tienen una dimensión 2 y están situadas en un espacio de coordenada de dimensión 3. Definición de xtDef NOTE según ISO CD 10303 42 1992 Un modelo de superficie basado en el shell es descrito por un conjunto de shells abiertos o cerrados de dimensionalidad 2. Los proyectiles no se intersecarán excepto en los bordes y vértices. Una cara completa de un proyectil puede ser compartida con otro. Las partes coincidentes de los proyectiles se referirán a las mismas caras, bordes y vértices que definan la región correspondiente. Un shell puede existir independientemente de un modelo de superficie. NOTA Entidad adaptada del modelo de superficie basado en el shell definido en ISO 10303 42. HISTORY Nueva entidad en IFC2x. .spec head Informal Propositions 1. La dimensión del modelo de superficie basado en el shell es 2. 2. Los proyectiles no se superpondrán ni se intersecarán excepto en caras comunes, bordes o vértices."

#:IFC.xml:11011
msgid "IfcShellBasedSurfaceModel_Dim"
msgstr "Dim"

msgid "IfcShellBasedSurfaceModel_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:11016
msgid "IfcShellBasedSurfaceModel_SbsmBoundary"
msgstr "Límite Sbsms"

msgid "IfcShellBasedSurfaceModel_SbsmBoundary_DEFINITION"
msgstr "Límite Sbsms"

#:IFC.xml:11023
msgid "IfcSolidModel"
msgstr "IfcSolidModel"

msgid "IfcSolidModel_DEFINITION"
msgstr "Un [[IfcSolidModel]] representa la forma 3D mediante diferentes tipos de representaciones de modelos sólidos. Es el supertipo abstracto común de representación de límites, representación CSG, representación de barridos y otros esquemas de representación sólida apropiados. xtDef NOTE Definición según ISO CD 10303 42 1992 Un modelo sólido es una representación completa de la forma nominal de un producto tal que todos los puntos en el interior están conectados. Cualquier punto se puede clasificar como interior, exterior o en el límite de un sólido, hay varios tipos diferentes de representaciones de modelos sólidos. NOTA Entidad adaptada del modelo sólido definido en ISO 10303 42. HISTORY Nueva entidad en IFC1.5"

#:IFC.xml:11024
msgid "IfcSolidModel_Dim"
msgstr "Dim"

msgid "IfcSolidModel_Dim_DEFINITION"
msgstr "The space dimensionality of this class, it is always 3."

#:IFC.xml:11033
msgid "IfcSphere"
msgstr "IfcSphere"

msgid "IfcSphere_DEFINITION"
msgstr "El [[IfcSphere]] es un primitivo CSG 3D de Geometría Solida de Construcción. Es un sólido donde todos los puntos de la superficie tienen la misma distancia desde el punto central. El atributo de Posición heredada define el IfcAxisPlacement3D y proporciona SELF [[IfcCsgPrimitive3D]]. osición La ubicación y orientación del sistema de ejes para el primitivo. SELF [[IfcCsgPrimitive3D]].Position.Location El centro de la esfera. SELF [[IfcCsgPrimitive3D]].Position. osición 3 El eje z apunta a su dirección positva hacia el polo norte, y por sus direcciones negativas hacia el polo sur. EXAMPLE Figura 1 ilustra los parámetros geométricos de la esfera. El origen es el centro de la esfera. xtDef NOTE Definición según ISO CD 10303 42 1992 Una esfera es un CSG primitivo con una forma esférica definida por un centro y un radio. NOTA Entidad adaptada de la esfera definida en ISO 10303 42, entidad nueva en IFC2x3. Las Texturas de uso de la textura de la cabeza están alineadas hacia arriba con el origen en la dirección de la parte trasera Y en sentido opuesto. Las texturas se estiran o se repiten en la medida de la circunstancia en el ecuador de acuerdo con RepeatS y RepeatT. La figura 2 ilustra el mapeo predeterminado de texturas con una repetición de textura y repetición False de textura con pinceladas . La imagen a la izquierda muestra la textura donde el eje S apunta a la derecha y el eje T apunta hacia arriba. La imagen a la derecha muestra la textura aplicada a la geometría donde el eje X vuelve a la derecha, el eje Y apunta de vuelta a la izquierda, y el eje Z apunta hacia arriba. .gridtable Origin X Origin Y Origin X Origin Z S Eje T Eje lateral Y 0 Radio 0 X, luego curvando en sentido horario Z, luego curvando hacia la Figura 2 texturas de la esfera superior"

#:IFC.xml:11034
msgid "IfcSphere_Radius"
msgstr "Radius"

msgid "IfcSphere_Radius_DEFINITION"
msgstr "El radio de la esfera."

#:IFC.xml:11041
msgid "IfcSurfaceCurveSweptAreaSolid"
msgstr "IfcSurfaceCurveSweptAreaSolid"

msgid "IfcSurfaceCurveSweptAreaSolid_DEFINITION"
msgstr "The [[IfcSurfaceCurveSweptAreaSolid]] is the result of sweeping an area along a directrix that lies on a reference surface. The swept area is provided by a subtype of [[IfcProfileDef]] . The profile is placed by an implicit cartesian transformation operator at the start point of the sweep, where the profile normal agrees to the tangent of the directrix at this point, and the profile s x axis agrees to the surface normal. At any point along the directrix, the swept profile origin lies on the directrix, the profile s normal points towards the tangent of the directrix, and the profile s x axis is identical to the surface normal at this point. NOTE The profile area s normal has to be identical to the tangent of the directrix at any given point. In case of a directrix having a linear segment at the start point, the segment has to be perpendicular to the profile at start. The Directrix and the ReferenceSurface are positioned within the object coordinate system. The start of the sweeping operation is at the StartParam , the parameter value is provided based on the curve parameterization. If no StartParam is provided the start defaults to the begin of the directrix. The end of the sweeping operation is at the EndParam , the parameter value is provided based on the curve parameterization. If no EndParam is provided the end defaults to the end of the directrix. The geometric shape of the solid is not dependent upon the curve parameterization the volume depends upon the area swept and the length of the Directrix . NOTE The StartParam and the EndParam are not normalized by default, they depend upon the parameterization of the curve. However using the [[IfcReparametrisedCompositeCurveSegment]] within an [[IfcCompositeCurve]] as the directrix allows to explicitly reparameterize the underlying sweeping curve. In case of a closed curve, such as [[IfcCircle]] or [[IfcEllipse]] , as the directrix, StartParam and the EndParam shall not exceed the parametic range, they shall not be 360 . EXAMPLE The reference surface is any surface plane, cylindric, composite situated in 3D space and positioned in the object coordinate system. In most cases, it is a plane or a surface of extrusion. The directrix lies on the surface, in case of a plane it might be defined as a polyline or composite curve, in case of a cylindrical or other non planer reference surface it might often be defined as a p curve on this reference surface. At any point of the directrix, a plane can be constructed. The origin of the position coordinate system of the implicit plane lies at the directrix. The Axis3 the z axis, or normal of the position coordinate system is identical to the tangent of the directrix at this point, the Axis1 the x axis, or u of the position coordinate system is identical to the normal of the reference surface at this point. The Axis2 the y axis, or v is constructed. The resulting body of the swept solid is not repositioned if the inherited Position attribute is omitted. Otherwise the coordinate system established by the Position attribute is used to reposition the body relative to the object coordinate system. EXAMPLE Figure 1 illustrates an example using a cylindrical reference surface and a p curve for sweeping a rectangle. The Postion is not provided and therefore it does not reposition the resulting swept solid. Figure 2 shows the expected result.NOTE The start of the directrix lies at the origin of the object coordinate system, as shown in the illustration,only by coincidence. The start of the directrix and thereby the start of the sweeping operation might be at any point within the object coordinate system and only depends on the position of the directrix.Figure 1 Surface curve wept area solid parameter Figure 2 Surface curve wept area solid results .extDef NOTE Definition according to ISO CD 10303 42 1992 A surface curve swept area solid is a type of swept area solid which is the result of sweeping a face along a Directrix lying on a ReferenceSurface . The orientation of the SweptArea is related to the direction of the surface normal. The SweptArea is required to be a curve bounded surface lying in the plane z 0 and this is swept along the Directrix in such a way that the origin of the local coordinate system used to define the SweptArea is on the Directrix and the local x axis is in the direction of the normal to the ReferenceSurface at the current point. The resulting solid has the property that the cross section of the surface by the normal plane to the Directrix at any point is a copy of the SweptArea . The orientation of the SweptArea as it sweeps along the Directrix is precisely defined by a Cartesian Transformation Operator 3D with attributes Local origin as point 0., 0., 0 , Axis 1 as the normal N to the reference surface at the point of the directrix with parameter u. Axis 3 as the direction of the tangent vector t at the point of the directrix with parameter u. The remaining attributes are defaulted to define a corresponding transformation matrix T u , which varies with the directrix parameter u. NOTE Entity adapted from surface curve swept area solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .spec head Informal Propositions 1. The SweptArea shall lie in the implicit plane z 0. 2. The Directrix shall lie on the ReferenceSurface ."

#:IFC.xml:11044
msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface"
msgstr "Referenciar superficie"

msgid "IfcSurfaceCurveSweptAreaSolid_ReferenceSurface_DEFINITION"
msgstr "Referenciar superficie"

#:IFC.xml:11056
msgid "IfcSweptAreaSolid"
msgstr "IfcSweptAreaSolid"

msgid "IfcSweptAreaSolid_DEFINITION"
msgstr "Un [[IfcSweptAreaSolid]] representa la forma 3D mediante un esquema de representación barrida que permite que una sección de cruz planar dimensional barre a través del espacio. El área barrida se define por una sección cruzada, representada por un subtipo si [[IfcProfileDef]] , que se proporciona como un límite de dos dimensiones cerrado en un plano implícito. El área barrida se define en el plano xy del sistema de coordenadas de objetos. La operación de barrido se aplica al área de barrido según se define dentro de los subtipos de [[IfcSweptAreaSolid]] , algunos subtipos requieren una transformación implícita del área barrida a la posición inicial del barrido. El sistema opcional de coordenadas Positio n permite reposicionar el sólido barrido resultante en relación al sistema de coordenadas del objeto. .extDef NOTE Definición según ISO CD 10303 42 1992 La entidad sólida del área barrida recoge las entidades que están definidas de forma conjunta mediante la acción de barrido en superficies planas. La posición es el espacio del sólido barrido dependerá de la posición del área barrida. El área barrida será una cara del área barrida resultante sólida, excepto para el caso de una zona cubierta sólida con ángulo igual a 2 o 360 grados. NOTA Entidad adaptada de área barrida sólida definida en ISO 10303 42. HISTORY Nueva entidad en IFC1.5 .change ifc2x4 IFC4 CHANGE La posición de atributo se ha cambiado a OPCIONAL con compatibilidad ascendente para el intercambio basado en archivos."

#:IFC.xml:11059
msgid "IfcSweptAreaSolid_SweptArea"
msgstr "SweptArea"

msgid "IfcSweptAreaSolid_SweptArea_DEFINITION"
msgstr "La superficie que define el área a ser barrida. Se da como una definición de perfil dentro del plano xy del sistema de coordenadas de posición."

#:IFC.xml:11071
msgid "IfcSweptAreaSolid_Position"
msgstr "Posición"

msgid "IfcSweptAreaSolid_Position_DEFINITION"
msgstr "Sistema de coordenadas de posición para el solido barrido resultante de la operación de barrido. El sistema de coordenadas de posición permite reposicionar el solido barrido. Si no se proporciona, el sólido barrido permanece dentro de la posición determinada por la sección transversal o por la dirección utilizada para la operación de barrido. .change ifc2x4 IFC4 CHANGE El atributo se ha cambiado a OPCIONAL con compatibilidad ascendente para el intercambio basado en archivos."

#:IFC.xml:11083
msgid "IfcSweptDiskSolid"
msgstr "IfcSweptDiskSolid"

msgid "IfcSweptDiskSolid_DEFINITION"
msgstr "An [[IfcSweptDiskSolid]] represents the 3D shape by a sweeping representation scheme allowing a two dimensional circularly bounded plane to sweep along a three dimensional Directrix through space. The StartParam and EndParam parameter are optional, if not provided they default to the start and end of the Directrix . Only if the Directrix is given by a bounded or by a closed curve, it is permissible to omit the values of StartParam and EndParam . If the transitions between consecutive segments of the Directrix are not tangent continuous, the resulting solid is created by a miter at half angle between the two segments. Informal proposition restricts the permissible angle between two non tangent continuous segments. Figure 1 illustrates an example. Directrix given as [[IfcIndexedPolyCurve]] , having linear and circular arc segments, that are tangent continuous between each segments Directrix being a bounded and open curve No StartParam and EndParam are provided, start and end default to start and end of the bounded curve of the Directrix NOTE Although the example shows a Directrix as a poly curve on a planar reference surface, the definition of [[IfcSweptDiskSolid]] is not restricted to be based on planer curves. However view definitions or implementer agreements may provide restrictions. NOTE The geometric item [[IfcIndexedPolyCurve]] provides a more compact representation compared with [[IfcCompositeCurve]] as is therefore the prefered curve representation for the Directrix . disk solid .. .. .. .. figures ifcsweptdisksolid layout1.png Figure 1 Swept disk solid geometry .extDef NOTE Definition according to ISO CD 10303 42 1992 A swept disk solid is the solid produced by sweeping a circular disk along a three dimensional curve. During the sweeping operation the normal to the plane of the circular disk is in the direction of the tangent to the directrix curve and the center of the disk lies on the directrix. The circular disk may, optionally, have a central hole, in this case the resulting solid has a through hole, or, an internal void when the directrix forms a close curve. NOTE Entity adapted from swept disk solid defined in ISO 10303 42. HISTORY New entity in IFC2x2. .change ifc2x4 IFC4 CHANGE The attribute StartParam and EndParam have been made optional. .spec head Informal Propositions 1. If the Directrix curve definition is not tangent continuous, the transition between the segments has to be within an acceptable limit of tangent discontinuity. Very sharp edges may result in nearly impossible miter. Implementer agreements may define acceptable limits for tangent discontinuity. 2. The segments of the Directrix shall be long enough to apply the Radius . In case of an arc segment forming part of the Directrix , its radius shall be greater then the disk Radius 3. The Directrix shall not be based on an intersecting curve."

#:IFC.xml:11106
msgid "IfcSweptDiskSolid_Directrix"
msgstr "Directriz"

msgid "IfcSweptDiskSolid_Directrix_DEFINITION"
msgstr "La curva utilizada para definir la operación de barrido, el sólido se genera barriendo un disco circular a lo largo del Directrix ."

#:IFC.xml:11084
msgid "IfcSweptDiskSolid_EndParam"
msgstr "Parámetro final"

msgid "IfcSweptDiskSolid_EndParam_DEFINITION"
msgstr "Valor del parámetro en la Directriz, en la que termina la operación de barrido. Si no se proporciona ningún valor el final de la operación de barrido está al final de la Directriz . .change ifc2x4 IFC4 CHANGE El atributo se ha cambiado a OPCIONAL con compatibilidad ascendente para el intercambio basado en archivos."

#:IFC.xml:11089
msgid "IfcSweptDiskSolid_InnerRadius"
msgstr "InnerRadius"

msgid "IfcSweptDiskSolid_InnerRadius_DEFINITION"
msgstr "Este atributo es opcional, si está presente define el radio de un agujero circular en el centro del disco."

#:IFC.xml:11094
msgid "IfcSweptDiskSolid_Radius"
msgstr "Radius"

msgid "IfcSweptDiskSolid_Radius_DEFINITION"
msgstr "El Radius del disco circular, que será barrido a lo largo de la directriz , denota el radio exterior, si se aplica un InnerRadius."

#:IFC.xml:11099
msgid "IfcSweptDiskSolid_StartParam"
msgstr "StartParam"

msgid "IfcSweptDiskSolid_StartParam_DEFINITION"
msgstr "El valor del parámetro en la Directriz, en la que comienza la operación de barrido. Si no se proporciona ningún valor, el inicio de la operación de barrido se encuentra al principio de la Directriz . .change ifc2x4 IFC4 CHANGE El atributo se ha cambiado a OPCIONAL con compatibilidad ascendente para el intercambio basado en archivos."

#:IFC.xml:11118
msgid "IfcSweptDiskSolidPolygonal"
msgstr "IfcSweptDiskSolidPolygonal"

msgid "IfcSweptDiskSolidPolygonal_DEFINITION"
msgstr "El [[IfcSweptDiskSolidPolygonal]] es un [[IfcSweptDiskSolid]] donde el Directorio está restringido a ser proporcionado únicamente por una línea poly. Un atributo opcional FilletRadius puede ser verificado, luego se aplica como un filete a todas las transiciones entre los segmentos de la línea poly. NOTA El elemento geométrico [[IfcIndexedPolyCurve]] proporciona una representación más compacta en comparación con [[IfcPolyline]] . Por lo tanto es la curva de representación preferida para el Directrix . El [[IfcIndexedPolyCurve]] no tendrá segmentos definidos, resticándolos únicamente a una línea políglota. Nueva entidad HISTORY en IFC4. .spec head informal Propositions 1. El FilletRadius , si se proporciona, tiene que ser menor entonces o igual a la longitud del segmento de inicio y final del [[IfcPolyline]] , y más pequeño entonces o igual a una mitad de la longitud del segmento interior más corto."

#:IFC.xml:11119
msgid "IfcSweptDiskSolidPolygonal_FilletRadius"
msgstr "Radio de relleno"

msgid "IfcSweptDiskSolidPolygonal_FilletRadius_DEFINITION"
msgstr "El archivo que se aplica equitativamente a todas las transiciones entre los segmentos del [[IfcPolyline]] , proporcionando la representación geométrica de la Directriz. Si se omite, no se aplica ningún filete a los segmentos."

#:IFC.xml:11126
msgid "IfcTaperedSweptAreaProfiles__StartArea"
msgstr "IfcTaperedSweptAreaProfiles StartArea"

#:IFC.xml:11134
msgid "IfcTessellatedFaceSet"
msgstr "IfcTessellatedFaceSet"

msgid "IfcTessellatedFaceSet_DEFINITION"
msgstr "El [[IfcTessellatedFaceSet]] es un modelo topológico de representación límite limitado a caras planas y bordes rectos. Puede representar una aproximación de una superficie analítica o sólida que se puede proporcionar además de su teselación como forma de representación separada. El [[IfcTessellatedFaceSet]] proporciona una representación compacta de datos de un conjunto de caras conectado usando índices en listas ordenadas de vértices, normales, colores y mapas de texturas. NOTA La representación compacta ha sido elegida para permitir conjuntos de datos pequeños a pesar de conjuntos de caras potencialmente grandes, bordes y vértices necesarios para representar tessellaciones de superficies analíticas y sólidas, y a pesar de los grandes conjuntos de colores y texturas, información para anotar las caras tesselladas. El [[IfcTessellatedFaceSet]] es un supertipo abstracto de la cara tesselada establece cada una de las restricciones específicas sobre la generación de caras para la tessellación, tales como triangulación con o sin tiras y ventiladores , o cuadriláteros, o caras poligonales con o sin bucles internos . NOTA No todas las restricciones diferentes en conjuntos de caras se incluyen como subtipos específicos en esta versión de la especificación. Los siguientes atributos se aplican a todos los subtipos Las Coordenadas son la lista ordenada de puntos cartesianos que representan los vértices del objeto teselado. Una lista de índices, definida a nivel de subtipos, utiliza los puntos, identificados por posición de índice, para construir los polígonos que representan las caras. La relación inversa HasColours proporciona un mapa de color indexado con una lista correspondiente de índices, proporcionando un color para cada cara del conjunto de la cara tesselled. La relación inversa de HasTextures proporciona un mapa de textura indexado con una lista correspondiente de índices, proporcionando coordenadas de textura que se asignan a las coordenadas geométricas de las polilíneas que representan las caras. Cada cara de la cara teselada tendrá al menos tres vértices no coincidentes que definen un polígono plano que defina un polígono no autointersecante. NOTA La definición de [[IfcTessellatedFaceSet]] se basa en el indexedFaceSet definido en ISO IEC 19775 1 HISTORY Nueva entidad en IFC4."

#:IFC.xml:10506
msgid "IfcTessellatedFaceSet_Coordinates"
msgstr "Coordenadas"

msgid "IfcTessellatedFaceSet_Coordinates_DEFINITION"
msgstr "Una lista ordenada de puntos cartesianos utilizados por el índice de coordenadas definidas en los subtipos de [[IfcTessellatedFaceSet]] ."

#:IFC.xml:11148
msgid "IfcTessellatedFaceSet_HasColours"
msgstr "Colores"

msgid "IfcTessellatedFaceSet_HasColours_DEFINITION"
msgstr "La referencia al mapa de color indexado proporciona los valores RGB correspondientes a las caras de los subtipos de [[IfcTessellatedFaceSet]]."

#:IFC.xml:11162
msgid "IfcTessellatedFaceSet_HasTextures"
msgstr "Texturas Hass"

msgid "IfcTessellatedFaceSet_HasTextures_DEFINITION"
msgstr "Referencia al mapa de textura indexado, proporcionando las coordenadas de textura correspondientes a los vértices que delimitan las caras de los subtipos de [[IfcTessellatedFaceSet]] ."

#:IFC.xml:11135
msgid "IfcTessellatedFaceSet_Dim"
msgstr "Dim"

msgid "IfcTessellatedFaceSet_Dim_DEFINITION"
msgstr "The space dimensionality of this geometric representation item, it is always 3."

#:IFC.xml:11140
msgid "IfcTessellatedFaceSet_Closed"
msgstr "Cerrado"

msgid "IfcTessellatedFaceSet_Closed_DEFINITION"
msgstr "Cerrado"

#:IFC.xml:11176
msgid "IfcTessellatedItem"
msgstr "IfcTessellatedItem"

msgid "IfcTessellatedItem_DEFINITION"
msgstr "El [[IfcTessellatedItem]] es el supertipo abstracto de todos los modelos geométricos tessellados. Nueva entidad HISTORIA en IFC4."

#:IFC.xml:11179
msgid "IfcTextureCoordinateIndices"
msgstr "IfcTextureCoordinateIndices"

#:IFC.xml:10705
msgid "IfcTextureCoordinateIndices_TexCoordsOf"
msgstr "TexCoordsOf"

msgid "IfcTextureCoordinateIndices_TexCoordsOf_DEFINITION"
msgstr "TexCoordsOf"

#:IFC.xml:10730
msgid "IfcTextureCoordinateIndices_ToTexMap"
msgstr "Ir a TexMap"

msgid "IfcTextureCoordinateIndices_ToTexMap_DEFINITION"
msgstr "Ir a TexMap"

#:IFC.xml:11180
msgid "IfcTextureCoordinateIndices_TexCoordIndex"
msgstr "TexCoordIndex"

msgid "IfcTextureCoordinateIndices_TexCoordIndex_DEFINITION"
msgstr "TexCoordIndex"

#:IFC.xml:11186
msgid "IfcTextureCoordinateIndicesWithVoids"
msgstr "IfcTextureCoordinateIndicesWithVoids"

#:IFC.xml:11187
msgid "IfcTextureCoordinateIndicesWithVoids_InnerTexCoordIndices"
msgstr "InnerTexCoordIndices"

msgid "IfcTextureCoordinateIndicesWithVoids_InnerTexCoordIndices_DEFINITION"
msgstr "InnerTexCoordIndices"

#:IFC.xml:11194
msgid "IfcTriangulatedFaceSet"
msgstr "IfcTriangulado conjunto de facetas"

msgid "IfcTriangulatedFaceSet_DEFINITION"
msgstr "The [[IfcTriangulatedFaceSet]] is a tessellated face set with all faces being bound by triangles. The faces are constructed by implicit polylines defined by three Cartesian points. Depending on the value of the attribute Closed the instance of [[IfcTriangulatedFaceSet]] represents if TRUE, a boundary represention or B rep if FALSE, a face based surface representation. The coordinates of each point are provided by a one based index into an ordered list of Cartesian points provided by the two dimensional list CoordIndex , where the first dimension of the two dimensional list addresses the list of triangular faces the second dimension of the two dimensional list provides exactly three indices. Each index points to a Cartesian point being a vertex of the triangle. Depending on the provision of PnIndex the indices point either directly into the [[IfcCartesianPointList3D]] referenced by Coordinates defined at the supertype [[IfcTessellatedFaceSet]] , or they point into the PnIndex where the integer values at that position provides the location of the coordinate values within the [[IfcCartesianPointList3D]] . See Figure 1 for the handling of point index. PnIndex .. .. .. .. figures ifctriangulatedfaceset 03.png Figure 1 Use of PnIndex See Figure 2 for using the [[IfcTriangulatedFaceSet]] without as default and with using the PnIndex . [[IfcTriangulatedFaceSet]] 01 .. .. .. .. figures ifctriangulatedfaceset 01.png Figure 2 Triangulated face set Optionally normals can be provided. Only normals per vector are supported allowing for visually curved triangles when the three normals of the corresponding three vertices of a triangle are not co linear to the normal of the triangular face. If they are identical, normals shall be omited. NOTE In case of a body representation having triangular faces with curvature, different normals for all three vertices in context of this triangles are exported, describing the curvature for smooth visualisation. In case of triangular faces with no curvature, the three vertex based normals are identical and could always be computed from the face. Therefore vertices should only be exported to support smooth visualisation by curvature of triangles. In case of faceted representation no vertices should be exported. Normals are provided by the two dimensional list Normals , where the first dimension of the two dimensional list addresses the corresponding list of vertex indices of the triangular faces the second dimension of the two dimensional list provides exactly three real values to determine the direction of the normal at this vertex of the triangle. The indices in the CoordIndex point into the list of Normals . The indices of CoordIndex are applied to both points, either directly directly, or via the PnIndex and normals. See Figure 3 for handling of normals. [[IfcTriangulatedFaceSet]] 02 .. .. .. .. figures ifctriangulatedfaceset 02.png Figure 3 Triangulated face set with normals NOTE Using corresponding lists of points and normals allows to use only a single list of indices into both at the expense of having non unique collections of vertices. Figure 4 shows the use of [[IfcTriangulatedFaceSet]] without annotation. The diagram of the [[IfcTriangulatedFaceSet]] represents the indices and the ordered list into which the indices point. The index starts with 1 indexed as 1 to N , if the greatest index in CoordIndex in N, then the [[IfcCartesianPointList]] shall have N lists of 3 3 coordinates. Figure 168 shows an [[IfcTriangulatedFaceSet]] represented by CoordIndex 1,6,5 , 1,2,6 , 6,2,7 , 7,2,3 , 7,8,6 , 6,8,5 , 5,8,1 , 1,8,4 , 4,2,1 , 2,4,3 , 4,8,7 , 7,3,4 [[IfcCartesianPointList3D]] 0.,0.,0. , 1.,0.,0. , 1.,1.,0. , 0.,1.,0. , 0.,0.,2. , 1.,0.,2. , 1.,1.,2. , 0.,1.,2. Figure 4 Triangulated face set geometry NOTE The definition of [[IfcTriangulatedFaceSet]] is based on the indexedFaceSet and indexedTriangleSet defined in ISO IEC 19775 1. The use of PnIndex has been adopted from triangulated surface set defined in ISO 10303 42. HISTORY New entity in IFC4. .spec head Informal Propositions 1. If Closed TRUE, the same topological constraints as imposed by an faceted boundary representation shall be safisfied. In particular each face shall be unique each edge shall be used by exactly two boundaries of faces the topological normal at each point on the boundary of the triangulated face set shall point away from the mater ial of the solid."

#:IFC.xml:11195
msgid "IfcTriangulatedFaceSet_NumberOfTriangles"
msgstr "Número de triángulos"

msgid "IfcTriangulatedFaceSet_NumberOfTriangles_DEFINITION"
msgstr "Número derivado de triángulos usados para esta triangulación."

#:IFC.xml:11200
msgid "IfcTriangulatedFaceSet_CoordIndex"
msgstr "CoordIndex"

msgid "IfcTriangulatedFaceSet_CoordIndex_DEFINITION"
msgstr "Lista de dos dimensiones para los triángulos basados en índices, donde la primera dimensión representa los triángulos de 1 a N La segunda dimensión tiene exactamente tres valores que representan los índices a tres puntos de vértice de 1 a 3 . NOTA Las coordenadas de los vértices son proporcionadas por la lista indexada de SELF [[IfcTessellatedFaceSet]].Coordinates.CoordList ."

#:IFC.xml:11205
msgid "IfcTriangulatedFaceSet_Normals"
msgstr "Normales"

msgid "IfcTriangulatedFaceSet_Normals_DEFINITION"
msgstr "Una lista ordenada de tres direcciones para las normales, es una lista de dos dimensiones de direcciones proporcionada por tres valores de parámetro. La primera dimensión corresponde a los índices de vértices del índice Coord. La segunda dimensión tiene exactamente tres valores, 1 dirección x, 2 dirección y 3 direcciones z"

#:IFC.xml:11210
msgid "IfcTriangulatedFaceSet_PnIndex"
msgstr "PnIndex"

msgid "IfcTriangulatedFaceSet_PnIndex_DEFINITION"
msgstr "La lista de enteros que definen las ubicaciones en el [[IfcCartesianPointList3D]] para obtener las coordenadas de puntos para los índices dentro del Índice Coord. Si no se proporciona el PnIndex, los índices apuntan directamente al [[IfcCartesianPointList3D]] ."

#:IFC.xml:11217
msgid "IfcTriangulatedIrregularNetwork"
msgstr "IfcTriangulada Red Irregular"

msgid "IfcTriangulatedIrregularNetwork_DEFINITION"
msgstr "El [[IfcTriangulatedIrregularNetwork]] es un conjunto de caras trianguladas para representar superficies horizontales una coordenada Z única para todas las coordenadas X e Y dentro del dominio con banderas adicionales para cada cara que indican rupturas entre caras o diseño como agujero o vacío. Los triángulos serán definidos con vértices en orden contrario a las agujas del reloj como vistos desde arriba siguiendo la regla de la derecha . Para la visualización, las aplicaciones no deben mostrar caras donde las banderas están configuradas como negativas, ya sea un hueco, vacío o posible extensión futura . La bandera del Vacío se utilizará para indicar que las caras deben ser excluidas sin caer en ninguna otra geometría. Tal diseño podría ser utilizado para porciones de un sitio bajo un edificio u otra estructura. El agujero de bandera se utilizará para indicar que las caras deben ser excluidas pero pueden caer en otra geometría. Tal diseño podría ser utilizado para porciones de un sitio propuesto que permanecerán sin cambios conformes a un sitio existente que también puede ser definido para escenarios donde se combinan múltiples superficies usadas como entrada, cualquier triángulo marcado Vacío será retenido como vacíos, mientras que cualquier triángulo marcado como agujero será anulado si otra superficie tiene una geometría visible definida dentro de la misma ubicación horizontal."

#:IFC.xml:11218
msgid "IfcTriangulatedIrregularNetwork_Flags"
msgstr "Banderas"

msgid "IfcTriangulatedIrregularNetwork_Flags_DEFINITION"
msgstr "Indica los atributos de cada triángulo en una forma compacta de la siguiente manera 2 vacío invisible 1 agujero invisible 0 sin saltos 1 línea de salto en el borde 1 2 de salto al borde 2 3 de salto en los bordes 1 y 2 de salto en el borde 3 5 de salto en los bordes 1 y 3 6 de salto en los bordes 2 y 3 7 de salto en los bordes 1, 2, y 3."

